#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayEngMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayEngMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:27:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
lpIndex, lpEngIndex, lpEng = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex", "lpEngIndex", "lpEng")
Gauge32, RowStatus, StorageType, DisplayString, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Gauge32", "RowStatus", "StorageType", "DisplayString", "Unsigned32")
NonReplicated, = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, iso, Gauge32, ObjectIdentity, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, ModuleIdentity, Counter32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "iso", "Gauge32", "ObjectIdentity", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Counter32", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayEngMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73))
lpEngFrs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3))
lpEngFrsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1), )
if mibBuilder.loadTexts: lpEngFrsRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsRowStatusTable.setDescription('This entry controls the addition and deletion of lpEngFrs components.')
lpEngFrsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsIndex"))
if mibBuilder.loadTexts: lpEngFrsRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsRowStatusEntry.setDescription('A single entry in the table represents a single lpEngFrs component.')
lpEngFrsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFrsRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsRowStatus.setDescription('This variable is used as the basis for SNMP naming of lpEngFrs components. These components can be added and deleted.')
lpEngFrsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
lpEngFrsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsStorageType.setDescription('This variable represents the storage type value for the lpEngFrs tables.')
lpEngFrsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFrsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsIndex.setDescription('This variable represents the index for the lpEngFrs tables.')
lpEngFrsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10), )
if mibBuilder.loadTexts: lpEngFrsOperTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOperTable.setDescription('This group contains the Frame Relay default or current engineering parameters and statistics for this LP.')
lpEngFrsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsIndex"))
if mibBuilder.loadTexts: lpEngFrsOperEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOperEntry.setDescription('An entry in the lpEngFrsOperTable.')
lpEngFrsMaxCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsMaxCalls.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsMaxCalls.setDescription("This attribute indicates the maximum number of Frame Relay (FR) calls of any type (PVC, SPVC, or SVC) which can be simultaneously 'current' on the LP. Note that 'current' doesn't necessarily mean that the call is in data transfer. It minimally means that such a call can subsequently generate accounting records. When the value of currentCalls reaches the value of maxCalls for FR on this LP, subsequent call attempts are rejected by the FR service.")
lpEngFrsHeadroomCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsHeadroomCalls.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsHeadroomCalls.setDescription("This attribute indicates a number which allows a network engineer to do some statistical multiplexing for admitting calls when certain overload conditions are reached. For setting this, refer to the Engineering Guidelines. It depends on conditions such as the expected sustained SVC call setup/clear rates and how conservative one wants to be in certain 'error' conditions where many calls are cleared simultaneously.")
lpEngFrsCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsCurrentCalls.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsCurrentCalls.setDescription("This attribute counts the total number of Frame Relay calls (initially just FrUni and FrNni) which are 'current'. Note that 'current' doesn't necessarily mean that the call is in data transfer. It minimally means that such a call can subsequently generate accounting records.")
lpEngFrsCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsCallsRefused.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsCallsRefused.setDescription('This attribute counts the total number of call connections (including calls from the link as well as calls from the subnet) that have been refused because currentCalls has reached the limits, as specified by the engineering formulas for Frs on this LP.')
lpEngFrsOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2))
lpEngFrsOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1), )
if mibBuilder.loadTexts: lpEngFrsOvRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvRowStatusTable.setDescription('This entry controls the addition and deletion of lpEngFrsOv components.')
lpEngFrsOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsOvIndex"))
if mibBuilder.loadTexts: lpEngFrsOvRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvRowStatusEntry.setDescription('A single entry in the table represents a single lpEngFrsOv component.')
lpEngFrsOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFrsOvRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvRowStatus.setDescription('This variable is used as the basis for SNMP naming of lpEngFrsOv components. These components can be added and deleted.')
lpEngFrsOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsOvComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
lpEngFrsOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFrsOvStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvStorageType.setDescription('This variable represents the storage type value for the lpEngFrsOv tables.')
lpEngFrsOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFrsOvIndex.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvIndex.setDescription('This variable represents the index for the lpEngFrsOv tables.')
lpEngFrsOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 10), )
if mibBuilder.loadTexts: lpEngFrsOvProvTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvProvTable.setDescription('This group contains the Frame Relay provisionable engineering parameters for this LP. DESCRIPTION')
lpEngFrsOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayEngMIB", "lpEngFrsOvIndex"))
if mibBuilder.loadTexts: lpEngFrsOvProvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvProvEntry.setDescription('An entry in the lpEngFrsOvProvTable.')
lpEngFrsOvMaxCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFrsOvMaxCalls.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvMaxCalls.setDescription("This attribute specifies the maximum number of Frame Relay calls of any type (PVC, SPVC, or SVC) which can be simultaneously 'current' on this LP. Note that 'current' doesn't necessarily mean that the call is in data transfer. It minimally means that such a call can subsequently generate accounting records. When the value of currentCalls reaches the value of maxCalls for FR on this LP, subsequent call attempts are rejected by the FR services.")
lpEngFrsOvHeadroomCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFrsOvHeadroomCalls.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngFrsOvHeadroomCalls.setDescription("This attribute specifies a number which allows a network engineer to do some statistical multiplexing for admitting calls when certain overload conditions are reached. For setting this, refer to the Engineering Guidelines. It depends on conditions such as the expected sustained SVC call setup/clear rates and how conservative one wants to be in certain 'error' conditions where many calls are cleared simultaneously.")
frameRelayEngGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 1))
frameRelayEngGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 1, 5))
frameRelayEngGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 1, 5, 1))
frameRelayEngGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 1, 5, 1, 2))
frameRelayEngCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 3))
frameRelayEngCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 3, 5))
frameRelayEngCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 3, 5, 1))
frameRelayEngCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 73, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayEngMIB", lpEngFrsRowStatusEntry=lpEngFrsRowStatusEntry, lpEngFrsOvIndex=lpEngFrsOvIndex, frameRelayEngGroupBE=frameRelayEngGroupBE, frameRelayEngCapabilitiesBE00=frameRelayEngCapabilitiesBE00, frameRelayEngGroup=frameRelayEngGroup, lpEngFrsComponentName=lpEngFrsComponentName, lpEngFrsMaxCalls=lpEngFrsMaxCalls, lpEngFrsOvRowStatus=lpEngFrsOvRowStatus, lpEngFrs=lpEngFrs, lpEngFrsOvProvEntry=lpEngFrsOvProvEntry, lpEngFrsOperTable=lpEngFrsOperTable, lpEngFrsCallsRefused=lpEngFrsCallsRefused, lpEngFrsHeadroomCalls=lpEngFrsHeadroomCalls, lpEngFrsOvComponentName=lpEngFrsOvComponentName, frameRelayEngMIB=frameRelayEngMIB, lpEngFrsOvHeadroomCalls=lpEngFrsOvHeadroomCalls, frameRelayEngCapabilitiesBE=frameRelayEngCapabilitiesBE, lpEngFrsOvProvTable=lpEngFrsOvProvTable, frameRelayEngGroupBE00A=frameRelayEngGroupBE00A, lpEngFrsOvStorageType=lpEngFrsOvStorageType, lpEngFrsRowStatus=lpEngFrsRowStatus, lpEngFrsOvRowStatusTable=lpEngFrsOvRowStatusTable, lpEngFrsOv=lpEngFrsOv, frameRelayEngCapabilities=frameRelayEngCapabilities, lpEngFrsStorageType=lpEngFrsStorageType, lpEngFrsRowStatusTable=lpEngFrsRowStatusTable, lpEngFrsOperEntry=lpEngFrsOperEntry, lpEngFrsOvRowStatusEntry=lpEngFrsOvRowStatusEntry, lpEngFrsIndex=lpEngFrsIndex, lpEngFrsOvMaxCalls=lpEngFrsOvMaxCalls, lpEngFrsCurrentCalls=lpEngFrsCurrentCalls, frameRelayEngCapabilitiesBE00A=frameRelayEngCapabilitiesBE00A, frameRelayEngGroupBE00=frameRelayEngGroupBE00)
