#
# PySNMP MIB module HPN-ICF-FR-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FR-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:39:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
hpnicfQoS, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfQoS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, IpAddress, ObjectIdentity, Integer32, Counter32, NotificationType, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, ModuleIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "ObjectIdentity", "Integer32", "Counter32", "NotificationType", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "ModuleIdentity", "Bits", "Gauge32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hpnicfFrQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3))
if mibBuilder.loadTexts: hpnicfFrQoSMib.setLastUpdated('200407120000Z')
if mibBuilder.loadTexts: hpnicfFrQoSMib.setOrganization('')
if mibBuilder.loadTexts: hpnicfFrQoSMib.setContactInfo('')
if mibBuilder.loadTexts: hpnicfFrQoSMib.setDescription('This MIB contains objects to Manage configuration and Monitor running state for Class Based FR QoS feature. ********************************* MIB Tables ********************************** This MIB consists of the following tables: 1 : hpnicfFrClassCfgInfoTable 2 : hpnicfCirCfgInfoTable 3 : hpnicfIfApplyFrClassTable 4 : hpnicfPvcApplyFrClassTable 5 : hpnicfFrPvcBandwidthTable 5 : hpnicfRTPFrClassApplyTable 6 : hpnicfRTPFrPvcQueueRunInfoTable ')
class HpnicfCirAllowDirection(TextualConvention, Integer32):
    description = 'The Packet Direction apply on.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2), ("inboundAndOutbound", 3))

hpnicfFrQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1))
hpnicfFrClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1))
hpnicfFrClassIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrClassIndexNext.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassIndexNext.setDescription('This object contains an appropriate value to be used for hpnicfFrClassIndex when creating rows in the hpnicfFrClassCfgInfoTable. Begin with 0. ')
hpnicfFrClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoTable.setDescription('A table of Fr Class configuration information.')
hpnicfFrClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfFrClassIndex"))
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoEntry.setDescription('Fr Class Configuration Information Entry.')
hpnicfFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassIndex.setDescription('Index of Fr Class. Begin with 0.')
hpnicfFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFrClassName.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassName.setDescription('Name of Fr Class.')
hpnicfFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hpnicfCirAllowCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoTable.setDescription('A table of DCE allowed rate Configuration information.')
hpnicfCirAllowCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirAllowFrClassIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirAllowDirection"))
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoEntry.setDescription('DCE allowed ratee Configuration Information Entry.')
hpnicfCirAllowFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfCirAllowFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hpnicfFrClassIndex')
hpnicfCirAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 2), HpnicfCirAllowDirection())
if mibBuilder.loadTexts: hpnicfCirAllowDirection.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowDirection.setDescription('Packet Direction. inbound (1) outbound (2) inbound and outbound (3) ')
hpnicfCirAllowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirAllowValue.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowValue.setDescription('DCE allowed rate (value greater than CIR) Unit : Bits per second. Value : <1-45000000> .')
hpnicfCirAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirAllowRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirAllowRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hpnicfCirCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hpnicfCirCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirCfgInfoTable.setDescription('A table of Committed Information Rate Configuration information.')
hpnicfCirCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirFrClassIndex"))
if mibBuilder.loadTexts: hpnicfCirCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirCfgInfoEntry.setDescription('Committed Information Rate Configuration Information Entry.')
hpnicfCirFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfCirFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hpnicfFrClassIndex')
hpnicfCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirValue.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirValue.setDescription(' CIR in packet output direction ,bps. Value : <1000-45000000>.')
hpnicfCirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfCirRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hpnicfIfApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hpnicfIfApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfIfApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hpnicfIfApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfIfApplyFrClassIfIndex"))
if mibBuilder.loadTexts: hpnicfIfApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfIfApplyFrClassEntry.setDescription('FrClass applied on interface Configuration Information Entry.')
hpnicfIfApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIfIndex.setDescription('Interface Index, equal to ifIndex.')
hpnicfIfApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIndex.setDescription('Index of Fr Class, equal to hpnicfFrClassIndex')
hpnicfIfApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIfApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfIfApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hpnicfPvcApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hpnicfPvcApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassEntry.setDescription('Fr Class applied on FR Pvc Configuration Information Entry.')
hpnicfPvcApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIfIndex.setDescription('Fr Interface Index, equal to ifIndex.')
hpnicfPvcApplyFrClassDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassDlciNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassDlciNum.setDescription('Fr DLCI number.')
hpnicfPvcApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIndex.setDescription('Index of Fr Class, equal to hpnicfFrClassIndex')
hpnicfPvcApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hpnicfFrPvcBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7), )
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthTable.setDescription('A table of Running statistics for bandwidth. ')
hpnicfFrPvcBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthEntry.setDescription('Bandwidth Running statistics')
hpnicfFrPvcBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthMaxReservedBW.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthMaxReservedBW.setDescription('Max reserved bandWidth. Unit : Kbps')
hpnicfFrPvcBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthAvailable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthAvailable.setDescription('Available bandWidth. Unit : Kbps')
hpnicfRTPQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2))
hpnicfRTPFrClassApplyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyTable.setDescription('A table of RTP(Realtime Transport Protocol) Queue instance.')
hpnicfRTPFrClassApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfRTPFrClassApplyFrClassIndex"))
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEntry.setDescription('RTP(Realtime Transport Protocol) Queue Configuration Information Entry.')
hpnicfRTPFrClassApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyFrClassIndex.setDescription('Fr Class Index, equal to HpnicfFrClassIndex.')
hpnicfRTPFrClassApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyStartPort.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyStartPort.setDescription(' RTP-PORT(3): start-port: 2000~65535 ')
hpnicfRTPFrClassApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEndPort.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEndPort.setDescription(' RTP-PORT(3): end-port: 2000~65535 ')
hpnicfRTPFrClassApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyBandWidth.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyBandWidth.setDescription('Max bandWidth Value: Absolute value: 8~1000000. Unit: Kbps ')
hpnicfRTPFrClassApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyCbs.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyCbs.setDescription(' Committed Burst Size: 1500~2000000. Unit: byte ')
hpnicfRTPFrClassApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyRowStatus.setDescription('RowStatus for RTPFrClassApply Table. Three actions are used: active, createAndGo, destroy')
hpnicfRTPFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoTable.setDescription('A table of Running statistics for RTP(Realtime Transport Protocol) Queue applied on the FR PVC')
hpnicfRTPFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoEntry.setDescription('RTP(Realtime Transport Protocol) Queue statistics entry.')
hpnicfRTPFrPvcQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueSize.setDescription('the packet number of RTP(Realtime Transport Protocol) Queue now.')
hpnicfRTPFrPvcQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueMaxSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueMaxSize.setDescription('the Max packet number of RTP(Realtime Transport Protocol) Queue.')
hpnicfRTPFrPvcQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueOutputs.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueOutputs.setDescription('the Output packet number of RTP(Realtime Transport Protocol) Queue.')
hpnicfRTPFrPvcQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueDiscards.setStatus('current')
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueDiscards.setDescription('the Discarded packet number of RTP(Realtime Transport Protocol) Queue.')
mibBuilder.exportSymbols("HPN-ICF-FR-QOS-MIB", hpnicfFrClassObjects=hpnicfFrClassObjects, hpnicfRTPFrClassApplyCbs=hpnicfRTPFrClassApplyCbs, hpnicfPvcApplyFrClassRowStatus=hpnicfPvcApplyFrClassRowStatus, hpnicfPvcApplyFrClassIfIndex=hpnicfPvcApplyFrClassIfIndex, hpnicfCirFrClassIndex=hpnicfCirFrClassIndex, hpnicfFrClassCfgInfoTable=hpnicfFrClassCfgInfoTable, hpnicfPvcApplyFrClassTable=hpnicfPvcApplyFrClassTable, hpnicfCirAllowCfgInfoEntry=hpnicfCirAllowCfgInfoEntry, HpnicfCirAllowDirection=HpnicfCirAllowDirection, hpnicfCirRowStatus=hpnicfCirRowStatus, hpnicfRTPFrPvcQueueOutputs=hpnicfRTPFrPvcQueueOutputs, hpnicfRTPFrClassApplyFrClassIndex=hpnicfRTPFrClassApplyFrClassIndex, hpnicfRTPFrClassApplyStartPort=hpnicfRTPFrClassApplyStartPort, hpnicfCirValue=hpnicfCirValue, hpnicfPvcApplyFrClassDlciNum=hpnicfPvcApplyFrClassDlciNum, hpnicfIfApplyFrClassRowStatus=hpnicfIfApplyFrClassRowStatus, hpnicfPvcApplyFrClassIndex=hpnicfPvcApplyFrClassIndex, hpnicfRTPQoSObjects=hpnicfRTPQoSObjects, hpnicfFrClassCfgInfoEntry=hpnicfFrClassCfgInfoEntry, hpnicfFrQoSMib=hpnicfFrQoSMib, hpnicfRTPFrClassApplyEntry=hpnicfRTPFrClassApplyEntry, hpnicfRTPFrPvcQueueMaxSize=hpnicfRTPFrPvcQueueMaxSize, hpnicfFrPvcBandwidthEntry=hpnicfFrPvcBandwidthEntry, hpnicfCirCfgInfoTable=hpnicfCirCfgInfoTable, hpnicfCirAllowFrClassIndex=hpnicfCirAllowFrClassIndex, hpnicfIfApplyFrClassEntry=hpnicfIfApplyFrClassEntry, hpnicfIfApplyFrClassIndex=hpnicfIfApplyFrClassIndex, hpnicfPvcApplyFrClassEntry=hpnicfPvcApplyFrClassEntry, hpnicfFrPvcBandwidthMaxReservedBW=hpnicfFrPvcBandwidthMaxReservedBW, hpnicfRTPFrClassApplyRowStatus=hpnicfRTPFrClassApplyRowStatus, hpnicfFrClassName=hpnicfFrClassName, hpnicfIfApplyFrClassTable=hpnicfIfApplyFrClassTable, hpnicfCirAllowRowStatus=hpnicfCirAllowRowStatus, hpnicfRTPFrClassApplyEndPort=hpnicfRTPFrClassApplyEndPort, hpnicfFrClassIndex=hpnicfFrClassIndex, hpnicfRTPFrPvcQueueDiscards=hpnicfRTPFrPvcQueueDiscards, hpnicfFrPvcBandwidthAvailable=hpnicfFrPvcBandwidthAvailable, hpnicfRTPFrClassApplyBandWidth=hpnicfRTPFrClassApplyBandWidth, hpnicfRTPFrClassApplyTable=hpnicfRTPFrClassApplyTable, hpnicfCirAllowValue=hpnicfCirAllowValue, hpnicfIfApplyFrClassIfIndex=hpnicfIfApplyFrClassIfIndex, hpnicfRTPFrPvcQueueSize=hpnicfRTPFrPvcQueueSize, hpnicfRTPFrPvcQueueRunInfoEntry=hpnicfRTPFrPvcQueueRunInfoEntry, hpnicfFrClassIndexNext=hpnicfFrClassIndexNext, hpnicfCirAllowDirection=hpnicfCirAllowDirection, hpnicfFrPvcBandwidthTable=hpnicfFrPvcBandwidthTable, hpnicfCirAllowCfgInfoTable=hpnicfCirAllowCfgInfoTable, hpnicfCirCfgInfoEntry=hpnicfCirCfgInfoEntry, hpnicfFrClassRowStatus=hpnicfFrClassRowStatus, PYSNMP_MODULE_ID=hpnicfFrQoSMib, hpnicfFrQoSObjects=hpnicfFrQoSObjects, hpnicfRTPFrPvcQueueRunInfoTable=hpnicfRTPFrPvcQueueRunInfoTable)
