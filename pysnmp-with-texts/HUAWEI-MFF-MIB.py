#
# PySNMP MIB module HUAWEI-MFF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MFF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:46:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, MibIdentifier, Counter32, ObjectIdentity, Integer32, Bits, Unsigned32, iso, NotificationType, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "MibIdentifier", "Counter32", "ObjectIdentity", "Integer32", "Bits", "Unsigned32", "iso", "NotificationType", "Gauge32", "IpAddress")
DisplayString, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "RowStatus")
hwMffMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170))
hwMffMIB.setRevisions(('2008-07-02 18:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwMffMIB.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hwMffMIB.setLastUpdated('200807021800Z')
if mibBuilder.loadTexts: hwMffMIB.setOrganization('Huawei Technologies co., Ltd.')
if mibBuilder.loadTexts: hwMffMIB.setContactInfo(' Avansys R&D Building, Huawei Longgang Production Base, Shenzhen P.R. China Zip:518129 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwMffMIB.setDescription("This MIB describes objects used for Mff,including configuring mff,cofiguring network port and server's IP address, collecting user and gateway information. ")
hwMffObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1))
hwMffGlobal = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMffGlobal.setStatus('current')
if mibBuilder.loadTexts: hwMffGlobal.setDescription('The global mff. Enable this before you want to enable vlan, port mff. ')
hwMffVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2), )
if mibBuilder.loadTexts: hwMffVlanCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwMffVlanCfgTable.setDescription('The mff vlan configuration table.')
hwMffVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffVlanIndex"))
if mibBuilder.loadTexts: hwMffVlanCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwMffVlanCfgEntry.setDescription('An entry in the mff vlan configuration table.')
hwMffVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffVlanIndex.setDescription('The VLAN-ID or other identifier referring to this VLAN.')
hwMffStaticGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffStaticGatewayIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwMffStaticGatewayIpAddr.setDescription('Whether to enable static mff on this vlan and configure gateway IP address . ')
hwMffGatewayDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 3), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffGatewayDetect.setStatus('current')
if mibBuilder.loadTexts: hwMffGatewayDetect.setDescription('Whether to enable gateway MAC address detection on this vlan. ')
hwMffVlanCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffVlanCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMffVlanCfgRowStatus.setDescription('The row status of the mff vlan configuration table.')
hwMffNetworkPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3), )
if mibBuilder.loadTexts: hwMffNetworkPortTable.setStatus('current')
if mibBuilder.loadTexts: hwMffNetworkPortTable.setDescription('The mff port configuration table.')
hwMffNetworkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffPortIndex"))
if mibBuilder.loadTexts: hwMffNetworkPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwMffNetworkPortEntry.setDescription('An entry in the mff port configuration table.')
hwMffPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwMffPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffPortIndex.setDescription('The port index.')
hwMffNetworkPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffNetworkPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMffNetworkPortRowStatus.setDescription('The row status of the mff port configuration table.')
hwMffServerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4), )
if mibBuilder.loadTexts: hwMffServerCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwMffServerCfgTable.setDescription('The mff server IP configuration table.')
hwMffServerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffServerVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffIpIndex"))
if mibBuilder.loadTexts: hwMffServerCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwMffServerCfgEntry.setDescription('An entry in the mff server IP configuration table.')
hwMffServerVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffServerVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffServerVlanIndex.setDescription('The VLAN-ID or other identifier referring to this VLAN.')
hwMffIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffIpIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffIpIndex.setDescription('Index: IP.')
hwMffServerIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffServerIpRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMffServerIpRowStatus.setDescription('The row status of the mff server IP configuration table.')
hwMffUserGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5), )
if mibBuilder.loadTexts: hwMffUserGatewayTable.setStatus('current')
if mibBuilder.loadTexts: hwMffUserGatewayTable.setDescription(' The mff users and gateways table.')
hwMffUserGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffUserGatewayVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffUserIpIndex"), (0, "HUAWEI-MFF-MIB", "hwMffGatewayIpIndex"))
if mibBuilder.loadTexts: hwMffUserGatewayEntry.setStatus('current')
if mibBuilder.loadTexts: hwMffUserGatewayEntry.setDescription('An entry in the mff users and gateways table.')
hwMffUserGatewayVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffUserGatewayVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffUserGatewayVlanIndex.setDescription(' The VLAN-ID or other identifier referring to this VLAN.')
hwMffUserIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffUserIpIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffUserIpIndex.setDescription("Index: user's IP.")
hwMffGatewayIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwMffGatewayIpIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffGatewayIpIndex.setDescription("Index: gateway's IP.")
hwMffUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMffUserMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwMffUserMacAddr.setDescription("User's MAC address.")
hwMffGatewayMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMffGatewayMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwMffGatewayMacAddr.setDescription("Gateway's MAC address.")
hwMffModUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6), )
if mibBuilder.loadTexts: hwMffModUserTable.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserTable.setDescription(' Modify the mff users and gateways table.')
hwMffModUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffModUserVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffModUserIpAddrIndex"))
if mibBuilder.loadTexts: hwMffModUserEntry.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserEntry.setDescription('An entry to modify the mff users and gateways table.')
hwMffModUserVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffModUserVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserVlanIndex.setDescription('The VLAN-ID or other identifier referring to this VLAN.')
hwMffModUserIpAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffModUserIpAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserIpAddrIndex.setDescription("Index: user's IP.")
hwMffModUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserMacAddr.setDescription("User's MAC address.")
hwMffModUserPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserPort.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserPort.setDescription("The user's port index.")
hwMffModUserGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserGatewayIp.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserGatewayIp.setDescription("Index: gateway's IP.")
hwMffModUserGatewayMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserGatewayMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserGatewayMacAddr.setDescription("Gateway's MAC address.")
hwMffModUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserRowStatus.setDescription('The row status of modify the mff users and gateways table.')
hwMffConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2))
hwMffCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 1))
hwMffCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 1, 1)).setObjects(("HUAWEI-MFF-MIB", "hwMffVlanCfgGroup"), ("HUAWEI-MFF-MIB", "hwMffNetworkPortGroup"), ("HUAWEI-MFF-MIB", "hwMffServerCfgGroup"), ("HUAWEI-MFF-MIB", "hwMffUserGatewayGroup"), ("HUAWEI-MFF-MIB", "hwMffModUserGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffCompliance = hwMffCompliance.setStatus('current')
if mibBuilder.loadTexts: hwMffCompliance.setDescription('The compliance statement for systems supporting this module.')
hwMffMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2))
hwMffGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 1)).setObjects(("HUAWEI-MFF-MIB", "hwMffGlobal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffGlobalGroup = hwMffGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffGlobalGroup.setDescription('The MFF global configuration group.')
hwMffVlanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 2)).setObjects(("HUAWEI-MFF-MIB", "hwMffStaticGatewayIpAddr"), ("HUAWEI-MFF-MIB", "hwMffGatewayDetect"), ("HUAWEI-MFF-MIB", "hwMffVlanCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffVlanCfgGroup = hwMffVlanCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffVlanCfgGroup.setDescription('The MFF vlan configuration group.')
hwMffNetworkPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 3)).setObjects(("HUAWEI-MFF-MIB", "hwMffNetworkPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffNetworkPortGroup = hwMffNetworkPortGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffNetworkPortGroup.setDescription('The MFF network-port group.')
hwMffServerCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 4)).setObjects(("HUAWEI-MFF-MIB", "hwMffServerIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffServerCfgGroup = hwMffServerCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffServerCfgGroup.setDescription('The MFF servers configuration group.')
hwMffUserGatewayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 5)).setObjects(("HUAWEI-MFF-MIB", "hwMffUserMacAddr"), ("HUAWEI-MFF-MIB", "hwMffGatewayMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffUserGatewayGroup = hwMffUserGatewayGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffUserGatewayGroup.setDescription('The MFF user and gateway group.')
hwMffModUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 6)).setObjects(("HUAWEI-MFF-MIB", "hwMffModUserMacAddr"), ("HUAWEI-MFF-MIB", "hwMffModUserPort"), ("HUAWEI-MFF-MIB", "hwMffModUserGatewayIp"), ("HUAWEI-MFF-MIB", "hwMffModUserGatewayMacAddr"), ("HUAWEI-MFF-MIB", "hwMffModUserRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffModUserGroup = hwMffModUserGroup.setStatus('current')
if mibBuilder.loadTexts: hwMffModUserGroup.setDescription('The MFF user modify group.')
mibBuilder.exportSymbols("HUAWEI-MFF-MIB", hwMffUserGatewayGroup=hwMffUserGatewayGroup, hwMffVlanIndex=hwMffVlanIndex, hwMffUserGatewayTable=hwMffUserGatewayTable, hwMffVlanCfgRowStatus=hwMffVlanCfgRowStatus, hwMffVlanCfgEntry=hwMffVlanCfgEntry, PYSNMP_MODULE_ID=hwMffMIB, hwMffUserMacAddr=hwMffUserMacAddr, hwMffMIBGroups=hwMffMIBGroups, hwMffConformance=hwMffConformance, hwMffGlobal=hwMffGlobal, hwMffModUserGatewayIp=hwMffModUserGatewayIp, hwMffUserGatewayEntry=hwMffUserGatewayEntry, hwMffModUserRowStatus=hwMffModUserRowStatus, hwMffServerIpRowStatus=hwMffServerIpRowStatus, hwMffCompliance=hwMffCompliance, hwMffServerCfgTable=hwMffServerCfgTable, hwMffStaticGatewayIpAddr=hwMffStaticGatewayIpAddr, hwMffNetworkPortRowStatus=hwMffNetworkPortRowStatus, hwMffModUserPort=hwMffModUserPort, hwMffServerVlanIndex=hwMffServerVlanIndex, hwMffNetworkPortTable=hwMffNetworkPortTable, hwMffPortIndex=hwMffPortIndex, hwMffUserGatewayVlanIndex=hwMffUserGatewayVlanIndex, hwMffUserIpIndex=hwMffUserIpIndex, hwMffModUserIpAddrIndex=hwMffModUserIpAddrIndex, hwMffIpIndex=hwMffIpIndex, hwMffModUserGatewayMacAddr=hwMffModUserGatewayMacAddr, hwMffVlanCfgTable=hwMffVlanCfgTable, hwMffModUserEntry=hwMffModUserEntry, hwMffModUserMacAddr=hwMffModUserMacAddr, hwMffVlanCfgGroup=hwMffVlanCfgGroup, hwMffModUserGroup=hwMffModUserGroup, hwMffNetworkPortGroup=hwMffNetworkPortGroup, hwMffCompliances=hwMffCompliances, hwMffGlobalGroup=hwMffGlobalGroup, hwMffNetworkPortEntry=hwMffNetworkPortEntry, hwMffServerCfgGroup=hwMffServerCfgGroup, hwMffGatewayMacAddr=hwMffGatewayMacAddr, hwMffGatewayIpIndex=hwMffGatewayIpIndex, hwMffModUserVlanIndex=hwMffModUserVlanIndex, hwMffMIB=hwMffMIB, hwMffGatewayDetect=hwMffGatewayDetect, hwMffModUserTable=hwMffModUserTable, hwMffServerCfgEntry=hwMffServerCfgEntry, hwMffObjects=hwMffObjects)
