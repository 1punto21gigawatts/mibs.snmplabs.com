#
# PySNMP MIB module HM2-NETOBJ-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-NETOBJ-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:31:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hm2ConfigurationMibs, = mibBuilder.importSymbols("HM2-TC-MIB", "hm2ConfigurationMibs")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, Unsigned32, IpAddress, MibIdentifier, Counter64, NotificationType, TimeTicks, ObjectIdentity, Bits, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "Unsigned32", "IpAddress", "MibIdentifier", "Counter64", "NotificationType", "TimeTicks", "ObjectIdentity", "Bits", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hm2NetobjMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 60))
hm2NetobjMib.setRevisions(('2011-10-20 00:00', '2011-07-01 00:00', '2011-05-31 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hm2NetobjMib.setRevisionsDescriptions(('- Added row status to both tables ', '- Modifications to address representation ', 'Initial version.',))
if mibBuilder.loadTexts: hm2NetobjMib.setLastUpdated('201110200000Z')
if mibBuilder.loadTexts: hm2NetobjMib.setOrganization('Hirschmann Automation and Control GmbH')
if mibBuilder.loadTexts: hm2NetobjMib.setContactInfo('Postal: Stuttgarter Str. 45-51 72654 Neckartenzlingen Germany Phone: +49 7127 140 E-mail: hac.support@belden.com')
if mibBuilder.loadTexts: hm2NetobjMib.setDescription('This MIB defines the SNMP interface for Netobjects. Copyright (C) 2012. All Rights Reserved.')
hm2NetobjNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 0))
hm2NetobjObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 1))
hm2NetobjConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 2))
hm2NetobjectsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 1))
hm2NetobjectsCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2NetobjectsCount.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsCount.setDescription('The current number of netobject entries in the netobjects table.')
hm2NetobjectsTables = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2))
hm2NetobjectsTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1), )
if mibBuilder.loadTexts: hm2NetobjectsTable.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsTable.setDescription('The table containing the current defined netobjects.')
hm2NetobjectsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1, 1), ).setIndexNames((0, "HM2-NETOBJ-MIB", "hm2NetobjectsIndex"))
if mibBuilder.loadTexts: hm2NetobjectsTableEntry.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsTableEntry.setDescription('An entry for a netobjects in the netobjects table.')
hm2NetobjectsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: hm2NetobjectsIndex.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsIndex.setDescription('The index of the hm2Netobject within the table.')
hm2NetobjectsName = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2NetobjectsName.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsName.setDescription('A descriptive name of the hm2Netobject.')
hm2NetobjectsDataEntriesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2NetobjectsDataEntriesCount.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataEntriesCount.setDescription('The number of entries for this object in the hm2Netobjects data table.')
hm2NetobjectsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2NetobjectsRowStatus.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsRowStatus.setDescription('Creates/Deletes/Activates this rule')
hm2NetobjectsDataTableEntriesCount = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2NetobjectsDataTableEntriesCount.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableEntriesCount.setDescription('The number of entries within the hm2Netobjects data table.')
hm2NetobjectsDataTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2), )
if mibBuilder.loadTexts: hm2NetobjectsDataTable.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTable.setDescription('The table containing the contents of the different netobjects.')
hm2NetobjectsDataTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2, 1), ).setIndexNames((0, "HM2-NETOBJ-MIB", "hm2NetobjectsDataTableIndex"))
if mibBuilder.loadTexts: hm2NetobjectsDataTableEntry.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableEntry.setDescription('The entry representing netobjects data.')
hm2NetobjectsDataTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: hm2NetobjectsDataTableIndex.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableIndex.setDescription('The index of this entry within the hm2Netobjects data table.')
hm2NetobjectsDataTableObjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2NetobjectsDataTableObjIndex.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableObjIndex.setDescription('The index of the hm2Netobject this data entry is assigned to.')
hm2NetobjectsDataTableData = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2NetobjectsDataTableData.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableData.setDescription('A string representing a data portion of the hm2Netobject. This may be o a single address (a.b.c.d) o an address range in CIDR notation (a.b.c.d/n) o an address range with start and end address (a.b.c.d-a.b.c.f) ')
hm2NetobjectsDataTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 60, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2NetobjectsDataTableRowStatus.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjectsDataTableRowStatus.setDescription('Creates/Deletes/Activates this rule')
hm2NetobjCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 2, 1))
hm2NetobjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 60, 2, 2))
hm2NetobjCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 248, 11, 60, 2, 1, 1)).setObjects(("HM2-NETOBJ-MIB", "hm2NetobjGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hm2NetobjCompliance = hm2NetobjCompliance.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjCompliance.setDescription('The compliance statement for an SNMP entity which implements the Hirschmann Firewall MIB.')
hm2NetobjGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 248, 11, 60, 2, 2, 1)).setObjects(("HM2-NETOBJ-MIB", "hm2NetobjectsName"), ("HM2-NETOBJ-MIB", "hm2NetobjectsCount"), ("HM2-NETOBJ-MIB", "hm2NetobjectsDataEntriesCount"), ("HM2-NETOBJ-MIB", "hm2NetobjectsRowStatus"), ("HM2-NETOBJ-MIB", "hm2NetobjectsDataTableEntriesCount"), ("HM2-NETOBJ-MIB", "hm2NetobjectsDataTableObjIndex"), ("HM2-NETOBJ-MIB", "hm2NetobjectsDataTableData"), ("HM2-NETOBJ-MIB", "hm2NetobjectsDataTableRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hm2NetobjGeneralGroup = hm2NetobjGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: hm2NetobjGeneralGroup.setDescription('A collection of all Hirschmann objects provided by Netobjects.')
mibBuilder.exportSymbols("HM2-NETOBJ-MIB", hm2NetobjCompliances=hm2NetobjCompliances, hm2NetobjectsRowStatus=hm2NetobjectsRowStatus, hm2NetobjectsDataTableData=hm2NetobjectsDataTableData, hm2NetobjNotifications=hm2NetobjNotifications, hm2NetobjectsIndex=hm2NetobjectsIndex, PYSNMP_MODULE_ID=hm2NetobjMib, hm2NetobjectsDataTableEntry=hm2NetobjectsDataTableEntry, hm2NetobjectsTables=hm2NetobjectsTables, hm2NetobjectsDataEntriesCount=hm2NetobjectsDataEntriesCount, hm2NetobjCompliance=hm2NetobjCompliance, hm2NetobjectsDataTableIndex=hm2NetobjectsDataTableIndex, hm2NetobjectsTable=hm2NetobjectsTable, hm2NetobjectsDataTableEntriesCount=hm2NetobjectsDataTableEntriesCount, hm2NetobjObjects=hm2NetobjObjects, hm2NetobjGroups=hm2NetobjGroups, hm2NetobjectsName=hm2NetobjectsName, hm2NetobjectsDataTableObjIndex=hm2NetobjectsDataTableObjIndex, hm2NetobjConformance=hm2NetobjConformance, hm2NetobjectsDataTableRowStatus=hm2NetobjectsDataTableRowStatus, hm2NetobjectsDataTable=hm2NetobjectsDataTable, hm2NetobjGeneralGroup=hm2NetobjGeneralGroup, hm2NetobjectsTableEntry=hm2NetobjectsTableEntry, hm2NetobjMib=hm2NetobjMib, hm2NetobjectsCount=hm2NetobjectsCount, hm2NetobjectsObjects=hm2NetobjectsObjects)
