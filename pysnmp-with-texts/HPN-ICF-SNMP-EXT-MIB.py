#
# PySNMP MIB module HPN-ICF-SNMP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-SNMP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
SnmpAdminString, SnmpSecurityModel = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString", "SnmpSecurityModel")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Counter64, Integer32, Counter32, TimeTicks, NotificationType, Gauge32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Counter64", "Integer32", "Counter32", "TimeTicks", "NotificationType", "Gauge32", "Bits", "MibIdentifier")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
hpnicfSnmpExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104))
hpnicfSnmpExt.setRevisions(('2009-04-07 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfSnmpExt.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: hpnicfSnmpExt.setLastUpdated('200904071700Z')
if mibBuilder.loadTexts: hpnicfSnmpExt.setOrganization('')
if mibBuilder.loadTexts: hpnicfSnmpExt.setContactInfo('')
if mibBuilder.loadTexts: hpnicfSnmpExt.setDescription('This MIB file is to provide the object definition of the SNMP extended information.')
hpnicfSnmpExtScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 1))
hpnicfSnmpExtTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2))
hpnicfSnmpExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 3))
hpnicfSnmpExtSnmpChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(161)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSnmpExtSnmpChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtSnmpChannel.setDescription('The channel number used by SNMP.')
hpnicfSnmpExtReadCommunitySingle = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSnmpExtReadCommunitySingle.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtReadCommunitySingle.setDescription('The first read community.')
hpnicfSnmpExtWriteCommunitySingle = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSnmpExtWriteCommunitySingle.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtWriteCommunitySingle.setDescription('The first write community.')
hpnicfSnmpExtMaxContextNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSnmpExtMaxContextNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtMaxContextNum.setDescription('The maximum number of contexts.')
hpnicfSnmpExtCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1), )
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityTable.setDescription('Modify the extended properties of SNMP community or user.')
hpnicfSnmpExtCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-SNMP-EXT-MIB", "hpnicfSnmpExtCommunitySecurityLevel"), (0, "HPN-ICF-SNMP-EXT-MIB", "hpnicfSnmpExtCommunitySecurityName"))
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityEntry.setDescription('The entry of hpnicfSnmpExtCommunityTable.')
hpnicfSnmpExtCommunitySecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1, 1, 1), SnmpSecurityModel())
if mibBuilder.loadTexts: hpnicfSnmpExtCommunitySecurityLevel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunitySecurityLevel.setDescription("The Security Model of the specified community or user. This object may not take the 'any' (0) value.")
hpnicfSnmpExtCommunitySecurityName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfSnmpExtCommunitySecurityName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunitySecurityName.setDescription('The Security Name of the specified community or user.')
hpnicfSnmpExtCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityName.setDescription('The specified community name.')
hpnicfSnmpExtCommunityAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityAclNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtCommunityAclNum.setDescription('The specified ACL (Access Control List) number used by the community or the user.')
hpnicfSnmpCommunityExTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2), )
if mibBuilder.loadTexts: hpnicfSnmpCommunityExTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExTable.setDescription('Modify the extended properties of SNMP community.')
hpnicfSnmpCommunityExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-SNMP-EXT-MIB", "hpnicfSnmpCommunityExName"))
if mibBuilder.loadTexts: hpnicfSnmpCommunityExEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExEntry.setDescription('The entry of hpnicfSnmpCommunityExTable.')
hpnicfSnmpCommunityExName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSnmpCommunityExName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExName.setDescription('The specified community name.')
hpnicfSnmpCommunityExWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSnmpCommunityExWrite.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExWrite.setDescription("Represents the community can write or not. 'true' : the community can write. 'false': the community can read only.")
hpnicfSnmpCommunityExViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSnmpCommunityExViewName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExViewName.setDescription('A family of view subtrees that the Community can operate.')
hpnicfSnmpCommunityExAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSnmpCommunityExAclNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExAclNum.setDescription('The specified ACL (Access Control List) number used by the community.')
hpnicfSnmpCommunityExRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSnmpCommunityExRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpCommunityExRowStatus.setDescription('The status of this table entry.')
hpnicfSnmpExtContextTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 3), )
if mibBuilder.loadTexts: hpnicfSnmpExtContextTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtContextTable.setDescription('Modify the extended properties of SNMP context.')
hpnicfSnmpExtContextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-SNMP-EXT-MIB", "hpnicfSnmpExtContextName"))
if mibBuilder.loadTexts: hpnicfSnmpExtContextEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtContextEntry.setDescription('The entry of hpnicfSnmpExtContextTable.')
hpnicfSnmpExtContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfSnmpExtContextName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtContextName.setDescription('The specified context name.')
hpnicfSnmpExtContextRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 104, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSnmpExtContextRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSnmpExtContextRowStatus.setDescription('The status of this table entry.')
mibBuilder.exportSymbols("HPN-ICF-SNMP-EXT-MIB", hpnicfSnmpCommunityExEntry=hpnicfSnmpCommunityExEntry, hpnicfSnmpCommunityExWrite=hpnicfSnmpCommunityExWrite, hpnicfSnmpExtSnmpChannel=hpnicfSnmpExtSnmpChannel, hpnicfSnmpCommunityExRowStatus=hpnicfSnmpCommunityExRowStatus, hpnicfSnmpExtWriteCommunitySingle=hpnicfSnmpExtWriteCommunitySingle, hpnicfSnmpExtContextName=hpnicfSnmpExtContextName, hpnicfSnmpExtMaxContextNum=hpnicfSnmpExtMaxContextNum, hpnicfSnmpExtCommunityAclNum=hpnicfSnmpExtCommunityAclNum, hpnicfSnmpExtContextRowStatus=hpnicfSnmpExtContextRowStatus, hpnicfSnmpCommunityExTable=hpnicfSnmpCommunityExTable, hpnicfSnmpExtTables=hpnicfSnmpExtTables, hpnicfSnmpCommunityExName=hpnicfSnmpCommunityExName, hpnicfSnmpExtCommunitySecurityName=hpnicfSnmpExtCommunitySecurityName, hpnicfSnmpExtNotifications=hpnicfSnmpExtNotifications, hpnicfSnmpExt=hpnicfSnmpExt, hpnicfSnmpExtReadCommunitySingle=hpnicfSnmpExtReadCommunitySingle, hpnicfSnmpExtCommunityTable=hpnicfSnmpExtCommunityTable, hpnicfSnmpExtCommunityName=hpnicfSnmpExtCommunityName, hpnicfSnmpCommunityExViewName=hpnicfSnmpCommunityExViewName, hpnicfSnmpExtScalarObjects=hpnicfSnmpExtScalarObjects, hpnicfSnmpExtCommunityEntry=hpnicfSnmpExtCommunityEntry, PYSNMP_MODULE_ID=hpnicfSnmpExt, hpnicfSnmpCommunityExAclNum=hpnicfSnmpCommunityExAclNum, hpnicfSnmpExtCommunitySecurityLevel=hpnicfSnmpExtCommunitySecurityLevel, hpnicfSnmpExtContextEntry=hpnicfSnmpExtContextEntry, hpnicfSnmpExtContextTable=hpnicfSnmpExtContextTable)
