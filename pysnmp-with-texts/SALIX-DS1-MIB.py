#
# PySNMP MIB module SALIX-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-DS1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
atmfM4TrapAlarmSeverity, = mibBuilder.importSymbols("ATM-FORUM-M4-MIB", "atmfM4TrapAlarmSeverity")
dsx1ConfigEntry, = mibBuilder.importSymbols("DS1-MIB", "dsx1ConfigEntry")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
DateAndTime, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "DateAndTime")
salixGeneric, = mibBuilder.importSymbols("SALIX-MIB", "salixGeneric")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, IpAddress, Counter32, NotificationType, Gauge32, TimeTicks, Bits, Counter64, ModuleIdentity, Unsigned32, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Counter32", "NotificationType", "Gauge32", "TimeTicks", "Bits", "Counter64", "ModuleIdentity", "Unsigned32", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
salixDsx1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 2, 7))
if mibBuilder.loadTexts: salixDsx1MIB.setLastUpdated('9907080000Z')
if mibBuilder.loadTexts: salixDsx1MIB.setOrganization('SALIX Technologies')
if mibBuilder.loadTexts: salixDsx1MIB.setContactInfo('904 Wind River Lane Suite 101 Gaithersburg, MD 20878 (301)-417-0017')
if mibBuilder.loadTexts: salixDsx1MIB.setDescription('The MIB describing objects relating to DS1 interfaces, specifically items that augment objects from the DS1-MIB')
salixDsx1MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1))
salixDsx1MIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 2))
salixDsx1MIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 3))
salixDsx1MIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 2, 0))
salixDsx1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1), )
if mibBuilder.loadTexts: salixDsx1ConfigTable.setStatus('current')
if mibBuilder.loadTexts: salixDsx1ConfigTable.setDescription('The SALIX DS1 config table This table augments the dsx1ConfigTable defined in the DS1 MIB.')
salixDsx1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1), )
dsx1ConfigEntry.registerAugmentions(("SALIX-DS1-MIB", "salixDsx1ConfigEntry"))
salixDsx1ConfigEntry.setIndexNames(*dsx1ConfigEntry.getIndexNames())
if mibBuilder.loadTexts: salixDsx1ConfigEntry.setStatus('current')
if mibBuilder.loadTexts: salixDsx1ConfigEntry.setDescription('An entry in the SALIX DS1 config table. This entry containts SALIX specific DS1 configuration objects')
salixDsx1ContinuityTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopback", 1), ("transponder", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1ContinuityTestType.setStatus('current')
if mibBuilder.loadTexts: salixDsx1ContinuityTestType.setDescription('The type of continuity test that should be setup. An entry exists for every DS1 in the system. This object is consulted when IPDC is requested to setup a continuity test. Since this value is specified in SGCP, it is not consulted if the SGCP protocol is used. Writing to this value has the effect that it changes the continuity test type for any subsequently setup continuity tests. Any tests currently in progress are not effected by changing this object.')
salixDsx1DChannelPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1DChannelPresent.setStatus('current')
if mibBuilder.loadTexts: salixDsx1DChannelPresent.setDescription('An indication of whether channel 24 of the DS1 is reserved for D channel signaling.')
salixDsx1AutoInitiateState = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1AutoInitiateState.setStatus('current')
if mibBuilder.loadTexts: salixDsx1AutoInitiateState.setDescription("An indication of whether the D channel data link control (layer 2) should be initiated automatically during DS1 initialization or brought up on demand. This attribute is only relevant if salixDsx1DChannelPresent is 'true'.")
salixDsx1DChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userMode", 1), ("networkMode", 2))).clone('userMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1DChannelMode.setStatus('current')
if mibBuilder.loadTexts: salixDsx1DChannelMode.setDescription("An indication of whether the D Channel (if present) on the given DS1 should be configured as 'user mode' or as 'network mode'. This attributes is only used if the salixDsx1DChannelPresent field is set to 'true'")
salixDsx1RobbedBitSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("onHook", 1), ("offHook", 2), ("ringing", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1RobbedBitSignalling.setStatus('current')
if mibBuilder.loadTexts: salixDsx1RobbedBitSignalling.setDescription("An indication of whether the 'ABCD' bits of the DS0s in the DS1 should be configured for robbed bit signalling.")
salixDsx1TDMEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 7, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("echoCancel16ms", 1), ("echoCancel32ms", 2), ("echoCancel63ms", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx1TDMEchoCancellation.setStatus('current')
if mibBuilder.loadTexts: salixDsx1TDMEchoCancellation.setDescription('An indication of whether echo cancellation should be applied to the DS0s in the DS1. echoCancel16ms - 16 millisecond echo cancellation tail length echoCancel32ms - 32 millisecond echo cancellation tail length echoCancel63ms - 63 millisecond echo cancellation tail length')
salixDs1Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 3, 1))
salixDs1Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 7, 3, 2))
salixDs1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 2, 7, 3, 1, 1)).setObjects(("SALIX-DS1-MIB", "salixDsx1ContinuityTestType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDs1Group = salixDs1Group.setStatus('current')
if mibBuilder.loadTexts: salixDs1Group.setDescription('Salix DS1 Objects Group')
salixDs1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 2, 7, 3, 2, 1)).setObjects(("SALIX-DS1-MIB", "salixDs1Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDs1Compliance = salixDs1Compliance.setStatus('current')
if mibBuilder.loadTexts: salixDs1Compliance.setDescription('The basic implementation requirements for the SALIX-DS1-MIB.')
mibBuilder.exportSymbols("SALIX-DS1-MIB", salixDsx1DChannelPresent=salixDsx1DChannelPresent, salixDsx1RobbedBitSignalling=salixDsx1RobbedBitSignalling, salixDsx1ConfigTable=salixDsx1ConfigTable, salixDsx1TDMEchoCancellation=salixDsx1TDMEchoCancellation, salixDs1Compliances=salixDs1Compliances, PYSNMP_MODULE_ID=salixDsx1MIB, salixDsx1MIBCompliance=salixDsx1MIBCompliance, salixDs1Compliance=salixDs1Compliance, salixDsx1MIB=salixDsx1MIB, salixDs1Groups=salixDs1Groups, salixDsx1MIBTraps=salixDsx1MIBTraps, salixDsx1MIBTrapPrefix=salixDsx1MIBTrapPrefix, salixDsx1AutoInitiateState=salixDsx1AutoInitiateState, salixDsx1DChannelMode=salixDsx1DChannelMode, salixDs1Group=salixDs1Group, salixDsx1ConfigEntry=salixDsx1ConfigEntry, salixDsx1MIBObjects=salixDsx1MIBObjects, salixDsx1ContinuityTestType=salixDsx1ContinuityTestType)
