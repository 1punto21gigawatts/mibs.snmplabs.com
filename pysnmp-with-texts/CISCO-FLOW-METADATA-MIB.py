#
# PySNMP MIB module CISCO-FLOW-METADATA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FLOW-METADATA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:58:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Integer32, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, Bits, MibIdentifier, NotificationType, ObjectIdentity, IpAddress, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "Bits", "MibIdentifier", "NotificationType", "ObjectIdentity", "IpAddress", "Counter32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoFlowMetadataMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 789))
ciscoFlowMetadataMIB.setRevisions(('2012-12-17 00:00', '2011-03-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoFlowMetadataMIB.setRevisionsDescriptions(('Deprecated CfmMetadataFlowAttrType cfmMetadataFlowAttributeTable as coupled to transport protocol. Added cfmMetadataFlowAllAttrTable decoupling it from transport protocol.', 'Latest version of this MIB module.',))
if mibBuilder.loadTexts: ciscoFlowMetadataMIB.setLastUpdated('201212200000Z')
if mibBuilder.loadTexts: ciscoFlowMetadataMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoFlowMetadataMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-medianet-metadata@cisco.com')
if mibBuilder.loadTexts: ciscoFlowMetadataMIB.setDescription("The MIB module for managing Cisco medianet flow metadata. Metadata, in the simplest form, is data that qualifies other data. Flow metadata is data that describes a flow in the network. Metadata plays an important role in providing a framework, that makes data from one component available to another component on the same network element as well as across other network elements. MIB Table Overview: =================== This MIB consists of two tables: 1) cfmMetadataFlowTable 2) cfmMetadataFlowAttrTable cfmMetadataFlowTable provides the details about the six tuple which can uniquely identify a network traffic flow. cfmMetadataFlowAttrTable will specify flow attributes carried in the metadata flow. Flow attribute values are represented in 'Type-Value' format. cfmMetadataFlowAttrType - Represent the type of flow attribute. cfmMetadataFlowAttrValue - Represent corresponding flow attribute value. cfmMetadataFlowTable and cfmMetadataFlowAttrTable are linked together using flow ID which will map respective metadata flow attributes with the corresponding flow key.")
class CfmMetadataFlowAttributeType(TextualConvention, Integer32):
    description = 'This object specifies the attributes types that is applicable to a given flow. The following are the entire possible metadata attribute types and a brief explanation for the same. other(0) - Other attribute types than listed below. appDescription(94) - Application description of the the flow. It is represented as a string of length 55 characters. appTag(95) - Application tag value of the flow. It is represented as unsigned32. appName(96) - Application name of the flow. It is represented as a string of length 24 characters. appVersion(97) - Application version of the flow. It is represented as a string of length 40 characters. appVendor(98) - Application vendor of the flow. It is represented as a string of length 40 characters. vmFlowTimeout(100) - Flow time out value of the flow. It is represented as unsigned32. vmRTPClockFrequency(101) - Clock frequency of the flow. It is represented as unsigned32. pakrate(103) - Packet rate of the flow. It is represented as unsigned64. l3Bitrate(104) - L3 bit rate of the flow. It is represented as unsigned32. mediaBitrate(105) - Media bit rate of the flow. It is represented as unsigned32. mediaVideoPaksize(106) - Media video bit rate of the flow. It is represented as unsigned32. globalSessionID(107) - Global session ID of the flow.It is represented as a string of length 80 characters. multipartySessionID(108) - Multi party session ID of the flow. It is represented as a string of length 80 characters. rtpMediaFlow(109) - RTP media flow attribute of the flow. It is represented as uint8. mediaEncryptionStatus(110) - Media encryption status of the flow. It is represented as uint8. syntheticTraffic(111) - Synthetic traffic represented as uint8. meteringPriority(112) - Metering Priority of the flow. It is represented as uint8. endpointModel(113) - Endpoint device model signaling the flow. It is represented as string of 40 characters length. endpointVendor(114) - Endpoint device vendor signaling the flow. It is represented as string of 40 characters length. endpointVersion(115) - Endpoint device version signaling the flow. It is represented as string of 40 characters length. ssrc(116) - Synchronization source of the flow. It is represented as uint32. endpointIPAddressType(117) - IP address type of the endpoint device signaling the flow. It is represented as uint8. endpointIPAddressLength(118) - IP address length of the endpoint device signaling the flow. It is represented as uint8. endpointIPAddressValue(119) - IP address of the endpoint device signaling the flow. It is represented as a string of 16 characters length. sipProxyServerType(120) - SIP proxy server IP address type of the flow. It is represented as uint8. sipProxyServerLength(121) - SIP proxy server IP address length of the flow. It is represented as uint8. sipProxyServerValue(122) - SIP proxy server IP address of the flow. It is represented as a string of 16 characters length. bandwidth(123) - Bandwidth of the flow. It is represented as uint32. deviceName(124) - Endpoint device name signaling the flow. It is represented as a string of 100 characters length. deviceClass(125) - Endpoint device class signaling the flow. It is represented as a string of 100 characters length. sipUserName(126) - SIP flow user name. It is represented as a string of 16 characters length. sipEmail(127) - SIP flow email ID. It is represented as a string of 24 characters length. audioCodec(128) - Audio codec of the flow. It is represented as uint8. bandwidthConsumed(129) - Bandwidth consumed of the flow. It is represented as uint32. payloadType(130) - Payload type of the flow. It is represented as uint8. mimeType(131) - MIME type of the flow. It is represented as a string of 16 characters length. extrapolatedBandwidth(132) - Extrapolated bandwidth of the flow. It is represented as uint32. cname(134) - cname of the flow. It is represented as a string of 24 characters in length. videoCodec(135) - Video codec of the flow. It is represented as uint8. sdpSessionID(136) - SDP session ID of the flow. It is represented as a string of 80 characters length. domainName(137) - Domain name of the flow. It is represented as a string of 24 characters length. endpointSwVersion(138) - Software version of the endpoint device signaling the flow. It is represented as a string of 24 characters length. tosDscp(139) - Tos/Dscp value of the flow. It is represented as uint8. This textual-convention and objects of this type have been deprecated as no longer needed. CfmMetadataFlowAttributeType object is superseded by cfmMetadataFlowAllAttrValue.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139))
    namedValues = NamedValues(("other", 0), ("appDescription", 94), ("appTag", 95), ("appName", 96), ("appVersion", 97), ("appVendor", 98), ("vmFlowTimeout", 100), ("vmRTPClockFrequency", 101), ("pakRate", 103), ("l3Bitrate", 104), ("mediaBitrate", 105), ("mediaVideoPaksize", 106), ("globalSessionID", 107), ("multipartySessionID", 108), ("rtpMediaFlow", 109), ("mediaEncryptionStatus", 110), ("syntheticTraffic", 111), ("meteringPriority", 112), ("endpointModel", 113), ("endpointVendor", 114), ("endpointVersion", 115), ("ssrc", 116), ("endpointIPAddressType", 117), ("endpointIPAddressLength", 118), ("endpointIPAddressValue", 119), ("sipProxyServerType", 120), ("sipProxyServerLength", 121), ("sipProxyServerValue", 122), ("bandwidth", 123), ("deviceName", 124), ("deviceClass", 125), ("sipUserName", 126), ("sipEmail", 127), ("audioCodec", 128), ("bandwidthConsumed", 129), ("payloadType", 130), ("mimeType", 131), ("extrapolatedBandwidth", 132), ("cname", 134), ("videoCodec", 135), ("sdpSessionID", 136), ("domainName", 137), ("endpointSwVersion", 138), ("tosDscp", 139))

class CfmMetadataFlowAttrVal(TextualConvention, OctetString):
    description = "This textual convention denotes a value to be used with 'cfmMetadataFlowAttributeType'. A ' CfmMetadataFlowAttrVal ' is always interpreted within the context of cfmMetadataFlowAttrEntry. Every usage of the ' CfmMetadataFlowAttrVal' textual convention is required to specify the ' CfmMetadataFlowAttributeType ' object. CfmMetadataFlowAttrVal object is deprecated as no longer needed."
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

cFlowMetadataMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 789, 0))
cFlowMetadataMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 789, 1))
cFlowMetadataMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 789, 2))
cfmMetadataFlowTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1), )
if mibBuilder.loadTexts: cfmMetadataFlowTable.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowTable.setDescription('A list of 6-tuple and flow id that is used to identify the metadata flows.')
cfmMetadataFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1), ).setIndexNames((0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowId"))
if mibBuilder.loadTexts: cfmMetadataFlowEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowEntry.setDescription('An entry containing the flow id and the 6-tuple which is used as a key to uniquely identify a metadata flow .')
cfmMetadataFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cfmMetadataFlowId.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowId.setDescription('ID that uniquely identifies this metadata flow. It is dynamically generated once the flow key information is available and assigned to the flow.')
cfmMetadataFlowProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowProtocolType.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowProtocolType.setDescription('The protocol type of this metadata flow.')
cfmMetadataFlowDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowDestAddrType.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowDestAddrType.setDescription('The type of destination Internet address of this metadata flow.')
cfmMetadataFlowDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowDestAddr.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowDestAddr.setDescription('The destination Internet address of this metadata flow. The type of this address is determined by the value of cfmMetadataFlowDestAddrType.')
cfmMetadataFlowDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 5), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowDestPort.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowDestPort.setDescription('The destination port of this metadata flow.')
cfmMetadataFlowSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowSrcAddrType.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowSrcAddrType.setDescription('The type of source Internet address of this metadata flow.')
cfmMetadataFlowSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowSrcAddr.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowSrcAddr.setDescription('The source Internet address of this metadata flow. The type of this address is determined by the value of cfmMetadataFlowSrcAddrType.')
cfmMetadataFlowSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 8), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowSrcPort.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowSrcPort.setDescription('The source port of this metadata flow.')
cfmMetadataFlowSSRC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowSSRC.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowSSRC.setDescription('The Synchronization Source Identifier (SSRC) of this metadata flow.')
cfmMetadataFlowAttrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 2), )
if mibBuilder.loadTexts: cfmMetadataFlowAttrTable.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadataFlowAttrTable.setDescription('A list of metadata flows and their additional attribute parameters. cfmMetadataFlowAttrTable object is superseded by cfmMetadataFlowAttribTable.')
cfmMetadataFlowAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 2, 1), ).setIndexNames((0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowId"), (0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAttrType"))
if mibBuilder.loadTexts: cfmMetadataFlowAttrEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadataFlowAttrEntry.setDescription('An entry containing additional attribute parameter for a particular metadata flow. cfmMetadataFlowAttrEntry object is superseded by cfmMetadataFlowAttribEntry.')
cfmMetadataFlowAttrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 2, 1, 1), CfmMetadataFlowAttributeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowAttrType.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadataFlowAttrType.setDescription('The attribute type applicable to a given metadata flow. The attribute types are explained in CfmMetadataFlowAttrType. cfmMetadataFlowAttrType object is superseded by cfmMetadataIpFixIeId.')
cfmMetadataFlowAttrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 2, 1, 2), CfmMetadataFlowAttrVal()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowAttrValue.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadataFlowAttrValue.setDescription('The attribute value associated with the attribute type of a given metadata flow. cfmMetadataFlowAttrValue object is superseded by cfmMetadataFlowAttribValue.')
cfmMetadataFlowAllAttrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3), )
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrTable.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrTable.setDescription('A list of metadata flows and their additional attribute parameters.')
cfmMetadataFlowAllAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3, 1), ).setIndexNames((0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowId"), (0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataIpFixIeId"), (0, "CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAllAttrInstanceId"))
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrEntry.setDescription('An entry containing additional attribute parameter for a particular metadata flow.')
cfmMetadataIpFixIeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cfmMetadataIpFixIeId.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataIpFixIeId.setDescription('The attribute IPFix IE-ID associated with the attribute of a given metadata flow. Logically, IE-ID is only 15 bits, but in existing transports, such as the actual IPFIX transport protocol, and Cisco metadata signaling in RSVP, the IE-ID is encoded as a uint16. If the high-order bit is 0, then it indicates that VendorID is 0 (IANA = IETF standardized attributes).')
cfmMetadataFlowAllAttrInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrInstanceId.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrInstanceId.setDescription('The attribute arbitrary instance, assigned locally by the implementation, associated with the attribute IPFix IE-ID of a given metadata flow.')
cfmMetadataFlowAllAttrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrValue.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrValue.setDescription('The attribute value associated with the attribute IPFix IE-ID of a given metadata flow.')
cfmMetadataFlowAllAttrPen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 789, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrPen.setReference('http://www.iana.org/assignments/enterprise-numbers')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrPen.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataFlowAllAttrPen.setDescription('The attribute IANA Private Enterprise Number associated with vendor for the attribute IPFix IE-ID of a given metadata flow.')
cfmMetadataMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 1))
cfmMetadataMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 2))
cfmMetadataMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 1, 1)).setObjects(("CISCO-FLOW-METADATA-MIB", "cfmMetadateFlowInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMetadataMIBCompliance = cfmMetadataMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadataMIBCompliance.setDescription('The compliance statement for the CISCO-FLOW-METADATA-MIB.')
cfmMetadataMIBComplianceV2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 1, 2)).setObjects(("CISCO-FLOW-METADATA-MIB", "cfmMetadateFlowInfoGroupV2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMetadataMIBComplianceV2 = cfmMetadataMIBComplianceV2.setStatus('current')
if mibBuilder.loadTexts: cfmMetadataMIBComplianceV2.setDescription('The compliance statement for the CISCO-FLOW-METADATA-MIB.')
cfmMetadateFlowInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 2, 1)).setObjects(("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowProtocolType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestAddrType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestAddr"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestPort"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcAddrType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcAddr"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcPort"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSSRC"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAttrType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAttrValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMetadateFlowInfoGroup = cfmMetadateFlowInfoGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cfmMetadateFlowInfoGroup.setDescription('A collection of objects which provide metadata flow information. cfmMetadateFlowInfoGroup object is superseded by cfmMetadateFlowInfoGroupV2.')
cfmMetadateFlowInfoGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 789, 2, 2, 2)).setObjects(("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowProtocolType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestAddrType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestAddr"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowDestPort"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcAddrType"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcAddr"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSrcPort"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowSSRC"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAllAttrValue"), ("CISCO-FLOW-METADATA-MIB", "cfmMetadataFlowAllAttrPen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMetadateFlowInfoGroupV2 = cfmMetadateFlowInfoGroupV2.setStatus('current')
if mibBuilder.loadTexts: cfmMetadateFlowInfoGroupV2.setDescription('A collection of objects which provide metadata flow information.')
mibBuilder.exportSymbols("CISCO-FLOW-METADATA-MIB", cfmMetadataFlowAttrEntry=cfmMetadataFlowAttrEntry, cfmMetadataFlowProtocolType=cfmMetadataFlowProtocolType, cfmMetadataFlowAttrTable=cfmMetadataFlowAttrTable, CfmMetadataFlowAttributeType=CfmMetadataFlowAttributeType, cfmMetadataFlowAllAttrValue=cfmMetadataFlowAllAttrValue, cFlowMetadataMIBNotifs=cFlowMetadataMIBNotifs, cfmMetadataFlowDestPort=cfmMetadataFlowDestPort, cfmMetadataFlowAllAttrInstanceId=cfmMetadataFlowAllAttrInstanceId, cfmMetadataMIBGroups=cfmMetadataMIBGroups, cfmMetadataFlowEntry=cfmMetadataFlowEntry, cfmMetadataFlowAttrType=cfmMetadataFlowAttrType, cfmMetadataIpFixIeId=cfmMetadataIpFixIeId, ciscoFlowMetadataMIB=ciscoFlowMetadataMIB, cfmMetadataMIBComplianceV2=cfmMetadataMIBComplianceV2, cfmMetadataFlowSrcAddrType=cfmMetadataFlowSrcAddrType, cfmMetadataFlowAllAttrTable=cfmMetadataFlowAllAttrTable, cfmMetadateFlowInfoGroupV2=cfmMetadateFlowInfoGroupV2, cfmMetadataMIBCompliance=cfmMetadataMIBCompliance, cfmMetadataFlowSSRC=cfmMetadataFlowSSRC, cFlowMetadataMIBObjects=cFlowMetadataMIBObjects, cfmMetadataFlowSrcAddr=cfmMetadataFlowSrcAddr, cfmMetadataMIBCompliances=cfmMetadataMIBCompliances, cfmMetadataFlowTable=cfmMetadataFlowTable, cFlowMetadataMIBConform=cFlowMetadataMIBConform, cfmMetadataFlowDestAddr=cfmMetadataFlowDestAddr, cfmMetadataFlowDestAddrType=cfmMetadataFlowDestAddrType, CfmMetadataFlowAttrVal=CfmMetadataFlowAttrVal, cfmMetadateFlowInfoGroup=cfmMetadateFlowInfoGroup, cfmMetadataFlowAllAttrPen=cfmMetadataFlowAllAttrPen, cfmMetadataFlowId=cfmMetadataFlowId, cfmMetadataFlowAttrValue=cfmMetadataFlowAttrValue, cfmMetadataFlowAllAttrEntry=cfmMetadataFlowAllAttrEntry, PYSNMP_MODULE_ID=ciscoFlowMetadataMIB, cfmMetadataFlowSrcPort=cfmMetadataFlowSrcPort)
