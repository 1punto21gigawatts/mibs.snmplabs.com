#
# PySNMP MIB module CISCO-UNITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNITY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:18:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Counter64, Gauge32, ObjectIdentity, Bits, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter32, NotificationType, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "Bits", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter32", "NotificationType", "ModuleIdentity", "IpAddress")
DisplayString, TruthValue, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "DateAndTime", "TextualConvention")
ciscoUnityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 385))
ciscoUnityMIB.setRevisions(('2005-12-12 00:00', '2004-01-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoUnityMIB.setRevisionsDescriptions(('Added these objects: ciscoUnityLicLanguagesMax, ciscoUnityLicTTSSessionsMax, ciscoUnityLicSubscribersMax, ciscoUnityLicUMSubscribersMax, ciscoUnityLicVMISubscribersMax, ciscoUnityLicVoicePortsMax, ciscoUnityLicBridgeSessionsMax, ciscoUnityLicAMISIsLicensed, ciscoUnityLicMaxMsgRecLenIsLic, ciscoUnityLicPoolingIsEnabled, ciscoUnityLicVPIMIsLicensed, ciscoUnityLicPrimaryServerIsLic, ciscoUnityLicSecondServerIsLic, ciscoUnityLicUtilSecondServer, ciscoUnityLicUtilSubs, ciscoUnityLicUtilVMISubs, ciscoUnityPortActivity, ciscoUnityPortObjectId', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoUnityMIB.setLastUpdated('200512120000Z')
if mibBuilder.loadTexts: ciscoUnityMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoUnityMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-unity@cisco.com')
if mibBuilder.loadTexts: ciscoUnityMIB.setDescription('The MIB Module for the management of Cisco Unity server. Cisco Unity is a Unified Communications solution that provides advanced, convergence-based communication services. The MIB presents provision and statistics information. ACRONYMS AMIS Analog Messaging Interface Standard MWI Message Waiting Indicator TRAP Telephone Record and Playback TTS Text-To-Speech UM Unified Messaging VMI Visual Messaging Interface VPIM Voice Profile for Internet Mail')
class CiscoUnityIndex(TextualConvention, Unsigned32):
    description = 'This textual convention is used as the Index into a table. A positive value is used to identify a unique entry in the table.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class CiscoUnityServerStatus(TextualConvention, Integer32):
    description = 'This textual convention is used to indicate the current status of the local Unity server. stopped(1) The main Cisco Unity process is stopped starting(2) The main Cisco Unity process is starting running(3) The main Cisco Unity process is in normal operational mode stopping(4) The main Cisco Unity process is shutting down'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("stopped", 1), ("starting", 2), ("running", 3), ("stopping", 4))

ciscoUnityMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 0))
ciscoUnityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 1))
ciscoUnityMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 2))
ciscoUnityGeneralInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1))
ciscoUnityGlobalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2))
ciscoUnityNotificationsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3))
ciscoUnityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 1), )
if mibBuilder.loadTexts: ciscoUnityTable.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityTable.setDescription('The table containing information about all the Unity servers on the network visible to the local Unity server.')
ciscoUnityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-UNITY-MIB", "ciscoUnityIndex"))
if mibBuilder.loadTexts: ciscoUnityEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEntry.setDescription('An entry (conceptual row) in the Unity table, containing the information about a Unity server.')
ciscoUnityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 1, 1, 1), CiscoUnityIndex())
if mibBuilder.loadTexts: ciscoUnityIndex.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityIndex.setDescription('An arbitrary integer, selected by the local Unity, which uniquely identifies a Unity server on the network.')
ciscoUnityName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityName.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityName.setDescription('The host name of the Unity server.')
ciscoUnityVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityVersion.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityVersion.setDescription('The version number of the Unity server software.')
ciscoUnityPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2), )
if mibBuilder.loadTexts: ciscoUnityPortTable.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortTable.setDescription('The table containing information about the configuration of ports on the local Unity server.')
ciscoUnityPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-UNITY-MIB", "ciscoUnityPortIndex"))
if mibBuilder.loadTexts: ciscoUnityPortEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortEntry.setDescription('An entry (conceptual row) in the Port table, containing the information about the port configuration on the local Unity server.')
ciscoUnityPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 1), CiscoUnityIndex())
if mibBuilder.loadTexts: ciscoUnityPortIndex.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortIndex.setDescription('An arbitrary integer, selected by the local Unity, which uniquely identifies a port on the local Unity server.')
ciscoUnityPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortNumber.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortNumber.setDescription('The Unity voice messaging port number.')
ciscoUnityPortIntegration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortIntegration.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortIntegration.setDescription('The phone system integration to which this port belongs. This could be Cisco CallManager or a traditional PBX.')
ciscoUnityPortExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortExtension.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortExtension.setDescription('The extension for the port as assigned on the phone system.')
ciscoUnityPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortEnabled.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortEnabled.setDescription('This indicates whether this port is enabled on the local Unity server.')
ciscoUnityPortAnswerCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortAnswerCalls.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortAnswerCalls.setDescription('This indicates whether this port is designated to answer incoming calls.')
ciscoUnityPortMessageNotif = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortMessageNotif.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortMessageNotif.setDescription('This indicates whether this port is designated for notifying subscribers of messages.')
ciscoUnityPortDialoutMWI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortDialoutMWI.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortDialoutMWI.setDescription('This indicates whether this port is designated for turning MWIs on and off.')
ciscoUnityPortAMISDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortAMISDelivery.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortAMISDelivery.setDescription('This indicates whether this port is designated for making outbound AMIS calls to deliver voice messages from Unity subscribers to users on another voice messaging system.')
ciscoUnityPortTRAPConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortTRAPConnection.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortTRAPConnection.setDescription('This indicates whether this port is designated for use by subscribers as a Telephone Recording And Playback (TRAP) device in Unity web applications and e-mail clients.')
ciscoUnityPortActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortActivity.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortActivity.setDescription('The port activity of the voice mail port. This value is available to monitor port activity over time. The specific value of this object is not as useful as monitoring for the changing of this value. During normal operation this value should change several times during a call. You can use this value to watch for abnormal operation that might indicate a problem with this voice mail port. For example, if you monitor this value and do not detect a change in value for a long time (like 60 minutes) it could be an indication of a problem with that voice mail port. There are other explanations as well so more investigation on the server should be conducted before taking any action with the voice mail port.')
ciscoUnityPortObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 1, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortObjectId.setReference('RFC-4122 A Universally Unique IDentifier (UUID) URN Namespace.')
if mibBuilder.loadTexts: ciscoUnityPortObjectId.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortObjectId.setDescription('A globally unique, system-generated identifier for a port object. The ObjectId (UUID or GUID) uniquely identifies the port for the lifetime of this port. A UUID is 128 bits long, and can guarantee uniqueness across space and time.')
ciscoUnityServerState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 1), CiscoUnityServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityServerState.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityServerState.setDescription('The current state of the local Unity server.')
ciscoUnityPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPorts.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPorts.setDescription('The total number of ports on the local Unity server.')
ciscoUnityPortsActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortsActive.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortsActive.setDescription('The total number of ports that are currently active with calls.')
ciscoUnityPortsInbound = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortsInbound.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortsInbound.setDescription('The total number of ports that are designated to answer incoming calls.')
ciscoUnityPortsInboundActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortsInboundActive.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortsInboundActive.setDescription('The number of inbound ports that are currently active with calls.')
ciscoUnityPortsOutbound = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortsOutbound.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortsOutbound.setDescription('The total number of ports that are designated for outbound calls (includes message notification, MWI dialout and AMIS delivery).')
ciscoUnityPortsOutboundActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityPortsOutboundActive.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortsOutboundActive.setDescription('The number of outbound ports that are currently active with calls.')
ciscoUnityLicLanguagesMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicLanguagesMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicLanguagesMax.setDescription('The number of languages that Unity may use concurrently.')
ciscoUnityLicTTSSessionsMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicTTSSessionsMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicTTSSessionsMax.setDescription('The maximum number of ports licensed for Text-to-Speech operations.')
ciscoUnityLicSubscribersMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicSubscribersMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicSubscribersMax.setDescription('The maximum number of subscribers licensed.')
ciscoUnityLicUMSubscribersMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicUMSubscribersMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicUMSubscribersMax.setDescription('The maximum number of subscribers licensed for unified messaging.')
ciscoUnityLicVMISubscribersMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicVMISubscribersMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicVMISubscribersMax.setDescription('The maximum number of subscribers licensed for Visual Messaging Interface (VMI).')
ciscoUnityLicVoicePortsMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicVoicePortsMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicVoicePortsMax.setDescription('The maximum number of voice ports licensed.')
ciscoUnityLicBridgeSessionsMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicBridgeSessionsMax.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicBridgeSessionsMax.setDescription('The maximum number of sessions licensed for Unity Bridge on the server.')
ciscoUnityLicAMISIsLicensed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicAMISIsLicensed.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicAMISIsLicensed.setDescription('This indicates whether or not AMIS is licensed for this server.')
ciscoUnityLicMaxMsgRecLenIsLic = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicMaxMsgRecLenIsLic.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicMaxMsgRecLenIsLic.setDescription('This indicates whether or not this server is licensed to record voice mail messages of any length.')
ciscoUnityLicPoolingIsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicPoolingIsEnabled.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicPoolingIsEnabled.setDescription('This indicates whether or not license pooling is enabled for this server.')
ciscoUnityLicVPIMIsLicensed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicVPIMIsLicensed.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicVPIMIsLicensed.setDescription('This indicates whether or not VPIM is licensed for this server.')
ciscoUnityLicPrimaryServerIsLic = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicPrimaryServerIsLic.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicPrimaryServerIsLic.setDescription('This indicates whether or not this server is licensed to run as a primary/stand-alone Unity server.')
ciscoUnityLicSecondServerIsLic = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicSecondServerIsLic.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicSecondServerIsLic.setDescription('This indicates whether or not a secondary (failover) server is licensed.')
ciscoUnityLicUtilSecondServer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicUtilSecondServer.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicUtilSecondServer.setDescription('This indicates the current number of licensed secondary servers.')
ciscoUnityLicUtilSubs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicUtilSubs.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicUtilSubs.setDescription('This indicates the current number of licensed subscribers.')
ciscoUnityLicUtilVMISubs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 2, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoUnityLicUtilVMISubs.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicUtilVMISubs.setDescription('This indicates the current number of subscribers that are licensed for VMI.')
ciscoUnityEventType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("informational", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventType.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventType.setDescription('The classification on the event severity. error(1) Error events indicate significant problems that the user should know about warning(2) Warning events indicate problems that are not immediately significant, but that may indicate conditions that could cause future problems. informational(3) Information events indicate infrequent but significant successful operations.')
ciscoUnityEventSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 2), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventSource.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventSource.setDescription('The software that logged the event, which can be either a program name, a component of the system, or a component of a large program.')
ciscoUnityEventCategory = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventCategory.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventCategory.setDescription('A classification of the event by the event source.')
ciscoUnityEventId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventId.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventId.setDescription('A number identifying the particular event type. The EventID and EventSource can be used to troubleshoot system problems.')
ciscoUnityEventDate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 5), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventDate.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventDate.setDescription('The date and time the event occurred.')
ciscoUnityEventUser = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 6), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventUser.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventUser.setDescription('The user name of the user on whose behalf the event occurred. This name is the client ID if the event was actually caused by a server process, or the primary ID if impersonation is not taking place.')
ciscoUnityEventComputer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 7), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventComputer.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventComputer.setDescription('The name of the computer where the event occurred.')
ciscoUnityEventDescription = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 8), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventDescription.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventDescription.setDescription('The event description indicates what happened or the significance of the event.')
ciscoUnityEventEMSNotes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 385, 1, 3, 9), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciscoUnityEventEMSNotes.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityEventEMSNotes.setDescription('The contents of the notes field as entered into the EMS for this monitored event.')
ciscoUnityMonitoredEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 385, 0, 1)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityEventType"), ("CISCO-UNITY-MIB", "ciscoUnityEventSource"), ("CISCO-UNITY-MIB", "ciscoUnityEventCategory"), ("CISCO-UNITY-MIB", "ciscoUnityEventId"), ("CISCO-UNITY-MIB", "ciscoUnityEventDate"), ("CISCO-UNITY-MIB", "ciscoUnityEventUser"), ("CISCO-UNITY-MIB", "ciscoUnityEventComputer"), ("CISCO-UNITY-MIB", "ciscoUnityEventDescription"), ("CISCO-UNITY-MIB", "ciscoUnityEventEMSNotes"))
if mibBuilder.loadTexts: ciscoUnityMonitoredEvent.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityMonitoredEvent.setDescription('This Notification contains information from the Windows Event Log concerning an event that the Event Monitoring Service is configured to monitor.')
ciscoUnityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 1))
ciscoUnityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2))
ciscoUnityMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 1, 1)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityNotificationsInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityNotificationsGroup"), ("CISCO-UNITY-MIB", "ciscoUnityPortInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityMIBCompliance = ciscoUnityMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUnityMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco Unity MIB')
ciscoUnityMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 1, 2)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityNotificationsInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityNotificationsGroup"), ("CISCO-UNITY-MIB", "ciscoUnityLicInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityPortInfoGroup"), ("CISCO-UNITY-MIB", "ciscoUnityPortInfoGroup2"), ("CISCO-UNITY-MIB", "ciscoUnityPortInfoGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityMIBComplianceRev1 = ciscoUnityMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityMIBComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco Unity MIB')
ciscoUnityInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 1)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityName"), ("CISCO-UNITY-MIB", "ciscoUnityVersion"), ("CISCO-UNITY-MIB", "ciscoUnityServerState"), ("CISCO-UNITY-MIB", "ciscoUnityPorts"), ("CISCO-UNITY-MIB", "ciscoUnityPortsActive"), ("CISCO-UNITY-MIB", "ciscoUnityPortsInbound"), ("CISCO-UNITY-MIB", "ciscoUnityPortsInboundActive"), ("CISCO-UNITY-MIB", "ciscoUnityPortsOutbound"), ("CISCO-UNITY-MIB", "ciscoUnityPortsOutboundActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityInfoGroup = ciscoUnityInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityInfoGroup.setDescription('A collection of objects which provide info about the local Unity server.')
ciscoUnityPortInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 2)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityPortNumber"), ("CISCO-UNITY-MIB", "ciscoUnityPortIntegration"), ("CISCO-UNITY-MIB", "ciscoUnityPortExtension"), ("CISCO-UNITY-MIB", "ciscoUnityPortEnabled"), ("CISCO-UNITY-MIB", "ciscoUnityPortAnswerCalls"), ("CISCO-UNITY-MIB", "ciscoUnityPortMessageNotif"), ("CISCO-UNITY-MIB", "ciscoUnityPortDialoutMWI"), ("CISCO-UNITY-MIB", "ciscoUnityPortAMISDelivery"), ("CISCO-UNITY-MIB", "ciscoUnityPortTRAPConnection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityPortInfoGroup = ciscoUnityPortInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortInfoGroup.setDescription('A collection of objects which provide info about the port configuration of a Unity server.')
ciscoUnityNotificationsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 3)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityEventType"), ("CISCO-UNITY-MIB", "ciscoUnityEventSource"), ("CISCO-UNITY-MIB", "ciscoUnityEventCategory"), ("CISCO-UNITY-MIB", "ciscoUnityEventId"), ("CISCO-UNITY-MIB", "ciscoUnityEventDate"), ("CISCO-UNITY-MIB", "ciscoUnityEventUser"), ("CISCO-UNITY-MIB", "ciscoUnityEventComputer"), ("CISCO-UNITY-MIB", "ciscoUnityEventDescription"), ("CISCO-UNITY-MIB", "ciscoUnityEventEMSNotes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityNotificationsInfoGroup = ciscoUnityNotificationsInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityNotificationsInfoGroup.setDescription('A collection of objects which provide info about all the Notifications generated by the Cisco Unity Agent.')
ciscoUnityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 4)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityMonitoredEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityNotificationsGroup = ciscoUnityNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityNotificationsGroup.setDescription('A collection of notifications that are generated by the CISCO UNITY MIB Agent.')
ciscoUnityLicInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 5)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityLicLanguagesMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicTTSSessionsMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicSubscribersMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicUMSubscribersMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicVMISubscribersMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicVoicePortsMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicBridgeSessionsMax"), ("CISCO-UNITY-MIB", "ciscoUnityLicAMISIsLicensed"), ("CISCO-UNITY-MIB", "ciscoUnityLicMaxMsgRecLenIsLic"), ("CISCO-UNITY-MIB", "ciscoUnityLicPoolingIsEnabled"), ("CISCO-UNITY-MIB", "ciscoUnityLicVPIMIsLicensed"), ("CISCO-UNITY-MIB", "ciscoUnityLicPrimaryServerIsLic"), ("CISCO-UNITY-MIB", "ciscoUnityLicSecondServerIsLic"), ("CISCO-UNITY-MIB", "ciscoUnityLicUtilSecondServer"), ("CISCO-UNITY-MIB", "ciscoUnityLicUtilSubs"), ("CISCO-UNITY-MIB", "ciscoUnityLicUtilVMISubs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityLicInfoGroup = ciscoUnityLicInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityLicInfoGroup.setDescription('A collection of objects which provide info about the local Unity server.')
ciscoUnityPortInfoGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 6)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityPortActivity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityPortInfoGroup2 = ciscoUnityPortInfoGroup2.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortInfoGroup2.setDescription('A collection of objects which provide info about the port configuration of a Unity Connection server.')
ciscoUnityPortInfoGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 385, 2, 2, 7)).setObjects(("CISCO-UNITY-MIB", "ciscoUnityPortObjectId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityPortInfoGroup3 = ciscoUnityPortInfoGroup3.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityPortInfoGroup3.setDescription('A collection of objects which provide info about the port configuration of a Unity Connection server. This object group is only implemented on Cisco Unity Connection.')
mibBuilder.exportSymbols("CISCO-UNITY-MIB", ciscoUnityServerState=ciscoUnityServerState, ciscoUnityPortsInbound=ciscoUnityPortsInbound, ciscoUnityLicUtilVMISubs=ciscoUnityLicUtilVMISubs, ciscoUnityPortDialoutMWI=ciscoUnityPortDialoutMWI, ciscoUnityMIBConform=ciscoUnityMIBConform, ciscoUnityGlobalInfo=ciscoUnityGlobalInfo, ciscoUnityPortObjectId=ciscoUnityPortObjectId, ciscoUnityPortAMISDelivery=ciscoUnityPortAMISDelivery, ciscoUnityLicVoicePortsMax=ciscoUnityLicVoicePortsMax, CiscoUnityServerStatus=CiscoUnityServerStatus, ciscoUnityLicMaxMsgRecLenIsLic=ciscoUnityLicMaxMsgRecLenIsLic, ciscoUnityLicLanguagesMax=ciscoUnityLicLanguagesMax, ciscoUnityMonitoredEvent=ciscoUnityMonitoredEvent, ciscoUnityPortEnabled=ciscoUnityPortEnabled, ciscoUnityPortsOutbound=ciscoUnityPortsOutbound, ciscoUnityLicSecondServerIsLic=ciscoUnityLicSecondServerIsLic, ciscoUnityLicUtilSubs=ciscoUnityLicUtilSubs, ciscoUnityNotificationsInfoGroup=ciscoUnityNotificationsInfoGroup, ciscoUnityTable=ciscoUnityTable, ciscoUnityLicSubscribersMax=ciscoUnityLicSubscribersMax, ciscoUnityLicVMISubscribersMax=ciscoUnityLicVMISubscribersMax, ciscoUnityPortNumber=ciscoUnityPortNumber, ciscoUnityMIBNotifs=ciscoUnityMIBNotifs, ciscoUnityMIBObjects=ciscoUnityMIBObjects, ciscoUnityPortEntry=ciscoUnityPortEntry, ciscoUnityLicInfoGroup=ciscoUnityLicInfoGroup, ciscoUnityMIBCompliance=ciscoUnityMIBCompliance, ciscoUnityMIBGroups=ciscoUnityMIBGroups, ciscoUnityNotificationsGroup=ciscoUnityNotificationsGroup, ciscoUnityEventId=ciscoUnityEventId, ciscoUnityPorts=ciscoUnityPorts, ciscoUnityPortsActive=ciscoUnityPortsActive, ciscoUnityEventType=ciscoUnityEventType, CiscoUnityIndex=CiscoUnityIndex, ciscoUnityPortsInboundActive=ciscoUnityPortsInboundActive, ciscoUnityEventComputer=ciscoUnityEventComputer, ciscoUnityEventCategory=ciscoUnityEventCategory, ciscoUnityPortInfoGroup=ciscoUnityPortInfoGroup, ciscoUnityLicAMISIsLicensed=ciscoUnityLicAMISIsLicensed, ciscoUnityPortIntegration=ciscoUnityPortIntegration, ciscoUnityPortTRAPConnection=ciscoUnityPortTRAPConnection, ciscoUnityEventEMSNotes=ciscoUnityEventEMSNotes, ciscoUnityPortsOutboundActive=ciscoUnityPortsOutboundActive, ciscoUnityMIBComplianceRev1=ciscoUnityMIBComplianceRev1, ciscoUnityPortAnswerCalls=ciscoUnityPortAnswerCalls, ciscoUnityGeneralInfo=ciscoUnityGeneralInfo, ciscoUnityLicBridgeSessionsMax=ciscoUnityLicBridgeSessionsMax, ciscoUnityPortTable=ciscoUnityPortTable, ciscoUnityEventDescription=ciscoUnityEventDescription, ciscoUnityName=ciscoUnityName, ciscoUnityInfoGroup=ciscoUnityInfoGroup, ciscoUnityLicUtilSecondServer=ciscoUnityLicUtilSecondServer, ciscoUnityLicVPIMIsLicensed=ciscoUnityLicVPIMIsLicensed, ciscoUnityPortInfoGroup3=ciscoUnityPortInfoGroup3, ciscoUnityVersion=ciscoUnityVersion, ciscoUnityPortMessageNotif=ciscoUnityPortMessageNotif, ciscoUnityPortActivity=ciscoUnityPortActivity, ciscoUnityLicPoolingIsEnabled=ciscoUnityLicPoolingIsEnabled, ciscoUnityEventDate=ciscoUnityEventDate, ciscoUnityEntry=ciscoUnityEntry, ciscoUnityMIBCompliances=ciscoUnityMIBCompliances, ciscoUnityPortExtension=ciscoUnityPortExtension, ciscoUnityPortInfoGroup2=ciscoUnityPortInfoGroup2, ciscoUnityPortIndex=ciscoUnityPortIndex, ciscoUnityMIB=ciscoUnityMIB, ciscoUnityNotificationsInfo=ciscoUnityNotificationsInfo, ciscoUnityLicTTSSessionsMax=ciscoUnityLicTTSSessionsMax, ciscoUnityLicUMSubscribersMax=ciscoUnityLicUMSubscribersMax, ciscoUnityEventSource=ciscoUnityEventSource, PYSNMP_MODULE_ID=ciscoUnityMIB, ciscoUnityLicPrimaryServerIsLic=ciscoUnityLicPrimaryServerIsLic, ciscoUnityEventUser=ciscoUnityEventUser, ciscoUnityIndex=ciscoUnityIndex)
