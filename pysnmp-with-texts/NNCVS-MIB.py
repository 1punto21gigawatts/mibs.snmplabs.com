#
# PySNMP MIB module NNCVS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNCVS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:23:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nncExtensions, = mibBuilder.importSymbols("NNCGNI0001-SMI", "nncExtensions")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, TimeTicks, ObjectIdentity, Bits, IpAddress, Counter64, MibIdentifier, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "TimeTicks", "ObjectIdentity", "Bits", "IpAddress", "Counter64", "MibIdentifier", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nncVS = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 72))
if mibBuilder.loadTexts: nncVS.setLastUpdated('9901060924Z')
if mibBuilder.loadTexts: nncVS.setOrganization('Newbridge Networks Corporation')
if mibBuilder.loadTexts: nncVS.setContactInfo('Newbridge Networks Corporation Postal: 600 March Road Kanata, Ontario Canada K2K 2E6 Phone: +1 613 591 3600 Fax: +1 613 591 3680')
if mibBuilder.loadTexts: nncVS.setDescription('This module contains definitions for monitoring and configuring Newbridge Voiceband Services cards.')
nncVSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 1))
nncVSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 2))
nncVSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 3))
nncVSCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 4))
nncVSConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 1))
nncVSStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2))
nncVSStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1), )
if mibBuilder.loadTexts: nncVSStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: nncVSStatisticsTable.setDescription('The nncVSStatisticsTable contains VS Statistics on a per channel basis.')
nncVSStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncVSStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: nncVSStatisticsEntry.setDescription('An entry in the nncVSStatisticsTable.')
nncVSLOCSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSLOCSeconds.setStatus('current')
if mibBuilder.loadTexts: nncVSLOCSeconds.setDescription('This count gives the number seconds for which Loss of Continuity was declared.')
nncVSRemoteChanFailureSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSRemoteChanFailureSeconds.setStatus('current')
if mibBuilder.loadTexts: nncVSRemoteChanFailureSeconds.setDescription('This count gives the number seconds for which the remote channel was in a failure state.')
nncVSUnderrunSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSUnderrunSeconds.setStatus('current')
if mibBuilder.loadTexts: nncVSUnderrunSeconds.setDescription('This count gives the number seconds for which Underrun was declared.')
nncVSBufferUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSBufferUnderflows.setStatus('current')
if mibBuilder.loadTexts: nncVSBufferUnderflows.setDescription('This count gives the number of jitter buffer underflows.')
nncVSBufferOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSBufferOverflows.setStatus('current')
if mibBuilder.loadTexts: nncVSBufferOverflows.setDescription('This count gives the number of jitter buffer overflows.')
nncVSSequenceDiscontinuities = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSSequenceDiscontinuities.setStatus('current')
if mibBuilder.loadTexts: nncVSSequenceDiscontinuities.setDescription('This count gives the number of sequence discontinuities in packets received.')
nncVSSpeechRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSSpeechRx.setStatus('current')
if mibBuilder.loadTexts: nncVSSpeechRx.setDescription('The number of speech subframes received by the channel.')
nncVSSpeechTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSSpeechTx.setStatus('current')
if mibBuilder.loadTexts: nncVSSpeechTx.setDescription('The number of speech subframes transmitted by the channel.')
nncVSFaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSFaxRx.setStatus('current')
if mibBuilder.loadTexts: nncVSFaxRx.setDescription('The number of fax subframes received by the channel.')
nncVSFaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSFaxTx.setStatus('current')
if mibBuilder.loadTexts: nncVSFaxTx.setDescription('The number of fax subframes transmitted by the channel.')
nncVSBypassRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSBypassRx.setStatus('current')
if mibBuilder.loadTexts: nncVSBypassRx.setDescription('The number of bypass subframes received by the channel.')
nncVSBypassTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSBypassTx.setStatus('current')
if mibBuilder.loadTexts: nncVSBypassTx.setDescription('The number of bypass subframes transmitted by the channel.')
nncVSCASRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSCASRx.setStatus('current')
if mibBuilder.loadTexts: nncVSCASRx.setDescription('The number of CAS subframes received by the channel.')
nncVSCASTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSCASTx.setStatus('current')
if mibBuilder.loadTexts: nncVSCASTx.setDescription('The number of CAS subframes transmitted by the channel.')
nncVSDTMFDigitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSDTMFDigitsRx.setStatus('current')
if mibBuilder.loadTexts: nncVSDTMFDigitsRx.setDescription('The number of DTMF subframes received by the channel.')
nncVSDTMFDigitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSDTMFDigitsTx.setStatus('current')
if mibBuilder.loadTexts: nncVSDTMFDigitsTx.setDescription('The number of DTMF subframes transmitted by the channel.')
nncVSSilenceRx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSSilenceRx.setStatus('current')
if mibBuilder.loadTexts: nncVSSilenceRx.setDescription('The number of silence subframes received by the channel.')
nncVSSilenceTx = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 72, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncVSSilenceTx.setStatus('current')
if mibBuilder.loadTexts: nncVSSilenceTx.setDescription('The number of silence subframes transmitted by the channel.')
nncVSGeneralStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 72, 3, 1)).setObjects(("NNCVS-MIB", "nncVSLOCSeconds"), ("NNCVS-MIB", "nncVSRemoteChanFailureSeconds"), ("NNCVS-MIB", "nncVSUnderrunSeconds"), ("NNCVS-MIB", "nncVSBufferUnderflows"), ("NNCVS-MIB", "nncVSBufferOverflows"), ("NNCVS-MIB", "nncVSSequenceDiscontinuities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVSGeneralStatisticsGroup = nncVSGeneralStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: nncVSGeneralStatisticsGroup.setDescription('Collection of objects providing raw general VS stats.')
nncVSSubframeStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 72, 3, 2)).setObjects(("NNCVS-MIB", "nncVSSpeechRx"), ("NNCVS-MIB", "nncVSSpeechTx"), ("NNCVS-MIB", "nncVSFaxRx"), ("NNCVS-MIB", "nncVSFaxTx"), ("NNCVS-MIB", "nncVSBypassRx"), ("NNCVS-MIB", "nncVSBypassTx"), ("NNCVS-MIB", "nncVSCASRx"), ("NNCVS-MIB", "nncVSCASTx"), ("NNCVS-MIB", "nncVSDTMFDigitsRx"), ("NNCVS-MIB", "nncVSDTMFDigitsTx"), ("NNCVS-MIB", "nncVSSilenceRx"), ("NNCVS-MIB", "nncVSSilenceTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVSSubframeStatisticsGroup = nncVSSubframeStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: nncVSSubframeStatisticsGroup.setDescription('Collection of objects providing raw VS subframe stats.')
nncVSCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 72, 4, 1)).setObjects(("NNCVS-MIB", "nncVSGeneralStatisticsGroup"), ("NNCVS-MIB", "nncVSSubframeStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVSCompliance = nncVSCompliance.setStatus('current')
if mibBuilder.loadTexts: nncVSCompliance.setDescription('The compliance statement for Newbridge SNMP.')
mibBuilder.exportSymbols("NNCVS-MIB", nncVSSpeechTx=nncVSSpeechTx, nncVSSpeechRx=nncVSSpeechRx, nncVSGroups=nncVSGroups, PYSNMP_MODULE_ID=nncVS, nncVS=nncVS, nncVSBypassRx=nncVSBypassRx, nncVSSilenceTx=nncVSSilenceTx, nncVSStatisticsTable=nncVSStatisticsTable, nncVSBufferUnderflows=nncVSBufferUnderflows, nncVSFaxTx=nncVSFaxTx, nncVSBypassTx=nncVSBypassTx, nncVSLOCSeconds=nncVSLOCSeconds, nncVSBufferOverflows=nncVSBufferOverflows, nncVSDTMFDigitsTx=nncVSDTMFDigitsTx, nncVSUnderrunSeconds=nncVSUnderrunSeconds, nncVSCompliance=nncVSCompliance, nncVSTraps=nncVSTraps, nncVSStatistics=nncVSStatistics, nncVSSubframeStatisticsGroup=nncVSSubframeStatisticsGroup, nncVSDTMFDigitsRx=nncVSDTMFDigitsRx, nncVSGeneralStatisticsGroup=nncVSGeneralStatisticsGroup, nncVSObjects=nncVSObjects, nncVSSilenceRx=nncVSSilenceRx, nncVSConfiguration=nncVSConfiguration, nncVSStatisticsEntry=nncVSStatisticsEntry, nncVSSequenceDiscontinuities=nncVSSequenceDiscontinuities, nncVSCASTx=nncVSCASTx, nncVSRemoteChanFailureSeconds=nncVSRemoteChanFailureSeconds, nncVSCASRx=nncVSCASRx, nncVSFaxRx=nncVSFaxRx, nncVSCompliances=nncVSCompliances)
