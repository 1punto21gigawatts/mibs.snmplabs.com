#
# PySNMP MIB module GBNL3DhcpRelay-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBNL3DhcpRelay-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:18:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
gbnL3, = mibBuilder.importSymbols("GREENTECH-MASTER-MIB", "gbnL3")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Counter64, NotificationType, MibIdentifier, IpAddress, Integer32, ObjectIdentity, iso, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Counter64", "NotificationType", "MibIdentifier", "IpAddress", "Integer32", "ObjectIdentity", "iso", "Counter32", "Gauge32")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
gbnL3DhcpRelay = ModuleIdentity((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5))
gbnL3DhcpRelay.setRevisions(('1901-05-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: gbnL3DhcpRelay.setRevisionsDescriptions(('Initial MIB creation.',))
if mibBuilder.loadTexts: gbnL3DhcpRelay.setLastUpdated('0105030000Z')
if mibBuilder.loadTexts: gbnL3DhcpRelay.setOrganization('Greentech')
if mibBuilder.loadTexts: gbnL3DhcpRelay.setContactInfo('Adam Armstrong E-mail: adama@observium.org')
if mibBuilder.loadTexts: gbnL3DhcpRelay.setDescription('GBN Enterprise MIB definition.')
dhcpRelayEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayEnableStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayEnableStatus.setDescription('')
dhcpRelayDebugStatus = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayDebugStatus.setStatus('obsolete')
if mibBuilder.loadTexts: dhcpRelayDebugStatus.setDescription('')
dhcpRelayGroupTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3), )
if mibBuilder.loadTexts: dhcpRelayGroupTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayGroupTable.setDescription('')
dhcpRelayGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1), ).setIndexNames((0, "GBNL3DhcpRelay-MIB", "dhcpRelaySvrGroupNo"))
if mibBuilder.loadTexts: dhcpRelayGroupEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayGroupEntry.setDescription('Table entry for switch interface control and status information.')
dhcpRelaySvrGroupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelaySvrGroupNo.setStatus('current')
if mibBuilder.loadTexts: dhcpRelaySvrGroupNo.setDescription('Group number')
dhcpRelayServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayServerIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerIp.setDescription('Dhcp Server IP Address of the group')
dhcpRelayIfaceTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4), )
if mibBuilder.loadTexts: dhcpRelayIfaceTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayIfaceTable.setDescription('')
dhcpRelayIfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1), ).setIndexNames((0, "GBNL3DhcpRelay-MIB", "dhcpRelaySvrVlanIfaceNo"))
if mibBuilder.loadTexts: dhcpRelayIfaceEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayIfaceEntry.setDescription('Table entry for switch interface control and status information.')
dhcpRelaySvrVlanIfaceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelaySvrVlanIfaceNo.setStatus('current')
if mibBuilder.loadTexts: dhcpRelaySvrVlanIfaceNo.setDescription('interface number')
dhcpRelayVlanIfaceGroupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayVlanIfaceGroupNo.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayVlanIfaceGroupNo.setDescription('Group number')
dhcpRelayHideServerIp = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayHideServerIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayHideServerIp.setDescription('')
mibBuilder.exportSymbols("GBNL3DhcpRelay-MIB", PYSNMP_MODULE_ID=gbnL3DhcpRelay, dhcpRelayIfaceEntry=dhcpRelayIfaceEntry, dhcpRelaySvrVlanIfaceNo=dhcpRelaySvrVlanIfaceNo, dhcpRelayVlanIfaceGroupNo=dhcpRelayVlanIfaceGroupNo, dhcpRelayDebugStatus=dhcpRelayDebugStatus, dhcpRelaySvrGroupNo=dhcpRelaySvrGroupNo, gbnL3DhcpRelay=gbnL3DhcpRelay, dhcpRelayGroupEntry=dhcpRelayGroupEntry, dhcpRelayServerIp=dhcpRelayServerIp, dhcpRelayIfaceTable=dhcpRelayIfaceTable, dhcpRelayHideServerIp=dhcpRelayHideServerIp, dhcpRelayGroupTable=dhcpRelayGroupTable, dhcpRelayEnableStatus=dhcpRelayEnableStatus)
