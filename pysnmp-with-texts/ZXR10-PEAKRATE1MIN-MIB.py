#
# PySNMP MIB module ZXR10-PEAKRATE1MIN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-PEAKRATE1MIN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:48:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, NotificationType, Counter32, Integer32, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Bits, ObjectIdentity, ModuleIdentity, enterprises, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Counter32", "Integer32", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Bits", "ObjectIdentity", "ModuleIdentity", "enterprises", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10switch = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102))
zxr10Peakrate1Min = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31))
class DisplayString(OctetString):
    pass

portPeakrateTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1), )
if mibBuilder.loadTexts: portPeakrateTable.setStatus('current')
if mibBuilder.loadTexts: portPeakrateTable.setDescription('A table of objects that display the 1min peak rate statistics information. This group will be implemented in managed Ethernet switches devices.')
portPeakrateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1), ).setIndexNames((0, "ZXR10-PEAKRATE1MIN-MIB", "portIfOutIndex"))
if mibBuilder.loadTexts: portPeakrateEntry.setStatus('current')
if mibBuilder.loadTexts: portPeakrateEntry.setDescription('A set of objects that display the statistics information of the port. ')
portIfOutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIfOutIndex.setStatus('current')
if mibBuilder.loadTexts: portIfOutIndex.setDescription("A unique value for each interface. Its value ranges between 1 and the value of ifNumber. The value for each interface must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization.")
portPeakrateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portPeakrateEnable.setStatus('current')
if mibBuilder.loadTexts: portPeakrateEnable.setDescription('The state of the port`s peak rate statistic function.')
portInUnicastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 3), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portInUnicastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portInUnicastPktsPeak.setDescription('The unicast packet peak rate of the port IN direction in ppm(packets per minute).')
portInUnicastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portInUnicastTime.setStatus('current')
if mibBuilder.loadTexts: portInUnicastTime.setDescription('The unicast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port IN direction.')
portInMulticastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 5), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portInMulticastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portInMulticastPktsPeak.setDescription('The multicast packet peak rate of the port IN direction in ppm(packets per minute).')
portInMulticastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portInMulticastTime.setStatus('current')
if mibBuilder.loadTexts: portInMulticastTime.setDescription('The multicast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port IN direction .')
portInBroadcastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 7), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portInBroadcastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portInBroadcastPktsPeak.setDescription('The broadcast packet peak rate of the port IN direction in ppm(packets per minute).')
portInBroadcastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portInBroadcastTime.setStatus('current')
if mibBuilder.loadTexts: portInBroadcastTime.setDescription('The broadcast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port IN direction.')
portInTotalErrPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 9), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portInTotalErrPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portInTotalErrPktsPeak.setDescription('The total error packet peak rate of the port IN direction in ppm(packets per minute).')
portInTotalErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portInTotalErrTime.setStatus('current')
if mibBuilder.loadTexts: portInTotalErrTime.setDescription('The total error packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port IN direction .')
portOutUnicastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 11), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutUnicastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portOutUnicastPktsPeak.setDescription('The unicast packet peak rate of the port OUT direction in ppm(packets per minute).')
portOutUnicastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutUnicastTime.setStatus('current')
if mibBuilder.loadTexts: portOutUnicastTime.setDescription('The unicast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port OUT direction.')
portOutMulticastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 13), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutMulticastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portOutMulticastPktsPeak.setDescription('The multicast packet peak rate of the port OUT direction in ppm(packets per minute).')
portOutMulticastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutMulticastTime.setStatus('current')
if mibBuilder.loadTexts: portOutMulticastTime.setDescription('The multicast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port OUT direction.')
portOutBroadcastPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 15), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutBroadcastPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portOutBroadcastPktsPeak.setDescription('The broadcast packet peak rate of the port OUT direction in ppm(packets per minute).')
portOutBroadcastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutBroadcastTime.setStatus('current')
if mibBuilder.loadTexts: portOutBroadcastTime.setDescription('The broadcast packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port OUT direction.')
portOutTotalErrPktsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 17), Counter64()).setUnits('ppm').setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutTotalErrPktsPeak.setStatus('current')
if mibBuilder.loadTexts: portOutTotalErrPktsPeak.setDescription('The total error packet peak rate of the port OUT direction in ppm(packets per minute).')
portOutTotalErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOutTotalErrTime.setStatus('current')
if mibBuilder.loadTexts: portOutTotalErrTime.setDescription('The total error packet peak rate time(YYYYMMDD-hh:mm:ss,such as 20090622-09:30:20) of the port OUT direction.')
portClearPeakPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 31, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("clear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portClearPeakPkts.setStatus('current')
if mibBuilder.loadTexts: portClearPeakPkts.setDescription('Clear peak statistics of the whole ports which are enable.')
mibBuilder.exportSymbols("ZXR10-PEAKRATE1MIN-MIB", portInTotalErrPktsPeak=portInTotalErrPktsPeak, portOutMulticastTime=portOutMulticastTime, portPeakrateTable=portPeakrateTable, portOutUnicastPktsPeak=portOutUnicastPktsPeak, portInUnicastPktsPeak=portInUnicastPktsPeak, portOutTotalErrTime=portOutTotalErrTime, portIfOutIndex=portIfOutIndex, portPeakrateEntry=portPeakrateEntry, portOutBroadcastTime=portOutBroadcastTime, portInUnicastTime=portInUnicastTime, portInMulticastPktsPeak=portInMulticastPktsPeak, portInBroadcastTime=portInBroadcastTime, portInBroadcastPktsPeak=portInBroadcastPktsPeak, portPeakrateEnable=portPeakrateEnable, zxr10Peakrate1Min=zxr10Peakrate1Min, DisplayString=DisplayString, portOutBroadcastPktsPeak=portOutBroadcastPktsPeak, zxr10switch=zxr10switch, portOutUnicastTime=portOutUnicastTime, portOutTotalErrPktsPeak=portOutTotalErrPktsPeak, portInTotalErrTime=portInTotalErrTime, portInMulticastTime=portInMulticastTime, zxr10=zxr10, portOutMulticastPktsPeak=portOutMulticastPktsPeak, portClearPeakPkts=portClearPeakPkts, zte=zte)
