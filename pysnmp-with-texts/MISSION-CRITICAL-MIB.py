#
# PySNMP MIB module MISSION-CRITICAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MISSION-CRITICAL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:12:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Bits, NotificationType, enterprises, Gauge32, Counter32, Unsigned32, IpAddress, Integer32, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Bits", "NotificationType", "enterprises", "Gauge32", "Counter32", "Unsigned32", "IpAddress", "Integer32", "ModuleIdentity", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
missionCritical = MibIdentifier((1, 3, 6, 1, 4, 1, 2349))
mcsCompanyInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 1))
mcsSoftware = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2))
eemProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 1))
omProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 2))
ownershipDetails = MibScalar((1, 3, 6, 1, 4, 1, 2349, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ownershipDetails.setStatus('mandatory')
if mibBuilder.loadTexts: ownershipDetails.setDescription('Details of the company providing this MIB')
contactDetails = MibScalar((1, 3, 6, 1, 4, 1, 2349, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactDetails.setStatus('mandatory')
if mibBuilder.loadTexts: contactDetails.setDescription('Contact responsible for maintaining this MIB')
eemService = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1))
version = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
if mibBuilder.loadTexts: version.setDescription('The version of the EEM Agent running')
primaryServer = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: primaryServer.setStatus('mandatory')
if mibBuilder.loadTexts: primaryServer.setDescription('The Primary Server for this EEM Agent')
serviceState = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceState.setStatus('mandatory')
if mibBuilder.loadTexts: serviceState.setDescription('State of the service. Running is 1, stopped is 2')
serviceUpTime = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceUpTime.setStatus('mandatory')
if mibBuilder.loadTexts: serviceUpTime.setDescription('No. of milliseconds since the service was started')
redTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redTrapCount.setStatus('deprecated')
if mibBuilder.loadTexts: redTrapCount.setDescription('The number of red alert traps sent since the service was started')
orangeTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: orangeTrapCount.setStatus('deprecated')
if mibBuilder.loadTexts: orangeTrapCount.setDescription('The number of orange alert traps sent since the service was started')
amberTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: amberTrapCount.setStatus('deprecated')
if mibBuilder.loadTexts: amberTrapCount.setDescription('The number of yellow alert traps sent since the service was started')
blueTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: blueTrapCount.setStatus('deprecated')
if mibBuilder.loadTexts: blueTrapCount.setDescription('The number of blue alert traps sent since the service was started')
greenTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greenTrapCount.setStatus('deprecated')
if mibBuilder.loadTexts: greenTrapCount.setDescription('The number of Green Alert Traps since the service was started')
eemLastTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2))
trapTime = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapTime.setStatus('deprecated')
if mibBuilder.loadTexts: trapTime.setDescription('Time of the last trap sent')
alertLevel = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("red", 1), ("orange", 2), ("yellow", 3), ("blue", 4), ("green", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertLevel.setStatus('mandatory')
if mibBuilder.loadTexts: alertLevel.setDescription('Alert level of the last trap sent. red=1, orange=2, yellow=3, blue=4, green=5')
logType = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("ntevent", 1), ("application", 2), ("snmp", 3), ("wbem", 4), ("activemonitoring", 5), ("performancemonitoring", 6), ("timedevent", 7), ("eem", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logType.setStatus('mandatory')
if mibBuilder.loadTexts: logType.setDescription('Log type generating the last trap sent. system=1,application=2,security=3 (fill in others here) EEM=99')
server = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: server.setStatus('mandatory')
if mibBuilder.loadTexts: server.setDescription('Server generating the last trap sent')
source = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: source.setStatus('mandatory')
if mibBuilder.loadTexts: source.setDescription('Source generating the last trap sent')
user = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user.setStatus('mandatory')
if mibBuilder.loadTexts: user.setDescription('User generating the last trap sent')
eventID = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventID.setStatus('mandatory')
if mibBuilder.loadTexts: eventID.setDescription('Event ID of the last trap sent')
description = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: description.setStatus('mandatory')
if mibBuilder.loadTexts: description.setDescription('Text description of the last trap sent')
genericTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapNumber.setStatus('mandatory')
if mibBuilder.loadTexts: genericTrapNumber.setDescription('The generic trap number of the last trap sent')
specificTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: specificTrapNumber.setStatus('mandatory')
if mibBuilder.loadTexts: specificTrapNumber.setDescription('The user specific trap number of the last trap sent')
serviceGoingDown = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,2))
if mibBuilder.loadTexts: serviceGoingDown.setDescription('The SeNTry EEM Sender service is stopping.')
serviceComingUp = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,3))
if mibBuilder.loadTexts: serviceComingUp.setDescription('The SeNTry EEM Sender service is starting.')
gathererServiceGoingDown = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,4))
if mibBuilder.loadTexts: gathererServiceGoingDown.setDescription('The SeNTry EEM Gatherer service is stopping.')
gathererServiceComingUp = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,5))
if mibBuilder.loadTexts: gathererServiceComingUp.setDescription('The SeNTry EEM Gatherer service is starting.')
eemRedAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,100)).setObjects(("MISSION-CRITICAL-MIB", "alertLevel"), ("MISSION-CRITICAL-MIB", "logType"), ("MISSION-CRITICAL-MIB", "server"), ("MISSION-CRITICAL-MIB", "source"), ("MISSION-CRITICAL-MIB", "user"), ("MISSION-CRITICAL-MIB", "eventID"), ("MISSION-CRITICAL-MIB", "description"))
if mibBuilder.loadTexts: eemRedAlert.setDescription('A SeNTry EEM red alert has been generated.')
eemOrangeAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,200)).setObjects(("MISSION-CRITICAL-MIB", "alertLevel"), ("MISSION-CRITICAL-MIB", "logType"), ("MISSION-CRITICAL-MIB", "server"), ("MISSION-CRITICAL-MIB", "source"), ("MISSION-CRITICAL-MIB", "user"), ("MISSION-CRITICAL-MIB", "eventID"), ("MISSION-CRITICAL-MIB", "description"))
if mibBuilder.loadTexts: eemOrangeAlert.setDescription('A SeNTry EEM orange alert has been generated.')
eemYellowAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,300)).setObjects(("MISSION-CRITICAL-MIB", "alertLevel"), ("MISSION-CRITICAL-MIB", "logType"), ("MISSION-CRITICAL-MIB", "server"), ("MISSION-CRITICAL-MIB", "source"), ("MISSION-CRITICAL-MIB", "user"), ("MISSION-CRITICAL-MIB", "eventID"), ("MISSION-CRITICAL-MIB", "description"))
if mibBuilder.loadTexts: eemYellowAlert.setDescription('A SeNTry EEM yellow alert has been generated.')
eemBlueAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,400)).setObjects(("MISSION-CRITICAL-MIB", "alertLevel"), ("MISSION-CRITICAL-MIB", "logType"), ("MISSION-CRITICAL-MIB", "server"), ("MISSION-CRITICAL-MIB", "source"), ("MISSION-CRITICAL-MIB", "user"), ("MISSION-CRITICAL-MIB", "eventID"), ("MISSION-CRITICAL-MIB", "description"))
if mibBuilder.loadTexts: eemBlueAlert.setDescription('A SeNTry EEM blue alert has been generated.')
eemGreenAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 1) + (0,500)).setObjects(("MISSION-CRITICAL-MIB", "alertLevel"), ("MISSION-CRITICAL-MIB", "logType"), ("MISSION-CRITICAL-MIB", "server"), ("MISSION-CRITICAL-MIB", "source"), ("MISSION-CRITICAL-MIB", "user"), ("MISSION-CRITICAL-MIB", "eventID"), ("MISSION-CRITICAL-MIB", "description"))
if mibBuilder.loadTexts: eemGreenAlert.setDescription('A SeNTry EEM green alert has been generated.')
omService = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 2, 1))
omLastTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2))
omTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omTrapTime.setStatus('deprecated')
if mibBuilder.loadTexts: omTrapTime.setDescription('Time of the last trap sent.')
omAlertLevel = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omAlertLevel.setStatus('mandatory')
if mibBuilder.loadTexts: omAlertLevel.setDescription('Alert level of the last trap sent.')
omAlertLevelName = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omAlertLevelName.setStatus('mandatory')
if mibBuilder.loadTexts: omAlertLevelName.setDescription('A textual description of the alert level for the last trap sent.')
omServer = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omServer.setStatus('mandatory')
if mibBuilder.loadTexts: omServer.setDescription('Server generating the last trap sent.')
omSource = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omSource.setStatus('mandatory')
if mibBuilder.loadTexts: omSource.setDescription('Source generating the last trap sent.')
omOwner = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omOwner.setStatus('mandatory')
if mibBuilder.loadTexts: omOwner.setDescription('User generating the last trap sent.')
omDescription = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omDescription.setStatus('mandatory')
if mibBuilder.loadTexts: omDescription.setDescription('Text description of the last trap sent.')
omCustomField1 = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omCustomField1.setStatus('mandatory')
if mibBuilder.loadTexts: omCustomField1.setDescription('Custom Field 1 defined by user')
omCustomField2 = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omCustomField2.setStatus('mandatory')
if mibBuilder.loadTexts: omCustomField2.setDescription('Custom Field 2 defined by user')
omCustomField3 = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omCustomField3.setStatus('mandatory')
if mibBuilder.loadTexts: omCustomField3.setDescription('Custom Field 3 defined by user')
omCustomField4 = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omCustomField4.setStatus('mandatory')
if mibBuilder.loadTexts: omCustomField4.setDescription('Custom Field 4 defined by user')
omCustomField5 = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omCustomField5.setStatus('mandatory')
if mibBuilder.loadTexts: omCustomField5.setDescription('Custom Field 5 defined by user')
omAlertURL = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omAlertURL.setStatus('mandatory')
if mibBuilder.loadTexts: omAlertURL.setDescription('URL used to view alert details')
omGenericTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omGenericTrapNumber.setStatus('mandatory')
if mibBuilder.loadTexts: omGenericTrapNumber.setDescription('The generic trap number of the last trap sent.')
omSpecificTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 2349, 2, 2, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omSpecificTrapNumber.setStatus('mandatory')
if mibBuilder.loadTexts: omSpecificTrapNumber.setDescription('The user specific trap number of the last trap sent')
omBlueAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,10)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omBlueAlert.setDescription('A OnePoint Operations Manager Blue Alert has been generated.')
omGreenAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,20)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omGreenAlert.setDescription('A OnePoint Operations Manager Green Alert has been generated.')
omYellowAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,30)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omYellowAlert.setDescription('A OnePoint Operations Manager Yellow Alert has been generated.')
omOrangeAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,40)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omOrangeAlert.setDescription('A OnePoint Operations Manager Orange Alert has been generated.')
omRedCriticalErrorAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,50)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omRedCriticalErrorAlert.setDescription('A OnePoint Operations Manager Critical Error Alert has been generated.')
omRedSecurityBreachAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,60)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omRedSecurityBreachAlert.setDescription('A OnePoint Operations Manager Security Breach Alert has been generated.')
omRedServiceUnavailableAlert = NotificationType((1, 3, 6, 1, 4, 1, 2349, 2, 2) + (0,70)).setObjects(("MISSION-CRITICAL-MIB", "omAlertLevel"), ("MISSION-CRITICAL-MIB", "omAlertLevelName"), ("MISSION-CRITICAL-MIB", "omServer"), ("MISSION-CRITICAL-MIB", "omSource"), ("MISSION-CRITICAL-MIB", "omOwner"), ("MISSION-CRITICAL-MIB", "omDescription"), ("MISSION-CRITICAL-MIB", "omCustomField1"), ("MISSION-CRITICAL-MIB", "omCustomField2"), ("MISSION-CRITICAL-MIB", "omCustomField3"), ("MISSION-CRITICAL-MIB", "omCustomField4"), ("MISSION-CRITICAL-MIB", "omCustomField5"), ("MISSION-CRITICAL-MIB", "omAlertURL"))
if mibBuilder.loadTexts: omRedServiceUnavailableAlert.setDescription('A OnePoint Operations Manager Service Unavailable Alert has been generated.')
mibBuilder.exportSymbols("MISSION-CRITICAL-MIB", serviceUpTime=serviceUpTime, omYellowAlert=omYellowAlert, redTrapCount=redTrapCount, eemOrangeAlert=eemOrangeAlert, mcsCompanyInfo=mcsCompanyInfo, omCustomField4=omCustomField4, gathererServiceComingUp=gathererServiceComingUp, serviceState=serviceState, omCustomField2=omCustomField2, omDescription=omDescription, missionCritical=missionCritical, omService=omService, eventID=eventID, omAlertLevelName=omAlertLevelName, serviceGoingDown=serviceGoingDown, omProductInfo=omProductInfo, trapTime=trapTime, eemService=eemService, eemYellowAlert=eemYellowAlert, omRedCriticalErrorAlert=omRedCriticalErrorAlert, omRedSecurityBreachAlert=omRedSecurityBreachAlert, blueTrapCount=blueTrapCount, greenTrapCount=greenTrapCount, omServer=omServer, mcsSoftware=mcsSoftware, serviceComingUp=serviceComingUp, omCustomField1=omCustomField1, omGreenAlert=omGreenAlert, eemLastTrap=eemLastTrap, omCustomField5=omCustomField5, omAlertURL=omAlertURL, omOrangeAlert=omOrangeAlert, omTrapTime=omTrapTime, logType=logType, amberTrapCount=amberTrapCount, user=user, specificTrapNumber=specificTrapNumber, source=source, omBlueAlert=omBlueAlert, ownershipDetails=ownershipDetails, eemRedAlert=eemRedAlert, omSpecificTrapNumber=omSpecificTrapNumber, omOwner=omOwner, gathererServiceGoingDown=gathererServiceGoingDown, orangeTrapCount=orangeTrapCount, server=server, omLastTrap=omLastTrap, omAlertLevel=omAlertLevel, omCustomField3=omCustomField3, omGenericTrapNumber=omGenericTrapNumber, description=description, genericTrapNumber=genericTrapNumber, eemGreenAlert=eemGreenAlert, primaryServer=primaryServer, alertLevel=alertLevel, version=version, omSource=omSource, eemProductInfo=eemProductInfo, eemBlueAlert=eemBlueAlert, contactDetails=contactDetails, omRedServiceUnavailableAlert=omRedServiceUnavailableAlert)
