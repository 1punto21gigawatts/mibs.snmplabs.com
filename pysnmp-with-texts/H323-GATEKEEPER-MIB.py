#
# PySNMP MIB module H323-GATEKEEPER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H323-GATEKEEPER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:21:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
MmTAddressTag, mmH323Root, MmGatekeeperID, MmErrorSeverity, MmErrorProbableCause, MmControlsCommands = mibBuilder.importSymbols("MULTI-MEDIA-MIB-TC", "MmTAddressTag", "mmH323Root", "MmGatekeeperID", "MmErrorSeverity", "MmErrorProbableCause", "MmControlsCommands")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, IpAddress, NotificationType, Counter32, Counter64, MibIdentifier, TimeTicks, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "IpAddress", "NotificationType", "Counter32", "Counter64", "MibIdentifier", "TimeTicks", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Integer32")
TextualConvention, TAddress, TruthValue, RowStatus, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TAddress", "TruthValue", "RowStatus", "DateAndTime", "DisplayString")
h323Gatekeeper = ModuleIdentity((0, 0, 8, 341, 1, 1, 6))
h323Gatekeeper.setRevisions(('1998-05-10 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h323Gatekeeper.setRevisionsDescriptions(('The initial version of the mib.',))
if mibBuilder.loadTexts: h323Gatekeeper.setLastUpdated('9812181200Z')
if mibBuilder.loadTexts: h323Gatekeeper.setOrganization('ITU-T')
if mibBuilder.loadTexts: h323Gatekeeper.setContactInfo('ITU-T SG 16')
if mibBuilder.loadTexts: h323Gatekeeper.setDescription('The MIB Module supports the functions of a H323 gatekeeper.')
h323GatekeeperZone = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 1))
h323GatekeeperSystem = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 2))
h323GatekeeperConfiguration = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 3))
h323GatekeeperStatistics = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 4))
h323GatekeeperControls = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 5))
h323GatekeeperNotifications = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 6))
h323GatekeeperSystemTable = MibTable((0, 0, 8, 341, 1, 1, 6, 2, 1), )
if mibBuilder.loadTexts: h323GatekeeperSystemTable.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemTable.setDescription('This table describes the system information for instances of a gatekeeper.')
h323GatekeeperSystemEntry = MibTableRow((0, 0, 8, 341, 1, 1, 6, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h323GatekeeperSystemEntry.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemEntry.setDescription('It contains objects that describe the system.')
h323GatekeeperSystemNameAndMaker = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemNameAndMaker.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemNameAndMaker.setDescription("This entity's name and maker name. A textual description of this entity may be appended after the maker name. ")
h323GatekeeperSystemSoftwareVersionNumber = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemSoftwareVersionNumber.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemSoftwareVersionNumber.setDescription('Software version number (major and minor)')
h323GatekeeperSystemHardwareVersionNumber = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemHardwareVersionNumber.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemHardwareVersionNumber.setDescription('Hardware version number')
h323GatekeeperSystemContact = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemContact.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemContact.setDescription('The textual identification of the contact person for this managed node, together with information on how to contact this person.')
h323GatekeeperSystemt35CountryCode = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemt35CountryCode.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemt35CountryCode.setDescription('Country code, per T.35.')
h323GatekeeperSystemt35CountryCodeExtention = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemt35CountryCodeExtention.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemt35CountryCodeExtention.setDescription('Assigned nationally.')
h323GatekeeperSystemt35ManufacturerCode = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemt35ManufacturerCode.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemt35ManufacturerCode.setDescription('Assigned nationally.')
h323GatekeeperSystemLocation = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemLocation.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemLocation.setDescription('The physical location of this system. For instance, closet, terminal room and so on')
h323GatekeeperSystemUptime = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperSystemUptime.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemUptime.setDescription('The amount of time (in hundredths of a second) since this system was last initialized. Note that this is different from sysUpTime in MIB-II because sysUpTime is the uptime of the network management portion of the system.')
h323GatekeeperSystemLocalTime = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 2, 1, 1, 10), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GatekeeperSystemLocalTime.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemLocalTime.setDescription('The local date and time of day.')
h323GatekeeperConfigurationTable = MibTable((0, 0, 8, 341, 1, 1, 6, 3, 1), )
if mibBuilder.loadTexts: h323GatekeeperConfigurationTable.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperConfigurationTable.setDescription('This table contains configuration information for instances of a gatekeeper.')
h323GatekeeperConfigurationEntry = MibTableRow((0, 0, 8, 341, 1, 1, 6, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h323GatekeeperConfigurationEntry.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperConfigurationEntry.setDescription('It contains objects that describe the configuration.')
h323GatekeeperConfigurationEnableNotifications = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GatekeeperConfigurationEnableNotifications.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperConfigurationEnableNotifications.setDescription('Indicates whether notifications should be generated for this entity. The default is disabled.')
h323GatekeeperConfigurationRegistrationMode = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acceptAll", 1), ("acceptNone", 2), ("acceptPredefined", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GatekeeperConfigurationRegistrationMode.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperConfigurationRegistrationMode.setDescription('Indicates whether gatekeeper allows : 1 - all endpoints to register dynamically 2 - no endpoints to register dynamically 3 - only predefined endpoints to register dynamically ')
h323ZoneTable = MibTable((0, 0, 8, 341, 1, 1, 6, 1, 1), )
if mibBuilder.loadTexts: h323ZoneTable.setStatus('current')
if mibBuilder.loadTexts: h323ZoneTable.setDescription('The table contains the local zones supported by the Gatekeeper and the remote zones which the Gatekeeper may or has interacted with.')
h323ZoneEntry = MibTableRow((0, 0, 8, 341, 1, 1, 6, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H323-GATEKEEPER-MIB", "h323ZoneIndex"))
if mibBuilder.loadTexts: h323ZoneEntry.setStatus('current')
if mibBuilder.loadTexts: h323ZoneEntry.setDescription("An entry (conceptual row) in the h323ZoneTable. An entry may be created administratively or by the gatekeeper during normal gatekeeper operations. Unless otherwise specified, writable objects may be changed while h323ZoneRowStatus is 'active'.")
h323ZoneIndex = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h323ZoneIndex.setStatus('current')
if mibBuilder.loadTexts: h323ZoneIndex.setDescription('An unsigned integer value whose only significance is to uniquely identify the conceptual row. The value has no significance.')
h323ZoneZoneName = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 2), MmGatekeeperID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneZoneName.setStatus('current')
if mibBuilder.loadTexts: h323ZoneZoneName.setDescription('The name of the zone as fully qualifed name. e.g. zone1.area1.company.com ')
h323ZoneRasSignalAddressTag = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 3), MmTAddressTag().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneRasSignalAddressTag.setStatus('current')
if mibBuilder.loadTexts: h323ZoneRasSignalAddressTag.setDescription('The tag identifying the underlying type of h323ZoneRasSignalAddress.')
h323ZoneRasSignalAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 4), TAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneRasSignalAddress.setStatus('current')
if mibBuilder.loadTexts: h323ZoneRasSignalAddress.setDescription('A RAS Signal transport address of the gatekeeper supporting the zone. ')
h323ZoneMaxBandwidth = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('100 bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneMaxBandwidth.setStatus('current')
if mibBuilder.loadTexts: h323ZoneMaxBandwidth.setDescription("The maximum bidirectional bandwidth which a gatekeeper can allocate to all calls in the zone. If h323ZoneLocalFlag is 'false' then this object may be 0, indicating unknown. h323ZoneMaxBandwidth is the total bidirectional data flow in units of hundred bits per second (bps). A value of 10 is 1000bps.")
h323ZoneAllocatedBandwidth = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 6), Integer32()).setUnits('100 bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: h323ZoneAllocatedBandwidth.setStatus('current')
if mibBuilder.loadTexts: h323ZoneAllocatedBandwidth.setDescription("The total bidirectional bandwidth allocated by the gatekeeper to the active calls. If h323ZoneLocalFlag is 'false' then this object does not apply. The value is in units of hundred bits per second, i.e. a value of 10 is 1000 bps. This value may not exceed the value of h323ZoneMaxBandwidth.")
h323ZoneIrrFrequency = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneIrrFrequency.setStatus('current')
if mibBuilder.loadTexts: h323ZoneIrrFrequency.setDescription('The IRR time a gatekeeper returns in a ACF.')
h323ZoneLocalZone = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneLocalZone.setStatus('current')
if mibBuilder.loadTexts: h323ZoneLocalZone.setDescription("If this gatekeeper manages the zone, then this value is 'true' otherwise it is false.")
h323ZoneAdmissions = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323ZoneAdmissions.setStatus('current')
if mibBuilder.loadTexts: h323ZoneAdmissions.setDescription("The number of ACFs by the gatekeeper. If h323ZoneLocalZone is 'false' then the value of this object has no meaning.")
h323ZoneAdmissionsRejected = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323ZoneAdmissionsRejected.setStatus('current')
if mibBuilder.loadTexts: h323ZoneAdmissionsRejected.setDescription("The number of ARJ sent by the gatekeeper. If h323ZoneLocalZone is 'false' then the value of this object has no meaning.")
h323ZoneRowStatus = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h323ZoneRowStatus.setStatus('current')
if mibBuilder.loadTexts: h323ZoneRowStatus.setDescription("The row status of the entry. This object is required to create or delete rows administratively. A agent implementing this object is not required to support the values 'createAndWait' and 'notInService'.")
h323GatekeeperStatisticsTable = MibTable((0, 0, 8, 341, 1, 1, 6, 4, 1), )
if mibBuilder.loadTexts: h323GatekeeperStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsTable.setDescription('This table contains statistics information for instances of a gatekeeper.')
h323GatekeeperStatisticsEntry = MibTableRow((0, 0, 8, 341, 1, 1, 6, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h323GatekeeperStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsEntry.setDescription('It contains objects that describe the statistics.')
h323GatekeeperStatisticsTotalErrors = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsTotalErrors.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsTotalErrors.setDescription('Total number of GK errors that have occurred in the gateway since the last startup')
h323GatekeeperStatisticsLastErrorEventTime = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorEventTime.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorEventTime.setDescription(' The date and time for the most recent error that has occurred in the gatekeeper.')
h323GatekeeperStatisticsLastErrorSeverity = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 3), MmErrorSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorSeverity.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorSeverity.setDescription('Severity for the most recent error that has occurred in the gatekeeper.')
h323GatekeeperStatisticsLastErrorProbableCause = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 4), MmErrorProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorProbableCause.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorProbableCause.setDescription('Probable Cause for the most recent error that has occurred in the gatekeeper. This value must be one of the given probable causes for errors on an entity. Values for probable causes for errors on a call or errors on a connection do not apply.')
h323GatekeeperStatisticsLastErrorAdditionalText = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorAdditionalText.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsLastErrorAdditionalText.setDescription('String Description of the most recent error that has occurred in the gatekeeper.')
h323GatekeeperStatisticsZoneNo = MibTableColumn((0, 0, 8, 341, 1, 1, 6, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323GatekeeperStatisticsZoneNo.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsZoneNo.setDescription('The number of h323 local zones supported by the Gatekeeper and the remote zones which the Gatekeeper may or has interacted with.')
h323GatekeeperControlsCommands = MibScalar((0, 0, 8, 341, 1, 1, 6, 5, 1), MmControlsCommands()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GatekeeperControlsCommands.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperControlsCommands.setDescription('A value that represents a command for the gateway. For the list of possible commands, please refer to MmControlsCommands ')
h323GatekeeperStart = NotificationType((0, 0, 8, 341, 1, 1, 6, 6, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h323GatekeeperStart.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStart.setDescription('Signifies that the gatekeeper has started. All MIB counters have gone to zero.')
h323GatekeeperGoingDown = NotificationType((0, 0, 8, 341, 1, 1, 6, 6, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h323GatekeeperGoingDown.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperGoingDown.setDescription('Signifies that the gatekeeper is about to go down')
h323GatekeeperError = NotificationType((0, 0, 8, 341, 1, 1, 6, 6, 3)).setObjects(("IF-MIB", "ifIndex"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorEventTime"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorSeverity"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorProbableCause"))
if mibBuilder.loadTexts: h323GatekeeperError.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperError.setDescription('Signifies that an error has occurred in the Gatekeeper. ')
h323GatekeeperMIBConformance = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 7))
h323GatekeeperMIBCompliance = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 7, 1))
h323GatekeeperMIBGroups = MibIdentifier((0, 0, 8, 341, 1, 1, 6, 7, 2))
h323GatekeeperCompliance = ModuleCompliance((0, 0, 8, 341, 1, 1, 6, 7, 1, 1)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperZoneGroup"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemGroup"), ("H323-GATEKEEPER-MIB", "h323GatekeeperConfigurationGroup"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsGroup"), ("H323-GATEKEEPER-MIB", "h323GatekeeperNotificationsGroup"), ("H323-GATEKEEPER-MIB", "h323GatekeeperControlsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperCompliance = h323GatekeeperCompliance.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperCompliance.setDescription('The set of objects required for compliance.')
h323GatekeeperSystemGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 1)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperSystemNameAndMaker"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemSoftwareVersionNumber"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemHardwareVersionNumber"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemContact"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemt35CountryCode"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemt35CountryCodeExtention"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemt35ManufacturerCode"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemLocation"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemUptime"), ("H323-GATEKEEPER-MIB", "h323GatekeeperSystemLocalTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperSystemGroup = h323GatekeeperSystemGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperSystemGroup.setDescription('The set of objects a gatekeeper must support for the GK System Description.')
h323GatekeeperConfigurationGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 2)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperConfigurationEnableNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperConfigurationGroup = h323GatekeeperConfigurationGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperConfigurationGroup.setDescription('The set of objects a gatekeeper must support for the GK Configuration.')
h323GatekeeperZoneGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 3)).setObjects(("H323-GATEKEEPER-MIB", "h323ZoneZoneName"), ("H323-GATEKEEPER-MIB", "h323ZoneRasSignalAddressTag"), ("H323-GATEKEEPER-MIB", "h323ZoneRasSignalAddress"), ("H323-GATEKEEPER-MIB", "h323ZoneMaxBandwidth"), ("H323-GATEKEEPER-MIB", "h323ZoneAllocatedBandwidth"), ("H323-GATEKEEPER-MIB", "h323ZoneIrrFrequency"), ("H323-GATEKEEPER-MIB", "h323ZoneLocalZone"), ("H323-GATEKEEPER-MIB", "h323ZoneAdmissions"), ("H323-GATEKEEPER-MIB", "h323ZoneAdmissionsRejected"), ("H323-GATEKEEPER-MIB", "h323ZoneRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperZoneGroup = h323GatekeeperZoneGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperZoneGroup.setDescription('The set of objects a gatekeeper must support for local and remote zones.')
h323GatekeeperStatisticsGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 4)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsTotalErrors"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorEventTime"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorSeverity"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorProbableCause"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsLastErrorAdditionalText"), ("H323-GATEKEEPER-MIB", "h323GatekeeperStatisticsZoneNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperStatisticsGroup = h323GatekeeperStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperStatisticsGroup.setDescription('The set of objects a gatekeeper must support for statistics.')
h323GatekeeperControlsGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 5)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperControlsCommands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperControlsGroup = h323GatekeeperControlsGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperControlsGroup.setDescription('The set of objects a gatekeeper must support for controls.')
h323GatekeeperNotificationsGroup = NotificationGroup((0, 0, 8, 341, 1, 1, 6, 7, 2, 6)).setObjects(("H323-GATEKEEPER-MIB", "h323GatekeeperStart"), ("H323-GATEKEEPER-MIB", "h323GatekeeperGoingDown"), ("H323-GATEKEEPER-MIB", "h323GatekeeperError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323GatekeeperNotificationsGroup = h323GatekeeperNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: h323GatekeeperNotificationsGroup.setDescription('The set of notification a gatekeeper must support.')
mibBuilder.exportSymbols("H323-GATEKEEPER-MIB", h323GatekeeperSystemContact=h323GatekeeperSystemContact, h323GatekeeperStatisticsLastErrorAdditionalText=h323GatekeeperStatisticsLastErrorAdditionalText, h323GatekeeperStatisticsLastErrorProbableCause=h323GatekeeperStatisticsLastErrorProbableCause, h323GatekeeperControlsCommands=h323GatekeeperControlsCommands, h323GatekeeperConfiguration=h323GatekeeperConfiguration, h323GatekeeperStatistics=h323GatekeeperStatistics, h323GatekeeperSystemt35ManufacturerCode=h323GatekeeperSystemt35ManufacturerCode, h323ZoneAdmissions=h323ZoneAdmissions, h323GatekeeperConfigurationGroup=h323GatekeeperConfigurationGroup, h323ZoneMaxBandwidth=h323ZoneMaxBandwidth, h323GatekeeperSystemHardwareVersionNumber=h323GatekeeperSystemHardwareVersionNumber, h323GatekeeperStart=h323GatekeeperStart, h323GatekeeperStatisticsLastErrorSeverity=h323GatekeeperStatisticsLastErrorSeverity, h323GatekeeperMIBCompliance=h323GatekeeperMIBCompliance, h323GatekeeperSystemt35CountryCode=h323GatekeeperSystemt35CountryCode, h323ZoneZoneName=h323ZoneZoneName, h323GatekeeperStatisticsLastErrorEventTime=h323GatekeeperStatisticsLastErrorEventTime, h323ZoneEntry=h323ZoneEntry, h323GatekeeperZoneGroup=h323GatekeeperZoneGroup, h323GatekeeperControlsGroup=h323GatekeeperControlsGroup, PYSNMP_MODULE_ID=h323Gatekeeper, h323ZoneRasSignalAddressTag=h323ZoneRasSignalAddressTag, h323ZoneLocalZone=h323ZoneLocalZone, h323GatekeeperSystemLocation=h323GatekeeperSystemLocation, h323GatekeeperError=h323GatekeeperError, h323GatekeeperNotifications=h323GatekeeperNotifications, h323GatekeeperConfigurationTable=h323GatekeeperConfigurationTable, h323GatekeeperStatisticsZoneNo=h323GatekeeperStatisticsZoneNo, h323ZoneRasSignalAddress=h323ZoneRasSignalAddress, h323GatekeeperMIBGroups=h323GatekeeperMIBGroups, h323ZoneAllocatedBandwidth=h323ZoneAllocatedBandwidth, h323ZoneAdmissionsRejected=h323ZoneAdmissionsRejected, h323GatekeeperSystem=h323GatekeeperSystem, h323GatekeeperCompliance=h323GatekeeperCompliance, h323Gatekeeper=h323Gatekeeper, h323GatekeeperStatisticsTotalErrors=h323GatekeeperStatisticsTotalErrors, h323GatekeeperConfigurationEntry=h323GatekeeperConfigurationEntry, h323GatekeeperStatisticsEntry=h323GatekeeperStatisticsEntry, h323GatekeeperConfigurationRegistrationMode=h323GatekeeperConfigurationRegistrationMode, h323GatekeeperControls=h323GatekeeperControls, h323GatekeeperSystemNameAndMaker=h323GatekeeperSystemNameAndMaker, h323ZoneRowStatus=h323ZoneRowStatus, h323GatekeeperSystemTable=h323GatekeeperSystemTable, h323GatekeeperStatisticsTable=h323GatekeeperStatisticsTable, h323GatekeeperSystemSoftwareVersionNumber=h323GatekeeperSystemSoftwareVersionNumber, h323GatekeeperSystemGroup=h323GatekeeperSystemGroup, h323GatekeeperMIBConformance=h323GatekeeperMIBConformance, h323GatekeeperSystemt35CountryCodeExtention=h323GatekeeperSystemt35CountryCodeExtention, h323GatekeeperSystemLocalTime=h323GatekeeperSystemLocalTime, h323ZoneIndex=h323ZoneIndex, h323GatekeeperConfigurationEnableNotifications=h323GatekeeperConfigurationEnableNotifications, h323GatekeeperZone=h323GatekeeperZone, h323ZoneTable=h323ZoneTable, h323GatekeeperStatisticsGroup=h323GatekeeperStatisticsGroup, h323GatekeeperGoingDown=h323GatekeeperGoingDown, h323GatekeeperSystemEntry=h323GatekeeperSystemEntry, h323GatekeeperNotificationsGroup=h323GatekeeperNotificationsGroup, h323GatekeeperSystemUptime=h323GatekeeperSystemUptime, h323ZoneIrrFrequency=h323ZoneIrrFrequency)
