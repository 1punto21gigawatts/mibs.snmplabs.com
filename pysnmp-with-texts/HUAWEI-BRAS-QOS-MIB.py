#
# PySNMP MIB module HUAWEI-BRAS-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, IpAddress, Counter64, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ObjectIdentity, Bits, Integer32, ModuleIdentity, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "Counter64", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ObjectIdentity", "Bits", "Integer32", "ModuleIdentity", "TimeTicks", "Gauge32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
hwBRASQoS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18))
if mibBuilder.loadTexts: hwBRASQoS.setLastUpdated('200504181334Z')
if mibBuilder.loadTexts: hwBRASQoS.setOrganization('Organization.')
if mibBuilder.loadTexts: hwBRASQoS.setContactInfo('Floor 5, Block 4, R&D Building, Huawei Longgang Production Base, Shenzhen, P.R.C. http://www.huawei.com Zip:518057 ')
if mibBuilder.loadTexts: hwBRASQoS.setDescription('The MIB contains objects of module QOS.')
class SchedulerStyle(TextualConvention, Integer32):
    description = 'QoS scheduler style,with sp and wrr.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("sp", 1), ("wrr", 2))

class QueueClass(TextualConvention, Integer32):
    description = 'QoS Queue service class,from ef to cs7.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))

class SchedulerService(TextualConvention, Integer32):
    description = 'QoS scheduler service style,with pq,lpq and wfq.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3))

class InterfaceScheduler(TextualConvention, Integer32):
    description = 'Interface scheduler service type,with location,none and service group.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("location", 1), ("none", 2), ("servicegroup", 3))

class LinkMode(TextualConvention, Integer32):
    description = 'Remote Qos link mode,with frame and cell.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("frame", 2), ("cell", 3))

class StatMode(TextualConvention, Integer32):
    description = 'Interface statistics mode,with before,all and after.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("before", 2), ("after", 3), ("both", 4))

hwBRASQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1))
hwBRASQoSQoSProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1), )
if mibBuilder.loadTexts: hwBRASQoSQoSProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileTable.setDescription('QoS profile config info.')
hwBRASQoSQoSProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileIndex"))
if mibBuilder.loadTexts: hwBRASQoSQoSProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileEntry.setDescription('QoS Profile Configuration Information Entry.')
hwBRASQoSQoSProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileIndex.setDescription('QoS profile entry index.')
hwBRASQoSQoSProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileName.setDescription('QoS profile name.')
hwBRASQoSQoSProfileQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileQueueName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileQueueName.setDescription('QoS queue profile name.')
hwBRASQoSQoSProfileDropName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileDropName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileDropName.setDescription('QoS drop profile name.')
hwBRASQoSQoSProfileSchedulerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileSchedulerName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileSchedulerName.setDescription('QoS scheduler profile name.')
hwBRASQoSQoSFlowMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSFlowMappingName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSFlowMappingName.setDescription('QoS flow mapping name.')
hwBRASQoSQoSLinkAjustLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSLinkAjustLength.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSLinkAjustLength.setDescription('Exact link ajustment length fo SQ.')
hwBRASQoSQoSProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQoSProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQoSProfileRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSSchedulerProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2), )
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileTable.setDescription('QoS scheduler profile config info.')
hwBRASQoSSchedulerProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileIndex"))
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileEntry.setDescription('QoS Scheduler Profile Configuration Information Entry.')
hwBRASQoSSchedulerProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileIndex.setDescription('Scheduler profile entry index.')
hwBRASQoSSchedulerProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileName.setDescription('Scheduler profile name.')
hwBRASQoSSchedulerProfileGtsUpCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 10000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpCir.setDescription('GTS upstream cir (Unit:Kbps).')
hwBRASQoSSchedulerProfileGtsUpPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpPir.setDescription('GTS upstream pir (Unit:Kbps).')
hwBRASQoSSchedulerProfileGtsUpLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(2000, 128000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpLength.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsUpLength.setDescription('GTS upstream queue length (Unit:Kbyte).')
hwBRASQoSSchedulerProfileGtsDownCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownCir.setDescription('GTS downstream cir (Unit:Kbps).')
hwBRASQoSSchedulerProfileGtsDownPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownPir.setDescription('GTS downstream pir (Unit:Kbps).')
hwBRASQoSSchedulerProfileGtsDownLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(2000, 128000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownLength.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileGtsDownLength.setDescription('GTS downstream queue length (Unit:Kbyte).')
hwBRASQoSSchedulerProfileUpCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpCir.setDescription('Upstream cir (Unit:Kbps).')
hwBRASQoSSchedulerProfileUpCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10000, 8388608), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpCbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpCbs.setDescription('Upstream cbs (Unit:byte).')
hwBRASQoSSchedulerProfileUpPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpPir.setDescription('Upstream pir (Unit:Kbps).')
hwBRASQoSSchedulerProfileUpPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10000, 8388608), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpPbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileUpPbs.setDescription('Upstream pbs (Unit:byte).')
hwBRASQoSSchedulerProfileDownCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 10000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownCir.setDescription('Downstream cir (Unit:Kbps).')
hwBRASQoSSchedulerProfileDownCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10000, 8388608), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownCbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownCbs.setDescription('Downstream cbs (Unit:byte).')
hwBRASQoSSchedulerProfileDownPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownPir.setDescription('Downstream cir (Unit:Kbps).')
hwBRASQoSSchedulerProfileDownPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10000, 8388608), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownPbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileDownPbs.setDescription('Downstream pbs (Unit:byte).')
hwBRASQoSSchedulerProfileWfqWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileWfqWeight.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerProfileWfqWeight.setDescription('Scheduler WFQ Weight.')
hwBRASQoSSchedulerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSSchedulerRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSchedulerRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSDropProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3), )
if mibBuilder.loadTexts: hwBRASQoSDropProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTable.setDescription('QoS drop profile config info.')
hwBRASQoSDropProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileIndex"))
if mibBuilder.loadTexts: hwBRASQoSDropProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileEntry.setDescription('QoS Drop Profile Configuration Information Entry.')
hwBRASQoSDropProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSDropProfileIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileIndex.setDescription('Drop profile entry index.')
hwBRASQoSDropProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileName.setDescription('Drop profile name.')
hwBRASQoSDropProfileTailBeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(55)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailBeThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailBeThreshold.setDescription('Tail-drop Threshold for BE,in percentage. ')
hwBRASQoSDropProfileTailAf1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(55)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf1Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf1Threshold.setDescription('Tail-drop Threshold for AF1,in percentage. ')
hwBRASQoSDropProfileTailAf2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf2Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf2Threshold.setDescription('Tail-drop Threshold for AF2,in percentage. ')
hwBRASQoSDropProfileTailAf3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf3Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf3Threshold.setDescription('Tail-drop Threshold for AF3,in percentage. ')
hwBRASQoSDropProfileTailAf4Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(70)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf4Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailAf4Threshold.setDescription('Tail-drop Threshold for AF4,in percentage. ')
hwBRASQoSDropProfileTailEfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailEfThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailEfThreshold.setDescription('Tail-drop Threshold for EF,in percentage. ')
hwBRASQoSDropProfileTailCs6Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailCs6Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailCs6Threshold.setDescription('Tail-drop Threshold for CS6,in percentage. ')
hwBRASQoSDropProfileTailCs7Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailCs7Threshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileTailCs7Threshold.setDescription('Tail-drop Threshold for CS7,in percentage. ')
hwBRASQoSDropProfileWredMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredMaxThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredMaxThreshold.setDescription('Max threshold for WRED.')
hwBRASQoSDropProfileWredMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredMinThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredMinThreshold.setDescription('Minimum threshold for WRED.')
hwBRASQoSDropProfileWredGreenHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenHighValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenHighValue.setDescription('WRED green high threshold (Unit:256byte).')
hwBRASQoSDropProfileWredGreenLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenLowValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenLowValue.setDescription('WRED green low threshold (Unit:256byte).')
hwBRASQoSDropProfileWredGreenMaxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenMaxDrop.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredGreenMaxDrop.setDescription('WRED green max drop,in percentage.')
hwBRASQoSDropProfileWredYellowHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowHighValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowHighValue.setDescription('WRED yellow high threshold (Unit:256byte).')
hwBRASQoSDropProfileWredYellowLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowLowValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowLowValue.setDescription('WRED yellow low threshold (Unit:256byte).')
hwBRASQoSDropProfileWredYellowMaxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowMaxDrop.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredYellowMaxDrop.setDescription('WRED yellow max drop,in percentage.')
hwBRASQoSDropProfileWredRedHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedHighValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedHighValue.setDescription('WRED red high threshold (Unit:256byte).')
hwBRASQoSDropProfileWredRedLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedLowValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedLowValue.setDescription('WRED red low threshold (Unit:256byte).')
hwBRASQoSDropProfileWredRedMaxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedMaxDrop.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredRedMaxDrop.setDescription('WRED red max drop,in percentage.')
hwBRASQoSDropProfileWredUserDefHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefHighValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefHighValue.setDescription('User defined WRED high threshold (Unit:256byte).')
hwBRASQoSDropProfileWredUserDefLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefLowValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefLowValue.setDescription('User defined WRED low threshold (Unit:256byte).')
hwBRASQoSDropProfileWredUserDefMaxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefMaxDrop.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileWredUserDefMaxDrop.setDescription('User defined WRED max drop,in percentage.')
hwBRASQoSDropProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 3, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSDropProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSDropProfileRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSQueueProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4), )
if mibBuilder.loadTexts: hwBRASQoSQueueProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileTable.setDescription('QoS queue profile config info.')
hwBRASQoSQueueProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileIndex"))
if mibBuilder.loadTexts: hwBRASQoSQueueProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileEntry.setDescription('QoS Queue Profile Configuration Information Entry.')
hwBRASQoSQueueProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileIndex.setDescription('Queue profile entry index.')
hwBRASQoSQueueProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileName.setDescription('Queue profile name.')
hwBRASQoSQueueProfileBeStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 3), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileBeStyle.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileBeStyle.setDescription('BE queue schedule style.')
hwBRASQoSQueueProfileAf1Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 4), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf1Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf1Style.setDescription('AF1 queue schedule style.')
hwBRASQoSQueueProfileAf2Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 5), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf2Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf2Style.setDescription('AF2 queue schedule style.')
hwBRASQoSQueueProfileAf3Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 6), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf3Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf3Style.setDescription('AF3 queue schedule style.')
hwBRASQoSQueueProfileAf4Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 7), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf4Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileAf4Style.setDescription('AF4 queue schedule style.')
hwBRASQoSQueueProfileEfStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 8), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileEfStyle.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileEfStyle.setDescription('EF queue schedule style.')
hwBRASQoSQueueProfileCs6Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 9), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileCs6Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileCs6Style.setDescription('CS6 queue schedule style.')
hwBRASQoSQueueProfileCs7Style = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 10), SchedulerStyle().clone('sp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileCs7Style.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileCs7Style.setDescription('CS7 queue schedule style.')
hwBRASQoSQueueProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 4, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSQueueProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueProfileRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSQueueClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5), )
if mibBuilder.loadTexts: hwBRASQoSQueueClassTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassTable.setDescription('QoS queue schedule class info.')
hwBRASQoSQueueClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassProfileName"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassServiceId"))
if mibBuilder.loadTexts: hwBRASQoSQueueClassEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassEntry.setDescription('QoS Queue Class Configuration Information Entry.')
hwBRASQoSQueueClassProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSQueueClassProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassProfileName.setDescription('Queue profile name.')
hwBRASQoSQueueClassServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 2), QueueClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSQueueClassServiceId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassServiceId.setDescription('Service queue class id.')
hwBRASQoSQueueClassWredEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassWredEnableStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassWredEnableStatus.setDescription('WRED enable status.')
hwBRASQoSQueueClassWredWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassWredWeight.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassWredWeight.setDescription('WRED weight value.')
hwBRASQoSQueueClassWrrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassWrrWeight.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassWrrWeight.setDescription('WRR weight value.')
hwBRASQoSQueueClassLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 64)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassLength.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassLength.setDescription('Queue length (Unit:Kbyte).')
hwBRASQoSQueueClassCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(100, 3000000), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassCir.setDescription('Queue cir (Unit:Kbps).')
hwBRASQoSQueueClassCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(64, 131071), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassCbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassCbs.setDescription('Queue cbs (Unit:byte).')
hwBRASQoSQueueClassPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(100, 3000000), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassPir.setDescription('Queue pir (Unit:Kbps).')
hwBRASQoSQueueClassPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(64, 4000000), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassPbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassPbs.setDescription('Queue pbs (Unit:byte).')
hwBRASQoSQueueClassWfqWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassWfqWeight.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassWfqWeight.setDescription('WFQ weight value.')
hwBRASQoSQueueClassShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassShaping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassShaping.setDescription('Queue shaping value,in percentage.')
hwBRASQoSQueueClassScheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 13), SchedulerService()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassScheduler.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassScheduler.setDescription('Queue scheduler style.')
hwBRASQoSQueueClassDropName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 5, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSQueueClassDropName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSQueueClassDropName.setDescription('Drop profile name.')
hwBRASQoSFlowMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6), )
if mibBuilder.loadTexts: hwBRASQoSFlowMappingTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSFlowMappingTable.setDescription('QoS queue flow mapping info.')
hwBRASQoSFlowMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSFlowMappingName"))
if mibBuilder.loadTexts: hwBRASQoSFlowMappingEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSFlowMappingEntry.setDescription('QoS FlowMapping Configuration Information Entry.')
hwBRASQoSFlowMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSFlowMappingName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSFlowMappingName.setDescription('Flow mapping entry name.')
hwBRASQoSBeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 2), QueueClass().clone('be')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSBeMapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSBeMapping.setDescription('BE mapping vlue.')
hwBRASQoSAf1Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 3), QueueClass().clone('af1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSAf1Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSAf1Mapping.setDescription('AF1 mapping vlue.')
hwBRASQoSAf2Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 4), QueueClass().clone('af2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSAf2Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSAf2Mapping.setDescription('AF2 mapping vlue.')
hwBRASQoSAf3Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 5), QueueClass().clone('af3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSAf3Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSAf3Mapping.setDescription('AF3 mapping vlue.')
hwBRASQoSAf4Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 6), QueueClass().clone('af4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSAf4Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSAf4Mapping.setDescription('AF4 mapping vlue.')
hwBRASQoSEfMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 7), QueueClass().clone('ef')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSEfMapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSEfMapping.setDescription('EF mapping vlue.')
hwBRASQoSCs6Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 8), QueueClass().clone('cs6')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCs6Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCs6Mapping.setDescription('CS6 mapping vlue.')
hwBRASQoSCs7Mapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 9), QueueClass().clone('cs7')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCs7Mapping.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCs7Mapping.setDescription('CS7 mapping vlue.')
hwBRASQoSFlowMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 6, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSFlowMappingRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSFlowMappingRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7), )
if mibBuilder.loadTexts: hwBRASQoSIfTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfTable.setDescription('QoS interface info table.')
hwBRASQoSIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfIndex"))
if mibBuilder.loadTexts: hwBRASQoSIfEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfEntry.setDescription('QoS interface Configuration Information Entry.')
hwBRASQoSIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfIndex.setDescription('Interface index.')
hwBRASQoSIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfName.setDescription('Interface name.')
hwBRASQoSIfQoSProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfQoSProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfQoSProfileName.setDescription('QoS profile name.')
hwBRASQoSIfScheduleId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 4), InterfaceScheduler()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfScheduleId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfScheduleId.setDescription('QoS schedule ID.')
hwBRASQoSIfServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfServiceGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfServiceGroupName.setDescription('Service group name.')
hwBRASQoSIfShapingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfShapingValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfShapingValue.setDescription('Port shaping value (Unit:Kbps).')
hwBRASQoSIfVpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVpGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVpGroupName.setDescription('VP-Group name.')
hwBRASQoSIfInboundVcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfInboundVcGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfInboundVcGroupName.setDescription('Inbound VC-Group name.')
hwBRASQoSIfOutboundAVcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfOutboundAVcGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfOutboundAVcGroupName.setDescription('Outbound-A VC-Group name.')
hwBRASQoSIfOutboundBVcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfOutboundBVcGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfOutboundBVcGroupName.setDescription('Outbound-B VC-Group name.')
hwBRASQoSIfInboundGVpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfInboundGVpGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfInboundGVpGroupName.setDescription('Inbound GVP-Group name.')
hwBRASQoSIfOutboundAGVpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfOutboundAGVpGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfOutboundAGVpGroupName.setDescription('Outbound-A GVP-Group name.')
hwBRASQoSIfPacketAjustOverhead = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-34, 34))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfPacketAjustOverhead.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfPacketAjustOverhead.setDescription('Packet ajustment overhead value.')
hwBRASQoSIfRemoteLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 14), LinkMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfRemoteLinkMode.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfRemoteLinkMode.setDescription('Remote QoS link mode.')
hwBRASQoSIfInCarProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfInCarProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfInCarProfileName.setDescription('Inbound CAR profile name.')
hwBRASQoSIfInStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 16), StatMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfInStatistics.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfInStatistics.setDescription('Inbound statistics style.')
hwBRASQoSIfOutCarProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfOutCarProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfOutCarProfileName.setDescription('Outbound CAR profile name.')
hwBRASQoSIfOutStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 18), StatMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfOutStatistics.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfOutStatistics.setDescription('Outbound statistics style.')
hwBRASQoSIfVplsCarStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVplsCarStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVplsCarStatus.setDescription('VPLS broadcast CAR enable status.')
hwBRASQoSIfMultiShapingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfMultiShapingStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfMultiShapingStatus.setDescription('Multicast shaping enable status.')
hwBRASQoSIfActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 7, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfActiveStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfActiveStatus.setDescription('Interface active status.')
hwBRASQoSIfVcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8), )
if mibBuilder.loadTexts: hwBRASQoSIfVcTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcTable.setDescription('QoS interface VC info table.')
hwBRASQoSIfVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcIfIndex"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcVlanId"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcQinqVlanId"))
if mibBuilder.loadTexts: hwBRASQoSIfVcEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcEntry.setDescription('QoS interface VC Configuration Information Entry.')
hwBRASQoSIfVcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfVcIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcIfIndex.setDescription('Interface index.')
hwBRASQoSIfVcVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 2), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfVcVlanId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcVlanId.setDescription('VLAN ID.')
hwBRASQoSIfVcQinqVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 3), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSIfVcQinqVlanId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcQinqVlanId.setDescription('Qinq VLAN ID.')
hwBRASQoSIfVcVlanEndId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 4), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(2, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcVlanEndId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcVlanEndId.setDescription('End VLAN ID.')
hwBRASQoSIfVcQinqVlanEndId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 5), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(2, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcQinqVlanEndId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcQinqVlanEndId.setDescription('End Qinq VLAN ID.')
hwBRASQoSIfVcVcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcVcGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcVcGroupName.setDescription('VC-Group name.')
hwBRASQoSIfVcServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcServiceGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcServiceGroupName.setDescription('Service group name.')
hwBRASQoSIfVcInCarProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcInCarProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcInCarProfileName.setDescription('Inbound CAR profile name.')
hwBRASQoSIfVcInStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 9), StatMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcInStatistics.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcInStatistics.setDescription('Inbound statistics style.')
hwBRASQoSIfVcInCarEachVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcInCarEachVlanStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcInCarEachVlanStatus.setDescription('Inbound each vlan car enable status.')
hwBRASQoSIfVcOutCarProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcOutCarProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcOutCarProfileName.setDescription('Outbound statistics style.')
hwBRASQoSIfVcOutStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 12), StatMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcOutStatistics.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcOutStatistics.setDescription('Outbound statistics style.')
hwBRASQoSIfVcOutCarEachVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 8, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSIfVcOutCarEachVlanStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVcOutCarEachVlanStatus.setDescription('Outbound each vlan car enable status.')
hwBRASQoSVpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9), )
if mibBuilder.loadTexts: hwBRASQoSVpGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupTable.setDescription('VP-Group config info.')
hwBRASQoSVpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupIfIndex"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupName"))
if mibBuilder.loadTexts: hwBRASQoSVpGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupEntry.setDescription('QoS VP-Group Configuration Information Entry.')
hwBRASQoSVpGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSVpGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupIfIndex.setDescription('Interface index.')
hwBRASQoSVpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVpGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupName.setDescription('VP-Group name.')
hwBRASQoSVpGroupQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVpGroupQosProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupQosProfileName.setDescription('QoS profile name.')
hwBRASQoSVpGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVpGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVpGroupRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSVcGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10), )
if mibBuilder.loadTexts: hwBRASQoSVcGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupTable.setDescription('VC-Group config info.')
hwBRASQoSVcGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupIfIndex"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupName"))
if mibBuilder.loadTexts: hwBRASQoSVcGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupEntry.setDescription('QoS VC-Group Configuration Information Entry.')
hwBRASQoSVcGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVcGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupIfIndex.setDescription('Interface index.')
hwBRASQoSVcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVcGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupName.setDescription('VC-Group name.')
hwBRASQoSVcGroupQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVcGroupQosProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupQosProfileName.setDescription('QoS profile name.')
hwBRASQoSVcGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSVcGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSVcGroupRowStatus.setDescription('Row status.')
hwBRASQoSGVpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11), )
if mibBuilder.loadTexts: hwBRASQoSGVpGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupTable.setDescription('Global VP-Group config info.')
hwBRASQoSGVpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupName"))
if mibBuilder.loadTexts: hwBRASQoSGVpGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupEntry.setDescription('QoS GVP-Group Configuration Information Entry.')
hwBRASQoSGVpGroupSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSGVpGroupSlotId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupSlotId.setDescription('Slot ID.')
hwBRASQoSGVpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSGVpGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupName.setDescription('GVP-Group name.')
hwBRASQoSGVpGroupQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSGVpGroupQosProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupQosProfileName.setDescription('QoS profile name.')
hwBRASQoSGVpGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSGVpGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSGVpGroupRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 12), )
if mibBuilder.loadTexts: hwBRASQoSServiceGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSServiceGroupTable.setDescription('Service group table info.')
hwBRASQoSServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 12, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSServiceGroupIndex"))
if mibBuilder.loadTexts: hwBRASQoSServiceGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSServiceGroupEntry.setDescription('QoS Service Group Configuration Information Entry.')
hwBRASQoSServiceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 499))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSServiceGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSServiceGroupIndex.setDescription('Service group entry index.')
hwBRASQoSServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 12, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSServiceGroupName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSServiceGroupName.setDescription('Service group name.')
hwBRASQoSServiceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 12, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSServiceGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSServiceGroupRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSPortQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13), )
if mibBuilder.loadTexts: hwBRASQoSPortQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueTable.setDescription('Port queue config info.')
hwBRASQoSPortQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueIfIndex"), (0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueServiceId"))
if mibBuilder.loadTexts: hwBRASQoSPortQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueEntry.setDescription('QoS Port Queue Configuration Information Entry.')
hwBRASQoSPortQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueIfIndex.setDescription('Interface index.')
hwBRASQoSPortQueueServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 2), QueueClass()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueServiceId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueServiceId.setDescription('Port queue service class ID.')
hwBRASQoSPortQueueScheduleStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 3), SchedulerService()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueScheduleStyle.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueScheduleStyle.setDescription('Queue schedule style.')
hwBRASQoSPortQueueWfqWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueWfqWeight.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueWfqWeight.setDescription('WFQ schedule weight.')
hwBRASQoSPortQueueShapingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueShapingValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueShapingValue.setDescription('Port queue shaping bandwidth.')
hwBRASQoSPortQueueShaingPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueShaingPercentage.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueShaingPercentage.setDescription('Port queue shaping value,in percentage.')
hwBRASQoSPortQueuePortWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueuePortWredName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueuePortWredName.setDescription('Port WRED entry name. ')
hwBRASQoSPortQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 13, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortQueueRowStatus.setDescription('Row status,two actions are used: active and destroy. ')
hwBRASQoSPortWredTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14), )
if mibBuilder.loadTexts: hwBRASQoSPortWredTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredTable.setDescription('Port WRED config info.')
hwBRASQoSPortWredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredName"))
if mibBuilder.loadTexts: hwBRASQoSPortWredEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredEntry.setDescription('QoS Port Wred Configuration Information Entry.')
hwBRASQoSPortWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredName.setDescription('Port WRED name.')
hwBRASQoSPortWredGreenLowLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenLowLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenLowLimitValue.setDescription('WRED green low threshold (Unit:8192Byte).')
hwBRASQoSPortWredGreenHighLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenHighLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenHighLimitValue.setDescription('WRED green high threshold (Unit:8192Byte).')
hwBRASQoSPortWredGreenDiscardValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenDiscardValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredGreenDiscardValue.setDescription('WRED green max discard,in percentage.')
hwBRASQoSPortWredYellowLowLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowLowLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowLowLimitValue.setDescription('WRED yellow low threshold (Unit:8192Byte).')
hwBRASQoSPortWredYellowHighLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowHighLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowHighLimitValue.setDescription('WRED yellow high threshold (Unit:8192Byte).')
hwBRASQoSPortWredYellowDiscardValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowDiscardValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredYellowDiscardValue.setDescription('WRED yellow max discard,in percentage.')
hwBRASQoSPortWredRedLowLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredRedLowLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredRedLowLimitValue.setDescription('WRED red low threshold (Unit:8192Byte).')
hwBRASQoSPortWredRedHighLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)).clone(2047)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredRedHighLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredRedHighLimitValue.setDescription('WRED red high threshold (Unit:8192Byte).')
hwBRASQoSPortWredRedDiscardValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredRedDiscardValue.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredRedDiscardValue.setDescription('WRED red max discard,in percentage.')
hwBRASQoSPortWredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 14, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSPortWredRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSPortWredRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSCarProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15), )
if mibBuilder.loadTexts: hwBRASQoSCarProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileTable.setDescription('CAR profile config info.')
hwBRASQoSCarProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileIndex"))
if mibBuilder.loadTexts: hwBRASQoSCarProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileEntry.setDescription('CAR Profile Configuration Information Entry.')
hwBRASQoSCarProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSCarProfileIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileIndex.setDescription('CAR profile entry index.')
hwBRASQoSCarProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileName.setDescription('CAR profile name.')
hwBRASQoSCarProfileCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(100, 10000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfileCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileCir.setDescription('CAR cir (Unit:Kbps).')
hwBRASQoSCarProfilePir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(100, 10000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfilePir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfilePir.setDescription('CAR pir (Unit:Kbps).')
hwBRASQoSCarProfileCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(2000, 33554432), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfileCbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileCbs.setDescription('CAR cbs (Unit:bit).')
hwBRASQoSCarProfilePbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 33554432)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfilePbs.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfilePbs.setDescription('CAR pbs (Unit:bit).')
hwBRASQoSCarProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 15, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSCarProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSCarProfileRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSSlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16), )
if mibBuilder.loadTexts: hwBRASQoSSlotTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotTable.setDescription('QoS slot config table.')
hwBRASQoSSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotId"))
if mibBuilder.loadTexts: hwBRASQoSSlotEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotEntry.setDescription('QoS Slot Configuration Information Entry.')
hwBRASQoSSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotId.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotId.setDescription('Slot ID.')
hwBRASQoSSlotLinkLayerExclude = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSSlotLinkLayerExclude.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotLinkLayerExclude.setDescription('Whether exclude link-layer bit for CAR or statistics.')
hwBRASQoSSlotEtherAjustOverhead = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-35, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSSlotEtherAjustOverhead.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotEtherAjustOverhead.setDescription('Ethernet packet adustment overhead (Unit:byte).')
hwBRASQoSSlotRemoteAdjustEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSSlotRemoteAdjustEnableStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotRemoteAdjustEnableStatus.setDescription('Remote QoS adjustment enable status.')
hwBRASQoSSlotInboundGqUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotInboundGqUsedNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotInboundGqUsedNum.setDescription('Inbound GQ resource used-number.')
hwBRASQoSSlotInboundSqUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotInboundSqUsedNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotInboundSqUsedNum.setDescription('Inbound SQ resource used-number.')
hwBRASQoSSlotInboundGqFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotInboundGqFreeNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotInboundGqFreeNum.setDescription('Inbound GQ resource free-number.')
hwBRASQoSSlotInboundSqFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotInboundSqFreeNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotInboundSqFreeNum.setDescription('Inbound SQ resource free-number.')
hwBRASQoSSlotOutboundGqUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundGqUsedNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundGqUsedNum.setDescription('Outbound GQ resource used-number.')
hwBRASQoSSlotOutboundSqUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundSqUsedNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundSqUsedNum.setDescription('Outbound SQ resource used-number.')
hwBRASQoSSlotOutboundGqFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundGqFreeNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundGqFreeNum.setDescription('Outbound GQ resource free-number.')
hwBRASQoSSlotOutboundSqFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundSqFreeNum.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotOutboundSqFreeNum.setDescription('Outbound SQ resource free-number.')
hwBRASQoSSlotActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 16, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSSlotActiveStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSSlotActiveStatus.setDescription('Slot active status.')
hwBRASQoSMultiShapingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17), )
if mibBuilder.loadTexts: hwBRASQoSMultiShapingTable.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingTable.setDescription('Multicast QoS shaping list info.')
hwBRASQoSMultiShapingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1), ).setIndexNames((0, "HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingIndex"))
if mibBuilder.loadTexts: hwBRASQoSMultiShapingEntry.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingEntry.setDescription('Multicast QoS Shaping Configuration Information Entry.')
hwBRASQoSMultiShapingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingIndex.setDescription('Multicast shaping list index.')
hwBRASQoSMultiShapingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingName.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingName.setDescription('Multicast shaping entry name.')
hwBRASQoSMultiShapingEndIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingEndIndex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingEndIndex.setDescription('Multicast shaping list end-index.')
hwBRASQoSMultiShapingCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingCir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingCir.setDescription('QoS multicast shaping CIR,Unit(Kbps).')
hwBRASQoSMultiShapingPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(70, 10000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingPir.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingPir.setDescription('QoS multicast shaping PIR,Unit(Kbps).')
hwBRASQoSMultiShapingQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(2000, 128000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingQueueLength.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingQueueLength.setDescription('QoS multicast shaping queue length,Unit(byte).')
hwBRASQoSMultiShapingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 1, 17, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBRASQoSMultiShapingRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSMultiShapingRowStatus.setDescription('Row status,two actions are used: active and destroy.')
hwBRASQoSMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2))
hwBRASQoSTrapOid = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1))
hwBRASQoSTrapSlotID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapSlotID.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapSlotID.setDescription('Slot ID relating QoS resource.')
hwBRASQoSFailBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSFailBandwidth.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSFailBandwidth.setDescription('Bandwidth value with alloced failure.')
hwBRASQoSTrapUserBehavior = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alloc", 1), ("update", 2), ("free", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapUserBehavior.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapUserBehavior.setDescription('User behavior when operatiing with QoS resource.')
hwBRASQoSTrapUserID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapUserID.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapUserID.setDescription('User ID with QoS resource. ')
hwBRASQoSTrapTunnelID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapTunnelID.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapTunnelID.setDescription('QoS tunnel ID.')
hwBRASQoSTrapQinqVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 6), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapQinqVlan.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapQinqVlan.setDescription('QINQ VLAN ID in QoS sub-interface.')
hwBRASQoSTrapVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 7), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapVlan.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapVlan.setDescription('VLAN ID in QoS sub-interface.')
hwBRASQoSTrapIfindex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 1, 8), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBRASQoSTrapIfindex.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrapIfindex.setDescription('QoS interface index. ')
hwBRASQoSTrapDefine = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2))
hwBRASQoSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1))
hwBRASQoSIfResFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 1)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapIfindex"))
if mibBuilder.loadTexts: hwBRASQoSIfResFail.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfResFail.setDescription('QoS interface or subinterface resource opration fail.')
hwBRASQoSIfVlanResFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 2)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapIfindex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapVlan"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapQinqVlan"))
if mibBuilder.loadTexts: hwBRASQoSIfVlanResFail.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSIfVlanResFail.setDescription('QoS VLAN resource opration fail.')
hwBRASQoSTunnelResFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 3)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapTunnelID"))
if mibBuilder.loadTexts: hwBRASQoSTunnelResFail.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTunnelResFail.setDescription('QoS tunnel resource opration fail.')
hwBRASQoSUserResFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 4)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapUserID"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapUserBehavior"))
if mibBuilder.loadTexts: hwBRASQoSUserResFail.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSUserResFail.setDescription('QoS user resource opration fail.')
hwBRASQoSTrunkFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 5)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapIfindex"))
if mibBuilder.loadTexts: hwBRASQoSTrunkFail.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTrunkFail.setDescription('QoS Trunk resource exception.')
hwBRASQoSUserBandwidthOverflow = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 6)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapIfindex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapUserID"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSFailBandwidth"))
if mibBuilder.loadTexts: hwBRASQoSUserBandwidthOverflow.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSUserBandwidthOverflow.setDescription("User's bandwidth to be alloced has exceeded the limit of current intface.")
hwBRASQoSTMExcepion = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 2, 2, 1, 7)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapSlotID"))
if mibBuilder.loadTexts: hwBRASQoSTMExcepion.setStatus('current')
if mibBuilder.loadTexts: hwBRASQoSTMExcepion.setDescription('TM exception in current slot.')
hwBrasQosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3))
hwBrasQosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 1))
hwBrasQosCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 1, 1)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBrasQosQosProfileGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosSchedulerProfileGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosDropProfileGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosQueueProfileGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosQueueClassGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosFlowMappingGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosIfGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosIfVcGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosVpGroupGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosVcGroupGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosGVpGroupGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosServiceGroupGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosPortQueueGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosPortWredGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosCarProfileGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosSlotGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosMultiShapingGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosTrapOidGroup"), ("HUAWEI-BRAS-QOS-MIB", "hwBrasQosTrapDefineGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosCompliance = hwBrasQosCompliance.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwBrasQosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2))
hwBrasQosQosProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 1)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileQueueName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileDropName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileSchedulerName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSFlowMappingName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSLinkAjustLength"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQoSProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosQosProfileGroup = hwBrasQosQosProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosQosProfileGroup.setDescription('The BRAS QoS Qos Profile group.')
hwBrasQosSchedulerProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 2)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsUpCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsUpPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsUpLength"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsDownCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsDownPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileGtsDownLength"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileUpCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileUpCbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileUpPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileUpPbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileDownCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileDownCbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileDownPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileDownPbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerProfileWfqWeight"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSchedulerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosSchedulerProfileGroup = hwBrasQosSchedulerProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosSchedulerProfileGroup.setDescription('The BRAS QoS Scheduler Profile group.')
hwBrasQosDropProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 3)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailBeThreshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailAf1Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailAf2Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailAf3Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailAf4Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailEfThreshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailCs6Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileTailCs7Threshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredMaxThreshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredMinThreshold"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredGreenHighValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredGreenLowValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredGreenMaxDrop"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredYellowHighValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredYellowLowValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredYellowMaxDrop"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredRedHighValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredRedLowValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredRedMaxDrop"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredUserDefHighValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredUserDefLowValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileWredUserDefMaxDrop"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSDropProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosDropProfileGroup = hwBrasQosDropProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosDropProfileGroup.setDescription('The BRAS QoS Drop Profile group.')
hwBrasQosQueueProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 4)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileBeStyle"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileAf1Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileAf2Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileAf3Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileAf4Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileEfStyle"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileCs6Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileCs7Style"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosQueueProfileGroup = hwBrasQosQueueProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosQueueProfileGroup.setDescription('The BRAS QoS Queue Profile group.')
hwBrasQosQueueClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 5)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassServiceId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassWredEnableStatus"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassWredWeight"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassWrrWeight"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassLength"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassCbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassPbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassWfqWeight"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassShaping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassScheduler"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSQueueClassDropName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosQueueClassGroup = hwBrasQosQueueClassGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosQueueClassGroup.setDescription('The BRAS QoS Queue Class group.')
hwBrasQosFlowMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 6)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSFlowMappingName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSBeMapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSAf1Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSAf2Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSAf3Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSAf4Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSEfMapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCs6Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCs7Mapping"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSFlowMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosFlowMappingGroup = hwBrasQosFlowMappingGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosFlowMappingGroup.setDescription('The BRAS QoS Flow Mapping group.')
hwBrasQosIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 7)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfQoSProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfScheduleId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfServiceGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfShapingValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVpGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfInboundVcGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfOutboundAVcGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfOutboundBVcGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfInboundGVpGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfOutboundAGVpGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfPacketAjustOverhead"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfRemoteLinkMode"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfInCarProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfInStatistics"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfOutCarProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfOutStatistics"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVplsCarStatus"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfMultiShapingStatus"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfActiveStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosIfGroup = hwBrasQosIfGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosIfGroup.setDescription('The BRAS QoS If group.')
hwBrasQosIfVcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 8)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcIfIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcVlanId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcQinqVlanId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcVlanEndId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcQinqVlanEndId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcVcGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcServiceGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcInCarProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcInStatistics"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcInCarEachVlanStatus"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcOutCarProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcOutStatistics"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVcOutCarEachVlanStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosIfVcGroup = hwBrasQosIfVcGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosIfVcGroup.setDescription('The BRAS QoS If Vc group.')
hwBrasQosVpGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 9)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupIfIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupQosProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVpGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosVpGroupGroup = hwBrasQosVpGroupGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosVpGroupGroup.setDescription('The BRAS QoS Vp Group group.')
hwBrasQosVcGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 10)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupIfIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupQosProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSVcGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosVcGroupGroup = hwBrasQosVcGroupGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosVcGroupGroup.setDescription('The BRAS QoS Vc Group group.')
hwBrasQosGVpGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 11)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSGVpGroupSlotId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSGVpGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSGVpGroupQosProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSGVpGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosGVpGroupGroup = hwBrasQosGVpGroupGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosGVpGroupGroup.setDescription('The BRAS QoS GVp Group group.')
hwBrasQosServiceGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 12)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSServiceGroupIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSServiceGroupName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSServiceGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosServiceGroupGroup = hwBrasQosServiceGroupGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosServiceGroupGroup.setDescription('The BRAS QoS Service Group group.')
hwBrasQosPortQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 13)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueIfIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueServiceId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueScheduleStyle"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueWfqWeight"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueShapingValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueShaingPercentage"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueuePortWredName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosPortQueueGroup = hwBrasQosPortQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosPortQueueGroup.setDescription('The BRAS QoS Port Queue group.')
hwBrasQosPortWredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 14)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredGreenLowLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredGreenHighLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredGreenDiscardValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredYellowLowLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredYellowHighLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredYellowDiscardValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredRedLowLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredRedHighLimitValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredRedDiscardValue"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSPortWredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosPortWredGroup = hwBrasQosPortWredGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosPortWredGroup.setDescription('The BRAS QoS Port Wred group.')
hwBrasQosCarProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 15)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfilePir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileCbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfilePbs"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSCarProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosCarProfileGroup = hwBrasQosCarProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosCarProfileGroup.setDescription('The BRAS QoS Car Profile group.')
hwBrasQosSlotGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 16)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotId"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotLinkLayerExclude"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotEtherAjustOverhead"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotRemoteAdjustEnableStatus"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotInboundGqUsedNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotInboundSqUsedNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotInboundGqFreeNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotInboundSqFreeNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotOutboundGqUsedNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotOutboundSqUsedNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotOutboundGqFreeNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotOutboundSqFreeNum"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSSlotActiveStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosSlotGroup = hwBrasQosSlotGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosSlotGroup.setDescription('The BRAS QoS Slot group.')
hwBrasQosMultiShapingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 17)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingName"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingEndIndex"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingCir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingPir"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingQueueLength"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSMultiShapingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosMultiShapingGroup = hwBrasQosMultiShapingGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosMultiShapingGroup.setDescription('The BRAS QoS Multi Shaping group.')
hwBrasQosTrapOidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 18)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapSlotID"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSFailBandwidth"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapUserBehavior"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapUserID"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapTunnelID"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapQinqVlan"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapVlan"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrapIfindex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosTrapOidGroup = hwBrasQosTrapOidGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosTrapOidGroup.setDescription('The BRAS QoS Trap Oid group.')
hwBrasQosTrapDefineGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 18, 3, 2, 19)).setObjects(("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfResFail"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSIfVlanResFail"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTunnelResFail"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSUserResFail"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTrunkFail"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSUserBandwidthOverflow"), ("HUAWEI-BRAS-QOS-MIB", "hwBRASQoSTMExcepion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasQosTrapDefineGroup = hwBrasQosTrapDefineGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasQosTrapDefineGroup.setDescription('The BRAS QoS Trap Define group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-QOS-MIB", hwBRASQoSTMExcepion=hwBRASQoSTMExcepion, hwBRASQoSSchedulerProfileTable=hwBRASQoSSchedulerProfileTable, hwBRASQoSSchedulerProfileUpCir=hwBRASQoSSchedulerProfileUpCir, hwBRASQoSQueueProfileRowStatus=hwBRASQoSQueueProfileRowStatus, hwBRASQoSFlowMappingEntry=hwBRASQoSFlowMappingEntry, hwBRASQoSIfVcQinqVlanEndId=hwBRASQoSIfVcQinqVlanEndId, hwBRASQoSIfVcServiceGroupName=hwBRASQoSIfVcServiceGroupName, hwBRASQoSCarProfileIndex=hwBRASQoSCarProfileIndex, hwBRASQoSSlotOutboundGqUsedNum=hwBRASQoSSlotOutboundGqUsedNum, hwBRASQoSTrapTunnelID=hwBRASQoSTrapTunnelID, hwBRASQoSIfTable=hwBRASQoSIfTable, hwBRASQoSIfInboundVcGroupName=hwBRASQoSIfInboundVcGroupName, hwBRASQoSQoSProfileIndex=hwBRASQoSQoSProfileIndex, hwBRASQoSUserBandwidthOverflow=hwBRASQoSUserBandwidthOverflow, hwBRASQoSTraps=hwBRASQoSTraps, hwBRASQoSPortWredGreenLowLimitValue=hwBRASQoSPortWredGreenLowLimitValue, SchedulerService=SchedulerService, hwBRASQoSVcGroupTable=hwBRASQoSVcGroupTable, hwBRASQoSVcGroupName=hwBRASQoSVcGroupName, hwBRASQoSQueueProfileIndex=hwBRASQoSQueueProfileIndex, hwBRASQoSDropProfileTailAf3Threshold=hwBRASQoSDropProfileTailAf3Threshold, hwBRASQoSServiceGroupIndex=hwBRASQoSServiceGroupIndex, hwBRASQoSSlotTable=hwBRASQoSSlotTable, hwBrasQosSlotGroup=hwBrasQosSlotGroup, hwBRASQoSCarProfileCir=hwBRASQoSCarProfileCir, hwBRASQoSQueueProfileCs7Style=hwBRASQoSQueueProfileCs7Style, hwBRASQoSQueueClassScheduler=hwBRASQoSQueueClassScheduler, hwBRASQoSIfVplsCarStatus=hwBRASQoSIfVplsCarStatus, hwBRASQoSFailBandwidth=hwBRASQoSFailBandwidth, hwBRASQoSDropProfileWredGreenLowValue=hwBRASQoSDropProfileWredGreenLowValue, hwBRASQoSQueueProfileCs6Style=hwBRASQoSQueueProfileCs6Style, InterfaceScheduler=InterfaceScheduler, hwBRASQoSGVpGroupRowStatus=hwBRASQoSGVpGroupRowStatus, hwBRASQoSSlotInboundSqUsedNum=hwBRASQoSSlotInboundSqUsedNum, hwBRASQoSMultiShapingCir=hwBRASQoSMultiShapingCir, hwBRASQoSSlotLinkLayerExclude=hwBRASQoSSlotLinkLayerExclude, hwBrasQosCompliance=hwBrasQosCompliance, hwBRASQoSSchedulerProfileGtsUpCir=hwBRASQoSSchedulerProfileGtsUpCir, hwBRASQoSSlotOutboundGqFreeNum=hwBRASQoSSlotOutboundGqFreeNum, hwBRASQoSVpGroupQosProfileName=hwBRASQoSVpGroupQosProfileName, hwBrasQosVcGroupGroup=hwBrasQosVcGroupGroup, hwBRASQoSDropProfileTailAf4Threshold=hwBRASQoSDropProfileTailAf4Threshold, hwBRASQoSAf4Mapping=hwBRASQoSAf4Mapping, hwBRASQoSTrapQinqVlan=hwBRASQoSTrapQinqVlan, hwBRASQoSIfResFail=hwBRASQoSIfResFail, hwBRASQoSObjects=hwBRASQoSObjects, hwBrasQosConformance=hwBrasQosConformance, hwBRASQoS=hwBRASQoS, hwBRASQoSSchedulerRowStatus=hwBRASQoSSchedulerRowStatus, hwBrasQosGVpGroupGroup=hwBrasQosGVpGroupGroup, hwBRASQoSDropProfileWredYellowHighValue=hwBRASQoSDropProfileWredYellowHighValue, hwBRASQoSCarProfileName=hwBRASQoSCarProfileName, hwBRASQoSServiceGroupTable=hwBRASQoSServiceGroupTable, LinkMode=LinkMode, hwBRASQoSDropProfileRowStatus=hwBRASQoSDropProfileRowStatus, hwBRASQoSAf1Mapping=hwBRASQoSAf1Mapping, hwBrasQosQueueProfileGroup=hwBrasQosQueueProfileGroup, hwBRASQoSQueueClassDropName=hwBRASQoSQueueClassDropName, hwBRASQoSPortWredYellowDiscardValue=hwBRASQoSPortWredYellowDiscardValue, hwBRASQoSQoSProfileSchedulerName=hwBRASQoSQoSProfileSchedulerName, hwBRASQoSQueueClassServiceId=hwBRASQoSQueueClassServiceId, hwBrasQosFlowMappingGroup=hwBrasQosFlowMappingGroup, hwBRASQoSMultiShapingName=hwBRASQoSMultiShapingName, hwBRASQoSSchedulerProfileUpPbs=hwBRASQoSSchedulerProfileUpPbs, hwBRASQoSTrapSlotID=hwBRASQoSTrapSlotID, hwBRASQoSCarProfilePbs=hwBRASQoSCarProfilePbs, hwBRASQoSSchedulerProfileGtsDownCir=hwBRASQoSSchedulerProfileGtsDownCir, hwBrasQosPortWredGroup=hwBrasQosPortWredGroup, hwBRASQoSDropProfileWredYellowLowValue=hwBRASQoSDropProfileWredYellowLowValue, hwBRASQoSPortQueueTable=hwBRASQoSPortQueueTable, hwBRASQoSQoSProfileTable=hwBRASQoSQoSProfileTable, hwBRASQoSGVpGroupSlotId=hwBRASQoSGVpGroupSlotId, hwBRASQoSCarProfileTable=hwBRASQoSCarProfileTable, hwBRASQoSMultiShapingEndIndex=hwBRASQoSMultiShapingEndIndex, hwBRASQoSTrapIfindex=hwBRASQoSTrapIfindex, hwBRASQoSServiceGroupName=hwBRASQoSServiceGroupName, hwBRASQoSQoSFlowMappingName=hwBRASQoSQoSFlowMappingName, hwBRASQoSDropProfileTailCs6Threshold=hwBRASQoSDropProfileTailCs6Threshold, hwBRASQoSPortWredRedDiscardValue=hwBRASQoSPortWredRedDiscardValue, hwBRASQoSQueueClassCbs=hwBRASQoSQueueClassCbs, hwBRASQoSBeMapping=hwBRASQoSBeMapping, hwBRASQoSTrapDefine=hwBRASQoSTrapDefine, hwBRASQoSDropProfileWredGreenHighValue=hwBRASQoSDropProfileWredGreenHighValue, hwBRASQoSGVpGroupTable=hwBRASQoSGVpGroupTable, hwBRASQoSMultiShapingRowStatus=hwBRASQoSMultiShapingRowStatus, hwBRASQoSQueueClassWrrWeight=hwBRASQoSQueueClassWrrWeight, hwBRASQoSPortWredYellowHighLimitValue=hwBRASQoSPortWredYellowHighLimitValue, hwBRASQoSDropProfileTable=hwBRASQoSDropProfileTable, hwBRASQoSIfPacketAjustOverhead=hwBRASQoSIfPacketAjustOverhead, hwBRASQoSSchedulerProfileIndex=hwBRASQoSSchedulerProfileIndex, hwBRASQoSPortQueueShapingValue=hwBRASQoSPortQueueShapingValue, hwBRASQoSPortQueueEntry=hwBRASQoSPortQueueEntry, hwBRASQoSPortWredRedLowLimitValue=hwBRASQoSPortWredRedLowLimitValue, hwBRASQoSIfEntry=hwBRASQoSIfEntry, hwBRASQoSFlowMappingRowStatus=hwBRASQoSFlowMappingRowStatus, hwBRASQoSQoSLinkAjustLength=hwBRASQoSQoSLinkAjustLength, hwBRASQoSSchedulerProfileDownCir=hwBRASQoSSchedulerProfileDownCir, hwBRASQoSSchedulerProfileUpPir=hwBRASQoSSchedulerProfileUpPir, hwBRASQoSIfName=hwBRASQoSIfName, hwBRASQoSQueueClassCir=hwBRASQoSQueueClassCir, hwBRASQoSIfVcQinqVlanId=hwBRASQoSIfVcQinqVlanId, hwBRASQoSGVpGroupQosProfileName=hwBRASQoSGVpGroupQosProfileName, hwBRASQoSSlotInboundGqUsedNum=hwBRASQoSSlotInboundGqUsedNum, hwBrasQosIfGroup=hwBrasQosIfGroup, hwBRASQoSMultiShapingQueueLength=hwBRASQoSMultiShapingQueueLength, hwBRASQoSDropProfileWredMinThreshold=hwBRASQoSDropProfileWredMinThreshold, hwBRASQoSTrapOid=hwBRASQoSTrapOid, hwBRASQoSQoSProfileQueueName=hwBRASQoSQoSProfileQueueName, hwBrasQosServiceGroupGroup=hwBrasQosServiceGroupGroup, hwBRASQoSPortQueuePortWredName=hwBRASQoSPortQueuePortWredName, hwBRASQoSTrapUserID=hwBRASQoSTrapUserID, hwBRASQoSPortWredRedHighLimitValue=hwBRASQoSPortWredRedHighLimitValue, hwBRASQoSGVpGroupName=hwBRASQoSGVpGroupName, hwBRASQoSMultiShapingIndex=hwBRASQoSMultiShapingIndex, hwBRASQoSQueueClassWredEnableStatus=hwBRASQoSQueueClassWredEnableStatus, hwBRASQoSDropProfileWredUserDefHighValue=hwBRASQoSDropProfileWredUserDefHighValue, hwBRASQoSIfVpGroupName=hwBRASQoSIfVpGroupName, hwBRASQoSIfVcInStatistics=hwBRASQoSIfVcInStatistics, hwBRASQoSEfMapping=hwBRASQoSEfMapping, hwBRASQoSPortQueueScheduleStyle=hwBRASQoSPortQueueScheduleStyle, hwBRASQoSIfVcOutStatistics=hwBRASQoSIfVcOutStatistics, hwBRASQoSIfScheduleId=hwBRASQoSIfScheduleId, hwBrasQosPortQueueGroup=hwBrasQosPortQueueGroup, hwBRASQoSDropProfileWredRedMaxDrop=hwBRASQoSDropProfileWredRedMaxDrop, hwBRASQoSDropProfileWredMaxThreshold=hwBRASQoSDropProfileWredMaxThreshold, hwBRASQoSSchedulerProfileGtsUpPir=hwBRASQoSSchedulerProfileGtsUpPir, hwBRASQoSFlowMappingTable=hwBRASQoSFlowMappingTable, hwBRASQoSIfOutboundBVcGroupName=hwBRASQoSIfOutboundBVcGroupName, hwBRASQoSQueueClassPir=hwBRASQoSQueueClassPir, hwBRASQoSDropProfileWredUserDefMaxDrop=hwBRASQoSDropProfileWredUserDefMaxDrop, hwBRASQoSMultiShapingPir=hwBRASQoSMultiShapingPir, hwBRASQoSDropProfileWredRedLowValue=hwBRASQoSDropProfileWredRedLowValue, hwBRASQoSQueueClassProfileName=hwBRASQoSQueueClassProfileName, hwBRASQoSDropProfileTailAf1Threshold=hwBRASQoSDropProfileTailAf1Threshold, hwBRASQoSQueueClassEntry=hwBRASQoSQueueClassEntry, hwBRASQoSIfVcEntry=hwBRASQoSIfVcEntry, hwBRASQoSIfVcIfIndex=hwBRASQoSIfVcIfIndex, hwBRASQoSQueueClassWredWeight=hwBRASQoSQueueClassWredWeight, hwBRASQoSDropProfileTailEfThreshold=hwBRASQoSDropProfileTailEfThreshold, hwBRASQoSQoSProfileName=hwBRASQoSQoSProfileName, hwBRASQoSQueueProfileAf1Style=hwBRASQoSQueueProfileAf1Style, hwBRASQoSPortWredRowStatus=hwBRASQoSPortWredRowStatus, hwBrasQosGroups=hwBrasQosGroups, hwBRASQoSDropProfileTailBeThreshold=hwBRASQoSDropProfileTailBeThreshold, hwBRASQoSCs6Mapping=hwBRASQoSCs6Mapping, hwBRASQoSIfVcTable=hwBRASQoSIfVcTable, hwBRASQoSServiceGroupEntry=hwBRASQoSServiceGroupEntry, hwBRASQoSDropProfileEntry=hwBRASQoSDropProfileEntry, hwBRASQoSIfVlanResFail=hwBRASQoSIfVlanResFail, hwBRASQoSSlotActiveStatus=hwBRASQoSSlotActiveStatus, hwBRASQoSTrunkFail=hwBRASQoSTrunkFail, hwBRASQoSQueueProfileTable=hwBRASQoSQueueProfileTable, hwBRASQoSQueueProfileEntry=hwBRASQoSQueueProfileEntry, hwBRASQoSIfInboundGVpGroupName=hwBRASQoSIfInboundGVpGroupName, hwBRASQoSTunnelResFail=hwBRASQoSTunnelResFail, hwBRASQoSIfOutboundAGVpGroupName=hwBRASQoSIfOutboundAGVpGroupName, hwBRASQoSSchedulerProfileDownCbs=hwBRASQoSSchedulerProfileDownCbs, hwBRASQoSCarProfileRowStatus=hwBRASQoSCarProfileRowStatus, hwBrasQosSchedulerProfileGroup=hwBrasQosSchedulerProfileGroup, hwBRASQoSIfMultiShapingStatus=hwBRASQoSIfMultiShapingStatus, hwBRASQoSIfVcInCarEachVlanStatus=hwBRASQoSIfVcInCarEachVlanStatus, hwBRASQoSPortWredGreenHighLimitValue=hwBRASQoSPortWredGreenHighLimitValue, hwBrasQosQueueClassGroup=hwBrasQosQueueClassGroup, hwBRASQoSIfServiceGroupName=hwBRASQoSIfServiceGroupName, hwBRASQoSIfOutStatistics=hwBRASQoSIfOutStatistics, hwBRASQoSIfVcVlanEndId=hwBRASQoSIfVcVlanEndId, hwBRASQoSPortWredName=hwBRASQoSPortWredName, hwBRASQoSQueueClassTable=hwBRASQoSQueueClassTable, hwBRASQoSQueueClassPbs=hwBRASQoSQueueClassPbs, hwBRASQoSIfOutCarProfileName=hwBRASQoSIfOutCarProfileName, hwBRASQoSPortQueueWfqWeight=hwBRASQoSPortQueueWfqWeight, hwBrasQosTrapOidGroup=hwBrasQosTrapOidGroup, hwBRASQoSPortQueueRowStatus=hwBRASQoSPortQueueRowStatus, hwBRASQoSQoSProfileRowStatus=hwBRASQoSQoSProfileRowStatus, hwBRASQoSMibTrap=hwBRASQoSMibTrap, hwBRASQoSSlotOutboundSqUsedNum=hwBRASQoSSlotOutboundSqUsedNum, hwBrasQosCompliances=hwBrasQosCompliances, hwBRASQoSDropProfileWredRedHighValue=hwBRASQoSDropProfileWredRedHighValue, hwBRASQoSIfInCarProfileName=hwBRASQoSIfInCarProfileName, hwBRASQoSQoSProfileEntry=hwBRASQoSQoSProfileEntry, hwBrasQosVpGroupGroup=hwBrasQosVpGroupGroup, hwBrasQosTrapDefineGroup=hwBrasQosTrapDefineGroup, hwBRASQoSVpGroupTable=hwBRASQoSVpGroupTable, hwBRASQoSSlotInboundGqFreeNum=hwBRASQoSSlotInboundGqFreeNum, hwBRASQoSIfVcVlanId=hwBRASQoSIfVcVlanId, hwBRASQoSVpGroupEntry=hwBRASQoSVpGroupEntry, hwBRASQoSSlotEtherAjustOverhead=hwBRASQoSSlotEtherAjustOverhead, hwBrasQosIfVcGroup=hwBrasQosIfVcGroup, hwBRASQoSQueueProfileBeStyle=hwBRASQoSQueueProfileBeStyle, hwBRASQoSIfQoSProfileName=hwBRASQoSIfQoSProfileName, hwBRASQoSIfVcOutCarEachVlanStatus=hwBRASQoSIfVcOutCarEachVlanStatus, hwBRASQoSSchedulerProfileEntry=hwBRASQoSSchedulerProfileEntry, hwBRASQoSCarProfileCbs=hwBRASQoSCarProfileCbs, hwBrasQosDropProfileGroup=hwBrasQosDropProfileGroup, hwBRASQoSVcGroupEntry=hwBRASQoSVcGroupEntry, hwBRASQoSSlotId=hwBRASQoSSlotId, hwBRASQoSSchedulerProfileWfqWeight=hwBRASQoSSchedulerProfileWfqWeight, hwBRASQoSAf2Mapping=hwBRASQoSAf2Mapping, hwBRASQoSQueueProfileAf3Style=hwBRASQoSQueueProfileAf3Style, hwBRASQoSIfVcVcGroupName=hwBRASQoSIfVcVcGroupName, hwBRASQoSIfIndex=hwBRASQoSIfIndex, hwBRASQoSCs7Mapping=hwBRASQoSCs7Mapping, hwBRASQoSPortWredEntry=hwBRASQoSPortWredEntry, hwBRASQoSSchedulerProfileDownPir=hwBRASQoSSchedulerProfileDownPir, hwBRASQoSSlotRemoteAdjustEnableStatus=hwBRASQoSSlotRemoteAdjustEnableStatus, hwBRASQoSPortWredYellowLowLimitValue=hwBRASQoSPortWredYellowLowLimitValue, hwBrasQosQosProfileGroup=hwBrasQosQosProfileGroup, hwBRASQoSUserResFail=hwBRASQoSUserResFail, hwBRASQoSPortQueueServiceId=hwBRASQoSPortQueueServiceId, hwBRASQoSSchedulerProfileUpCbs=hwBRASQoSSchedulerProfileUpCbs, hwBRASQoSVpGroupRowStatus=hwBRASQoSVpGroupRowStatus, hwBRASQoSTrapUserBehavior=hwBRASQoSTrapUserBehavior, hwBRASQoSQueueClassWfqWeight=hwBRASQoSQueueClassWfqWeight, hwBRASQoSDropProfileWredUserDefLowValue=hwBRASQoSDropProfileWredUserDefLowValue, hwBRASQoSSchedulerProfileGtsDownPir=hwBRASQoSSchedulerProfileGtsDownPir, hwBRASQoSDropProfileName=hwBRASQoSDropProfileName, hwBRASQoSVcGroupIfIndex=hwBRASQoSVcGroupIfIndex, hwBrasQosCarProfileGroup=hwBrasQosCarProfileGroup, hwBRASQoSCarProfileEntry=hwBRASQoSCarProfileEntry, SchedulerStyle=SchedulerStyle, hwBRASQoSDropProfileIndex=hwBRASQoSDropProfileIndex, hwBRASQoSQueueClassShaping=hwBRASQoSQueueClassShaping, hwBRASQoSFlowMappingName=hwBRASQoSFlowMappingName, hwBRASQoSVpGroupName=hwBRASQoSVpGroupName, hwBRASQoSVcGroupQosProfileName=hwBRASQoSVcGroupQosProfileName, hwBRASQoSCarProfilePir=hwBRASQoSCarProfilePir, hwBRASQoSPortWredGreenDiscardValue=hwBRASQoSPortWredGreenDiscardValue, hwBRASQoSMultiShapingEntry=hwBRASQoSMultiShapingEntry, hwBRASQoSServiceGroupRowStatus=hwBRASQoSServiceGroupRowStatus, hwBRASQoSIfRemoteLinkMode=hwBRASQoSIfRemoteLinkMode, hwBRASQoSIfInStatistics=hwBRASQoSIfInStatistics, StatMode=StatMode, hwBRASQoSSchedulerProfileGtsUpLength=hwBRASQoSSchedulerProfileGtsUpLength, hwBRASQoSDropProfileWredYellowMaxDrop=hwBRASQoSDropProfileWredYellowMaxDrop, hwBRASQoSSchedulerProfileGtsDownLength=hwBRASQoSSchedulerProfileGtsDownLength, hwBRASQoSQueueClassLength=hwBRASQoSQueueClassLength, hwBRASQoSPortQueueIfIndex=hwBRASQoSPortQueueIfIndex, hwBRASQoSSlotEntry=hwBRASQoSSlotEntry, hwBRASQoSDropProfileTailCs7Threshold=hwBRASQoSDropProfileTailCs7Threshold, hwBRASQoSIfVcOutCarProfileName=hwBRASQoSIfVcOutCarProfileName, hwBRASQoSDropProfileTailAf2Threshold=hwBRASQoSDropProfileTailAf2Threshold, hwBRASQoSSlotInboundSqFreeNum=hwBRASQoSSlotInboundSqFreeNum, hwBRASQoSQueueProfileAf4Style=hwBRASQoSQueueProfileAf4Style, hwBRASQoSVcGroupRowStatus=hwBRASQoSVcGroupRowStatus, hwBRASQoSSchedulerProfileName=hwBRASQoSSchedulerProfileName, hwBRASQoSMultiShapingTable=hwBRASQoSMultiShapingTable, hwBRASQoSSlotOutboundSqFreeNum=hwBRASQoSSlotOutboundSqFreeNum, hwBRASQoSAf3Mapping=hwBRASQoSAf3Mapping, hwBRASQoSTrapVlan=hwBRASQoSTrapVlan, hwBRASQoSPortWredTable=hwBRASQoSPortWredTable, hwBRASQoSIfShapingValue=hwBRASQoSIfShapingValue, hwBRASQoSQoSProfileDropName=hwBRASQoSQoSProfileDropName, hwBRASQoSIfActiveStatus=hwBRASQoSIfActiveStatus, hwBRASQoSPortQueueShaingPercentage=hwBRASQoSPortQueueShaingPercentage)
mibBuilder.exportSymbols("HUAWEI-BRAS-QOS-MIB", hwBRASQoSGVpGroupEntry=hwBRASQoSGVpGroupEntry, hwBrasQosMultiShapingGroup=hwBrasQosMultiShapingGroup, hwBRASQoSDropProfileWredGreenMaxDrop=hwBRASQoSDropProfileWredGreenMaxDrop, PYSNMP_MODULE_ID=hwBRASQoS, hwBRASQoSQueueProfileName=hwBRASQoSQueueProfileName, hwBRASQoSQueueProfileAf2Style=hwBRASQoSQueueProfileAf2Style, hwBRASQoSIfVcInCarProfileName=hwBRASQoSIfVcInCarProfileName, QueueClass=QueueClass, hwBRASQoSVpGroupIfIndex=hwBRASQoSVpGroupIfIndex, hwBRASQoSIfOutboundAVcGroupName=hwBRASQoSIfOutboundAVcGroupName, hwBRASQoSQueueProfileEfStyle=hwBRASQoSQueueProfileEfStyle, hwBRASQoSSchedulerProfileDownPbs=hwBRASQoSSchedulerProfileDownPbs)
