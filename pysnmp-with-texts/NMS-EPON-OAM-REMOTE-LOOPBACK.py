#
# PySNMP MIB module NMS-EPON-OAM-REMOTE-LOOPBACK (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-EPON-OAM-REMOTE-LOOPBACK
# Produced by pysmi-0.3.4 at Wed May  1 14:21:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
llidIfIndex, = mibBuilder.importSymbols("NMS-EPON-LLID", "llidIfIndex")
nmsEPONGroup, = mibBuilder.importSymbols("NMS-SMI", "nmsEPONGroup")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, ModuleIdentity, ObjectIdentity, Bits, MibIdentifier, Gauge32, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "ModuleIdentity", "ObjectIdentity", "Bits", "MibIdentifier", "Gauge32", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention, PhysAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress", "RowStatus")
nmsEponOltOamRemoteLoopback = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3))
nmsEponOltOamRemoteLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1), )
if mibBuilder.loadTexts: nmsEponOltOamRemoteLoopbackTable.setStatus('mandatory')
if mibBuilder.loadTexts: nmsEponOltOamRemoteLoopbackTable.setDescription('A list of epon olt oam remote loopback table entries.')
nmsEponOltOamRemoteLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1), ).setIndexNames((0, "NMS-EPON-LLID", "llidIfIndex"))
if mibBuilder.loadTexts: nmsEponOltOamRemoteLoopbackEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nmsEponOltOamRemoteLoopbackEntry.setDescription('A collection of additional objects in the epon olt oam remote loopback table.')
oltTxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oltTxFrameSize.setStatus('mandatory')
if mibBuilder.loadTexts: oltTxFrameSize.setDescription('OLT tx frame size, range is 64-1518.')
oltTxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oltTxFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: oltTxFrameCount.setDescription('OLT tx frame count, range is 1-99.')
oltRxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltRxFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: oltRxFrameCount.setDescription('OLT rx frame count, range is 1-99.')
oltOutOfSequenceFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltOutOfSequenceFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: oltOutOfSequenceFrameCount.setDescription('OLT out of sequence frame count, range is 1-99.')
oltLossPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltLossPercentage.setStatus('mandatory')
if mibBuilder.loadTexts: oltLossPercentage.setDescription('Percentage of OLT losing frame, range is 0-100.')
oltMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltMinRtt.setStatus('mandatory')
if mibBuilder.loadTexts: oltMinRtt.setDescription('OLT minimum RTT(Round Trip Time).')
oltAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltAverageRtt.setStatus('mandatory')
if mibBuilder.loadTexts: oltAverageRtt.setDescription('OLT average RTT(Round Trip Time).')
oltMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltMaxRtt.setStatus('mandatory')
if mibBuilder.loadTexts: oltMaxRtt.setDescription('OLT maximum RTT(Round Trip Time).')
oltLoopbackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oltLoopbackRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: oltLoopbackRowStatus.setDescription('OLT loopback row status.')
mibBuilder.exportSymbols("NMS-EPON-OAM-REMOTE-LOOPBACK", oltRxFrameCount=oltRxFrameCount, oltAverageRtt=oltAverageRtt, oltMaxRtt=oltMaxRtt, nmsEponOltOamRemoteLoopbackTable=nmsEponOltOamRemoteLoopbackTable, oltTxFrameCount=oltTxFrameCount, nmsEponOltOamRemoteLoopback=nmsEponOltOamRemoteLoopback, oltMinRtt=oltMinRtt, oltLossPercentage=oltLossPercentage, oltOutOfSequenceFrameCount=oltOutOfSequenceFrameCount, oltLoopbackRowStatus=oltLoopbackRowStatus, nmsEponOltOamRemoteLoopbackEntry=nmsEponOltOamRemoteLoopbackEntry, oltTxFrameSize=oltTxFrameSize)
