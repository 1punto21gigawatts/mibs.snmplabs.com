#
# PySNMP MIB module CADANT-SHOWCM-FORMAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-SHOWCM-FORMAT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:46:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
cadExperimental, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadExperimental")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Gauge32, Bits, iso, IpAddress, NotificationType, Unsigned32, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Gauge32", "Bits", "iso", "IpAddress", "NotificationType", "Unsigned32", "ModuleIdentity", "MibIdentifier")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
cadShowCmFormatMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20))
cadShowCmFormatMib.setRevisions(('2015-09-21 00:00', '2013-07-03 00:00', '2013-05-31 00:00', '2011-12-01 00:00', '2010-10-14 00:00', '2010-01-28 00:00', '2010-01-12 00:00', '2009-09-16 00:00', '2009-05-15 00:00', '2009-04-23 00:00', '2008-12-15 00:00', '2008-07-16 00:00', '2007-12-09 00:00', '2006-12-14 00:00', '2006-10-16 00:00', '2006-04-13 00:00', '2006-03-08 00:00', '2005-12-21 00:00', '2005-11-30 00:00', '2005-11-18 00:00', '2005-10-18 00:00', '2005-09-29 00:00', '2005-06-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cadShowCmFormatMib.setRevisionsDescriptions(('Remove obsolete state-docsis20, interface-docsis20; update contact info; add OFDM column types', 'Add column ds-last-penalty-time, ds-penalty-count,us-last-penalty-time,us-penalty-count', 'Add column tx-pwr', 'Add column qos-primary', 'Add column bonded-actual', 'Add columns l2vpn-id and l2vpn-qtag', 'Add column fec-percent-uncorrected', 'change multiple-rows-uchan to multiple-uchan. Add columns cpe-count, cpe-type, cpe-ip, cm-cpe-ip, cm-mac, cm-ip and cpe-mac', 'remove columns uchan-fec-corrected uchan-fec-good uchan-fec-uncorrected uchan-rec-pwr uchan-response-percent uchan-snr uchan-power-adj uchan-timing add multiple-rows-uchan, add multiple_rows enumeration MIB object', 'add columns uchan-fec-corrected uchan-fec-good uchan-fec-uncorrected uchan-rec-pwr uchan-response-percent uchan-snr uchan-power-adj uchan-timing', 'add columns service-type-prov & service-type-curr', 'add columns fpcm-cpe', 'add columns bonded, cable-mac, state-docsis20, interface-docsis20', 'add column cfgfilelong', 'add column fpcm-us-ds-counts', 'add column load-balance-group', 'merged columns filter-grp-cm-down, filter-grp-cm-up into one column filter-cm', 'removed columns filter-grp-cpe-down, filter-grp-cpe-up', 'added columns cm-type, fpccm-online, fpccm-qos', 'added column flex-path-id', 'added columns filter-grp-cm-down, filter-grp-cm-up, filter-grp-cpe-down, filter-grp-cpe-up', 'added columns docsis-capability and docsis-provisioned', 'created',))
if mibBuilder.loadTexts: cadShowCmFormatMib.setLastUpdated('201509210000Z')
if mibBuilder.loadTexts: cadShowCmFormatMib.setOrganization('Cadant Inc.')
if mibBuilder.loadTexts: cadShowCmFormatMib.setContactInfo('support@arris.com')
if mibBuilder.loadTexts: cadShowCmFormatMib.setDescription('This MIB contains definitions for modifying the output of the show cable modem CLI command')
class ShowCmFormatColumnName(TextualConvention, Integer32):
    description = 'Enumeration of the show cable modem column names'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78))
    namedValues = NamedValues(("none", 0), ("multiple-uchan", 1), ("cm-cfg-file", 2), ("cm-down-pwr", 3), ("cm-down-snr", 4), ("cm-microreflec", 5), ("cm-sysdesc", 6), ("cm-time-polled", 7), ("cm-timing", 8), ("cm-up-pwr", 9), ("congest-down", 10), ("congest-up", 11), ("cpe", 12), ("crc", 13), ("docsis-reg", 14), ("fec-corrected", 15), ("fec-good", 16), ("fec-uncorrected", 17), ("flap-last-flap", 18), ("flap-prev-state", 19), ("flaps-prov", 20), ("flaps-ranging", 21), ("flaps-reg", 22), ("hcs", 23), ("interface", 24), ("ip", 25), ("mac", 26), ("microreflec", 27), ("policed-down", 28), ("power-adj", 29), ("qos", 30), ("rec-pwr", 31), ("response-percent", 32), ("sid", 33), ("snr", 34), ("state", 35), ("timing", 36), ("uptime", 37), ("vendor", 38), ("docsis-capability", 39), ("docsis-provisioned", 40), ("filter-cm", 41), ("flex-path-id", 42), ("cm-type", 43), ("fpccm-online", 44), ("fpcm-qos", 45), ("load-balance-group", 46), ("fpcm-us-ds-counts", 47), ("cm-cfg-file-long", 48), ("bonded", 49), ("cable-mac", 50), ("fpcm-cpe", 53), ("service-type-prov", 54), ("service-type-curr", 55), ("bpi", 56), ("fec-unerrored", 57), ("cpe-ip", 58), ("cpe-mac", 59), ("cpe-type", 60), ("cm-cpe-ip", 61), ("cpe-count", 62), ("cm-ip", 63), ("cm-mac", 64), ("fec-percent-uncorrected", 65), ("l2vpn-id", 66), ("l2vpn-qtag", 67), ("bonded-actual", 68), ("qos-primary", 69), ("tx-pwr", 70), ("ds-last-penalty-time", 71), ("ds-penalty-count", 72), ("us-last-penalty-time", 73), ("us-penalty-count", 74), ("ofdm-ds-profiles", 75), ("ofdm-modulation-supported", 76), ("ofdm-ds-frequency-supported", 77), ("us-frequency-supported", 78))

cadShowCmFormatTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1), )
if mibBuilder.loadTexts: cadShowCmFormatTable.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatTable.setDescription('This table contains formatting information for the show cable modem format CLI command.')
cadShowCmFormatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1), ).setIndexNames((0, "CADANT-SHOWCM-FORMAT-MIB", "cadShowCmFormatName"))
if mibBuilder.loadTexts: cadShowCmFormatEntry.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatEntry.setDescription('Each entry contains a format name along with all of the columns that should be displayed when that format name is used via show cable modem format <format_name>. cadShowCmFormatCol1 must be set to a valid, non-empty when creating a row. Also, should more column names be specified, they must be specified in increasing order, with no gaps betweens the columns set. That is, if N column names are to be specified, then all columns from cadShowCmFormatCol1 to cadShowCmFormatCol[N] must be specified.')
cadShowCmFormatName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cadShowCmFormatName.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatName.setDescription("This is the name of the format. It is used as format_name in the CLI commands 'show cable modem format <format_name>' and 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 2), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol1.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol1.setDescription("This is the name of the 1st column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 3), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol2.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol2.setDescription("This is the name of the 2nd column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 4), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol3.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol3.setDescription("This is the name of the 3rd column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 5), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol4.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol4.setDescription("This is the name of the 4th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 6), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol5.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol5.setDescription("This is the name of the 5th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol6 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 7), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol6.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol6.setDescription("This is the name of the 6th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol7 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 8), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol7.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol7.setDescription("This is the name of the 7th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol8 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 9), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol8.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol8.setDescription("This is the name of the 8th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol9 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 10), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol9.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol9.setDescription("This is the name of the 9th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 11), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol10.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol10.setDescription("This is the name of the 10th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 12), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol11.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol11.setDescription("This is the name of the 11th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 13), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol12.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol12.setDescription("This is the name of the 12th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol13 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 14), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol13.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol13.setDescription("This is the name of the 13th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol14 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 15), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol14.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol14.setDescription("This is the name of the 14th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol15 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 16), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol15.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol15.setDescription("This is the name of the 15th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol16 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 17), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol16.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol16.setDescription("This is the name of the 16th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol17 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 18), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol17.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol17.setDescription("This is the name of the 17th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol18 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 19), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol18.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol18.setDescription("This is the name of the 18th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol19 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 20), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol19.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol19.setDescription("This is the name of the 19th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol20 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 21), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol20.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol20.setDescription("This is the name of the 20th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol21 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 22), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol21.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol21.setDescription("This is the name of the 21st column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol22 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 23), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol22.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol22.setDescription("This is the name of the 22nd column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol23 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 24), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol23.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol23.setDescription("This is the name of the 23rd column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol24 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 25), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol24.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol24.setDescription("This is the name of the 24th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol25 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 26), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol25.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol25.setDescription("This is the name of the 25th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol26 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 27), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol26.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol26.setDescription("This is the name of the 26th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol27 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 28), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol27.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol27.setDescription("This is the name of the 27th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol28 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 29), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol28.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol28.setDescription("This is the name of the 28th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol29 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 30), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol29.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol29.setDescription("This is the name of the 29th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol30 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 31), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol30.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol30.setDescription("This is the name of the 30th column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol31 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 32), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol31.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol31.setDescription("This is the name of the 31st column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatCol32 = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 33), ShowCmFormatColumnName().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatCol32.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatCol32.setDescription("This is the name of the 32nd column in the CLI command 'configure cable modem format <format_name> <col_1> [col_2] ... [col_N]'")
cadShowCmFormatMultiRows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("multiple-uchan", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatMultiRows.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatMultiRows.setDescription('This is set if we desire multiple rows for each CM. Currently the only condition available id for multiple uchan.')
cadShowCmFormatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100, 20, 1, 1, 80), RowStatus().clone('createAndGo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadShowCmFormatRowStatus.setStatus('current')
if mibBuilder.loadTexts: cadShowCmFormatRowStatus.setDescription('Control object for this row.')
mibBuilder.exportSymbols("CADANT-SHOWCM-FORMAT-MIB", cadShowCmFormatCol31=cadShowCmFormatCol31, cadShowCmFormatCol14=cadShowCmFormatCol14, cadShowCmFormatRowStatus=cadShowCmFormatRowStatus, cadShowCmFormatCol7=cadShowCmFormatCol7, cadShowCmFormatCol17=cadShowCmFormatCol17, cadShowCmFormatName=cadShowCmFormatName, cadShowCmFormatCol1=cadShowCmFormatCol1, cadShowCmFormatCol8=cadShowCmFormatCol8, cadShowCmFormatCol22=cadShowCmFormatCol22, cadShowCmFormatCol10=cadShowCmFormatCol10, ShowCmFormatColumnName=ShowCmFormatColumnName, cadShowCmFormatCol16=cadShowCmFormatCol16, PYSNMP_MODULE_ID=cadShowCmFormatMib, cadShowCmFormatCol13=cadShowCmFormatCol13, cadShowCmFormatCol19=cadShowCmFormatCol19, cadShowCmFormatCol20=cadShowCmFormatCol20, cadShowCmFormatMultiRows=cadShowCmFormatMultiRows, cadShowCmFormatCol30=cadShowCmFormatCol30, cadShowCmFormatCol24=cadShowCmFormatCol24, cadShowCmFormatCol6=cadShowCmFormatCol6, cadShowCmFormatCol26=cadShowCmFormatCol26, cadShowCmFormatCol18=cadShowCmFormatCol18, cadShowCmFormatTable=cadShowCmFormatTable, cadShowCmFormatCol9=cadShowCmFormatCol9, cadShowCmFormatCol11=cadShowCmFormatCol11, cadShowCmFormatCol27=cadShowCmFormatCol27, cadShowCmFormatCol3=cadShowCmFormatCol3, cadShowCmFormatCol25=cadShowCmFormatCol25, cadShowCmFormatMib=cadShowCmFormatMib, cadShowCmFormatCol2=cadShowCmFormatCol2, cadShowCmFormatEntry=cadShowCmFormatEntry, cadShowCmFormatCol15=cadShowCmFormatCol15, cadShowCmFormatCol28=cadShowCmFormatCol28, cadShowCmFormatCol12=cadShowCmFormatCol12, cadShowCmFormatCol5=cadShowCmFormatCol5, cadShowCmFormatCol29=cadShowCmFormatCol29, cadShowCmFormatCol32=cadShowCmFormatCol32, cadShowCmFormatCol21=cadShowCmFormatCol21, cadShowCmFormatCol23=cadShowCmFormatCol23, cadShowCmFormatCol4=cadShowCmFormatCol4)
