#
# PySNMP MIB module Juniper-FRAME-RELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-FRAME-RELAY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:02:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
DLCI, = mibBuilder.importSymbols("FRAME-RELAY-DTE-MIB", "DLCI")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniNextIfIndex, = mibBuilder.importSymbols("Juniper-TC", "JuniNextIfIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, iso, ModuleIdentity, NotificationType, IpAddress, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Unsigned32, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "iso", "ModuleIdentity", "NotificationType", "IpAddress", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Unsigned32", "Gauge32", "Integer32")
RowStatus, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TimeStamp")
juniFrameRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10))
juniFrameRelayMIB.setRevisions(('2002-12-13 14:35', '2000-09-26 17:30', '1999-06-01 00:00', '1998-11-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniFrameRelayMIB.setRevisionsDescriptions(('Replaced Unisphere names with Juniper names. Added multi-link support.', 'Make it SMIv2 conformant.', 'Add support for NNI behavior.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniFrameRelayMIB.setLastUpdated('200212131435Z')
if mibBuilder.loadTexts: juniFrameRelayMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniFrameRelayMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniFrameRelayMIB.setDescription('The Frame Relay MIB for the Juniper Networks enterprise.')
class JuniFrMlFrBundleName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set.'
    description = 'MLFR Bundle name. The bundle name is a characteristic of a MLFR frame relay interface. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126).'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

juniFrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1))
juniFrIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1))
juniFrSubIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2))
juniFrMlFr = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3))
juniFrNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 1), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniFrDlcmiTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniFrDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2), )
if mibBuilder.loadTexts: juniFrDlcmiTable.setReference('American National Standard T1.617-1991, Annex D')
if mibBuilder.loadTexts: juniFrDlcmiTable.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiTable.setDescription('The Parameters for the Data Link Connection Management Interface for the frame relay service on this interface. This table represents a superset of functionality specified in the FRAME-RELAY-DTE-MIB. In particular, it adds attributes that permit the interface to operate as a network-side (DCE) interface.')
juniFrDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrDlcmiIfIndex"))
if mibBuilder.loadTexts: juniFrDlcmiEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiEntry.setDescription('The Parameters for a particular Data Link Connection Management Interface. Creating/deleting entries in this table causes corresponding entries for be created/deleted in ifTable/ifXTable/juniIfTable, and juniFrDlcmiStatsTable. Creating/deleting user-side (DTE) entries in this table also causes coresponding entries to be created/deleted in FRAME-RELAY-DTE-MIB.frDlcmiTable. The organization and definitions of objects in this table are intentionally aligned closely to those in FRAME-RELAY-DTE-MIB.')
juniFrDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiIfIndex.setDescription('The ifIndex value of the corresponding ifEntry.')
juniFrDlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("itut933A", 5), ("ansiT1617D1994", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiState.setReference('American National Standard T1.617-1991, American National Standard T1.617a-1994, ITU-T Recommendation Q.933 (03/93).')
if mibBuilder.loadTexts: juniFrDlcmiState.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiState.setDescription('This variable states which Data Link Connection Management scheme is active (and by implication, what DLCI it uses) on the Frame Relay interface.')
juniFrDlcmiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922March90", 2), ("q922November90", 3), ("q922", 4))).clone('q922')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiAddress.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiAddress.setDescription('This variable states which address format is in use on the Frame Relay interface.')
juniFrDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twoOctets", 2), ("threeOctets", 3), ("fourOctets", 4))).clone('twoOctets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiAddressLen.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiAddressLen.setDescription('This variable states the address length in octets. In the case of Q922 format, the length indicates the entire length of the address including the control portion.')
juniFrDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiPollingInterval.setReference('American National Standard T1.617-1991, Section D.7 Timer T391.')
if mibBuilder.loadTexts: juniFrDlcmiPollingInterval.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiPollingInterval.setDescription('This is the number of seconds between successive status enquiry messages sent by the DTE. Pertains to DTE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DTE or NNI.')
juniFrDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiFullEnquiryInterval.setReference('American National Standard T1.617-1991, Section D.7 Counter N391.')
if mibBuilder.loadTexts: juniFrDlcmiFullEnquiryInterval.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiFullEnquiryInterval.setDescription('Number of status enquiry intervals that pass before issuance of a full status enquiry message. Pertains to DTE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DTE or NNI.')
juniFrDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiErrorThreshold.setReference('American National Standard T1.617-1991, Section D.5.1 Counter N392.')
if mibBuilder.loadTexts: juniFrDlcmiErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiErrorThreshold.setDescription("The minimum number of errors that must be observed within the number of events specified by juniFrDlcmiMonitoredEvents, to declare the interface down. 'error' is lack of receipt of a Status, in response to an issued Status Enquiry, within the Polling Interval (T391). Pertains to DTE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DTE or NNI.")
juniFrDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiMonitoredEvents.setReference('American National Standard T1.617-1991, Section D.5.2 Counter N393.')
if mibBuilder.loadTexts: juniFrDlcmiMonitoredEvents.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiMonitoredEvents.setDescription("The number of status polling intervals over which the error threshold is counted. For example, if within 'MonitoredEvents' number of events the station receives 'ErrorThreshold' number of errors, the interface is marked as down. 'status polling interval' is specified by juniFrDlcmiPollingInterval. Pertains to DTE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DTE or NNI.")
juniFrDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 9), DLCI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiMaxSupportedVCs.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiMaxSupportedVCs.setDescription("The maximum number of Virtual Circuits allowed for this interface. Usually dictated by the Frame Relay network. In response to a SET, if a value less than zero or higher than the agent's maximal capability is configured, the agent should respond badValue.")
juniFrDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonBroadcast", 1), ("broadcast", 2))).clone('nonBroadcast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiMulticast.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiMulticast.setDescription('This indicates whether the Frame Relay interface is using a multicast service.')
juniFrDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatus.setDescription('This indicates the status of the Frame Relay interface as determined by the performance of the DLCMI. If no DLCMI is running, the Frame Relay interface will stay in the running state indefinitely.')
juniFrDlcmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrDlcmiRowStatus juniFrDlcmiState juniFrDlcmiMaxSupportedVCs juniFrDlcmiLowerIfIndex juniFrDlcmiRole juniFrDlcmiMultilinkFrBundleName (Only for multilink frame relay) In addition, when creating an entry the following conditions must hold: A value for juniFrDlcmiIndex must have been determined previously, by reading juniFrNextIfIndex. The interface identified by juniFrDlcmiLowerIfIndex must exist, and must be an interface type that permits layering of Frame Relay above it. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table. If juniFrDlcmiRole is dte(0), a corresponding entry is created/deleted in frDlcmiTable.')
juniFrDlcmiLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 13), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiLowerIfIndex.setDescription("The ifIndex of an interface over which this Frame Relay interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation. In case of multilink frame relay support, it will be multilink frame relay interface's ifIndex.")
juniFrDlcmiRole = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dte", 0), ("dce", 1), ("nni", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiRole.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiRole.setDescription('Specifies the role this interface assumes with respect to the remote end. When acting as a DTE, the following objects are not relevant: juniFrDlcmiDcePollingInterval juniFrDlcmiDceErrorThreshold juniFrDlcmiDceMonitoredEvents When acting as a DCE, the following objects are not relevant: juniFrDlcmiPollingInterval juniFrDlcmiFullEnquiryInterval juniFrDlcmiErrorThreshold juniFrDlcmiMonitoredEvents ')
juniFrDlcmiDcePollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiDcePollingInterval.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiDcePollingInterval.setDescription('The number of seconds within which a DCE expects to receive a Status Enquiry from the DTE. This value corresponds to the T392 timer. Pertains to DCE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DCE or NNI.')
juniFrDlcmiDceErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiDceErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiDceErrorThreshold.setDescription("The minimum number of errors that must be observed within the number of events specified by juniFrDlcmiDceMonitoredEvents, to declare the interface down. 'error' is lack of receipt of a Status Enquiry within the interval specified by juniFrDlcmiDcePollingInterval (T392). Pertains to DCE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DCE or NNI.")
juniFrDlcmiDceMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiDceMonitoredEvents.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiDceMonitoredEvents.setDescription("The number of DCE polling intervals over which accumulated errors are counted against the threshold specified in juniFrDlcmiDceErrorThreshold. If, within this number of events, the number of errors equals or exceeds the threshold, the interface is declared down. The 'DCE polling interval' is specified by juniFrDlcmiDcePollingInterval. Pertains to DCE/NNI operation only. This parameter can be reconfigured only when the Frame Relay interface is acting as a DCE or NNI.")
juniFrDlcmiMultilinkFrBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 2, 1, 18), JuniFrMlFrBundleName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrDlcmiMultilinkFrBundleName.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiMultilinkFrBundleName.setDescription('This represents multilink frame relay bundle name. This object must be configured to associate the bundle name to the frame relay major interface to support the multilink frame relay encapsulation. For non-multilink frame relay, bundle name configuration is not valid and will be ignored.')
juniFrDlcmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3), )
if mibBuilder.loadTexts: juniFrDlcmiStatsTable.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsTable.setDescription('The statistics for the Data Link Connection Management Interface for the frame relay service on this interface.')
juniFrDlcmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrDlcmiIfIndex"))
if mibBuilder.loadTexts: juniFrDlcmiStatsEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsEntry.setDescription("The statistics for a particular Data Link Connection Management Interface. Statistics are not relevant while the juniFrDlcmiState has the value 'noLmiConfigured'. The DTE statistics are relevant when the corresponding juniFrDlcmiRole is DTE. The DTE statistics are relevant when the corresponding juniFrDlcmiRole is DCE.")
juniFrDlcmiStatsDteEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteEnquiries.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteEnquiries.setDescription('Number of Status Enquiries sent (as DTE).')
juniFrDlcmiStatsDteFullEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteFullEnquiries.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteFullEnquiries.setDescription('Number of Full Enquiries sent (as DTE).')
juniFrDlcmiStatsDteEnquiryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteEnquiryResponses.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteEnquiryResponses.setDescription('Number of Status Enquiry responses received (as DTE).')
juniFrDlcmiStatsDteFullEnquiryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteFullEnquiryResponses.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteFullEnquiryResponses.setDescription('Number of Full Enquiry responses received (as DTE).')
juniFrDlcmiStatsDteAsyncUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteAsyncUpdates.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteAsyncUpdates.setDescription('Number of Asynchronous Updates received (as DTE).')
juniFrDlcmiStatsDteUnknownRxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteUnknownRxMessages.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteUnknownRxMessages.setDescription('Number of unknown messages received (as DTE).')
juniFrDlcmiStatsDteLossOfSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteLossOfSequences.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteLossOfSequences.setDescription('Number of times a discontinuity in sequence numbering of received messages was detected (as DTE).')
juniFrDlcmiStatsDteNoResponseTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDteNoResponseTimeouts.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDteNoResponseTimeouts.setDescription('Number of timer expirations awaiting a Status message (as DTE).')
juniFrDlcmiStatsDceEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceEnquiries.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceEnquiries.setDescription('Number of Status Enquiries received (as DCE.)')
juniFrDlcmiStatsDceFullEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceFullEnquiries.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceFullEnquiries.setDescription('Number of Full Enquiries received (as DCE).')
juniFrDlcmiStatsDceEnquiryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceEnquiryResponses.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceEnquiryResponses.setDescription('Number of Status Enquiry responses sent (as DCE).')
juniFrDlcmiStatsDceFullEnquiryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceFullEnquiryResponses.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceFullEnquiryResponses.setDescription('Number of Full Enquiry responses sent (as DCE).')
juniFrDlcmiStatsDceAsyncUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceAsyncUpdates.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceAsyncUpdates.setDescription('Number of Asynchronous Updates sent (as DCE).')
juniFrDlcmiStatsDceUnknownRxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceUnknownRxMessages.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceUnknownRxMessages.setDescription('Number of unknown messages received (as DCE).')
juniFrDlcmiStatsDceLossOfSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceLossOfSequences.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceLossOfSequences.setDescription('Number of times a discontinuity in sequence numbering of received messages was detected (as DCE).')
juniFrDlcmiStatsDceNoResponseTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDceNoResponseTimeouts.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDceNoResponseTimeouts.setDescription('Number of timer expirations awaiting a Status Enquiry (as DCE).')
juniFrDlcmiStatsDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 3, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrDlcmiStatsDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: juniFrDlcmiStatsDiscontinuityTime.setDescription("Value of sysUpTime at the most recent event that caused a discontinuity in the monotonic operation of any of the counters in this entry. Such disruption might be caused by: Hardware insertion/removal. Reconfiguration of juniFrDlcmiState. Reconfiguration of juniFrDlcmiRole. Conclusions can be drawn from successive polls of an entry's counters only if the value of this object, simultaneously retrieved in those polls, remains unchanged.")
juniFrCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4), )
if mibBuilder.loadTexts: juniFrCircuitTable.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitTable.setDescription('A table containing information about specific Data Link Connections (DLC) or virtual circuits. This table mirrors the structure of FRAME-RELAY-DTE-MIB.frCircuitTable, for the purpose of enumerating circuits on both DTE and DCE Frame Relay interfaces.')
juniFrCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrCircuitIfIndex"), (0, "Juniper-FRAME-RELAY-MIB", "juniFrCircuitDlci"))
if mibBuilder.loadTexts: juniFrCircuitEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitEntry.setDescription('The information regarding a single Data Link Connection. Discontinuities in the counters contained in this table are indicated by the value in juniFrCircuitCreationTime.')
juniFrCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniFrCircuitIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitIfIndex.setDescription('The ifIndex Value of the ifEntry this virtual circuit is layered onto.')
juniFrCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 2), DLCI())
if mibBuilder.loadTexts: juniFrCircuitDlci.setReference('American National Standard T1.618-1991, Section 3.3.6')
if mibBuilder.loadTexts: juniFrCircuitDlci.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitDlci.setDescription('The Data Link Connection Identifier for this virtual circuit.')
juniFrCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitState.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitState.setDescription("Indicates whether the particular virtual circuit is operational. In the absence of a Data Link Connection Management Interface, virtual circuit entries (rows) may be created by setting virtual circuit state to 'active', or deleted by changing Circuit state to 'invalid'. Whether or not the row actually disappears is left to the implementation, so this object may actually read as 'invalid' for some arbitrary length of time. It is also legal to set the state of a virtual circuit to 'inactive' to temporarily disable a given circuit. The use of 'invalid' is deprecated in this SNMP Version 2 MIB, in favor of juniFrCircuitRowStatus.")
juniFrCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitReceivedFECNs.setReference('American National Standard T1.618-1991, Section 3.3.3')
if mibBuilder.loadTexts: juniFrCircuitReceivedFECNs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitReceivedFECNs.setDescription('Number of frames received from the network indicating forward congestion since the virtual circuit was created. This occurs when the remote DTE sets the FECN flag, or when a switch in the network enqueues the frame to a trunk whose transmission queue is congested.')
juniFrCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitReceivedBECNs.setReference('American National Standard T1.618-1991, Section 3.3.4')
if mibBuilder.loadTexts: juniFrCircuitReceivedBECNs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitReceivedBECNs.setDescription('Number of frames received from the network indicating backward congestion since the virtual circuit was created. This occurs when the remote DTE sets the BECN flag, or when a switch in the network receives the frame from a trunk whose transmission queue is congested.')
juniFrCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitSentFrames.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitSentFrames.setDescription('The number of frames sent from this virtual circuit since it was created.')
juniFrCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitSentOctets.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitSentOctets.setDescription('The number of octets sent from this virtual circuit since it was created. Octets counted are the full frame relay header and the payload, but do not include the flag characters or CRC.')
juniFrCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitReceivedFrames.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitReceivedFrames.setDescription('Number of frames received over this virtual circuit since it was created.')
juniFrCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitReceivedOctets.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitReceivedOctets.setDescription('Number of octets received over this virtual circuit since it was created. Octets counted include the full frame relay header, but do not include the flag characters or the CRC.')
juniFrCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitCreationTime.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitCreationTime.setDescription('The value of sysUpTime when the virtual circuit was created, whether by the Data Link Connection Management Interface or by a SetRequest.')
juniFrCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitLastTimeChange.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitLastTimeChange.setDescription('The value of sysUpTime when last there was a change in the virtual circuit state')
juniFrCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitCommittedBurst.setReference('American National Standard T1.617-1991, Section 6.5.19')
if mibBuilder.loadTexts: juniFrCircuitCommittedBurst.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitCommittedBurst.setDescription('This variable indicates the maximum amount of data, in bits, that the network agrees to transfer under normal conditions, during the measurement interval. A value of zero (the default) indicates no commitment.')
juniFrCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitExcessBurst.setReference('American National Standard T1.617-1991, Section 6.5.19')
if mibBuilder.loadTexts: juniFrCircuitExcessBurst.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitExcessBurst.setDescription('This variable indicates the maximum amount of uncommitted data bits that the network will attempt to deliver over the measurement interval. By default, if not configured when creating the entry, the Excess Information Burst Size is set to the value of ifSpeed.')
juniFrCircuitThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitThroughput.setReference('American National Standard T1.617-1991, Section 6.5.19')
if mibBuilder.loadTexts: juniFrCircuitThroughput.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitThroughput.setDescription("Throughput is the average number of 'Frame Relay Information Field' bits transferred per second across a user network interface in one direction, measured over the measurement interval. If the configured committed burst rate and throughput are both non-zero, the measurement interval, T, is T = juniFrCircuitCommittedBurst / juniFrCircuitThroughput. If the configured committed burst rate and throughput are both zero, the measurement interval, T, is T = juniFrCircuitExcessBurst / ifSpeed A value of zero (the default) for throughput indicates no commitment.")
juniFrCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unicast", 1), ("oneWay", 2), ("twoWay", 3), ("nWay", 4))).clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitMulticast.setReference('Frame Relay PVC Multicast Service and Protocol Description Implementation: FRF.7 Frame Relay Forum Technical Committe October 21, 1994')
if mibBuilder.loadTexts: juniFrCircuitMulticast.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitMulticast.setDescription('This indicates whether this VC is used as a unicast VC (i.e. not multicast) or the type of multicast service subscribed to.')
juniFrCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitType.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitType.setDescription('Indication of whether the VC was manually created (static), or dynamically created (dynamic) via the data link control management interface.')
juniFrCircuitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitDiscards.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitDiscards.setDescription('The number of inbound frames dropped because of format errors, or because the VC is inactive.')
juniFrCircuitReceivedDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitReceivedDEs.setReference('American National Standard T1.618-1991, Section 3.3.4')
if mibBuilder.loadTexts: juniFrCircuitReceivedDEs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitReceivedDEs.setDescription("Number of frames received from the network indicating that they were eligible for discard since the virtual circuit was created. This occurs when the remote DTE sets the DE flag, or when in remote DTE's switch detects that the frame was received as Excess Burst data.")
juniFrCircuitSentDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitSentDEs.setReference('American National Standard T1.618-1991, Section 3.3.4')
if mibBuilder.loadTexts: juniFrCircuitSentDEs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitSentDEs.setDescription('Number of frames sent to the network indicating that they were eligible for discard since the virtual circuit was created. This occurs when the local DTE sets the DE flag, indicating that during Network congestion situations those frames should be discarded in preference of other frames sent without the DE bit set.')
juniFrCircuitLogicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 20), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitLogicalIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitLogicalIfIndex.setDescription('Normally the same value as frDlcmiIfIndex, but different when an implementation associates a virtual ifEntry with a DLC or set of DLCs in order to associate higher layer objects such as the ipAddrEntry with a subset of the virtual circuits on a Frame Relay interface. The type of such ifEntries is defined by the higher layer object; for example, if PPP/Frame Relay is implemented, the ifType of this ifEntry would be PPP. If it is not so defined, as would be the case with an ipAddrEntry, it should be of type Other.')
juniFrCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrCircuitRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitRowStatus.setDescription('This object is used to create a new row or modify or destroy an existing row in the manner described in the definition of the RowStatus textual convention. Writable objects in the table may be written in any RowStatus state.')
juniFrCircuitSentFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitSentFECNs.setReference('American National Standard T1.618-1991, Section 3.3.3')
if mibBuilder.loadTexts: juniFrCircuitSentFECNs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitSentFECNs.setDescription('Number of frames sent to the network indicating forward congestion since the virtual circuit was created. This occurs when the remote DTE sets the FECN flag, or when a switch in the network enqueues the frame to a trunk whose transmission queue is congested.')
juniFrCircuitSentBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 1, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrCircuitSentBECNs.setReference('American National Standard T1.618-1991, Section 3.3.4')
if mibBuilder.loadTexts: juniFrCircuitSentBECNs.setStatus('current')
if mibBuilder.loadTexts: juniFrCircuitSentBECNs.setDescription('Number of frames sent to the network indicating backward congestion since the virtual circuit was created. This occurs when the remote DTE sets the BECN flag, or when a switch in the network receives the frame from a trunk whose transmission queue is congested.')
juniFrSubIfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 1), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrSubIfNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniFrSubIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniFrSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2), )
if mibBuilder.loadTexts: juniFrSubIfTable.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfTable.setDescription('This table contains entries for Frame Relay Subinterfaces present in the system.')
juniFrSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrSubIfIndex"))
if mibBuilder.loadTexts: juniFrSubIfEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfEntry.setDescription('Each entry describes the characteristics of a Frame Relay Subinterface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/juniIfTable.')
juniFrSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniFrSubIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfIndex.setDescription('The ifIndex of the Frame Relay Subinterface. When creating entries in this table, suitable values for this object are determined by reading juniFrSubNextIfIndex.')
juniFrSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrSubIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrSubIfRowStatus juniFrSubIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for juniFrSubIfIndex must have been determined previously, by reading juniFrSubIfNextIfIndex. The interface identified by juniFrSubIfLowerIfIndex must exist, and must be a Frame Relay interface. A positive value configured for juniFrSubIfId must not already be assigned to another subinterface layered onto the same underlying Frame Relay interface. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
juniFrSubIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrSubIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfLowerIfIndex.setDescription('The ifIndex of a Frame Relay interface over which this Frame Relay Subinterface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
juniFrSubIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrSubIfId.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfId.setDescription('An integer identifier for the Frame Relay subinterface, used in conjunction with the command-line interface. It is provided here for cross-reference purposes only. The value must be unique among subinterfaces configured on the same underlying Frame Relay interface. If this object is not configured, or is configured with a value of -1, a nonzero value will be allocated internally and can be retrieved from this object after table entry creation has succeeded. A value of zero for this object is reserved for future use.')
juniFrSubIfCktTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 3), )
if mibBuilder.loadTexts: juniFrSubIfCktTable.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfCktTable.setDescription('This table contains entries for Frame Relay circuits configured on Frame Relay Subinterfaces present in the system. An implementation may constrain the number of circuits permitted to be configured per Frame Relay Subinterface; in particular, an implementation may restrict each Frame Relay Subinterface to have a single circuit. Attributes in this entry can only be configured at entry creation, and remain fixed for the lifetime of the entry.')
juniFrSubIfCktEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 3, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrSubIfIndex"), (0, "Juniper-FRAME-RELAY-MIB", "juniFrSubIfCktDlci"))
if mibBuilder.loadTexts: juniFrSubIfCktEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfCktEntry.setDescription('Each entry describes the characteristics of a Frame Relay Subinterface circuit.')
juniFrSubIfCktDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 3, 1, 1), DLCI())
if mibBuilder.loadTexts: juniFrSubIfCktDlci.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfCktDlci.setDescription('The DLCI of the Frame Relay circuit used by this subinterface.')
juniFrSubIfCktRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrSubIfCktRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfCktRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrSubIfCktRowStatus ')
juniFrMlFrBundleTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 1), )
if mibBuilder.loadTexts: juniFrMlFrBundleTable.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBundleTable.setDescription('This table contains entries for MLFR bundles present in the system.')
juniFrMlFrBundleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 1, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrMlFrBundleName"))
if mibBuilder.loadTexts: juniFrMlFrBundleEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBundleEntry.setDescription('Each entry describes the characteristics of a Multilink bundle.')
juniFrMlFrBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 1, 1, 1), JuniFrMlFrBundleName())
if mibBuilder.loadTexts: juniFrMlFrBundleName.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBundleName.setDescription('The administrative name of the multilink bundle associated with this Frame Relay major interface.')
juniFrMlFrBundleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrBundleRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBundleRowStatus.setDescription('The rowStatus for this entry. The following sets are supported: createAndGo(4), destroy(6) The following values can be read from this object: active(1) ')
juniFrMlFrNextLinkIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 2), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniFrMlFrNextLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrNextLinkIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniFrMlFrLinkConfigTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniFrMlFrLinkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 3), )
if mibBuilder.loadTexts: juniFrMlFrLinkConfigTable.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkConfigTable.setDescription('This table contains entries for FR link interfaces present in the system to be added to the multilink bundles.')
juniFrMlFrLinkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 3, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrMlFrLinkConfigIfIndex"))
if mibBuilder.loadTexts: juniFrMlFrLinkConfigEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkConfigEntry.setDescription('Each entry describes the characteristics of FR link interface. Creating/deleting entries in this table causes corresponding entries for be created/deleted in ifTable/ifXTable/juniIfTable.')
juniFrMlFrLinkConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniFrMlFrLinkConfigIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkConfigIfIndex.setDescription('The ifIndex of the FR link interface. When creating entries in this table, suitable values for this object are determined by reading juniFrMlFrNextLinkIfIndex.')
juniFrMlFrLinkConfigLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 3, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrLinkConfigLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkConfigLowerIfIndex.setDescription('The ifIndex of an interface over which this FR link interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a non-zero value be configured at entry creation.')
juniFrMlFrLinkConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrLinkConfigRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkConfigRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrMlFrLinkConfigRowStatus juniFrMlFrLinkConfigLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for juniFrMlFrLinkConfigIfIndex must have been determined previously, by reading juniFrMlFrNextIfIndex. The interface identified by juniFrMlFrLinkConfigLowerIfIndex must exist. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
juniFrMlFrMajorConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4), )
if mibBuilder.loadTexts: juniFrMlFrMajorConfigTable.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorConfigTable.setDescription('This table contains entries for FR major interfaces present in the system which are associated with multilink bundles.')
juniFrMlFrMajorConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrMlFrMajorConfigIfIndex"))
if mibBuilder.loadTexts: juniFrMlFrMajorConfigEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorConfigEntry.setDescription('Each entry describes the characteristics of FR major interface which have association with the MLFR bundles. Creating/deleting entries in this table causes corresponding entries for be created/deleted in ifTable/ifXTable/juniIfTable.')
juniFrMlFrMajorConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniFrMlFrMajorConfigIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorConfigIfIndex.setDescription('The ifIndex of the FR Major interface. When creating entries in this table, suitable values for this object are determined by reading already created FR Major interface values. Each multilink bundle will be associated with one FR major interface. This association will be done at the creation of FR major interface (juniFrDlcmiTable) specifying its lower interfce binding as FR link ifIndex(juniFrMlFrLinkConfigTable) and the multilink bundle name.')
juniFrMlFrMajorConfigLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrMajorConfigLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorConfigLowerIfIndex.setDescription('The ifIndex of a FR link interface over which this FR Major interface is to be layered. On sets, the value of this object must equal on of the previously created FR link interfaces created in the juniFrMlFrLinkConfigTable. On gets, the value of this object is the lexicographically least FR link interface in a potential bundle of FR link interfaces.')
juniFrMlFrMajorBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4, 1, 3), JuniFrMlFrBundleName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrMajorBundleName.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorBundleName.setDescription('The MLFR bundle name administratively assigned.')
juniFrMlFrMajorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrMajorRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrMajorRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrMlFrMajorConfigLowerIfIndex juniFrMlFrMajorBundleName juniFrMlFrMajorConfigRowStatus In addition, when creating an entry the following conditions must hold: The interface identified by juniFrMlFrMajorConfigIndex must exist by a creation request to the juniFrDlcmiTable. The interface identified by juniFrMlFrMajorConfigLowerIfIndex must exist by a creation request to the juniFrMlFrLinkConfigTable. The bundleName specified in juniFrMlFrMajorBundleName must have been created first in the juniFrMlFrBundleTable. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table. ')
juniFrMlFrLinkBindTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 5), )
if mibBuilder.loadTexts: juniFrMlFrLinkBindTable.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkBindTable.setDescription('This table contains entries for FR Link interfaces to FR major interfaces bindings associated with multilink bundles.')
juniFrMlFrLinkBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 5, 1), ).setIndexNames((0, "Juniper-FRAME-RELAY-MIB", "juniFrMlFrBindMajorIfIndex"), (0, "Juniper-FRAME-RELAY-MIB", "juniFrMlFrBindLinkIfIndex"))
if mibBuilder.loadTexts: juniFrMlFrLinkBindEntry.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrLinkBindEntry.setDescription('Each entry describes the FR link interface to FR major interface bindingsi associated with multilink bundles.')
juniFrMlFrBindMajorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniFrMlFrBindMajorIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBindMajorIfIndex.setDescription('The ifIndex of the FR major interface associated with multilink.')
juniFrMlFrBindLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 5, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: juniFrMlFrBindLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBindLinkIfIndex.setDescription('The ifIndex of a FR link interface bound by the FR major interface defined by juniFrMlFrBindMajorIfIndex.')
juniFrMlFrBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 1, 3, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniFrMlFrBindRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrBindRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniFrMlFrBindRowStatus In addition, when creating an entry the following conditions must hold: The interfaces identified by juniFrMlFrBindNetworkIfIndex and juniFrMlFrBindLinkIfIndex must be created in the juniFrMlFrMajorConfigTable and juniFrMlFrLinkConfigTable respectively. A MLFR bundle must be associated with the juniFrMlFrMajorIfIndex and exist in the juniFrMibFrBundleTable. A corresponding entry in ifStackTable is created/destroyed as a result of creating/destroying an entry in this table. Note: This table is read-only table for now. To add links to bundle make use of juniFrMlFrMajorConfigTable.')
juniFrConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4))
juniFrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 1))
juniFrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 2))
juniFrCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 1, 1)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrGroup"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrCompliance = juniFrCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniFrCompliance.setDescription('Obsolete compliance statement for entities that implement the Juniper Frame Relay MIB. This statement became obsolete when multi-link frame relay support was added.')
juniFrCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 1, 2)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrGroup2"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfGroup"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrCompliance2 = juniFrCompliance2.setStatus('current')
if mibBuilder.loadTexts: juniFrCompliance2.setDescription('The compliance statement for entities that implement the Juniper Frame Relay MIB.')
juniFrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 2, 1)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrNextIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiState"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiAddress"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiAddressLen"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiPollingInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiFullEnquiryInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiErrorThreshold"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMonitoredEvents"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMaxSupportedVCs"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMulticast"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiLowerIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiRole"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDcePollingInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDceErrorThreshold"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDceMonitoredEvents"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteFullEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteFullEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteAsyncUpdates"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteUnknownRxMessages"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteLossOfSequences"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteNoResponseTimeouts"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceFullEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceFullEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceAsyncUpdates"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceUnknownRxMessages"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceLossOfSequences"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceNoResponseTimeouts"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDiscontinuityTime"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitState"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedFECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedBECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentFrames"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentOctets"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedFrames"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedOctets"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitCreationTime"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitLastTimeChange"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitCommittedBurst"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitExcessBurst"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitThroughput"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitMulticast"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitType"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitDiscards"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedDEs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentDEs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitLogicalIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentFECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentBECNs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrGroup = juniFrGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniFrGroup.setDescription('Obsolete collection of objects providing management of Frame Relay interfaces in a Juniper product. This group became obsolete when multi-link frame relay support was added.')
juniFrSubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 2, 2)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrSubIfNextIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfLowerIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfId"), ("Juniper-FRAME-RELAY-MIB", "juniFrSubIfCktRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrSubIfGroup = juniFrSubIfGroup.setStatus('current')
if mibBuilder.loadTexts: juniFrSubIfGroup.setDescription('A collection of objects providing management of Frame Relay subinterfaces in a Juniper product.')
juniFrGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 2, 3)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrNextIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiState"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiAddress"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiAddressLen"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiPollingInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiFullEnquiryInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiErrorThreshold"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMonitoredEvents"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMaxSupportedVCs"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMulticast"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiLowerIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiRole"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDcePollingInterval"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDceErrorThreshold"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiDceMonitoredEvents"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiMultilinkFrBundleName"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteFullEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteFullEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteAsyncUpdates"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteUnknownRxMessages"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteLossOfSequences"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDteNoResponseTimeouts"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceFullEnquiries"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceFullEnquiryResponses"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceAsyncUpdates"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceUnknownRxMessages"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceLossOfSequences"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDceNoResponseTimeouts"), ("Juniper-FRAME-RELAY-MIB", "juniFrDlcmiStatsDiscontinuityTime"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitState"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedFECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedBECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentFrames"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentOctets"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedFrames"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedOctets"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitCreationTime"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitLastTimeChange"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitCommittedBurst"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitExcessBurst"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitThroughput"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitMulticast"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitType"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitDiscards"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitReceivedDEs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentDEs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitLogicalIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentFECNs"), ("Juniper-FRAME-RELAY-MIB", "juniFrCircuitSentBECNs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrGroup2 = juniFrGroup2.setStatus('current')
if mibBuilder.loadTexts: juniFrGroup2.setDescription('A collection of objects providing management of Frame Relay interfaces in a Juniper product.')
juniFrMlFrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 10, 4, 2, 4)).setObjects(("Juniper-FRAME-RELAY-MIB", "juniFrMlFrBundleRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrNextLinkIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrLinkConfigLowerIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrLinkConfigRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrMajorConfigLowerIfIndex"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrMajorBundleName"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrMajorRowStatus"), ("Juniper-FRAME-RELAY-MIB", "juniFrMlFrBindRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniFrMlFrGroup = juniFrMlFrGroup.setStatus('current')
if mibBuilder.loadTexts: juniFrMlFrGroup.setDescription('A collection of objects providing management of Multilink Frame Relay in a Juniper product.')
mibBuilder.exportSymbols("Juniper-FRAME-RELAY-MIB", juniFrDlcmiStatsDceLossOfSequences=juniFrDlcmiStatsDceLossOfSequences, juniFrSubIfEntry=juniFrSubIfEntry, juniFrSubIfId=juniFrSubIfId, juniFrIfLayer=juniFrIfLayer, juniFrDlcmiStatsDceFullEnquiries=juniFrDlcmiStatsDceFullEnquiries, juniFrDlcmiMaxSupportedVCs=juniFrDlcmiMaxSupportedVCs, juniFrMlFrBundleName=juniFrMlFrBundleName, juniFrMlFrMajorRowStatus=juniFrMlFrMajorRowStatus, juniFrSubIfCktEntry=juniFrSubIfCktEntry, juniFrDlcmiAddressLen=juniFrDlcmiAddressLen, juniFrDlcmiStatsDceNoResponseTimeouts=juniFrDlcmiStatsDceNoResponseTimeouts, juniFrSubIfNextIfIndex=juniFrSubIfNextIfIndex, juniFrSubIfLayer=juniFrSubIfLayer, juniFrMlFrBindMajorIfIndex=juniFrMlFrBindMajorIfIndex, juniFrCircuitLogicalIfIndex=juniFrCircuitLogicalIfIndex, juniFrMlFrGroup=juniFrMlFrGroup, juniFrDlcmiStatsDteUnknownRxMessages=juniFrDlcmiStatsDteUnknownRxMessages, juniFrMlFrBindLinkIfIndex=juniFrMlFrBindLinkIfIndex, juniFrSubIfLowerIfIndex=juniFrSubIfLowerIfIndex, juniFrMlFrLinkConfigEntry=juniFrMlFrLinkConfigEntry, juniFrDlcmiStatus=juniFrDlcmiStatus, juniFrCircuitReceivedBECNs=juniFrCircuitReceivedBECNs, juniFrDlcmiMonitoredEvents=juniFrDlcmiMonitoredEvents, juniFrDlcmiStatsDteEnquiries=juniFrDlcmiStatsDteEnquiries, juniFrCircuitReceivedOctets=juniFrCircuitReceivedOctets, juniFrCircuitReceivedDEs=juniFrCircuitReceivedDEs, juniFrCircuitReceivedFECNs=juniFrCircuitReceivedFECNs, juniFrCircuitMulticast=juniFrCircuitMulticast, juniFrMlFrMajorConfigLowerIfIndex=juniFrMlFrMajorConfigLowerIfIndex, juniFrMlFrLinkConfigTable=juniFrMlFrLinkConfigTable, juniFrCircuitSentBECNs=juniFrCircuitSentBECNs, juniFrSubIfTable=juniFrSubIfTable, juniFrCircuitExcessBurst=juniFrCircuitExcessBurst, juniFrDlcmiErrorThreshold=juniFrDlcmiErrorThreshold, juniFrSubIfGroup=juniFrSubIfGroup, juniFrDlcmiAddress=juniFrDlcmiAddress, juniFrCircuitSentDEs=juniFrCircuitSentDEs, juniFrGroup=juniFrGroup, juniFrDlcmiStatsTable=juniFrDlcmiStatsTable, juniFrDlcmiDceErrorThreshold=juniFrDlcmiDceErrorThreshold, juniFrMlFrLinkConfigIfIndex=juniFrMlFrLinkConfigIfIndex, juniFrCompliance=juniFrCompliance, juniFrDlcmiStatsDteFullEnquiries=juniFrDlcmiStatsDteFullEnquiries, juniFrObjects=juniFrObjects, juniFrCircuitSentFrames=juniFrCircuitSentFrames, juniFrCircuitLastTimeChange=juniFrCircuitLastTimeChange, juniFrMlFrMajorConfigIfIndex=juniFrMlFrMajorConfigIfIndex, juniFrSubIfIndex=juniFrSubIfIndex, juniFrCompliance2=juniFrCompliance2, juniFrDlcmiTable=juniFrDlcmiTable, juniFrCircuitRowStatus=juniFrCircuitRowStatus, juniFrCircuitEntry=juniFrCircuitEntry, juniFrDlcmiPollingInterval=juniFrDlcmiPollingInterval, juniFrDlcmiRole=juniFrDlcmiRole, juniFrDlcmiStatsDceEnquiryResponses=juniFrDlcmiStatsDceEnquiryResponses, juniFrNextIfIndex=juniFrNextIfIndex, juniFrSubIfCktTable=juniFrSubIfCktTable, juniFrDlcmiEntry=juniFrDlcmiEntry, juniFrGroup2=juniFrGroup2, juniFrDlcmiStatsDteAsyncUpdates=juniFrDlcmiStatsDteAsyncUpdates, juniFrDlcmiStatsDceUnknownRxMessages=juniFrDlcmiStatsDceUnknownRxMessages, juniFrMlFrLinkConfigLowerIfIndex=juniFrMlFrLinkConfigLowerIfIndex, juniFrMlFrNextLinkIfIndex=juniFrMlFrNextLinkIfIndex, juniFrCircuitCommittedBurst=juniFrCircuitCommittedBurst, juniFrDlcmiDcePollingInterval=juniFrDlcmiDcePollingInterval, juniFrCircuitDlci=juniFrCircuitDlci, juniFrDlcmiStatsDteLossOfSequences=juniFrDlcmiStatsDteLossOfSequences, juniFrMlFrBundleTable=juniFrMlFrBundleTable, juniFrMlFrBindRowStatus=juniFrMlFrBindRowStatus, juniFrMlFrMajorConfigTable=juniFrMlFrMajorConfigTable, juniFrMlFrLinkBindTable=juniFrMlFrLinkBindTable, juniFrMlFrMajorConfigEntry=juniFrMlFrMajorConfigEntry, juniFrDlcmiStatsDceAsyncUpdates=juniFrDlcmiStatsDceAsyncUpdates, juniFrMlFrLinkBindEntry=juniFrMlFrLinkBindEntry, juniFrDlcmiMulticast=juniFrDlcmiMulticast, juniFrMlFrBundleRowStatus=juniFrMlFrBundleRowStatus, juniFrGroups=juniFrGroups, juniFrDlcmiRowStatus=juniFrDlcmiRowStatus, juniFrMlFrMajorBundleName=juniFrMlFrMajorBundleName, juniFrDlcmiMultilinkFrBundleName=juniFrDlcmiMultilinkFrBundleName, juniFrMlFrLinkConfigRowStatus=juniFrMlFrLinkConfigRowStatus, juniFrCircuitTable=juniFrCircuitTable, juniFrCircuitDiscards=juniFrCircuitDiscards, juniFrCircuitCreationTime=juniFrCircuitCreationTime, juniFrCircuitIfIndex=juniFrCircuitIfIndex, juniFrCircuitReceivedFrames=juniFrCircuitReceivedFrames, juniFrMlFr=juniFrMlFr, juniFrDlcmiStatsDteFullEnquiryResponses=juniFrDlcmiStatsDteFullEnquiryResponses, juniFrMlFrBundleEntry=juniFrMlFrBundleEntry, juniFrCircuitType=juniFrCircuitType, PYSNMP_MODULE_ID=juniFrameRelayMIB, juniFrConformance=juniFrConformance, juniFrCircuitThroughput=juniFrCircuitThroughput, juniFrDlcmiDceMonitoredEvents=juniFrDlcmiDceMonitoredEvents, JuniFrMlFrBundleName=JuniFrMlFrBundleName, juniFrDlcmiStatsDteNoResponseTimeouts=juniFrDlcmiStatsDteNoResponseTimeouts, juniFrDlcmiFullEnquiryInterval=juniFrDlcmiFullEnquiryInterval, juniFrDlcmiState=juniFrDlcmiState, juniFrSubIfCktDlci=juniFrSubIfCktDlci, juniFrCompliances=juniFrCompliances, juniFrCircuitSentFECNs=juniFrCircuitSentFECNs, juniFrameRelayMIB=juniFrameRelayMIB, juniFrDlcmiStatsDiscontinuityTime=juniFrDlcmiStatsDiscontinuityTime, juniFrDlcmiStatsEntry=juniFrDlcmiStatsEntry, juniFrDlcmiLowerIfIndex=juniFrDlcmiLowerIfIndex, juniFrDlcmiStatsDteEnquiryResponses=juniFrDlcmiStatsDteEnquiryResponses, juniFrSubIfRowStatus=juniFrSubIfRowStatus, juniFrDlcmiStatsDceFullEnquiryResponses=juniFrDlcmiStatsDceFullEnquiryResponses, juniFrCircuitSentOctets=juniFrCircuitSentOctets, juniFrSubIfCktRowStatus=juniFrSubIfCktRowStatus, juniFrCircuitState=juniFrCircuitState, juniFrDlcmiIfIndex=juniFrDlcmiIfIndex, juniFrDlcmiStatsDceEnquiries=juniFrDlcmiStatsDceEnquiries)
