#
# PySNMP MIB module Unisphere-Data-CBF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-CBF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:30:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ObjectIdentity, NotificationType, Counter64, Bits, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Unsigned32, MibIdentifier, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "NotificationType", "Counter64", "Bits", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Unsigned32", "MibIdentifier", "Counter32", "Gauge32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdNextIfIndex, = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdNextIfIndex")
usdCbfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52))
usdCbfMIB.setRevisions(('2001-03-30 16:27',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdCbfMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: usdCbfMIB.setLastUpdated('200103301627Z')
if mibBuilder.loadTexts: usdCbfMIB.setOrganization('Unisphere Networks, Inc.')
if mibBuilder.loadTexts: usdCbfMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886 USA Tel: +1 978 589 5800 E-mail: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdCbfMIB.setDescription('The Connection-Based Forwarding (CBF) Protocol MIB for the Unisphere Networks Inc. enterprise.')
usdCbfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1))
usdCbfInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1))
usdCbfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdCbfNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdCbfNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in usdCbfIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
usdCbfIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 2), )
if mibBuilder.loadTexts: usdCbfIfTable.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfTable.setDescription('This table contains entries for CBF interfaces present in the system.')
usdCbfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-CBF-MIB", "usdCbfIfIndex"))
if mibBuilder.loadTexts: usdCbfIfEntry.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfEntry.setDescription('Each entry describes the characteristics of an CBF interface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/usdIfTable.')
usdCbfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdCbfIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfIndex.setDescription('The ifIndex of the CBF interface. When creating entries in this table, suitable values for this object are determined by reading usdCbfNextIfIndex.')
usdCbfIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdCbfIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: usdCbfIfRowStatus usdCbfIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for usdCbfIfIndex must have been determined previously, typically by reading usdCbfNextIfIndex. The interface identified by a nonzero usdCbfIfLowerIfIndex must exist. Once created, the following objects may not be modified: usdCbfIfLowerIfIndex A corresponding entry in ifTable/ifXTable/usdIfTable is created/destroyed as a result of creating/destroying an entry in this table.')
usdCbfIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdCbfIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfLowerIfIndex.setDescription('The ifIndex of a media interface over which this CBF interface is to be layered.')
usdCbfIfConnTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 4), )
if mibBuilder.loadTexts: usdCbfIfConnTable.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfConnTable.setDescription('This table contains entries for CBF interface connection present in the system.')
usdCbfIfConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 4, 1), ).setIndexNames((0, "Unisphere-Data-CBF-MIB", "usdCbfIfIngressIfIndex"))
if mibBuilder.loadTexts: usdCbfIfConnEntry.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfConnEntry.setDescription('Each entry defines a CBF connection.')
usdCbfIfIngressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdCbfIfIngressIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfIngressIfIndex.setDescription('The ifIndex of the ingress interface for the CBF connection. When creating entries in this table, suitable values for this object are walking the usdCbfIfTable and picking the appropriate usdCbfIfIndex.')
usdCbfIfConnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdCbfIfConnRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfConnRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: usdCbfIfRowStatus usdCbfIfIngressIfIndex Once created, the following objects may not be modified: usdCbfIfIngressIfIndex')
usdCbfIfEgressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 1, 1, 4, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdCbfIfEgressIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdCbfIfEgressIfIndex.setDescription('The ifIndex of the egress interface for the CBF interface. When creating entries in this table, suitable values for this object are walking the usdCbfIfTable and picking the appropriate usdCbfIfIndex.')
usdCbfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 4))
usdCbfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 4, 1))
usdCbfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 4, 2))
usdCbfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 4, 1, 1)).setObjects(("Unisphere-Data-CBF-MIB", "usdCbfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdCbfCompliance = usdCbfCompliance.setStatus('current')
if mibBuilder.loadTexts: usdCbfCompliance.setDescription('The compliance statement for entities which implement the Unisphere CBF MIB.')
usdCbfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 52, 4, 2, 1)).setObjects(("Unisphere-Data-CBF-MIB", "usdCbfNextIfIndex"), ("Unisphere-Data-CBF-MIB", "usdCbfIfRowStatus"), ("Unisphere-Data-CBF-MIB", "usdCbfIfLowerIfIndex"), ("Unisphere-Data-CBF-MIB", "usdCbfIfConnRowStatus"), ("Unisphere-Data-CBF-MIB", "usdCbfIfEgressIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdCbfGroup = usdCbfGroup.setStatus('current')
if mibBuilder.loadTexts: usdCbfGroup.setDescription('A collection of objects providing management of CBF interfaces in a Unisphere product.')
mibBuilder.exportSymbols("Unisphere-Data-CBF-MIB", usdCbfIfTable=usdCbfIfTable, usdCbfMIB=usdCbfMIB, usdCbfNextIfIndex=usdCbfNextIfIndex, usdCbfConformance=usdCbfConformance, usdCbfGroups=usdCbfGroups, usdCbfIfConnTable=usdCbfIfConnTable, usdCbfGroup=usdCbfGroup, usdCbfCompliances=usdCbfCompliances, usdCbfIfIndex=usdCbfIfIndex, usdCbfObjects=usdCbfObjects, usdCbfIfRowStatus=usdCbfIfRowStatus, usdCbfIfConnEntry=usdCbfIfConnEntry, usdCbfCompliance=usdCbfCompliance, usdCbfIfEntry=usdCbfIfEntry, PYSNMP_MODULE_ID=usdCbfMIB, usdCbfInterface=usdCbfInterface, usdCbfIfIngressIfIndex=usdCbfIfIngressIfIndex, usdCbfIfEgressIfIndex=usdCbfIfEgressIfIndex, usdCbfIfLowerIfIndex=usdCbfIfLowerIfIndex, usdCbfIfConnRowStatus=usdCbfIfConnRowStatus)
