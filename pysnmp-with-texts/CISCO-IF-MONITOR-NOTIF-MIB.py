#
# PySNMP MIB module CISCO-IF-MONITOR-NOTIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IF-MONITOR-NOTIF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:01:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Bits, Gauge32, NotificationType, ModuleIdentity, TimeTicks, Counter32, MibIdentifier, iso, Integer32, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Gauge32", "NotificationType", "ModuleIdentity", "TimeTicks", "Counter32", "MibIdentifier", "iso", "Integer32", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp")
ciscoIfMonitorNotifMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 999))
ciscoIfMonitorNotifMIB.setRevisions(('2002-10-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoIfMonitorNotifMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoIfMonitorNotifMIB.setLastUpdated('200210110000Z')
if mibBuilder.loadTexts: ciscoIfMonitorNotifMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoIfMonitorNotifMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoIfMonitorNotifMIB.setDescription('Interface Monitor Notification MIB This MIB module defines the objects for sending notifications when certain errors over an interval have reached/exceeded a threshold, causing a severe condition.')
cIfMonNotifMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 0))
cIfMonNotifMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 1))
cIfMonNotifMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 2))
cIfMonNotifCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifCount.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifCount.setDescription('This object will be incremented and included in the varbind list of the cIfMonNotifEvent notification. This object is guaranteed to increase once per notification originated from the MIB. NMSes should track the value of this object received in each notification. If the difference in the value of this object across two consecutive notifications is more than one, a notification has been delayed, dropped, lost or routed out of sequence. The only reliable way to recover such notifications is via the NOTIFICATION-LOG-MIB. The NMS should preferably configure/create a log in the NOTIFICATION-LOG-MIB to capture cIfMonNotifEvent notifications. If possible, a named log should be created. When a notification loss is detected, the NMS can then poll the log to determine which notification was lost. The reader can look up RFC 3014 for more information on the NOTIFICATION-LOG-MIB. In addition to tracking the value of this object in each notification, the NMS should periodically poll this object. If the polled value of this object is two or more counts greater than the value from the last received notification, a notification has likely been dropped, and the NMS must use the NOTIFICATION-LOG-MIB to poll for the dropped notification.')
cIfMonNotifTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2), )
if mibBuilder.loadTexts: cIfMonNotifTable.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifTable.setDescription('This table contains information about the last notification that was sent for a particular interface.')
cIfMonNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIfMonNotifEntry.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifEntry.setDescription('Each entry contains information about the last notification sent for this interface.')
cIfMonNotifLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifLastChange.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifLastChange.setDescription('This object specifies the value of sysUpTime at the last time a notification was sent for this interface.')
cIfMonNotifSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("red", 1), ("yellow", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifSeverity.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifSeverity.setDescription('The severity of the condition on the link when the notification is sent. A smaller enumerated integer value indicates that the exceeded condition is more severe. When a red severity notification is sent, it signifies that a severe event has occured, in which certain errors over an interval have reached/exceeded a high threshold . When a yellow severity notification is sent it signifies that an event has occured, in which certain errors over an interval have reached/exceeded a low threshold.')
cIfMonNotifCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("aborts", 1), ("crc", 2), ("drops", 3), ("flaps", 4), ("frame-reject", 5), ("runts", 6), ("sabm", 7), ("frmr", 8), ("disc", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifCause.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifCause.setDescription('The link errors over an interval which caused the severe condition on the link. aborts number of packet aborted crc number of crc errors in packets received drops number of input packet dropped flaps number of link flaps frame-reject number of HDLC frames rejected runts number of frame runts dropped (X.25 Parameters) sabm number of SABMS commands received frmr number of Frame Rejects disc number of disconnect command received.')
cIfMonNotifValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifValue.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifValue.setDescription('The value of the link errors over an interval that reached/exceeded the threshold, causing a severe condition.')
cIfMonNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifThreshold.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifThreshold.setDescription('The threshold which was reached/exceeded by the link errors over an interval, causing a severe condition.')
cIfMonNotifInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cIfMonNotifInterval.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifInterval.setDescription('The interval over which the link errors reached/exceeded the threshold, causing a severe condition.')
cIfMonNotifEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 999, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifCount"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifSeverity"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifCause"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifValue"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifThreshold"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifInterval"))
if mibBuilder.loadTexts: cIfMonNotifEvent.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifEvent.setDescription('The agent generates this notification when certain errors over an interval have reached/exceeded a threshold, causing a severe condition. The SNMP Notifications can be logged using the NOTIFICATION-LOG-MIB.')
cIfMonNotifMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1))
cIfMonNotifMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 2))
cIfMonNotifMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1)).setObjects(("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifObjectGroup"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifEventGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIfMonNotifMIBCompliance = cIfMonNotifMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco Interface Monitor Notification MIB')
cIfMonNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 2, 1)).setObjects(("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifCount"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifLastChange"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifSeverity"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifCause"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifValue"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifThreshold"), ("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIfMonNotifObjectGroup = cIfMonNotifObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifObjectGroup.setDescription('A collection of mandatory managed objects for sending notifications when certain errors over an interval have reached/exceeded a threshold, causing a severe condition.')
cIfMonNotifEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 2, 2)).setObjects(("CISCO-IF-MONITOR-NOTIF-MIB", "cIfMonNotifEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIfMonNotifEventGroup = cIfMonNotifEventGroup.setStatus('current')
if mibBuilder.loadTexts: cIfMonNotifEventGroup.setDescription('A collection of notifications generated on an interface when certain errors over an interval have reached/exceeded a threshold, causing a severe condition.')
mibBuilder.exportSymbols("CISCO-IF-MONITOR-NOTIF-MIB", cIfMonNotifObjectGroup=cIfMonNotifObjectGroup, cIfMonNotifInterval=cIfMonNotifInterval, cIfMonNotifMIBObjects=cIfMonNotifMIBObjects, cIfMonNotifEventGroup=cIfMonNotifEventGroup, cIfMonNotifEvent=cIfMonNotifEvent, cIfMonNotifEntry=cIfMonNotifEntry, cIfMonNotifTable=cIfMonNotifTable, cIfMonNotifMIBNotifications=cIfMonNotifMIBNotifications, PYSNMP_MODULE_ID=ciscoIfMonitorNotifMIB, cIfMonNotifMIBCompliances=cIfMonNotifMIBCompliances, cIfMonNotifCause=cIfMonNotifCause, cIfMonNotifThreshold=cIfMonNotifThreshold, cIfMonNotifMIBCompliance=cIfMonNotifMIBCompliance, cIfMonNotifValue=cIfMonNotifValue, cIfMonNotifSeverity=cIfMonNotifSeverity, cIfMonNotifLastChange=cIfMonNotifLastChange, cIfMonNotifMIBGroups=cIfMonNotifMIBGroups, cIfMonNotifCount=cIfMonNotifCount, cIfMonNotifMIBConformance=cIfMonNotifMIBConformance, ciscoIfMonitorNotifMIB=ciscoIfMonitorNotifMIB)
