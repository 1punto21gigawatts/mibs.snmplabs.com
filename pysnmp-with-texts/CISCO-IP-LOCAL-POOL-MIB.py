#
# PySNMP MIB module CISCO-IP-LOCAL-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IP-LOCAL-POOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:02:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, ObjectIdentity, TimeTicks, MibIdentifier, Gauge32, Integer32, Counter32, Bits, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Gauge32", "Integer32", "Counter32", "Bits", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "Counter64")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
ciscoIpLocalPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 326))
ciscoIpLocalPoolMIB.setRevisions(('2007-11-12 00:00', '2005-01-11 00:00', '2003-04-03 20:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoIpLocalPoolMIB.setRevisionsDescriptions(('Added one object to the cIpLocalPoolConfigTable: - cIpLocalPoolPriority Added ciscoIpLocalPoolMIBCompliance2 MODULE-COMPLIANCE Added ciscoIpLocalPoolPriorityGroup OBJECT-GROUP', 'Added two objects to the cIpLocalPoolStatsTable: - cIpLocalPoolPercentAddrThldLo - cIpLocalPoolPercentAddrThldHi Added two notifications: - cilpPercentAddrUsedHiNotif - cilpPercentAddrUsedLoNotif', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoIpLocalPoolMIB.setLastUpdated('200711120000Z')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIB.setDescription('This MIB defines the configuration and monitoring capabilities relating to local IP pools. Local IP pools have the following characteristics: - An IP local pool consists of one or more IP address ranges. - An IP pool group consists of one or more IP local pools. - An IP local pool can only belong to one IP pool group. - IP local pools that belong to different groups can have overlapping addresses. - IP local pool names are unique even when they belong to different groups. - Addresses within an IP pool group can not overlap. - IP local pools without an explicit group name are considered members of the base system group. In this MIB, the base system group is represented by a null IP pool group name. This MIB defines objects that expose the relationship between IP pool groups and IP local pools. There exist other objects that maintain statistics about the address usage of IP local pools.')
class CIpLocalPoolName(TextualConvention, OctetString):
    description = 'A non-empty string that uniquely identifies an IP local pool.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 48)

class CIpLocalPoolGroupNameOrNull(TextualConvention, OctetString):
    description = 'A string that uniquely identifies an IP pool group. The value of null is object-specific and must therefore be defined as part of the description of any object which uses this syntax.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 48)

class CIpLocalPoolPercentage(TextualConvention, Gauge32):
    description = 'A percentage associated with the addresses used in a IP local pool.'
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(0, 100)

ciscoIpLocalPoolMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 0))
ciscoIpLocalPoolMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 1))
ciscoIpLocalPoolMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 2))
cIpLocalPoolConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1))
cIpLocalPoolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2))
cIpLocalPoolStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3))
cIpLocalPoolNotificationsEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolNotificationsEnable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolNotificationsEnable.setDescription('An indication of whether the notifications defined by the ciscoIpLocalPoolNotifGroup are enabled.')
cIpLocalPoolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2), )
if mibBuilder.loadTexts: cIpLocalPoolConfigTable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolConfigTable.setDescription("This table manages the creation, modification, and deletion of IP local pools using the RowStatus textual convention. An entry in this table defines an IP address range that is associated with an IP local pool. A conceptual row in this table can not be modified while cIpLocalPoolRowStatus is set to 'active'. Since IP local pool names are unique even when they belong to different groups, and addresses within a group can not overlap, a row in this table is uniquely indexed by the pool name, and by the low address of the IP local pool together with its address type.")
cIpLocalPoolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolName"), (0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAddrType"), (0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAddressLo"))
if mibBuilder.loadTexts: cIpLocalPoolConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolConfigEntry.setDescription('Each entry provides information about a particular IP local pool, including the number of free and used addresses and its priority.')
cIpLocalPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 1), CIpLocalPoolName())
if mibBuilder.loadTexts: cIpLocalPoolName.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolName.setDescription('An arbitrary non-empty string that uniquely identifies the IP local pool. This name must be unique among all the local IP pools even when they belong to different pool groups.')
cIpLocalPoolAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cIpLocalPoolAddrType.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAddrType.setDescription('This object specifies the address type of cIpLocalPoolAddressLo and cIpLocalPoolAddressHi.')
cIpLocalPoolAddressLo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: cIpLocalPoolAddressLo.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAddressLo.setDescription('This object specifies the first IP address of the range of IP addresses contained by this pool entry. The address type of this object is described by cIpLocalPoolAddrType. This address must be less than or equal to the address in cIpLocalPoolAddressHi.')
cIpLocalPoolAddressHi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpLocalPoolAddressHi.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAddressHi.setDescription('This object specifies the last IP address of the range of IP addresses mapped by this pool entry. The address type of this object is described by cIpLocalPoolAddrType. If only a single address is being mapped, the value of this object is equal to the value of cIpLocalPoolAddressLo.')
cIpLocalPoolFreeAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolFreeAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolFreeAddrs.setDescription('The number of IP addresses available for use in the range of IP addresses.')
cIpLocalPoolInUseAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolInUseAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolInUseAddrs.setDescription('The number of IP addresses being used in the range of IP addresses.')
cIpLocalPoolGroupContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 7), CIpLocalPoolGroupNameOrNull()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpLocalPoolGroupContainedIn.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupContainedIn.setDescription('This object relates an IP local pool to its IP pool group. A null string indicates this IP local pool is not contained in a named IP pool group, but that it is contained in the base IP pool group. An IP local pool can only belong to one IP pool group.')
cIpLocalPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpLocalPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolRowStatus.setDescription('This object facilitates the creation, or deletion of a conceptual row in this table.')
cIpLocalPoolPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpLocalPoolPriority.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolPriority.setDescription('This object specifies priority of the IP local pool, where smaller value indicates the lower priority. The priority value is used in assigning IP Address from local pools.')
cIpLocalPoolGroupContainsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 1), )
if mibBuilder.loadTexts: cIpLocalPoolGroupContainsTable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupContainsTable.setDescription("A table which exposes the container/'containee' relationships between local IP pools and IP pool groups. Entries in this table are created or deleted as a by-product of creating or deleting entries in the cIpLocalPoolConfigTable. When an entry is created and activated in the cIpLocalPoolConfigTable table, an entry in this table will come into existence if it does not already exist. When an entry is deleted in the cIpLocalPoolConfigTable table, if there is no other entry existing in that table with the same cIpLocalPoolGroupContainedIn and cIpLocalPoolName, the entry in this table with the respective cIpLocalPoolGroupName and cIpLocalPoolName indices will be removed.")
cIpLocalPoolGroupContainsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolGroupName"), (0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolChildIndex"))
if mibBuilder.loadTexts: cIpLocalPoolGroupContainsEntry.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupContainsEntry.setDescription("Each entry describes single container/'containee' relationship. Pool names can only be associated with one group. Pools carry implicit group identifiers because pool names can only be associated with one group. An entry in this table describes such an association.")
cIpLocalPoolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 1, 1, 1), CIpLocalPoolGroupNameOrNull())
if mibBuilder.loadTexts: cIpLocalPoolGroupName.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupName.setDescription('A unique group name that identifies the IP pool group. The null string represents the base IP pool group.')
cIpLocalPoolChildIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 1, 1, 2), CIpLocalPoolName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolChildIndex.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolChildIndex.setDescription('The value of cIpLocalPoolName for the contained IP local pool.')
cIpLocalPoolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 2), )
if mibBuilder.loadTexts: cIpLocalPoolGroupTable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupTable.setDescription('This table provides statistics for configured IP pool groups. Entries in this table are created as the result of adding a new IP pool group to the cIpLocalPoolConfigTable. Entries in this table are deleted as the result of removing all IP local pools that are contained in an IP pool group in the cIpLocalPoolConfigTable. An entry in this table is uniquely indexed by IP pool group name.')
cIpLocalPoolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolGroupName"))
if mibBuilder.loadTexts: cIpLocalPoolGroupEntry.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupEntry.setDescription('Each entry provides information about a particular IP pool group and the number of free and used addresses in an IP pool group.')
cIpLocalPoolGroupFreeAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolGroupFreeAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupFreeAddrs.setDescription('The number of IP addresses available for use in the IP pool group.')
cIpLocalPoolGroupInUseAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 2, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolGroupInUseAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolGroupInUseAddrs.setDescription('The number of IP addresses that have been allocated from the IP pool group.')
cIpLocalPoolStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1), )
if mibBuilder.loadTexts: cIpLocalPoolStatsTable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatsTable.setDescription('A table providing statistics for each IP local pool. Entries in this table are created as the result of adding a new IP local pool to the cIpLocalPoolConfigTable. Entries in this table are deleted as the result of removing all the address ranges that are contained in an IP local pool in the cIpLocalPoolConfigTable. Entries in this table are uniquely indexed by the name of the IP local pool.')
cIpLocalPoolStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolName"))
if mibBuilder.loadTexts: cIpLocalPoolStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatsEntry.setDescription('Each entry provides statistical information about a particular IP local pool, and the total number of free and used addresses of all the ranges in an IP local pool.')
cIpLocalPoolStatFreeAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolStatFreeAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatFreeAddrs.setDescription('The number of IP addresses available for use in this IP local pool.')
cIpLocalPoolStatInUseAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrs.setDescription('The number of IP addresses being used in this IP local pool.')
cIpLocalPoolStatHiWaterUsedAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolStatHiWaterUsedAddrs.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatHiWaterUsedAddrs.setDescription('This object contains the high water mark of used addresses in an IP local pool since pool creation, since the system was restarted, or since this object was reset, whichever occurred last. This object can only be set to zero, and by doing so, it is reset to the value of cIpLocalPoolStatInUseAddrs. Since the number of addresses in a pool can be reduced (e.g. by deleting one of its ranges), the value of this object may be greater than the sum of cIpLocalPoolStatFreeAddrs and cIpLocalPoolStatInUseAddrs.')
cIpLocalPoolStatInUseAddrThldLo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrThldLo.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrThldLo.setDescription('When the number of used addresses in an IP local pool falls below this threshold value, the ciscoIpLocalPoolInUseAddrNoti notification will be rearmed. The value of this object should never be greater than the value of cIpLocalPoolStatInUseAddrThldHi.')
cIpLocalPoolStatInUseAddrThldHi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrThldHi.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolStatInUseAddrThldHi.setDescription('When the number of used addresses in an IP local pool is equal or exceeds this threshold value, a ciscoIpLocalPoolInUseAddrNoti notification will be generated. Once this notification is generated, it will be disarmed and it will not be generated again until the number of used address falls below the value indicated by cIpLocalPoolStatInUseAddrThldLo. The value of this object should never be smaller than the value of cIpLocalPoolStatInUseAddrThldLo.')
cIpLocalPoolPercentAddrThldLo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 6), CIpLocalPoolPercentage()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolPercentAddrThldLo.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolPercentAddrThldLo.setDescription('When the percentage of used addresses in an IP local pool falls below this threshold value, a cilpPercentAddrUsedLoNotif notification will be generated. Once the notification is generated, it will be disarmed and it will not be generated again until the number of used addresses equals or exceeds the value indicated by cIpLocalPoolPercentAddrThldHi. The value of this object should never be greater than the value of cIpLocalPoolPercentAddrThldHi.')
cIpLocalPoolPercentAddrThldHi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 1, 1, 7), CIpLocalPoolPercentage().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIpLocalPoolPercentAddrThldHi.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolPercentAddrThldHi.setDescription('When the percentage of used addresses in an IP local pool is equal or exceeds this threshold value, a cilpPercentAddrUsedHiNotif notification will be generated. Once the notification is generated, it will be disarmed and it will not be generated again until the number of used addresses falls below the value indicated by cIpLocalPoolPercentAddrThldLo. The value of this object should never be smaller than the value of cIpLocalPoolPercentAddrThldLo.')
cIpLocalPoolAllocTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2), )
if mibBuilder.loadTexts: cIpLocalPoolAllocTable.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocTable.setDescription('This table lists all addresses that have been allocated out of an IP local pool. Entries in this table are created when a remote peer allocates an address from one of the IP local pools in the cIpLocalPoolConfigTable. Entries in this table are deleted when a remote peer deallocates an address from one of the IP local pool in the cIpLocalPoolConfigTable. Entries in this table are uniquely indexed by the name of the IP local pool, and the allocated address, together with its address type.')
cIpLocalPoolAllocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolName"), (0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAllocAddrType"), (0, "CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAllocAddr"))
if mibBuilder.loadTexts: cIpLocalPoolAllocEntry.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocEntry.setDescription('Each entry refers to conceptual row that associates an IP addresses with the interface where the request was received, and the user that requested the address.')
cIpLocalPoolAllocAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cIpLocalPoolAllocAddrType.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocAddrType.setDescription('This object specifies the address type of cIpLocalPoolAllocAddr.')
cIpLocalPoolAllocAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: cIpLocalPoolAllocAddr.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocAddr.setDescription('This object specifies the allocated IP address. The address type of this object is described by cIpLocalPoolAllocAddrType.')
cIpLocalPoolAllocIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolAllocIfIndex.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocIfIndex.setDescription('This object indicates the interface from which the allocation message was sent. In the case that the interface can not be determined, the value of this object will be zero.')
cIpLocalPoolAllocUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 326, 1, 3, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpLocalPoolAllocUser.setStatus('current')
if mibBuilder.loadTexts: cIpLocalPoolAllocUser.setDescription('This object indicates the user name of the person from whom the allocation message was sent. In the case that the user name can not be determined, the value of this object will the null string.')
ciscoIpLocalPoolInUseAddrNoti = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 326, 0, 1)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrs"))
if mibBuilder.loadTexts: ciscoIpLocalPoolInUseAddrNoti.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolInUseAddrNoti.setDescription('A notification indicating that number of used addresses of an IP local pool exceeded the threshold value indicated by cIpLocalPoolStatInUseAddrThldHi.')
cilpPercentAddrUsedLoNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 326, 0, 2)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrs"))
if mibBuilder.loadTexts: cilpPercentAddrUsedLoNotif.setStatus('current')
if mibBuilder.loadTexts: cilpPercentAddrUsedLoNotif.setDescription('A notification indicating that the percentage of used addresses of an IP local pool went below the threshold value indicated by cIpLocalPoolPercentAddrThldLo.')
cilpPercentAddrUsedHiNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 326, 0, 3)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrs"))
if mibBuilder.loadTexts: cilpPercentAddrUsedHiNotif.setStatus('current')
if mibBuilder.loadTexts: cilpPercentAddrUsedHiNotif.setDescription('A notification indicating that the percentage of used addresses of an IP local pool is equal to or exceeds the threshold value indicated by cIpLocalPoolPercentAddrThldHi.')
ciscoIpLocalPoolMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 1))
ciscoIpLocalPoolMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2))
ciscoIpLocalPoolMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 1, 1)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolConfigGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolStatsGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolGroupGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolMIBCompliance = ciscoIpLocalPoolMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco IP Local Pool MIB.')
ciscoIpLocalPoolMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 1, 2)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolConfigGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolStatsGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolNotifGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolGroupGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolStatsGroupSup1"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolNotifGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolMIBCompliance1 = ciscoIpLocalPoolMIBCompliance1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIBCompliance1.setDescription('The compliance statement for entities which implement the Cisco IP Local Pool MIB.')
ciscoIpLocalPoolMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 1, 3)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolConfigGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolStatsGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolNotifGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolPriorityGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolGroupGroup"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolStatsGroupSup1"), ("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolNotifGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolMIBCompliance2 = ciscoIpLocalPoolMIBCompliance2.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolMIBCompliance2.setDescription('The compliance statement for entities which implement the Cisco IP Local Pool MIB.')
ciscoIpLocalPoolConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 1)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolNotificationsEnable"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAddressHi"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolInUseAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolGroupContainedIn"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolConfigGroup = ciscoIpLocalPoolConfigGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolConfigGroup.setDescription('Objects for providing configuration for IP local pools.')
ciscoIpLocalPoolGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 2)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolChildIndex"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolGroupFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolGroupInUseAddrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolGroupGroup = ciscoIpLocalPoolGroupGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolGroupGroup.setDescription('Objects for providing configuration for IP local pools.')
ciscoIpLocalPoolStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 3)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatFreeAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatHiWaterUsedAddrs"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrThldLo"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolStatInUseAddrThldHi"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAllocIfIndex"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolAllocUser"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolStatsGroup = ciscoIpLocalPoolStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolStatsGroup.setDescription('Objects for providing IP local pool statistics and status.')
ciscoIpLocalPoolNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 4)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "ciscoIpLocalPoolInUseAddrNoti"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolNotifGroup = ciscoIpLocalPoolNotifGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolNotifGroup.setDescription('The collection of notifications used for monitoring IP local pool utilization.')
ciscoIpLocalPoolStatsGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 5)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolPercentAddrThldLo"), ("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolPercentAddrThldHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolStatsGroupSup1 = ciscoIpLocalPoolStatsGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolStatsGroupSup1.setDescription('Supplemental objects for providing IP local pool statistics and status.')
ciscoIpLocalPoolNotifGroupSup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 6)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cilpPercentAddrUsedLoNotif"), ("CISCO-IP-LOCAL-POOL-MIB", "cilpPercentAddrUsedHiNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolNotifGroupSup1 = ciscoIpLocalPoolNotifGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolNotifGroupSup1.setDescription('The collection of suplemantal notifications used for monitoring IP local pool utilization.')
ciscoIpLocalPoolPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 326, 2, 2, 7)).setObjects(("CISCO-IP-LOCAL-POOL-MIB", "cIpLocalPoolPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpLocalPoolPriorityGroup = ciscoIpLocalPoolPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIpLocalPoolPriorityGroup.setDescription('A collection of object which provides priority configuration of IP local pools.')
mibBuilder.exportSymbols("CISCO-IP-LOCAL-POOL-MIB", cIpLocalPoolAddressLo=cIpLocalPoolAddressLo, ciscoIpLocalPoolMIB=ciscoIpLocalPoolMIB, cIpLocalPoolConfigEntry=cIpLocalPoolConfigEntry, CIpLocalPoolPercentage=CIpLocalPoolPercentage, cIpLocalPoolFreeAddrs=cIpLocalPoolFreeAddrs, cIpLocalPoolConfig=cIpLocalPoolConfig, cIpLocalPoolAllocTable=cIpLocalPoolAllocTable, cIpLocalPoolPriority=cIpLocalPoolPriority, cIpLocalPoolAddressHi=cIpLocalPoolAddressHi, ciscoIpLocalPoolGroupGroup=ciscoIpLocalPoolGroupGroup, ciscoIpLocalPoolStatsGroup=ciscoIpLocalPoolStatsGroup, ciscoIpLocalPoolMIBObjects=ciscoIpLocalPoolMIBObjects, CIpLocalPoolGroupNameOrNull=CIpLocalPoolGroupNameOrNull, cIpLocalPoolGroupFreeAddrs=cIpLocalPoolGroupFreeAddrs, ciscoIpLocalPoolNotifGroupSup1=ciscoIpLocalPoolNotifGroupSup1, ciscoIpLocalPoolInUseAddrNoti=ciscoIpLocalPoolInUseAddrNoti, ciscoIpLocalPoolConfigGroup=ciscoIpLocalPoolConfigGroup, cIpLocalPoolStatInUseAddrs=cIpLocalPoolStatInUseAddrs, cIpLocalPoolGroupContainsTable=cIpLocalPoolGroupContainsTable, cIpLocalPoolGroup=cIpLocalPoolGroup, cIpLocalPoolAllocUser=cIpLocalPoolAllocUser, cIpLocalPoolStatFreeAddrs=cIpLocalPoolStatFreeAddrs, cIpLocalPoolPercentAddrThldLo=cIpLocalPoolPercentAddrThldLo, cilpPercentAddrUsedHiNotif=cilpPercentAddrUsedHiNotif, ciscoIpLocalPoolStatsGroupSup1=ciscoIpLocalPoolStatsGroupSup1, cIpLocalPoolRowStatus=cIpLocalPoolRowStatus, cIpLocalPoolPercentAddrThldHi=cIpLocalPoolPercentAddrThldHi, cIpLocalPoolStatInUseAddrThldLo=cIpLocalPoolStatInUseAddrThldLo, cilpPercentAddrUsedLoNotif=cilpPercentAddrUsedLoNotif, PYSNMP_MODULE_ID=ciscoIpLocalPoolMIB, ciscoIpLocalPoolMIBGroups=ciscoIpLocalPoolMIBGroups, cIpLocalPoolAddrType=cIpLocalPoolAddrType, cIpLocalPoolAllocAddr=cIpLocalPoolAllocAddr, cIpLocalPoolChildIndex=cIpLocalPoolChildIndex, cIpLocalPoolStatHiWaterUsedAddrs=cIpLocalPoolStatHiWaterUsedAddrs, cIpLocalPoolGroupName=cIpLocalPoolGroupName, cIpLocalPoolAllocIfIndex=cIpLocalPoolAllocIfIndex, cIpLocalPoolGroupInUseAddrs=cIpLocalPoolGroupInUseAddrs, ciscoIpLocalPoolPriorityGroup=ciscoIpLocalPoolPriorityGroup, cIpLocalPoolStats=cIpLocalPoolStats, cIpLocalPoolGroupEntry=cIpLocalPoolGroupEntry, cIpLocalPoolNotificationsEnable=cIpLocalPoolNotificationsEnable, cIpLocalPoolStatsTable=cIpLocalPoolStatsTable, cIpLocalPoolInUseAddrs=cIpLocalPoolInUseAddrs, cIpLocalPoolGroupContainsEntry=cIpLocalPoolGroupContainsEntry, ciscoIpLocalPoolMIBCompliance2=ciscoIpLocalPoolMIBCompliance2, ciscoIpLocalPoolMIBNotifs=ciscoIpLocalPoolMIBNotifs, ciscoIpLocalPoolMIBConform=ciscoIpLocalPoolMIBConform, cIpLocalPoolGroupTable=cIpLocalPoolGroupTable, cIpLocalPoolGroupContainedIn=cIpLocalPoolGroupContainedIn, ciscoIpLocalPoolMIBCompliances=ciscoIpLocalPoolMIBCompliances, cIpLocalPoolStatsEntry=cIpLocalPoolStatsEntry, CIpLocalPoolName=CIpLocalPoolName, cIpLocalPoolName=cIpLocalPoolName, cIpLocalPoolAllocEntry=cIpLocalPoolAllocEntry, ciscoIpLocalPoolMIBCompliance=ciscoIpLocalPoolMIBCompliance, ciscoIpLocalPoolNotifGroup=ciscoIpLocalPoolNotifGroup, cIpLocalPoolStatInUseAddrThldHi=cIpLocalPoolStatInUseAddrThldHi, ciscoIpLocalPoolMIBCompliance1=ciscoIpLocalPoolMIBCompliance1, cIpLocalPoolConfigTable=cIpLocalPoolConfigTable, cIpLocalPoolAllocAddrType=cIpLocalPoolAllocAddrType)
