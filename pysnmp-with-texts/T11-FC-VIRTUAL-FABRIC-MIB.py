#
# PySNMP MIB module T11-FC-VIRTUAL-FABRIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T11-FC-VIRTUAL-FABRIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
fcmInstanceIndex, FcNameIdOrZero, fcmSwitchEntry, fcmPortEntry = mibBuilder.importSymbols("FC-MGMT-MIB", "fcmInstanceIndex", "FcNameIdOrZero", "fcmSwitchEntry", "fcmPortEntry")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, NotificationType, ObjectIdentity, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, mib_2, Integer32, TimeTicks, MibIdentifier, IpAddress, Unsigned32, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "ObjectIdentity", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "mib-2", "Integer32", "TimeTicks", "MibIdentifier", "IpAddress", "Unsigned32", "Gauge32", "Counter32")
TextualConvention, DisplayString, RowStatus, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "StorageType")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FcVirtualFabricMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 147))
t11FcVirtualFabricMIB.setRevisions(('2006-11-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11FcVirtualFabricMIB.setRevisionsDescriptions(('Initial version of this MIB module, published as RFC 4747.',))
if mibBuilder.loadTexts: t11FcVirtualFabricMIB.setLastUpdated('200611100000Z')
if mibBuilder.loadTexts: t11FcVirtualFabricMIB.setOrganization('IETF IMSS (Internet and Management Support for Storage) Working Group')
if mibBuilder.loadTexts: t11FcVirtualFabricMIB.setContactInfo(' Scott Kipp McDATA Corporation Tel: +1 720 558-3452 E-mail: scott.kipp@mcdata.com Postal: 4 McDATA Parkway Broomfield, CO USA 80021 G D Ramkumar SnapTell, Inc. Tel: +1 650-326-7627 E-mail: gramkumar@stanfordalumni.org Postal: 2741 Middlefield Rd, Suite 200 Palo Alto, CA USA 94306 Keith McCloghrie Cisco Systems, Inc. Tel: +1 408 526-5260 E-mail: kzm@cisco.com Postal: 170 West Tasman Drive San Jose, CA USA 95134 ')
if mibBuilder.loadTexts: t11FcVirtualFabricMIB.setDescription('This module defines management information specific to Fibre Channel Virtual Fabrics. A Virtual Fabric is a Fabric composed of partitions of switches, links and N_Ports with a single Fabric management domain, Fabric Services and independence from other Virtual Fabrics. Copyright (C) The IETF Trust (2006). This version of this MIB module is part of RFC 4747; see the RFC itself for full legal notices.')
t11vfObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 147, 1))
t11vfConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 147, 2))
t11vfCoreSwitchTable = MibTable((1, 3, 6, 1, 2, 1, 147, 1, 1), )
if mibBuilder.loadTexts: t11vfCoreSwitchTable.setStatus('current')
if mibBuilder.loadTexts: t11vfCoreSwitchTable.setDescription('A table of core switches supported by the current management entity.')
t11vfCoreSwitchEntry = MibTableRow((1, 3, 6, 1, 2, 1, 147, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-VIRTUAL-FABRIC-MIB", "t11vfCoreSwitchSwitchName"))
if mibBuilder.loadTexts: t11vfCoreSwitchEntry.setStatus('current')
if mibBuilder.loadTexts: t11vfCoreSwitchEntry.setDescription('Each entry represents one core switch.')
t11vfCoreSwitchSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 1, 1, 1), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11vfCoreSwitchSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11vfCoreSwitchSwitchName.setDescription('The Core Switch_Name (WWN) of this Core Switch.')
t11vfCoreSwitchMaxSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11vfCoreSwitchMaxSupported.setStatus('current')
if mibBuilder.loadTexts: t11vfCoreSwitchMaxSupported.setDescription('In switches that do not support Virtual Fabrics, this object has the value of 1. If Virtual Fabrics are supported, this object is the maximum number of Virtual Fabrics supported by the Core Switch. For the purpose of this count, the Control VF_ID is ignored.')
t11vfCoreSwitchStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11vfCoreSwitchStorageType.setStatus('current')
if mibBuilder.loadTexts: t11vfCoreSwitchStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row.")
t11vfVirtualSwitchTable = MibTable((1, 3, 6, 1, 2, 1, 147, 1, 2), )
if mibBuilder.loadTexts: t11vfVirtualSwitchTable.setReference('fcmSwitchTable is defined in the FC-MGMT-MIB [RFC4044].')
if mibBuilder.loadTexts: t11vfVirtualSwitchTable.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchTable.setDescription('A table of Virtual Switches. When one Core Switch provides switching functions for multiple Virtual Fabrics, that Core Switch is modeled as containing multiple Virtual Switches, one for each Virtual Fabric. This table contains one row for every Virtual Switch on every Core Switch. This table augments the basic switch information in the fcmSwitchTable Table in the FC-MGMT-MIB.')
t11vfVirtualSwitchEntry = MibTableRow((1, 3, 6, 1, 2, 1, 147, 1, 2, 1), )
if mibBuilder.loadTexts: t11vfVirtualSwitchEntry.setReference('fcmSwitchEntry is defined in the FC-MGMT-MIB module [RFC4044].')
fcmSwitchEntry.registerAugmentions(("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfVirtualSwitchEntry"))
t11vfVirtualSwitchEntry.setIndexNames(*fcmSwitchEntry.getIndexNames())
if mibBuilder.loadTexts: t11vfVirtualSwitchEntry.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchEntry.setDescription('An entry of the Virtual Switch table. Each row is for a Virtual Switch. This table augments the fcmSwitchTable, i.e., every entry in this table has a one-to-one correspondence with an entry in the fcmSwitchTable. At the time when the fcmSwitchTable was defined, it applied to physical switches. With the definition and usage of virtual switches, fcmSwitchTable now applies to virtual switches as well as physical switches, and (in contrast to physical switches) it is appropriate to provide the capability for virtual switches to be created via remote management applications, e.g., via SNMP. So, this entry contains a RowStatus object (to allow the creation of a virtual switch), as well as a StorageType object. Obviously, if a row is created/deleted in this table, the corresponding row in the fcmSwitchTable will be created/deleted.')
t11vfVirtualSwitchVfId = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 2, 1, 1), T11FabricIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11vfVirtualSwitchVfId.setReference('FC-SW-4, REV 7.5, section 12.2')
if mibBuilder.loadTexts: t11vfVirtualSwitchVfId.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchVfId.setDescription('The VF_ID of the Virtual Fabric for which this virtual switch performs its switching function. The Control VF_ID is implicitly enabled and is not set. Communication with the Control VF_ID is required.')
t11vfVirtualSwitchCoreSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 2, 1, 2), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11vfVirtualSwitchCoreSwitchName.setReference('FC-SW-4, REV 7.5, section 12.2.')
if mibBuilder.loadTexts: t11vfVirtualSwitchCoreSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchCoreSwitchName.setDescription('The Core Switch_Name (WWN) of the Core Switch that contains this Virtual Switch.')
t11vfVirtualSwitchRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11vfVirtualSwitchRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchRowStatus.setDescription('The status of this row.')
t11vfVirtualSwitchStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11vfVirtualSwitchStorageType.setStatus('current')
if mibBuilder.loadTexts: t11vfVirtualSwitchStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row.")
t11vfPortTable = MibTable((1, 3, 6, 1, 2, 1, 147, 1, 3), )
if mibBuilder.loadTexts: t11vfPortTable.setStatus('current')
if mibBuilder.loadTexts: t11vfPortTable.setDescription('A table of Port attributes related to Virtual Fabrics.')
t11vfPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 147, 1, 3, 1), )
if mibBuilder.loadTexts: t11vfPortEntry.setReference('fcmPortEntry is defined in the FC-MGMT-MIB module.')
fcmPortEntry.registerAugmentions(("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfPortEntry"))
t11vfPortEntry.setIndexNames(*fcmPortEntry.getIndexNames())
if mibBuilder.loadTexts: t11vfPortEntry.setStatus('current')
if mibBuilder.loadTexts: t11vfPortEntry.setDescription('Each entry represents a physical Port on a switch. Switches that support Virtual Fabrics would add these four additional columns to the fcmPortEntry row.')
t11vfPortVfId = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 3, 1, 1), T11FabricIndex().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11vfPortVfId.setReference('FC-SW-4, REV 7.5, section 12.1')
if mibBuilder.loadTexts: t11vfPortVfId.setStatus('current')
if mibBuilder.loadTexts: t11vfPortVfId.setDescription('The Port VF_ID assigned to this Port. The Port VF_ID is the default Virtual Fabric that is assigned to untagged frames arriving at this Port. The Control VF_ID is implicitly enabled and is not set. Communication with the Control VF_ID is required.')
t11vfPortTaggingAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11vfPortTaggingAdminStatus.setReference('FC-SW-4, REV 7.5, section 12.4')
if mibBuilder.loadTexts: t11vfPortTaggingAdminStatus.setStatus('current')
if mibBuilder.loadTexts: t11vfPortTaggingAdminStatus.setDescription("This object is used to configure the administrative status of Virtual Fabric tagging on this Port. SET operation Description -------------- ------------------------------------------- off(1) To disable Virtual Fabric tagging on this Port. on(2) To enable Virtual Fabric tagging on this Port if the attached Port doesn't prohibit it. auto(3) To enable Virtual Fabric tagging if the peer requests it.")
t11vfPortTaggingOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11vfPortTaggingOperStatus.setReference('FC-SW-4, REV 7.5, section 12.4')
if mibBuilder.loadTexts: t11vfPortTaggingOperStatus.setStatus('current')
if mibBuilder.loadTexts: t11vfPortTaggingOperStatus.setDescription('This object is used to report the operational status of Virtual Fabric tagging on this Port. SET operation Description -------------- ------------------------------------------- off(1) Virtual Fabric tagging is disabled on this Port. on(2) Virtual Fabric tagging is enabled on this Port.')
t11vfPortStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 3, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11vfPortStorageType.setStatus('current')
if mibBuilder.loadTexts: t11vfPortStorageType.setDescription("The storage type for this conceptual row, and for the corresponding row in the augmented fcmPortTable. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row.")
t11vfLocallyEnabledTable = MibTable((1, 3, 6, 1, 2, 1, 147, 1, 4), )
if mibBuilder.loadTexts: t11vfLocallyEnabledTable.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledTable.setDescription("A table for assigning and reporting operational status of locally-enabled Virtual Fabric IDs to Ports. The set of Virtual Fabrics operational on the Port is the bit-wise 'AND' of the set of locally-enabled VF_IDs of this Port and the locally-enabled VF_IDs of the attached Port.")
t11vfLocallyEnabledEntry = MibTableRow((1, 3, 6, 1, 2, 1, 147, 1, 4, 1), ).setIndexNames((0, "T11-FC-VIRTUAL-FABRIC-MIB", "t11vfLocallyEnabledPortIfIndex"), (0, "T11-FC-VIRTUAL-FABRIC-MIB", "t11vfLocallyEnabledVfId"))
if mibBuilder.loadTexts: t11vfLocallyEnabledEntry.setReference('FC-SW-4, REV 7.5, section 12.4')
if mibBuilder.loadTexts: t11vfLocallyEnabledEntry.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledEntry.setDescription('An entry for each locally-enabled VF_ID on each Port.')
t11vfLocallyEnabledPortIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: t11vfLocallyEnabledPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledPortIfIndex.setDescription('The value of the ifIndex that identifies the Port.')
t11vfLocallyEnabledVfId = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 4, 1, 2), T11FabricIndex())
if mibBuilder.loadTexts: t11vfLocallyEnabledVfId.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledVfId.setDescription('A locally-enabled VF_ID on this Port.')
t11vfLocallyEnabledOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11vfLocallyEnabledOperStatus.setReference('FC-SW-4, REV 7.3, section 12.4')
if mibBuilder.loadTexts: t11vfLocallyEnabledOperStatus.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledOperStatus.setDescription('This object is used to report the operational status of Virtual Fabric tagging on this Port. SET operation Description -------------- ------------------------------------------- off(1) Virtual Fabric tagging is disabled on this Port. on(2) Virtual Fabric tagging is enabled on this Port.')
t11vfLocallyEnabledRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11vfLocallyEnabledRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledRowStatus.setDescription("The status of this conceptual row. When a row in this table is in 'active(1)' state, no object in that row can be modified except t11vfLocallyEnabledRowStatus and t11vfLocallyEnabledStorageType.")
t11vfLocallyEnabledStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 147, 1, 4, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11vfLocallyEnabledStorageType.setStatus('current')
if mibBuilder.loadTexts: t11vfLocallyEnabledStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row.")
t11vfMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 147, 2, 1))
t11vfMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 147, 2, 2))
t11vfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 147, 2, 1, 1)).setObjects(("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11vfMIBCompliance = t11vfMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11vfMIBCompliance.setDescription('Describes the requirements for compliance to the Fibre Channel Virtual Fabric MIB.')
t11vfGeneralGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 147, 2, 2, 1)).setObjects(("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfCoreSwitchMaxSupported"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfVirtualSwitchVfId"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfVirtualSwitchCoreSwitchName"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfVirtualSwitchRowStatus"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfPortVfId"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfPortTaggingAdminStatus"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfLocallyEnabledOperStatus"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfPortTaggingOperStatus"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfLocallyEnabledRowStatus"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfCoreSwitchStorageType"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfVirtualSwitchStorageType"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfPortStorageType"), ("T11-FC-VIRTUAL-FABRIC-MIB", "t11vfLocallyEnabledStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11vfGeneralGroup = t11vfGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: t11vfGeneralGroup.setDescription('A collection of objects for monitoring and configuring Virtual Fabrics in a Fibre Channel switch.')
mibBuilder.exportSymbols("T11-FC-VIRTUAL-FABRIC-MIB", t11vfMIBCompliances=t11vfMIBCompliances, t11vfVirtualSwitchVfId=t11vfVirtualSwitchVfId, t11vfPortTaggingAdminStatus=t11vfPortTaggingAdminStatus, t11vfMIBGroups=t11vfMIBGroups, t11vfLocallyEnabledPortIfIndex=t11vfLocallyEnabledPortIfIndex, t11vfLocallyEnabledTable=t11vfLocallyEnabledTable, t11vfCoreSwitchStorageType=t11vfCoreSwitchStorageType, t11vfVirtualSwitchCoreSwitchName=t11vfVirtualSwitchCoreSwitchName, t11vfMIBCompliance=t11vfMIBCompliance, t11vfPortStorageType=t11vfPortStorageType, t11vfPortTaggingOperStatus=t11vfPortTaggingOperStatus, t11vfCoreSwitchMaxSupported=t11vfCoreSwitchMaxSupported, PYSNMP_MODULE_ID=t11FcVirtualFabricMIB, t11vfVirtualSwitchStorageType=t11vfVirtualSwitchStorageType, t11vfCoreSwitchSwitchName=t11vfCoreSwitchSwitchName, t11vfVirtualSwitchEntry=t11vfVirtualSwitchEntry, t11vfLocallyEnabledRowStatus=t11vfLocallyEnabledRowStatus, t11vfPortVfId=t11vfPortVfId, t11vfCoreSwitchEntry=t11vfCoreSwitchEntry, t11vfLocallyEnabledStorageType=t11vfLocallyEnabledStorageType, t11vfGeneralGroup=t11vfGeneralGroup, t11vfConformance=t11vfConformance, t11vfVirtualSwitchRowStatus=t11vfVirtualSwitchRowStatus, t11vfLocallyEnabledOperStatus=t11vfLocallyEnabledOperStatus, t11vfLocallyEnabledVfId=t11vfLocallyEnabledVfId, t11vfVirtualSwitchTable=t11vfVirtualSwitchTable, t11vfObjects=t11vfObjects, t11vfPortEntry=t11vfPortEntry, t11vfCoreSwitchTable=t11vfCoreSwitchTable, t11vfPortTable=t11vfPortTable, t11vfLocallyEnabledEntry=t11vfLocallyEnabledEntry, t11FcVirtualFabricMIB=t11FcVirtualFabricMIB)
