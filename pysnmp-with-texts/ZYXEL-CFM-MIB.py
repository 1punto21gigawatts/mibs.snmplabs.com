#
# PySNMP MIB module ZYXEL-CFM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-CFM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dot1agCfmMaIndex, dot1agCfmMepIdentifier, dot1agCfmMdIndex = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMaIndex", "dot1agCfmMepIdentifier", "dot1agCfmMdIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, NotificationType, ObjectIdentity, Counter32, IpAddress, Integer32, iso, MibIdentifier, Gauge32, ModuleIdentity, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "NotificationType", "ObjectIdentity", "Counter32", "IpAddress", "Integer32", "iso", "MibIdentifier", "Gauge32", "ModuleIdentity", "Unsigned32", "Bits")
TextualConvention, TDomain, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TDomain", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelCfm = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13))
if mibBuilder.loadTexts: zyxelCfm.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelCfm.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelCfm.setContactInfo('')
if mibBuilder.loadTexts: zyxelCfm.setDescription('The subtree for cfm')
zyxelCfmSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1))
zyxelCfmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2))
zyCfmState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmState.setStatus('current')
if mibBuilder.loadTexts: zyCfmState.setDescription('Enabled/disabled CFM on the switch.')
zyxelCfmMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2))
zyCfmMgmtIpAddressDomain = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 1), TDomain()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMgmtIpAddressDomain.setStatus('current')
if mibBuilder.loadTexts: zyCfmMgmtIpAddressDomain.setDescription('This object indicates the transport type of the address contained in sender ID TLV. Typical values will be one of (not all inclusive) list: transportDomainUdpIpv4 (1.3.6.1.2.1.100.1.1) snmpIeee802Domain (1.3.6.1.6.1.6)')
zyCfmMgmtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMgmtIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyCfmMgmtIpAddress.setDescription('The address that can be used to manage the responding MP.')
zyxelCfmMepTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3), )
if mibBuilder.loadTexts: zyxelCfmMepTable.setStatus('current')
if mibBuilder.loadTexts: zyxelCfmMepTable.setDescription('The table contains CFM MEP configuration.')
zyxelCfmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: zyxelCfmMepEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelCfmMepEntry.setDescription('An entry contains CFM MEP configuration. ')
zyCfmMepTransmitLbmDataTlvSize = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepTransmitLbmDataTlvSize.setReference('')
if mibBuilder.loadTexts: zyCfmMepTransmitLbmDataTlvSize.setStatus('current')
if mibBuilder.loadTexts: zyCfmMepTransmitLbmDataTlvSize.setDescription('Size of data to be included in the LBM data TLV.')
zyCfmLinkTraceClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmLinkTraceClear.setStatus('current')
if mibBuilder.loadTexts: zyCfmLinkTraceClear.setDescription('Clears the link trace database.')
zyCfmMepCcmDbClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepCcmDbClear.setStatus('current')
if mibBuilder.loadTexts: zyCfmMepCcmDbClear.setDescription('Clears the MEP CCM database.')
zyCfmMepDefectsClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepDefectsClear.setStatus('current')
if mibBuilder.loadTexts: zyCfmMepDefectsClear.setDescription('Clears the MEP-defects database.')
zyCfmMipCcmDbClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMipCcmDbClear.setStatus('current')
if mibBuilder.loadTexts: zyCfmMipCcmDbClear.setDescription('Clears the MIP CCM database.')
mibBuilder.exportSymbols("ZYXEL-CFM-MIB", zyxelCfmStatus=zyxelCfmStatus, zyCfmMepTransmitLbmDataTlvSize=zyCfmMepTransmitLbmDataTlvSize, zyCfmMepCcmDbClear=zyCfmMepCcmDbClear, zyCfmMepDefectsClear=zyCfmMepDefectsClear, zyCfmMipCcmDbClear=zyCfmMipCcmDbClear, zyxelCfmMepTable=zyxelCfmMepTable, zyCfmState=zyCfmState, zyxelCfm=zyxelCfm, PYSNMP_MODULE_ID=zyxelCfm, zyxelCfmSetup=zyxelCfmSetup, zyCfmMgmtIpAddress=zyCfmMgmtIpAddress, zyCfmMgmtIpAddressDomain=zyCfmMgmtIpAddressDomain, zyxelCfmMibObjects=zyxelCfmMibObjects, zyCfmLinkTraceClear=zyCfmLinkTraceClear, zyxelCfmMepEntry=zyxelCfmMepEntry)
