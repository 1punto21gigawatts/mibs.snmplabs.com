#
# PySNMP MIB module OPENBSD-RELAYD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPENBSD-RELAYD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:35:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
openBSD, = mibBuilder.importSymbols("OPENBSD-BASE-MIB", "openBSD")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, Unsigned32, NotificationType, Counter64, ModuleIdentity, IpAddress, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Integer32, MibIdentifier, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Unsigned32", "NotificationType", "Counter64", "ModuleIdentity", "IpAddress", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Integer32", "MibIdentifier", "iso", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
relaydMIBObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 30155, 3))
relaydMIBObjects.setRevisions(('2015-10-15 21:16', '2015-10-14 00:00', '2014-03-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: relaydMIBObjects.setRevisionsDescriptions(('Add missing comma, and missing range restriction for relaydSessionRelayIndex', 'Correct typo in MODULE ID descriptor and OID value', 'MIB describing relayd(8) information',))
if mibBuilder.loadTexts: relaydMIBObjects.setLastUpdated('201510152116Z')
if mibBuilder.loadTexts: relaydMIBObjects.setOrganization('OpenBSD')
if mibBuilder.loadTexts: relaydMIBObjects.setContactInfo('')
if mibBuilder.loadTexts: relaydMIBObjects.setDescription('The MIB module for gathering relayd status information')
relaydInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 30155, 3, 2))
relaydRedirects = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1), )
if mibBuilder.loadTexts: relaydRedirects.setStatus('current')
if mibBuilder.loadTexts: relaydRedirects.setDescription('A list of configured redirections')
relaydRedirectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydRedirectIndex"))
if mibBuilder.loadTexts: relaydRedirectEntry.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectEntry.setDescription('An entry describing a configured redirection')
relaydRedirectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectIndex.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectIndex.setDescription('A unique value, greater than zero, for each redirection')
relaydRedirectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("active", 0), ("disabled", 1), ("down", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectStatus.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectStatus.setDescription('Denotes whether the redirection is active, administively disabled, down, or configured as a backup')
relaydRedirectName = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectName.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectName.setDescription('The name of the redirection')
relaydRedirectCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectCnt.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectCnt.setDescription('Number of packets passed via this redirect')
relaydRedirectAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectAvg.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectAvg.setDescription('Average number of packets passed via this redirect per statistics interval')
relaydRedirectLast = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectLast.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectLast.setDescription('Number of packets passed via this redirect in the current statistics interval')
relaydRedirectAvgHour = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectAvgHour.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectAvgHour.setDescription('Average number of packets passed via this redirect per hour')
relaydRedirectLastHour = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectLastHour.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectLastHour.setDescription('Number of packets passed via this redirect in the previous hour')
relaydRedirectAvgDay = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectAvgDay.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectAvgDay.setDescription('Average number of packets passed via this redirect per day')
relaydRedirectLastDay = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRedirectLastDay.setStatus('current')
if mibBuilder.loadTexts: relaydRedirectLastDay.setDescription('Number of packets passed via this redirect in the previous day')
relaydRelays = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2), )
if mibBuilder.loadTexts: relaydRelays.setStatus('current')
if mibBuilder.loadTexts: relaydRelays.setDescription('A list of configured relays')
relaydRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydRelayIndex"))
if mibBuilder.loadTexts: relaydRelayEntry.setStatus('current')
if mibBuilder.loadTexts: relaydRelayEntry.setDescription('An entry describing a configured relay')
relaydRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayIndex.setStatus('current')
if mibBuilder.loadTexts: relaydRelayIndex.setDescription('A unique value, greater than zero, for each relay')
relaydRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayStatus.setStatus('current')
if mibBuilder.loadTexts: relaydRelayStatus.setDescription('Indicates whether the relay is active or administratively disabled')
relaydRelayName = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayName.setStatus('current')
if mibBuilder.loadTexts: relaydRelayName.setDescription('The name of the relay')
relaydRelayCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayCnt.setStatus('current')
if mibBuilder.loadTexts: relaydRelayCnt.setDescription('Number of packets passed via this relay')
relaydRelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayAvg.setStatus('current')
if mibBuilder.loadTexts: relaydRelayAvg.setDescription('Average number of packets passed via this relay per statistics interval')
relaydRelayLast = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayLast.setStatus('current')
if mibBuilder.loadTexts: relaydRelayLast.setDescription('Number of packets passed via this relay in the current statistics interval')
relaydRelayAvgHour = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayAvgHour.setStatus('current')
if mibBuilder.loadTexts: relaydRelayAvgHour.setDescription('Average number of packets passed via this relay per hour')
relaydRelayLastHour = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayLastHour.setStatus('current')
if mibBuilder.loadTexts: relaydRelayLastHour.setDescription('Number of packets passed via this relay in the previous hour')
relaydRelayAvgDay = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayAvgDay.setStatus('current')
if mibBuilder.loadTexts: relaydRelayAvgDay.setDescription('Average number of packets passed via this relay per day')
relaydRelayLastDay = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRelayLastDay.setStatus('current')
if mibBuilder.loadTexts: relaydRelayLastDay.setDescription('Number of packets passed via this relay in the previous day')
relaydRouters = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3), )
if mibBuilder.loadTexts: relaydRouters.setStatus('current')
if mibBuilder.loadTexts: relaydRouters.setDescription('A list of configured routers')
relaydRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydRouterIndex"))
if mibBuilder.loadTexts: relaydRouterEntry.setStatus('current')
if mibBuilder.loadTexts: relaydRouterEntry.setDescription('An entry describing the configured router')
relaydRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterIndex.setStatus('current')
if mibBuilder.loadTexts: relaydRouterIndex.setDescription('A unique value, greater than zero, for each router')
relaydRouterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterTableIndex.setStatus('current')
if mibBuilder.loadTexts: relaydRouterTableIndex.setDescription('Index of the Table entry under relaydTables which corresponds to this Router')
relaydRouterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterStatus.setStatus('current')
if mibBuilder.loadTexts: relaydRouterStatus.setDescription('Indicates whether the Router is active or administratively disabled')
relaydRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterName.setStatus('current')
if mibBuilder.loadTexts: relaydRouterName.setDescription('Name of the Router')
relaydRouterLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterLabel.setStatus('current')
if mibBuilder.loadTexts: relaydRouterLabel.setDescription('The PF label, if any, associated with this Router')
relaydRouterRtable = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydRouterRtable.setStatus('current')
if mibBuilder.loadTexts: relaydRouterRtable.setDescription('Rtable number associated with this Router')
relaydNetRoutes = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4), )
if mibBuilder.loadTexts: relaydNetRoutes.setStatus('current')
if mibBuilder.loadTexts: relaydNetRoutes.setDescription('A list of configured network routes')
relaydNetRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydNetRouteIndex"))
if mibBuilder.loadTexts: relaydNetRouteEntry.setStatus('current')
if mibBuilder.loadTexts: relaydNetRouteEntry.setDescription('An entry describing the configured network route')
relaydNetRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydNetRouteIndex.setStatus('current')
if mibBuilder.loadTexts: relaydNetRouteIndex.setDescription('A unique value, greater than zero, for each NetRoute')
relaydNetRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydNetRouteAddr.setStatus('current')
if mibBuilder.loadTexts: relaydNetRouteAddr.setDescription('Network address portion of NetRoute')
relaydNetRouteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydNetRouteAddrType.setStatus('current')
if mibBuilder.loadTexts: relaydNetRouteAddrType.setDescription('Address family of NetRoute')
relaydNetRoutePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydNetRoutePrefixLen.setStatus('current')
if mibBuilder.loadTexts: relaydNetRoutePrefixLen.setDescription('Length of address prefix of NetRoute')
relaydNetRouteRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydNetRouteRouterIndex.setStatus('current')
if mibBuilder.loadTexts: relaydNetRouteRouterIndex.setDescription('The index of the Router to which this NetRoute belongs')
relaydHosts = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5), )
if mibBuilder.loadTexts: relaydHosts.setStatus('current')
if mibBuilder.loadTexts: relaydHosts.setDescription('A list of configured Host entries')
relaydHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydHostIndex"))
if mibBuilder.loadTexts: relaydHostEntry.setStatus('current')
if mibBuilder.loadTexts: relaydHostEntry.setDescription('An entry describing the configured Host')
relaydHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostIndex.setStatus('current')
if mibBuilder.loadTexts: relaydHostIndex.setDescription('A unique value, greater than zero, for each Host')
relaydHostParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostParentIndex.setStatus('current')
if mibBuilder.loadTexts: relaydHostParentIndex.setDescription('Index of Host, if any, from which up/down state is inherited')
relaydHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostTableIndex.setStatus('current')
if mibBuilder.loadTexts: relaydHostTableIndex.setDescription('Index of the Table to which this Host belongs')
relaydHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostName.setStatus('current')
if mibBuilder.loadTexts: relaydHostName.setDescription('Name for Host')
relaydHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostAddress.setStatus('current')
if mibBuilder.loadTexts: relaydHostAddress.setDescription('Internet address for Host')
relaydHostAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostAddressType.setStatus('current')
if mibBuilder.loadTexts: relaydHostAddressType.setDescription('IP address version for Host')
relaydHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("up", 0), ("disabled", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostStatus.setStatus('current')
if mibBuilder.loadTexts: relaydHostStatus.setDescription('Availability of Host')
relaydHostCheckCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostCheckCnt.setStatus('current')
if mibBuilder.loadTexts: relaydHostCheckCnt.setDescription('Number of times the status of Host has been checked')
relaydHostUpCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostUpCnt.setStatus('current')
if mibBuilder.loadTexts: relaydHostUpCnt.setDescription('Number of status checks for Host in which host has been up')
relaydHostErrno = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("none", 0), ("abort", 1), ("intervalTimeout", 2), ("icmpOk", 3), ("icmpReadTimeout", 4), ("icmpWriteTimeout", 5), ("tcpSocketError", 6), ("tcpSocketLimit", 7), ("tcpSocketOption", 8), ("tcpConnectFail", 9), ("tcpConnectTimeout", 10), ("tcpConnectOk", 11), ("tcpWriteTimeout", 12), ("tcpWriteFail", 13), ("tcpReadTimeout", 14), ("tcpReadFail", 15), ("scriptOk", 16), ("scriptFail", 17), ("sslConnectError", 18), ("sslConnectFail", 19), ("sslConnectOk", 20), ("sslConnectTimeout", 21), ("sslReadTimeout", 22), ("sslWriteTimeout", 23), ("sslReadError", 24), ("sslWriteError", 25), ("sendExpectFail", 26), ("sendExpectOk", 27), ("httpCodeError", 28), ("httpCodeFail", 29), ("httpCodeOk", 30), ("httpDigestError", 31), ("httpDigestFail", 32), ("httpDigestOk", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydHostErrno.setStatus('current')
if mibBuilder.loadTexts: relaydHostErrno.setDescription('Error number for Host')
relaydSessions = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6), )
if mibBuilder.loadTexts: relaydSessions.setStatus('current')
if mibBuilder.loadTexts: relaydSessions.setDescription('A list of active Sessions')
relaydSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydSessionRelayIndex"), (0, "OPENBSD-RELAYD-MIB", "relaydSessionIndex"))
if mibBuilder.loadTexts: relaydSessionEntry.setStatus('current')
if mibBuilder.loadTexts: relaydSessionEntry.setDescription('An entry describing the active Session')
relaydSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionIndex.setStatus('current')
if mibBuilder.loadTexts: relaydSessionIndex.setDescription('A unique value, greater than zero, for each Session')
relaydSessionRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionRelayIndex.setStatus('current')
if mibBuilder.loadTexts: relaydSessionRelayIndex.setDescription('The index of the Relay to which this Session belongs')
relaydSessionInAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionInAddr.setStatus('current')
if mibBuilder.loadTexts: relaydSessionInAddr.setDescription('Incoming address of this Session')
relaydSessionInAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionInAddrType.setStatus('current')
if mibBuilder.loadTexts: relaydSessionInAddrType.setDescription('Incoming address family of this Session')
relaydSessionOutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionOutAddr.setStatus('current')
if mibBuilder.loadTexts: relaydSessionOutAddr.setDescription('Outgoing address of this Session')
relaydSessionOutAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionOutAddrType.setStatus('current')
if mibBuilder.loadTexts: relaydSessionOutAddrType.setDescription('Outgoing address family of this Session')
relaydSessionPortIn = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionPortIn.setStatus('current')
if mibBuilder.loadTexts: relaydSessionPortIn.setDescription('Incoming port of this Session')
relaydSessionPortOut = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionPortOut.setStatus('current')
if mibBuilder.loadTexts: relaydSessionPortOut.setDescription('Outgoing port of this Session')
relaydSessionAge = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionAge.setStatus('current')
if mibBuilder.loadTexts: relaydSessionAge.setDescription('Age of this Session')
relaydSessionIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionIdle.setStatus('current')
if mibBuilder.loadTexts: relaydSessionIdle.setDescription('Idle time of this Session')
relaydSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("running", 0), ("done", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionStatus.setStatus('current')
if mibBuilder.loadTexts: relaydSessionStatus.setDescription('Status of this Session')
relaydSessionPid = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydSessionPid.setStatus('current')
if mibBuilder.loadTexts: relaydSessionPid.setDescription('Process ID of process which is handling this Session')
relaydTables = MibTable((1, 3, 6, 1, 4, 1, 30155, 3, 2, 7), )
if mibBuilder.loadTexts: relaydTables.setStatus('current')
if mibBuilder.loadTexts: relaydTables.setDescription('A list of configured host tables')
relaydTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30155, 3, 2, 7, 1), ).setIndexNames((0, "OPENBSD-RELAYD-MIB", "relaydTableIndex"))
if mibBuilder.loadTexts: relaydTableEntry.setStatus('current')
if mibBuilder.loadTexts: relaydTableEntry.setDescription('An entry describing the host table')
relaydTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydTableIndex.setStatus('current')
if mibBuilder.loadTexts: relaydTableIndex.setDescription('A unique value, greater than zero, for each table')
relaydTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 7, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydTableName.setStatus('current')
if mibBuilder.loadTexts: relaydTableName.setDescription('The name of the table')
relaydTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 30155, 3, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("active", 0), ("empty", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaydTableStatus.setStatus('current')
if mibBuilder.loadTexts: relaydTableStatus.setDescription('Indicates the state of use of the table')
mibBuilder.exportSymbols("OPENBSD-RELAYD-MIB", relaydRelayAvgHour=relaydRelayAvgHour, relaydSessionInAddrType=relaydSessionInAddrType, relaydInfo=relaydInfo, relaydHostUpCnt=relaydHostUpCnt, relaydRelayIndex=relaydRelayIndex, relaydSessionIdle=relaydSessionIdle, relaydRelayLast=relaydRelayLast, relaydRouterLabel=relaydRouterLabel, relaydNetRoutePrefixLen=relaydNetRoutePrefixLen, relaydSessionPortIn=relaydSessionPortIn, relaydTables=relaydTables, relaydRedirectCnt=relaydRedirectCnt, relaydRedirectLastDay=relaydRedirectLastDay, relaydSessions=relaydSessions, relaydRelayLastHour=relaydRelayLastHour, relaydRouterIndex=relaydRouterIndex, relaydRelayStatus=relaydRelayStatus, relaydRedirectStatus=relaydRedirectStatus, relaydSessionStatus=relaydSessionStatus, relaydHostCheckCnt=relaydHostCheckCnt, relaydHostEntry=relaydHostEntry, relaydRedirectAvgHour=relaydRedirectAvgHour, relaydSessionInAddr=relaydSessionInAddr, relaydTableName=relaydTableName, relaydRedirects=relaydRedirects, relaydNetRouteAddr=relaydNetRouteAddr, relaydRedirectAvg=relaydRedirectAvg, relaydHostParentIndex=relaydHostParentIndex, relaydRedirectIndex=relaydRedirectIndex, relaydNetRoutes=relaydNetRoutes, relaydTableIndex=relaydTableIndex, relaydSessionOutAddr=relaydSessionOutAddr, relaydSessionAge=relaydSessionAge, relaydRedirectName=relaydRedirectName, relaydTableStatus=relaydTableStatus, relaydRelayEntry=relaydRelayEntry, relaydRelayAvg=relaydRelayAvg, relaydRedirectLast=relaydRedirectLast, relaydHosts=relaydHosts, relaydSessionEntry=relaydSessionEntry, relaydRouterRtable=relaydRouterRtable, relaydHostAddress=relaydHostAddress, relaydRelayCnt=relaydRelayCnt, relaydSessionOutAddrType=relaydSessionOutAddrType, relaydRouterName=relaydRouterName, relaydNetRouteRouterIndex=relaydNetRouteRouterIndex, relaydHostAddressType=relaydHostAddressType, relaydHostErrno=relaydHostErrno, relaydSessionIndex=relaydSessionIndex, relaydRedirectEntry=relaydRedirectEntry, relaydTableEntry=relaydTableEntry, relaydMIBObjects=relaydMIBObjects, relaydRouters=relaydRouters, relaydNetRouteIndex=relaydNetRouteIndex, relaydRouterEntry=relaydRouterEntry, relaydSessionPid=relaydSessionPid, relaydRelays=relaydRelays, relaydHostStatus=relaydHostStatus, relaydRelayAvgDay=relaydRelayAvgDay, relaydRouterStatus=relaydRouterStatus, relaydRedirectAvgDay=relaydRedirectAvgDay, relaydRedirectLastHour=relaydRedirectLastHour, relaydHostName=relaydHostName, relaydSessionRelayIndex=relaydSessionRelayIndex, relaydNetRouteEntry=relaydNetRouteEntry, relaydRelayName=relaydRelayName, relaydRelayLastDay=relaydRelayLastDay, relaydHostIndex=relaydHostIndex, relaydSessionPortOut=relaydSessionPortOut, PYSNMP_MODULE_ID=relaydMIBObjects, relaydRouterTableIndex=relaydRouterTableIndex, relaydNetRouteAddrType=relaydNetRouteAddrType, relaydHostTableIndex=relaydHostTableIndex)
