#
# PySNMP MIB module TERAWAVE-teraWlinkAtm-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraWlinkAtm-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, Bits, ObjectIdentity, ModuleIdentity, Unsigned32, TimeTicks, Gauge32, enterprises, Counter64, NotificationType, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "Bits", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "TimeTicks", "Gauge32", "enterprises", "Counter64", "NotificationType", "iso", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraWaveLinkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 6))
teraWlinkAtm = MibTable((1, 3, 6, 1, 4, 1, 4513, 6, 1), )
if mibBuilder.loadTexts: teraWlinkAtm.setStatus('mandatory')
if mibBuilder.loadTexts: teraWlinkAtm.setDescription(' table teraWlinkAtm')
teraWlinkAtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1), ).setIndexNames((0, "TERAWAVE-teraWlinkAtm-MIB", "teraWlinkAtmIndex"))
if mibBuilder.loadTexts: teraWlinkAtmEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraWlinkAtmEntry.setDescription(' table entry teraWlinkAtmEntry ')
teraWlinkAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraWlinkAtmIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraWlinkAtmIndex.setDescription('')
uTOPIACellDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uTOPIACellDrops.setStatus('mandatory')
if mibBuilder.loadTexts: uTOPIACellDrops.setDescription('')
misinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: misinsertedCells.setStatus('mandatory')
if mibBuilder.loadTexts: misinsertedCells.setDescription('')
f4SegCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f4SegCells.setStatus('mandatory')
if mibBuilder.loadTexts: f4SegCells.setDescription('')
f4EndToEndCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f4EndToEndCells.setStatus('mandatory')
if mibBuilder.loadTexts: f4EndToEndCells.setDescription('')
f5SegCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f5SegCells.setStatus('mandatory')
if mibBuilder.loadTexts: f5SegCells.setDescription('')
f5EndToEndCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f5EndToEndCells.setStatus('mandatory')
if mibBuilder.loadTexts: f5EndToEndCells.setDescription('')
misinsertedOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: misinsertedOAMCells.setStatus('mandatory')
if mibBuilder.loadTexts: misinsertedOAMCells.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-teraWlinkAtm-MIB", f4SegCells=f4SegCells, teraWlinkAtmIndex=teraWlinkAtmIndex, teraWaveLinkGroup=teraWaveLinkGroup, f4EndToEndCells=f4EndToEndCells, f5SegCells=f5SegCells, f5EndToEndCells=f5EndToEndCells, terawave=terawave, teraWlinkAtm=teraWlinkAtm, misinsertedCells=misinsertedCells, uTOPIACellDrops=uTOPIACellDrops, misinsertedOAMCells=misinsertedOAMCells, teraWlinkAtmEntry=teraWlinkAtmEntry)
