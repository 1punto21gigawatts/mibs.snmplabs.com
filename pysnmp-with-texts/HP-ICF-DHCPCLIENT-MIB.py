#
# PySNMP MIB module HP-ICF-DHCPCLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-DHCPCLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:33:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetVersion, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetVersion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Counter32, NotificationType, Unsigned32, iso, ModuleIdentity, IpAddress, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Counter32", "NotificationType", "Unsigned32", "iso", "ModuleIdentity", "IpAddress", "Integer32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpicfDhcpClient = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57))
hpicfDhcpClient.setRevisions(('2013-06-01 00:00', '2012-05-31 00:00', '2010-08-09 00:00', '2009-03-18 00:00', '2008-10-30 00:00', '2008-08-27 00:38',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfDhcpClient.setRevisionsDescriptions(("Added 'hpicfDhcpClientTR069AcsUrlOptionStatus' MIB object", "Added 'hpicfDhcpv6ClientDuid' MIB object", "Added 'hpicfDhcpClientintfTable' and 'hpicfDhcpClientStatisticsTable' tables.", "Added 'hpicfDhcpClientImageFileUpdate' MIB object", "Added 'hpicfDhcpClientHostNameOption' MIB object", 'Initial revision.',))
if mibBuilder.loadTexts: hpicfDhcpClient.setLastUpdated('201306010000Z')
if mibBuilder.loadTexts: hpicfDhcpClient.setOrganization('HP Networking.')
if mibBuilder.loadTexts: hpicfDhcpClient.setContactInfo('Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfDhcpClient.setDescription('This MIB module contains HP proprietary objects for managing the DHCP Client.')
hpicfDhcpClientOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1))
hpicfDhcpClientOptionsConf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2))
hpicfDhcpClientVendorSpecOptionStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientVendorSpecOptionStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientVendorSpecOptionStatus.setDescription("This flag indicates whether DHCP vendor specific configurations are enabled for this interface or not. Setting this flag to 'enabled' (the default) results in sending 'Vendor Class Identifier'(VCI) to DHCP server and requesting vendor specific configurations from DHCP servers for this interface. Refer to RFC 2132 for more details. Setting this flag to 'disabled' results in not sending VCI to DHCP server and not requesting vendor specific configurations from DHCP servers.")
hpicfDhcpClientHostNameOption = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientHostNameOption.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientHostNameOption.setDescription("This object enables/disables DHCP option 12 that allows for sending the system's hostname in DHCP packets. By default this object is set to be disabled. Setting this flag to 'enabled' results in the inclusion of system hostname in DHCP packets.")
hpicfDhcpClientImageFileUpdate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientImageFileUpdate.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientImageFileUpdate.setDescription('This object facilitates enabling or disabling of the image file update feature through DHCP. Setting this object to 1 enables this feature and setting it to 2 disables this feature. This MIB object can be set to 1 only if hpicfDhcpClientVendorSpecOptionStatus has already been set to 1. By default, hpicfDhcpClientImageFileUpdate is set to 1. When this feature is enabled, the Auto-TFTP settings will be disabled.')
hpicfDhcpClientintfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 4), )
if mibBuilder.loadTexts: hpicfDhcpClientintfTable.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientintfTable.setDescription("DHCP client's interface level configuration table. Common to both v4 and v6 DHCP clients.")
hpicfDhcpClientintfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfDhcpClientintfEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientintfEntry.setDescription('A row in hpicfDhcpClientintfTable.')
hpicfDhcpClientAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("md5", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientAuthType.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientAuthType.setDescription('The authentication type specified for an interface.')
hpicfDhcpClientKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientKeyChain.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientKeyChain.setDescription('KMS chain name specified for an interface.')
hpicfDhcpClientStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5), )
if mibBuilder.loadTexts: hpicfDhcpClientStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientStatisticsTable.setDescription("DHCP client's interface level statistics.")
hpicfDhcpClientStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HP-ICF-DHCPCLIENT-MIB", "hpicfIPVersion"))
if mibBuilder.loadTexts: hpicfDhcpClientStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientStatisticsEntry.setDescription('A row in hpicfDhcpClientStatisticsTable')
hpicfIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5, 1, 1), InetVersion())
if mibBuilder.loadTexts: hpicfIPVersion.setStatus('current')
if mibBuilder.loadTexts: hpicfIPVersion.setDescription(' IP version of this row.')
hpicfDhcpClientPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpClientPktTx.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientPktTx.setDescription('Number of DHCP packets transmitted.')
hpicfDhcpClientPktRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpClientPktRx.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientPktRx.setDescription('Number of DHCP packets received.')
hpicfDhcpClientPktAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpClientPktAuthFailed.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientPktAuthFailed.setDescription('Number of DHCP packets dropped due to authentication failure.')
hpicfDhcpv6ClientDuid = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(25, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpv6ClientDuid.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpv6ClientDuid.setDescription('The DUID (Dhcp Unique IDentifier) of the local device. The value is a DUID-LL as defined in RFC 3351, represented in hexadecimal.')
hpicfDhcpClientTR069AcsUrlOptionStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpClientTR069AcsUrlOptionStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientTR069AcsUrlOptionStatus.setDescription('This flag indicates whether the DHCP client will process the TR-069 CWMP ACS URL option. This object can only be enabled when hpicfDhcpClientVendorSpecOptionStatus is also enabled.')
hpicfDhcpClientGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1))
hpicfDhcpClientCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2))
hpicfDhcpClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2, 1)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientOptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientCompliance = hpicfDhcpClientCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientCompliance.setDescription('The compliance statement for DHCP Client implementation.')
hpicfDhcpClientVendorSpecOptionsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2, 2)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientVendorSpecOptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientVendorSpecOptionsCompliance = hpicfDhcpClientVendorSpecOptionsCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientVendorSpecOptionsCompliance.setDescription('The compliance statement for DHCP client implementation.')
hpicfDhcpClientAuthCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2, 3)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientAuthGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientAuthCompliance = hpicfDhcpClientAuthCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientAuthCompliance.setDescription('The compliance statement for DHCP Authentication implementation.')
hpicfDhcpv6ClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2, 4)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpv6ClientGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpv6ClientCompliance = hpicfDhcpv6ClientCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpv6ClientCompliance.setDescription('The compliance statement for DHCPv6 client implementation.')
hpicfDhcpClientTR069OptionsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 2, 5)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientTR069OptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientTR069OptionsCompliance = hpicfDhcpClientTR069OptionsCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientTR069OptionsCompliance.setDescription('The compliance statement for DHCP client TR-069 options implementation.')
hpicfDhcpClientOptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1, 1)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientVendorSpecOptionStatus"), ("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientHostNameOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientOptionsGroup = hpicfDhcpClientOptionsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientOptionsGroup.setDescription("A mandatory group with a set of DHCP client's option object(s).")
hpicfDhcpClientVendorSpecOptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1, 2)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientImageFileUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientVendorSpecOptionsGroup = hpicfDhcpClientVendorSpecOptionsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientVendorSpecOptionsGroup.setDescription('A mandatory group with a set of DHCP vendor specific option object(s).')
hpicfDhcpClientAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1, 3)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientAuthType"), ("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientKeyChain"), ("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientPktTx"), ("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientPktRx"), ("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientPktAuthFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientAuthGroup = hpicfDhcpClientAuthGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientAuthGroup.setDescription('A mandatory group with a set of DHCP Client Authentication object(s).')
hpicfDhcpv6ClientGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1, 4)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpv6ClientDuid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpv6ClientGroup = hpicfDhcpv6ClientGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpv6ClientGroup.setDescription('A mandatory group with a set of DHCPv6 client related object(s).')
hpicfDhcpClientTR069OptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57, 2, 1, 5)).setObjects(("HP-ICF-DHCPCLIENT-MIB", "hpicfDhcpClientTR069AcsUrlOptionStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpClientTR069OptionsGroup = hpicfDhcpClientTR069OptionsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfDhcpClientTR069OptionsGroup.setDescription('A mandatory group with a set of DHCP vendor specific options for TR-069 related object(s).')
mibBuilder.exportSymbols("HP-ICF-DHCPCLIENT-MIB", hpicfDhcpClientTR069OptionsGroup=hpicfDhcpClientTR069OptionsGroup, hpicfDhcpv6ClientCompliance=hpicfDhcpv6ClientCompliance, hpicfDhcpClientTR069OptionsCompliance=hpicfDhcpClientTR069OptionsCompliance, hpicfDhcpClientPktRx=hpicfDhcpClientPktRx, hpicfDhcpClient=hpicfDhcpClient, hpicfDhcpClientintfEntry=hpicfDhcpClientintfEntry, hpicfDhcpClientPktTx=hpicfDhcpClientPktTx, hpicfDhcpClientCompliances=hpicfDhcpClientCompliances, hpicfDhcpClientAuthGroup=hpicfDhcpClientAuthGroup, hpicfDhcpv6ClientGroup=hpicfDhcpv6ClientGroup, hpicfDhcpClientImageFileUpdate=hpicfDhcpClientImageFileUpdate, hpicfDhcpClientOptionsGroup=hpicfDhcpClientOptionsGroup, hpicfIPVersion=hpicfIPVersion, hpicfDhcpClientHostNameOption=hpicfDhcpClientHostNameOption, hpicfDhcpClientOptions=hpicfDhcpClientOptions, hpicfDhcpClientCompliance=hpicfDhcpClientCompliance, hpicfDhcpClientVendorSpecOptionStatus=hpicfDhcpClientVendorSpecOptionStatus, hpicfDhcpClientintfTable=hpicfDhcpClientintfTable, hpicfDhcpClientAuthCompliance=hpicfDhcpClientAuthCompliance, hpicfDhcpClientKeyChain=hpicfDhcpClientKeyChain, hpicfDhcpClientOptionsConf=hpicfDhcpClientOptionsConf, hpicfDhcpClientStatisticsEntry=hpicfDhcpClientStatisticsEntry, hpicfDhcpClientAuthType=hpicfDhcpClientAuthType, hpicfDhcpClientStatisticsTable=hpicfDhcpClientStatisticsTable, hpicfDhcpClientPktAuthFailed=hpicfDhcpClientPktAuthFailed, hpicfDhcpClientTR069AcsUrlOptionStatus=hpicfDhcpClientTR069AcsUrlOptionStatus, hpicfDhcpv6ClientDuid=hpicfDhcpv6ClientDuid, PYSNMP_MODULE_ID=hpicfDhcpClient, hpicfDhcpClientVendorSpecOptionsCompliance=hpicfDhcpClientVendorSpecOptionsCompliance, hpicfDhcpClientGroups=hpicfDhcpClientGroups, hpicfDhcpClientVendorSpecOptionsGroup=hpicfDhcpClientVendorSpecOptionsGroup)
