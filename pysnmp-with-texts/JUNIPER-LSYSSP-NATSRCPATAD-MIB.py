#
# PySNMP MIB module JUNIPER-LSYSSP-NATSRCPATAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-NATSRCPATAD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:00:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
jnxLsysSpNATsrcpatad, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpNATsrcpatad")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, Counter32, TimeTicks, Unsigned32, Gauge32, IpAddress, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "Counter32", "TimeTicks", "Unsigned32", "Gauge32", "IpAddress", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "Counter64", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLsysSpNATsrcpatadMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1))
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMIB.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMIB.setDescription('This module defines the NAT-src-pat-address-specific MIB for Juniper Enterprise Logical-System (LSYS) security profiles. Juniper documentation is recommended as the reference. The LSYS security profile provides various static and dynamic resource management by observing resource quota limits. Security NAT-src-pat-address resource is the focus in this MIB. ')
jnxLsysSpNATsrcpatadObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1))
jnxLsysSpNATsrcpatadSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2))
jnxLsysSpNATsrcpatadTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadTable.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadTable.setDescription('LSYSPROFILE NAT-src-pat-address objects for NAT-src-pat-address resource consumption per LSYS.')
jnxLsysSpNATsrcpatadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-NATSRCPATAD-MIB", "jnxLsysSpNATsrcpatadLsysName"))
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadEntry.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadEntry.setDescription('An entry in NAT-src-pat-address resource table.')
jnxLsysSpNATsrcpatadLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLsysName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLsysName.setDescription('The name of the logical system for which NAT-src-pat-address resource information is retrieved. ')
jnxLsysSpNATsrcpatadProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadProfileName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadProfileName.setDescription('The security profile name string for the LSYS.')
jnxLsysSpNATsrcpatadUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadUsage.setDescription('The current resource usage count for the LSYS.')
jnxLsysSpNATsrcpatadReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadReserved.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadReserved.setDescription('The reserved resource count for the LSYS.')
jnxLsysSpNATsrcpatadMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMaximum.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMaximum.setDescription('The maximum allowed resource usage count for the LSYS.')
jnxLsysSpNATsrcpatadUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadUsedAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadUsedAmount.setDescription('The NAT-src-pat-address resource consumption over all LSYS.')
jnxLsysSpNATsrcpatadMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMaxQuota.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadMaxQuota.setDescription('The NAT-src-pat-address resource maximum quota for the whole device for all LSYS.')
jnxLsysSpNATsrcpatadAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadAvailableAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadAvailableAmount.setDescription('The NAT-src-pat-address resource available in the whole device.')
jnxLsysSpNATsrcpatadHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadHeaviestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadHeaviestUsage.setDescription('The most amount of NAT-src-pat-address resource consumed of a LSYS.')
jnxLsysSpNATsrcpatadHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadHeaviestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadHeaviestUser.setDescription('The LSYS name that consume the most NAT-src-pat-address resource.')
jnxLsysSpNATsrcpatadLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLightestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLightestUsage.setDescription('The least amount of NAT-src-pat-address resource consumed of a LSYS.')
jnxLsysSpNATsrcpatadLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 10, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLightestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpNATsrcpatadLightestUser.setDescription('The LSYS name that consume the least NAT-src-pat-address resource.')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATSRCPATAD-MIB", jnxLsysSpNATsrcpatadEntry=jnxLsysSpNATsrcpatadEntry, jnxLsysSpNATsrcpatadLsysName=jnxLsysSpNATsrcpatadLsysName, jnxLsysSpNATsrcpatadMaximum=jnxLsysSpNATsrcpatadMaximum, jnxLsysSpNATsrcpatadAvailableAmount=jnxLsysSpNATsrcpatadAvailableAmount, jnxLsysSpNATsrcpatadObjects=jnxLsysSpNATsrcpatadObjects, jnxLsysSpNATsrcpatadUsage=jnxLsysSpNATsrcpatadUsage, jnxLsysSpNATsrcpatadHeaviestUsage=jnxLsysSpNATsrcpatadHeaviestUsage, jnxLsysSpNATsrcpatadReserved=jnxLsysSpNATsrcpatadReserved, jnxLsysSpNATsrcpatadHeaviestUser=jnxLsysSpNATsrcpatadHeaviestUser, jnxLsysSpNATsrcpatadTable=jnxLsysSpNATsrcpatadTable, jnxLsysSpNATsrcpatadLightestUser=jnxLsysSpNATsrcpatadLightestUser, PYSNMP_MODULE_ID=jnxLsysSpNATsrcpatadMIB, jnxLsysSpNATsrcpatadUsedAmount=jnxLsysSpNATsrcpatadUsedAmount, jnxLsysSpNATsrcpatadMaxQuota=jnxLsysSpNATsrcpatadMaxQuota, jnxLsysSpNATsrcpatadMIB=jnxLsysSpNATsrcpatadMIB, jnxLsysSpNATsrcpatadLightestUsage=jnxLsysSpNATsrcpatadLightestUsage, jnxLsysSpNATsrcpatadProfileName=jnxLsysSpNATsrcpatadProfileName, jnxLsysSpNATsrcpatadSummary=jnxLsysSpNATsrcpatadSummary)
