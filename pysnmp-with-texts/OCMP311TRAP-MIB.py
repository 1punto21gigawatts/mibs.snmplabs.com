#
# PySNMP MIB module OCMP311TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OCMP311TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:32:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, Bits, Unsigned32, iso, Counter32, Counter64, NotificationType, ObjectIdentity, MibIdentifier, ModuleIdentity, NotificationType, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "Bits", "Unsigned32", "iso", "Counter32", "Counter64", "NotificationType", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "NotificationType", "Gauge32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
inNetElem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 29))
openCall = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 29, 2))
openCallTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0))
sourcePlatformEntity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourcePlatformEntity.setStatus('mandatory')
if mibBuilder.loadTexts: sourcePlatformEntity.setDescription(' This is the source entity that sends the trap, typically this is a combination of platform and machine name. (ex: oc_platform, nta2225.india.hp.com')
sourceObjectID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceObjectID.setStatus('mandatory')
if mibBuilder.loadTexts: sourceObjectID.setDescription(' This identifies the objectID of the instance that sends the trap. (ex: Process Name)')
perceivedSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: perceivedSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: perceivedSeverity.setDescription(' This identifies the severity of the trap. Possible severity are Cleared Informative Warning Minor Major Critical')
alarmText = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmText.setStatus('mandatory')
if mibBuilder.loadTexts: alarmText.setDescription(' This describes the alarm generating the trap.')
probableCause = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: probableCause.setStatus('mandatory')
if mibBuilder.loadTexts: probableCause.setDescription(' This identifies the probable cause of the trap.')
correctiveAction = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: correctiveAction.setStatus('mandatory')
if mibBuilder.loadTexts: correctiveAction.setDescription(' This describes the actions to apply for correcting the problem that generated this alarm.')
timeStamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 29, 2, 0, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: timeStamp.setDescription(' Time-Stamp recorded in the log generated by this alarm.')
hHPOC_20000006 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000006)).setLabel("hHPOC-20000006").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000006.setDescription('Host [<string>] OCMP [<string>] launched')
hHPOC_20000007 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000007)).setLabel("hHPOC-20000007").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000007.setDescription('Host [<string>] OCMP [<string>] down')
hHPOC_20000010 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000010)).setLabel("hHPOC-20000010").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000010.setDescription('Host [<string>] OCMP [<string>] aborted [<string>]')
hHPOC_20000011 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000011)).setLabel("hHPOC-20000011").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000011.setDescription('Host [<string>] OCMP [<string>] aborted [<string>] ')
hHPOC_20000017 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000017)).setLabel("hHPOC-20000017").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000017.setDescription(' Platform overloaded : no outgoing calls allowed ')
hHPOC_20000018 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000018)).setLabel("hHPOC-20000018").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000018.setDescription(' Platform return to normal load : outgoing calls are allowed ')
hHPOC_20000019 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000019)).setLabel("hHPOC-20000019").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000019.setDescription(' Platform overloaded : no incoming calls allowed')
hHPOC_20000020 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20000020)).setLabel("hHPOC-20000020").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20000020.setDescription(' Platform return to normal load : incoming calls are allowed')
hHPOC_201000001 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20100001)).setLabel("hHPOC-201000001").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_201000001.setDescription(' Service [<string>] started ')
hHPOC_201000002 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20100002)).setLabel("hHPOC-201000002").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_201000002.setDescription(' Service [<string>] stopped')
hHPOC_20200005 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20200005)).setLabel("hHPOC-20200005").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20200005.setDescription('DPC [<string>] not available ')
hHPOC_20200006 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20200006)).setLabel("hHPOC-20200006").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20200006.setDescription('DPC [<string>] back to available state ')
hHPOC_20200010 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20200010)).setLabel("hHPOC-20200010").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20200010.setDescription('LPC [<string>] all CICs reset')
hHPOC_20200011 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20200011)).setLabel("hHPOC-20200011").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20200011.setDescription('LPC [<string>] all CICs blocked')
hHPOC_20300001 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300001)).setLabel("hHPOC-20300001").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300001.setDescription('Card [<string>] LOS Alarm')
hHPOC_20300003 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300003)).setLabel("hHPOC-20300003").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300003.setDescription('Card [<string>] LOS Alarm cleared')
hHPOC_20300069 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300069)).setLabel("hHPOC-20300069").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300069.setDescription('Card [<string>] DS3_LOS Alarm')
hHPOC_20300070 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300070)).setLabel("hHPOC-20300070").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300070.setDescription('Card [<string>] DS3_LOS Alarm cleared')
hHPOC_20300085 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300085)).setLabel("hHPOC-20300085").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300085.setDescription('E1/T1/J1 [<string>] LOS Alarm')
hHPOC_20300086 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20300086)).setLabel("hHPOC-20300086").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20300086.setDescription('E1/T1/J1 [<string>] LOS Alarm cleared')
hHPOC_20400003 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20400003)).setLabel("hHPOC-20400003").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20400003.setDescription('Configuration [<string>] loading failed.')
hHPOC_20500003 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20500003)).setLabel("hHPOC-20500003").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20500003.setDescription(' EchoCanceller Card [<string>] failure')
hHPOC_20500004 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20500004)).setLabel("hHPOC-20500004").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20500004.setDescription(' EchoCanceller Card [<string>] failure cleared')
hHPOC_20600002 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20600002)).setLabel("hHPOC-20600002").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20600002.setDescription(' Unable to connect to ASR/TTS server [<string>] (IP : [<string>]), connection closed or server DEAD')
hHPOC_20600005 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 29, 2) + (0,20600005)).setLabel("hHPOC-20600005").setObjects(("OCMP311TRAP-MIB", "sourcePlatformEntity"), ("OCMP311TRAP-MIB", "sourceObjectID"), ("OCMP311TRAP-MIB", "perceivedSeverity"), ("OCMP311TRAP-MIB", "alarmText"), ("OCMP311TRAP-MIB", "probableCause"), ("OCMP311TRAP-MIB", "correctiveAction"), ("OCMP311TRAP-MIB", "timeStamp"))
if mibBuilder.loadTexts: hHPOC_20600005.setDescription(' Connection to the ASR/TTS server [<string>] is up, server ACTIVE.')
mibBuilder.exportSymbols("OCMP311TRAP-MIB", hHPOC_20000018=hHPOC_20000018, nm=nm, timeStamp=timeStamp, hHPOC_20000019=hHPOC_20000019, alarmText=alarmText, inNetElem=inNetElem, hHPOC_20300070=hHPOC_20300070, hHPOC_20600005=hHPOC_20600005, hHPOC_20600002=hHPOC_20600002, perceivedSeverity=perceivedSeverity, hHPOC_20000007=hHPOC_20000007, correctiveAction=correctiveAction, hHPOC_20000017=hHPOC_20000017, hHPOC_20300003=hHPOC_20300003, hHPOC_20400003=hHPOC_20400003, hHPOC_20300086=hHPOC_20300086, hHPOC_20000020=hHPOC_20000020, hHPOC_20300069=hHPOC_20300069, hHPOC_20000010=hHPOC_20000010, sourceObjectID=sourceObjectID, hHPOC_20200011=hHPOC_20200011, hHPOC_20500004=hHPOC_20500004, openCall=openCall, hp=hp, hHPOC_20200006=hHPOC_20200006, hHPOC_20200010=hHPOC_20200010, hHPOC_20300001=hHPOC_20300001, hHPOC_20000006=hHPOC_20000006, hHPOC_201000001=hHPOC_201000001, hHPOC_20500003=hHPOC_20500003, hHPOC_20000011=hHPOC_20000011, openCallTraps=openCallTraps, hHPOC_20300085=hHPOC_20300085, hHPOC_201000002=hHPOC_201000002, sourcePlatformEntity=sourcePlatformEntity, hHPOC_20200005=hHPOC_20200005, probableCause=probableCause)
