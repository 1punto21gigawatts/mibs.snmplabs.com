#
# PySNMP MIB module Wellfleet-VCCT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-VCCT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:42:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, Unsigned32, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, MibIdentifier, Gauge32, ModuleIdentity, TimeTicks, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Unsigned32", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "MibIdentifier", "Gauge32", "ModuleIdentity", "TimeTicks", "Counter32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfVcctGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfVcctGroup")
wfVcct = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 1))
wfVcctDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVcctDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctDelete.setDescription('Create/Delete parameter. Default is created. User perform an SNMP SET operation on this object in order to create/delete VCCT')
wfVcctDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVcctDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctDisable.setDescription('Enable/Disable parameter. Default is enabled. User perform an SNMP SET operation on this object in order to enable/disable VCCT')
wfVcctState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVcctState.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctState.setDescription('The current state of VCCT subsystem')
wfVcctTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2), )
if mibBuilder.loadTexts: wfVcctTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctTable.setDescription('Table of Virtual Circuit Config Objects')
wfVcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1), ).setIndexNames((0, "Wellfleet-VCCT-MIB", "wfVcctEntrySlot"), (0, "Wellfleet-VCCT-MIB", "wfVcctEntryCct"))
if mibBuilder.loadTexts: wfVcctEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntry.setDescription('An entry in the Virtual Circuit Config Table')
wfVcctEntryDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVcctEntryDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryDelete.setDescription('Create/Delete parameter. Default is created. User perform an SNMP SET operation on this object in order to create/delete the Virtual Circuit gate')
wfVcctEntryDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVcctEntryDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryDisable.setDescription('Enable/Disable parameter. Default is enabled. User perform an SNMP SET operation on this object in order to enable/disable the Virtual Circuit gate')
wfVcctEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("coisapwait", 1), ("connectwait", 2), ("connectrspwait", 3), ("connectrcv", 4), ("disconnectrspwait", 5))).clone('coisapwait')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVcctEntryState.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryState.setDescription('Current state of the virtual circuit gate')
wfVcctEntrySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVcctEntrySlot.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntrySlot.setDescription('Slot that the Virtual Circuit gate is running on')
wfVcctEntryCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVcctEntryCct.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryCct.setDescription('Circuit number of this Virtual Circuit gate')
wfVcctEntryNumClients = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVcctEntryNumClients.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryNumClients.setDescription('Total number of clients registered on this Virtual Circuit Gate')
wfVcctEntryServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 24, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("dlcClientApi", 1))).clone('dlcClientApi')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVcctEntryServiceType.setStatus('mandatory')
if mibBuilder.loadTexts: wfVcctEntryServiceType.setDescription('Type of Service being provided by this Virtual Circuit gate')
mibBuilder.exportSymbols("Wellfleet-VCCT-MIB", wfVcctEntryNumClients=wfVcctEntryNumClients, wfVcctEntryState=wfVcctEntryState, wfVcctState=wfVcctState, wfVcctEntryDelete=wfVcctEntryDelete, wfVcctEntrySlot=wfVcctEntrySlot, wfVcct=wfVcct, wfVcctEntryCct=wfVcctEntryCct, wfVcctDisable=wfVcctDisable, wfVcctTable=wfVcctTable, wfVcctEntry=wfVcctEntry, wfVcctDelete=wfVcctDelete, wfVcctEntryDisable=wfVcctEntryDisable, wfVcctEntryServiceType=wfVcctEntryServiceType)
