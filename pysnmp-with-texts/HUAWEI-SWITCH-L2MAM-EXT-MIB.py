#
# PySNMP MIB module HUAWEI-SWITCH-L2MAM-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-SWITCH-L2MAM-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
entPhysicalName, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName")
hwBaseTrapProbableCause, hwBaseTrapSeverity, hwBaseTrapEventType = mibBuilder.importSymbols("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause", "hwBaseTrapSeverity", "hwBaseTrapEventType")
hwCfgFdbVlanId, hwMacEntityUsage, hwPortSecurityProtectAction, hwCfgFdbMac, hwMacEntityUsageThreshold, hwCfgFdbVsiName = mibBuilder.importSymbols("HUAWEI-L2MAM-MIB", "hwCfgFdbVlanId", "hwMacEntityUsage", "hwPortSecurityProtectAction", "hwCfgFdbMac", "hwMacEntityUsageThreshold", "hwCfgFdbVsiName")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifDescr")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, iso, ObjectIdentity, Integer32, Counter32, Unsigned32, Bits, MibIdentifier, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "iso", "ObjectIdentity", "Integer32", "Counter32", "Unsigned32", "Bits", "MibIdentifier", "NotificationType", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwSWITCH_L2MAM_EXT = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315)).setLabel("hwSWITCH-L2MAM-EXT")
hwSWITCH_L2MAM_EXT.setRevisions(('2014-03-26 16:00', '2014-03-26 16:00', '2014-03-19 16:00', '2014-02-14 16:00', '2004-06-08 00:00', '1996-10-31 00:00', '1999-12-07 00:00', '2004-06-08 00:00', '2004-06-08 00:00', '1996-10-31 00:00', '1999-12-07 00:00', '2004-06-08 00:00', '1996-10-31 00:00', '1999-12-07 00:00', '1996-10-31 00:00', '1999-12-07 00:00', '2004-06-08 00:00', '2004-06-08 00:00', '2004-06-08 00:00', '2010-08-11 16:00', '2014-02-14 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwSWITCH_L2MAM_EXT.setRevisionsDescriptions(('Modify code hwMacTrapPortCfgAlarm', 'Modify code hwMacTrapHashConflictAlarm ', 'Edit the mib file by OM stard guide', 'Add code hwMacTrapPortCfgAlarm', ' V1.00, Inital version. ', 'Initial version (version 1), published as RFC 2037.', 'Initial Version of Entity MIB (Version 2). This revision obsoletes RFC 2037. This version published as RFC 2737.', ' V1.00, Inital version. ', ' V1.00, Inital version. ', 'Initial version (version 1), published as RFC 2037.', 'Initial Version of Entity MIB (Version 2). This revision obsoletes RFC 2037. This version published as RFC 2737.', ' V1.00, Inital version. ', 'Initial version (version 1), published as RFC 2037.', 'Initial Version of Entity MIB (Version 2). This revision obsoletes RFC 2037. This version published as RFC 2737.', 'Initial version (version 1), published as RFC 2037.', 'Initial Version of Entity MIB (Version 2). This revision obsoletes RFC 2037. This version published as RFC 2737.', ' V1.00, Inital version. ', ' V1.00, Inital version. ', ' V1.00, Inital version. ', 'V1.00, initial version.', 'Add code hwMacTrapPortCfgAlarm',))
if mibBuilder.loadTexts: hwSWITCH_L2MAM_EXT.setLastUpdated('201403261600Z')
if mibBuilder.loadTexts: hwSWITCH_L2MAM_EXT.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwSWITCH_L2MAM_EXT.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com")
if mibBuilder.loadTexts: hwSWITCH_L2MAM_EXT.setDescription('THIS IS THE LAYER 2 MAC-ADDRESS MANAGEMENT MIB.')
hwSwitchL2MamExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1))
hwMacTrapPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1, 1), )
if mibBuilder.loadTexts: hwMacTrapPortCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgTable.setDescription('The mac-trap Table.The table that contains the mac-trap information currently operating on this device.')
hwMacTrapPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1, 1, 1), ).setIndexNames((0, "HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapPortCfgIfIndex"))
if mibBuilder.loadTexts: hwMacTrapPortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgEntry.setDescription('Entries of the mac-trap table.')
hwMacTrapPortCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwMacTrapPortCfgIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgIfIndex.setDescription('The IfIndex which will be configured mac-trap.')
hwMacTrapPortCfgLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacTrapPortCfgLearn.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgLearn.setDescription('The alarm switch of the new mac. The meanings of the values are: enable(1),disanle(2).')
hwMacTrapPortCfgAging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacTrapPortCfgAging.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgAging.setDescription('The alarm switch of the delete mac. The meanings of the values are: enable(1),disanle(2).')
hwSwitchL2MamExtGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 2))
hwMacTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacTrapInterval.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapInterval.setDescription('The interval of trap the mac change.')
hwMacTrapMacInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 2, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacTrapMacInfo.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapMacInfo.setDescription('The information of mac-trap.')
hwSwitchL2MamExtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3))
hwMacTrapAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 1)).setObjects(("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapMacInfo"))
if mibBuilder.loadTexts: hwMacTrapAlarm.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapAlarm.setDescription('The trap when mac-address is learned or aging.')
hwPortVlanSecureMacAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 2)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbMac"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVlanId"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityProtectAction"))
if mibBuilder.loadTexts: hwPortVlanSecureMacAlarm.setStatus('current')
if mibBuilder.loadTexts: hwPortVlanSecureMacAlarm.setDescription('The alarm when MAC addresses that received are illegal ')
hwSlotMacUsageRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 3)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsage"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsageThreshold"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSlotMacUsageRaisingThreshold.setStatus('current')
if mibBuilder.loadTexts: hwSlotMacUsageRaisingThreshold.setDescription('This notification indicates the MAC usage of the slot raising the threshold ')
hwSlotMacUsageFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 4)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSlotMacUsageFallingThreshold.setStatus('current')
if mibBuilder.loadTexts: hwSlotMacUsageFallingThreshold.setDescription('This notification indicates the MAC usage of the slot falling the threshold ')
hwMacTrapPortCfgAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 5)).setObjects(("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapMacInfo"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbMac"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVlanId"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwMacTrapPortCfgAlarm.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapPortCfgAlarm.setDescription('The trap when mac-address is learned or aging.')
hwMacTrapHashConflictAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 3, 6)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbMac"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVlanId"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVsiName"))
if mibBuilder.loadTexts: hwMacTrapHashConflictAlarm.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapHashConflictAlarm.setDescription('This notification indicates that MAC address hash conflict occurred.')
hwSwitchL2MamExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4))
hwSwitchL2MamExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 1))
hwSwitchL2MamExtFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 1, 1)).setObjects(("HwSWITCH-L2MAM-EXT", "hwMacTrapGroups"), ("HwSWITCH-L2MAM-EXT", "hwL2MAMExtGeneralGrops"), ("HwSWITCH-L2MAM-EXT", "hwL2MAMExtTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSwitchL2MamExtFullCompliance = hwSwitchL2MamExtFullCompliance.setStatus('current')
if mibBuilder.loadTexts: hwSwitchL2MamExtFullCompliance.setDescription('hwSwitchL2MamExtFullCompliance')
hwSwitchL2MamExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 2))
hwMacTrapGroups = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 2, 1)).setObjects(("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapPortCfgLearn"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapPortCfgAging"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacTrapGroups = hwMacTrapGroups.setStatus('current')
if mibBuilder.loadTexts: hwMacTrapGroups.setDescription('A collection of objects providing information about mac trap table.')
hwL2MAMExtGeneralGrops = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 2, 2)).setObjects(("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapInterval"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapMacInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMExtGeneralGrops = hwL2MAMExtGeneralGrops.setStatus('current')
if mibBuilder.loadTexts: hwL2MAMExtGeneralGrops.setDescription('A collection of objects providing information about Mac addresses.')
hwL2MAMExtTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 315, 4, 2, 3)).setObjects(("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapAlarm"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapPortCfgAlarm"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwPortVlanSecureMacAlarm"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwSlotMacUsageFallingThreshold"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwSlotMacUsageRaisingThreshold"), ("HUAWEI-SWITCH-L2MAM-EXT-MIB", "hwMacTrapHashConflictAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMExtTrapGroup = hwL2MAMExtTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwL2MAMExtTrapGroup.setDescription('The trap enable group.')
mibBuilder.exportSymbols("HUAWEI-SWITCH-L2MAM-EXT-MIB", hwMacTrapInterval=hwMacTrapInterval, hwMacTrapAlarm=hwMacTrapAlarm, hwSlotMacUsageFallingThreshold=hwSlotMacUsageFallingThreshold, hwL2MAMExtTrapGroup=hwL2MAMExtTrapGroup, hwSwitchL2MamExtGeneralObjects=hwSwitchL2MamExtGeneralObjects, hwL2MAMExtGeneralGrops=hwL2MAMExtGeneralGrops, hwMacTrapMacInfo=hwMacTrapMacInfo, hwMacTrapPortCfgEntry=hwMacTrapPortCfgEntry, PYSNMP_MODULE_ID=hwSWITCH_L2MAM_EXT, hwMacTrapHashConflictAlarm=hwMacTrapHashConflictAlarm, hwSwitchL2MamExtFullCompliance=hwSwitchL2MamExtFullCompliance, hwSlotMacUsageRaisingThreshold=hwSlotMacUsageRaisingThreshold, hwSwitchL2MamExtObjects=hwSwitchL2MamExtObjects, hwSwitchL2MamExtGroups=hwSwitchL2MamExtGroups, hwSwitchL2MamExtCompliances=hwSwitchL2MamExtCompliances, hwSWITCH_L2MAM_EXT=hwSWITCH_L2MAM_EXT, hwMacTrapGroups=hwMacTrapGroups, hwSwitchL2MamExtConformance=hwSwitchL2MamExtConformance, hwMacTrapPortCfgLearn=hwMacTrapPortCfgLearn, hwSwitchL2MamExtTraps=hwSwitchL2MamExtTraps, hwMacTrapPortCfgTable=hwMacTrapPortCfgTable, hwMacTrapPortCfgAging=hwMacTrapPortCfgAging, hwPortVlanSecureMacAlarm=hwPortVlanSecureMacAlarm, hwMacTrapPortCfgAlarm=hwMacTrapPortCfgAlarm, hwMacTrapPortCfgIfIndex=hwMacTrapPortCfgIfIndex)
