#
# PySNMP MIB module FOUNDRY-SN-IGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-SN-IGMP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:15:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
router, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "router")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, Integer32, TimeTicks, NotificationType, Gauge32, ModuleIdentity, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "TimeTicks", "NotificationType", "Gauge32", "ModuleIdentity", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "ObjectIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snIgmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6))
snIgmp.setRevisions(('2010-06-02 00:00', '2009-09-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: snIgmp.setRevisionsDescriptions(('Changed the ORGANIZATION, CONTACT-INFO and DESCRIPTION fields.', '',))
if mibBuilder.loadTexts: snIgmp.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: snIgmp.setOrganization('Brocade Communications Systems, Inc.')
if mibBuilder.loadTexts: snIgmp.setContactInfo('Technical Support Center 130 Holger Way, San Jose, CA 95134 Email: ipsupport@brocade.com Phone: 1-800-752-8061 URL: www.brocade.com')
if mibBuilder.loadTexts: snIgmp.setDescription("Copyright 1996-2010 Brocade Communications Systems, Inc. All rights reserved. This Brocade Communications Systems SNMP Management Information Base Specification embodies Brocade Communications Systems' confidential and proprietary intellectual property. Brocade Communications Systems retains all title and ownership in the Specification, including any revisions. This Specification is supplied AS IS, and Brocade Communications Systems makes no warranty, either express or implied, as to the use, operation, condition, or performance of the specification, and any unintended consequence it may on the user environment.")
snIgmpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1))
snIgmpQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snIgmpQueryInterval.setStatus('current')
if mibBuilder.loadTexts: snIgmpQueryInterval.setDescription("This is the time interval at which this entity sends out IGMP host query packets. For a router, snDvmrpEnable must have been set to 'enabled' before this object is writen. For a switch, snSwGroupIpMcastMode must have been set to 'enabled' and snSwIpMcastQuerierMode must have been set to 'querier' before this object is writen. Value 0 cannot be used for SET operations. This value is returned if IGMP is not configured within the system. For FI platform the configurable range for this object is 10 .. 3600")
snIgmpGroupMembershipTime = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7200)).clone(140)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snIgmpGroupMembershipTime.setStatus('current')
if mibBuilder.loadTexts: snIgmpGroupMembershipTime.setDescription("This is the time interval after which a group is considered inactive. For a router, snDvmrpEnable must have been set to 'enabled' before this object is writen. For a switch, snSwGroupIpMcastMode must have been set to 'enabled' before this object is writen. Value 0 cannot be used for SET operations. This value is returned if IGMP is not configured within the system. For FI platform the configurable range for this object is 20 .. 7200")
snIgmpIfTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3), )
if mibBuilder.loadTexts: snIgmpIfTable.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfTable.setDescription('This table comprises of a list of IGMP interface entries.')
snIgmpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3, 1), ).setIndexNames((0, "FOUNDRY-SN-IGMP-MIB", "snIgmpIfEntryIndex"))
if mibBuilder.loadTexts: snIgmpIfEntry.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfEntry.setDescription('An entry (conceptual row) contains the group membership information for that port.')
snIgmpIfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpIfEntryIndex.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfEntryIndex.setDescription('The table entry index.')
snIgmpIfPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpIfPortNumber.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfPortNumber.setDescription('This is the interface on which the group was learnt.')
snIgmpIfGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpIfGroupAddress.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfGroupAddress.setDescription('The group address learnt from the interface.')
snIgmpIfGroupAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpIfGroupAge.setStatus('current')
if mibBuilder.loadTexts: snIgmpIfGroupAge.setDescription('This is the interval (seconds) after which the group information will be aged out.')
snIgmpStaticGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4), )
if mibBuilder.loadTexts: snIgmpStaticGroupTable.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupTable.setDescription('This table comprises of a list of IGMP static group entries.')
snIgmpStaticGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4, 1), ).setIndexNames((0, "FOUNDRY-SN-IGMP-MIB", "snIgmpStaticGroupIfIndex"), (0, "FOUNDRY-SN-IGMP-MIB", "snIgmpStaticGroupAddress"))
if mibBuilder.loadTexts: snIgmpStaticGroupEntry.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupEntry.setDescription('An entry (conceptual row) contains the IGMP static group membership information.')
snIgmpStaticGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpStaticGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupIfIndex.setDescription('The interface of which the static group was configured.')
snIgmpStaticGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snIgmpStaticGroupAddress.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupAddress.setDescription('The group address of which the static group was configured.')
snIgmpStaticGroupPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snIgmpStaticGroupPortList.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupPortList.setDescription('A list of ports which are the port membership of the static group. Each port is a 16-bit integer ifIndex.')
snIgmpStaticGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 6, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snIgmpStaticGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: snIgmpStaticGroupRowStatus.setDescription('To create or delete a static group entry.')
mibBuilder.exportSymbols("FOUNDRY-SN-IGMP-MIB", snIgmpQueryInterval=snIgmpQueryInterval, snIgmpStaticGroupIfIndex=snIgmpStaticGroupIfIndex, snIgmpMIBObjects=snIgmpMIBObjects, snIgmp=snIgmp, snIgmpIfEntryIndex=snIgmpIfEntryIndex, snIgmpGroupMembershipTime=snIgmpGroupMembershipTime, snIgmpIfTable=snIgmpIfTable, snIgmpStaticGroupAddress=snIgmpStaticGroupAddress, snIgmpIfPortNumber=snIgmpIfPortNumber, snIgmpIfEntry=snIgmpIfEntry, snIgmpStaticGroupRowStatus=snIgmpStaticGroupRowStatus, PYSNMP_MODULE_ID=snIgmp, snIgmpStaticGroupTable=snIgmpStaticGroupTable, snIgmpIfGroupAge=snIgmpIfGroupAge, snIgmpStaticGroupEntry=snIgmpStaticGroupEntry, snIgmpIfGroupAddress=snIgmpIfGroupAddress, snIgmpStaticGroupPortList=snIgmpStaticGroupPortList)
