#
# PySNMP MIB module HUAWEI-TASK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TASK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Gauge32, ModuleIdentity, Bits, Counter64, NotificationType, Integer32, Unsigned32, Counter32, MibIdentifier, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "ModuleIdentity", "Bits", "Counter64", "NotificationType", "Integer32", "Unsigned32", "Counter32", "MibIdentifier", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwTask = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27))
hwTask.setRevisions(('2014-09-25 00:00', '2003-07-31 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwTask.setRevisionsDescriptions(('V2.01, modify hwKeyTaskIndex, hwKeyTaskID and hwKeyTaskName.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: hwTask.setLastUpdated('201409250000Z')
if mibBuilder.loadTexts: hwTask.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwTask.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwTask.setDescription('The MIB module describes active system tasks, including the status and the general information of a task.')
class HwTaskStatusType(TextualConvention, Integer32):
    description = 'The status of the specified task. The parameter have seventeen different value. Normally a task may be status of the following: Normalready(0): task is ready, Block(1): task is blocked, Slept(2): task is slept, Suspend(4): task is suspended blocked, BlockAndSuspend(5): task is suspended blocked, SleptAndSuspend(6): task is slept and suspended, running(8): task is running, Queueblock(17): task is blocked on receiving queue messages, QueueblockAndSuspend(21): task is blocked on receiving queue messages and suspended, Semaphoreblock(33): task is blocked on taking a semaphore, SemaphoreblockAandSuspend(37): task is blocked on taking a semaphore and suspended, Eventblock(65): task is blocked on receiving events, EventblockAndSuspend(69): task is blocked on receiving events and suspended, prioblock(128): task is priblock, Preemptready(256): task is preempt ready, Writequeueblock(513): task is blocked on sending queue messages, WritequeueblockAndSuspend(517): task is blocked on sending queue messages and suspended.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5, 6, 8, 17, 21, 33, 37, 65, 69, 128, 256, 513, 517))
    namedValues = NamedValues(("normalready", 0), ("block", 1), ("sleep", 2), ("suspend", 4), ("blockAndSuspend", 5), ("sleptAndSuspend", 6), ("running", 8), ("queueblock", 17), ("queueblockAndSuspend", 21), ("semaphoreblock", 33), ("semaphoreblockAandSuspend", 37), ("eventblock", 65), ("eventblockAndSuspend", 69), ("prioblock", 128), ("preemptready", 256), ("writequeueblock", 513), ("writequeueblockAndSuspend", 517))

hwTaskObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1))
hwTaskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1), )
if mibBuilder.loadTexts: hwTaskTable.setStatus('current')
if mibBuilder.loadTexts: hwTaskTable.setDescription('A table of generic information on all active tasks on this device.')
hwTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TASK-MIB", "hwTaskIndex"), (0, "HUAWEI-TASK-MIB", "hwTaskID"))
if mibBuilder.loadTexts: hwTaskEntry.setStatus('current')
if mibBuilder.loadTexts: hwTaskEntry.setDescription('Generic information about active tasks on this device. Entries in this table will change when tasks are created and destroyed on the device.')
hwTaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 1), Gauge32())
if mibBuilder.loadTexts: hwTaskIndex.setStatus('current')
if mibBuilder.loadTexts: hwTaskIndex.setDescription('The object indicates some physical information, such as slot number of VIU or RSU board plugged in. ')
hwTaskID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 2), Gauge32())
if mibBuilder.loadTexts: hwTaskID.setStatus('current')
if mibBuilder.loadTexts: hwTaskID.setDescription('This object contains the task ID. ')
hwTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTaskName.setStatus('current')
if mibBuilder.loadTexts: hwTaskName.setDescription('The name associated with this task. If the name is longer than 255 characters, it will be truncated to the first 255 characters.')
hwTaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 4), HwTaskStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTaskStatus.setStatus('current')
if mibBuilder.loadTexts: hwTaskStatus.setDescription('The status of the specified task. The parameter have seventeen different value. Normally a task may be status of the following: normalready(0): task is ready, block(1): task is blocked, slept(2): task is slept, suspend(4): task is suspended blocked, blockAndSuspend(5): task is suspended blocked, sleepAndSuspend(6): task is slept and suspended, running(8): task is running, queueblock(17): task is blocked on receiving queue messages, queueblockAndSuspend(21): task is blocked on receiving queue messages and suspended, semaphoreblock(33): task is blocked on taking a semaphore, semaphoreblockAandSuspend(37): task is blocked on taking a semaphore and suspended, eventblock(65): task is blocked on receiving events, eventblockAndSuspend(69): task is blocked on receiving events and suspended, prioblock(128): task is priblock, preemptready(256): task is preempt ready, writequeueblock(513): task is blocked on sending queue messages, writequeueblockAndSuspend(517): task is blocked on sending queue messages and suspended.')
hwTaskCpuUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTaskCpuUsage.setStatus('current')
if mibBuilder.loadTexts: hwTaskCpuUsage.setDescription("Cpu usage information of this task(0%-100%).If a task's cpu usage is more than 90, it means that the task is very busy.")
hwTaskuSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 1, 1, 6), Gauge32()).setUnits('millseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTaskuSecs.setStatus('current')
if mibBuilder.loadTexts: hwTaskuSecs.setDescription('Average elapsed CPU time in millseconds when the task was active.')
hwKeyTaskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2), )
if mibBuilder.loadTexts: hwKeyTaskTable.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskTable.setDescription('A table of generic information on all active tasks on this device.')
hwKeyTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TASK-MIB", "hwKeyTaskIndex"), (0, "HUAWEI-TASK-MIB", "hwKeyTaskID"))
if mibBuilder.loadTexts: hwKeyTaskEntry.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskEntry.setDescription('Generic information about active tasks on this device. Entries in this table will change when tasks are created and destroyed on the device.')
hwKeyTaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwKeyTaskIndex.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskIndex.setDescription('The object indicates some physical information, such as slot number of VIU or RSU board plugged in. ')
hwKeyTaskID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hwKeyTaskID.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskID.setDescription('This object contains the task ID. ')
hwKeyTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwKeyTaskName.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskName.setDescription('The name associated with this task. If the name is longer than 255 characters, it will be truncated to the first 255 characters.')
hwKeyTaskCpuUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwKeyTaskCpuUsage.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskCpuUsage.setDescription("Cpu usage information of this task(0%-100%).If a task's cpu usage is more than 90, it means that the task is very busy.")
hwTaskNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 2))
hwTaskConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3))
hwTaskCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3, 1))
hwTaskCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3, 1, 1)).setObjects(("HUAWEI-TASK-MIB", "hwTaskGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTaskCompliance = hwTaskCompliance.setStatus('current')
if mibBuilder.loadTexts: hwTaskCompliance.setDescription('The compliance statement for entities which implement the huawei Task MIB,Write access is not required.')
hwTaskGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3, 2))
hwTaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3, 2, 1)).setObjects(("HUAWEI-TASK-MIB", "hwTaskName"), ("HUAWEI-TASK-MIB", "hwTaskStatus"), ("HUAWEI-TASK-MIB", "hwTaskCpuUsage"), ("HUAWEI-TASK-MIB", "hwTaskuSecs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTaskGroup = hwTaskGroup.setStatus('current')
if mibBuilder.loadTexts: hwTaskGroup.setDescription('A collection of objects providing common task monitoring information. This group is mandatory for all huawei devices.')
hwKeyTaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 27, 3, 2, 2)).setObjects(("HUAWEI-TASK-MIB", "hwKeyTaskName"), ("HUAWEI-TASK-MIB", "hwKeyTaskCpuUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwKeyTaskGroup = hwKeyTaskGroup.setStatus('current')
if mibBuilder.loadTexts: hwKeyTaskGroup.setDescription('A collection of objects providing common task monitoring information. This group is mandatory for all huawei devices.')
mibBuilder.exportSymbols("HUAWEI-TASK-MIB", HwTaskStatusType=HwTaskStatusType, hwTaskGroups=hwTaskGroups, hwTaskNotifications=hwTaskNotifications, hwTaskuSecs=hwTaskuSecs, hwKeyTaskTable=hwKeyTaskTable, hwKeyTaskID=hwKeyTaskID, hwTaskName=hwTaskName, hwTaskIndex=hwTaskIndex, hwTask=hwTask, hwTaskTable=hwTaskTable, hwTaskGroup=hwTaskGroup, PYSNMP_MODULE_ID=hwTask, hwTaskCompliances=hwTaskCompliances, hwTaskObjects=hwTaskObjects, hwTaskStatus=hwTaskStatus, hwKeyTaskName=hwKeyTaskName, hwKeyTaskGroup=hwKeyTaskGroup, hwKeyTaskEntry=hwKeyTaskEntry, hwTaskCompliance=hwTaskCompliance, hwKeyTaskIndex=hwKeyTaskIndex, hwTaskCpuUsage=hwTaskCpuUsage, hwTaskID=hwTaskID, hwKeyTaskCpuUsage=hwKeyTaskCpuUsage, hwTaskEntry=hwTaskEntry, hwTaskConformance=hwTaskConformance)
