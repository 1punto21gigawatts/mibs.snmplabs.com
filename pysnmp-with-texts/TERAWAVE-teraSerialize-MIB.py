#
# PySNMP MIB module TERAWAVE-teraSerialize-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraSerialize-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, IpAddress, NotificationType, Counter32, Counter64, MibIdentifier, ObjectIdentity, Integer32, Unsigned32, iso, Bits, TimeTicks, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "IpAddress", "NotificationType", "Counter32", "Counter64", "MibIdentifier", "ObjectIdentity", "Integer32", "Unsigned32", "iso", "Bits", "TimeTicks", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraCardSerializeTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 17), )
if mibBuilder.loadTexts: teraCardSerializeTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardSerializeTable.setDescription(' table teraCardSerializeTable')
teraCardSerializeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 17, 1), ).setIndexNames((0, "TERAWAVE-teraSerialize-MIB", "teraInstallSlotNumber"))
if mibBuilder.loadTexts: teraCardSerializeTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardSerializeTableEntry.setDescription(' table entry teraCardSerializeTableEntry ')
teraCardMfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgName.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgName.setDescription('')
teraCardMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgRevision.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgRevision.setDescription('')
teraCardMfgSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgSerial.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgSerial.setDescription('')
teraCardMfgSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgSWVersion.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgSWVersion.setDescription('')
teraCardMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgDate.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgDate.setDescription('')
teraCardMfgPN = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgPN.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgPN.setDescription('')
teraCardMfgInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgInfo.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgInfo.setDescription('')
teraCardMfgReservedCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 17, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCardMfgReservedCRC.setStatus('mandatory')
if mibBuilder.loadTexts: teraCardMfgReservedCRC.setDescription('')
teraEEPROMSerializeTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 21), )
if mibBuilder.loadTexts: teraEEPROMSerializeTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMSerializeTable.setDescription(' table teraEEPROMSerializeTable')
teraEEPROMSerializeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 21, 1), ).setIndexNames((0, "TERAWAVE-teraSerialize-MIB", "teraInstallSlotNumber"), (0, "TERAWAVE-teraSerialize-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraEEPROMSerializeTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMSerializeTableEntry.setDescription(' table entry teraEEPROMSerializeTableEntry ')
teraEEPROMMfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgName.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgName.setDescription('')
teraEEPROMMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgRevision.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgRevision.setDescription('')
teraEEPROMMfgSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgSerial.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgSerial.setDescription('')
teraEEPROMMfgHWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgHWVersion.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgHWVersion.setDescription('')
teraEEPROMMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgDate.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgDate.setDescription('')
teraEEPROMMfgPN = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgPN.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgPN.setDescription('')
teraEEPROMMfgInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgInfo.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgInfo.setDescription('')
teraEEPROMMfgReservedCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 21, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEEPROMMfgReservedCRC.setStatus('mandatory')
if mibBuilder.loadTexts: teraEEPROMMfgReservedCRC.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-teraSerialize-MIB", teraCardMfgSWVersion=teraCardMfgSWVersion, teraEEPROMMfgName=teraEEPROMMfgName, teraCardMfgPN=teraCardMfgPN, teraCardSerializeTable=teraCardSerializeTable, teraEEPROMMfgHWVersion=teraEEPROMMfgHWVersion, teraCardMfgName=teraCardMfgName, teraEEPROMMfgPN=teraEEPROMMfgPN, teraCardMfgReservedCRC=teraCardMfgReservedCRC, teraEEPROMSerializeTable=teraEEPROMSerializeTable, teraEEPROMMfgInfo=teraEEPROMMfgInfo, teraEEPROMMfgDate=teraEEPROMMfgDate, teraEEPROMMfgSerial=teraEEPROMMfgSerial, teraEEPROMSerializeTableEntry=teraEEPROMSerializeTableEntry, teraCardSerializeTableEntry=teraCardSerializeTableEntry, teraCardMfgSerial=teraCardMfgSerial, teraCardMfgInfo=teraCardMfgInfo, teraCardMfgDate=teraCardMfgDate, teraEEPROMMfgReservedCRC=teraEEPROMMfgReservedCRC, terawave=terawave, teraCardMfgRevision=teraCardMfgRevision, teraEEPROMMfgRevision=teraEEPROMMfgRevision)
