#
# PySNMP MIB module DESKTRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DESKTRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:41:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, enterprises, Gauge32, NotificationType, Bits, Unsigned32, IpAddress, iso, ModuleIdentity, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, mib_2, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "enterprises", "Gauge32", "NotificationType", "Bits", "Unsigned32", "IpAddress", "iso", "ModuleIdentity", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "mib-2", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 10))
sniDesktopMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 10, 3))
sniDeskTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2))
sniTrapAgentVersionInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 1))
sniTrapAgentPurpose = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sniTrapAgentPurpose.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentPurpose.setDescription('Purpose of the SNI Desktop-Trap-Agent')
sniTrapAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sniTrapAgentVersion.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentVersion.setDescription('Version of the SNI Desktop-Trap-Agent')
sniTrapAgentDeskInfoVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sniTrapAgentDeskInfoVersion.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentDeskInfoVersion.setDescription('Version of SNI Deskinfo')
sniTrapAgentTrapParameter = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2))
sniTrapDesktop = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 1), DisplayString())
if mibBuilder.loadTexts: sniTrapDesktop.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapDesktop.setDescription('Desktopname')
sniTrapTimeInt = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 2), Integer32())
if mibBuilder.loadTexts: sniTrapTimeInt.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapTimeInt.setDescription('Systemtime as integer')
sniTrapTimeStr = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 3), DisplayString())
if mibBuilder.loadTexts: sniTrapTimeStr.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapTimeStr.setDescription('Systemdate as string')
sniTrapAgentStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("st-unknown", 0), ("st-ok", 1), ("st-warning", 2), ("st-critical", 3))))
if mibBuilder.loadTexts: sniTrapAgentStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentStatus.setDescription('')
sniTrapAgentType = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("t-alert", 1), ("t-event", 2), ("t-info", 3))))
if mibBuilder.loadTexts: sniTrapAgentType.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentType.setDescription('')
sniTrapAgentEventName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 6), DisplayString())
if mibBuilder.loadTexts: sniTrapAgentEventName.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentEventName.setDescription('')
sniTrapAgentEventText = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 7), DisplayString())
if mibBuilder.loadTexts: sniTrapAgentEventText.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentEventText.setDescription('')
sniTrapAgentTimeBIAS = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 8), Integer32())
if mibBuilder.loadTexts: sniTrapAgentTimeBIAS.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentTimeBIAS.setDescription('')
sniTrapAgentSystemStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("st-unknown", 0), ("st-ok", 1), ("st-warning", 2), ("st-critical", 3))))
if mibBuilder.loadTexts: sniTrapAgentSystemStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentSystemStatus.setDescription('')
sniTrapAgentClassStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 10, 3, 2, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("st-unknown", 0), ("st-ok", 1), ("st-warning", 2), ("st-critical", 3))))
if mibBuilder.loadTexts: sniTrapAgentClassStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sniTrapAgentClassStatus.setDescription('')
sniTrapError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,1)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniTrapError.setDescription('No Text found in DeskMon.ini')
sniSmartOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,1001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniSmartOK.setDescription('SMART hard disk reports OK.')
sniSmartWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,1002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniSmartWarning.setDescription('SMART hard disk reports Warning.')
sniSmartError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,1003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniSmartError.setDescription('SMART hard disk reports Error.')
sniCoverClosed = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,2001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverClosed.setDescription('The cover is closed')
sniCoverOpened = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,2003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverOpened.setDescription('The cover has been opened.')
sniCoverSensorincorporated = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,3001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverSensorincorporated.setDescription('The sensor for securing the cover is incorporated.')
sniCoverSensorMissing = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,3003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverSensorMissing.setDescription('The sensor for securing the cover is missing or defective')
sniCoverRecognition = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,4001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverRecognition.setDescription('The cover type cannot be recognized.')
sniCoverRecognitionMissing = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,4003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniCoverRecognitionMissing.setDescription('The sensor for recognizing the cover type is missing or defective.')
sniNoShortCurcuit = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,5001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniNoShortCurcuit.setDescription('No short circuit in the mouse, keyboard or USB interface.')
sniShortCurcuit = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,5003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniShortCurcuit.setDescription('Short circuit in the mouse, keyboard or USB interface.')
sniTemperatureOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,7001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniTemperatureOK.setDescription('The temperature sensor is functioning')
sniTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,7002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniTemperatureWarning.setDescription('The temperature is high')
sniTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,7003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniTemperatureCritical.setDescription('The temperature sensor is defective or the temperature is too high')
sniFanRunning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,8001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFanRunning.setDescription('The fan is running')
sniFanNotRunning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,8003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFanNotRunning.setDescription('The fan is not running')
sniFanWornOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,9001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFanWornOK.setDescription('The rotational speed of the fan is OK.')
sniFanWornWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,9002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFanWornWarning.setDescription('The rotational speed of the fan is almost critical.')
sniFanWornCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,9003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFanWornCritical.setDescription('The rotational speed of the fan is critical.')
sniVoltageOk = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,11001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniVoltageOk.setDescription('The voltage monitor is functioning.')
sniVoltageWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,11002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniVoltageWarning.setDescription('The voltage is almost critical.')
sniVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,11003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniVoltageCritical.setDescription('The voltage monitor is not functioning or the voltage is critical.')
sniWatchdogOk = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,12001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniWatchdogOk.setDescription('The functionality of the operating system watchdog is guaranteed.')
sniWatchdogCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,12003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniWatchdogCritical.setDescription('The operating system watchdog caused too many consecutive system reboots and will be deactivated.')
sniInternalError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,13001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniInternalError.setDescription('Messages for system monitoring got lost because they could not be buffered!. The buffer has overrun or the harddisk was full.')
sniBIOSErrorLogOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,14001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniBIOSErrorLogOK.setDescription('BIOS error log contains no current entries')
sniBIOSErrorLogWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,14002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniBIOSErrorLogWarning.setDescription('BIOS reported a non-critical problem')
sniBIOSErrorLogCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,14003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniBIOSErrorLogCritical.setDescription('BIOS reported a critical error')
sniAOLPOSTCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,15003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLPOSTCritical.setDescription('Power On Self Test (POST) error.')
sniAOLWatchdogCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,16003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLWatchdogCritical.setDescription('The operating system may be hung or the computer failed to boot.')
sniAOLCoverOpened = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,17003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCoverOpened.setDescription('The cover was opened.')
sniAOLCPUMissingCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,18003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCPUMissingCritical.setDescription('The processor was removed from the computer.')
sniAOLHeartbeatCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,20003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLHeartbeatCritical.setDescription('The computer is no longer available. (Presence Heartbeat Expired).')
sniFreeDiskSpaceOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,21001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeDiskSpaceOK.setDescription('Free hard disk space is sufficient.')
sniFreeDiskSpaceWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,21002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeDiskSpaceWarning.setDescription('Free hard disk space is low.')
sniFreeDiskSpaceError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,21003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeDiskSpaceError.setDescription('Free hard disk space is extremely low.')
sniMemoryChangesOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,22001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniMemoryChangesOK.setDescription('The memory size has not changed.')
sniMemoryChangesWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,22002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniMemoryChangesWarning.setDescription('The memory size increased.')
sniMemoryChangesError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,22003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniMemoryChangesError.setDescription('The memory size decreased low.')
sniDeviceChangesOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,23001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniDeviceChangesOK.setDescription('No changes in devices.')
sniDeviceChangesWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,23002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniDeviceChangesWarning.setDescription('A device was added to the system.')
sniDeviceChangesError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,23003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniDeviceChangesError.setDescription('A device was removed from the system.')
sniAOLVoltage_Fan_TemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,24003)).setLabel("sniAOLVoltage-Fan-TemperatureCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLVoltage_Fan_TemperatureCritical.setDescription('A Voltage/Fan/Temperature is operating out of specification.')
sniAOLLANLeashCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,25003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLLANLeashCritical.setDescription('The computer was recently reconnected to the network.')
sniAOLProcessorTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,26003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLProcessorTemperatureCritical.setDescription('The processor temperature is out of specification.')
sniAOLProcessor0MissingCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,28003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLProcessor0MissingCritical.setDescription('The processor P0 was removed from the computer.')
sniAOLProcessor1MissingCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,29003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLProcessor1MissingCritical.setDescription('The processor P1 was removed from the computer.')
sniAOLVoltage_FanCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,30003)).setLabel("sniAOLVoltage-FanCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLVoltage_FanCritical.setDescription('A Voltage/Fan is operating out of specification.')
sniAOLVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,31003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLVoltageCritical.setDescription('A Voltage is operating out of specification.')
sniAOLFanCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,32003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLFanCritical.setDescription('A Fan is operating out of specification.')
sniAOLFan_TemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,33003)).setLabel("sniAOLFan-TemperatureCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLFan_TemperatureCritical.setDescription('A Fan/Temperature is operating out of specification.')
sniAOLVoltage_TemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,34003)).setLabel("sniAOLVoltage-TemperatureCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLVoltage_TemperatureCritical.setDescription('A Voltage/Temperature is operating out of specification.')
sniAOLNICSMBusSlotCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,35003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLNICSMBusSlotCritical.setDescription('NIC with Capelookout has been plugged into a PCI slot without SMBus connection.')
sniAOLPresencePongCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,36003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLPresencePongCritical.setDescription('Received a presence pong reply.')
sniAOLHardwareMonitorCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,37003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLHardwareMonitorCritical.setDescription('Hardware Monitor has detected an external event.')
sniAOL1_5VGTLVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,38003)).setLabel("sniAOL1-5VGTLVoltageCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL1_5VGTLVoltageCritical.setDescription('+1.5 GTL Voltage is out of specification.')
sniAOLCPUCoreVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,39003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCPUCoreVoltageCritical.setDescription('CPU Core Voltage is out of specification.')
sniAOL3_3VStandbyCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,40003)).setLabel("sniAOL3-3VStandbyCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL3_3VStandbyCritical.setDescription('+3.3V Standby Voltage is out of specification.')
sniAOL5VoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,41003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL5VoltageCritical.setDescription('+5V Voltage is out of specification.')
sniAOLHardwareMonitorInternalTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,42003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLHardwareMonitorInternalTemperatureCritical.setDescription('Hardware Monitor Internal Temperature is out of specification.')
sniAOLCPUDiodeSensorCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,43003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCPUDiodeSensorCritical.setDescription('CPU Diode Sensor is operating out of specification.')
sniAOLCPUFanCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,44003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCPUFanCritical.setDescription('CPU Fan is operating out of specification.')
sniAOLChassisFanCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,45003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLChassisFanCritical.setDescription('Chassis Fan is operating out of specification.')
sniAOL12VoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,46003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL12VoltageCritical.setDescription('+12V is operating out of specification.')
sniAOL3_3VoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,47003)).setLabel("sniAOL3-3VoltageCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL3_3VoltageCritical.setDescription('+3.3V is operating out of specification.')
sniAOLCPUDiodeCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,48003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLCPUDiodeCritical.setDescription('Open/Short has occurred in the CPU Diode Sensor.')
sniAOL2_5VoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,49003)).setLabel("sniAOL2-5VoltageCritical").setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOL2_5VoltageCritical.setDescription('+2.5V is operating out of specification.')
sniAOLAmbientTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,50003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLAmbientTemperatureCritical.setDescription('Ambient temperature is out of specification.')
sniAOLRemoteTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,51003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLRemoteTemperatureCritical.setDescription('Remote Temperature is out of specification.')
sniAOLUndockEventCritical = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,52003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniAOLUndockEventCritical.setDescription('Surprised undock event (no information is available).')
sniFreeSystemDiskSpaceOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,56001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeSystemDiskSpaceOK.setDescription('Free hard disk space on system disk is sufficient.')
sniFreeSystemDiskSpaceWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,56002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeSystemDiskSpaceWarning.setDescription('Free hard disk space on system disk is low.')
sniFreeSystemDiskSpaceError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,56003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniFreeSystemDiskSpaceError.setDescription('Free hard disk space on system disk is extremely low.')
sniLeaseExpirationOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,57001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniLeaseExpirationOK.setDescription('The lease contract has not yet expired or no expiration date has been set.')
sniLeaseExpirationWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,57002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniLeaseExpirationWarning.setDescription('The lease contract will expire soon.')
sniLeaseExpirationError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,57003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniLeaseExpirationError.setDescription('The lease contract has expired.')
sniProcessorChangeOK = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,58001)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniProcessorChangeOK.setDescription('No processor change determined.')
sniProcessorChangeWarning = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,58002)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniProcessorChangeWarning.setDescription('A processor has also been installed or replaced.')
sniProcessorChangeError = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 10, 3) + (0,58003)).setObjects(("DESKTRAP-MIB", "sniTrapDesktop"), ("DESKTRAP-MIB", "sniTrapTimeInt"), ("DESKTRAP-MIB", "sniTrapTimeStr"), ("DESKTRAP-MIB", "sniTrapAgentStatus"), ("DESKTRAP-MIB", "sniTrapAgentType"), ("DESKTRAP-MIB", "sniTrapAgentEventName"), ("DESKTRAP-MIB", "sniTrapAgentEventText"), ("DESKTRAP-MIB", "sniTrapAgentTimeBIAS"), ("DESKTRAP-MIB", "sniTrapAgentSystemStatus"), ("DESKTRAP-MIB", "sniTrapAgentClassStatus"))
if mibBuilder.loadTexts: sniProcessorChangeError.setDescription('A processor has been removed.')
mibBuilder.exportSymbols("DESKTRAP-MIB", sniFanNotRunning=sniFanNotRunning, sniAOL12VoltageCritical=sniAOL12VoltageCritical, sniDeskTrap=sniDeskTrap, sniFreeDiskSpaceOK=sniFreeDiskSpaceOK, sniCoverRecognitionMissing=sniCoverRecognitionMissing, sniTrapAgentDeskInfoVersion=sniTrapAgentDeskInfoVersion, sniAOLVoltage_Fan_TemperatureCritical=sniAOLVoltage_Fan_TemperatureCritical, sniProductMibs=sniProductMibs, sniTemperatureCritical=sniTemperatureCritical, sniTrapAgentType=sniTrapAgentType, sniFanWornWarning=sniFanWornWarning, sniAOL1_5VGTLVoltageCritical=sniAOL1_5VGTLVoltageCritical, sniAOLChassisFanCritical=sniAOLChassisFanCritical, sniProcessorChangeWarning=sniProcessorChangeWarning, sniFreeDiskSpaceError=sniFreeDiskSpaceError, sniTrapAgentTrapParameter=sniTrapAgentTrapParameter, sniAOLVoltage_FanCritical=sniAOLVoltage_FanCritical, sniTrapAgentClassStatus=sniTrapAgentClassStatus, sniProcessorChangeError=sniProcessorChangeError, sniAOLFan_TemperatureCritical=sniAOLFan_TemperatureCritical, sniDeviceChangesOK=sniDeviceChangesOK, sniTemperatureWarning=sniTemperatureWarning, sniTrapAgentPurpose=sniTrapAgentPurpose, sniDeviceChangesError=sniDeviceChangesError, sniFreeSystemDiskSpaceWarning=sniFreeSystemDiskSpaceWarning, sniTrapTimeStr=sniTrapTimeStr, sniAOLVoltageCritical=sniAOLVoltageCritical, sniTrapAgentSystemStatus=sniTrapAgentSystemStatus, sniCoverSensorMissing=sniCoverSensorMissing, sniAOLCPUDiodeCritical=sniAOLCPUDiodeCritical, sniFreeSystemDiskSpaceOK=sniFreeSystemDiskSpaceOK, sniFanRunning=sniFanRunning, sniBIOSErrorLogWarning=sniBIOSErrorLogWarning, sniAOLWatchdogCritical=sniAOLWatchdogCritical, sni=sni, sniLeaseExpirationError=sniLeaseExpirationError, sniTrapDesktop=sniTrapDesktop, sniTrapError=sniTrapError, sniAOLFanCritical=sniAOLFanCritical, sniAOLVoltage_TemperatureCritical=sniAOLVoltage_TemperatureCritical, sniLeaseExpirationWarning=sniLeaseExpirationWarning, sniCoverClosed=sniCoverClosed, sniFanWornCritical=sniFanWornCritical, sniSmartOK=sniSmartOK, sniAOLCPUFanCritical=sniAOLCPUFanCritical, sniAOL3_3VStandbyCritical=sniAOL3_3VStandbyCritical, sniMemoryChangesError=sniMemoryChangesError, sniMemoryChangesWarning=sniMemoryChangesWarning, sniSmartError=sniSmartError, sniVoltageCritical=sniVoltageCritical, sniAOLCPUCoreVoltageCritical=sniAOLCPUCoreVoltageCritical, sniInternalError=sniInternalError, sniBIOSErrorLogOK=sniBIOSErrorLogOK, sniAOL5VoltageCritical=sniAOL5VoltageCritical, sniProcessorChangeOK=sniProcessorChangeOK, sniWatchdogOk=sniWatchdogOk, sniAOL2_5VoltageCritical=sniAOL2_5VoltageCritical, sniTrapAgentEventText=sniTrapAgentEventText, sniAOLUndockEventCritical=sniAOLUndockEventCritical, sniAOLLANLeashCritical=sniAOLLANLeashCritical, sniAOLCPUMissingCritical=sniAOLCPUMissingCritical, sniTrapTimeInt=sniTrapTimeInt, sniVoltageOk=sniVoltageOk, sniTemperatureOK=sniTemperatureOK, sniDeviceChangesWarning=sniDeviceChangesWarning, sniAOLRemoteTemperatureCritical=sniAOLRemoteTemperatureCritical, sniAOLHardwareMonitorCritical=sniAOLHardwareMonitorCritical, sniAOLProcessorTemperatureCritical=sniAOLProcessorTemperatureCritical, sniBIOSErrorLogCritical=sniBIOSErrorLogCritical, sniNoShortCurcuit=sniNoShortCurcuit, sniAOLCoverOpened=sniAOLCoverOpened, sniFanWornOK=sniFanWornOK, sniTrapAgentVersion=sniTrapAgentVersion, sniAOLProcessor0MissingCritical=sniAOLProcessor0MissingCritical, sniCoverRecognition=sniCoverRecognition, sniAOLCPUDiodeSensorCritical=sniAOLCPUDiodeSensorCritical, sniAOLProcessor1MissingCritical=sniAOLProcessor1MissingCritical, sniTrapAgentTimeBIAS=sniTrapAgentTimeBIAS, sniTrapAgentStatus=sniTrapAgentStatus, sniAOLPresencePongCritical=sniAOLPresencePongCritical, sniDesktopMgmt=sniDesktopMgmt, sniVoltageWarning=sniVoltageWarning, sniAOLPOSTCritical=sniAOLPOSTCritical, sniFreeDiskSpaceWarning=sniFreeDiskSpaceWarning, sniCoverSensorincorporated=sniCoverSensorincorporated, sniAOLHardwareMonitorInternalTemperatureCritical=sniAOLHardwareMonitorInternalTemperatureCritical, sniAOLHeartbeatCritical=sniAOLHeartbeatCritical, sniCoverOpened=sniCoverOpened, sniExtensions=sniExtensions, sniTrapAgentEventName=sniTrapAgentEventName, sniAOLNICSMBusSlotCritical=sniAOLNICSMBusSlotCritical, sniLeaseExpirationOK=sniLeaseExpirationOK, sniAOLAmbientTemperatureCritical=sniAOLAmbientTemperatureCritical, sniFreeSystemDiskSpaceError=sniFreeSystemDiskSpaceError, sniWatchdogCritical=sniWatchdogCritical, sniSmartWarning=sniSmartWarning, sniShortCurcuit=sniShortCurcuit, sniMemoryChangesOK=sniMemoryChangesOK, sniAOL3_3VoltageCritical=sniAOL3_3VoltageCritical, sniTrapAgentVersionInformation=sniTrapAgentVersionInformation)
