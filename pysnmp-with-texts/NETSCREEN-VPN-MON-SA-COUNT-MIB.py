#
# PySNMP MIB module NETSCREEN-VPN-MON-SA-COUNT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-MON-SA-COUNT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
netscreenVpn, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn")
netscreenVpnMon, = mibBuilder.importSymbols("NETSCREEN-VPN-MON-MIB", "netscreenVpnMon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, MibIdentifier, IpAddress, Bits, Counter64, iso, Unsigned32, Integer32, TimeTicks, ModuleIdentity, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "MibIdentifier", "IpAddress", "Bits", "Counter64", "iso", "Unsigned32", "Integer32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nsVpnMonSACountTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2), )
if mibBuilder.loadTexts: nsVpnMonSACountTable.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountTable.setDescription('A list of SA count entries. ')
nsVpnMonSACountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1), ).setIndexNames((0, "NETSCREEN-VPN-MON-SA-COUNT-MIB", "nsVpnMonSACountType"))
if mibBuilder.loadTexts: nsVpnMonSACountEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountEntry.setDescription('A SA count entry')
nsVpnMonSACountType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountType.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountType.setDescription('The SA Count type (ipv4(1) or ipv6(2))')
nsVpnMonSACountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountTotal.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountTotal.setDescription('The total count of SA')
nsVpnMonSACountAct = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountAct.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountAct.setDescription('The active SA Count.')
nsVpnMonSACountInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountInTotal.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountInTotal.setDescription('The in total SA count')
nsVpnMonSACountInAct = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountInAct.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountInAct.setDescription('The in active SA Count')
nsVpnMonSACountOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountOutTotal.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountOutTotal.setDescription('The out total SA count')
nsVpnMonSACountOutAct = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSACountOutAct.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnMonSACountOutAct.setDescription('The out active SA Count.')
mibBuilder.exportSymbols("NETSCREEN-VPN-MON-SA-COUNT-MIB", nsVpnMonSACountType=nsVpnMonSACountType, nsVpnMonSACountInAct=nsVpnMonSACountInAct, nsVpnMonSACountInTotal=nsVpnMonSACountInTotal, nsVpnMonSACountTotal=nsVpnMonSACountTotal, nsVpnMonSACountAct=nsVpnMonSACountAct, nsVpnMonSACountOutAct=nsVpnMonSACountOutAct, nsVpnMonSACountEntry=nsVpnMonSACountEntry, nsVpnMonSACountTable=nsVpnMonSACountTable, nsVpnMonSACountOutTotal=nsVpnMonSACountOutTotal)
