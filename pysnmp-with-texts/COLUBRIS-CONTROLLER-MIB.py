#
# PySNMP MIB module COLUBRIS-CONTROLLER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COLUBRIS-CONTROLLER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:25:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ColubrisNotificationEnable, = mibBuilder.importSymbols("COLUBRIS-TC", "ColubrisNotificationEnable")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Unsigned32, Counter32, ObjectIdentity, MibIdentifier, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Bits, Gauge32, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Counter32", "ObjectIdentity", "MibIdentifier", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Bits", "Gauge32", "NotificationType", "Counter64")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
colubrisControllerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 27))
if mibBuilder.loadTexts: colubrisControllerMIB.setLastUpdated('200910190000Z')
if mibBuilder.loadTexts: colubrisControllerMIB.setOrganization('Colubris Networks, Inc.')
if mibBuilder.loadTexts: colubrisControllerMIB.setContactInfo('Colubris Networks Postal: 200 West Street Ste 300 Waltham, Massachusetts 02451-1121 UNITED STATES Phone: +1 781 684 0001 Fax: +1 781 684 0009 E-mail: cn-snmp@colubris.com')
if mibBuilder.loadTexts: colubrisControllerMIB.setDescription('Colubris Controller MIB.')
colubrisControllerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1))
coControllerConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 1))
coControllerDiscoveryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2))
coControllerStateNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 1, 1), ColubrisNotificationEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coControllerStateNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coControllerStateNotificationEnabled.setDescription('Specifies if coControllerStateNotification notification is generated.')
coControllerTeamIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerTeamIpAddress.setStatus('current')
if mibBuilder.loadTexts: coControllerTeamIpAddress.setDescription('The IP address of the controller team.')
coControllerNbDisController = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerNbDisController.setStatus('current')
if mibBuilder.loadTexts: coControllerNbDisController.setDescription('Number of controllers in the controller discovery table.')
coControllerDiscoveryTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2), )
if mibBuilder.loadTexts: coControllerDiscoveryTable.setStatus('current')
if mibBuilder.loadTexts: coControllerDiscoveryTable.setDescription('Controller discovery attributes.')
coControllerDiscoveryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1), ).setIndexNames((0, "COLUBRIS-CONTROLLER-MIB", "coControllerDisIndex"))
if mibBuilder.loadTexts: coControllerDiscoveryEntry.setStatus('current')
if mibBuilder.loadTexts: coControllerDiscoveryEntry.setDescription('An entry in the coControllerDiscoveryTable. coControllerDisIndex - Uniquely identify a Controller in the stack.')
coControllerDisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coControllerDisIndex.setStatus('current')
if mibBuilder.loadTexts: coControllerDisIndex.setDescription('Uniquely identify a controller .')
coControllerDisSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerDisSerialNumber.setStatus('current')
if mibBuilder.loadTexts: coControllerDisSerialNumber.setDescription('The serial number of a controller .')
coControllerDisMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerDisMacAddress.setStatus('current')
if mibBuilder.loadTexts: coControllerDisMacAddress.setDescription('MAC address of a controller .')
coControllerDisIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerDisIpAddress.setStatus('current')
if mibBuilder.loadTexts: coControllerDisIpAddress.setDescription('IP address of a controller .')
coControllerDisState = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 27, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("authorized", 2), ("join", 3), ("firmware", 4), ("security", 5), ("configuration", 6), ("running", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coControllerDisState.setStatus('current')
if mibBuilder.loadTexts: coControllerDisState.setDescription('The state of a controller .')
colubrisControllerMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 2))
colubrisControllerMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 2, 0))
coControllerStateNotification = NotificationType((1, 3, 6, 1, 4, 1, 8744, 5, 27, 2, 0, 1)).setObjects(("COLUBRIS-CONTROLLER-MIB", "coControllerDisSerialNumber"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisMacAddress"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisIpAddress"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisState"))
if mibBuilder.loadTexts: coControllerStateNotification.setStatus('current')
if mibBuilder.loadTexts: coControllerStateNotification.setDescription('Iindicates whether the controller is entering or leaving the running state.')
colubrisControllerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3))
colubrisControllerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3, 1))
colubrisControllerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3, 2))
colubrisControllerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3, 1, 1)).setObjects(("COLUBRIS-CONTROLLER-MIB", "colubrisControllerMIBGroup"), ("COLUBRIS-CONTROLLER-MIB", "colubrisControllerNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisControllerMIBCompliance = colubrisControllerMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: colubrisControllerMIBCompliance.setDescription('The compliance statement for the Controller MIB.')
colubrisControllerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3, 2, 1)).setObjects(("COLUBRIS-CONTROLLER-MIB", "coControllerStateNotificationEnabled"), ("COLUBRIS-CONTROLLER-MIB", "coControllerTeamIpAddress"), ("COLUBRIS-CONTROLLER-MIB", "coControllerNbDisController"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisSerialNumber"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisMacAddress"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisIpAddress"), ("COLUBRIS-CONTROLLER-MIB", "coControllerDisState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisControllerMIBGroup = colubrisControllerMIBGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisControllerMIBGroup.setDescription('A collection of objects for the controller status.')
colubrisControllerNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 8744, 5, 27, 3, 2, 2)).setObjects(("COLUBRIS-CONTROLLER-MIB", "coControllerStateNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisControllerNotificationGroup = colubrisControllerNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisControllerNotificationGroup.setDescription('A collection of supported controller notifications.')
mibBuilder.exportSymbols("COLUBRIS-CONTROLLER-MIB", coControllerStateNotificationEnabled=coControllerStateNotificationEnabled, coControllerTeamIpAddress=coControllerTeamIpAddress, colubrisControllerMIBNotificationPrefix=colubrisControllerMIBNotificationPrefix, coControllerDisIndex=coControllerDisIndex, coControllerNbDisController=coControllerNbDisController, colubrisControllerMIBNotifications=colubrisControllerMIBNotifications, colubrisControllerMIBCompliance=colubrisControllerMIBCompliance, coControllerDiscoveryTable=coControllerDiscoveryTable, colubrisControllerNotificationGroup=colubrisControllerNotificationGroup, coControllerDisState=coControllerDisState, coControllerDiscoveryGroup=coControllerDiscoveryGroup, colubrisControllerMIBCompliances=colubrisControllerMIBCompliances, colubrisControllerMIBGroup=colubrisControllerMIBGroup, coControllerDisSerialNumber=coControllerDisSerialNumber, colubrisControllerMIBObjects=colubrisControllerMIBObjects, colubrisControllerMIBConformance=colubrisControllerMIBConformance, coControllerDisMacAddress=coControllerDisMacAddress, coControllerConfigGroup=coControllerConfigGroup, PYSNMP_MODULE_ID=colubrisControllerMIB, colubrisControllerMIBGroups=colubrisControllerMIBGroups, coControllerDisIpAddress=coControllerDisIpAddress, coControllerStateNotification=coControllerStateNotification, colubrisControllerMIB=colubrisControllerMIB, coControllerDiscoveryEntry=coControllerDiscoveryEntry)
