#
# PySNMP MIB module HPNSATRAPCFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSATRAPCFG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:42:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, NotificationType, ModuleIdentity, Integer32, Counter64, ObjectIdentity, Gauge32, Counter32, TimeTicks, IpAddress, MibIdentifier, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "ModuleIdentity", "Integer32", "Counter64", "ObjectIdentity", "Gauge32", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaTrapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 13))
hpnsaTrapCfgMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 1))
hpnsaTrapCfgAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2))
hpnsaTrapTargetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 3))
hpnsaTrapCfgMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgMibRevMajor.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgMibRevMajor.setDescription('The major revision level of the MIB.')
hpnsaTrapCfgMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgMibRevMinor.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgMibRevMinor.setDescription('The minor revision level of the MIB.')
hpnsaTrapCfgAgentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1), )
if mibBuilder.loadTexts: hpnsaTrapCfgAgentTable.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentTable.setDescription('A table of SNMP agents that satisfy requests for this MIB.')
hpnsaTrapCfgAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1, 1), ).setIndexNames((0, "HPNSATRAPCFG-MIB", "hpnsaTrapCfgAgentIndex"))
if mibBuilder.loadTexts: hpnsaTrapCfgAgentEntry.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentEntry.setDescription('A description of the agent/agents that access Trap Config. information.')
hpnsaTrapCfgAgentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgAgentIndex.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentIndex.setDescription('A unique index for this agent.')
hpnsaTrapCfgAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgAgentName.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentName.setDescription('Name of the agent/agents satisfying SNMP requests for this MIB.')
hpnsaTrapCfgAgentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgAgentVersion.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentVersion.setDescription('Version number of the agent/agents satisfying SNMP requests for this MIB.')
hpnsaTrapCfgAgentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTrapCfgAgentDate.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaTrapCfgAgentDate.setDescription('The date on which this agent was created. field octets contents range _________________________________________________ 1 1 years since 1900 0..255 2 2 month 1..12 3 3 day 1..31 4 4 hour 0..23 5 5 minute 0..59 6 6 second 0..59')
hpnsaRemoveTrapTarget = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRemoveTrapTarget.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRemoveTrapTarget.setDescription("An SNMP Set request on this object will cause the agent to remove the specified network address from server's SNMP trap destinations list")
hpnsaAddTrapTarget = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaAddTrapTarget.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaAddTrapTarget.setDescription("An SNMP Set request on this object will cause the agent to add the specified network address to server's SNMP trap destination list")
hpnsaRestartSNMP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 13, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noActionNeeded", 1), ("restartSNMP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRestartSNMP.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRestartSNMP.setDescription('Returns whether or not the SNMP service needs to be restarted in order for changes to SNMP trap destination list to take effect')
mibBuilder.exportSymbols("HPNSATRAPCFG-MIB", hpnsaTrapCfg=hpnsaTrapCfg, hpnsaTrapCfgAgentVersion=hpnsaTrapCfgAgentVersion, hpnsaRestartSNMP=hpnsaRestartSNMP, hpnsaTrapCfgAgentDate=hpnsaTrapCfgAgentDate, hpnsaTrapCfgAgent=hpnsaTrapCfgAgent, hpnsaTrapTargetCfg=hpnsaTrapTargetCfg, hpnsaTrapCfgMibRevMajor=hpnsaTrapCfgMibRevMajor, hp=hp, hpnsaTrapCfgAgentIndex=hpnsaTrapCfgAgentIndex, hpnsaTrapCfgAgentEntry=hpnsaTrapCfgAgentEntry, hpnsaTrapCfgMibRev=hpnsaTrapCfgMibRev, hpnsaTrapCfgMibRevMinor=hpnsaTrapCfgMibRevMinor, hpnsaTrapCfgAgentName=hpnsaTrapCfgAgentName, hpnsaRemoveTrapTarget=hpnsaRemoveTrapTarget, hpnsaAddTrapTarget=hpnsaAddTrapTarget, hpnsa=hpnsa, nm=nm, hpnsaTrapCfgAgentTable=hpnsaTrapCfgAgentTable)
