#
# PySNMP MIB module EdgeSwitch-DHCPCLIENT-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EdgeSwitch-DHCPCLIENT-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:10:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
fastPath, = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "fastPath")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, NotificationType, Counter64, iso, ObjectIdentity, Counter32, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "NotificationType", "Counter64", "iso", "ObjectIdentity", "Counter32", "IpAddress", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
fastPathDHCPClientPrivate = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100))
fastPathDHCPClientPrivate.setRevisions(('2011-01-26 00:00', '2007-05-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathDHCPClientPrivate.setRevisionsDescriptions(('Postal address updated.', 'Ubiquiti branding related changes.',))
if mibBuilder.loadTexts: fastPathDHCPClientPrivate.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathDHCPClientPrivate.setOrganization('Broadcom Inc')
if mibBuilder.loadTexts: fastPathDHCPClientPrivate.setContactInfo('')
if mibBuilder.loadTexts: fastPathDHCPClientPrivate.setDescription('The Ubiquiti Private MIB for EdgeSwitch DHCP Client')
agentdhcp4ClientLeaseParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1))
agentdhcp4ClientLeaseParametersTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1), )
if mibBuilder.loadTexts: agentdhcp4ClientLeaseParametersTable.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientLeaseParametersTable.setDescription('Displays DHCP Client Lease Information.')
agentdhcp4ClientLeaseParametersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1), ).setIndexNames((0, "EdgeSwitch-DHCPCLIENT-PRIVATE-MIB", "agentdhcp4ClientInterfaceIndex"))
if mibBuilder.loadTexts: agentdhcp4ClientLeaseParametersEntry.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientLeaseParametersEntry.setDescription('Information about a table entry.')
agentdhcp4ClientInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: agentdhcp4ClientInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientInterfaceIndex.setDescription('The Interface index on which the IP address was leased by the DHCP Server.')
agentdhcp4ClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientIpAddress.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientIpAddress.setDescription('The IP Address leased by the DHCP Server .')
agentdhcp4ClientSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientSubnetMask.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientSubnetMask.setDescription('The Subnet mask of the IP Address leased by the DHCP Server .')
agentdhcp4ClientDhcpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientDhcpServerAddress.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientDhcpServerAddress.setDescription('The IP Address of the DHCP Server that leased the IP Address .')
agentdhcp4ClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 1), ("selecting", 2), ("requesting", 3), ("request-recv", 4), ("bound", 5), ("renewing", 6), ("renew-recv", 7), ("rebinding", 8), ("rebind-recv", 9), ("bootp-fallback", 10), ("not-bound", 11), ("failed", 12), ("do-release", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientState.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientState.setDescription('The State of the DHCP Client on this interface .')
agentdhcp4ClientTransactionID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientTransactionID.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientTransactionID.setDescription('The transaction ID of the DHCP Client .')
agentdhcp4ClientLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientLeaseTime.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientLeaseTime.setDescription('The time remaining since the IP address is leased by the DHCP Server.It is displayed in days, hours, minutes and seconds.')
agentdhcp4ClientRenewTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientRenewTime.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientRenewTime.setDescription('The time remaining to send the next DHCP Renew Request by DHCP Client to renew the leased IP address. It is displayed in days, hours, minutes and seconds.')
agentdhcp4ClientRebindTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientRebindTime.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientRebindTime.setDescription('The time remaining to start the DHCP Rebind process. It is displayed in days, hours, minutes and seconds.')
agentdhcp4ClientRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 100, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentdhcp4ClientRetryCount.setStatus('current')
if mibBuilder.loadTexts: agentdhcp4ClientRetryCount.setDescription('The number of times the DHCP Client sends a DHCP REQUEST message before the server responds .')
mibBuilder.exportSymbols("EdgeSwitch-DHCPCLIENT-PRIVATE-MIB", agentdhcp4ClientLeaseParametersEntry=agentdhcp4ClientLeaseParametersEntry, agentdhcp4ClientRebindTime=agentdhcp4ClientRebindTime, agentdhcp4ClientDhcpServerAddress=agentdhcp4ClientDhcpServerAddress, PYSNMP_MODULE_ID=fastPathDHCPClientPrivate, agentdhcp4ClientRetryCount=agentdhcp4ClientRetryCount, fastPathDHCPClientPrivate=fastPathDHCPClientPrivate, agentdhcp4ClientState=agentdhcp4ClientState, agentdhcp4ClientRenewTime=agentdhcp4ClientRenewTime, agentdhcp4ClientTransactionID=agentdhcp4ClientTransactionID, agentdhcp4ClientLeaseParametersTable=agentdhcp4ClientLeaseParametersTable, agentdhcp4ClientSubnetMask=agentdhcp4ClientSubnetMask, agentdhcp4ClientLeaseTime=agentdhcp4ClientLeaseTime, agentdhcp4ClientInterfaceIndex=agentdhcp4ClientInterfaceIndex, agentdhcp4ClientIpAddress=agentdhcp4ClientIpAddress, agentdhcp4ClientLeaseParameters=agentdhcp4ClientLeaseParameters)
