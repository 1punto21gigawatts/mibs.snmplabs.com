#
# PySNMP MIB module HH3C-FR-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-FR-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:27:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hh3cQoS, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cQoS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, Integer32, iso, Bits, Unsigned32, TimeTicks, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, NotificationType, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "iso", "Bits", "Unsigned32", "TimeTicks", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "NotificationType", "ModuleIdentity", "Gauge32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hh3cFrQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3))
if mibBuilder.loadTexts: hh3cFrQoSMib.setLastUpdated('200407120000Z')
if mibBuilder.loadTexts: hh3cFrQoSMib.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cFrQoSMib.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cFrQoSMib.setDescription('This MIB contains objects to Manage configuration and Monitor running state for Class Based FR QoS feature. ********************************* MIB Tables ********************************** This MIB consists of the following tables: 1 : hh3cFrClassCfgInfoTable 2 : hh3cCirCfgInfoTable 3 : hh3cIfApplyFrClassTable 4 : hh3cPvcApplyFrClassTable 5 : hh3cFrPvcBandwidthTable 5 : hh3cRTPFrClassApplyTable 6 : hh3cRTPFrPvcQueueRunInfoTable ')
class Hh3cCirAllowDirection(TextualConvention, Integer32):
    description = 'The Packet Direction apply on.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2), ("inboundAndOutbound", 3))

hh3cFrQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1))
hh3cFrClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1))
hh3cFrClassIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFrClassIndexNext.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassIndexNext.setDescription('This object contains an appropriate value to be used for hh3cFrClassIndex when creating rows in the hh3cFrClassCfgInfoTable. Begin with 0. ')
hh3cFrClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 2), )
if mibBuilder.loadTexts: hh3cFrClassCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassCfgInfoTable.setDescription('A table of Fr Class configuration information.')
hh3cFrClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 2, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cFrClassIndex"))
if mibBuilder.loadTexts: hh3cFrClassCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassCfgInfoEntry.setDescription('Fr Class Configuration Information Entry.')
hh3cFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassIndex.setDescription('Index of Fr Class. Begin with 0.')
hh3cFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFrClassName.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassName.setDescription('Name of Fr Class.')
hh3cFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hh3cCirAllowCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3), )
if mibBuilder.loadTexts: hh3cCirAllowCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowCfgInfoTable.setDescription('A table of DCE allowed rate Configuration information.')
hh3cCirAllowCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cCirAllowFrClassIndex"), (0, "HH3C-FR-QOS-MIB", "hh3cCirAllowDirection"))
if mibBuilder.loadTexts: hh3cCirAllowCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowCfgInfoEntry.setDescription('DCE allowed ratee Configuration Information Entry.')
hh3cCirAllowFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCirAllowFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hh3cFrClassIndex')
hh3cCirAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3, 1, 2), Hh3cCirAllowDirection())
if mibBuilder.loadTexts: hh3cCirAllowDirection.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowDirection.setDescription('Packet Direction. inbound (1) outbound (2) inbound and outbound (3) ')
hh3cCirAllowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCirAllowValue.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowValue.setDescription('DCE allowed rate (value greater than CIR) Unit : Bits per second. Value : <1-45000000> .')
hh3cCirAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCirAllowRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cCirAllowRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hh3cCirCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hh3cCirCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hh3cCirCfgInfoTable.setDescription('A table of Committed Information Rate Configuration information.')
hh3cCirCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 4, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cCirFrClassIndex"))
if mibBuilder.loadTexts: hh3cCirCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cCirCfgInfoEntry.setDescription('Committed Information Rate Configuration Information Entry.')
hh3cCirFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCirFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cCirFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hh3cFrClassIndex')
hh3cCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCirValue.setStatus('current')
if mibBuilder.loadTexts: hh3cCirValue.setDescription(' CIR in packet output direction ,bps. Value : <1000-45000000>.')
hh3cCirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCirRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cCirRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hh3cIfApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hh3cIfApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hh3cIfApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hh3cIfApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 5, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cIfApplyFrClassIfIndex"))
if mibBuilder.loadTexts: hh3cIfApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cIfApplyFrClassEntry.setDescription('FrClass applied on interface Configuration Information Entry.')
hh3cIfApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cIfApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cIfApplyFrClassIfIndex.setDescription('Interface Index, equal to ifIndex.')
hh3cIfApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIfApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cIfApplyFrClassIndex.setDescription('Index of Fr Class, equal to hh3cFrClassIndex')
hh3cIfApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIfApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cIfApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hh3cPvcApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hh3cPvcApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hh3cPvcApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassIfIndex"), (0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hh3cPvcApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassEntry.setDescription('Fr Class applied on FR Pvc Configuration Information Entry.')
hh3cPvcApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cPvcApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassIfIndex.setDescription('Fr Interface Index, equal to ifIndex.')
hh3cPvcApplyFrClassDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: hh3cPvcApplyFrClassDlciNum.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassDlciNum.setDescription('Fr DLCI number.')
hh3cPvcApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cPvcApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassIndex.setDescription('Index of Fr Class, equal to hh3cFrClassIndex')
hh3cPvcApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cPvcApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cPvcApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hh3cFrPvcBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 7), )
if mibBuilder.loadTexts: hh3cFrPvcBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hh3cFrPvcBandwidthTable.setDescription('A table of Running statistics for bandwidth. ')
hh3cFrPvcBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 7, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassIfIndex"), (0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hh3cFrPvcBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cFrPvcBandwidthEntry.setDescription('Bandwidth Running statistics')
hh3cFrPvcBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFrPvcBandwidthMaxReservedBW.setStatus('current')
if mibBuilder.loadTexts: hh3cFrPvcBandwidthMaxReservedBW.setDescription('Max reserved bandWidth. Unit : Kbps')
hh3cFrPvcBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFrPvcBandwidthAvailable.setStatus('current')
if mibBuilder.loadTexts: hh3cFrPvcBandwidthAvailable.setDescription('Available bandWidth. Unit : Kbps')
hh3cRTPQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2))
hh3cRTPFrClassApplyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cRTPFrClassApplyTable.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyTable.setDescription('A table of RTP(Realtime Transport Protocol) Queue instance.')
hh3cRTPFrClassApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cRTPFrClassApplyFrClassIndex"))
if mibBuilder.loadTexts: hh3cRTPFrClassApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyEntry.setDescription('RTP(Realtime Transport Protocol) Queue Configuration Information Entry.')
hh3cRTPFrClassApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cRTPFrClassApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyFrClassIndex.setDescription('Fr Class Index, equal to Hh3cFrClassIndex.')
hh3cRTPFrClassApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTPFrClassApplyStartPort.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyStartPort.setDescription(' RTP-PORT(3): start-port: 2000~65535 ')
hh3cRTPFrClassApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTPFrClassApplyEndPort.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyEndPort.setDescription(' RTP-PORT(3): end-port: 2000~65535 ')
hh3cRTPFrClassApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTPFrClassApplyBandWidth.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyBandWidth.setDescription('Max bandWidth Value: Absolute value: 8~1000000. Unit: Kbps ')
hh3cRTPFrClassApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTPFrClassApplyCbs.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyCbs.setDescription(' Committed Burst Size: 1500~2000000. Unit: byte ')
hh3cRTPFrClassApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTPFrClassApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrClassApplyRowStatus.setDescription('RowStatus for RTPFrClassApply Table. Three actions are used: active, createAndGo, destroy')
hh3cRTPFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueRunInfoTable.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueRunInfoTable.setDescription('A table of Running statistics for RTP(Realtime Transport Protocol) Queue applied on the FR PVC')
hh3cRTPFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassIfIndex"), (0, "HH3C-FR-QOS-MIB", "hh3cPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueRunInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueRunInfoEntry.setDescription('RTP(Realtime Transport Protocol) Queue statistics entry.')
hh3cRTPFrPvcQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueSize.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueSize.setDescription('the packet number of RTP(Realtime Transport Protocol) Queue now.')
hh3cRTPFrPvcQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueMaxSize.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueMaxSize.setDescription('the Max packet number of RTP(Realtime Transport Protocol) Queue.')
hh3cRTPFrPvcQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueOutputs.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueOutputs.setDescription('the Output packet number of RTP(Realtime Transport Protocol) Queue.')
hh3cRTPFrPvcQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 32, 3, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueDiscards.setStatus('current')
if mibBuilder.loadTexts: hh3cRTPFrPvcQueueDiscards.setDescription('the Discarded packet number of RTP(Realtime Transport Protocol) Queue.')
mibBuilder.exportSymbols("HH3C-FR-QOS-MIB", hh3cPvcApplyFrClassTable=hh3cPvcApplyFrClassTable, hh3cCirAllowValue=hh3cCirAllowValue, PYSNMP_MODULE_ID=hh3cFrQoSMib, hh3cCirRowStatus=hh3cCirRowStatus, hh3cCirAllowCfgInfoEntry=hh3cCirAllowCfgInfoEntry, hh3cPvcApplyFrClassDlciNum=hh3cPvcApplyFrClassDlciNum, hh3cCirFrClassIndex=hh3cCirFrClassIndex, hh3cFrPvcBandwidthAvailable=hh3cFrPvcBandwidthAvailable, hh3cPvcApplyFrClassIndex=hh3cPvcApplyFrClassIndex, hh3cRTPFrPvcQueueRunInfoTable=hh3cRTPFrPvcQueueRunInfoTable, hh3cRTPFrPvcQueueMaxSize=hh3cRTPFrPvcQueueMaxSize, hh3cIfApplyFrClassRowStatus=hh3cIfApplyFrClassRowStatus, hh3cRTPFrPvcQueueOutputs=hh3cRTPFrPvcQueueOutputs, hh3cFrClassIndexNext=hh3cFrClassIndexNext, hh3cRTPFrClassApplyRowStatus=hh3cRTPFrClassApplyRowStatus, hh3cCirValue=hh3cCirValue, hh3cFrClassCfgInfoTable=hh3cFrClassCfgInfoTable, hh3cFrQoSObjects=hh3cFrQoSObjects, hh3cFrClassIndex=hh3cFrClassIndex, hh3cFrClassRowStatus=hh3cFrClassRowStatus, hh3cFrPvcBandwidthMaxReservedBW=hh3cFrPvcBandwidthMaxReservedBW, hh3cCirCfgInfoTable=hh3cCirCfgInfoTable, hh3cRTPFrClassApplyFrClassIndex=hh3cRTPFrClassApplyFrClassIndex, hh3cIfApplyFrClassTable=hh3cIfApplyFrClassTable, hh3cRTPFrClassApplyCbs=hh3cRTPFrClassApplyCbs, hh3cIfApplyFrClassEntry=hh3cIfApplyFrClassEntry, hh3cCirAllowFrClassIndex=hh3cCirAllowFrClassIndex, hh3cRTPFrPvcQueueRunInfoEntry=hh3cRTPFrPvcQueueRunInfoEntry, hh3cCirAllowCfgInfoTable=hh3cCirAllowCfgInfoTable, hh3cCirCfgInfoEntry=hh3cCirCfgInfoEntry, hh3cCirAllowRowStatus=hh3cCirAllowRowStatus, hh3cRTPFrClassApplyBandWidth=hh3cRTPFrClassApplyBandWidth, hh3cCirAllowDirection=hh3cCirAllowDirection, hh3cFrClassCfgInfoEntry=hh3cFrClassCfgInfoEntry, hh3cIfApplyFrClassIndex=hh3cIfApplyFrClassIndex, hh3cRTPQoSObjects=hh3cRTPQoSObjects, hh3cFrClassObjects=hh3cFrClassObjects, hh3cPvcApplyFrClassRowStatus=hh3cPvcApplyFrClassRowStatus, Hh3cCirAllowDirection=Hh3cCirAllowDirection, hh3cPvcApplyFrClassIfIndex=hh3cPvcApplyFrClassIfIndex, hh3cFrClassName=hh3cFrClassName, hh3cRTPFrClassApplyEndPort=hh3cRTPFrClassApplyEndPort, hh3cPvcApplyFrClassEntry=hh3cPvcApplyFrClassEntry, hh3cRTPFrClassApplyTable=hh3cRTPFrClassApplyTable, hh3cRTPFrClassApplyEntry=hh3cRTPFrClassApplyEntry, hh3cFrQoSMib=hh3cFrQoSMib, hh3cFrPvcBandwidthTable=hh3cFrPvcBandwidthTable, hh3cRTPFrPvcQueueSize=hh3cRTPFrPvcQueueSize, hh3cFrPvcBandwidthEntry=hh3cFrPvcBandwidthEntry, hh3cIfApplyFrClassIfIndex=hh3cIfApplyFrClassIfIndex, hh3cRTPFrPvcQueueDiscards=hh3cRTPFrPvcQueueDiscards, hh3cRTPFrClassApplyStartPort=hh3cRTPFrClassApplyStartPort)
