#
# PySNMP MIB module ChrComIfOpticsOTS-SRC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComIfOpticsOTS-SRC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
chrComIfOptics, = mibBuilder.importSymbols("Chromatis-MIB", "chrComIfOptics")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, TimeTicks, ModuleIdentity, ObjectIdentity, Gauge32, iso, MibIdentifier, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Gauge32", "iso", "MibIdentifier", "IpAddress", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
chrComIfOpticsOTS_SRCTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2), ).setLabel("chrComIfOpticsOTS-SRCTable")
if mibBuilder.loadTexts: chrComIfOpticsOTS_SRCTable.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsOTS_SRCTable.setDescription('1. The OTS-SRC is managed only for the Ring side of the Metropolis Network (not for the Trib side). 2. When post-OPA exists, the preceding ADOM/OMDM does NOT have an OTS-SRC layer \x13 This layer should be grayed and not accessible to the user ')
chrComIfOpticsOTS_SRCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1), ).setLabel("chrComIfOpticsOTS-SRCEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"))
if mibBuilder.loadTexts: chrComIfOpticsOTS_SRCEntry.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsOTS_SRCEntry.setDescription('')
chrComIfOpticsOtsSrcOutPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-501, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcOutPower.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcOutPower.setDescription('Total Optical Power Monitored at the output of the ADOM/OMDM/post-OPA/in-line-OPA. ')
chrComIfOpticsOtsSrcLOOPThr = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-501, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcLOOPThr.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcLOOPThr.setDescription('This is a threshold on OTS-SRC total output Power indicating the existence of light energy emitted into the Ring.')
chrComIfOpticsOtsSrcSafetyThr = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-501, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcSafetyThr.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsOtsSrcSafetyThr.setDescription('This is a threshold on OTS-SRC total output Power indicating that the light energy emitted into the Ring exceeds the safety threshold')
chrComIfOpticsAlarmVector = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfOpticsAlarmVector.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsAlarmVector.setDescription('16 bit field. The following are bits relative positions (0=LSB), and the trap ID associated to each alarm state. 8. Ring-out loss of Optical power metropolisOTS-SRCLoop 9. Ring-out Optical Power output Safety Limit Crossing metropolisOTS-SRCSafety ')
chrComIfOpticsAlarmSeverityProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComIfOpticsAlarmSeverityProfileIndex.setStatus('current')
if mibBuilder.loadTexts: chrComIfOpticsAlarmSeverityProfileIndex.setDescription('')
mibBuilder.exportSymbols("ChrComIfOpticsOTS-SRC-MIB", chrComIfOpticsAlarmVector=chrComIfOpticsAlarmVector, chrComIfOpticsOtsSrcOutPower=chrComIfOpticsOtsSrcOutPower, chrComIfOpticsOTS_SRCEntry=chrComIfOpticsOTS_SRCEntry, chrComIfOpticsOTS_SRCTable=chrComIfOpticsOTS_SRCTable, chrComIfOpticsOtsSrcLOOPThr=chrComIfOpticsOtsSrcLOOPThr, chrComIfOpticsAlarmSeverityProfileIndex=chrComIfOpticsAlarmSeverityProfileIndex, chrComIfOpticsOtsSrcSafetyThr=chrComIfOpticsOtsSrcSafetyThr)
