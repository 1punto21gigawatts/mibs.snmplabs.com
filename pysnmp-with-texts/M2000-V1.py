#
# PySNMP MIB module M2000-V1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/M2000-V1
# Produced by pysmi-0.3.4 at Wed May  1 14:09:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, NotificationType, Bits, Integer32, Unsigned32, IpAddress, iso, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, ObjectIdentity, MibIdentifier, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "NotificationType", "Bits", "Integer32", "Unsigned32", "IpAddress", "iso", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
iMAP = MibIdentifier((1, 3, 6, 1, 4, 1, 2011))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2))
iMAPNetManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15))
iMAPNorthbound = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2))
iMAPNorthboundCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1))
iMAPNorthboundEventMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2))
iMAPNorthboundNotificationReport = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1))
iMAPNorthboundNotificationCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1))
iMAPNorthboundHeartbeatNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1))
iMAPNorthboundHeartbeatNotificationV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 0))
iMAPNorthboundHeartbeatSystemLabel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSystemLabel.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSystemLabel.setDescription('Managed system ID: indicates the managed system from which the heartbeat notification is reported. It uniquely identifies one EMS.')
iMAPNorthboundHeartbeatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatPeriod.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatPeriod.setDescription('Heartbeat period (must be greater than 0), in seconds')
iMAPNorthboundHeartbeatTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatTimeStamp.setDescription('Time stamp: the time when the notification is generated')
iMAPNorthboundCommuLinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3))
iMAPNorthboundHeartbeatSvc = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3, 1))
iMAPNorthboundHeartbeatSvcReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSvcReportInterval.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSvcReportInterval.setDescription('Accepts integral values in the range 3-300 (both end inclusive) Sets heartbeat interval to the value supplied. A heart beat is sent immediately consisting of changed interval. Attempt to set with invalid value results in error.')
iMAPNorthboundFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4))
iMAPNorthboundFaultQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 1))
iMAPNorthboundAlarmQuery = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmQuery.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmQuery.setDescription('Accepts only values 0 and 1 (single character) Attempt to set any other value returns error 1-> starts query active alarm process (if previous query alarm process is in progress then error is returned) 0-> stops the previous query active alarm process in progress (if any) ')
iMAPNorthboundFaultNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3))
iMAPNorthboundFaultAlarmNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3))
iMAPNorthboundFaultAlarmNotificationV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 0))
iMAPNorthboundAlarmCSN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmCSN.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmCSN.setDescription('Alarm network number > 0')
iMAPNorthboundAlarmCategory = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmCategory.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmCategory.setDescription('Category can be one of the following: 1. Fault 2. Clear 3. Event 4. Acknowledge 5. Unacknowledge 9. Change ')
iMAPNorthboundAlarmOccurTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmOccurTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmOccurTime.setDescription('Occurrence time')
iMAPNorthboundAlarmMOName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmMOName.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmMOName.setDescription('Managed object name')
iMAPNorthboundAlarmProductID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("transmission", 1), ("mobile", 2), ("fixedNetworkNarrow", 3), ("bandFixedBand", 4), ("intelligence", 5), ("omc", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProductID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProductID.setDescription('Product type ID: 1:transmission 2:mobile 3:fixed network narrowband 4:fixed network broadband 5:intelligent network 6:omc')
iMAPNorthboundAlarmNEType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEType.setDescription('NE type > 0')
iMAPNorthboundAlarmNEDevID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEDevID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEDevID.setDescription('NE ID')
iMAPNorthboundAlarmDevCsn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmDevCsn.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmDevCsn.setDescription('Device serial number')
iMAPNorthboundAlarmID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmID.setDescription('Alarm ID')
iMAPNorthboundAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmType.setDescription('Alarm type.')
iMAPNorthboundAlarmLevel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmLevel.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmLevel.setDescription('Level is the alarm severity. It can be one of the following: 1. Critical 2. Major 3. Minor 4. Warning 6. Cleared ')
iMAPNorthboundAlarmRestore = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("uncleared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestore.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestore.setDescription('Alarm clear status 1:Cleared 2:Uncleared')
iMAPNorthboundAlarmConfirm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acknowledged", 1), ("unacknowledged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmConfirm.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmConfirm.setDescription('Alarm acknowledgement status 1:Acknowledged 2:Unacknowledged ')
iMAPNorthboundAlarmAckTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAckTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAckTime.setDescription('Acknowledged time')
iMAPNorthboundAlarmRestoreTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestoreTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestoreTime.setDescription('Cleared time')
iMAPNorthboundAlarmOperator = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmOperator.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmOperator.setDescription('It identifies the last user who has changed the Acknowledged State.')
iMAPNorthboundAlarmParas1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas1.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas1.setDescription('Reserved field 1')
iMAPNorthboundAlarmParas2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas2.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas2.setDescription('Reserved field 2')
iMAPNorthboundAlarmParas3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas3.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas3.setDescription('Reserved field 3')
iMAPNorthboundAlarmParas4 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas4.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas4.setDescription('Reserved field 4')
iMAPNorthboundAlarmParas5 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas5.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas5.setDescription('Reserved field 5')
iMAPNorthboundAlarmParas6 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas6.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas6.setDescription('Reserved field 6')
iMAPNorthboundAlarmParas7 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas7.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas7.setDescription('Reserved field 7')
iMAPNorthboundAlarmParas8 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas8.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas8.setDescription('Reserved field 8')
iMAPNorthboundAlarmParas9 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas9.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas9.setDescription('Reserved field 9')
iMAPNorthboundAlarmParas10 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas10.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas10.setDescription('Reserved field 10')
iMAPNorthboundAlarmExtendInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendInfo.setDescription('Extended information (max: 250 characters)')
iMAPNorthboundAlarmProbablecause = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 28), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProbablecause.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProbablecause.setDescription('Alarm Probablecause (max: 250 characters)')
iMAPNorthboundAlarmProposedrepairactions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProposedrepairactions.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProposedrepairactions.setDescription('Alarm Proposed Repairactions (max: 250 characters)')
iMAPNorthboundAlarmSpecificproblems = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmSpecificproblems.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmSpecificproblems.setDescription('Alarm Specific Problems (max: 250 characters)')
iMAPNorthboundAlarmClearOperator = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 46), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearOperator.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearOperator.setDescription('The operator who cleared this alarm.')
iMAPNorthboundAlarmObjectInstanceType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 47), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmObjectInstanceType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmObjectInstanceType.setDescription('Object instance type')
iMAPNorthboundAlarmClearCategory = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 48), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearCategory.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearCategory.setDescription('Clear Category of Alarms')
iMAPNorthboundAlarmClearType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 49), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearType.setDescription('Clear type of alarms')
iMAPNorthboundAlarmServiceAffectFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 50), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmServiceAffectFlag.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmServiceAffectFlag.setDescription('Affecting service flag for the alarm ')
iMAPNorthboundAlarmAdditionalInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 51), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAdditionalInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAdditionalInfo.setDescription('Additional Information regarding the alarm')
iMAPNorthboundFaultAcknowledge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 4))
iMAPNorthboundAlarmAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 4, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAcknowledge.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAcknowledge.setDescription(' Give serial number(s) of alarms to be acknowledged. Multiple serial numbers are separated by comma(,). Alarms serial number(s) are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be acknowledged. This also contains invalid Alarm serial number(s). If all alarms are successfully acknowledged then output is blank.')
iMAPNorthboundFaultUnAcknowledge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 5))
iMAPNorthboundAlarmUnAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 5, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmUnAcknowledge.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmUnAcknowledge.setDescription(' Give serial number(s) of alarms to be unacknowledged. Multiple serial numbers are separated by comma(,). Alarms serial number(s) are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be unacknowledged. This also contains invalid Alarm serial number(s). If all alarms are successfully unacknowledged then output is blank.')
iMAPNorthboundFaultClear = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 6))
iMAPNorthboundAlarmClear = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 6, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClear.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClear.setDescription(' Give serial number(s) of alarms to be cleared. Multiple serial numbers are separated by comma(,). Alarms serial number(s)are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be cleared. This also contains invalid Alarm serial number(s). If all alarms are successfully cleared then output is blank.')
iMAPConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3))
iMAPGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1))
currentObjectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1, 1))
currentNotificationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1, 2))
iMAPCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 2))
basicCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 2, 1))
iMAPNorthboundFaultAlarmReportNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,1)).setObjects(("M2000-V1", "iMAPNorthboundAlarmCSN"), ("M2000-V1", "iMAPNorthboundAlarmCategory"), ("M2000-V1", "iMAPNorthboundAlarmOccurTime"), ("M2000-V1", "iMAPNorthboundAlarmMOName"), ("M2000-V1", "iMAPNorthboundAlarmProductID"), ("M2000-V1", "iMAPNorthboundAlarmNEType"), ("M2000-V1", "iMAPNorthboundAlarmNEDevID"), ("M2000-V1", "iMAPNorthboundAlarmDevCsn"), ("M2000-V1", "iMAPNorthboundAlarmID"), ("M2000-V1", "iMAPNorthboundAlarmType"), ("M2000-V1", "iMAPNorthboundAlarmLevel"), ("M2000-V1", "iMAPNorthboundAlarmRestore"), ("M2000-V1", "iMAPNorthboundAlarmConfirm"), ("M2000-V1", "iMAPNorthboundAlarmAckTime"), ("M2000-V1", "iMAPNorthboundAlarmRestoreTime"), ("M2000-V1", "iMAPNorthboundAlarmOperator"), ("M2000-V1", "iMAPNorthboundAlarmParas1"), ("M2000-V1", "iMAPNorthboundAlarmParas2"), ("M2000-V1", "iMAPNorthboundAlarmParas3"), ("M2000-V1", "iMAPNorthboundAlarmParas4"), ("M2000-V1", "iMAPNorthboundAlarmParas5"), ("M2000-V1", "iMAPNorthboundAlarmParas6"), ("M2000-V1", "iMAPNorthboundAlarmParas7"), ("M2000-V1", "iMAPNorthboundAlarmParas8"), ("M2000-V1", "iMAPNorthboundAlarmParas9"), ("M2000-V1", "iMAPNorthboundAlarmParas10"), ("M2000-V1", "iMAPNorthboundAlarmExtendInfo"), ("M2000-V1", "iMAPNorthboundAlarmProbablecause"), ("M2000-V1", "iMAPNorthboundAlarmProposedrepairactions"), ("M2000-V1", "iMAPNorthboundAlarmSpecificproblems"), ("M2000-V1", "iMAPNorthboundAlarmClearOperator"), ("M2000-V1", "iMAPNorthboundAlarmAdditionalInfo"), ("M2000-V1", "iMAPNorthboundAlarmClearType"), ("M2000-V1", "iMAPNorthboundAlarmClearCategory"), ("M2000-V1", "iMAPNorthboundAlarmServiceAffectFlag"), ("M2000-V1", "iMAPNorthboundAlarmObjectInstanceType"))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmReportNotificationType.setDescription('The M2000 system sends real-time alarms to the NMS using this trap. If an alarm occurs to an NE or the M2000, the M2000 sends the alarm trap to the NMS.')
iMAPNorthboundFaultAlarmQueryBeginNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,2))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryBeginNotificationType.setDescription('The M2000 notifies the NMS of the start of the query. After the NMS receives the active alarm query start trap, the query starts. The trap is triggered by NMS for alarm query.')
iMAPNorthboundFaultAlarmQueryNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,3)).setObjects(("M2000-V1", "iMAPNorthboundAlarmCSN"), ("M2000-V1", "iMAPNorthboundAlarmCategory"), ("M2000-V1", "iMAPNorthboundAlarmOccurTime"), ("M2000-V1", "iMAPNorthboundAlarmMOName"), ("M2000-V1", "iMAPNorthboundAlarmProductID"), ("M2000-V1", "iMAPNorthboundAlarmNEType"), ("M2000-V1", "iMAPNorthboundAlarmNEDevID"), ("M2000-V1", "iMAPNorthboundAlarmDevCsn"), ("M2000-V1", "iMAPNorthboundAlarmID"), ("M2000-V1", "iMAPNorthboundAlarmType"), ("M2000-V1", "iMAPNorthboundAlarmLevel"), ("M2000-V1", "iMAPNorthboundAlarmRestore"), ("M2000-V1", "iMAPNorthboundAlarmConfirm"), ("M2000-V1", "iMAPNorthboundAlarmAckTime"), ("M2000-V1", "iMAPNorthboundAlarmRestoreTime"), ("M2000-V1", "iMAPNorthboundAlarmOperator"), ("M2000-V1", "iMAPNorthboundAlarmParas1"), ("M2000-V1", "iMAPNorthboundAlarmParas2"), ("M2000-V1", "iMAPNorthboundAlarmParas3"), ("M2000-V1", "iMAPNorthboundAlarmParas4"), ("M2000-V1", "iMAPNorthboundAlarmParas5"), ("M2000-V1", "iMAPNorthboundAlarmParas6"), ("M2000-V1", "iMAPNorthboundAlarmParas7"), ("M2000-V1", "iMAPNorthboundAlarmParas8"), ("M2000-V1", "iMAPNorthboundAlarmParas9"), ("M2000-V1", "iMAPNorthboundAlarmParas10"), ("M2000-V1", "iMAPNorthboundAlarmExtendInfo"), ("M2000-V1", "iMAPNorthboundAlarmProbablecause"), ("M2000-V1", "iMAPNorthboundAlarmProposedrepairactions"), ("M2000-V1", "iMAPNorthboundAlarmSpecificproblems"), ("M2000-V1", "iMAPNorthboundAlarmClearOperator"), ("M2000-V1", "iMAPNorthboundAlarmAdditionalInfo"), ("M2000-V1", "iMAPNorthboundAlarmServiceAffectFlag"), ("M2000-V1", "iMAPNorthboundAlarmClearType"), ("M2000-V1", "iMAPNorthboundAlarmClearCategory"), ("M2000-V1", "iMAPNorthboundAlarmObjectInstanceType"))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryNotificationType.setDescription(' The M2000 system sends queried alarms to the NMS using this trap.')
iMAPNorthboundFaultAlarmQueryEndNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,4))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryEndNotificationType.setDescription(' The M2000 notifies the NMS of the stop of the query. After the NMS receives the active alarm query stop trap, it indicates that the query ends. The NMS triggers the stop of the query, or the query ends after the NMS receives the active alarms.')
iMAPNorthboundHeartbeatNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1) + (0,5)).setObjects(("M2000-V1", "iMAPNorthboundHeartbeatSystemLabel"), ("M2000-V1", "iMAPNorthboundHeartbeatPeriod"), ("M2000-V1", "iMAPNorthboundHeartbeatTimeStamp"))
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatNotificationType.setDescription(' The M2000 sends the heartbeat notification trap to the NMS regularly each period. If the NMS receives the trap, the connection between the NMS and the M2000 works. If not, the connection fails.')
mibBuilder.exportSymbols("M2000-V1", iMAPNorthboundAlarmClearCategory=iMAPNorthboundAlarmClearCategory, iMAPNetManagement=iMAPNetManagement, iMAPNorthboundHeartbeatNotificationType=iMAPNorthboundHeartbeatNotificationType, iMAPNorthboundFaultAlarmQueryNotificationType=iMAPNorthboundFaultAlarmQueryNotificationType, iMAPNorthboundAlarmProposedrepairactions=iMAPNorthboundAlarmProposedrepairactions, iMAPNorthboundAlarmUnAcknowledge=iMAPNorthboundAlarmUnAcknowledge, iMAPNorthboundAlarmCategory=iMAPNorthboundAlarmCategory, iMAPNorthboundAlarmParas4=iMAPNorthboundAlarmParas4, iMAPNorthboundAlarmQuery=iMAPNorthboundAlarmQuery, iMAPNorthboundFaultUnAcknowledge=iMAPNorthboundFaultUnAcknowledge, iMAPNorthboundAlarmRestoreTime=iMAPNorthboundAlarmRestoreTime, iMAPNorthboundAlarmParas9=iMAPNorthboundAlarmParas9, iMAPNorthboundAlarmRestore=iMAPNorthboundAlarmRestore, iMAPNorthboundAlarmParas2=iMAPNorthboundAlarmParas2, iMAPNorthboundAlarmNEType=iMAPNorthboundAlarmNEType, iMAPNorthboundAlarmProbablecause=iMAPNorthboundAlarmProbablecause, iMAPNorthboundAlarmParas5=iMAPNorthboundAlarmParas5, products=products, iMAPNorthboundAlarmMOName=iMAPNorthboundAlarmMOName, iMAPNorthboundAlarmClearType=iMAPNorthboundAlarmClearType, basicCompliance=basicCompliance, iMAPNorthboundEventMgmt=iMAPNorthboundEventMgmt, iMAPNorthboundAlarmSpecificproblems=iMAPNorthboundAlarmSpecificproblems, iMAPNorthboundAlarmProductID=iMAPNorthboundAlarmProductID, iMAPNorthboundAlarmConfirm=iMAPNorthboundAlarmConfirm, iMAPNorthboundAlarmType=iMAPNorthboundAlarmType, iMAPNorthboundNotificationReport=iMAPNorthboundNotificationReport, iMAPCompliances=iMAPCompliances, iMAPNorthboundAlarmParas6=iMAPNorthboundAlarmParas6, iMAPNorthboundHeartbeatNotification=iMAPNorthboundHeartbeatNotification, iMAPNorthboundFaultNotification=iMAPNorthboundFaultNotification, iMAPNorthboundAlarmClearOperator=iMAPNorthboundAlarmClearOperator, currentObjectGroup=currentObjectGroup, iMAPNorthboundHeartbeatPeriod=iMAPNorthboundHeartbeatPeriod, iMAPNorthboundAlarmCSN=iMAPNorthboundAlarmCSN, iMAPNorthboundAlarmObjectInstanceType=iMAPNorthboundAlarmObjectInstanceType, iMAPNorthboundNotificationCommon=iMAPNorthboundNotificationCommon, iMAPNorthboundHeartbeatSvc=iMAPNorthboundHeartbeatSvc, iMAPNorthboundFaultAcknowledge=iMAPNorthboundFaultAcknowledge, iMAPNorthbound=iMAPNorthbound, iMAPNorthboundAlarmClear=iMAPNorthboundAlarmClear, iMAPNorthboundHeartbeatNotificationV2=iMAPNorthboundHeartbeatNotificationV2, iMAPNorthboundAlarmLevel=iMAPNorthboundAlarmLevel, iMAPNorthboundAlarmAckTime=iMAPNorthboundAlarmAckTime, iMAPNorthboundFaultAlarmNotification=iMAPNorthboundFaultAlarmNotification, iMAPNorthboundAlarmParas10=iMAPNorthboundAlarmParas10, iMAPNorthboundAlarmAdditionalInfo=iMAPNorthboundAlarmAdditionalInfo, iMAPConformance=iMAPConformance, iMAPNorthboundFaultClear=iMAPNorthboundFaultClear, iMAPNorthboundFaultAlarmQueryBeginNotificationType=iMAPNorthboundFaultAlarmQueryBeginNotificationType, iMAPNorthboundAlarmParas7=iMAPNorthboundAlarmParas7, iMAPNorthboundFaultAlarmReportNotificationType=iMAPNorthboundFaultAlarmReportNotificationType, iMAPNorthboundAlarmParas8=iMAPNorthboundAlarmParas8, iMAP=iMAP, iMAPNorthboundAlarmServiceAffectFlag=iMAPNorthboundAlarmServiceAffectFlag, iMAPNorthboundFaultAlarmQueryEndNotificationType=iMAPNorthboundFaultAlarmQueryEndNotificationType, iMAPNorthboundAlarmOperator=iMAPNorthboundAlarmOperator, iMAPNorthboundAlarmNEDevID=iMAPNorthboundAlarmNEDevID, iMAPNorthboundAlarmExtendInfo=iMAPNorthboundAlarmExtendInfo, iMAPNorthboundHeartbeatSystemLabel=iMAPNorthboundHeartbeatSystemLabel, iMAPNorthboundCommon=iMAPNorthboundCommon, iMAPNorthboundCommuLinkMonitor=iMAPNorthboundCommuLinkMonitor, iMAPGroups=iMAPGroups, iMAPNorthboundFaultAlarmNotificationV2=iMAPNorthboundFaultAlarmNotificationV2, iMAPNorthboundHeartbeatTimeStamp=iMAPNorthboundHeartbeatTimeStamp, iMAPNorthboundAlarmAcknowledge=iMAPNorthboundAlarmAcknowledge, currentNotificationGroup=currentNotificationGroup, iMAPNorthboundFaultQuery=iMAPNorthboundFaultQuery, iMAPNorthboundAlarmOccurTime=iMAPNorthboundAlarmOccurTime, iMAPNorthboundAlarmID=iMAPNorthboundAlarmID, iMAPNorthboundAlarmParas1=iMAPNorthboundAlarmParas1, iMAPNorthboundHeartbeatSvcReportInterval=iMAPNorthboundHeartbeatSvcReportInterval, iMAPNorthboundAlarmParas3=iMAPNorthboundAlarmParas3, iMAPNorthboundFault=iMAPNorthboundFault, iMAPNorthboundAlarmDevCsn=iMAPNorthboundAlarmDevCsn)
