#
# PySNMP MIB module DELL-NETWORKING-CHASSIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DELL-NETWORKING-CHASSIS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:37:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
dellNetMgmt, = mibBuilder.importSymbols("DELL-NETWORKING-SMI", "dellNetMgmt")
DellNetSystemCardType, DellNetIfType, DellNetChassisType, DellNetHundredthdB, DellNetSwDate, DellNetProcessorModuleType, DellNetPEOperStatus, DellNetCardOperStatus, DellNetDeviceType, DellNetMfgDate = mibBuilder.importSymbols("DELL-NETWORKING-TC", "DellNetSystemCardType", "DellNetIfType", "DellNetChassisType", "DellNetHundredthdB", "DellNetSwDate", "DellNetProcessorModuleType", "DellNetPEOperStatus", "DellNetCardOperStatus", "DellNetDeviceType", "DellNetMfgDate")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, MibIdentifier, Gauge32, iso, TimeTicks, Bits, Counter32, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "MibIdentifier", "Gauge32", "iso", "TimeTicks", "Bits", "Counter32", "NotificationType", "Integer32")
MacAddress, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "DateAndTime")
dellNetChassisMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 26))
dellNetChassisMib.setRevisions(('2014-08-05 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: dellNetChassisMib.setRevisionsDescriptions(('First draft revision of Dell Networking OS chassis mib.',))
if mibBuilder.loadTexts: dellNetChassisMib.setLastUpdated('201408051200Z')
if mibBuilder.loadTexts: dellNetChassisMib.setOrganization('Dell Inc')
if mibBuilder.loadTexts: dellNetChassisMib.setContactInfo('support.dell.com')
if mibBuilder.loadTexts: dellNetChassisMib.setDescription('Dell Networking OS Chassis MIB. ')
dellNetSysObject = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1))
dellNetSysParameter = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 1))
dellNetChassisObject = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2))
dellNetStackObject = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3))
dellNetSystemComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4))
dellNetSysAlarmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5))
dellNetDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 1, 1), DellNetDeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetDeviceType.setStatus('current')
if mibBuilder.loadTexts: dellNetDeviceType.setDescription('The type of system the chassis falls under.')
dellNetNumChassis = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetNumChassis.setStatus('current')
if mibBuilder.loadTexts: dellNetNumChassis.setDescription('The total number of chassis configured on the cluster.')
dellNetMaxNumChassis = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetMaxNumChassis.setStatus('current')
if mibBuilder.loadTexts: dellNetMaxNumChassis.setDescription('Indicates the maximum allowed chassis configurable on the cluster.')
dellNetChassisTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3), )
if mibBuilder.loadTexts: dellNetChassisTable.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisTable.setDescription('A list of chassis in a cluster. The chassis table contains the information of each chassis in the cluster. ')
dellNetChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetChassisIndex"))
if mibBuilder.loadTexts: dellNetChassisEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisEntry.setDescription('A list of chassis entries containing information for the chassis. ')
dellNetChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisIndex.setDescription('A unique index for each chassis within the cluster. This value is the chassisId assigned to the chassis. ')
dellNetChassisType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 2), DellNetChassisType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisType.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisType.setDescription('The Dell Networking Model number of the chassis.')
dellNetChassisMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisMacAddr.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisMacAddr.setDescription('A 6-octet MAC Address assigned to this Chassis.')
dellNetChassisSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisSerialNumber.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisSerialNumber.setDescription("The chassis's serial number.")
dellNetChassisPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisPartNum.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisPartNum.setDescription("The chassis manufacturer's part number.")
dellNetChassisProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisProductRev.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisProductRev.setDescription("The chassis manufacturer's product revision.")
dellNetChassisVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisVendorId.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisVendorId.setDescription("The chassis manufacturer vendor's id.")
dellNetChassisMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 8), DellNetMfgDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisMfgDate.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisMfgDate.setDescription('The date the chassis was manufactured.')
dellNetChassisCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisCountryCode.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisCountryCode.setDescription("The chassis manufacturer's country code.")
dellNetChassisPPIDRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisPPIDRev.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisPPIDRev.setDescription("The chassis's piece part ID revision.")
dellNetChassisServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisServiceTag.setDescription("The chassis's service tag.")
dellNetChassisExpServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisExpServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisExpServiceCode.setDescription("The chassis's express service code.")
dellNetChassisNumSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisNumSlots.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisNumSlots.setDescription('Number of physical slots in the chassis.')
dellNetChassisNumLineCardSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisNumLineCardSlots.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisNumLineCardSlots.setDescription('Number of physical slots in the chassis for linecards.')
dellNetChassisNumFanTrays = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisNumFanTrays.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisNumFanTrays.setDescription('Number of Fan trays in the chassis.')
dellNetChassisNumPowerSupplies = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetChassisNumPowerSupplies.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisNumPowerSupplies.setDescription('Number of Power supplies in the chassis.')
dellNetCardTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4), )
if mibBuilder.loadTexts: dellNetCardTable.setStatus('current')
if mibBuilder.loadTexts: dellNetCardTable.setDescription('A list of line cards resident in the chassis. This table contains the information on each RPM and linecards in the chassis.')
dellNetCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetChassisIndex"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetCardIndex"))
if mibBuilder.loadTexts: dellNetCardEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetCardEntry.setDescription('Entry for each card in the chassis.')
dellNetCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: dellNetCardIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetCardIndex.setDescription('A unique index for each card in the chassis.')
dellNetCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 2), DellNetSystemCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardType.setStatus('current')
if mibBuilder.loadTexts: dellNetCardType.setDescription("Card's type.")
dellNetCardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardDescription.setStatus('current')
if mibBuilder.loadTexts: dellNetCardDescription.setDescription('A short description of the card.')
dellNetCardChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 4), Integer32())
if mibBuilder.loadTexts: dellNetCardChassisIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetCardChassisIndex.setDescription('A unique index for each card in the chassis across cluster This index will be derived from the dellNetChassisIndex and dellNetCardIndex.This index would act as dellNetProcessorDeviceIndex in dellNetProcessorTable, dellNetCpuUtilTable and dellNetSwModuleTable for deviceTypes linecard,rpm and supervisor')
dellNetCardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 5), DellNetCardOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetCardStatus.setDescription('The current operational state of the card.')
dellNetCardTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 6), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardTemp.setStatus('current')
if mibBuilder.loadTexts: dellNetCardTemp.setDescription('Temperature of the card.')
dellNetCardVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardVendorId.setStatus('current')
if mibBuilder.loadTexts: dellNetCardVendorId.setDescription('The vendor id that manufactured this unit.')
dellNetCardMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 8), DellNetMfgDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardMfgDate.setStatus('current')
if mibBuilder.loadTexts: dellNetCardMfgDate.setDescription('The date the unit is manufactured.')
dellNetCardPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardPartNum.setStatus('current')
if mibBuilder.loadTexts: dellNetCardPartNum.setDescription('The unit part number')
dellNetCardProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardProductRev.setStatus('current')
if mibBuilder.loadTexts: dellNetCardProductRev.setDescription("The unit manufacturer's product revision")
dellNetCardProductOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardProductOrder.setStatus('current')
if mibBuilder.loadTexts: dellNetCardProductOrder.setDescription('The product order number for this unit.')
dellNetCardCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardCountryCode.setStatus('current')
if mibBuilder.loadTexts: dellNetCardCountryCode.setDescription("The unit manufacturer's country code")
dellNetCardPiecePartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardPiecePartID.setStatus('current')
if mibBuilder.loadTexts: dellNetCardPiecePartID.setDescription("The unit's piece part id.")
dellNetCardPPIDRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardPPIDRevision.setStatus('current')
if mibBuilder.loadTexts: dellNetCardPPIDRevision.setDescription("The unit's PPID revision.")
dellNetCardServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetCardServiceTag.setDescription("The unit's service tag.")
dellNetCardExpServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardExpServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetCardExpServiceCode.setDescription("The unit's express service code.")
dellNetCardNumOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 2, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCardNumOfPorts.setStatus('current')
if mibBuilder.loadTexts: dellNetCardNumOfPorts.setDescription('The number of interfaces in this unit.')
dellNetNumStackUnits = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetNumStackUnits.setStatus('current')
if mibBuilder.loadTexts: dellNetNumStackUnits.setDescription('The total number of stack units configured on the chassis.')
dellNetMaxStackableUnits = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetMaxStackableUnits.setStatus('current')
if mibBuilder.loadTexts: dellNetMaxStackableUnits.setDescription('Indicates the maximum allowed Unit Number configurable on the chassis.')
dellNetStackUnitIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitIndexNext.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitIndexNext.setDescription('This object contains the next appropriate value to be used for dellNetStackUnitIndex when creating entries in the dellNetStackUnitTable. The value 0 indicates that no unassigned entries are available. To obtain the dellNetStackUnitIndexNext value for a new entry, the manager must first issue a management protocol retrieval operation to obtain the current value of this object. The agent should modify the value to reflect the next unassigned number after each retrieval operation. After a manager retrieves a value the agent will determine when this index value will be made available for reuse. Note that this object is not the unit number assigned by the management unit. The max number of stackable units allowed on this chassis is found from the object dellNetNumMaxStackableUnits.')
dellNetStackUnitTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4), )
if mibBuilder.loadTexts: dellNetStackUnitTable.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitTable.setDescription('A list of stack units configured in the chassis. The StackUnit table contains the management information of each stacked unit in the chassis. ')
dellNetStackUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetStackUnitIndex"))
if mibBuilder.loadTexts: dellNetStackUnitEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitEntry.setDescription('A list of units entries containing information for each stacked unit.')
dellNetStackUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: dellNetStackUnitIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitIndex.setDescription('The unique index for this entry. Refer to the object dellNetStackUnitIndexNext.')
dellNetStackUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 12), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitNumber.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitNumber.setDescription('The unit number associated with this unit. The unit number can be manually assigned to stack members. Note that the unit number assignment is based on the following factors: - if the unit number is requested here, but another unit already uses that number, the unit changes its configured unit number to the lowest unassigned unit number. - if the unit number is 0, i.e. unassigned, then the unit sets its configured unit number to the lowest unassigned unit number. - if the unit number is configured and no other device uses the unit number, then the unit starts using the configured unit number. - if a unit detects that the maximum number of units already exist, the unit sets its unit number to 0, i.e. unassigned, and stays in the Initialization state. - The max number of stackable units allowed on this chassis is found from the object chNumMaxStackableUnits.')
dellNetStackUnitMgmtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mgmtUnit", 1), ("standbyUnit", 2), ("stackUnit", 3), ("unassigned", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitMgmtStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitMgmtStatus.setDescription('Indicates whether the unit is a Management Unit, a Stack Unit, or unassigned. Setting this object to mgmtUnit(1) initiates transfer of the management functionality to the specified stack unit. Object values stackUnit(2) and unassigned(3) cannot be set.')
dellNetStackUnitHwMgmtPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("unsassigned", 1), ("assigned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitHwMgmtPreference.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitHwMgmtPreference.setDescription('indicates whether the unit is capable of becoming a management unit. if it is unsigned, this unit can be a management unit.')
dellNetStackUnitAdmMgmtPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 15), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitAdmMgmtPreference.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitAdmMgmtPreference.setDescription('indicates how likely this unit is to be chosen as the management unit. A value of 0 indicates a disabled or unassigned preference.')
dellNetStackUnitModelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 7), DellNetChassisType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitModelId.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitModelId.setDescription('The Dell Networking OS Model number for this unit.')
dellNetStackUnitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("unsupported", 2), ("codeMismatch", 3), ("configMismatch", 4), ("unitDown", 5), ("notPresent", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitStatus.setDescription('The status of this unit.')
dellNetStackUnitDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitDescription.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitDescription.setDescription('The description of this unit.')
dellNetStackUnitCodeVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitCodeVersion.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitCodeVersion.setDescription('Current code version of this unit.')
dellNetStackUnitSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitSerialNumber.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitSerialNumber.setDescription("The unit's serial number.")
dellNetStackUnitUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitUpTime.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitUpTime.setDescription('The system up time of the unit.')
dellNetStackUnitTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitTemp.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitTemp.setDescription('The temperature of the unit.')
dellNetStackUnitVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitVendorId.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitVendorId.setDescription('The vendor id that manufactured this unit.')
dellNetStackUnitMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 15), DellNetMfgDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitMfgDate.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitMfgDate.setDescription('The date the unit is manufactured.')
dellNetStackUnitMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 16), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitMacAddress.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitMacAddress.setDescription('A 6-octet MAC Address assigned to this unit.')
dellNetStackUnitPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitPartNum.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitPartNum.setDescription('The unit part number')
dellNetStackUnitProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitProductRev.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitProductRev.setDescription("The unit manufacturer's product revision")
dellNetStackUnitProductOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitProductOrder.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitProductOrder.setDescription('The product order number for this unit.')
dellNetStackUnitCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitCountryCode.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitCountryCode.setDescription("The unit manufacturer's country code")
dellNetStackUnitPiecePartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitPiecePartID.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitPiecePartID.setDescription("The unit's piece part id.")
dellNetStackUnitPPIDRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitPPIDRevision.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitPPIDRevision.setDescription("The unit's PPID revision.")
dellNetStackUnitServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitServiceTag.setDescription("The unit's service tag.")
dellNetStackUnitExpServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitExpServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitExpServiceCode.setDescription("The unit's express service code.")
dellNetStackUnitNumOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitNumOfPorts.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitNumOfPorts.setDescription('The number of interfaces in this unit.')
dellNetStackUnitNumFanTrays = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitNumFanTrays.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitNumFanTrays.setDescription('The number of fan trays on the unit.')
dellNetStackUnitNumPowerSupplies = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitNumPowerSupplies.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitNumPowerSupplies.setDescription('The number of power supply in the unit.')
dellNetStackUnitNumPluggableModules = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackUnitNumPluggableModules.setStatus('current')
if mibBuilder.loadTexts: dellNetStackUnitNumPluggableModules.setDescription('The number of pluggable modules in the stack unit.')
dellNetStackPortTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5), )
if mibBuilder.loadTexts: dellNetStackPortTable.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortTable.setDescription('A list of stack ports in the chassis.')
dellNetStackPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetStackUnitNumber"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetStackPortIndex"))
if mibBuilder.loadTexts: dellNetStackPortEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortEntry.setDescription('A stack port entry containing objects for a particular stack port.')
dellNetStackPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortIndex.setDescription('The index for each stack port within the unit. 1 - stack port A, 2 - stack port B ')
dellNetStackPortConfiguredMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stack", 1), ("ethernet", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortConfiguredMode.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortConfiguredMode.setDescription('Configured mode of the Stack Port. Changes to this value happen only after a reset of the unit.')
dellNetStackPortRunningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stack", 1), ("ethernet", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortRunningMode.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortRunningMode.setDescription('Operational mode of the Stack Port.')
dellNetStackPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortLinkStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortLinkStatus.setDescription('Link status of the Stack Port. Ports in ethernet mode will return a status of down(2).')
dellNetStackPortLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortLinkSpeed.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortLinkSpeed.setDescription('Speed of the Stack Port measured in Gb/s. Ports in ethernet mode will return a speed of 0.')
dellNetStackPortRxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortRxDataRate.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortRxDataRate.setDescription('Received Data rate on the stacking port. Measured in Mb/s. Ports in ethernet mode will return 0.')
dellNetStackPortRxErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortRxErrorRate.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortRxErrorRate.setDescription('Received error rate on the stack port. Measured in Errors per Second. Ports in ethernet mode will return 0.')
dellNetStackPortRxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortRxTotalErrors.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortRxTotalErrors.setDescription('Received number of errors since boot. The counter may wrap. Ports in ethernet mode will return 0.')
dellNetStackPortTxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortTxDataRate.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortTxDataRate.setDescription('Transmitted Data rate on the stacking port. Measured in Mb/s. Ports in ethernet mode will return 0.')
dellNetStackPortTxErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortTxErrorRate.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortTxErrorRate.setDescription('Transmitted error rate on the stack port. Measured in Errors per Second. Ports in ethernet mode will return 0.')
dellNetStackPortTxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 3, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetStackPortTxTotalErrors.setStatus('current')
if mibBuilder.loadTexts: dellNetStackPortTxTotalErrors.setDescription('Transmitted number of errors since boot. The counter may wrap. Ports in ethernet mode will return 0.')
dellNetPEBindingTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 1), )
if mibBuilder.loadTexts: dellNetPEBindingTable.setStatus('current')
if mibBuilder.loadTexts: dellNetPEBindingTable.setDescription("The dellNetPEBindingTable entry binds the core switch's port to the Port Extender connected to it.The table will hold an entry for port extenders physically connected or provisioned to be connected to the port. ")
dellNetPEBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 1, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetPEBindCascadePortIfIndex"))
if mibBuilder.loadTexts: dellNetPEBindingEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetPEBindingEntry.setDescription('A PE binding entry binds the InterfaceIndex of the port in core switch to the dellNetPortExtenderIndex of Port extender connected to it or provisioned to be connected. ')
dellNetPEBindCascadePortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dellNetPEBindCascadePortIfIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetPEBindCascadePortIfIndex.setDescription('This is a unique interface index of an physical interface in controller bridge or or PE uplink LAG interface to which the port externder with dellNetPEIndex is connected or provisioned. ')
dellNetPEBindPEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEBindPEIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetPEBindPEIndex.setDescription('An index that uniquely identifies a port extender controlled by the controller bridge.This is an index derived from the PEID and stack-unit ID of the port extender')
dellNetPETable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2), )
if mibBuilder.loadTexts: dellNetPETable.setStatus('current')
if mibBuilder.loadTexts: dellNetPETable.setDescription('The dellNetPETable lists port extenders controlled by the controller bridge. ')
dellNetPEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetPEIndex"))
if mibBuilder.loadTexts: dellNetPEEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetPEEntry.setDescription('A PE table entry holds details of port extenders controlled by the controller bridge. ')
dellNetPEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dellNetPEIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetPEIndex.setDescription('An index that uniquely identifies a port extender controlled by the controller bridge.')
dellNetPEPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEPEID.setStatus('current')
if mibBuilder.loadTexts: dellNetPEPEID.setDescription('PEID assigned for the port extender.')
dellNetPEUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEUnitID.setStatus('current')
if mibBuilder.loadTexts: dellNetPEUnitID.setDescription('Stack unit ID assigned for the port extender.')
dellNetPEType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 4), DellNetChassisType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEType.setStatus('current')
if mibBuilder.loadTexts: dellNetPEType.setDescription("Prt extender's type.")
dellNetPEDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEDescription.setStatus('current')
if mibBuilder.loadTexts: dellNetPEDescription.setDescription('A short description of the card.')
dellNetPEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 6), DellNetPEOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetPEStatus.setDescription('The current operational state of the Port extender.')
dellNetPETemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPETemp.setStatus('current')
if mibBuilder.loadTexts: dellNetPETemp.setDescription('Temperature of the port extender')
dellNetPEVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEVendorId.setStatus('current')
if mibBuilder.loadTexts: dellNetPEVendorId.setDescription('The vendor id that manufactured this unit.')
dellNetPEMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 9), DellNetMfgDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEMfgDate.setStatus('current')
if mibBuilder.loadTexts: dellNetPEMfgDate.setDescription('The date the unit is manufactured.')
dellNetPEPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEPartNum.setStatus('current')
if mibBuilder.loadTexts: dellNetPEPartNum.setDescription('The unit part number')
dellNetPEProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEProductRev.setStatus('current')
if mibBuilder.loadTexts: dellNetPEProductRev.setDescription("The unit manufacturer's product revision")
dellNetPEProductOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEProductOrder.setStatus('current')
if mibBuilder.loadTexts: dellNetPEProductOrder.setDescription('The product order number for this unit.')
dellNetPECountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPECountryCode.setStatus('current')
if mibBuilder.loadTexts: dellNetPECountryCode.setDescription("The unit manufacturer's country code")
dellNetPEPiecePartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEPiecePartID.setStatus('current')
if mibBuilder.loadTexts: dellNetPEPiecePartID.setDescription("The unit's piece part id.")
dellNetPEPPIDRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEPPIDRevision.setStatus('current')
if mibBuilder.loadTexts: dellNetPEPPIDRevision.setDescription("The unit's PPID revision.")
dellNetPEServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetPEServiceTag.setDescription("The unit's service tag.")
dellNetPEExpServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPEExpServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetPEExpServiceCode.setDescription("The unit's express service code.")
dellNetPENumOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPENumOfPorts.setStatus('current')
if mibBuilder.loadTexts: dellNetPENumOfPorts.setDescription('The number of interfaces in this unit.')
dellNetPENumFanTrays = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPENumFanTrays.setStatus('current')
if mibBuilder.loadTexts: dellNetPENumFanTrays.setDescription('The number of fan trays on the unit.')
dellNetPENumPowerSupplies = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPENumPowerSupplies.setStatus('current')
if mibBuilder.loadTexts: dellNetPENumPowerSupplies.setDescription('The number of power supply in the unit.')
dellNetPENumPluggableModules = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPENumPluggableModules.setStatus('current')
if mibBuilder.loadTexts: dellNetPENumPluggableModules.setDescription('The number of pluggable modules in the unit.')
dellNetProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3), )
if mibBuilder.loadTexts: dellNetProcessorTable.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorTable.setDescription('A list of Processors resident in this slot.')
dellNetProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceType"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceIndex"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorIndex"))
if mibBuilder.loadTexts: dellNetProcessorEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorEntry.setDescription('A list of Processor entries.')
dellNetProcessorDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 1), DellNetDeviceType())
if mibBuilder.loadTexts: dellNetProcessorDeviceType.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorDeviceType.setDescription('Identify the type of device the processor reside (linecard,port extender etc..) ')
dellNetProcessorDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: dellNetProcessorDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorDeviceIndex.setDescription('A unique device index within the device type.')
dellNetProcessorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 3), Integer32())
if mibBuilder.loadTexts: dellNetProcessorIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorIndex.setDescription('A unique index for each Processor within the device.The valid entries are 1 to the value of number of processors ')
dellNetProcessorModule = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 4), DellNetProcessorModuleType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetProcessorModule.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorModule.setDescription('The type of module running on the Processor.')
dellNetProcessorUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetProcessorUpTime.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorUpTime.setDescription('The SysUpTime for this Processor.')
dellNetProcessorMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetProcessorMemSize.setStatus('current')
if mibBuilder.loadTexts: dellNetProcessorMemSize.setDescription('The size of the RAM in Mb.')
dellNetCpuUtilTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4), )
if mibBuilder.loadTexts: dellNetCpuUtilTable.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtilTable.setDescription('A table listing the processor and memory utilization of of each CPU in the system.')
dellNetCpuUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceType"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceIndex"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorIndex"))
if mibBuilder.loadTexts: dellNetCpuUtilEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtilEntry.setDescription('Processor and Memory Utilization entry for a particular CPU.')
dellNetCpuUtil5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCpuUtil5Sec.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtil5Sec.setDescription('CPU utilization in percentage for last 5 seconds.')
dellNetCpuUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCpuUtil1Min.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtil1Min.setDescription('CPU utilization in percentage for last 1 minute.')
dellNetCpuUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCpuUtil5Min.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtil5Min.setDescription('CPU utilization in percentage for last 5 minutes.')
dellNetCpuUtilMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCpuUtilMemUsage.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuUtilMemUsage.setDescription('Total Memory usage in percentage.')
dellNetCpuFlashUsageUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 4, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetCpuFlashUsageUtil.setStatus('current')
if mibBuilder.loadTexts: dellNetCpuFlashUsageUtil.setDescription('Total flash usage in percentage.')
dellNetSwModuleTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5), )
if mibBuilder.loadTexts: dellNetSwModuleTable.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleTable.setDescription('A list of software version information in a processor.')
dellNetSwModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceType"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorDeviceIndex"))
if mibBuilder.loadTexts: dellNetSwModuleEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleEntry.setDescription('A software module entry containing version number information for a particular processor.')
dellNetSwModuleRuntimeImgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleRuntimeImgVersion.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleRuntimeImgVersion.setDescription('Current Dell Networking OS image version running in the system. The version string will be in following format major_ver.minor_ver(maintenance_ver.patch_ver)')
dellNetSwModuleRuntimeImgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 2), DellNetSwDate().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleRuntimeImgDate.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleRuntimeImgDate.setDescription('The release date of this software module.')
dellNetSwModuleBootFlashImgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleBootFlashImgVersion.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleBootFlashImgVersion.setDescription('This provides the Grub image version that is currently running in the processor.')
dellNetSwModuleBootSelectorImgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleBootSelectorImgVersion.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleBootSelectorImgVersion.setDescription('This provides the BIOS image version that is currently running in the processor.')
dellNetSwModuleNextRebootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("partitionA", 1), ("partitionB", 2), ("networkBoot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleNextRebootImage.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleNextRebootImage.setDescription('The image selection, when the chassis is rebooted. partitionA - Image stored in bootflash partition A: partitionB - Image stored in bootflash partition B: networkBoot - will be booted via network.')
dellNetSwModuleCurrentBootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("partitionA", 1), ("partitionB", 2), ("networkBoot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleCurrentBootImage.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleCurrentBootImage.setDescription('The current image is booted from. partitionA - Image stored in bootflash partition A: partitionB - Image stored in bootflash partition B: networkBoot - Booted via network.')
dellNetSwModuleInPartitionAImgVers = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleInPartitionAImgVers.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleInPartitionAImgVers.setDescription('This provides the Dell Networking OS system image version that is stored in partition A: and The version string has Major and Minor release numbers. It also denotes if the release is Maintenance, Technical, Patch, Beta, or Generally Available')
dellNetSwModuleInPartitionBImgVers = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSwModuleInPartitionBImgVers.setStatus('current')
if mibBuilder.loadTexts: dellNetSwModuleInPartitionBImgVers.setDescription('This provides the Dell Networking OS system image version that is stored in partition B: and The version string has Major and Minor release numbers. It also denotes if the release is Maintenance, Technical, Patch, Beta, or Generally Available')
dellNetPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6), )
if mibBuilder.loadTexts: dellNetPowerSupplyTable.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyTable.setDescription('A list of power supply resident in the device.')
dellNetPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerDeviceType"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerDeviceIndex"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyIndex"))
if mibBuilder.loadTexts: dellNetPowerSupplyEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyEntry.setDescription('A power supply entry containing objects for a particular power supply.')
dellNetPowerDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 1), DellNetDeviceType())
if mibBuilder.loadTexts: dellNetPowerDeviceType.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerDeviceType.setDescription('Identify the type of device the power supply units reside (chassis,port extender etc..) ')
dellNetPowerDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: dellNetPowerDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerDeviceIndex.setDescription('A unique device index within the device type.')
dellNetPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyIndex.setDescription('The unique index of the power supply.')
dellNetPowerSupplyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("absent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyOperStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyOperStatus.setDescription('The status of the power supply.')
dellNetPowerSupplyType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("ac", 2), ("dc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyType.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyType.setDescription('The type of the power supply.')
dellNetPowerSupplyPiecePartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyPiecePartID.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyPiecePartID.setDescription("The power supply's piece part id.")
dellNetPowerSupplyPPIDRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyPPIDRevision.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyPPIDRevision.setDescription("The power supply's PPID revision.")
dellNetPowerSupplyServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyServiceTag.setDescription("The power supply's service tag.")
dellNetPowerSupplyExpressServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyExpressServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyExpressServiceCode.setDescription("The power supply's express service code.")
dellNetPowerSupplyUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetPowerSupplyUsage.setStatus('current')
if mibBuilder.loadTexts: dellNetPowerSupplyUsage.setDescription('Power usage of this Power Supply in Watts.')
dellNetFanTrayTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7), )
if mibBuilder.loadTexts: dellNetFanTrayTable.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayTable.setDescription('A list of fan tray resident in the device.')
dellNetFanTrayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetFanDeviceType"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetFanDeviceIndex"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayIndex"))
if mibBuilder.loadTexts: dellNetFanTrayEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayEntry.setDescription('A fan entry containing objects for a particular fan tray.')
dellNetFanDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 1), DellNetDeviceType())
if mibBuilder.loadTexts: dellNetFanDeviceType.setStatus('current')
if mibBuilder.loadTexts: dellNetFanDeviceType.setDescription('Identify the type of device the fan tray units reside (chassis,port extender etc..) ')
dellNetFanDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 2), Integer32())
if mibBuilder.loadTexts: dellNetFanDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetFanDeviceIndex.setDescription('A unique device index within the device type.')
dellNetFanTrayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayIndex.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayIndex.setDescription('The unique index of the fan tray.')
dellNetFanTrayOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("absent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayOperStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayOperStatus.setDescription('The status of the fan tray.')
dellNetFanTrayPiecePartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayPiecePartID.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayPiecePartID.setDescription("The fan tray's piece part id.")
dellNetFanTrayPPIDRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayPPIDRevision.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayPPIDRevision.setDescription("The fan tray's PPID revision.")
dellNetFanTrayServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayServiceTag.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayServiceTag.setDescription("The fan tray's service tag.")
dellNetFanTrayExpressServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetFanTrayExpressServiceCode.setStatus('current')
if mibBuilder.loadTexts: dellNetFanTrayExpressServiceCode.setDescription("The fan tray's express service code.")
dellNetSysSwCoresTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9), )
if mibBuilder.loadTexts: dellNetSysSwCoresTable.setStatus('current')
if mibBuilder.loadTexts: dellNetSysSwCoresTable.setDescription('A table containing information about the software cores that have been generated as a result of system failures.')
dellNetSysCoresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1), ).setIndexNames((0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetStackUnitNumber"), (0, "DELL-NETWORKING-CHASSIS-MIB", "dellNetSysCoresInstance"))
if mibBuilder.loadTexts: dellNetSysCoresEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresEntry.setDescription('A row in the software core table representing information about a core that has been generated.')
dellNetSysCoresInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysCoresInstance.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresInstance.setDescription('A unique index assigned to the cores stored on this stack unit.')
dellNetSysCoresFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysCoresFileName.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresFileName.setDescription('The name of the core file including the path.')
dellNetSysCoresTimeCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1, 3), DellNetSwDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysCoresTimeCreated.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresTimeCreated.setDescription('The time at which the core file was created.')
dellNetSysCoresStackUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysCoresStackUnitNumber.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresStackUnitNumber.setDescription('The stack unit member which generated the core.')
dellNetSysCoresProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysCoresProcess.setStatus('current')
if mibBuilder.loadTexts: dellNetSysCoresProcess.setDescription('The name of the process which generated the core.')
dellNetSysIfTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10), )
if mibBuilder.loadTexts: dellNetSysIfTable.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfTable.setDescription('A list of intefaces in the S-series chassis. This table is similar to chSysPortTable but supported only for ON platforms due to change in numbering scheme.')
dellNetSysIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dellNetSysIfEntry.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfEntry.setDescription('A interface entry containing objects for a particular interface.')
dellNetSysIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 1), DellNetIfType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfType.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfType.setDescription('The type of Interface.')
dellNetSysIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfName.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfName.setDescription('Display name of the interface.')
dellNetSysIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfAdminStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfAdminStatus.setDescription('The admin status of the interface. The interface admin status is Up if the user has configured it to be up otherwise, the admin status is Down.')
dellNetSysIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ready", 1), ("portDown", 2), ("portProblem", 3), ("cardProblem", 4), ("cardDown", 5), ("notPresent", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfOperStatus.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfOperStatus.setDescription("The operational status provides further condition of the interface. If the dellNetSysIfAdminStatus is 'up', the valid state is 'ready' - the card is present and ready and the dellNetSysIfAdminStatus status is 'up'. 'portDown' - the interface is down or not enabled. 'portProblem' - interface hardware problems. 'cardProblem' - not used. Same as cardDown. 'cardDown' - the card is down. 'notPresent' - the card is not present.")
dellNetSysIfXfpRecvPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 5), DellNetHundredthdB()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfXfpRecvPower.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfXfpRecvPower.setDescription(' The power signal strength (dB) received for 1G/10G/40G Ethernet/802.3 interface. ')
dellNetSysIfXfpRecvTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfXfpRecvTemp.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfXfpRecvTemp.setDescription('The temperature value received for the optics.')
dellNetSysIfXfpTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 4, 10, 1, 7), DellNetHundredthdB()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dellNetSysIfXfpTxPower.setStatus('current')
if mibBuilder.loadTexts: dellNetSysIfXfpTxPower.setDescription(' The power signal strength (dB) Transmitted for 1G/10G/40G Ethernet/802.3 interface. ')
dellNetSysAlarmMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1))
dellNetSysAlarmVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2))
dellNetSysAlarmVarInteger = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarInteger.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarInteger.setDescription('An generic integer value in the TRAP object')
dellNetSysAlarmVarString = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarString.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarString.setDescription('An generic string value in the TRAP object')
dellNetSysAlarmVarSlot = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarSlot.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarSlot.setDescription('The chassis slot number. For the traps that does not have slot information the value will -1 in the TRAP PDU. ')
dellNetSysAlarmVarPort = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarPort.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarPort.setDescription('The chassis port number. For the traps that does not have port information the value will -1 in the TRAP PDU. ')
dellNetSysAlarmVarChassisId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarChassisId.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarChassisId.setDescription('The Chassis ID. For the traps that does not have Chassis information the value will be -1 in the TRAP PDU. For Non-ON based platforms, the value is 0 based and for ON Based platform it is 1 based in the Trap PDU. ')
dellNetsysAlarmVarFanTrayId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetsysAlarmVarFanTrayId.setStatus('current')
if mibBuilder.loadTexts: dellNetsysAlarmVarFanTrayId.setDescription('The FanTray ID. For the traps that does not have FanTray ID the value will be -1 in the TRAP PDU. For Non-ON based platforms, the value is 0 based and for ON Based platform it is 1 based in the Trap PDU. ')
dellNetsysAlarmVarPsuId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetsysAlarmVarPsuId.setStatus('current')
if mibBuilder.loadTexts: dellNetsysAlarmVarPsuId.setDescription('The PSU ID. For the traps that does not have PSU Id the value will be -1 in the TRAP PDU. For Non-ON based platforms, the value is 0 based and for ON Based platform it is 1 based in the Trap PDU. ')
dellNetsysAlarmVarFanId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetsysAlarmVarFanId.setStatus('current')
if mibBuilder.loadTexts: dellNetsysAlarmVarFanId.setDescription('The Fan ID. For the traps that does not have Fan Id the value will be -1 in the TRAP PDU. For Non-ON based platforms, the value is 0 based and for ON Based platform it is 1 based in the Trap PDU. ')
dellNetSysAlarmVarPeId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 2, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dellNetSysAlarmVarPeId.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmVarPeId.setDescription('The Pe ID. For the traps that does not have PE Id information the value will be -1 in the TRAP PDU. ')
dellNetSysAlarmCardDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 1)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmCardDown.setDescription('The driver/agent generate this trap when a card operational status is down.')
dellNetSysAlarmCardUp = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 2)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardUp.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmCardUp.setDescription('The driver/agent generate this trap when a card operational status is up.')
dellNetSysAlarmCardOffline = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 3)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardOffline.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmCardOffline.setDescription('The driver/agent generate this trap when a card is set to offline.')
dellNetSysAlarmCardMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 4)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardMismatch.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmCardMismatch.setDescription('The driver/agent generate this trap when a card is not the same as configured')
dellNetSysAlarmRpmUp = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 5)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmRpmUp.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmRpmUp.setDescription('The primary RPM generate this trap when the primary RPM or the secondary RPM is up and running.')
dellNetSysAlarmRpmDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 6)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmRpmDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmRpmDown.setDescription('The primary RPM generate this trap when the secondary RPM is down, either by software reset or being physically removed from the chassis.')
dellNetSysAlarmPowersupplyDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 7)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPowersupplyDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPowersupplyDown.setDescription('The driver/agent generate this trap when a power supply is not operational.')
dellNetSysAlarmMinorTemperatureHigh = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 8)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorTemperatureHigh.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorTemperatureHigh.setDescription("The driver/agent generate this trap when the chassis's temperature exceed the minor threshold.")
dellNetSysAlarmMajorTemperatureHigh = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 9)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMajorTemperatureHigh.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMajorTemperatureHigh.setDescription("The driver/agent generate this trap when the chassis's temperature exceede the major threshold.")
dellNetSysAlarmFanTrayDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 10)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayDown.setDescription('The driver/agent generate this trap when a fan tray is missing or down.')
dellNetSysAlarmPowersupplyClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 11)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPowersupplyClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPowersupplyClear.setDescription('The driver/agent generate this trap when a power supply is now operational.')
dellNetSysAlarmMinorTemperatureClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 12)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorTemperatureClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorTemperatureClear.setDescription("The driver/agent generate this trap when the chassis's temperature within the minor threshold.")
dellNetSysAlarmMajorTemperatureClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 13)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMajorTemperatureClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMajorTemperatureClear.setDescription("The driver/agent generate this trap when the chassis's temperature within the major threshold.")
dellNetSysAlarmFanTrayClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 14)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayClear.setDescription('The driver/agent generate this trap when a fan tray is now operational.')
dellNetSysAlarmMinorFanBadClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 15)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorFanBadClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorFanBadClear.setDescription('The driver/agent generate this trap when a minor fan tray that was bad is now operational.')
dellNetSysAlarmMajorPS = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 16)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMajorPS.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMajorPS.setDescription('The agent generate this trap when a power supply major alarm is issued.')
dellNetSysAlarmMajorPSClr = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 17)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMajorPSClr.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMajorPSClr.setDescription('The agent generate this trap when a power supply major alarm is cleared.')
dellNetSysAlarmMinorPS = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 18)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorPS.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorPS.setDescription('The agent generate this trap when a power supply minor alarm is issued.')
dellNetSysAlarmMinorPSClr = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 19)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorPSClr.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorPSClr.setDescription('The agent generate this trap when a power supply minor alarm is cleared.')
dellNetSysAlarmMinorFanBad = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 20)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMinorFanBad.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMinorFanBad.setDescription('The agent generate this trap when fan is bad.')
dellNetSysAlarmRpmPrimary = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 21)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmRpmPrimary.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmRpmPrimary.setDescription('The agent generate this trap when a standby RPM become Primary RPM after fail-over.')
dellNetSysSnmpIpAclDeny = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 22)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysSnmpIpAclDeny.setStatus('current')
if mibBuilder.loadTexts: dellNetSysSnmpIpAclDeny.setDescription('The agent generate this trap when SNMP Agent deny a SNMP request based on the IP ACL rules. ')
dellNetSysAlarmCardVersionMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 23)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardVersionMismatch.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmCardVersionMismatch.setDescription('The driver/agent generate this trap when a card is not the same software version as a Management unit. Applied to S-series stackin only.')
dellNetSysAlarmUnsupportedOptic = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 24)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmUnsupportedOptic.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmUnsupportedOptic.setDescription('The Interface Agent generate this trap when an unsupported optic is inserted in a port')
dellNetSysAlarmFanTrayOrPsuDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 25)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayOrPsuDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayOrPsuDown.setDescription('The driver/agent generate this trap when a fan tray or psu is missing or down.')
dellNetSysAlarmFanTrayOrPsuClear = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 26)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarFanTrayId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetsysAlarmVarPsuId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayOrPsuClear.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmFanTrayOrPsuClear.setDescription('The driver/agent generate this trap when a fan tray or psu is now operational.')
dellNetSysAlarmPEUp = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 27)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPEUp.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPEUp.setDescription('The driver/agent generate this trap when a PE operational status is up.')
dellNetSysAlarmPEDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 28)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPEDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPEDown.setDescription('The driver/agent generate this trap when a PE operational status is down.')
dellNetSysAlarmPEUnitUp = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 29)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPEUnitUp.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPEUnitUp.setDescription('The driver/agent generate this trap when a PE Unit operational status is up.')
dellNetSysAlarmPEUnitDown = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 30)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmPEUnitDown.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmPEUnitDown.setDescription('The driver/agent generate this trap when a PE Unit operational status is down.')
dellNetSysAlarmExdCpuThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 31)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmExdCpuThreshold.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmExdCpuThreshold.setDescription('The agent generate this trap when cpu utilization excceded 80%.')
dellNetSysAlarmClrCpuThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 32)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmClrCpuThreshold.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmClrCpuThreshold.setDescription('The agent generate this trap when cpu utilization falls below threshold.')
dellNetSysAlarmExdMemThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 33)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmExdMemThreshold.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmExdMemThreshold.setDescription('The agent generate this trap when memory utilization excceded 92%.')
dellNetSysAlarmClrMemThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 34)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmClrMemThreshold.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmClrMemThreshold.setDescription('The agent generate this trap when memory utilization falls below threshold.')
dellNetSysAlarmTaskSuspend = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 35)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmTaskSuspend.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmTaskSuspend.setDescription('The system generate this trap when a a task is suspended.')
dellNetSysAlarmTaskTerm = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 36)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmTaskTerm.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmTaskTerm.setDescription('The system generate this trap when a a task is terminated.')
dellNetSysAlarmMacStationMove = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 37)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmMacStationMove.setStatus('current')
if mibBuilder.loadTexts: dellNetSysAlarmMacStationMove.setDescription('The agent generate this trap when a MAC station move exceed the threshold. ')
dellNetSysAlarmCardReset = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 38)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardReset.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmCardReset.setDescription('The driver/agent generate this trap when a card is reset.')
dellNetSysAlarmCardRemove = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 39)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardRemove.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmCardRemove.setDescription('The driver/agent generate this trap when a card is removed')
dellNetSysAlarmCardProblem = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 40)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCardProblem.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmCardProblem.setDescription('The driver/agent generate this trap when a card is indicated wht status card problem')
dellNetSysAlarmCutoff = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 41)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmCutoff.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmCutoff.setDescription('This trap is generated if the alarm cut off button on RPM is pressed.')
dellNetSysAlarmSRAMParityErrorDetect = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 42)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmSRAMParityErrorDetect.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmSRAMParityErrorDetect.setDescription("The agent generate this trap when a linecard detects SRAM parity error and then tries to recover but can't recover that section. ")
dellNetSysAlarmAcDcMixedPowerSupplyDetect = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 43)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmAcDcMixedPowerSupplyDetect.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmAcDcMixedPowerSupplyDetect.setDescription('The agent generate this trap when a system detects AC and DC mixed power supply. Applied to C-series only. ')
dellNetSysAlarmVrrpGoMaster = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 44)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmVrrpGoMaster.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmVrrpGoMaster.setDescription('The VRRP generate this trap when it become a backup')
dellNetSysAlarmVrrpGiveupMaster = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 26, 1, 5, 1, 45)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarInteger"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarString"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarChassisId"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarSlot"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPort"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVarPeId"))
if mibBuilder.loadTexts: dellNetSysAlarmVrrpGiveupMaster.setStatus('deprecated')
if mibBuilder.loadTexts: dellNetSysAlarmVrrpGiveupMaster.setDescription('The VRRP generate this trap when it is no longer the master and has entered non-operational state.')
dellNetChassisMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2))
dellNetChassisMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 1))
dellNetChassisMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 2))
dellNetChassisMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 1, 1)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetComponentGroup"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSystemGroup"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetChassisNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dellNetChassisMibCompliance = dellNetChassisMibCompliance.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisMibCompliance.setDescription('The compliance statement for Dell Networking OS product which implement the Dell Networking Chassis MIB.')
dellNetComponentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 2, 1)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetDeviceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dellNetComponentGroup = dellNetComponentGroup.setStatus('current')
if mibBuilder.loadTexts: dellNetComponentGroup.setDescription('A collection of objects providing the overall chassis information.')
dellNetSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 2, 2)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorModule"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorUpTime"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetProcessorMemSize"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetCpuUtil5Sec"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetCpuUtil1Min"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetCpuUtil5Min"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetCpuUtilMemUsage"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleRuntimeImgVersion"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleRuntimeImgDate"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleBootFlashImgVersion"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleBootSelectorImgVersion"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleNextRebootImage"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleCurrentBootImage"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleInPartitionAImgVers"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSwModuleInPartitionBImgVers"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyOperStatus"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyType"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyPiecePartID"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyPPIDRevision"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyServiceTag"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyExpressServiceCode"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetPowerSupplyUsage"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayOperStatus"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayPiecePartID"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayPPIDRevision"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayServiceTag"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetFanTrayExpressServiceCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dellNetSystemGroup = dellNetSystemGroup.setStatus('current')
if mibBuilder.loadTexts: dellNetSystemGroup.setDescription('A collection of objects providing the chassis system hardware information.')
dellNetChassisNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6027, 3, 26, 2, 2, 3)).setObjects(("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardUp"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardOffline"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardMismatch"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmRpmUp"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmRpmDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPowersupplyDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorTemperatureHigh"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMajorTemperatureHigh"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmFanTrayDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPowersupplyClear"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorTemperatureClear"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMajorTemperatureClear"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmFanTrayClear"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorFanBadClear"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMajorPS"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMajorPSClr"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorPS"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorPSClr"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMinorFanBad"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmRpmPrimary"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysSnmpIpAclDeny"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardVersionMismatch"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmUnsupportedOptic"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPEUnitUp"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPEUnitDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPEUp"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmPEDown"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmExdCpuThreshold"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmClrCpuThreshold"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmExdMemThreshold"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmClrMemThreshold"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmTaskSuspend"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmTaskTerm"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmMacStationMove"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardReset"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardRemove"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCardProblem"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmCutoff"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmSRAMParityErrorDetect"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmAcDcMixedPowerSupplyDetect"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVrrpGoMaster"), ("DELL-NETWORKING-CHASSIS-MIB", "dellNetSysAlarmVrrpGiveupMaster"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dellNetChassisNotificationGroup = dellNetChassisNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: dellNetChassisNotificationGroup.setDescription('Notifications for Dell Networking OS Chassis mib')
mibBuilder.exportSymbols("DELL-NETWORKING-CHASSIS-MIB", dellNetSysIfXfpTxPower=dellNetSysIfXfpTxPower, dellNetSysCoresFileName=dellNetSysCoresFileName, dellNetStackUnitNumPluggableModules=dellNetStackUnitNumPluggableModules, dellNetFanTrayPPIDRevision=dellNetFanTrayPPIDRevision, dellNetsysAlarmVarFanId=dellNetsysAlarmVarFanId, dellNetPEMfgDate=dellNetPEMfgDate, dellNetSysAlarmFanTrayOrPsuClear=dellNetSysAlarmFanTrayOrPsuClear, dellNetSysAlarmVrrpGoMaster=dellNetSysAlarmVrrpGoMaster, dellNetPEType=dellNetPEType, dellNetChassisEntry=dellNetChassisEntry, dellNetFanTrayOperStatus=dellNetFanTrayOperStatus, dellNetStackUnitTable=dellNetStackUnitTable, dellNetStackUnitNumPowerSupplies=dellNetStackUnitNumPowerSupplies, dellNetPENumPluggableModules=dellNetPENumPluggableModules, dellNetPowerSupplyTable=dellNetPowerSupplyTable, dellNetSysCoresProcess=dellNetSysCoresProcess, dellNetFanTrayPiecePartID=dellNetFanTrayPiecePartID, dellNetSysAlarmFanTrayDown=dellNetSysAlarmFanTrayDown, dellNetFanTrayExpressServiceCode=dellNetFanTrayExpressServiceCode, dellNetPEPEID=dellNetPEPEID, dellNetSystemComponent=dellNetSystemComponent, dellNetProcessorTable=dellNetProcessorTable, dellNetSysAlarmMajorPS=dellNetSysAlarmMajorPS, dellNetSysAlarmPEDown=dellNetSysAlarmPEDown, dellNetStackUnitPiecePartID=dellNetStackUnitPiecePartID, dellNetPENumOfPorts=dellNetPENumOfPorts, dellNetPowerDeviceType=dellNetPowerDeviceType, dellNetChassisObject=dellNetChassisObject, dellNetStackObject=dellNetStackObject, dellNetCardTemp=dellNetCardTemp, dellNetSwModuleBootSelectorImgVersion=dellNetSwModuleBootSelectorImgVersion, dellNetSysCoresEntry=dellNetSysCoresEntry, dellNetSysIfType=dellNetSysIfType, dellNetSysIfEntry=dellNetSysIfEntry, dellNetSysAlarmVariable=dellNetSysAlarmVariable, dellNetSysAlarmVarInteger=dellNetSysAlarmVarInteger, dellNetSysAlarmPEUnitDown=dellNetSysAlarmPEUnitDown, dellNetStackUnitUpTime=dellNetStackUnitUpTime, dellNetSysAlarmCardReset=dellNetSysAlarmCardReset, dellNetStackUnitExpServiceCode=dellNetStackUnitExpServiceCode, dellNetChassisMibCompliances=dellNetChassisMibCompliances, dellNetCardVendorId=dellNetCardVendorId, dellNetStackPortLinkStatus=dellNetStackPortLinkStatus, dellNetPEPiecePartID=dellNetPEPiecePartID, dellNetStackUnitMgmtStatus=dellNetStackUnitMgmtStatus, dellNetSwModuleNextRebootImage=dellNetSwModuleNextRebootImage, dellNetChassisMacAddr=dellNetChassisMacAddr, dellNetSysAlarmRpmDown=dellNetSysAlarmRpmDown, dellNetSysAlarmExdCpuThreshold=dellNetSysAlarmExdCpuThreshold, dellNetCardTable=dellNetCardTable, dellNetCpuUtil1Min=dellNetCpuUtil1Min, dellNetChassisPPIDRev=dellNetChassisPPIDRev, dellNetCardType=dellNetCardType, dellNetProcessorEntry=dellNetProcessorEntry, dellNetPEBindCascadePortIfIndex=dellNetPEBindCascadePortIfIndex, dellNetComponentGroup=dellNetComponentGroup, dellNetSysSwCoresTable=dellNetSysSwCoresTable, dellNetSysAlarmClrCpuThreshold=dellNetSysAlarmClrCpuThreshold, dellNetStackPortTxErrorRate=dellNetStackPortTxErrorRate, dellNetSysAlarmVarChassisId=dellNetSysAlarmVarChassisId, dellNetPENumFanTrays=dellNetPENumFanTrays, dellNetPEUnitID=dellNetPEUnitID, dellNetStackUnitAdmMgmtPreference=dellNetStackUnitAdmMgmtPreference, dellNetSwModuleRuntimeImgVersion=dellNetSwModuleRuntimeImgVersion, dellNetSwModuleTable=dellNetSwModuleTable, dellNetSysAlarmCardMismatch=dellNetSysAlarmCardMismatch, dellNetChassisMib=dellNetChassisMib, dellNetPowerSupplyServiceTag=dellNetPowerSupplyServiceTag, dellNetStackPortEntry=dellNetStackPortEntry, dellNetSysAlarmCardProblem=dellNetSysAlarmCardProblem, dellNetChassisNumPowerSupplies=dellNetChassisNumPowerSupplies, dellNetStackUnitNumFanTrays=dellNetStackUnitNumFanTrays, dellNetSwModuleCurrentBootImage=dellNetSwModuleCurrentBootImage, dellNetFanDeviceIndex=dellNetFanDeviceIndex, dellNetSwModuleBootFlashImgVersion=dellNetSwModuleBootFlashImgVersion, dellNetSysAlarmMajorTemperatureHigh=dellNetSysAlarmMajorTemperatureHigh, dellNetSysAlarmMinorTemperatureClear=dellNetSysAlarmMinorTemperatureClear, dellNetPEBindPEIndex=dellNetPEBindPEIndex, dellNetPEExpServiceCode=dellNetPEExpServiceCode, dellNetStackUnitCodeVersion=dellNetStackUnitCodeVersion, dellNetSysAlarmVarPeId=dellNetSysAlarmVarPeId, dellNetCardChassisIndex=dellNetCardChassisIndex, dellNetNumChassis=dellNetNumChassis, dellNetCpuFlashUsageUtil=dellNetCpuFlashUsageUtil, dellNetPEProductOrder=dellNetPEProductOrder, dellNetSysIfXfpRecvPower=dellNetSysIfXfpRecvPower, dellNetSysAlarmAcDcMixedPowerSupplyDetect=dellNetSysAlarmAcDcMixedPowerSupplyDetect, dellNetCardNumOfPorts=dellNetCardNumOfPorts, PYSNMP_MODULE_ID=dellNetChassisMib, dellNetStackUnitMfgDate=dellNetStackUnitMfgDate, dellNetStackUnitProductRev=dellNetStackUnitProductRev, dellNetCardPiecePartID=dellNetCardPiecePartID, dellNetCardCountryCode=dellNetCardCountryCode, dellNetSysAlarmTaskTerm=dellNetSysAlarmTaskTerm, dellNetCardEntry=dellNetCardEntry, dellNetChassisTable=dellNetChassisTable, dellNetStackUnitPartNum=dellNetStackUnitPartNum, dellNetStackPortLinkSpeed=dellNetStackPortLinkSpeed, dellNetSysAlarmPEUp=dellNetSysAlarmPEUp, dellNetCardDescription=dellNetCardDescription, dellNetChassisVendorId=dellNetChassisVendorId, dellNetPowerSupplyIndex=dellNetPowerSupplyIndex, dellNetSysAlarmPowersupplyClear=dellNetSysAlarmPowersupplyClear, dellNetChassisNumLineCardSlots=dellNetChassisNumLineCardSlots, dellNetPEBindingEntry=dellNetPEBindingEntry, dellNetSwModuleEntry=dellNetSwModuleEntry, dellNetPEDescription=dellNetPEDescription, dellNetSysAlarmMajorPSClr=dellNetSysAlarmMajorPSClr, dellNetPEEntry=dellNetPEEntry, dellNetProcessorMemSize=dellNetProcessorMemSize, dellNetStackPortTxTotalErrors=dellNetStackPortTxTotalErrors, dellNetSysCoresTimeCreated=dellNetSysCoresTimeCreated, dellNetMaxStackableUnits=dellNetMaxStackableUnits, dellNetProcessorDeviceIndex=dellNetProcessorDeviceIndex, dellNetSysAlarmPowersupplyDown=dellNetSysAlarmPowersupplyDown, dellNetStackUnitModelId=dellNetStackUnitModelId, dellNetMaxNumChassis=dellNetMaxNumChassis, dellNetSysAlarmClrMemThreshold=dellNetSysAlarmClrMemThreshold, dellNetSysAlarmMinorFanBadClear=dellNetSysAlarmMinorFanBadClear, dellNetSysAlarmMacStationMove=dellNetSysAlarmMacStationMove, dellNetSysAlarmCardRemove=dellNetSysAlarmCardRemove, dellNetCpuUtilEntry=dellNetCpuUtilEntry, dellNetStackUnitIndex=dellNetStackUnitIndex, dellNetStackUnitSerialNumber=dellNetStackUnitSerialNumber, dellNetSysAlarmCardVersionMismatch=dellNetSysAlarmCardVersionMismatch, dellNetPETemp=dellNetPETemp, dellNetSysAlarmTaskSuspend=dellNetSysAlarmTaskSuspend, dellNetStackPortTable=dellNetStackPortTable, dellNetCardProductRev=dellNetCardProductRev, dellNetStackUnitDescription=dellNetStackUnitDescription, dellNetStackUnitVendorId=dellNetStackUnitVendorId, dellNetPEPPIDRevision=dellNetPEPPIDRevision, dellNetChassisNotificationGroup=dellNetChassisNotificationGroup, dellNetPowerSupplyType=dellNetPowerSupplyType, dellNetSysAlarmRpmUp=dellNetSysAlarmRpmUp, dellNetSysAlarmFanTrayOrPsuDown=dellNetSysAlarmFanTrayOrPsuDown, dellNetCardProductOrder=dellNetCardProductOrder, dellNetStackUnitStatus=dellNetStackUnitStatus, dellNetProcessorDeviceType=dellNetProcessorDeviceType, dellNetChassisExpServiceCode=dellNetChassisExpServiceCode, dellNetCardExpServiceCode=dellNetCardExpServiceCode, dellNetFanDeviceType=dellNetFanDeviceType, dellNetChassisMibCompliance=dellNetChassisMibCompliance, dellNetPETable=dellNetPETable, dellNetChassisMibConformance=dellNetChassisMibConformance, dellNetSysAlarmVarString=dellNetSysAlarmVarString, dellNetStackUnitMacAddress=dellNetStackUnitMacAddress, dellNetStackUnitCountryCode=dellNetStackUnitCountryCode, dellNetChassisSerialNumber=dellNetChassisSerialNumber, dellNetPEProductRev=dellNetPEProductRev, dellNetPowerSupplyUsage=dellNetPowerSupplyUsage, dellNetCardStatus=dellNetCardStatus, dellNetChassisPartNum=dellNetChassisPartNum, dellNetCardPPIDRevision=dellNetCardPPIDRevision, dellNetPECountryCode=dellNetPECountryCode, dellNetPowerSupplyEntry=dellNetPowerSupplyEntry, dellNetChassisServiceTag=dellNetChassisServiceTag, dellNetPowerSupplyPiecePartID=dellNetPowerSupplyPiecePartID, dellNetSysAlarmPEUnitUp=dellNetSysAlarmPEUnitUp, dellNetPEBindingTable=dellNetPEBindingTable, dellNetSysAlarmVrrpGiveupMaster=dellNetSysAlarmVrrpGiveupMaster, dellNetPEStatus=dellNetPEStatus, dellNetFanTrayIndex=dellNetFanTrayIndex, dellNetStackUnitTemp=dellNetStackUnitTemp, dellNetSysAlarmSRAMParityErrorDetect=dellNetSysAlarmSRAMParityErrorDetect, dellNetStackUnitHwMgmtPreference=dellNetStackUnitHwMgmtPreference, dellNetChassisProductRev=dellNetChassisProductRev, dellNetSysAlarmVarSlot=dellNetSysAlarmVarSlot, dellNetSysCoresStackUnitNumber=dellNetSysCoresStackUnitNumber, dellNetCardPartNum=dellNetCardPartNum, dellNetPowerDeviceIndex=dellNetPowerDeviceIndex, dellNetSysAlarmMinorPS=dellNetSysAlarmMinorPS, dellNetPowerSupplyOperStatus=dellNetPowerSupplyOperStatus, dellNetSysAlarmCardDown=dellNetSysAlarmCardDown, dellNetCpuUtilMemUsage=dellNetCpuUtilMemUsage, dellNetSysAlarmMinorTemperatureHigh=dellNetSysAlarmMinorTemperatureHigh, dellNetChassisNumFanTrays=dellNetChassisNumFanTrays, dellNetStackPortRxTotalErrors=dellNetStackPortRxTotalErrors, dellNetPEIndex=dellNetPEIndex, dellNetProcessorModule=dellNetProcessorModule, dellNetProcessorUpTime=dellNetProcessorUpTime, dellNetChassisMfgDate=dellNetChassisMfgDate, dellNetSysAlarmExdMemThreshold=dellNetSysAlarmExdMemThreshold, dellNetProcessorIndex=dellNetProcessorIndex, dellNetCardIndex=dellNetCardIndex, dellNetStackUnitPPIDRevision=dellNetStackUnitPPIDRevision, dellNetSysIfXfpRecvTemp=dellNetSysIfXfpRecvTemp, dellNetSysAlarmCutoff=dellNetSysAlarmCutoff, dellNetsysAlarmVarPsuId=dellNetsysAlarmVarPsuId, dellNetSysAlarmCardOffline=dellNetSysAlarmCardOffline, dellNetSysCoresInstance=dellNetSysCoresInstance, dellNetFanTrayServiceTag=dellNetFanTrayServiceTag, dellNetSysAlarmVarPort=dellNetSysAlarmVarPort, dellNetNumStackUnits=dellNetNumStackUnits, dellNetStackPortRunningMode=dellNetStackPortRunningMode, dellNetPEPartNum=dellNetPEPartNum, dellNetSysAlarmMibNotifications=dellNetSysAlarmMibNotifications, dellNetSysIfTable=dellNetSysIfTable, dellNetStackUnitIndexNext=dellNetStackUnitIndexNext, dellNetStackPortRxDataRate=dellNetStackPortRxDataRate, dellNetFanTrayTable=dellNetFanTrayTable, dellNetFanTrayEntry=dellNetFanTrayEntry, dellNetSysIfAdminStatus=dellNetSysIfAdminStatus, dellNetChassisNumSlots=dellNetChassisNumSlots, dellNetSysSnmpIpAclDeny=dellNetSysSnmpIpAclDeny, dellNetDeviceType=dellNetDeviceType, dellNetSwModuleInPartitionBImgVers=dellNetSwModuleInPartitionBImgVers, dellNetSysAlarmMajorTemperatureClear=dellNetSysAlarmMajorTemperatureClear, dellNetCpuUtilTable=dellNetCpuUtilTable, dellNetStackUnitEntry=dellNetStackUnitEntry, dellNetCardMfgDate=dellNetCardMfgDate, dellNetSwModuleInPartitionAImgVers=dellNetSwModuleInPartitionAImgVers, dellNetStackPortRxErrorRate=dellNetStackPortRxErrorRate, dellNetCpuUtil5Min=dellNetCpuUtil5Min, dellNetPowerSupplyExpressServiceCode=dellNetPowerSupplyExpressServiceCode, dellNetStackPortIndex=dellNetStackPortIndex, dellNetChassisMibGroups=dellNetChassisMibGroups, dellNetStackUnitServiceTag=dellNetStackUnitServiceTag, dellNetCpuUtil5Sec=dellNetCpuUtil5Sec, dellNetPowerSupplyPPIDRevision=dellNetPowerSupplyPPIDRevision, dellNetStackUnitNumOfPorts=dellNetStackUnitNumOfPorts, dellNetSysAlarmCardUp=dellNetSysAlarmCardUp, dellNetSysAlarmMinorFanBad=dellNetSysAlarmMinorFanBad, dellNetSysAlarmRpmPrimary=dellNetSysAlarmRpmPrimary, dellNetSysParameter=dellNetSysParameter, dellNetChassisIndex=dellNetChassisIndex, dellNetSysAlarmUnsupportedOptic=dellNetSysAlarmUnsupportedOptic, dellNetPENumPowerSupplies=dellNetPENumPowerSupplies, dellNetSysObject=dellNetSysObject, dellNetStackPortTxDataRate=dellNetStackPortTxDataRate, dellNetSysIfName=dellNetSysIfName, dellNetsysAlarmVarFanTrayId=dellNetsysAlarmVarFanTrayId, dellNetStackUnitProductOrder=dellNetStackUnitProductOrder, dellNetPEVendorId=dellNetPEVendorId, dellNetPEServiceTag=dellNetPEServiceTag, dellNetSysIfOperStatus=dellNetSysIfOperStatus, dellNetStackUnitNumber=dellNetStackUnitNumber, dellNetSysAlarmObjects=dellNetSysAlarmObjects, dellNetSysAlarmMinorPSClr=dellNetSysAlarmMinorPSClr, dellNetSysAlarmFanTrayClear=dellNetSysAlarmFanTrayClear, dellNetSystemGroup=dellNetSystemGroup, dellNetStackPortConfiguredMode=dellNetStackPortConfiguredMode, dellNetChassisCountryCode=dellNetChassisCountryCode, dellNetSwModuleRuntimeImgDate=dellNetSwModuleRuntimeImgDate, dellNetChassisType=dellNetChassisType, dellNetCardServiceTag=dellNetCardServiceTag)
