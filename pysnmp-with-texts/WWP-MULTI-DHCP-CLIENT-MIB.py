#
# PySNMP MIB module WWP-MULTI-DHCP-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-MULTI-DHCP-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter32, iso, MibIdentifier, ObjectIdentity, Integer32, ModuleIdentity, Counter64, Gauge32, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "iso", "MibIdentifier", "ObjectIdentity", "Integer32", "ModuleIdentity", "Counter64", "Gauge32", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpMultiDhcpClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 42))
wwpMultiDhcpClientMIB.setRevisions(('2002-11-01 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpMultiDhcpClientMIB.setRevisionsDescriptions(('Initial creation.',))
if mibBuilder.loadTexts: wwpMultiDhcpClientMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpMultiDhcpClientMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpMultiDhcpClientMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpMultiDhcpClientMIB.setDescription('The MIB module to manage multiple dhcp clients on WWP products.')
wwpMultiDhcpClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1))
wwpMultiDhcpClient = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1))
wwpMultiDhcpClientMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 2))
wwpMultiDhcpClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 2, 0))
wwpMultiDhcpClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 3))
wwpMultiDhcpClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 3, 1))
wwpMultiDhcpClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 42, 3, 2))
wwpMultiDhcpClientNumber = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpMultiDhcpClientNumber.setStatus('current')
if mibBuilder.loadTexts: wwpMultiDhcpClientNumber.setDescription('The number of dhcp clients (regardless of their current state) present on this system.')
wwpMultiDhcpClientTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2), )
if mibBuilder.loadTexts: wwpMultiDhcpClientTable.setStatus('current')
if mibBuilder.loadTexts: wwpMultiDhcpClientTable.setDescription('A list of dhcp client entries.The number of entries is given by the value of wwpMultiDhcpClientNumber.')
wwpMultiDhcpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1), ).setIndexNames((0, "WWP-MULTI-DHCP-CLIENT-MIB", "wwpDhcpIfIndex"))
if mibBuilder.loadTexts: wwpMultiDhcpClientEntry.setStatus('current')
if mibBuilder.loadTexts: wwpMultiDhcpClientEntry.setDescription('An entry containing management information applicable to dhcp client.')
wwpDhcpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpIfIndex.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpIfIndex.setDescription('The value of the instance of the ifIndex object, defined in MIB-II, for the interface corresponding to this dhcp interface.')
wwpDhcpIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpIfName.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpIfName.setDescription('The ifDesc associated with this ifIndex.')
wwpDhcpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpDhcpStatus.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpStatus.setDescription("Setting this object to 'enable' will enable the dhcp client on this interface.")
wwpDhcpState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("bound", 1), ("disabled", 2), ("inform", 3), ("init", 4), ("rebinding", 5), ("renewing", 6), ("requesting", 7), ("selecting", 8), ("unknown", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpState.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpState.setDescription('The current state of the dhcp client on this interface as per RFC2131.')
wwpDhcpLeaseTimeRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(45)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpDhcpLeaseTimeRequested.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpLeaseTimeRequested.setDescription('The requested lease time option to be used with DHCPDISCOVER or DHCPREQUEST messages on this interface.')
wwpDhcpLeaseOffered = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpLeaseOffered.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpLeaseOffered.setDescription('The lease time authorized by the server.')
wwpDhcpLeaseRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpLeaseRemaining.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpLeaseRemaining.setDescription('The time remaining for the lease to expire.')
wwpDhcpDiscoveryMsgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpDhcpDiscoveryMsgInterval.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpDiscoveryMsgInterval.setDescription('The time interval for discovery messages issued before the client receives the first reply.')
wwpDhcpRenewalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpRenewalTime.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpRenewalTime.setDescription('The number of seconds before the client begins to renew its address lease with the dhcp server. This time is a function typically 50% of the full configured duration (or lease time) for a client lease. Referred to as T1 in RFC2131.')
wwpDhcpRebindingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpRebindingTime.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpRebindingTime.setDescription('The number of seconds before the client enters the rebinding state if it has not renewed its current address lease with the dhcp server. This time is a function (typically, 87.5%) of the full configured duration (or lease time) for a client lease. Referred to as T2 in RFC2131.')
wwpDhcpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpDhcpServerAddress.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpServerAddress.setDescription('The IP address that identifies the dhcp server.')
wwpDhcpRenewLease = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpDhcpRenewLease.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpRenewLease.setDescription('Setting this object to true will force the dhcp client to renew its lease.')
wwpDhcpReleaseLease = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 42, 1, 1, 2, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpDhcpReleaseLease.setStatus('current')
if mibBuilder.loadTexts: wwpDhcpReleaseLease.setDescription('Setting this object to true will force the dhcp client to release its lease, if the client dhcp is in the bound state')
mibBuilder.exportSymbols("WWP-MULTI-DHCP-CLIENT-MIB", wwpDhcpLeaseOffered=wwpDhcpLeaseOffered, wwpMultiDhcpClientMIBGroups=wwpMultiDhcpClientMIBGroups, wwpDhcpLeaseRemaining=wwpDhcpLeaseRemaining, wwpDhcpServerAddress=wwpDhcpServerAddress, wwpMultiDhcpClientMIBNotifications=wwpMultiDhcpClientMIBNotifications, wwpDhcpState=wwpDhcpState, PYSNMP_MODULE_ID=wwpMultiDhcpClientMIB, wwpMultiDhcpClient=wwpMultiDhcpClient, wwpDhcpIfName=wwpDhcpIfName, wwpMultiDhcpClientMIBNotificationPrefix=wwpMultiDhcpClientMIBNotificationPrefix, wwpDhcpIfIndex=wwpDhcpIfIndex, wwpMultiDhcpClientMIBObjects=wwpMultiDhcpClientMIBObjects, wwpMultiDhcpClientTable=wwpMultiDhcpClientTable, wwpDhcpRenewLease=wwpDhcpRenewLease, wwpMultiDhcpClientNumber=wwpMultiDhcpClientNumber, wwpMultiDhcpClientMIBConformance=wwpMultiDhcpClientMIBConformance, wwpMultiDhcpClientMIBCompliances=wwpMultiDhcpClientMIBCompliances, wwpDhcpLeaseTimeRequested=wwpDhcpLeaseTimeRequested, wwpDhcpReleaseLease=wwpDhcpReleaseLease, wwpDhcpDiscoveryMsgInterval=wwpDhcpDiscoveryMsgInterval, wwpMultiDhcpClientMIB=wwpMultiDhcpClientMIB, wwpDhcpStatus=wwpDhcpStatus, wwpMultiDhcpClientEntry=wwpMultiDhcpClientEntry, wwpDhcpRenewalTime=wwpDhcpRenewalTime, wwpDhcpRebindingTime=wwpDhcpRebindingTime)
