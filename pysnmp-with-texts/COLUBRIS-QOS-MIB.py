#
# PySNMP MIB module COLUBRIS-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COLUBRIS-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:25:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ColubrisPriorityQueue, = mibBuilder.importSymbols("COLUBRIS-TC", "ColubrisPriorityQueue")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, NotificationType, Bits, TimeTicks, Counter64, MibIdentifier, ModuleIdentity, Counter32, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "NotificationType", "Bits", "TimeTicks", "Counter64", "MibIdentifier", "ModuleIdentity", "Counter32", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
colubrisQOS = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 13))
if mibBuilder.loadTexts: colubrisQOS.setLastUpdated('200407200000Z')
if mibBuilder.loadTexts: colubrisQOS.setOrganization('Colubris Networks, Inc.')
if mibBuilder.loadTexts: colubrisQOS.setContactInfo('Colubris Networks Postal: 200 West Street Ste 300 Waltham, Massachusetts 02451-1121 UNITED STATES Phone: +1 781 684 0001 Fax: +1 781 684 0009 E-mail: cn-snmp@colubris.com')
if mibBuilder.loadTexts: colubrisQOS.setDescription('The MIB module for enterprise specific QoS options.')
colubrisQOSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1))
coQOSStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1))
coQOSCountersTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1), )
if mibBuilder.loadTexts: coQOSCountersTable.setStatus('current')
if mibBuilder.loadTexts: coQOSCountersTable.setDescription('Group containing attributes that are MAC counters. In tabular form to allow multiple instances on an agent.')
coQOSCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-QOS-MIB", "coQOSQueueId"))
if mibBuilder.loadTexts: coQOSCountersEntry.setStatus('current')
if mibBuilder.loadTexts: coQOSCountersEntry.setDescription('An entry in the coQOSCountersEntry Table. ifIndex - Each 802.11 interface is represented by an ifEntry. Interface tables in this MIB module are indexed by ifIndex.')
coQOSQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 1), ColubrisPriorityQueue())
if mibBuilder.loadTexts: coQOSQueueId.setStatus('current')
if mibBuilder.loadTexts: coQOSQueueId.setDescription('Queue identifier used to access the statistics.')
coQOSTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSTransmittedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coQOSTransmittedFrameCount.setDescription('This counter increments only when an acknowledged MPDU with an individual address in address 1 field, or MPDU with a multicast address in the address 1 field of type Data or Management is transmitted.')
coQOSMulticastTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMulticastTransmittedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coQOSMulticastTransmittedFrameCount.setDescription('This counter increments only when the multicast bit is set in the destination MAC address of a successfully transmitted MSDU. When operating as a STA in an ESS, where these frames are directed to the AP, this implies having received an acknowledgment to all associated MPDUs.')
coQOSFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSFailedCount.setStatus('current')
if mibBuilder.loadTexts: coQOSFailedCount.setDescription('This counter increments when an MSDU is not transmitted successfully due to the number of transmit attempts exceeding either the coQOSShortRetryLimit or coQOSLongRetryLimit.')
coQOSRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSRetryCount.setStatus('current')
if mibBuilder.loadTexts: coQOSRetryCount.setDescription('This counter increments when an MSDU is successfully transmitted after one or more retransmissions. This is basically a total of single and multiple retry counts.')
coQOSMultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMultipleRetryCount.setStatus('current')
if mibBuilder.loadTexts: coQOSMultipleRetryCount.setDescription('This counter increments when an MSDU is successfully transmitted after more than one retransmission.')
coQOSFrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSFrameDuplicateCount.setStatus('current')
if mibBuilder.loadTexts: coQOSFrameDuplicateCount.setDescription('This counter increments when a frame is received that the Sequence Control field indicates is a duplicate.')
coQOSReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSReceivedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coQOSReceivedFrameCount.setDescription('This counter shall be incremented for each successfully received MPDU of type Data or Management. This is basically a total of unicast and multicast received frames.')
coQOSMulticastReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMulticastReceivedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coQOSMulticastReceivedFrameCount.setDescription('This counter incremenst when an MPDU is received with the multicast bit set in the destination MAC address.')
coQOSConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 2))
coQOSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 2, 1))
coQOSCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 2, 2))
coQOSCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 2, 2, 1)).setObjects(("COLUBRIS-QOS-MIB", "coQOSCountersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coQOSCompliance = coQOSCompliance.setStatus('current')
if mibBuilder.loadTexts: coQOSCompliance.setDescription('The compliance statement for SNMPv2 entities that implement the IEEE 802.11 MIB.')
coQOSCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 13, 1, 2, 1, 1)).setObjects(("COLUBRIS-QOS-MIB", "coQOSTransmittedFrameCount"), ("COLUBRIS-QOS-MIB", "coQOSMulticastTransmittedFrameCount"), ("COLUBRIS-QOS-MIB", "coQOSFailedCount"), ("COLUBRIS-QOS-MIB", "coQOSRetryCount"), ("COLUBRIS-QOS-MIB", "coQOSMultipleRetryCount"), ("COLUBRIS-QOS-MIB", "coQOSFrameDuplicateCount"), ("COLUBRIS-QOS-MIB", "coQOSReceivedFrameCount"), ("COLUBRIS-QOS-MIB", "coQOSMulticastReceivedFrameCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coQOSCountersGroup = coQOSCountersGroup.setStatus('current')
if mibBuilder.loadTexts: coQOSCountersGroup.setDescription('Provides the necessary support for QOS counters.')
mibBuilder.exportSymbols("COLUBRIS-QOS-MIB", coQOSConformance=coQOSConformance, coQOSCountersTable=coQOSCountersTable, coQOSFailedCount=coQOSFailedCount, coQOSStatistics=coQOSStatistics, coQOSMulticastTransmittedFrameCount=coQOSMulticastTransmittedFrameCount, colubrisQOS=colubrisQOS, colubrisQOSMIBObjects=colubrisQOSMIBObjects, coQOSQueueId=coQOSQueueId, PYSNMP_MODULE_ID=colubrisQOS, coQOSGroups=coQOSGroups, coQOSTransmittedFrameCount=coQOSTransmittedFrameCount, coQOSFrameDuplicateCount=coQOSFrameDuplicateCount, coQOSCompliance=coQOSCompliance, coQOSMulticastReceivedFrameCount=coQOSMulticastReceivedFrameCount, coQOSMultipleRetryCount=coQOSMultipleRetryCount, coQOSCompliances=coQOSCompliances, coQOSCountersEntry=coQOSCountersEntry, coQOSReceivedFrameCount=coQOSReceivedFrameCount, coQOSRetryCount=coQOSRetryCount, coQOSCountersGroup=coQOSCountersGroup)
