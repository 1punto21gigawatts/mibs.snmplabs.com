#
# PySNMP MIB module CISCO-APPLICATION-ACCELERATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-APPLICATION-ACCELERATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:50:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetPortNumber, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, iso, Counter64, Gauge32, ModuleIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Integer32, ObjectIdentity, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "Counter64", "Gauge32", "ModuleIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Integer32", "ObjectIdentity", "NotificationType", "Counter32")
TextualConvention, DateAndTime, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TruthValue", "DisplayString")
ciscoApplicationAccelerationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 594))
ciscoApplicationAccelerationMIB.setRevisions(('2006-10-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoApplicationAccelerationMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoApplicationAccelerationMIB.setLastUpdated('200610300000Z')
if mibBuilder.loadTexts: ciscoApplicationAccelerationMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoApplicationAccelerationMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-avs@cisco.com')
if mibBuilder.loadTexts: ciscoApplicationAccelerationMIB.setDescription("This is a MIB for managing Application Acceleration System(s). This MIB includes instrumentation for providing the performance statistics and status of the condenser which is the core of the Application Acceleration System. A condenser is a software accelerator that applies several optimization techniques to accelerate Web application access. The condenser application accelerates and optimizes any HTML or XML-based application over HTTP resulting in response time improvements and decrease in bandwidth requirements. This application shall reside in a content switching module or appliance. Acronyms and terminology: HTTP In this MIB it refers to both secure ('HTTPS') as well as non-secure ('HTTP') web traffic. IMS If-Modified-Since is an HTTP request type. The If-Modified-Since request-header field is used with a method to make it conditional: if the requested variant has not been modified since the time specified in this field, an entity will not be returned from the server; instead, a '304' ('not modified') response will be returned without any message-body. Delta It is the ability of condenser to dynamically update client browser caches directly with content differences, or deltas, resulting in faster page downloads. FlashForward FlashForward is a object acceleration technology that eliminates network delays associated with embedded cacheable web objects such as images, style sheets, JavaScript files, etc. FlashForward object acceleration places the responsibility for validating object freshness on the condenser, rather than on the client, making it more efficient. With FlashForward, the client never needs to validate the freshness of browser-cached objects with the origin server, thus significantly accelerating page downloads, and reducing both upstream and downstream traffic associated with object validation requests. Transformation It is the change applied on the incoming web traffic, as part of specific optimization method like delta or flashforward, to achieve web traffic acceleration. Objects All the non-textual embedded components of a web page are referred to as Objects in this MIB. Condensable It refers to all objects that can be subjected to optimization by condenser. Non-Condensable It refers to all objects that cannot be subjected to optimization by condenser. REFERENCE [1] Hypertext Transfer Protocol -- HTTP/1.1, RFC 2616 Section 14.25 If-Modified-Since. ")
caaMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 0))
caaMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 1))
caaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 2))
caaStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1))
caaNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 2))
class CaaState(TextualConvention, Integer32):
    description = "This textual convention provides the current state of the condenser. The semantics are as follows. 'active' : condenser is running and serving HTTP requests. 'impaired' : condenser is running, but not serving any HTTP requests. 'down' : condenser is not running."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("active", 1), ("impaired", 2), ("down", 3))

caaStatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1), )
if mibBuilder.loadTexts: caaStatTable.setStatus('current')
if mibBuilder.loadTexts: caaStatTable.setDescription('This table provides the information about the performance related statistics and the status of the condenser on this system. An entry is added to this system automatically by the agent when the system boots up. ')
caaStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-APPLICATION-ACCELERATION-MIB", "caaPort"))
if mibBuilder.loadTexts: caaStatEntry.setStatus('current')
if mibBuilder.loadTexts: caaStatEntry.setDescription('An entry in caaStatTable and corresponds to the performance statistics and status of a condenser on the system.')
caaPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 1), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: caaPort.setStatus('current')
if mibBuilder.loadTexts: caaPort.setDescription('This object represents the port on which the condenser listens.')
caaState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 2), CaaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caaState.setStatus('current')
if mibBuilder.loadTexts: caaState.setDescription('This object represents the current state of the condenser.')
caaRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 3), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaRequests.setStatus('current')
if mibBuilder.loadTexts: caaRequests.setDescription('This object represents the total number of end-user HTTP requests the condenser has received.')
caaNoncondensableRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 4), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaNoncondensableRequests.setStatus('current')
if mibBuilder.loadTexts: caaNoncondensableRequests.setDescription('This object represents the total number of end-user HTTP requests the condenser has received, that cannot be optimized.')
caaRequestedObjectSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaRequestedObjectSize.setStatus('current')
if mibBuilder.loadTexts: caaRequestedObjectSize.setDescription('This object represents the accumulated size (in bytes) of each end-user requested object.')
caaFinalResponseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaFinalResponseSize.setStatus('current')
if mibBuilder.loadTexts: caaFinalResponseSize.setDescription('This object represents the accumulated size (in bytes) of each responses, both for condensable and non-condensable end-user HTTP request.')
caaLastRestartedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caaLastRestartedTime.setStatus('current')
if mibBuilder.loadTexts: caaLastRestartedTime.setDescription('This object represents the time when the condenser was last started.')
caaTransformed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 8), Counter32()).setUnits('transformations').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaTransformed.setStatus('current')
if mibBuilder.loadTexts: caaTransformed.setDescription('This object represents the total number of successful transformations for FlashForward Objects.')
caaUntransformed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 9), Counter32()).setUnits('transformations').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaUntransformed.setStatus('current')
if mibBuilder.loadTexts: caaUntransformed.setDescription('This object represents the total number of unsuccessful transformations for FlashForward Objects.')
caaTransformedObjectRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 10), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaTransformedObjectRequests.setStatus('current')
if mibBuilder.loadTexts: caaTransformedObjectRequests.setDescription('This object represents the total number of HTTP requests (excluding the IMS requests) for the transformed FlashForward objects.')
caaTransformedObjectIMSRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 11), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaTransformedObjectIMSRequests.setStatus('current')
if mibBuilder.loadTexts: caaTransformedObjectIMSRequests.setDescription('This object represents the total number of IMS requests for those transformed FlashForward objects.')
caaStaticObjectHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 12), Counter32()).setUnits('cache-hits').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaStaticObjectHits.setStatus('current')
if mibBuilder.loadTexts: caaStaticObjectHits.setDescription("This object represents the total number of cacheable objects served from the cache, excluding the '304' ('not modified') replies.")
caaStaticObjectHitSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 13), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaStaticObjectHitSize.setStatus('current')
if mibBuilder.loadTexts: caaStaticObjectHitSize.setDescription("This object represents the accumulated size (in bytes) of the cacheable objects served from the cache, excluding '304' ('not modified') replies.")
caaStaticObjectMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 14), Counter32()).setUnits('cache-misses').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaStaticObjectMisses.setStatus('current')
if mibBuilder.loadTexts: caaStaticObjectMisses.setDescription('This object represents the total number of cacheable objects not found in the cache.')
caaStaticObjectMissSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaStaticObjectMissSize.setStatus('current')
if mibBuilder.loadTexts: caaStaticObjectMissSize.setDescription('This object represents the accumulated size (in bytes) of the cacheable objects not found in the cache.')
caaRefreshHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 16), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaRefreshHits.setStatus('current')
if mibBuilder.loadTexts: caaRefreshHits.setDescription("This object represents the total number of requests for stale objects that have the responses from the origin server as 'not modified'.")
caaIMSHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 17), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaIMSHits.setStatus('current')
if mibBuilder.loadTexts: caaIMSHits.setDescription('This object represents the total number of IMS requests for valid copies of objects in the cache.')
caaIMSMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 18), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaIMSMisses.setStatus('current')
if mibBuilder.loadTexts: caaIMSMisses.setDescription('This object represents the total number of IMS requests for objects that either do not exist or are stale in the cache.')
caaDirectRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 19), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaDirectRequests.setStatus('current')
if mibBuilder.loadTexts: caaDirectRequests.setDescription('This object represents the total number of non-cacheable object requests.')
caaRequestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 20), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaRequestSize.setStatus('current')
if mibBuilder.loadTexts: caaRequestSize.setDescription('This object represents the accumulated size (in bytes) of each requests, both for condensable and non-condensable.')
caaDeltaAbandons = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 1, 1, 1, 21), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: caaDeltaAbandons.setStatus('current')
if mibBuilder.loadTexts: caaDeltaAbandons.setDescription('This object represents the total number of abandons of delta optimization requests.')
caaStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 594, 1, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: caaStateChangeNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: caaStateChangeNotifEnabled.setDescription("This object represents the status of generation of the caaStateChange notification in response to a change in the state of condenser. A value of 'true' indicates that the notification generation is enabled and the caaStateChange notification is to be generated when the state changes. A value of 'false' indicates that the notification generation is disabled. ")
caaStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 594, 0, 1)).setObjects(("CISCO-APPLICATION-ACCELERATION-MIB", "caaState"))
if mibBuilder.loadTexts: caaStateChange.setStatus('current')
if mibBuilder.loadTexts: caaStateChange.setDescription('This object represents the notification to be generated when a condenser undergoes a state change. caaState represents the new state of the condenser.')
caaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 1))
caaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 2))
caaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 1, 1)).setObjects(("CISCO-APPLICATION-ACCELERATION-MIB", "caaMIBStatsGroup"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaMIBNotificationsGroup"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaMIBNotifObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caaMIBCompliance = caaMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: caaMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoApplicationAccelerationMIB module. ')
caaMIBStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 2, 1)).setObjects(("CISCO-APPLICATION-ACCELERATION-MIB", "caaState"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaRequests"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaNoncondensableRequests"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaRequestedObjectSize"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaFinalResponseSize"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaLastRestartedTime"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaTransformed"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaUntransformed"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaTransformedObjectRequests"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaTransformedObjectIMSRequests"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaStaticObjectHits"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaStaticObjectHitSize"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaStaticObjectMisses"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaStaticObjectMissSize"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaRefreshHits"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaIMSHits"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaIMSMisses"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaDirectRequests"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaRequestSize"), ("CISCO-APPLICATION-ACCELERATION-MIB", "caaDeltaAbandons"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caaMIBStatsGroup = caaMIBStatsGroup.setStatus('current')
if mibBuilder.loadTexts: caaMIBStatsGroup.setDescription('This collection of objects represent the performance statistics for a condenser.')
caaMIBNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 2, 2)).setObjects(("CISCO-APPLICATION-ACCELERATION-MIB", "caaStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caaMIBNotificationsGroup = caaMIBNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: caaMIBNotificationsGroup.setDescription('This collection of objects represent the notifications generated by the system to provide information about the condensers.')
caaMIBNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 594, 2, 2, 3)).setObjects(("CISCO-APPLICATION-ACCELERATION-MIB", "caaStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caaMIBNotifObjectGroup = caaMIBNotifObjectGroup.setStatus('current')
if mibBuilder.loadTexts: caaMIBNotifObjectGroup.setDescription('This collection of objects represent the information carried by those condenser-related notifications generated by the system.')
mibBuilder.exportSymbols("CISCO-APPLICATION-ACCELERATION-MIB", caaStatTable=caaStatTable, caaStateChange=caaStateChange, caaMIBGroups=caaMIBGroups, caaMIBNotificationsGroup=caaMIBNotificationsGroup, caaStaticObjectHitSize=caaStaticObjectHitSize, caaMIBConformance=caaMIBConformance, caaStaticObjectMisses=caaStaticObjectMisses, caaUntransformed=caaUntransformed, caaTransformed=caaTransformed, caaNoncondensableRequests=caaNoncondensableRequests, caaTransformedObjectRequests=caaTransformedObjectRequests, caaMIBNotifObjectGroup=caaMIBNotifObjectGroup, caaStaticObjectHits=caaStaticObjectHits, caaNotificationObjects=caaNotificationObjects, caaFinalResponseSize=caaFinalResponseSize, caaStats=caaStats, caaTransformedObjectIMSRequests=caaTransformedObjectIMSRequests, caaRefreshHits=caaRefreshHits, caaStaticObjectMissSize=caaStaticObjectMissSize, caaMIBStatsGroup=caaMIBStatsGroup, ciscoApplicationAccelerationMIB=ciscoApplicationAccelerationMIB, caaDirectRequests=caaDirectRequests, caaRequestSize=caaRequestSize, caaMIBObjects=caaMIBObjects, caaStatEntry=caaStatEntry, CaaState=CaaState, caaRequestedObjectSize=caaRequestedObjectSize, caaMIBCompliances=caaMIBCompliances, caaState=caaState, caaMIBCompliance=caaMIBCompliance, caaPort=caaPort, caaDeltaAbandons=caaDeltaAbandons, caaRequests=caaRequests, caaStateChangeNotifEnabled=caaStateChangeNotifEnabled, caaIMSHits=caaIMSHits, PYSNMP_MODULE_ID=ciscoApplicationAccelerationMIB, caaMIBNotifications=caaMIBNotifications, caaIMSMisses=caaIMSMisses, caaLastRestartedTime=caaLastRestartedTime)
