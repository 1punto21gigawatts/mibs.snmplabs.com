#
# PySNMP MIB module IDIRECT-REMOTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IDIRECT-REMOTE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:51:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Gauge32, IpAddress, ObjectIdentity, TimeTicks, Bits, enterprises, Counter64, Unsigned32, NotificationType, MibIdentifier, Integer32, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "IpAddress", "ObjectIdentity", "TimeTicks", "Bits", "enterprises", "Counter64", "Unsigned32", "NotificationType", "MibIdentifier", "Integer32", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
iDirectMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13732))
if mibBuilder.loadTexts: iDirectMIB.setLastUpdated('1101062010Z')
if mibBuilder.loadTexts: iDirectMIB.setOrganization('iDirect Technologies, Inc.')
if mibBuilder.loadTexts: iDirectMIB.setContactInfo('Postal: 13865 Sunrise Valley Drive Herndon, VA. 20171 USA Phone: (703)648-8000 Web: www.idirect.net')
if mibBuilder.loadTexts: iDirectMIB.setDescription('This MIB module defines the iDirect SNMP module. iDX 3.3.0.0 ')
iDirectObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1))
netmodem = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 1))
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 2))
pp = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 3))
idirectstats = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 4))
mibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 1, 5))
iDirectTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99))
nmtraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 1))
chtraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 2))
pptraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13732, 99, 3))
trap_level = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("warning", 0), ("alarm", 1), ("cleared", 2), ("offline", 3), ("unknown", 4)))).setLabel("trap-level").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_level.setStatus('current')
if mibBuilder.loadTexts: trap_level.setDescription('')
trap_str = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-str").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_str.setStatus('current')
if mibBuilder.loadTexts: trap_str.setDescription('')
trap_rem_id = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 97), Integer32()).setLabel("trap-rem-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_id.setStatus('current')
if mibBuilder.loadTexts: trap_rem_id.setDescription('')
trap_sn_id = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 96), Integer32()).setLabel("trap-sn-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_sn_id.setStatus('current')
if mibBuilder.loadTexts: trap_sn_id.setDescription('')
trap_rem_desc = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-rem-desc").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_desc.setStatus('current')
if mibBuilder.loadTexts: trap_rem_desc.setDescription('')
trap_rem_ip = MibScalar((1, 3, 6, 1, 4, 1, 13732, 99, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("trap-rem-ip").setMaxAccess("readonly")
if mibBuilder.loadTexts: trap_rem_ip.setStatus('current')
if mibBuilder.loadTexts: trap_rem_ip.setDescription('')
chassisEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 2, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisEntries.setStatus('current')
if mibBuilder.loadTexts: chassisEntries.setDescription('')
chassisTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1), )
if mibBuilder.loadTexts: chassisTable.setStatus('current')
if mibBuilder.loadTexts: chassisTable.setDescription('')
chassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "chassisid"))
if mibBuilder.loadTexts: chassisEntry.setStatus('current')
if mibBuilder.loadTexts: chassisEntry.setDescription('')
chassisid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisid.setStatus('current')
if mibBuilder.loadTexts: chassisid.setDescription('')
chassisname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisname.setStatus('current')
if mibBuilder.loadTexts: chassisname.setDescription('')
chstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chstate.setStatus('current')
if mibBuilder.loadTexts: chstate.setDescription('')
chwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chwarnings.setStatus('current')
if mibBuilder.loadTexts: chwarnings.setDescription('')
chalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chalarms.setStatus('current')
if mibBuilder.loadTexts: chalarms.setDescription('')
ppEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 3, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppEntries.setStatus('current')
if mibBuilder.loadTexts: ppEntries.setDescription('Current Number of Protocol Processors')
ppTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1), )
if mibBuilder.loadTexts: ppTable.setStatus('current')
if mibBuilder.loadTexts: ppTable.setDescription('')
ppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "ppid"))
if mibBuilder.loadTexts: ppEntry.setStatus('current')
if mibBuilder.loadTexts: ppEntry.setDescription('')
ppid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppid.setStatus('current')
if mibBuilder.loadTexts: ppid.setDescription('')
ppname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppname.setStatus('current')
if mibBuilder.loadTexts: ppname.setDescription('')
ppteleportid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppteleportid.setStatus('current')
if mibBuilder.loadTexts: ppteleportid.setDescription('')
ppstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppstate.setStatus('current')
if mibBuilder.loadTexts: ppstate.setDescription('')
ppwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppwarnings.setStatus('current')
if mibBuilder.loadTexts: ppwarnings.setDescription('')
ppalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ppalarms.setStatus('current')
if mibBuilder.loadTexts: ppalarms.setDescription('')
netModemEntries = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 1, 0), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netModemEntries.setStatus('current')
if mibBuilder.loadTexts: netModemEntries.setDescription('Current Number of NetModem Entries')
netModemTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1), )
if mibBuilder.loadTexts: netModemTable.setStatus('current')
if mibBuilder.loadTexts: netModemTable.setDescription('')
netModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "netdid"))
if mibBuilder.loadTexts: netModemEntry.setStatus('current')
if mibBuilder.loadTexts: netModemEntry.setDescription('')
netdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netdid.setStatus('current')
if mibBuilder.loadTexts: netdid.setDescription('')
nmppid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmppid.setStatus('current')
if mibBuilder.loadTexts: nmppid.setDescription('')
networkid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkid.setStatus('current')
if mibBuilder.loadTexts: networkid.setDescription('')
nmteleportid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmteleportid.setStatus('current')
if mibBuilder.loadTexts: nmteleportid.setDescription('')
nmid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmid.setStatus('current')
if mibBuilder.loadTexts: nmid.setDescription('Unique ID for an iDIrect Netmodem')
inroutegroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inroutegroupid.setStatus('current')
if mibBuilder.loadTexts: inroutegroupid.setDescription('')
nmname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmname.setStatus('current')
if mibBuilder.loadTexts: nmname.setDescription('')
ethipadr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethipadr.setStatus('current')
if mibBuilder.loadTexts: ethipadr.setDescription('')
dcmslotnum = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcmslotnum.setStatus('current')
if mibBuilder.loadTexts: dcmslotnum.setDescription('')
chassid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassid.setStatus('current')
if mibBuilder.loadTexts: chassid.setDescription('')
typeid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("txHub", 0), ("rxHub", 1), ("txRxHub", 2), ("remote", 3), ("standby", 4), ("fsRepeater", 5), ("standbyFsRepeater", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: typeid.setStatus('current')
if mibBuilder.loadTexts: typeid.setDescription('')
nmstate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 0), ("yellow", 1), ("red", 2), ("yellowRed", 3), ("offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstate.setStatus('current')
if mibBuilder.loadTexts: nmstate.setDescription('')
nmwarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmwarnings.setStatus('current')
if mibBuilder.loadTexts: nmwarnings.setDescription('')
nmalarms = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmalarms.setStatus('current')
if mibBuilder.loadTexts: nmalarms.setDescription('')
nmstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstatus.setStatus('current')
if mibBuilder.loadTexts: nmstatus.setDescription('')
geoloc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: geoloc.setStatus('current')
if mibBuilder.loadTexts: geoloc.setDescription('')
snmpProxyStart = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 1))
if mibBuilder.loadTexts: snmpProxyStart.setStatus('current')
if mibBuilder.loadTexts: snmpProxyStart.setDescription('snmpsvr process has started')
snmpProxyStop = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 2))
if mibBuilder.loadTexts: snmpProxyStop.setStatus('current')
if mibBuilder.loadTexts: snmpProxyStop.setDescription('snmpsvr process has stopped')
upstreamSNR = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 3)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: upstreamSNR.setStatus('current')
if mibBuilder.loadTexts: upstreamSNR.setDescription('Upstream SNR has gone outside specified limits')
downstreamSNR = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 4)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: downstreamSNR.setStatus('current')
if mibBuilder.loadTexts: downstreamSNR.setDescription('Downstream SNR has gone outside specified limits')
tempLimit = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 5)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: tempLimit.setStatus('current')
if mibBuilder.loadTexts: tempLimit.setDescription('Onboard temperature has gone outside specified limits')
acqHubModemCRC = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 6)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: acqHubModemCRC.setStatus('current')
if mibBuilder.loadTexts: acqHubModemCRC.setDescription('Acquisition CRC count has exceeded upper limit')
trafficHubModemCRC = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 7)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: trafficHubModemCRC.setStatus('current')
if mibBuilder.loadTexts: trafficHubModemCRC.setDescription('Traffic CRC count has exceeded upper limit')
latency = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 8)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: latency.setStatus('current')
if mibBuilder.loadTexts: latency.setDescription('Latency measurement has exceeded upper limit')
symbolOffset = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 9)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: symbolOffset.setStatus('current')
if mibBuilder.loadTexts: symbolOffset.setDescription('Symbol offset has gone outside specified limits')
ethernetUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 10)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ethernetUnplugged.setStatus('current')
if mibBuilder.loadTexts: ethernetUnplugged.setDescription('Local LAN port is not functioning')
ucpLostContact = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 11)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ucpLostContact.setStatus('current')
if mibBuilder.loadTexts: ucpLostContact.setDescription('Protocol processor has lost contact with a remote')
llDown = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 12)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: llDown.setStatus('current')
if mibBuilder.loadTexts: llDown.setDescription("Protocol processor's link layer interface for a remote has gone down")
ucpOutOfNetwork = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 13)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ucpOutOfNetwork.setStatus('current')
if mibBuilder.loadTexts: ucpOutOfNetwork.setDescription('Protocol processor declares a remote out of network')
latTimeout = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 14)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: latTimeout.setStatus('current')
if mibBuilder.loadTexts: latTimeout.setDescription('Latency measurements are failing')
lackHubStats = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 16)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lackHubStats.setStatus('current')
if mibBuilder.loadTexts: lackHubStats.setDescription('')
remoteOffline = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 17)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: remoteOffline.setStatus('current')
if mibBuilder.loadTexts: remoteOffline.setDescription('The NMS is no longer receiving hub statistics')
rxOverflowFramesHubModem = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 18)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rxOverflowFramesHubModem.setStatus('current')
if mibBuilder.loadTexts: rxOverflowFramesHubModem.setDescription('Receive Overflow Frames, data lost')
downstreamPpsOverdrive = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 19)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: downstreamPpsOverdrive.setStatus('current')
if mibBuilder.loadTexts: downstreamPpsOverdrive.setDescription('Packets-per-second overdrive between PP and line card')
backplaneLost10Mhz = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 20)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: backplaneLost10Mhz.setStatus('current')
if mibBuilder.loadTexts: backplaneLost10Mhz.setDescription('The line card lost the backplane 10 MHz clock signal')
calibratedTxPower = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 21)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: calibratedTxPower.setStatus('current')
if mibBuilder.loadTexts: calibratedTxPower.setDescription('Transmit power is above or below the calibrated limit')
txFrequency = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 22)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: txFrequency.setStatus('current')
if mibBuilder.loadTexts: txFrequency.setDescription('Transmit frequency is above or below the calibrated limit')
mobileLostGps = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 23)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: mobileLostGps.setStatus('current')
if mibBuilder.loadTexts: mobileLostGps.setDescription('Mobile remote lost the GPS signal')
scpcRxErrors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 24)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: scpcRxErrors.setStatus('current')
if mibBuilder.loadTexts: scpcRxErrors.setDescription('Received SCPC RX error, data lost')
fllDacErrors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 25)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: fllDacErrors.setStatus('current')
if mibBuilder.loadTexts: fllDacErrors.setDescription('Received FLL DAC error, data lost')
lcFailure = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 26)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lcFailure.setStatus('current')
if mibBuilder.loadTexts: lcFailure.setDescription('Line card is failed')
meshError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 27)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshError.setStatus('current')
if mibBuilder.loadTexts: meshError.setDescription('Mesh mode has changed: Remote is not in mesh mode')
meshTdmLockLost = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 28)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshTdmLockLost.setStatus('current')
if mibBuilder.loadTexts: meshTdmLockLost.setDescription('TDM lock is lost')
meshHubRxScpcSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 29)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshHubRxScpcSnr.setStatus('current')
if mibBuilder.loadTexts: meshHubRxScpcSnr.setDescription('The Hub Rx SCPC loopback C/N exceeds the calibrated hub clearsky C/N')
meshHubRxTdmaSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 30)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshHubRxTdmaSnr.setStatus('current')
if mibBuilder.loadTexts: meshHubRxTdmaSnr.setDescription('The Remote Tx TDMA C/N exceeds the calibrated hub clearsky C/N')
lineCardAGCOutOFRange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 31)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: lineCardAGCOutOFRange.setStatus('current')
if mibBuilder.loadTexts: lineCardAGCOutOFRange.setDescription('AGC gain out of range')
meshRmtRxScpcSnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 32)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshRmtRxScpcSnr.setStatus('current')
if mibBuilder.loadTexts: meshRmtRxScpcSnr.setDescription('The remote Rx SCPC C/N exceeds the calibrated remote clearsky C/N')
meshRmtRxTDMASnr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 33)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: meshRmtRxTDMASnr.setStatus('current')
if mibBuilder.loadTexts: meshRmtRxTDMASnr.setDescription('The remote Rx TDMA loopback C/N exceeds the calibrated remote clearsky C/N')
remoteAgcOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 34)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: remoteAgcOutOfRange.setStatus('current')
if mibBuilder.loadTexts: remoteAgcOutOfRange.setDescription('AGC gain out of range')
reset = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 35)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: reset.setStatus('current')
if mibBuilder.loadTexts: reset.setDescription('Reset Warning')
unready = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 36)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: unready.setStatus('current')
if mibBuilder.loadTexts: unready.setDescription('Unready')
flash = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 37)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: flash.setStatus('current')
if mibBuilder.loadTexts: flash.setDescription('Flash Warning')
activationStatus = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 38)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: activationStatus.setStatus('current')
if mibBuilder.loadTexts: activationStatus.setDescription('Activation Status')
elsewhereError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 39)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: elsewhereError.setStatus('current')
if mibBuilder.loadTexts: elsewhereError.setDescription('Elsewhere Warning')
fanAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 40)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: fanAlarm.setStatus('current')
if mibBuilder.loadTexts: fanAlarm.setDescription('Fan Alarm')
backplaneLostSOF = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 41)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: backplaneLostSOF.setStatus('current')
if mibBuilder.loadTexts: backplaneLostSOF.setDescription('Backplane Lost Start Of Frame')
rmtMAXTxPwr = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 42)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtMAXTxPwr.setStatus('current')
if mibBuilder.loadTexts: rmtMAXTxPwr.setDescription('Remote Max Tx Power Alarm')
bladeCPUHigh = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 43)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: bladeCPUHigh.setStatus('current')
if mibBuilder.loadTexts: bladeCPUHigh.setDescription('High CPU usage on Blade')
rmtSleep = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 44)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtSleep.setStatus('current')
if mibBuilder.loadTexts: rmtSleep.setDescription('Remote Sleep Alarm')
hubTenMHzAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 45)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: hubTenMHzAlarm.setStatus('current')
if mibBuilder.loadTexts: hubTenMHzAlarm.setDescription('Hub 10MHz Alarm')
gigeFailed = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 46)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: gigeFailed.setStatus('current')
if mibBuilder.loadTexts: gigeFailed.setDescription('GIGE Failed Alarm')
gigeHealth = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 47)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: gigeHealth.setStatus('current')
if mibBuilder.loadTexts: gigeHealth.setDescription('GIGE Health Warning')
rxOnly = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 48)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rxOnly.setStatus('current')
if mibBuilder.loadTexts: rxOnly.setDescription('RX Only mode Warning')
crc8Errors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 49)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: crc8Errors.setStatus('current')
if mibBuilder.loadTexts: crc8Errors.setDescription('CRC 8 Errors Warning')
crc32Errors = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 50)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: crc32Errors.setStatus('current')
if mibBuilder.loadTexts: crc32Errors.setDescription('CRC 32 Errors Warning')
ravenFailed = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 51)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: ravenFailed.setStatus('current')
if mibBuilder.loadTexts: ravenFailed.setDescription('Raven Failed Alarm')
bladeNoEncLic = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 52)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: bladeNoEncLic.setStatus('current')
if mibBuilder.loadTexts: bladeNoEncLic.setDescription('Blade No Encryption License')
rmtAcqBurst = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 53)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtAcqBurst.setStatus('current')
if mibBuilder.loadTexts: rmtAcqBurst.setDescription('Remote ACQ Burst Warning')
rmtCAWillExpire = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 54)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAWillExpire.setStatus('current')
if mibBuilder.loadTexts: rmtCAWillExpire.setDescription('Remote CA Will Expire')
rmtCAExpired = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 55)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAExpired.setStatus('current')
if mibBuilder.loadTexts: rmtCAExpired.setDescription('Remote CA Has Expired')
rmtCAInvalid = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 56)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"))
if mibBuilder.loadTexts: rmtCAInvalid.setStatus('current')
if mibBuilder.loadTexts: rmtCAInvalid.setDescription('Remote CA Is Invalid')
rmttxTDMAAcqCrc = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 57)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMAAcqCrc.setStatus('current')
if mibBuilder.loadTexts: rmttxTDMAAcqCrc.setDescription('TX TDMA ACQ CRC Warning')
rmttxTDMADataCrc = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 58)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataCrc.setStatus('current')
if mibBuilder.loadTexts: rmttxTDMADataCrc.setDescription('TX TDMA Data CRC Warning')
rmttxTDMAAcqMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 59)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMAAcqMismatch.setStatus('current')
if mibBuilder.loadTexts: rmttxTDMAAcqMismatch.setDescription('TX TDMA Acq Mismatch Warning')
rmttxTDMADataMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 60)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataMismatch.setStatus('current')
if mibBuilder.loadTexts: rmttxTDMADataMismatch.setDescription('TX TDMA Data Mismatch')
rmttxTDMADataMissing = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 61)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxTDMADataMissing.setStatus('current')
if mibBuilder.loadTexts: rmttxTDMADataMissing.setDescription('TX TDMA Data Missing')
rmttxSCPCLostLock = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 62)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCLostLock.setStatus('current')
if mibBuilder.loadTexts: rmttxSCPCLostLock.setDescription('TX SCPC Lost Lock Alarm')
rmttxSCPCHdlcError = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 63)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCHdlcError.setStatus('current')
if mibBuilder.loadTexts: rmttxSCPCHdlcError.setDescription('TX SCPC HDLC Error')
rmttxSCPCDataMismatch = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 64)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmttxSCPCDataMismatch.setStatus('current')
if mibBuilder.loadTexts: rmttxSCPCDataMismatch.setDescription('TX SCPC Data Mismatch')
rmtStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 65)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtStatusChange.setStatus('current')
if mibBuilder.loadTexts: rmtStatusChange.setDescription('Remote realtime status changed.')
triStateIdle = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 66)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: triStateIdle.setStatus('current')
if mibBuilder.loadTexts: triStateIdle.setDescription('Remote inters Idle state')
triStateDormant = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 67)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: triStateDormant.setStatus('current')
if mibBuilder.loadTexts: triStateDormant.setDescription('Remote inters Dormant state')
rmtMCFPDecryptFail = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 1, 68)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"))
if mibBuilder.loadTexts: rmtMCFPDecryptFail.setStatus('current')
if mibBuilder.loadTexts: rmtMCFPDecryptFail.setDescription('Remote unable to decrypt multicast fast path traffic.')
powerAlarm1 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 1)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm1.setStatus('current')
if mibBuilder.loadTexts: powerAlarm1.setDescription('Power supply 1 has failed')
powerAlarm2 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 2)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm2.setStatus('current')
if mibBuilder.loadTexts: powerAlarm2.setDescription('Power supply 2 has failed')
powerAlarm3 = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 3)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: powerAlarm3.setStatus('current')
if mibBuilder.loadTexts: powerAlarm3.setDescription('Power supply 3 has failed')
fanAlarmChassis = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 4)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: fanAlarmChassis.setStatus('current')
if mibBuilder.loadTexts: fanAlarmChassis.setDescription('One of the fans has failed')
chassisDown = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 5)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: chassisDown.setStatus('current')
if mibBuilder.loadTexts: chassisDown.setDescription('The NMS cannot contact the chassis')
rcmAAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 6)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: rcmAAlarm.setStatus('current')
if mibBuilder.loadTexts: rcmAAlarm.setDescription('The Reference Clock Module control timer A is in error')
rcmBAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 7)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: rcmBAlarm.setStatus('current')
if mibBuilder.loadTexts: rcmBAlarm.setDescription('The Reference Clock Module control timer B is in error')
lostChassisConnection = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 8)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: lostChassisConnection.setStatus('current')
if mibBuilder.loadTexts: lostChassisConnection.setDescription('Lost connection to Chassis Manager Server')
microChassisOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 9)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microChassisOverTemp.setStatus('current')
if mibBuilder.loadTexts: microChassisOverTemp.setDescription('Chassis over temperature alarm')
microRCMANotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 10)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMANotPresent.setStatus('current')
if mibBuilder.loadTexts: microRCMANotPresent.setDescription('RCM 1 missing alarm')
microRCMAFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 11)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMAFault.setStatus('current')
if mibBuilder.loadTexts: microRCMAFault.setDescription('RCM 1 failed alarm')
microRCMBNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 12)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMBNotPresent.setStatus('current')
if mibBuilder.loadTexts: microRCMBNotPresent.setDescription('RCM 1 missing alarm')
microRCMBFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 13)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microRCMBFault.setStatus('current')
if mibBuilder.loadTexts: microRCMBFault.setDescription('RCM 2 failed alarm')
microPwrAlarmABad = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 14)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmABad.setStatus('current')
if mibBuilder.loadTexts: microPwrAlarmABad.setDescription('Power supply 1 fault alarm')
microPwrAlarmAOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 15)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmAOverTemp.setStatus('current')
if mibBuilder.loadTexts: microPwrAlarmAOverTemp.setDescription('Power supply 1 over temperature alarm')
microPwrAlarmBBad = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 16)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmBBad.setStatus('current')
if mibBuilder.loadTexts: microPwrAlarmBBad.setDescription('Power supply 2 fault alarm')
microPwrAlarmBOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 17)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microPwrAlarmBOverTemp.setStatus('current')
if mibBuilder.loadTexts: microPwrAlarmBOverTemp.setDescription('Power supply 1 over temperature alarm')
microFSMNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 18)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMNotPresent.setStatus('current')
if mibBuilder.loadTexts: microFSMNotPresent.setDescription('FSM not present alarm')
microFSMFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 19)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMFault.setStatus('current')
if mibBuilder.loadTexts: microFSMFault.setDescription('FSM fault alarm')
microFSMFanFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 20)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microFSMFanFault.setStatus('current')
if mibBuilder.loadTexts: microFSMFanFault.setDescription('FSM fan alarm')
microIFMNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 21)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microIFMNotPresent.setStatus('current')
if mibBuilder.loadTexts: microIFMNotPresent.setDescription('IFM not present alarm')
microIFMFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 22)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microIFMFault.setStatus('current')
if mibBuilder.loadTexts: microIFMFault.setDescription('IFM fault alarm')
microAlarmDisabled = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 23)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microAlarmDisabled.setStatus('current')
if mibBuilder.loadTexts: microAlarmDisabled.setDescription('Audible alarm disable alarm')
microOPMAFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 24)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microOPMAFault.setStatus('current')
if mibBuilder.loadTexts: microOPMAFault.setDescription('OOPM 1 fault alarm')
microOPMBFault = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 2, 25)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: microOPMBFault.setStatus('current')
if mibBuilder.loadTexts: microOPMBFault.setDescription('OOPM 2 fault alarm')
ppStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 13732, 99, 3, 1)).setObjects(("IDIRECT-REMOTE-MIB", "trap_level"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"))
if mibBuilder.loadTexts: ppStateTrap.setStatus('current')
if mibBuilder.loadTexts: ppStateTrap.setDescription('The NMS has stopped hearing from the protocol processor')
ipstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1), )
if mibBuilder.loadTexts: ipstatsTable.setStatus('current')
if mibBuilder.loadTexts: ipstatsTable.setDescription('')
ipstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "nmdid"))
if mibBuilder.loadTexts: ipstatsEntry.setStatus('current')
if mibBuilder.loadTexts: ipstatsEntry.setDescription('')
nmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmdid.setStatus('current')
if mibBuilder.loadTexts: nmdid.setDescription('')
rxtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxtcp.setStatus('current')
if mibBuilder.loadTexts: rxtcp.setDescription('')
rxudp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxudp.setStatus('current')
if mibBuilder.loadTexts: rxudp.setDescription('')
rxicmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxicmp.setStatus('current')
if mibBuilder.loadTexts: rxicmp.setDescription('')
rxigmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxigmp.setStatus('current')
if mibBuilder.loadTexts: rxigmp.setDescription('')
rxhttp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxhttp.setStatus('current')
if mibBuilder.loadTexts: rxhttp.setDescription('')
rxother = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxother.setStatus('current')
if mibBuilder.loadTexts: rxother.setDescription('')
txtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txtcp.setStatus('current')
if mibBuilder.loadTexts: txtcp.setDescription('')
txudp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txudp.setStatus('current')
if mibBuilder.loadTexts: txudp.setDescription('')
txicmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txicmp.setStatus('current')
if mibBuilder.loadTexts: txicmp.setDescription('')
txigmp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txigmp.setStatus('current')
if mibBuilder.loadTexts: txigmp.setDescription('')
txhttp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txhttp.setStatus('current')
if mibBuilder.loadTexts: txhttp.setDescription('')
txother = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txother.setStatus('current')
if mibBuilder.loadTexts: txother.setDescription('')
ipstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatstime.setStatus('current')
if mibBuilder.loadTexts: ipstatstime.setDescription('')
otastatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2), )
if mibBuilder.loadTexts: otastatsTable.setStatus('current')
if mibBuilder.loadTexts: otastatsTable.setDescription('')
otastatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "otanmdid"))
if mibBuilder.loadTexts: otastatsEntry.setStatus('current')
if mibBuilder.loadTexts: otastatsEntry.setDescription('')
otanmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otanmdid.setStatus('current')
if mibBuilder.loadTexts: otanmdid.setDescription('')
otamode = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otamode.setStatus('current')
if mibBuilder.loadTexts: otamode.setDescription('DVBS2 or Infinity')
downstreamreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamreliableBytes.setStatus('current')
if mibBuilder.loadTexts: downstreamreliableBytes.setDescription('')
downstreamunreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamunreliableBytes.setStatus('current')
if mibBuilder.loadTexts: downstreamunreliableBytes.setDescription('')
downstreamoverheadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamoverheadBytes.setStatus('current')
if mibBuilder.loadTexts: downstreamoverheadBytes.setDescription('')
downstreammulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreammulticastBytes.setStatus('current')
if mibBuilder.loadTexts: downstreammulticastBytes.setDescription('')
downstreambroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreambroadcastBytes.setStatus('current')
if mibBuilder.loadTexts: downstreambroadcastBytes.setDescription('')
downstreammulticastSymbols = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreammulticastSymbols.setStatus('current')
if mibBuilder.loadTexts: downstreammulticastSymbols.setDescription('')
downstreambroadcastSymbols = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreambroadcastSymbols.setStatus('current')
if mibBuilder.loadTexts: downstreambroadcastSymbols.setDescription('')
downstreamtotalKiloBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: downstreamtotalKiloBytes.setStatus('current')
if mibBuilder.loadTexts: downstreamtotalKiloBytes.setDescription('')
upstreamreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamreliableBytes.setStatus('current')
if mibBuilder.loadTexts: upstreamreliableBytes.setDescription('')
upstreamunreliableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamunreliableBytes.setStatus('current')
if mibBuilder.loadTexts: upstreamunreliableBytes.setDescription('')
upstreamoverheadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamoverheadBytes.setStatus('current')
if mibBuilder.loadTexts: upstreamoverheadBytes.setDescription('')
upstreamtotalKiloBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upstreamtotalKiloBytes.setStatus('current')
if mibBuilder.loadTexts: upstreamtotalKiloBytes.setDescription('')
otastatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otastatstime.setStatus('current')
if mibBuilder.loadTexts: otastatstime.setDescription('')
remoteucpTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4), )
if mibBuilder.loadTexts: remoteucpTable.setStatus('current')
if mibBuilder.loadTexts: remoteucpTable.setDescription('')
remoteucpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "ucpnmdid"))
if mibBuilder.loadTexts: remoteucpEntry.setStatus('current')
if mibBuilder.loadTexts: remoteucpEntry.setDescription('')
ucpnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ucpnmdid.setStatus('current')
if mibBuilder.loadTexts: ucpnmdid.setDescription('')
upsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsnr.setStatus('current')
if mibBuilder.loadTexts: upsnr.setDescription('')
poweradjustment = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poweradjustment.setStatus('current')
if mibBuilder.loadTexts: poweradjustment.setDescription('')
symboloffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: symboloffset.setStatus('current')
if mibBuilder.loadTexts: symboloffset.setDescription('')
frequencyoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frequencyoffset.setStatus('current')
if mibBuilder.loadTexts: frequencyoffset.setDescription('')
scpcsnrcal = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcsnrcal.setStatus('current')
if mibBuilder.loadTexts: scpcsnrcal.setDescription('')
ucpstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ucpstatstime.setStatus('current')
if mibBuilder.loadTexts: ucpstatstime.setDescription('')
latencystatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5), )
if mibBuilder.loadTexts: latencystatsTable.setStatus('current')
if mibBuilder.loadTexts: latencystatsTable.setDescription('')
latencystatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "latnmdid"))
if mibBuilder.loadTexts: latencystatsEntry.setStatus('current')
if mibBuilder.loadTexts: latencystatsEntry.setDescription('')
latnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmdid.setStatus('current')
if mibBuilder.loadTexts: latnmdid.setDescription('')
latnmname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmname.setStatus('current')
if mibBuilder.loadTexts: latnmname.setDescription('')
latnmsn = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latnmsn.setStatus('current')
if mibBuilder.loadTexts: latnmsn.setDescription('')
mgmtipaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmtipaddress.setStatus('current')
if mibBuilder.loadTexts: mgmtipaddress.setDescription('')
latencyvalue = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyvalue.setStatus('current')
if mibBuilder.loadTexts: latencyvalue.setDescription('')
networkname = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkname.setStatus('current')
if mibBuilder.loadTexts: networkname.setDescription('')
latstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: latstatstime.setStatus('current')
if mibBuilder.loadTexts: latstatstime.setDescription('')
hubstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6), )
if mibBuilder.loadTexts: hubstatsTable.setStatus('current')
if mibBuilder.loadTexts: hubstatsTable.setDescription('')
hubstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "linecarddid"))
if mibBuilder.loadTexts: hubstatsEntry.setStatus('current')
if mibBuilder.loadTexts: hubstatsEntry.setDescription('')
linecarddid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linecarddid.setStatus('current')
if mibBuilder.loadTexts: linecarddid.setDescription('')
linecardsn = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linecardsn.setStatus('current')
if mibBuilder.loadTexts: linecardsn.setDescription('')
txattempts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txattempts.setStatus('current')
if mibBuilder.loadTexts: txattempts.setDescription('')
txbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txbytes.setStatus('current')
if mibBuilder.loadTexts: txbytes.setDescription('')
txerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txerrors.setStatus('current')
if mibBuilder.loadTexts: txerrors.setDescription('')
acqcrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acqcrcerrors.setStatus('current')
if mibBuilder.loadTexts: acqcrcerrors.setDescription('')
trafficcrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trafficcrcerrors.setStatus('current')
if mibBuilder.loadTexts: trafficcrcerrors.setDescription('')
bursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bursts.setStatus('current')
if mibBuilder.loadTexts: bursts.setDescription('')
rxbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxbytes.setStatus('current')
if mibBuilder.loadTexts: rxbytes.setDescription('')
rxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxpower.setStatus('current')
if mibBuilder.loadTexts: rxpower.setDescription('')
dmareset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmareset.setStatus('current')
if mibBuilder.loadTexts: dmareset.setDescription('')
tunnelrxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelrxerrors.setStatus('current')
if mibBuilder.loadTexts: tunnelrxerrors.setDescription('')
tunneltxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunneltxerrors.setStatus('current')
if mibBuilder.loadTexts: tunneltxerrors.setDescription('')
txpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txpower.setStatus('current')
if mibBuilder.loadTexts: txpower.setDescription('')
temp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temp.setStatus('current')
if mibBuilder.loadTexts: temp.setDescription('')
timeticks = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeticks.setStatus('current')
if mibBuilder.loadTexts: timeticks.setDescription('')
agcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agcgain.setStatus('current')
if mibBuilder.loadTexts: agcgain.setDescription('')
mcagcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcagcgain.setStatus('current')
if mibBuilder.loadTexts: mcagcgain.setDescription('')
gige = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gige.setStatus('current')
if mibBuilder.loadTexts: gige.setDescription('')
bufoverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufoverflow.setStatus('current')
if mibBuilder.loadTexts: bufoverflow.setDescription('')
fegacdacval = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fegacdacval.setStatus('current')
if mibBuilder.loadTexts: fegacdacval.setDescription('')
gigetxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gigetxerrors.setStatus('current')
if mibBuilder.loadTexts: gigetxerrors.setDescription('')
gigerxerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gigerxerrors.setStatus('current')
if mibBuilder.loadTexts: gigerxerrors.setDescription('')
scpcrxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcrxgain.setStatus('current')
if mibBuilder.loadTexts: scpcrxgain.setDescription('')
scpcrxcof = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcrxcof.setStatus('current')
if mibBuilder.loadTexts: scpcrxcof.setDescription('')
scpclockstat = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpclockstat.setStatus('current')
if mibBuilder.loadTexts: scpclockstat.setDescription('')
scpclockcntr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpclockcntr.setStatus('current')
if mibBuilder.loadTexts: scpclockcntr.setDescription('')
tdmaagcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmaagcerrors.setStatus('current')
if mibBuilder.loadTexts: tdmaagcerrors.setDescription('')
tdmatrafficerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmatrafficerrors.setStatus('current')
if mibBuilder.loadTexts: tdmatrafficerrors.setDescription('')
tdmabursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmabursts.setStatus('current')
if mibBuilder.loadTexts: tdmabursts.setDescription('')
tdmabytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmabytesrx.setStatus('current')
if mibBuilder.loadTexts: tdmabytesrx.setDescription('')
tdmarxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmarxgain.setStatus('current')
if mibBuilder.loadTexts: tdmarxgain.setDescription('')
hubstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 6, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubstatstime.setStatus('current')
if mibBuilder.loadTexts: hubstatstime.setDescription('')
remotestatusTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3), )
if mibBuilder.loadTexts: remotestatusTable.setStatus('current')
if mibBuilder.loadTexts: remotestatusTable.setDescription('')
remotestatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "rsnmdid"))
if mibBuilder.loadTexts: remotestatusEntry.setStatus('current')
if mibBuilder.loadTexts: remotestatusEntry.setDescription('')
rsnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsnmdid.setStatus('current')
if mibBuilder.loadTexts: rsnmdid.setDescription('')
downsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: downsnr.setStatus('current')
if mibBuilder.loadTexts: downsnr.setDescription('')
rstxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstxpower.setStatus('current')
if mibBuilder.loadTexts: rstxpower.setDescription('')
rsrxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsrxpower.setStatus('current')
if mibBuilder.loadTexts: rsrxpower.setDescription('')
digitalrxgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalrxgain.setStatus('current')
if mibBuilder.loadTexts: digitalrxgain.setDescription('')
flldac = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flldac.setStatus('current')
if mibBuilder.loadTexts: flldac.setDescription('')
rxcof = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxcof.setStatus('current')
if mibBuilder.loadTexts: rxcof.setDescription('')
rstemp = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstemp.setStatus('current')
if mibBuilder.loadTexts: rstemp.setDescription('')
tdmlost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmlost.setStatus('current')
if mibBuilder.loadTexts: tdmlost.setDescription('')
scpcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scpcerrors.setStatus('current')
if mibBuilder.loadTexts: scpcerrors.setDescription('')
rstimeticks = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rstimeticks.setStatus('current')
if mibBuilder.loadTexts: rstimeticks.setDescription('')
lanport = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanport.setStatus('current')
if mibBuilder.loadTexts: lanport.setDescription('')
ethmode = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethmode.setStatus('current')
if mibBuilder.loadTexts: ethmode.setDescription('')
ethspeed = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethspeed.setStatus('current')
if mibBuilder.loadTexts: ethspeed.setDescription('')
ethautonegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethautonegotiate.setStatus('current')
if mibBuilder.loadTexts: ethautonegotiate.setDescription('')
telnetsession = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telnetsession.setStatus('current')
if mibBuilder.loadTexts: telnetsession.setDescription('')
isitesession = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isitesession.setStatus('current')
if mibBuilder.loadTexts: isitesession.setDescription('')
inmesh = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inmesh.setStatus('current')
if mibBuilder.loadTexts: inmesh.setDescription('')
fastfadecorr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fastfadecorr.setStatus('current')
if mibBuilder.loadTexts: fastfadecorr.setDescription('')
crc8error = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crc8error.setStatus('current')
if mibBuilder.loadTexts: crc8error.setDescription('')
crc32error = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crc32error.setStatus('current')
if mibBuilder.loadTexts: crc32error.setDescription('')
ncrlost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrlost.setStatus('current')
if mibBuilder.loadTexts: ncrlost.setDescription('')
plsynclost = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsynclost.setStatus('current')
if mibBuilder.loadTexts: plsynclost.setDescription('')
clockdeltacnt = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clockdeltacnt.setStatus('current')
if mibBuilder.loadTexts: clockdeltacnt.setDescription('')
digitalagcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitalagcgain.setStatus('current')
if mibBuilder.loadTexts: digitalagcgain.setDescription('')
tuneragcgain = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tuneragcgain.setStatus('current')
if mibBuilder.loadTexts: tuneragcgain.setDescription('')
fooffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fooffset.setStatus('current')
if mibBuilder.loadTexts: fooffset.setDescription('')
tdmacrcerrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmacrcerrors.setStatus('current')
if mibBuilder.loadTexts: tdmacrcerrors.setDescription('')
tdmasnrcal = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmasnrcal.setStatus('current')
if mibBuilder.loadTexts: tdmasnrcal.setDescription('')
tdmasymoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmasymoffset.setStatus('current')
if mibBuilder.loadTexts: tdmasymoffset.setDescription('')
tdmafreqoffset = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmafreqoffset.setStatus('current')
if mibBuilder.loadTexts: tdmafreqoffset.setDescription('')
rxreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxreliable.setStatus('current')
if mibBuilder.loadTexts: rxreliable.setDescription('')
rxunreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxunreliable.setStatus('current')
if mibBuilder.loadTexts: rxunreliable.setDescription('')
rxoob = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxoob.setStatus('current')
if mibBuilder.loadTexts: rxoob.setDescription('')
txreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txreliable.setStatus('current')
if mibBuilder.loadTexts: txreliable.setDescription('')
txunreliable = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txunreliable.setStatus('current')
if mibBuilder.loadTexts: txunreliable.setDescription('')
txoob = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txoob.setStatus('current')
if mibBuilder.loadTexts: txoob.setDescription('')
remotestatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 3, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remotestatstime.setStatus('current')
if mibBuilder.loadTexts: remotestatstime.setDescription('')
resetAllStatTables = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 4, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetAllStatTables.setStatus('current')
if mibBuilder.loadTexts: resetAllStatTables.setDescription(' This field will reset all the statistical tables under the idirectstats OID. To reset the tables SET value = 1.')
statsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 13732, 1, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsStartTime.setStatus('current')
if mibBuilder.loadTexts: statsStartTime.setDescription(' This field will have the stats start up time')
dvbS2statsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9), )
if mibBuilder.loadTexts: dvbS2statsTable.setStatus('current')
if mibBuilder.loadTexts: dvbS2statsTable.setDescription('')
dvbS2statsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "dvbnmdid"))
if mibBuilder.loadTexts: dvbS2statsEntry.setStatus('current')
if mibBuilder.loadTexts: dvbS2statsEntry.setDescription('')
dvbnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbnmdid.setStatus('current')
if mibBuilder.loadTexts: dvbnmdid.setDescription('')
clearskymc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clearskymc.setStatus('current')
if mibBuilder.loadTexts: clearskymc.setDescription('')
minmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: minmc.setStatus('current')
if mibBuilder.loadTexts: minmc.setDescription('')
maxmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxmc.setStatus('current')
if mibBuilder.loadTexts: maxmc.setDescription('')
currentmc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentmc.setStatus('current')
if mibBuilder.loadTexts: currentmc.setDescription('')
availablemc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: availablemc.setStatus('current')
if mibBuilder.loadTexts: availablemc.setDescription('')
currentsnr = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentsnr.setStatus('current')
if mibBuilder.loadTexts: currentsnr.setDescription('')
bytesmc01 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc01.setStatus('current')
if mibBuilder.loadTexts: bytesmc01.setDescription('')
bytesmc02 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc02.setStatus('current')
if mibBuilder.loadTexts: bytesmc02.setDescription('')
bytesmc03 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc03.setStatus('current')
if mibBuilder.loadTexts: bytesmc03.setDescription('')
bytesmc04 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc04.setStatus('current')
if mibBuilder.loadTexts: bytesmc04.setDescription('')
bytesmc05 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc05.setStatus('current')
if mibBuilder.loadTexts: bytesmc05.setDescription('')
bytesmc06 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc06.setStatus('current')
if mibBuilder.loadTexts: bytesmc06.setDescription('')
bytesmc07 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc07.setStatus('current')
if mibBuilder.loadTexts: bytesmc07.setDescription('')
bytesmc08 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc08.setStatus('current')
if mibBuilder.loadTexts: bytesmc08.setDescription('')
bytesmc09 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc09.setStatus('current')
if mibBuilder.loadTexts: bytesmc09.setDescription('')
bytesmc10 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc10.setStatus('current')
if mibBuilder.loadTexts: bytesmc10.setDescription('')
bytesmc11 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc11.setStatus('current')
if mibBuilder.loadTexts: bytesmc11.setDescription('')
bytesmc12 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc12.setStatus('current')
if mibBuilder.loadTexts: bytesmc12.setDescription('')
bytesmc13 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc13.setStatus('current')
if mibBuilder.loadTexts: bytesmc13.setDescription('')
bytesmc14 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc14.setStatus('current')
if mibBuilder.loadTexts: bytesmc14.setDescription('')
bytesmc15 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc15.setStatus('current')
if mibBuilder.loadTexts: bytesmc15.setDescription('')
bytesmc16 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc16.setStatus('current')
if mibBuilder.loadTexts: bytesmc16.setDescription('')
bytesmc17 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc17.setStatus('current')
if mibBuilder.loadTexts: bytesmc17.setDescription('')
bytesmc18 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc18.setStatus('current')
if mibBuilder.loadTexts: bytesmc18.setDescription('')
bytesmc19 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc19.setStatus('current')
if mibBuilder.loadTexts: bytesmc19.setDescription('')
bytesmc20 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc20.setStatus('current')
if mibBuilder.loadTexts: bytesmc20.setDescription('')
bytesmc21 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc21.setStatus('current')
if mibBuilder.loadTexts: bytesmc21.setDescription('')
bytesmc22 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc22.setStatus('current')
if mibBuilder.loadTexts: bytesmc22.setDescription('')
bytesmc23 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc23.setStatus('current')
if mibBuilder.loadTexts: bytesmc23.setDescription('')
bytesmc24 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc24.setStatus('current')
if mibBuilder.loadTexts: bytesmc24.setDescription('')
bytesmc25 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc25.setStatus('current')
if mibBuilder.loadTexts: bytesmc25.setDescription('')
bytesmc26 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc26.setStatus('current')
if mibBuilder.loadTexts: bytesmc26.setDescription('')
bytesmc27 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc27.setStatus('current')
if mibBuilder.loadTexts: bytesmc27.setDescription('')
bytesmc28 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmc28.setStatus('current')
if mibBuilder.loadTexts: bytesmc28.setDescription('')
bytesmcTOT = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bytesmcTOT.setStatus('current')
if mibBuilder.loadTexts: bytesmcTOT.setDescription('')
dvbS2statstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 9, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbS2statstime.setStatus('current')
if mibBuilder.loadTexts: dvbS2statstime.setDescription('')
hubS2statsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10), )
if mibBuilder.loadTexts: hubS2statsTable.setStatus('current')
if mibBuilder.loadTexts: hubS2statsTable.setDescription('')
hubS2statsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "dvbhubdid"))
if mibBuilder.loadTexts: hubS2statsEntry.setStatus('current')
if mibBuilder.loadTexts: hubS2statsEntry.setDescription('')
dvbhubdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbhubdid.setStatus('current')
if mibBuilder.loadTexts: dvbhubdid.setDescription('')
udprxhigh = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udprxhigh.setStatus('current')
if mibBuilder.loadTexts: udprxhigh.setDescription('')
udprxlow = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udprxlow.setStatus('current')
if mibBuilder.loadTexts: udprxlow.setDescription('')
dummyframes = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dummyframes.setStatus('current')
if mibBuilder.loadTexts: dummyframes.setDescription('')
hubbytesmc01 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc01.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc01.setDescription('')
hubbytesmc02 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc02.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc02.setDescription('')
hubbytesmc03 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc03.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc03.setDescription('')
hubbytesmc04 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc04.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc04.setDescription('')
hubbytesmc05 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc05.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc05.setDescription('')
hubbytesmc06 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc06.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc06.setDescription('')
hubbytesmc07 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc07.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc07.setDescription('')
hubbytesmc08 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc08.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc08.setDescription('')
hubbytesmc09 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc09.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc09.setDescription('')
hubbytesmc10 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc10.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc10.setDescription('')
hubbytesmc11 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc11.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc11.setDescription('')
hubbytesmc12 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc12.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc12.setDescription('')
hubbytesmc13 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc13.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc13.setDescription('')
hubbytesmc14 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc14.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc14.setDescription('')
hubbytesmc15 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc15.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc15.setDescription('')
hubbytesmc16 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc16.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc16.setDescription('')
hubbytesmc17 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc17.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc17.setDescription('')
hubbytesmc18 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc18.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc18.setDescription('')
hubbytesmc19 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc19.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc19.setDescription('')
hubbytesmc20 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc20.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc20.setDescription('')
hubbytesmc21 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc21.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc21.setDescription('')
hubbytesmc22 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc22.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc22.setDescription('')
hubbytesmc23 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc23.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc23.setDescription('')
hubbytesmc24 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc24.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc24.setDescription('')
hubbytesmc25 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc25.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc25.setDescription('')
hubbytesmc26 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc26.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc26.setDescription('')
hubbytesmc27 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc27.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc27.setDescription('')
hubbytesmc28 = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmc28.setStatus('current')
if mibBuilder.loadTexts: hubbytesmc28.setDescription('')
hubbytesmcTOT = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubbytesmcTOT.setStatus('current')
if mibBuilder.loadTexts: hubbytesmcTOT.setDescription('')
hubs2statstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 10, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubs2statstime.setStatus('current')
if mibBuilder.loadTexts: hubs2statstime.setDescription('')
rxstatsTable = MibTable((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11), )
if mibBuilder.loadTexts: rxstatsTable.setStatus('current')
if mibBuilder.loadTexts: rxstatsTable.setDescription('')
rxstatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1), ).setIndexNames((0, "IDIRECT-REMOTE-MIB", "rxnmdid"))
if mibBuilder.loadTexts: rxstatsEntry.setStatus('current')
if mibBuilder.loadTexts: rxstatsEntry.setDescription('')
rxnmdid = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxnmdid.setStatus('current')
if mibBuilder.loadTexts: rxnmdid.setDescription('')
rxstatstype = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxstatstype.setStatus('current')
if mibBuilder.loadTexts: rxstatstype.setDescription('')
tacqbursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqbursts.setStatus('current')
if mibBuilder.loadTexts: tacqbursts.setDescription('')
tacqcrc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqcrc.setStatus('current')
if mibBuilder.loadTexts: tacqcrc.setDescription('')
tacqmissing = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqmissing.setStatus('current')
if mibBuilder.loadTexts: tacqmissing.setDescription('')
tacqmismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacqmismatch.setStatus('current')
if mibBuilder.loadTexts: tacqmismatch.setDescription('')
tdatabursts = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatabursts.setStatus('current')
if mibBuilder.loadTexts: tdatabursts.setDescription('')
tdatacrc = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatacrc.setStatus('current')
if mibBuilder.loadTexts: tdatacrc.setDescription('')
tdatamissing = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatamissing.setStatus('current')
if mibBuilder.loadTexts: tdatamissing.setDescription('')
tdatamismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdatamismatch.setStatus('current')
if mibBuilder.loadTexts: tdatamismatch.setDescription('')
tkeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tkeepalive.setStatus('current')
if mibBuilder.loadTexts: tkeepalive.setDescription('')
sdatapackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdatapackets.setStatus('current')
if mibBuilder.loadTexts: sdatapackets.setDescription('')
shdlcerror = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shdlcerror.setStatus('current')
if mibBuilder.loadTexts: shdlcerror.setDescription('')
sdatamismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdatamismatch.setStatus('current')
if mibBuilder.loadTexts: sdatamismatch.setDescription('')
skeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skeepalive.setStatus('current')
if mibBuilder.loadTexts: skeepalive.setDescription('')
rxstatstime = MibTableColumn((1, 3, 6, 1, 4, 1, 13732, 1, 4, 11, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxstatstime.setStatus('current')
if mibBuilder.loadTexts: rxstatstime.setDescription('')
chassisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 1)).setObjects(("IDIRECT-REMOTE-MIB", "chassisid"), ("IDIRECT-REMOTE-MIB", "chassisname"), ("IDIRECT-REMOTE-MIB", "chstate"), ("IDIRECT-REMOTE-MIB", "chwarnings"), ("IDIRECT-REMOTE-MIB", "chalarms"), ("IDIRECT-REMOTE-MIB", "chassisEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chassisGroup = chassisGroup.setStatus('current')
if mibBuilder.loadTexts: chassisGroup.setDescription('A collection of objects providing Chassis entity.')
ppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 2)).setObjects(("IDIRECT-REMOTE-MIB", "ppid"), ("IDIRECT-REMOTE-MIB", "ppteleportid"), ("IDIRECT-REMOTE-MIB", "ppname"), ("IDIRECT-REMOTE-MIB", "ppstate"), ("IDIRECT-REMOTE-MIB", "ppwarnings"), ("IDIRECT-REMOTE-MIB", "ppalarms"), ("IDIRECT-REMOTE-MIB", "ppEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ppGroup = ppGroup.setStatus('current')
if mibBuilder.loadTexts: ppGroup.setDescription('A collection of objects providing Protocol Processor entity.')
netModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 3)).setObjects(("IDIRECT-REMOTE-MIB", "netdid"), ("IDIRECT-REMOTE-MIB", "nmppid"), ("IDIRECT-REMOTE-MIB", "networkid"), ("IDIRECT-REMOTE-MIB", "nmteleportid"), ("IDIRECT-REMOTE-MIB", "nmid"), ("IDIRECT-REMOTE-MIB", "inroutegroupid"), ("IDIRECT-REMOTE-MIB", "nmname"), ("IDIRECT-REMOTE-MIB", "ethipadr"), ("IDIRECT-REMOTE-MIB", "dcmslotnum"), ("IDIRECT-REMOTE-MIB", "chassid"), ("IDIRECT-REMOTE-MIB", "typeid"), ("IDIRECT-REMOTE-MIB", "nmstate"), ("IDIRECT-REMOTE-MIB", "nmwarnings"), ("IDIRECT-REMOTE-MIB", "nmalarms"), ("IDIRECT-REMOTE-MIB", "nmstatus"), ("IDIRECT-REMOTE-MIB", "geoloc"), ("IDIRECT-REMOTE-MIB", "netModemEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netModemGroup = netModemGroup.setStatus('current')
if mibBuilder.loadTexts: netModemGroup.setDescription('A collection of objects providing NetModem entity.')
ipStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 4)).setObjects(("IDIRECT-REMOTE-MIB", "nmdid"), ("IDIRECT-REMOTE-MIB", "rxtcp"), ("IDIRECT-REMOTE-MIB", "rxudp"), ("IDIRECT-REMOTE-MIB", "rxicmp"), ("IDIRECT-REMOTE-MIB", "rxigmp"), ("IDIRECT-REMOTE-MIB", "rxhttp"), ("IDIRECT-REMOTE-MIB", "rxother"), ("IDIRECT-REMOTE-MIB", "txtcp"), ("IDIRECT-REMOTE-MIB", "txudp"), ("IDIRECT-REMOTE-MIB", "txicmp"), ("IDIRECT-REMOTE-MIB", "txigmp"), ("IDIRECT-REMOTE-MIB", "txhttp"), ("IDIRECT-REMOTE-MIB", "txother"), ("IDIRECT-REMOTE-MIB", "ipstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipStatsGroup = ipStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ipStatsGroup.setDescription('A collection of objects providing IP Statistics entity.')
otaStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 5)).setObjects(("IDIRECT-REMOTE-MIB", "otanmdid"), ("IDIRECT-REMOTE-MIB", "otamode"), ("IDIRECT-REMOTE-MIB", "downstreamreliableBytes"), ("IDIRECT-REMOTE-MIB", "downstreamunreliableBytes"), ("IDIRECT-REMOTE-MIB", "downstreamoverheadBytes"), ("IDIRECT-REMOTE-MIB", "downstreammulticastBytes"), ("IDIRECT-REMOTE-MIB", "downstreambroadcastBytes"), ("IDIRECT-REMOTE-MIB", "downstreammulticastSymbols"), ("IDIRECT-REMOTE-MIB", "downstreambroadcastSymbols"), ("IDIRECT-REMOTE-MIB", "downstreamtotalKiloBytes"), ("IDIRECT-REMOTE-MIB", "upstreamreliableBytes"), ("IDIRECT-REMOTE-MIB", "upstreamunreliableBytes"), ("IDIRECT-REMOTE-MIB", "upstreamoverheadBytes"), ("IDIRECT-REMOTE-MIB", "upstreamtotalKiloBytes"), ("IDIRECT-REMOTE-MIB", "otastatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    otaStatsGroup = otaStatsGroup.setStatus('current')
if mibBuilder.loadTexts: otaStatsGroup.setDescription('A collection of objects providing OTA Statistics entity.')
remoteucpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 6)).setObjects(("IDIRECT-REMOTE-MIB", "ucpnmdid"), ("IDIRECT-REMOTE-MIB", "upsnr"), ("IDIRECT-REMOTE-MIB", "poweradjustment"), ("IDIRECT-REMOTE-MIB", "symboloffset"), ("IDIRECT-REMOTE-MIB", "frequencyoffset"), ("IDIRECT-REMOTE-MIB", "scpcsnrcal"), ("IDIRECT-REMOTE-MIB", "ucpstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    remoteucpGroup = remoteucpGroup.setStatus('current')
if mibBuilder.loadTexts: remoteucpGroup.setDescription('A collection of objects providing Remote UCP entity.')
latencyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 7)).setObjects(("IDIRECT-REMOTE-MIB", "latnmdid"), ("IDIRECT-REMOTE-MIB", "latnmname"), ("IDIRECT-REMOTE-MIB", "latnmsn"), ("IDIRECT-REMOTE-MIB", "mgmtipaddress"), ("IDIRECT-REMOTE-MIB", "latencyvalue"), ("IDIRECT-REMOTE-MIB", "networkname"), ("IDIRECT-REMOTE-MIB", "latstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    latencyStatsGroup = latencyStatsGroup.setStatus('current')
if mibBuilder.loadTexts: latencyStatsGroup.setDescription('A collection of objects providing Latency Statistics entity.')
hubStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 8)).setObjects(("IDIRECT-REMOTE-MIB", "linecarddid"), ("IDIRECT-REMOTE-MIB", "linecardsn"), ("IDIRECT-REMOTE-MIB", "txattempts"), ("IDIRECT-REMOTE-MIB", "txbytes"), ("IDIRECT-REMOTE-MIB", "txerrors"), ("IDIRECT-REMOTE-MIB", "acqcrcerrors"), ("IDIRECT-REMOTE-MIB", "trafficcrcerrors"), ("IDIRECT-REMOTE-MIB", "bursts"), ("IDIRECT-REMOTE-MIB", "rxbytes"), ("IDIRECT-REMOTE-MIB", "rxpower"), ("IDIRECT-REMOTE-MIB", "dmareset"), ("IDIRECT-REMOTE-MIB", "tunnelrxerrors"), ("IDIRECT-REMOTE-MIB", "tunneltxerrors"), ("IDIRECT-REMOTE-MIB", "txpower"), ("IDIRECT-REMOTE-MIB", "temp"), ("IDIRECT-REMOTE-MIB", "timeticks"), ("IDIRECT-REMOTE-MIB", "agcgain"), ("IDIRECT-REMOTE-MIB", "mcagcgain"), ("IDIRECT-REMOTE-MIB", "gige"), ("IDIRECT-REMOTE-MIB", "bufoverflow"), ("IDIRECT-REMOTE-MIB", "fegacdacval"), ("IDIRECT-REMOTE-MIB", "gigetxerrors"), ("IDIRECT-REMOTE-MIB", "gigerxerrors"), ("IDIRECT-REMOTE-MIB", "scpcrxgain"), ("IDIRECT-REMOTE-MIB", "scpcrxcof"), ("IDIRECT-REMOTE-MIB", "scpclockstat"), ("IDIRECT-REMOTE-MIB", "scpclockcntr"), ("IDIRECT-REMOTE-MIB", "tdmaagcerrors"), ("IDIRECT-REMOTE-MIB", "tdmatrafficerrors"), ("IDIRECT-REMOTE-MIB", "tdmabursts"), ("IDIRECT-REMOTE-MIB", "tdmabytesrx"), ("IDIRECT-REMOTE-MIB", "tdmarxgain"), ("IDIRECT-REMOTE-MIB", "hubstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hubStatsGroup = hubStatsGroup.setStatus('current')
if mibBuilder.loadTexts: hubStatsGroup.setDescription('A collection of objects providing HUB Statistics entity.')
remotestatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 9)).setObjects(("IDIRECT-REMOTE-MIB", "rsnmdid"), ("IDIRECT-REMOTE-MIB", "downsnr"), ("IDIRECT-REMOTE-MIB", "rstxpower"), ("IDIRECT-REMOTE-MIB", "rsrxpower"), ("IDIRECT-REMOTE-MIB", "digitalrxgain"), ("IDIRECT-REMOTE-MIB", "flldac"), ("IDIRECT-REMOTE-MIB", "rxcof"), ("IDIRECT-REMOTE-MIB", "rstemp"), ("IDIRECT-REMOTE-MIB", "tdmlost"), ("IDIRECT-REMOTE-MIB", "scpcerrors"), ("IDIRECT-REMOTE-MIB", "rstimeticks"), ("IDIRECT-REMOTE-MIB", "lanport"), ("IDIRECT-REMOTE-MIB", "ethmode"), ("IDIRECT-REMOTE-MIB", "ethspeed"), ("IDIRECT-REMOTE-MIB", "ethautonegotiate"), ("IDIRECT-REMOTE-MIB", "telnetsession"), ("IDIRECT-REMOTE-MIB", "isitesession"), ("IDIRECT-REMOTE-MIB", "inmesh"), ("IDIRECT-REMOTE-MIB", "fastfadecorr"), ("IDIRECT-REMOTE-MIB", "crc8error"), ("IDIRECT-REMOTE-MIB", "crc32error"), ("IDIRECT-REMOTE-MIB", "ncrlost"), ("IDIRECT-REMOTE-MIB", "plsynclost"), ("IDIRECT-REMOTE-MIB", "clockdeltacnt"), ("IDIRECT-REMOTE-MIB", "digitalagcgain"), ("IDIRECT-REMOTE-MIB", "tuneragcgain"), ("IDIRECT-REMOTE-MIB", "fooffset"), ("IDIRECT-REMOTE-MIB", "tdmacrcerrors"), ("IDIRECT-REMOTE-MIB", "tdmasnrcal"), ("IDIRECT-REMOTE-MIB", "tdmasymoffset"), ("IDIRECT-REMOTE-MIB", "tdmafreqoffset"), ("IDIRECT-REMOTE-MIB", "rxreliable"), ("IDIRECT-REMOTE-MIB", "rxunreliable"), ("IDIRECT-REMOTE-MIB", "rxoob"), ("IDIRECT-REMOTE-MIB", "txreliable"), ("IDIRECT-REMOTE-MIB", "txunreliable"), ("IDIRECT-REMOTE-MIB", "txoob"), ("IDIRECT-REMOTE-MIB", "remotestatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    remotestatusGroup = remotestatusGroup.setStatus('current')
if mibBuilder.loadTexts: remotestatusGroup.setDescription('A collection of objects providing remote status entity.')
netmodemNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 10)).setObjects(("IDIRECT-REMOTE-MIB", "snmpProxyStart"), ("IDIRECT-REMOTE-MIB", "snmpProxyStop"), ("IDIRECT-REMOTE-MIB", "upstreamSNR"), ("IDIRECT-REMOTE-MIB", "downstreamSNR"), ("IDIRECT-REMOTE-MIB", "tempLimit"), ("IDIRECT-REMOTE-MIB", "acqHubModemCRC"), ("IDIRECT-REMOTE-MIB", "trafficHubModemCRC"), ("IDIRECT-REMOTE-MIB", "latency"), ("IDIRECT-REMOTE-MIB", "symbolOffset"), ("IDIRECT-REMOTE-MIB", "ethernetUnplugged"), ("IDIRECT-REMOTE-MIB", "ucpLostContact"), ("IDIRECT-REMOTE-MIB", "llDown"), ("IDIRECT-REMOTE-MIB", "ucpOutOfNetwork"), ("IDIRECT-REMOTE-MIB", "latTimeout"), ("IDIRECT-REMOTE-MIB", "lackHubStats"), ("IDIRECT-REMOTE-MIB", "remoteOffline"), ("IDIRECT-REMOTE-MIB", "rxOverflowFramesHubModem"), ("IDIRECT-REMOTE-MIB", "downstreamPpsOverdrive"), ("IDIRECT-REMOTE-MIB", "backplaneLost10Mhz"), ("IDIRECT-REMOTE-MIB", "calibratedTxPower"), ("IDIRECT-REMOTE-MIB", "txFrequency"), ("IDIRECT-REMOTE-MIB", "mobileLostGps"), ("IDIRECT-REMOTE-MIB", "scpcRxErrors"), ("IDIRECT-REMOTE-MIB", "fllDacErrors"), ("IDIRECT-REMOTE-MIB", "lcFailure"), ("IDIRECT-REMOTE-MIB", "meshError"), ("IDIRECT-REMOTE-MIB", "meshTdmLockLost"), ("IDIRECT-REMOTE-MIB", "meshHubRxScpcSnr"), ("IDIRECT-REMOTE-MIB", "meshHubRxTdmaSnr"), ("IDIRECT-REMOTE-MIB", "lineCardAGCOutOFRange"), ("IDIRECT-REMOTE-MIB", "meshRmtRxScpcSnr"), ("IDIRECT-REMOTE-MIB", "meshRmtRxTDMASnr"), ("IDIRECT-REMOTE-MIB", "remoteAgcOutOfRange"), ("IDIRECT-REMOTE-MIB", "reset"), ("IDIRECT-REMOTE-MIB", "unready"), ("IDIRECT-REMOTE-MIB", "flash"), ("IDIRECT-REMOTE-MIB", "activationStatus"), ("IDIRECT-REMOTE-MIB", "elsewhereError"), ("IDIRECT-REMOTE-MIB", "fanAlarm"), ("IDIRECT-REMOTE-MIB", "backplaneLostSOF"), ("IDIRECT-REMOTE-MIB", "rmtMAXTxPwr"), ("IDIRECT-REMOTE-MIB", "bladeCPUHigh"), ("IDIRECT-REMOTE-MIB", "rmtSleep"), ("IDIRECT-REMOTE-MIB", "hubTenMHzAlarm"), ("IDIRECT-REMOTE-MIB", "gigeFailed"), ("IDIRECT-REMOTE-MIB", "gigeHealth"), ("IDIRECT-REMOTE-MIB", "rxOnly"), ("IDIRECT-REMOTE-MIB", "crc8Errors"), ("IDIRECT-REMOTE-MIB", "crc32Errors"), ("IDIRECT-REMOTE-MIB", "ravenFailed"), ("IDIRECT-REMOTE-MIB", "rmttxTDMAAcqCrc"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataCrc"), ("IDIRECT-REMOTE-MIB", "rmttxTDMAAcqMismatch"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataMismatch"), ("IDIRECT-REMOTE-MIB", "rmttxTDMADataMissing"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCLostLock"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCHdlcError"), ("IDIRECT-REMOTE-MIB", "rmttxSCPCDataMismatch"), ("IDIRECT-REMOTE-MIB", "rmtStatusChange"), ("IDIRECT-REMOTE-MIB", "triStateDormant"), ("IDIRECT-REMOTE-MIB", "triStateDormant"), ("IDIRECT-REMOTE-MIB", "rmtMCFPDecryptFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netmodemNotificationsGroup = netmodemNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: netmodemNotificationsGroup.setDescription('Netmodem Notifications group')
chassisNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 11)).setObjects(("IDIRECT-REMOTE-MIB", "powerAlarm1"), ("IDIRECT-REMOTE-MIB", "powerAlarm2"), ("IDIRECT-REMOTE-MIB", "powerAlarm3"), ("IDIRECT-REMOTE-MIB", "fanAlarmChassis"), ("IDIRECT-REMOTE-MIB", "chassisDown"), ("IDIRECT-REMOTE-MIB", "rcmAAlarm"), ("IDIRECT-REMOTE-MIB", "rcmBAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chassisNotificationsGroup = chassisNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: chassisNotificationsGroup.setDescription('Chassis Notifications group')
ppNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 12)).setObjects(("IDIRECT-REMOTE-MIB", "ppStateTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ppNotificationsGroup = ppNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ppNotificationsGroup.setDescription('Protocol Processor Notifications group')
commonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 13)).setObjects(("IDIRECT-REMOTE-MIB", "resetAllStatTables"), ("IDIRECT-REMOTE-MIB", "statsStartTime"), ("IDIRECT-REMOTE-MIB", "trap_rem_desc"), ("IDIRECT-REMOTE-MIB", "trap_rem_ip"), ("IDIRECT-REMOTE-MIB", "trap_sn_id"), ("IDIRECT-REMOTE-MIB", "trap_rem_id"), ("IDIRECT-REMOTE-MIB", "trap_str"), ("IDIRECT-REMOTE-MIB", "trap_level"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    commonGroup = commonGroup.setStatus('current')
if mibBuilder.loadTexts: commonGroup.setDescription('A collection of common objects used.')
hubs2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 14)).setObjects(("IDIRECT-REMOTE-MIB", "dvbhubdid"), ("IDIRECT-REMOTE-MIB", "udprxhigh"), ("IDIRECT-REMOTE-MIB", "udprxlow"), ("IDIRECT-REMOTE-MIB", "dummyframes"), ("IDIRECT-REMOTE-MIB", "hubbytesmc01"), ("IDIRECT-REMOTE-MIB", "hubbytesmc02"), ("IDIRECT-REMOTE-MIB", "hubbytesmc03"), ("IDIRECT-REMOTE-MIB", "hubbytesmc04"), ("IDIRECT-REMOTE-MIB", "hubbytesmc05"), ("IDIRECT-REMOTE-MIB", "hubbytesmc06"), ("IDIRECT-REMOTE-MIB", "hubbytesmc07"), ("IDIRECT-REMOTE-MIB", "hubbytesmc08"), ("IDIRECT-REMOTE-MIB", "hubbytesmc09"), ("IDIRECT-REMOTE-MIB", "hubbytesmc10"), ("IDIRECT-REMOTE-MIB", "hubbytesmc11"), ("IDIRECT-REMOTE-MIB", "hubbytesmc12"), ("IDIRECT-REMOTE-MIB", "hubbytesmc13"), ("IDIRECT-REMOTE-MIB", "hubbytesmc14"), ("IDIRECT-REMOTE-MIB", "hubbytesmc15"), ("IDIRECT-REMOTE-MIB", "hubbytesmc16"), ("IDIRECT-REMOTE-MIB", "hubbytesmc17"), ("IDIRECT-REMOTE-MIB", "hubbytesmc18"), ("IDIRECT-REMOTE-MIB", "hubbytesmc19"), ("IDIRECT-REMOTE-MIB", "hubbytesmc20"), ("IDIRECT-REMOTE-MIB", "hubbytesmc21"), ("IDIRECT-REMOTE-MIB", "hubbytesmc22"), ("IDIRECT-REMOTE-MIB", "hubbytesmc23"), ("IDIRECT-REMOTE-MIB", "hubbytesmc24"), ("IDIRECT-REMOTE-MIB", "hubbytesmc25"), ("IDIRECT-REMOTE-MIB", "hubbytesmc26"), ("IDIRECT-REMOTE-MIB", "hubbytesmc27"), ("IDIRECT-REMOTE-MIB", "hubbytesmc28"), ("IDIRECT-REMOTE-MIB", "hubbytesmcTOT"), ("IDIRECT-REMOTE-MIB", "hubs2statstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hubs2StatsGroup = hubs2StatsGroup.setStatus('current')
if mibBuilder.loadTexts: hubs2StatsGroup.setDescription('A collection of objects providing HUB DVBS2 Statistics entity.')
rmts2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 15)).setObjects(("IDIRECT-REMOTE-MIB", "dvbnmdid"), ("IDIRECT-REMOTE-MIB", "clearskymc"), ("IDIRECT-REMOTE-MIB", "minmc"), ("IDIRECT-REMOTE-MIB", "maxmc"), ("IDIRECT-REMOTE-MIB", "currentmc"), ("IDIRECT-REMOTE-MIB", "availablemc"), ("IDIRECT-REMOTE-MIB", "currentsnr"), ("IDIRECT-REMOTE-MIB", "bytesmc01"), ("IDIRECT-REMOTE-MIB", "bytesmc02"), ("IDIRECT-REMOTE-MIB", "bytesmc03"), ("IDIRECT-REMOTE-MIB", "bytesmc04"), ("IDIRECT-REMOTE-MIB", "bytesmc05"), ("IDIRECT-REMOTE-MIB", "bytesmc06"), ("IDIRECT-REMOTE-MIB", "bytesmc07"), ("IDIRECT-REMOTE-MIB", "bytesmc08"), ("IDIRECT-REMOTE-MIB", "bytesmc09"), ("IDIRECT-REMOTE-MIB", "bytesmc10"), ("IDIRECT-REMOTE-MIB", "bytesmc11"), ("IDIRECT-REMOTE-MIB", "bytesmc12"), ("IDIRECT-REMOTE-MIB", "bytesmc13"), ("IDIRECT-REMOTE-MIB", "bytesmc14"), ("IDIRECT-REMOTE-MIB", "bytesmc15"), ("IDIRECT-REMOTE-MIB", "bytesmc16"), ("IDIRECT-REMOTE-MIB", "bytesmc17"), ("IDIRECT-REMOTE-MIB", "bytesmc18"), ("IDIRECT-REMOTE-MIB", "bytesmc19"), ("IDIRECT-REMOTE-MIB", "bytesmc20"), ("IDIRECT-REMOTE-MIB", "bytesmc21"), ("IDIRECT-REMOTE-MIB", "bytesmc22"), ("IDIRECT-REMOTE-MIB", "bytesmc23"), ("IDIRECT-REMOTE-MIB", "bytesmc24"), ("IDIRECT-REMOTE-MIB", "bytesmc25"), ("IDIRECT-REMOTE-MIB", "bytesmc26"), ("IDIRECT-REMOTE-MIB", "bytesmc27"), ("IDIRECT-REMOTE-MIB", "bytesmc28"), ("IDIRECT-REMOTE-MIB", "bytesmcTOT"), ("IDIRECT-REMOTE-MIB", "dvbS2statstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmts2StatsGroup = rmts2StatsGroup.setStatus('current')
if mibBuilder.loadTexts: rmts2StatsGroup.setDescription('A collection of objects providing Rmt DVBS2 Statistics entity.')
rxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13732, 1, 5, 16)).setObjects(("IDIRECT-REMOTE-MIB", "rxnmdid"), ("IDIRECT-REMOTE-MIB", "rxstatstype"), ("IDIRECT-REMOTE-MIB", "tacqbursts"), ("IDIRECT-REMOTE-MIB", "tacqcrc"), ("IDIRECT-REMOTE-MIB", "tacqmissing"), ("IDIRECT-REMOTE-MIB", "tacqmismatch"), ("IDIRECT-REMOTE-MIB", "tdatabursts"), ("IDIRECT-REMOTE-MIB", "tdatacrc"), ("IDIRECT-REMOTE-MIB", "tdatamissing"), ("IDIRECT-REMOTE-MIB", "tdatamismatch"), ("IDIRECT-REMOTE-MIB", "tkeepalive"), ("IDIRECT-REMOTE-MIB", "sdatapackets"), ("IDIRECT-REMOTE-MIB", "shdlcerror"), ("IDIRECT-REMOTE-MIB", "sdatamismatch"), ("IDIRECT-REMOTE-MIB", "skeepalive"), ("IDIRECT-REMOTE-MIB", "rxstatstime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rxStatsGroup = rxStatsGroup.setStatus('current')
if mibBuilder.loadTexts: rxStatsGroup.setDescription('A collection of objects providing Remote Accuracy Statistics entity.')
mibBuilder.exportSymbols("IDIRECT-REMOTE-MIB", dummyframes=dummyframes, geoloc=geoloc, chassisname=chassisname, ucpstatstime=ucpstatstime, hubbytesmcTOT=hubbytesmcTOT, netModemEntries=netModemEntries, calibratedTxPower=calibratedTxPower, mcagcgain=mcagcgain, tunneltxerrors=tunneltxerrors, ravenFailed=ravenFailed, latencyvalue=latencyvalue, bytesmc23=bytesmc23, dvbS2statsEntry=dvbS2statsEntry, crc32error=crc32error, meshHubRxTdmaSnr=meshHubRxTdmaSnr, remotestatusGroup=remotestatusGroup, timeticks=timeticks, hubbytesmc26=hubbytesmc26, tdmarxgain=tdmarxgain, microOPMAFault=microOPMAFault, ethipadr=ethipadr, downstreamreliableBytes=downstreamreliableBytes, txpower=txpower, bytesmc28=bytesmc28, ucpnmdid=ucpnmdid, clearskymc=clearskymc, powerAlarm1=powerAlarm1, rxother=rxother, plsynclost=plsynclost, hubbytesmc16=hubbytesmc16, downstreamoverheadBytes=downstreamoverheadBytes, rmttxSCPCDataMismatch=rmttxSCPCDataMismatch, downstreamSNR=downstreamSNR, bytesmc22=bytesmc22, microRCMAFault=microRCMAFault, clockdeltacnt=clockdeltacnt, rxbytes=rxbytes, bytesmc26=bytesmc26, crc32Errors=crc32Errors, bytesmc10=bytesmc10, nmdid=nmdid, ppstate=ppstate, latencystatsTable=latencystatsTable, hubbytesmc24=hubbytesmc24, rmttxTDMAAcqMismatch=rmttxTDMAAcqMismatch, meshRmtRxScpcSnr=meshRmtRxScpcSnr, ppNotificationsGroup=ppNotificationsGroup, ppname=ppname, netModemGroup=netModemGroup, tdatacrc=tdatacrc, bytesmc01=bytesmc01, chassisEntries=chassisEntries, backplaneLost10Mhz=backplaneLost10Mhz, fegacdacval=fegacdacval, chassisTable=chassisTable, tdmasnrcal=tdmasnrcal, rstemp=rstemp, meshRmtRxTDMASnr=meshRmtRxTDMASnr, dvbhubdid=dvbhubdid, rxstatsTable=rxstatsTable, crc8Errors=crc8Errors, latnmname=latnmname, bytesmc18=bytesmc18, remoteAgcOutOfRange=remoteAgcOutOfRange, fanAlarmChassis=fanAlarmChassis, microRCMBFault=microRCMBFault, ppTable=ppTable, tdmabursts=tdmabursts, hubbytesmc07=hubbytesmc07, symboloffset=symboloffset, rmtSleep=rmtSleep, hubstatsEntry=hubstatsEntry, lcFailure=lcFailure, hubbytesmc23=hubbytesmc23, txudp=txudp, hubbytesmc22=hubbytesmc22, reset=reset, tdmabytesrx=tdmabytesrx, nmppid=nmppid, nmstatus=nmstatus, gigeHealth=gigeHealth, snmpProxyStart=snmpProxyStart, currentmc=currentmc, udprxlow=udprxlow, rxstatstime=rxstatstime, rmttxTDMAAcqCrc=rmttxTDMAAcqCrc, hubbytesmc12=hubbytesmc12, lineCardAGCOutOFRange=lineCardAGCOutOFRange, rstimeticks=rstimeticks, rxreliable=rxreliable, tacqmismatch=tacqmismatch, tdmatrafficerrors=tdmatrafficerrors, hubbytesmc03=hubbytesmc03, upstreamtotalKiloBytes=upstreamtotalKiloBytes, latencyStatsGroup=latencyStatsGroup, netmodem=netmodem, latencystatsEntry=latencystatsEntry, linecarddid=linecarddid, otastatstime=otastatstime, microOPMBFault=microOPMBFault, commonGroup=commonGroup, rmtCAExpired=rmtCAExpired, hubStatsGroup=hubStatsGroup, iDirectTraps=iDirectTraps, rxunreliable=rxunreliable, inroutegroupid=inroutegroupid, ppteleportid=ppteleportid, fastfadecorr=fastfadecorr, ncrlost=ncrlost, scpcrxcof=scpcrxcof, bytesmc24=bytesmc24, iDirectMIB=iDirectMIB, microIFMNotPresent=microIFMNotPresent, netmodemNotificationsGroup=netmodemNotificationsGroup, otastatsEntry=otastatsEntry, rcmBAlarm=rcmBAlarm, gigerxerrors=gigerxerrors, txreliable=txreliable, tacqmissing=tacqmissing, rstxpower=rstxpower, tdatabursts=tdatabursts, txFrequency=txFrequency, dvbS2statstime=dvbS2statstime, upstreamreliableBytes=upstreamreliableBytes, rmttxSCPCHdlcError=rmttxSCPCHdlcError, remoteucpEntry=remoteucpEntry, frequencyoffset=frequencyoffset, bytesmc11=bytesmc11, microFSMFanFault=microFSMFanFault, hubs2StatsGroup=hubs2StatsGroup, hubbytesmc01=hubbytesmc01, digitalagcgain=digitalagcgain, bytesmc02=bytesmc02, bytesmc12=bytesmc12, netModemEntry=netModemEntry, hubbytesmc02=hubbytesmc02, hubstatsTable=hubstatsTable, chassisEntry=chassisEntry, rxigmp=rxigmp, nmtraps=nmtraps, bytesmc21=bytesmc21, microFSMFault=microFSMFault, downstreamunreliableBytes=downstreamunreliableBytes, rmtMAXTxPwr=rmtMAXTxPwr, chstate=chstate, tdmaagcerrors=tdmaagcerrors, rmtStatusChange=rmtStatusChange, linecardsn=linecardsn, rmttxSCPCLostLock=rmttxSCPCLostLock, tdmafreqoffset=tdmafreqoffset, ucpLostContact=ucpLostContact, minmc=minmc, bytesmc27=bytesmc27, trafficcrcerrors=trafficcrcerrors, txunreliable=txunreliable, nmteleportid=nmteleportid, trap_sn_id=trap_sn_id, scpcrxgain=scpcrxgain, fanAlarm=fanAlarm, nmstate=nmstate, rmttxTDMADataMissing=rmttxTDMADataMissing, tuneragcgain=tuneragcgain, dvbS2statsTable=dvbS2statsTable, statsStartTime=statsStartTime, tdmasymoffset=tdmasymoffset, hubbytesmc11=hubbytesmc11, chassisGroup=chassisGroup, tacqcrc=tacqcrc, activationStatus=activationStatus, remoteOffline=remoteOffline, rmtMCFPDecryptFail=rmtMCFPDecryptFail, chassid=chassid, meshError=meshError, hubbytesmc19=hubbytesmc19, tkeepalive=tkeepalive, trap_str=trap_str, dmareset=dmareset, bladeCPUHigh=bladeCPUHigh, chalarms=chalarms, rsrxpower=rsrxpower, inmesh=inmesh, downstreambroadcastBytes=downstreambroadcastBytes, poweradjustment=poweradjustment, microPwrAlarmAOverTemp=microPwrAlarmAOverTemp, sdatamismatch=sdatamismatch, downstreammulticastBytes=downstreammulticastBytes, scpcRxErrors=scpcRxErrors, bytesmc07=bytesmc07, downstreamtotalKiloBytes=downstreamtotalKiloBytes, hubbytesmc10=hubbytesmc10, meshTdmLockLost=meshTdmLockLost, bytesmc05=bytesmc05, iDirectObjects=iDirectObjects, networkname=networkname, latTimeout=latTimeout, ethernetUnplugged=ethernetUnplugged, bytesmc09=bytesmc09, scpcsnrcal=scpcsnrcal, tdmacrcerrors=tdmacrcerrors, microChassisOverTemp=microChassisOverTemp, hubbytesmc27=hubbytesmc27, fooffset=fooffset, skeepalive=skeepalive, txother=txother, txoob=txoob, otastatsTable=otastatsTable, udprxhigh=udprxhigh, bytesmc04=bytesmc04, rmts2StatsGroup=rmts2StatsGroup, downstreambroadcastSymbols=downstreambroadcastSymbols, upsnr=upsnr, lanport=lanport, gigeFailed=gigeFailed, ethmode=ethmode, rxOverflowFramesHubModem=rxOverflowFramesHubModem, shdlcerror=shdlcerror, backplaneLostSOF=backplaneLostSOF, tdatamismatch=tdatamismatch, ppalarms=ppalarms, netdid=netdid, pp=pp, txerrors=txerrors, nmid=nmid, sdatapackets=sdatapackets, hubbytesmc13=hubbytesmc13, hubbytesmc18=hubbytesmc18, txbytes=txbytes, rxtcp=rxtcp, remotestatusEntry=remotestatusEntry, snmpProxyStop=snmpProxyStop, symbolOffset=symbolOffset, bytesmc03=bytesmc03, resetAllStatTables=resetAllStatTables, chassis=chassis, rxOnly=rxOnly, otanmdid=otanmdid, unready=unready, powerAlarm2=powerAlarm2, tunnelrxerrors=tunnelrxerrors, ethspeed=ethspeed, rmtCAInvalid=rmtCAInvalid, microAlarmDisabled=microAlarmDisabled, ppEntry=ppEntry, triStateDormant=triStateDormant, rcmAAlarm=rcmAAlarm, rxpower=rxpower, chassisDown=chassisDown, latency=latency, upstreamoverheadBytes=upstreamoverheadBytes, rxstatsEntry=rxstatsEntry, scpclockcntr=scpclockcntr, upstreamSNR=upstreamSNR, txtcp=txtcp, txicmp=txicmp)
mibBuilder.exportSymbols("IDIRECT-REMOTE-MIB", dvbnmdid=dvbnmdid, chassisNotificationsGroup=chassisNotificationsGroup, gigetxerrors=gigetxerrors, microFSMNotPresent=microFSMNotPresent, hubS2statsEntry=hubS2statsEntry, availablemc=availablemc, isitesession=isitesession, bytesmc13=bytesmc13, typeid=typeid, downstreammulticastSymbols=downstreammulticastSymbols, rxudp=rxudp, acqcrcerrors=acqcrcerrors, otamode=otamode, hubbytesmc08=hubbytesmc08, rxStatsGroup=rxStatsGroup, digitalrxgain=digitalrxgain, trap_level=trap_level, pptraps=pptraps, rxcof=rxcof, chassisid=chassisid, rmttxTDMADataMismatch=rmttxTDMADataMismatch, crc8error=crc8error, upstreamunreliableBytes=upstreamunreliableBytes, bufoverflow=bufoverflow, maxmc=maxmc, bytesmc20=bytesmc20, hubbytesmc20=hubbytesmc20, ipStatsGroup=ipStatsGroup, scpclockstat=scpclockstat, hubbytesmc04=hubbytesmc04, gige=gige, otaStatsGroup=otaStatsGroup, ppGroup=ppGroup, chtraps=chtraps, bytesmc16=bytesmc16, hubbytesmc21=hubbytesmc21, networkid=networkid, ucpOutOfNetwork=ucpOutOfNetwork, ppwarnings=ppwarnings, flldac=flldac, triStateIdle=triStateIdle, netModemTable=netModemTable, microPwrAlarmABad=microPwrAlarmABad, trap_rem_ip=trap_rem_ip, temp=temp, hubbytesmc15=hubbytesmc15, flash=flash, ipstatstime=ipstatstime, idirectstats=idirectstats, remoteucpGroup=remoteucpGroup, remotestatusTable=remotestatusTable, hubbytesmc05=hubbytesmc05, hubS2statsTable=hubS2statsTable, tempLimit=tempLimit, mibGroups=mibGroups, trafficHubModemCRC=trafficHubModemCRC, rxnmdid=rxnmdid, txhttp=txhttp, bladeNoEncLic=bladeNoEncLic, bytesmc19=bytesmc19, hubbytesmc25=hubbytesmc25, txattempts=txattempts, microRCMANotPresent=microRCMANotPresent, latstatstime=latstatstime, hubbytesmc17=hubbytesmc17, latnmsn=latnmsn, PYSNMP_MODULE_ID=iDirectMIB, telnetsession=telnetsession, trap_rem_desc=trap_rem_desc, bytesmc08=bytesmc08, tdatamissing=tdatamissing, bytesmc06=bytesmc06, ppid=ppid, currentsnr=currentsnr, downstreamPpsOverdrive=downstreamPpsOverdrive, latnmdid=latnmdid, bursts=bursts, fllDacErrors=fllDacErrors, bytesmc15=bytesmc15, rxoob=rxoob, lackHubStats=lackHubStats, bytesmc14=bytesmc14, bytesmcTOT=bytesmcTOT, microRCMBNotPresent=microRCMBNotPresent, hubTenMHzAlarm=hubTenMHzAlarm, rmtCAWillExpire=rmtCAWillExpire, remoteucpTable=remoteucpTable, bytesmc17=bytesmc17, lostChassisConnection=lostChassisConnection, bytesmc25=bytesmc25, microPwrAlarmBOverTemp=microPwrAlarmBOverTemp, hubbytesmc14=hubbytesmc14, trap_rem_id=trap_rem_id, rxicmp=rxicmp, rxhttp=rxhttp, microIFMFault=microIFMFault, txigmp=txigmp, nmalarms=nmalarms, hubbytesmc28=hubbytesmc28, tacqbursts=tacqbursts, nmwarnings=nmwarnings, hubbytesmc06=hubbytesmc06, agcgain=agcgain, hubstatstime=hubstatstime, mgmtipaddress=mgmtipaddress, downsnr=downsnr, hubs2statstime=hubs2statstime, rxstatstype=rxstatstype, rmtAcqBurst=rmtAcqBurst, elsewhereError=elsewhereError, mobileLostGps=mobileLostGps, powerAlarm3=powerAlarm3, rsnmdid=rsnmdid, remotestatstime=remotestatstime, meshHubRxScpcSnr=meshHubRxScpcSnr, dcmslotnum=dcmslotnum, ipstatsTable=ipstatsTable, ipstatsEntry=ipstatsEntry, hubbytesmc09=hubbytesmc09, microPwrAlarmBBad=microPwrAlarmBBad, rmttxTDMADataCrc=rmttxTDMADataCrc, llDown=llDown, ethautonegotiate=ethautonegotiate, ppEntries=ppEntries, acqHubModemCRC=acqHubModemCRC, ppStateTrap=ppStateTrap, nmname=nmname, scpcerrors=scpcerrors, chwarnings=chwarnings, tdmlost=tdmlost)
