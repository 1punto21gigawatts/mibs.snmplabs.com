#
# PySNMP MIB module MY-FILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-FILE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, Counter32, TimeTicks, Counter64, ModuleIdentity, IpAddress, Gauge32, ObjectIdentity, NotificationType, iso, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "Counter32", "TimeTicks", "Counter64", "ModuleIdentity", "IpAddress", "Gauge32", "ObjectIdentity", "NotificationType", "iso", "Unsigned32", "MibIdentifier")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
myFileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11))
myFileMIB.setRevisions(('2002-03-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: myFileMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: myFileMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myFileMIB.setOrganization('D-Link Crop.')
if mibBuilder.loadTexts: myFileMIB.setContactInfo(' http://support.dlink.com')
if mibBuilder.loadTexts: myFileMIB.setDescription('This module defines my file mibs.')
myFileMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1))
myFileTransTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1), )
if mibBuilder.loadTexts: myFileTransTable.setStatus('current')
if mibBuilder.loadTexts: myFileTransTable.setDescription('list of file transfer parameters.')
myFileTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1), ).setIndexNames((0, "MY-FILE-MIB", "myFileTransIndex"))
if mibBuilder.loadTexts: myFileTransEntry.setStatus('current')
if mibBuilder.loadTexts: myFileTransEntry.setDescription('Entry of file transfer parameters.')
myFileTransIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileTransIndex.setStatus('current')
if mibBuilder.loadTexts: myFileTransIndex.setDescription('A value unique idenify the entry in the file transfer table. the index is assigned by agent random.')
myFileTransMeans = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("xmodem", 2), ("other", 3))).clone('tftp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myFileTransMeans.setStatus('current')
if mibBuilder.loadTexts: myFileTransMeans.setDescription('The way to be used for any copy. Transport file by xmodem work in only in outband.other(3) mean transfer file by a way other than tftp(1) and xmodem(2)')
myFileTransOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("upload", 1), ("download", 2), ("synchronize", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myFileTransOperType.setStatus('current')
if mibBuilder.loadTexts: myFileTransOperType.setDescription('This object can be used for specifying the file transfer operation type, upload or download. using tftp service file transfer can implemente between the station and agent. in current agent,if synchronizing file,this object has no weight.')
myFileTransSrcFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myFileTransSrcFileName.setStatus('current')
if mibBuilder.loadTexts: myFileTransSrcFileName.setDescription("This object tell the tftp client to know the file name required to be received in tftp transfer mode;and send the file name list which separate with '\\t' to synchronizing server.")
myFileTransDescFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myFileTransDescFileName.setStatus('current')
if mibBuilder.loadTexts: myFileTransDescFileName.setDescription('File name the file will save as. The object has no weight to file synchronizing.')
myFileTransServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myFileTransServerAddr.setStatus('current')
if mibBuilder.loadTexts: myFileTransServerAddr.setDescription('This object tell the address of transfer destination when required for file transmittion. ')
myFileTransResult = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("success", 1), ("failure", 2), ("parametersIllegel", 3), ("timeout", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileTransResult.setStatus('current')
if mibBuilder.loadTexts: myFileTransResult.setDescription('While the status of this entry is completed, this field of this entry is valid, and carry the operation result of file transfer.')
myFileTransComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileTransComplete.setStatus('current')
if mibBuilder.loadTexts: myFileTransComplete.setDescription('while the file transfer of use parameters stored by this entry is completed the value of this field will be true(1), and if not completed false(2).')
myFileTransDataLength = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileTransDataLength.setStatus('current')
if mibBuilder.loadTexts: myFileTransDataLength.setDescription('the file length transferred, after the transfer is complete, this value is come to valid -- the valude of field myFileTransComplete is true(1).')
myFileTransEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myFileTransEntryStatus.setStatus('current')
if mibBuilder.loadTexts: myFileTransEntryStatus.setDescription('entry status of this entry. and the means in this enviraments can reffer to the text-convention definition of the RowStatus.')
myFileSystemMaxRoom = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileSystemMaxRoom.setStatus('current')
if mibBuilder.loadTexts: myFileSystemMaxRoom.setDescription('the max room of file system in units of MB.')
myFileSystemAvailableRoom = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFileSystemAvailableRoom.setStatus('current')
if mibBuilder.loadTexts: myFileSystemAvailableRoom.setDescription('the available room of file system in units of MB.')
myFileMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2))
myFileMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2, 1))
myFileMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2, 2))
myFileMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2, 1, 1)).setObjects(("MY-FILE-MIB", "myFileMIBGroup"), ("MY-FILE-MIB", "myFileTransMeansMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myFileMIBCompliance = myFileMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: myFileMIBCompliance.setDescription('The compliance statement for entities which implement the My File MIB')
myFileMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2, 2, 1)).setObjects(("MY-FILE-MIB", "myFileTransIndex"), ("MY-FILE-MIB", "myFileTransOperType"), ("MY-FILE-MIB", "myFileTransSrcFileName"), ("MY-FILE-MIB", "myFileTransDescFileName"), ("MY-FILE-MIB", "myFileTransServerAddr"), ("MY-FILE-MIB", "myFileTransResult"), ("MY-FILE-MIB", "myFileTransComplete"), ("MY-FILE-MIB", "myFileTransDataLength"), ("MY-FILE-MIB", "myFileTransEntryStatus"), ("MY-FILE-MIB", "myFileSystemMaxRoom"), ("MY-FILE-MIB", "myFileSystemAvailableRoom"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myFileMIBGroup = myFileMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myFileMIBGroup.setDescription('A collection of objects providing file ability to a My agent.')
myFileTransMeansMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 11, 2, 2, 2)).setObjects(("MY-FILE-MIB", "myFileTransMeans"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myFileTransMeansMIBGroup = myFileTransMeansMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myFileTransMeansMIBGroup.setDescription('A collection of objects providing myFileTransMeans to a My agent.')
mibBuilder.exportSymbols("MY-FILE-MIB", myFileSystemMaxRoom=myFileSystemMaxRoom, PYSNMP_MODULE_ID=myFileMIB, myFileTransResult=myFileTransResult, myFileTransServerAddr=myFileTransServerAddr, myFileTransEntry=myFileTransEntry, myFileTransOperType=myFileTransOperType, myFileTransMeansMIBGroup=myFileTransMeansMIBGroup, myFileMIBGroups=myFileMIBGroups, myFileMIBObjects=myFileMIBObjects, myFileTransDescFileName=myFileTransDescFileName, myFileTransTable=myFileTransTable, myFileTransMeans=myFileTransMeans, myFileSystemAvailableRoom=myFileSystemAvailableRoom, myFileTransDataLength=myFileTransDataLength, myFileTransComplete=myFileTransComplete, myFileTransIndex=myFileTransIndex, myFileTransEntryStatus=myFileTransEntryStatus, myFileMIBCompliance=myFileMIBCompliance, myFileTransSrcFileName=myFileTransSrcFileName, myFileMIBCompliances=myFileMIBCompliances, myFileMIBConformance=myFileMIBConformance, myFileMIB=myFileMIB, myFileMIBGroup=myFileMIBGroup)
