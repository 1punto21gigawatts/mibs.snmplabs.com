#
# PySNMP MIB module APSLB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APSLB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InetAddress, InetAddressPrefixLength, InetVersion, InetZoneIndex, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetVersion", "InetZoneIndex", "InetAddressType")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, IpAddress, iso, MibIdentifier, Bits, Counter64, NotificationType, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "IpAddress", "iso", "MibIdentifier", "Bits", "Counter64", "NotificationType", "Counter32", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
apSLBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 11))
if mibBuilder.loadTexts: apSLBModule.setLastUpdated('201103090000Z')
if mibBuilder.loadTexts: apSLBModule.setOrganization('Acme Packet, Inc')
if mibBuilder.loadTexts: apSLBModule.setContactInfo(' Customer Service Postal: Acme Packet, Inc 100 Crosby Drive Bedford, MA 01730 US Tel: 1-781-328-4400 E-mail: support@acmepacket.com')
if mibBuilder.loadTexts: apSLBModule.setDescription('The Session Load Balancer MIB for Acme Packet.')
apSLBMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1))
apSLBNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 2))
apSLBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3))
apSLBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4))
apSLBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0))
apSLBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1))
apSLBNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2))
apSLBMIBGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1))
apSLBStatsEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 1), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsEndpointsCurrent.setDescription('Number of endpoints currently on the SLB.')
apSLBStatsEndpointsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 2), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsEndpointsDenied.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsEndpointsDenied.setDescription('Number of endpoints denied by the SLB because the system has reached the maximum endpoint capacity.')
apSLBEndpointCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 3), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacity.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacity.setDescription('The maximum number of endpoints allowed on the SLB. This value is based on the installed SLB license(s).')
apSLBEndpointCapacityUpperThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacityUpperThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityUpperThresh.setDescription('The configured endpoint capacity upper threshold percentage.')
apSLBEndpointCapacityLowerThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacityLowerThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityLowerThresh.setDescription('The configured endpoint capacity lower threshold percentage.')
apSLBStatsUntrustedEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 6), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsCurrent.setDescription('Number of untrusted endpoints currently on the SLB.')
apSLBStatsTrustedEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 7), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsTrustedEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsTrustedEndpointsCurrent.setDescription('Number of trusted endpoints currently on the SLB.')
apSLBStatsUntrustedEndpointsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 8), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsDenied.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsDenied.setDescription('The number of untrusted endpoints denied by the SLB due to the total number of untrusted endpoints exceeding the configured maximum allowed.')
apSLBStatsUntrustedEndpointsAgedOut = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 9), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsAgedOut.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsAgedOut.setDescription('The number of untrusted endpoints aged out of the system because they were not authenticated within the configured grace period.')
apSLBUntrustedEndpointCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 10), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacity.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacity.setDescription('The maximum number of untrusted endpoints allowed on the SLB. This value is a configured percentage of the maximum endpoint capacity of the system.')
apSLBUntrustedEndpointCapacityUpperThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityUpperThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityUpperThresh.setDescription('The configured untrusted endpoint capacity upper threshold percentage.')
apSLBUntrustedEndpointCapacityLowerThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityLowerThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityLowerThresh.setDescription('The configured untrusted endpoint capacity lower threshold percentage.')
apSLBEndpointCapacityThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 1)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdTrap.setDescription('The trap will be generated when the number of endpoints on the SLB exceeds the configured threshold.')
apSLBEndpointCapacityThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 2)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdClearTrap.setDescription('The trap will be generated when the number of endpoints on the SLB falls below the configured threshold.')
apSLBUntrustedEndpointCapacityThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 3)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdTrap.setDescription('The trap will be generated when the number of untrusted endpoints on the SLB exceeds the configured threshold.')
apSLBUntrustedEndpointCapacityThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 4)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdClearTrap.setDescription('The trap will be generated when the number of untrusted endpoints on the SLB falls below the configured threshold.')
apSLBEndpointCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1, 1)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsEndpointsDenied"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBEndpointCapacityGroup = apSLBEndpointCapacityGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityGroup.setDescription('Objects for monitoring SLB endpoint capacity.')
apSLBUntrustedEndpointCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1, 2)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsTrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBUntrustedEndpointCapacityGroup = apSLBUntrustedEndpointCapacityGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityGroup.setDescription('Objects for monitoring SLB untrusted endpoint capacity.')
apSLBEndpointCapacityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2, 1)).setObjects(("APSLB-MIB", "apSLBEndpointCapacityThresholdTrap"), ("APSLB-MIB", "apSLBEndpointCapacityThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBEndpointCapacityNotificationsGroup = apSLBEndpointCapacityNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityNotificationsGroup.setDescription('Traps to monitor SLB endpoint capacity threshold crossings.')
apSLBUntrustedEndpointCapacityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2, 2)).setObjects(("APSLB-MIB", "apSLBUntrustedEndpointCapacityThresholdTrap"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBUntrustedEndpointCapacityNotificationsGroup = apSLBUntrustedEndpointCapacityNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityNotificationsGroup.setDescription('Traps to monitor SLB untrusted endpoint capacity threshold crossings.')
mibBuilder.exportSymbols("APSLB-MIB", apSLBEndpointCapacityNotificationsGroup=apSLBEndpointCapacityNotificationsGroup, apSLBEndpointCapacityLowerThresh=apSLBEndpointCapacityLowerThresh, apSLBUntrustedEndpointCapacityLowerThresh=apSLBUntrustedEndpointCapacityLowerThresh, apSLBStatsUntrustedEndpointsAgedOut=apSLBStatsUntrustedEndpointsAgedOut, apSLBEndpointCapacityThresholdTrap=apSLBEndpointCapacityThresholdTrap, apSLBUntrustedEndpointCapacityGroup=apSLBUntrustedEndpointCapacityGroup, apSLBUntrustedEndpointCapacity=apSLBUntrustedEndpointCapacity, apSLBUntrustedEndpointCapacityThresholdTrap=apSLBUntrustedEndpointCapacityThresholdTrap, apSLBStatsUntrustedEndpointsCurrent=apSLBStatsUntrustedEndpointsCurrent, apSLBNotifications=apSLBNotifications, apSLBModule=apSLBModule, apSLBNotificationPrefix=apSLBNotificationPrefix, apSLBConformance=apSLBConformance, apSLBMIBObjects=apSLBMIBObjects, apSLBGroups=apSLBGroups, apSLBMIBGeneralObjects=apSLBMIBGeneralObjects, apSLBStatsEndpointsCurrent=apSLBStatsEndpointsCurrent, apSLBUntrustedEndpointCapacityUpperThresh=apSLBUntrustedEndpointCapacityUpperThresh, apSLBEndpointCapacity=apSLBEndpointCapacity, apSLBStatsTrustedEndpointsCurrent=apSLBStatsTrustedEndpointsCurrent, apSLBUntrustedEndpointCapacityNotificationsGroup=apSLBUntrustedEndpointCapacityNotificationsGroup, apSLBStatsUntrustedEndpointsDenied=apSLBStatsUntrustedEndpointsDenied, apSLBNotificationGroups=apSLBNotificationGroups, PYSNMP_MODULE_ID=apSLBModule, apSLBEndpointCapacityThresholdClearTrap=apSLBEndpointCapacityThresholdClearTrap, apSLBUntrustedEndpointCapacityThresholdClearTrap=apSLBUntrustedEndpointCapacityThresholdClearTrap, apSLBStatsEndpointsDenied=apSLBStatsEndpointsDenied, apSLBNotificationObjects=apSLBNotificationObjects, apSLBEndpointCapacityGroup=apSLBEndpointCapacityGroup, apSLBEndpointCapacityUpperThresh=apSLBEndpointCapacityUpperThresh)
