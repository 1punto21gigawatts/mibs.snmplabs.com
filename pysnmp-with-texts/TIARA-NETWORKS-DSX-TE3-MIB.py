#
# PySNMP MIB module TIARA-NETWORKS-DSX-TE3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-NETWORKS-DSX-TE3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, NotificationType, ObjectIdentity, Gauge32, Integer32, IpAddress, Counter32, MibIdentifier, iso, Counter64, Unsigned32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Gauge32", "Integer32", "IpAddress", "Counter32", "MibIdentifier", "iso", "Counter64", "Unsigned32", "TimeTicks", "Bits")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
LEDState, dsxT3E3IfGroup = mibBuilder.importSymbols("TIARA-NETWORKS-DSX-TC-MIB", "LEDState", "dsxT3E3IfGroup")
dsxT3E3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1))
dsxT3E3MIB.setRevisions(('1999-04-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: dsxT3E3MIB.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: dsxT3E3MIB.setLastUpdated('9904230000Z')
if mibBuilder.loadTexts: dsxT3E3MIB.setOrganization('Tiara Networks Inc.')
if mibBuilder.loadTexts: dsxT3E3MIB.setContactInfo(' Tiara Networks Customer Service Postal: 525 Race Street, Suite 100, San Jose, CA 95126 USA Tel: +1 408-216-4700 Fax: +1 408-216-4701 E-mail: support@tiaranetworks.com')
if mibBuilder.loadTexts: dsxT3E3MIB.setDescription(' Interface MIB definitions for Tiara T3/E3 interface modules.')
dsxT3E3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2))
dsxT3E3TrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1))
dsxT3E3IfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1))
dsxT3E3IfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2))
dsxT3E3IfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3))
dsxT3E3IfConfigLineTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: dsxT3E3IfConfigLineTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigLineTable.setDescription('A list of T3/E3 interfaces currently configured.')
dsxT3E3IfConfigLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"))
if mibBuilder.loadTexts: dsxT3E3IfConfigLineEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigLineEntry.setDescription('An entry containing configuration for each currently active T3/E3 interface.')
dsxT3E3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3IfIndex.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIndex.setDescription('An integer value which is an index in to the entries of ifTable (MIB-II) whose interface type is ds3')
dsxT3E3IfConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("linetype-m13", 2), ("linetype-cbitparity", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigLineType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigLineType.setDescription('This variable indicates the variety of T3/E3 C-bit or E3 application implementing this interface. The type of interface affects the interpretation of the usage and error statistics. The rate of T3/E3 is 44.736 Mbps and E3 is 34.368 Mbps. . The values, in sequence, describe: linetype-m13 ANSI T1.107-1988 linetype-cbitparity ANSI T1.107a-1990')
dsxT3E3IfConfigLineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("linecode-b3zs", 2), ("linecode-hdb3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfConfigLineCode.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigLineCode.setDescription('This variable describes the variety of Zero Code Suppression used on this interface, which in turn affects a number of its characteristics. linecode-B3ZS and linecode-HDB3 refer to the use of specified patterns of normal bits and bipolar violations which are used to replace sequences of zero bits of a specified length.')
dsxT3E3IfConfigCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cable-length-0-to-225", 1), ("cable-length-225-to-450", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigCableLength.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigCableLength.setDescription('The length of the T3/E3 line in feet. This object provides information for line build out circuitry if it exists and can use this object to adjust the line build out.')
dsxT3E3IfConfigTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigTransmitClock.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigTransmitClock.setDescription('The source of Transmit Clock. is derived from the recovered receive clock of another T3/E3 interface')
dsxT3E3IfConfigDS3ScramblingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mode-0", 1), ("mode-1", 2), ("mode-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingMode.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingMode.setDescription('Scrambling mode')
dsxT3E3IfConfigDS3ScramblingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingEnable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingEnable.setDescription('To enable or disable scrambling. This is applicable only to clear channel TE3.')
dsxT3E3IfConfigMdlTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2), )
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlTable.setDescription('A list of T3/E3 interfaces currently configured.')
dsxT3E3IfConfigMdlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfConfigMdlEntry"))
dsxT3E3IfConfigMdlEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEntry.setDescription('An entry containing configuration for each currently active T3/E3 interface.')
dsxT3E3IfConfigMdlEIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEIC.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEIC.setDescription('The Equipment Identification Code (upto 10 characters) describes a specific piece of equipment')
dsxT3E3IfConfigMdlLIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlLIC.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlLIC.setDescription('The Location Identification Code (up to 11 characters) describes specific location')
dsxT3E3IfConfigMdlFIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlFIC.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlFIC.setDescription('The Frame Identification Code (upto 10 charaters ) identifies where the equipment is located within a building at a given location')
dsxT3E3IfConfigMdlUIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlUIC.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlUIC.setDescription('A code (upto 6 characters) that identifies the equipment location within a bay')
dsxT3E3IfConfigMdlPFI = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPFI.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPFI.setDescription('The Facility Identification code (upto 38 characters) identifies a specific T3/E3 path ')
dsxT3E3IfConfigMdlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPort.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPort.setDescription('The Port number is the designation of equipment, port that initiates the idle signal.')
dsxT3E3IfConfigMdlGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlGenerator.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlGenerator.setDescription(' Gen No. is the number of signal generator that initiates the test signal')
dsxT3E3IfAlarmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3))
dsxT3E3IfAlarmThresholdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigTable.setDescription('A list of TE3 interface alarm threshold configuration.')
dsxT3E3IfAlarmThresholdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAlarmThresholdConfigIndex"))
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigEntry.setDescription('An entry containing alarm configuration for each currently active TE3 interface.')
dsxT3E3IfAlarmThresholdConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigIndex.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigIndex.setDescription('index value of the threshold configuration. ')
dsxT3E3IfAlarmThresholdConfigObject = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("te3-object-lcv", 1), ("te3-object-fbe", 2), ("te3-object-pbe", 3), ("te3-object-cpbe", 4), ("te3-object-febe", 5), ("te3-object-exz", 6), ("te3-object-cofa", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigObject.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigObject.setDescription('Configurable variables for the threshold alarm configuration. ')
dsxT3E3IfAlarmThresholdConfigSamplingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSamplingInterval.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSamplingInterval.setDescription('Sampling Interval for the Threshold Alarm. ')
dsxT3E3IfAlarmThresholdConfigSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sample-absolute", 1), ("sample-delta", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSampleType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSampleType.setDescription('Sampling type for the Threshold Alarm. ')
dsxT3E3IfAlarmThresholdConfigStartupType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigStartupType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigStartupType.setDescription('Startup Type for the Threashold Alarm. ')
dsxT3E3IfAlarmThresholdConfigRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigRisingThreshold.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigRisingThreshold.setDescription('Rising Threshold . ')
dsxT3E3IfAlarmThresholdConfigFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigFallingThreshold.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigFallingThreshold.setDescription('Falling Threshold. ')
dsxT3E3IfTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4), )
if mibBuilder.loadTexts: dsxT3E3IfTestConfigTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestConfigTable.setDescription('A list of TE3 interface test configuration.')
dsxT3E3IfTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfTestConfigEntry"))
dsxT3E3IfTestConfigEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfTestConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestConfigEntry.setDescription('An entry containing test configuration for each currently active TE3 interface.')
dsxT3E3IfTestConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 8, 9))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback-test", 3), ("remote-lpup-test", 8), ("remote-lpdn-test", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfTestConfigType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestConfigType.setDescription('Test type for the TE3 interface. To perform no-test, payload-loopback-test, line-loopback-test only TestType is mandatory. To perform remote-lpup-test and remote-lpdn-test, ConfigLoopCode is mandatory')
dsxT3E3IfTestConfigLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfTestConfigLoopCode.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestConfigLoopCode.setDescription('Loopback code . ')
dsxT3E3IfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: dsxT3E3IfStatusTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusTable.setDescription('A list of TE3 interface status entries')
dsxT3E3IfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfStatusEntry"))
dsxT3E3IfStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfStatusEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusEntry.setDescription('An entry containing status entry for each currently active TE3 interface.')
dsxT3E3IfStatusLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("reserved", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("reserved6", 6), ("reserved7", 7), ("sendPattern", 8), ("sendTE3Code", 9), ("sendResetCode", 10), ("sendPayloadCode", 11), ("sendLineCode", 12), ("reserved8", 13), ("febeStatus", 14), ("pdeStatus", 15), ("lorcStatus", 16), ("reserved9", 17), ("reserved10", 18), ("rfebeStatus", 19), ("risStatus", 20), ("rexzStatus", 21), ("reserved11", 22), ("rcvTestCode", 23), ("loopbackStatus", 24), ("rlosStatus", 25), ("rlofStatus", 26), ("taisStatus", 27), ("raisStatus", 28), ("traiStatus", 29), ("rraiStatus", 30), ("no-alarm", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusLineStatus.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusLineStatus.setDescription('Line Status of the T3/E3 interface. sendPattern - TRUE if the line transmiting bit pattern, sendTE3Code - sending T3/E3 code, sendResetCode - transmits Reset Code if it is TRUE, sendPayloadcode - transmits the payload code, sendLinecode - transmitts the line code, febe - Far End Block Error, pde - pulse Density code transmission, lorc - loss of recieve clock, rfebe - recieve far end block error, ris - recieve Idle signal, rexz - recieve exessive zeros, rcvTestCode - recieve test code, loopback - loopback status , rlos - recieve loss of signal, rlof - recieve loss of frame, tais - transmit alarm indication signal, rais - recieve alarm indication signal, trai - transmit remote alarm indication, rrai - recieve remote alarm indication, ')
dsxT3E3IfStatusTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusTransmitClock.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusTransmitClock.setDescription("The source of Tranmit Clock. 'timing-line' indicates that the recovered re- ceive clock is used as the transmit clock. 'timing-internal' indicates that a local clock source is used.")
dsxT3E3IfStatusTestLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 3), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusTestLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusTestLED.setDescription('Status of TEST LED. ')
dsxT3E3IfStatusErrorLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 4), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusErrorLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusErrorLED.setDescription('Status of the Error LED. ')
dsxT3E3IfStatusAisLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 5), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusAisLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusAisLED.setDescription('Status of AIS LED. ')
dsxT3E3IfStatusSignalLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 6), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusSignalLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusSignalLED.setDescription('Status of the Signal LED. ')
dsxT3E3IfStatusFrameLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 7), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusFrameLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusFrameLED.setDescription('Status of the Frame LED. ')
dsxT3E3IfStatusYellowLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 8), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusYellowLED.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfStatusYellowLED.setDescription('Status of the Yellow Alarm LED. ')
dsxT3E3IfAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2), )
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusTable.setDescription('A list of T3/E3 interface status entries')
dsxT3E3IfAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAlarmStatusEntry"))
dsxT3E3IfAlarmStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfAlarmStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("noAlarm", 0), ("rraiAlarm", 1), ("traiAlarm", 2), ("taisAlarm", 3), ("rlofAlarm", 4), ("rlosAlarm", 5), ("loopbackStateAlarm", 6), ("rcvTestCode", 7), ("rbluAlarm", 8), ("risAlarm", 9), ("rexzAlarm", 10), ("rfbeAlarm", 11), ("rpeAlarm", 12), ("rcpeAlarm", 13), ("lorcAlarm", 14), ("tpdeAlarm", 15), ("tfebeAlarm", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusAlarmStatus.setDescription('current status of all the T3/E3 interface alarms. RRAI - Recieve Remote Alarm Indication, TRAI - Transmit Remote Alarm Indication, TAIS - Transmit Alarm Indication Siganl, RLOF - Recieve Loss Of Frame, RLOS - Recieve Loss Of Sync, Loopback - Status of Loop back, rcvTestCode - Recieve Test Code, rblu - Recieve Blue Alarm, RIS - Recieve Idle Signal, REXZ - Recieve Excessive Zeros, RFBE - Recieve Frame Bit Error, RPE - Recieve Parity Error, RCPE - Recieve C-Parity Error, LORC - Loss Of Recive Clock (LORC), TPDE - transmit pulse density, RAIS - Recieve Alarm Indication Signal, TFEBE - Transmit Far End Block Alarm.')
dsxT3E3IfAlarmStatusThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("threshold1", 0), ("threshold2", 1), ("threshold3", 2), ("threshold4", 3), ("threshold5", 4), ("threshold6", 5), ("threshold7", 6), ("threshold8", 7), ("threshold9", 8), ("threshold10", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusThresholdStatus.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusThresholdStatus.setDescription('current status of all the configured threshold alarms. ')
dsxT3E3IfTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3), )
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTable.setDescription('A list of T3/E3 interface test status entries')
dsxT3E3IfTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfTestStatusEntry"))
dsxT3E3IfTestStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfTestStatusEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestStatusEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfTestStatusTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback", 3), ("other-loopback", 4), ("remote-lpup", 6), ("remote-lpdn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestType.setDescription('The test type. ')
dsxT3E3IfTestStatusTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestState.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestState.setDescription('State of the test invoked. ')
dsxT3E3IfTestStatusLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("loopcode-feac", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusLoopCode.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfTestStatusLoopCode.setDescription('Line code for loop back test . ')
dsxT3E3IfLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4), )
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTable.setDescription('A list of T3/E3 interface test status entries')
dsxT3E3IfLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfLastTestResultEntry"))
dsxT3E3IfLastTestResultEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfLastTestResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback", 3), ("other-loopback", 4), ("remote-lpup", 6), ("remote-lpdn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestType.setDescription('The test type. ')
dsxT3E3IfLastTestResultTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestState.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestState.setDescription('State of the test invoked. ')
dsxT3E3IfLastTestResultLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultLoopCode.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultLoopCode.setDescription('Loopcode used loopback the T3/E3 interface in previous test. ')
dsxT3E3IfArchiveStatsValidIntervalsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsTable.setDescription('A list of T3/E3 interface ValidIntervals entries')
dsxT3E3IfArchiveStatsValidIntervalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfArchiveStatsValidIntervalsEntry"))
dsxT3E3IfArchiveStatsValidIntervalsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsEntry.setDescription('An entry containing Valid Intervals entry for each currently active T3/E3 interface.')
dsxT3E3IfAnsiArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsValidIntervals.setDescription(' Archive Stats Valid Interval for ANSI')
dsxT3E3IfIetfArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsValidIntervals.setDescription(' Archive Stats Valid Interval for IETF')
dsxT3E3IfUserTotalStatsValidDays = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsValidDays.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsValidDays.setDescription(' User Total Stats Valid Days')
dsxT3E3IfUserArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsValidIntervals.setDescription(' User Archive Stats Valid Interval. Setting this variable to 0 will clear the User statistics tables ')
dsxT3E3IfErrorEventStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2), )
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsTable.setDescription('A list of T3/E3 interface error events entries')
dsxT3E3IfErrorEventStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfErrorEventStatsEntry"))
dsxT3E3IfErrorEventStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEntry.setDescription('An entry containing Error Events occured on T3/E3 interface.')
dsxT3E3IfErrorEventStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEXZ.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEXZ.setDescription(' Excessive Zeros (EXZ) Error Event count ')
dsxT3E3IfErrorEventStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsPBE.setDescription(' Parity Bit Error Events count ')
dsxT3E3IfErrorEventStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsFEBE.setDescription(' Far End Block Error (FEBE) event count. ')
dsxT3E3IfAnsiStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3))
dsxT3E3IfIetfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4))
dsxT3E3IfUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5))
dsxT3E3IfAnsiCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTable.setDescription('A list of T3/E3 interface current 15 mins interval statistics entries')
dsxT3E3IfAnsiCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiCurrentStatsEntry"))
dsxT3E3IfAnsiCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfAnsiCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsUASState.setDescription('Current State of Availablity of the T3/E3 line ')
dsxT3E3IfAnsiCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTimeInCurrent.setDescription('Current time for statistics ')
dsxT3E3IfAnsiCurrentPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the current 15 minute interval. ')
dsxT3E3IfAnsiCurrentPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsES.setDescription('The number of Errored Seconds, encountered by a T3/E3 interface in the current 15 minute inter- val. ')
dsxT3E3IfAnsiCurrentPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the current 15 minute interval. ')
dsxT3E3IfAnsiCurrentPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSAS.setDescription('The number of Severely Errored Framing Seconds encountered by a T3/E3 interface in the current 15 minute interval. ')
dsxT3E3IfAnsiCurrentPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsUAS.setDescription('The number of Unavailable Seconds encountered by a T3/E3 interface in the current 15 minute in- terval. ')
dsxT3E3IfAnsiCurrentLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the current 15 minute interval. ')
dsxT3E3IfAnsiCurrentLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsES.setDescription('The number of Errored Seconds, encountered by a T3/E3 interface in the current 15 minute inter- val. ')
dsxT3E3IfAnsiCurrentLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the current 15 minute interval. ')
dsxT3E3IfAnsiTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsTable.setDescription('Entries of Toatal Statistics collected over past 24 hrs on T3/E3 interface.')
dsxT3E3IfAnsiTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiTotalStatsEntry"))
dsxT3E3IfAnsiTotalStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfAnsiTotalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiTotalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsES.setDescription('The number of Errored Seconds encountered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiTotalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiTotalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSAS.setDescription('The number of Severely Alarm Seconds encoun- tered by a T3/E3 interface in the previous 24 hour interval.')
dsxT3E3IfAnsiTotalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsUAS.setDescription('The number of Unavailable Seconds encountered by a T3/E3 interface in the previous 24 hour in- terval. ')
dsxT3E3IfAnsiTotalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiTotalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsES.setDescription('The number of Errored Seconds encountered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiTotalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the previous 24 hour interval. ')
dsxT3E3IfAnsiArchiveIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsTable.setDescription('A list of T3/E3 interface Archive statistics entries')
dsxT3E3IfAnsiArchiveIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfAnsiArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsInterval.setDescription(' Entries of the ANSI Archive Statistics collected for T3/E3 interface. ')
dsxT3E3IfAnsiArchiveIntervalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsES.setDescription('The number of Errored Seconds, encountered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the current interval . ')
dsxT3E3IfAnsiArchiveIntervalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSAS.setDescription('The number of Severely Errored Framing Seconds encountered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsUAS.setDescription('The number of Unavailable Seconds encountered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsCV.setDescription('The number of Path Coding Violations encoun- tered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsES.setDescription('The number of Errored Seconds, encountered by a T3/E3 interface in the current interval. ')
dsxT3E3IfAnsiArchiveIntervalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsSES.setDescription('The number of Severely Errored Seconds encoun- tered by a T3/E3 interface in the current interval . ')
dsxT3E3IfIetfCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1), )
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTable.setDescription('A list of current 15 minutes IETF based Statistics collected for T3/E3 interface ')
dsxT3E3IfIetfCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfCurrentStatsEntry"))
dsxT3E3IfIetfCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfIetfCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUASState.setDescription('Current state of availablity of interface. ')
dsxT3E3IfIetfCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTimeInCurrent.setDescription('The number of seconds that have elapsed since the beginning of the IETF current error-measurement period. ')
dsxT3E3IfIetfCurrentStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPES.setDescription('The number of IETF Parity Errored Seconds encoun- tered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPSES.setDescription('The number of Parity Severely Errored Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsSEFS.setDescription('The number of IETF Severely Errored Framing Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUAS.setDescription('The number of Unavailable Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLCV.setDescription('The number of Line Code Violations encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPCV.setDescription('The number of IETF Path Coding Violations reported via the far end block error count en- countered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLES.setDescription('The number of IETF Line Errored Seconds en- countered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCCV.setDescription('The number of IETF C-bit Coding Violations encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCES.setDescription('The number of IETF C-bit Errored Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfCurrentStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCSES.setDescription('The number of IETF C-Bit Severely Errored Seconds. ')
dsxT3E3IfIetfTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2), )
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsTable.setDescription('A list of entries for Statistics collected over 24 hrs')
dsxT3E3IfIetfTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfTotalStatsEntry"))
dsxT3E3IfIetfTotalStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfIetfTotalStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPES.setDescription('Total number of IETF Errored Seconds encoun- tered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPSES.setDescription('Total number of IETF Severely Errored Seconds encountered by a T3/E3 interface during past 24 hrs.')
dsxT3E3IfIetfTotalStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsSEFS.setDescription('Total number of IETF Severely Errored Framing Seconds encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsUAS.setDescription('Total number of Unavailable Seconds encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLCV.setDescription('Total number of Line Code Violations encountered by a T3/E3 interface during past 24hrs. ')
dsxT3E3IfIetfTotalStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPCV.setDescription('Total number of IETF Path Coding Violations encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLES.setDescription('Total number of IETF Line Errored Seconds encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCCV.setDescription('Total number of IETF C-Bit Parity Code Violations encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCES.setDescription('Total number of IETF C-Bit Parity Errored Seconds encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfIetfTotalStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCSES.setDescription('Total number of IETF C-Bit Parity Severely Errored Seconds encountered by a T3/E3 interface during past 24 hrs.')
dsxT3E3IfIetfArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3), )
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsTable.setDescription('A list of T3/E3 interface IETF Archive Statistics entries')
dsxT3E3IfIetfArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfIetfArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsInterval.setDescription('The total number of intervals for which statistics would be collected. ')
dsxT3E3IfIetfArchiveStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPES.setDescription('The number of IETF Errored Seconds encoun- tered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPSES.setDescription('The number of IETF Severely Errored Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsSEFS.setDescription('The number of IETF Severely Errored Framing Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsUAS.setDescription('The number of Unavailable Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLCV.setDescription('The number of Line Code Violations encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPCV.setDescription('The number of IETF Path Coding Violations reported via the far end block error count en- countered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLES.setDescription('The number of IETF Line Errored Seconds en- countered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCCV.setDescription('The number of IETF C-bit Parity Code Violations encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCES.setDescription('The number of IETF C-bit Parity Errored Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfIetfArchiveStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCSES.setDescription('The number of IETF C-bit Parity Severrly Errored Seconds encountered by a T3/E3 interface. ')
dsxT3E3IfUserCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1), )
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTable.setDescription('A list of T3/E3 interface User Current 15 minute interval Statistics entries')
dsxT3E3IfUserCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserCurrentStatsEntry"))
dsxT3E3IfUserCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfUserCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsUASState.setDescription('The Current status of availablity of the T3/E3 interface.')
dsxT3E3IfUserCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTimeInCurrent.setDescription('The number of seconds that have elapsed since the beginning of the current error-measurement period. ')
dsxT3E3IfUserCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsLCV.setDescription('The number of Line Code Violations encountered by a T3/E3 interface.')
dsxT3E3IfUserCurrentStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFBE.setDescription('The number of Frame Bit Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserCurrentStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsPBE.setDescription('The number of Parity Bit Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserCurrentStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCPBE.setDescription('The number of C-parity Bit Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserCurrentStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFEBE.setDescription('The number of Far End Block Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserCurrentStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEXZ.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEXZ.setDescription('The number of Excessive Zeros encountered by a T3/E3 interface.')
dsxT3E3IfUserCurrentStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCOFA.setDescription('The number of Change Of Frame Alighnment encountered by a T3/E3 interface. ')
dsxT3E3IfUserTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2), )
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsTable.setDescription('A list of entries for Statistics collected over 24 hrs')
dsxT3E3IfUserTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserTotalStatsDay"))
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfUserTotalStatsDay = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsDay.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsDay.setDescription('The total number of Days for which statistics would be collected. ')
dsxT3E3IfUserTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsLCV.setDescription('Total number of Line Code Violations encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserTotalStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFBE.setDescription('Total number of Frame Bit Errors encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserTotalStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsPBE.setDescription('Total number of Parity Bit Errors encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserTotalStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCPBE.setDescription('Total number of C-bit Parity Bit Errors encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserTotalStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFEBE.setDescription('Total number of Far End Block Errors encountered by a T3/E3 interface during past 24 hrs ')
dsxT3E3IfUserTotalStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEXZ.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEXZ.setDescription('Total number of Excessive Zeros encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserTotalStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCOFA.setDescription(' Total number of Change Of Frame Alignment encountered by a T3/E3 interface during past 24 hrs. ')
dsxT3E3IfUserLifetimeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3), )
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsTable.setDescription('A list of T3/E3 interface Statistics collected since the system was powered on entries')
dsxT3E3IfUserLifetimeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserLifetimeStatsEntry"))
dsxT3E3IfUserLifetimeStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfUserLifetimeStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPES.setDescription('Total number of Parity Errored Seconds encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPSES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPSES.setDescription('Total number of Parity Severe Errored seconds encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsSEFS.setDescription('Total number of Severly Errored Frame Seconds encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsUAS.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsUAS.setDescription('Total number of Un-Available Seconds encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLCV.setDescription('Total number of Line Code Violations encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPCV.setDescription('Total number of Path Code Violations encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLES.setDescription('Total number of Line Errored Seconds encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCCV.setDescription('Total number of C-bit Code Violations encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCES.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCES.setDescription('Total number of C-bit Errored Seconds encountered by a T3/E3 interface since the interface is up.')
dsxT3E3IfUserLifetimeStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFBE.setDescription('Total number of Frame Bit Errors encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPBE.setDescription('Total number of Parity Bit Errors encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCPBE.setDescription('Total number of C-bit Parity Bit Errors encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFEBE.setDescription('Total number of Far End Block Errors encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEXZ.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEXZ.setDescription('Total number of Excessive Zeros encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserLifetimeStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCOFA.setDescription('Total number of Change Of Frame Alighnment encountered by a T3/E3 interface since the interface is up. ')
dsxT3E3IfUserArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4), )
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsTable.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsTable.setDescription('A list of T3/E3 interface User Archive Statistics entries')
dsxT3E3IfUserArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
dsxT3E3IfUserArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsInterval.setDescription('The total number of intervals for which statistics would be collected. ')
dsxT3E3IfUserArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsLCV.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsLCV.setDescription('The number of Line Code Violations encountered by a T3/E3 interface. ')
dsxT3E3IfUserArchiveStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFBE.setDescription('The number of Frame Bit Errors encountered by a T3/E3 interface.')
dsxT3E3IfUserArchiveStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsPBE.setDescription('The number of Parity Bit Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserArchiveStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCPBE.setDescription('The number of C Parity Bit Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserArchiveStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFEBE.setDescription('The number of Far End Block Errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserArchiveStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEXZ.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEXZ.setDescription('The number of Exessive Zero errors encountered by a T3/E3 interface. ')
dsxT3E3IfUserArchiveStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCOFA.setDescription('The number of Change Of Frame Alignment encountered by a T3/E3 interface. ')
dsxT3E3Number = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3Number.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3Number.setDescription(' This variable indicates the T3/E3 interface number from where this alarm originated.')
dsxT3E3AlarmType = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("te3-alarm-rais", 1), ("te3-alarm-roof", 2), ("te3-alarm-rrai", 3), ("te3-alarm-ris", 4), ("te3-alarm-rlos", 5), ("te3-alarm-rlof", 6), ("te3-alarm-rexz", 7), ("te3-alarm-rfebe", 8), ("te3-alarm-rpe", 9), ("te3-alarm-rcpe", 10), ("te3-alarm-lorc", 11), ("te3-alarm-tpde", 12), ("te3-alarm-tais", 13), ("te3-alarm-trai", 14), ("te3-alarm-tfebe", 15), ("te1-alarm-threshold1", 16), ("te1-alarm-threshold2", 17), ("te1-alarm-threshold3", 18), ("te1-alarm-threshold4", 19), ("te1-alarm-threshold5", 20), ("te1-alarm-threshold6", 21), ("te1-alarm-threshold7", 22), ("te1-alarm-threshold8", 23), ("te1-alarm-threshold9", 24), ("te1-alarm-threshold10", 25))))
if mibBuilder.loadTexts: dsxT3E3AlarmType.setStatus('current')
if mibBuilder.loadTexts: dsxT3E3AlarmType.setDescription(' Alarm status T3/E3 interface RRAI - Recieve Receive Alarm Indication, TRAI - Transmit Receive Alarm Indication, TAIS - Transmit Alarm Indication Siganl, RLOF - Recieve Loss Of Frame, RLOS - Recieve Loss Of Sync, Loopback - Status of Loop back, rcvTestCode - Receive Test Code, rblu - Receive Blue Alarm, RIS - Receive Idle Signal, REXZ - Receive Excessive Zeros, RFBE - Receive Frame Bit Error, RPE - Receive Parity Error, RCPE - Receive C-Parity Error, LORC - Loss Of Receive Clock (LORC), TPDE - transmit pulse density, RAIS - Recieve Alarm Indication Signal, TFEBE - Transmit Far End Block Alarm, Threshold 1-10 - TRUE if it is configured. ')
dsxT3E3AlarmOnTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2) + (0,1)).setObjects(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3Number"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3AlarmType"))
if mibBuilder.loadTexts: dsxT3E3AlarmOnTrap.setDescription('T3/E3 interface alarm trap for Alarm On state.')
dsxT3E3AlarmOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2) + (0,2)).setObjects(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3Number"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3AlarmType"))
if mibBuilder.loadTexts: dsxT3E3AlarmOffTrap.setDescription('T3/E3 interface alarm trap for Alarm Off state.')
mibBuilder.exportSymbols("TIARA-NETWORKS-DSX-TE3-MIB", dsxT3E3IfErrorEventStatsFEBE=dsxT3E3IfErrorEventStatsFEBE, dsxT3E3IfUserArchiveStatsFBE=dsxT3E3IfUserArchiveStatsFBE, dsxT3E3IfIetfArchiveStatsCCV=dsxT3E3IfIetfArchiveStatsCCV, dsxT3E3IfTestConfigTable=dsxT3E3IfTestConfigTable, dsxT3E3IfAnsiArchiveIntervalStatsEntry=dsxT3E3IfAnsiArchiveIntervalStatsEntry, dsxT3E3IfIetfArchiveStatsEntry=dsxT3E3IfIetfArchiveStatsEntry, dsxT3E3IfUserLifetimeStatsUAS=dsxT3E3IfUserLifetimeStatsUAS, dsxT3E3IfAlarmStatusThresholdStatus=dsxT3E3IfAlarmStatusThresholdStatus, dsxT3E3IfLastTestResultTable=dsxT3E3IfLastTestResultTable, dsxT3E3IfAnsiCurrentLineStatsSES=dsxT3E3IfAnsiCurrentLineStatsSES, dsxT3E3IfUserCurrentStatsTable=dsxT3E3IfUserCurrentStatsTable, dsxT3E3IfUserTotalStatsCOFA=dsxT3E3IfUserTotalStatsCOFA, dsxT3E3IfAnsiCurrentStatsEntry=dsxT3E3IfAnsiCurrentStatsEntry, dsxT3E3IfUserTotalStatsDay=dsxT3E3IfUserTotalStatsDay, dsxT3E3IfIetfCurrentStatsEntry=dsxT3E3IfIetfCurrentStatsEntry, dsxT3E3AlarmOffTrap=dsxT3E3AlarmOffTrap, dsxT3E3IfAnsiTotalPathStatsES=dsxT3E3IfAnsiTotalPathStatsES, dsxT3E3IfConfigMdlPFI=dsxT3E3IfConfigMdlPFI, dsxT3E3IfAlarmStatusEntry=dsxT3E3IfAlarmStatusEntry, dsxT3E3IfUserArchiveStatsPBE=dsxT3E3IfUserArchiveStatsPBE, dsxT3E3IfUserStatsGroup=dsxT3E3IfUserStatsGroup, dsxT3E3IfUserLifetimeStatsCOFA=dsxT3E3IfUserLifetimeStatsCOFA, dsxT3E3IfUserCurrentStatsCPBE=dsxT3E3IfUserCurrentStatsCPBE, dsxT3E3IfIetfArchiveStatsLCV=dsxT3E3IfIetfArchiveStatsLCV, dsxT3E3IfUserTotalStatsTable=dsxT3E3IfUserTotalStatsTable, dsxT3E3IfUserTotalStatsFBE=dsxT3E3IfUserTotalStatsFBE, dsxT3E3IfConfigMdlPort=dsxT3E3IfConfigMdlPort, dsxT3E3IfAlarmThresholdConfigSampleType=dsxT3E3IfAlarmThresholdConfigSampleType, dsxT3E3IfIetfArchiveStatsCES=dsxT3E3IfIetfArchiveStatsCES, dsxT3E3IfIetfTotalStatsSEFS=dsxT3E3IfIetfTotalStatsSEFS, dsxT3E3IfConfigMdlFIC=dsxT3E3IfConfigMdlFIC, dsxT3E3IfLastTestResultEntry=dsxT3E3IfLastTestResultEntry, dsxT3E3IfConfigGroup=dsxT3E3IfConfigGroup, dsxT3E3IfAnsiArchiveIntervalPathStatsES=dsxT3E3IfAnsiArchiveIntervalPathStatsES, dsxT3E3IfUserCurrentStatsUASState=dsxT3E3IfUserCurrentStatsUASState, dsxT3E3IfUserArchiveStatsEXZ=dsxT3E3IfUserArchiveStatsEXZ, dsxT3E3IfStatusSignalLED=dsxT3E3IfStatusSignalLED, dsxT3E3IfIetfCurrentStatsTimeInCurrent=dsxT3E3IfIetfCurrentStatsTimeInCurrent, dsxT3E3IfUserTotalStatsLCV=dsxT3E3IfUserTotalStatsLCV, dsxT3E3IfAlarmThresholdConfigRisingThreshold=dsxT3E3IfAlarmThresholdConfigRisingThreshold, dsxT3E3IfIetfTotalStatsEntry=dsxT3E3IfIetfTotalStatsEntry, dsxT3E3IfStatsGroup=dsxT3E3IfStatsGroup, dsxT3E3IfAnsiTotalPathStatsCV=dsxT3E3IfAnsiTotalPathStatsCV, dsxT3E3IfLastTestResultTestState=dsxT3E3IfLastTestResultTestState, dsxT3E3IfAnsiTotalStatsEntry=dsxT3E3IfAnsiTotalStatsEntry, dsxT3E3IfUserArchiveStatsTable=dsxT3E3IfUserArchiveStatsTable, dsxT3E3IfTestStatusEntry=dsxT3E3IfTestStatusEntry, dsxT3E3IfUserArchiveStatsValidIntervals=dsxT3E3IfUserArchiveStatsValidIntervals, dsxT3E3IfConfigLineCode=dsxT3E3IfConfigLineCode, dsxT3E3IfAnsiArchiveStatsValidIntervals=dsxT3E3IfAnsiArchiveStatsValidIntervals, dsxT3E3IfConfigMdlGenerator=dsxT3E3IfConfigMdlGenerator, dsxT3E3IfAlarmThresholdConfigIndex=dsxT3E3IfAlarmThresholdConfigIndex, dsxT3E3IfAnsiCurrentPathStatsCV=dsxT3E3IfAnsiCurrentPathStatsCV, dsxT3E3IfAnsiTotalLineStatsES=dsxT3E3IfAnsiTotalLineStatsES, dsxT3E3AlarmOnTrap=dsxT3E3AlarmOnTrap, dsxT3E3IfAnsiTotalStatsTable=dsxT3E3IfAnsiTotalStatsTable, dsxT3E3Traps=dsxT3E3Traps, dsxT3E3IfAlarmConfigGroup=dsxT3E3IfAlarmConfigGroup, dsxT3E3IfIetfArchiveStatsPES=dsxT3E3IfIetfArchiveStatsPES, dsxT3E3IfLastTestResultTestType=dsxT3E3IfLastTestResultTestType, dsxT3E3IfIetfCurrentStatsLCV=dsxT3E3IfIetfCurrentStatsLCV, dsxT3E3IfStatusLineStatus=dsxT3E3IfStatusLineStatus, dsxT3E3IfIetfTotalStatsLCV=dsxT3E3IfIetfTotalStatsLCV, dsxT3E3IfIetfArchiveStatsSEFS=dsxT3E3IfIetfArchiveStatsSEFS, dsxT3E3IfUserTotalStatsCPBE=dsxT3E3IfUserTotalStatsCPBE, dsxT3E3IfStatusTestLED=dsxT3E3IfStatusTestLED, dsxT3E3IfAnsiTotalLineStatsSES=dsxT3E3IfAnsiTotalLineStatsSES, dsxT3E3IfUserTotalStatsPBE=dsxT3E3IfUserTotalStatsPBE, dsxT3E3IfIetfTotalStatsCCV=dsxT3E3IfIetfTotalStatsCCV, dsxT3E3IfAnsiArchiveIntervalPathStatsSES=dsxT3E3IfAnsiArchiveIntervalPathStatsSES, dsxT3E3IfIetfCurrentStatsPCV=dsxT3E3IfIetfCurrentStatsPCV, dsxT3E3IfConfigCableLength=dsxT3E3IfConfigCableLength, dsxT3E3IfAlarmThresholdConfigTable=dsxT3E3IfAlarmThresholdConfigTable, dsxT3E3IfUserLifetimeStatsSEFS=dsxT3E3IfUserLifetimeStatsSEFS, dsxT3E3IfUserTotalStatsEXZ=dsxT3E3IfUserTotalStatsEXZ, dsxT3E3Number=dsxT3E3Number, dsxT3E3IfUserLifetimeStatsPCV=dsxT3E3IfUserLifetimeStatsPCV, dsxT3E3IfAnsiArchiveIntervalPathStatsUAS=dsxT3E3IfAnsiArchiveIntervalPathStatsUAS, dsxT3E3IfUserArchiveStatsFEBE=dsxT3E3IfUserArchiveStatsFEBE, dsxT3E3IfIetfCurrentStatsCSES=dsxT3E3IfIetfCurrentStatsCSES, dsxT3E3IfIetfArchiveStatsPSES=dsxT3E3IfIetfArchiveStatsPSES, dsxT3E3IfUserLifetimeStatsEntry=dsxT3E3IfUserLifetimeStatsEntry, dsxT3E3IfAnsiArchiveIntervalStatsTable=dsxT3E3IfAnsiArchiveIntervalStatsTable, dsxT3E3IfAnsiTotalPathStatsSES=dsxT3E3IfAnsiTotalPathStatsSES, dsxT3E3IfUserCurrentStatsPBE=dsxT3E3IfUserCurrentStatsPBE, dsxT3E3IfStatusGroup=dsxT3E3IfStatusGroup, dsxT3E3IfIetfCurrentStatsTable=dsxT3E3IfIetfCurrentStatsTable, dsxT3E3IfAnsiCurrentStatsTable=dsxT3E3IfAnsiCurrentStatsTable, dsxT3E3IfTestConfigLoopCode=dsxT3E3IfTestConfigLoopCode, dsxT3E3IfConfigMdlEntry=dsxT3E3IfConfigMdlEntry, dsxT3E3IfUserTotalStatsFEBE=dsxT3E3IfUserTotalStatsFEBE, dsxT3E3IfUserLifetimeStatsPSES=dsxT3E3IfUserLifetimeStatsPSES, dsxT3E3IfAnsiTotalPathStatsUAS=dsxT3E3IfAnsiTotalPathStatsUAS, dsxT3E3IfAnsiArchiveIntervalLineStatsCV=dsxT3E3IfAnsiArchiveIntervalLineStatsCV, dsxT3E3IfTestConfigType=dsxT3E3IfTestConfigType, dsxT3E3IfStatusYellowLED=dsxT3E3IfStatusYellowLED, dsxT3E3IfUserCurrentStatsLCV=dsxT3E3IfUserCurrentStatsLCV, dsxT3E3IfTestStatusLoopCode=dsxT3E3IfTestStatusLoopCode, dsxT3E3IfIetfTotalStatsPSES=dsxT3E3IfIetfTotalStatsPSES, dsxT3E3IfUserArchiveStatsLCV=dsxT3E3IfUserArchiveStatsLCV, dsxT3E3IfAnsiArchiveStatsInterval=dsxT3E3IfAnsiArchiveStatsInterval, dsxT3E3IfTestStatusTestType=dsxT3E3IfTestStatusTestType, dsxT3E3IfIndex=dsxT3E3IfIndex, dsxT3E3IfIetfTotalStatsTable=dsxT3E3IfIetfTotalStatsTable, dsxT3E3TrapVariables=dsxT3E3TrapVariables, dsxT3E3IfIetfArchiveStatsUAS=dsxT3E3IfIetfArchiveStatsUAS, dsxT3E3IfAlarmThresholdConfigObject=dsxT3E3IfAlarmThresholdConfigObject, dsxT3E3IfTestStatusTestState=dsxT3E3IfTestStatusTestState, dsxT3E3IfUserLifetimeStatsFEBE=dsxT3E3IfUserLifetimeStatsFEBE, dsxT3E3AlarmType=dsxT3E3AlarmType, dsxT3E3IfUserLifetimeStatsCPBE=dsxT3E3IfUserLifetimeStatsCPBE, dsxT3E3IfIetfTotalStatsUAS=dsxT3E3IfIetfTotalStatsUAS, dsxT3E3IfConfigDS3ScramblingMode=dsxT3E3IfConfigDS3ScramblingMode, dsxT3E3IfStatusFrameLED=dsxT3E3IfStatusFrameLED, dsxT3E3IfAnsiTotalLineStatsCV=dsxT3E3IfAnsiTotalLineStatsCV, dsxT3E3IfUserArchiveStatsEntry=dsxT3E3IfUserArchiveStatsEntry, dsxT3E3IfConfigTransmitClock=dsxT3E3IfConfigTransmitClock, dsxT3E3IfAnsiArchiveIntervalPathStatsCV=dsxT3E3IfAnsiArchiveIntervalPathStatsCV, dsxT3E3IfUserArchiveStatsCPBE=dsxT3E3IfUserArchiveStatsCPBE, dsxT3E3IfErrorEventStatsEntry=dsxT3E3IfErrorEventStatsEntry, dsxT3E3MIB=dsxT3E3MIB, dsxT3E3IfUserCurrentStatsEXZ=dsxT3E3IfUserCurrentStatsEXZ, dsxT3E3IfTestStatusTable=dsxT3E3IfTestStatusTable, dsxT3E3IfConfigLineTable=dsxT3E3IfConfigLineTable, dsxT3E3IfIetfCurrentStatsLES=dsxT3E3IfIetfCurrentStatsLES, dsxT3E3IfConfigDS3ScramblingEnable=dsxT3E3IfConfigDS3ScramblingEnable, dsxT3E3IfStatusErrorLED=dsxT3E3IfStatusErrorLED, dsxT3E3IfIetfArchiveStatsValidIntervals=dsxT3E3IfIetfArchiveStatsValidIntervals, dsxT3E3IfStatusTransmitClock=dsxT3E3IfStatusTransmitClock, dsxT3E3IfAnsiStatsGroup=dsxT3E3IfAnsiStatsGroup, dsxT3E3IfUserCurrentStatsFBE=dsxT3E3IfUserCurrentStatsFBE, dsxT3E3IfIetfArchiveStatsCSES=dsxT3E3IfIetfArchiveStatsCSES, dsxT3E3IfAnsiCurrentStatsUASState=dsxT3E3IfAnsiCurrentStatsUASState, dsxT3E3IfUserCurrentStatsTimeInCurrent=dsxT3E3IfUserCurrentStatsTimeInCurrent, dsxT3E3IfIetfCurrentStatsSEFS=dsxT3E3IfIetfCurrentStatsSEFS, dsxT3E3IfIetfCurrentStatsPSES=dsxT3E3IfIetfCurrentStatsPSES, dsxT3E3IfIetfArchiveStatsLES=dsxT3E3IfIetfArchiveStatsLES, dsxT3E3IfIetfCurrentStatsUASState=dsxT3E3IfIetfCurrentStatsUASState, dsxT3E3IfAlarmThresholdConfigStartupType=dsxT3E3IfAlarmThresholdConfigStartupType, PYSNMP_MODULE_ID=dsxT3E3MIB, dsxT3E3IfIetfTotalStatsCES=dsxT3E3IfIetfTotalStatsCES, dsxT3E3IfUserCurrentStatsCOFA=dsxT3E3IfUserCurrentStatsCOFA, dsxT3E3IfLastTestResultLoopCode=dsxT3E3IfLastTestResultLoopCode, dsxT3E3IfIetfArchiveStatsPCV=dsxT3E3IfIetfArchiveStatsPCV, dsxT3E3IfIetfCurrentStatsPES=dsxT3E3IfIetfCurrentStatsPES, dsxT3E3IfConfigMdlLIC=dsxT3E3IfConfigMdlLIC, dsxT3E3IfIetfCurrentStatsCES=dsxT3E3IfIetfCurrentStatsCES, dsxT3E3IfAlarmStatusAlarmStatus=dsxT3E3IfAlarmStatusAlarmStatus, dsxT3E3IfUserArchiveStatsCOFA=dsxT3E3IfUserArchiveStatsCOFA, dsxT3E3IfStatusEntry=dsxT3E3IfStatusEntry, dsxT3E3IfIetfCurrentStatsUAS=dsxT3E3IfIetfCurrentStatsUAS, dsxT3E3IfIetfTotalStatsPES=dsxT3E3IfIetfTotalStatsPES, dsxT3E3IfUserLifetimeStatsPBE=dsxT3E3IfUserLifetimeStatsPBE, dsxT3E3IfIetfTotalStatsPCV=dsxT3E3IfIetfTotalStatsPCV, dsxT3E3IfUserArchiveStatsInterval=dsxT3E3IfUserArchiveStatsInterval, dsxT3E3IfAnsiArchiveIntervalLineStatsSES=dsxT3E3IfAnsiArchiveIntervalLineStatsSES, dsxT3E3IfArchiveStatsValidIntervalsTable=dsxT3E3IfArchiveStatsValidIntervalsTable, dsxT3E3IfIetfCurrentStatsCCV=dsxT3E3IfIetfCurrentStatsCCV, dsxT3E3IfConfigMdlTable=dsxT3E3IfConfigMdlTable, dsxT3E3IfTestConfigEntry=dsxT3E3IfTestConfigEntry, dsxT3E3IfConfigLineType=dsxT3E3IfConfigLineType, dsxT3E3IfIetfStatsGroup=dsxT3E3IfIetfStatsGroup, dsxT3E3IfAnsiCurrentLineStatsES=dsxT3E3IfAnsiCurrentLineStatsES, dsxT3E3IfIetfTotalStatsLES=dsxT3E3IfIetfTotalStatsLES, dsxT3E3IfStatusTable=dsxT3E3IfStatusTable, dsxT3E3IfUserLifetimeStatsEXZ=dsxT3E3IfUserLifetimeStatsEXZ, dsxT3E3IfUserLifetimeStatsFBE=dsxT3E3IfUserLifetimeStatsFBE, dsxT3E3IfUserLifetimeStatsCCV=dsxT3E3IfUserLifetimeStatsCCV, dsxT3E3IfAlarmThresholdConfigSamplingInterval=dsxT3E3IfAlarmThresholdConfigSamplingInterval, dsxT3E3IfConfigLineEntry=dsxT3E3IfConfigLineEntry, dsxT3E3IfArchiveStatsValidIntervalsEntry=dsxT3E3IfArchiveStatsValidIntervalsEntry, dsxT3E3IfAnsiArchiveIntervalLineStatsES=dsxT3E3IfAnsiArchiveIntervalLineStatsES, dsxT3E3IfAnsiTotalPathStatsSAS=dsxT3E3IfAnsiTotalPathStatsSAS, dsxT3E3IfErrorEventStatsEXZ=dsxT3E3IfErrorEventStatsEXZ, dsxT3E3IfUserLifetimeStatsTable=dsxT3E3IfUserLifetimeStatsTable, dsxT3E3IfUserLifetimeStatsLCV=dsxT3E3IfUserLifetimeStatsLCV, dsxT3E3IfAlarmThresholdConfigEntry=dsxT3E3IfAlarmThresholdConfigEntry, dsxT3E3IfAnsiCurrentPathStatsUAS=dsxT3E3IfAnsiCurrentPathStatsUAS, dsxT3E3IfAlarmThresholdConfigFallingThreshold=dsxT3E3IfAlarmThresholdConfigFallingThreshold, dsxT3E3IfAlarmStatusTable=dsxT3E3IfAlarmStatusTable, dsxT3E3IfStatusAisLED=dsxT3E3IfStatusAisLED, dsxT3E3IfAnsiArchiveIntervalPathStatsSAS=dsxT3E3IfAnsiArchiveIntervalPathStatsSAS, dsxT3E3IfUserCurrentStatsEntry=dsxT3E3IfUserCurrentStatsEntry, dsxT3E3IfAnsiCurrentPathStatsSAS=dsxT3E3IfAnsiCurrentPathStatsSAS, dsxT3E3IfIetfArchiveStatsInterval=dsxT3E3IfIetfArchiveStatsInterval, dsxT3E3IfAnsiCurrentStatsTimeInCurrent=dsxT3E3IfAnsiCurrentStatsTimeInCurrent, dsxT3E3IfUserLifetimeStatsLES=dsxT3E3IfUserLifetimeStatsLES, dsxT3E3IfAnsiCurrentPathStatsES=dsxT3E3IfAnsiCurrentPathStatsES, dsxT3E3IfUserCurrentStatsFEBE=dsxT3E3IfUserCurrentStatsFEBE, dsxT3E3IfIetfArchiveStatsTable=dsxT3E3IfIetfArchiveStatsTable, dsxT3E3IfUserLifetimeStatsCES=dsxT3E3IfUserLifetimeStatsCES, dsxT3E3IfUserTotalStatsValidDays=dsxT3E3IfUserTotalStatsValidDays, dsxT3E3IfIetfTotalStatsCSES=dsxT3E3IfIetfTotalStatsCSES, dsxT3E3IfAnsiCurrentLineStatsCV=dsxT3E3IfAnsiCurrentLineStatsCV, dsxT3E3IfAnsiCurrentPathStatsSES=dsxT3E3IfAnsiCurrentPathStatsSES, dsxT3E3IfUserTotalStatsEntry=dsxT3E3IfUserTotalStatsEntry, dsxT3E3IfUserLifetimeStatsPES=dsxT3E3IfUserLifetimeStatsPES, dsxT3E3IfConfigMdlUIC=dsxT3E3IfConfigMdlUIC, dsxT3E3IfErrorEventStatsPBE=dsxT3E3IfErrorEventStatsPBE, dsxT3E3IfConfigMdlEIC=dsxT3E3IfConfigMdlEIC, dsxT3E3IfErrorEventStatsTable=dsxT3E3IfErrorEventStatsTable)
