#
# PySNMP MIB module HUAWEI-MEMORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MEMORY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:46:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
hwFrameIndex, hwSlotIndex = mibBuilder.importSymbols("HUAWEI-DEVICE-MIB", "hwFrameIndex", "hwSlotIndex")
hwDev, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDev")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, NotificationType, TimeTicks, Gauge32, ModuleIdentity, IpAddress, Counter32, iso, Counter64, ObjectIdentity, MibIdentifier, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "TimeTicks", "Gauge32", "ModuleIdentity", "IpAddress", "Counter32", "iso", "Counter64", "ObjectIdentity", "MibIdentifier", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwMemoryDev = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5))
if mibBuilder.loadTexts: hwMemoryDev.setLastUpdated('200212290900Z')
if mibBuilder.loadTexts: hwMemoryDev.setOrganization('HAUWEI MIB Standard community ')
if mibBuilder.loadTexts: hwMemoryDev.setContactInfo(' ADDR: HUAWEI TECHNOLOGY CO.,LTD,SHEZHEN CHINA Tel: 86-755-26540808 ')
if mibBuilder.loadTexts: hwMemoryDev.setDescription(' This mib module defines the memory information. NMS can query memory utilization statistics from device by the mib. ')
hwMemoryDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1), )
if mibBuilder.loadTexts: hwMemoryDevTable.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevTable.setDescription(' This table provides the information of all memory utilization statistics of device. It contains the total size, the free size, the used size, and so on. ')
hwMemoryDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-MEMORY-MIB", "hwMemoryDevModuleIndex"))
if mibBuilder.loadTexts: hwMemoryDevEntry.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevEntry.setDescription(' The Entries of hwMemoryDevTable. The table is indexed by hwFrameIndex, hwSlotIndex and hwMemoryDevModuleIndex, hwFrameIndex - the index of frame of the device. for example, hwFrameIndex equals 0 in NE16. hwSlotIndex - the slot number of the device, the MAX value varies with different devices. hwMemoryDevModuleIndex - for the purpose of extension.In single CPU devices (NE16,eg.), its value equals 0. ')
hwMemoryDevModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwMemoryDevModuleIndex.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevModuleIndex.setDescription(' The object is used only for the purpose of extension,In single CPU devices (NE16,eg.), hwMemoryDevModuleIndex equals 0. ')
hwMemoryDevSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevSize.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevSize.setDescription(' The object indicates the total size of the memory in bytes, which is on the managed object. ')
hwMemoryDevFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFree.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevFree.setDescription(' The object indicates the free size of the memory in bytes. ')
hwMemoryDevRawSliceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevRawSliceUsed.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevRawSliceUsed.setDescription(' The object indicates the used size of the raw slice memory in bytes. ')
hwMemoryDevLargestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevLargestFree.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevLargestFree.setDescription(' The object indicates the largest number of contiguous bytes from the memory that are currently unused on the managed object. ')
hwMemoryDevFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFail.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevFail.setDescription(' The object indicates the count of memory allocation failures. ')
hwMemoryDevFailNoMem = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFailNoMem.setStatus('current')
if mibBuilder.loadTexts: hwMemoryDevFailNoMem.setDescription(' The object indicates the count of memory allocation failures due to no free memory. ')
hwBufferTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2), )
if mibBuilder.loadTexts: hwBufferTable.setStatus('current')
if mibBuilder.loadTexts: hwBufferTable.setDescription(' This table provides the inquiry of buffer utilization statistics of device. The type of the buffer is classified by size: 32 bytes, 64 bytes,...,etc. ')
hwBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-MEMORY-MIB", "hwBufferModuleIndex"), (0, "HUAWEI-MEMORY-MIB", "hwBufferSize"))
if mibBuilder.loadTexts: hwBufferEntry.setStatus('current')
if mibBuilder.loadTexts: hwBufferEntry.setDescription(' The Entries of hwBufferTable. The hwBufferTable is indexed by hwFrameIndex, hwSlotIndex, hwBufferModuleIndex and hwBufferSize. hwFrameIndex - the index of frame of the device. for example, hwFrameIndex equals 0 in NE16. hwSlotIndex - the slot number of the device, the MAX value varies with different types of devices. hwBufferModuleIndex - for the purpose of extension.In single CPU devices (NE16,eg.),hwBufferModuleIndex equals 0. hwBufferSize - the size in bytes of the buffer,such as 32 bytes,64 bytes, ...,etc. ')
hwBufferModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwBufferModuleIndex.setStatus('current')
if mibBuilder.loadTexts: hwBufferModuleIndex.setDescription(' The object is used only for the purpose of extension,In single CPU devices (NE16,eg.),hwBufferModuleIndex equals 0. ')
hwBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwBufferSize.setStatus('current')
if mibBuilder.loadTexts: hwBufferSize.setDescription(' The object indicates the size of the buffers in bytes, such as 32 bytes, 64 bytes,...,etc. ')
hwBufferCurrentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBufferCurrentTotal.setStatus('current')
if mibBuilder.loadTexts: hwBufferCurrentTotal.setDescription(' The object indicates the total number of the buffer currently. ')
hwBufferCurrentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBufferCurrentUsed.setStatus('current')
if mibBuilder.loadTexts: hwBufferCurrentUsed.setDescription(' The object indicates the used number of the buffer currently. ')
mibBuilder.exportSymbols("HUAWEI-MEMORY-MIB", hwMemoryDevTable=hwMemoryDevTable, hwMemoryDevSize=hwMemoryDevSize, hwMemoryDevLargestFree=hwMemoryDevLargestFree, hwMemoryDev=hwMemoryDev, hwBufferEntry=hwBufferEntry, hwBufferCurrentUsed=hwBufferCurrentUsed, PYSNMP_MODULE_ID=hwMemoryDev, hwBufferModuleIndex=hwBufferModuleIndex, hwMemoryDevFail=hwMemoryDevFail, hwMemoryDevEntry=hwMemoryDevEntry, hwBufferSize=hwBufferSize, hwMemoryDevModuleIndex=hwMemoryDevModuleIndex, hwMemoryDevFree=hwMemoryDevFree, hwBufferCurrentTotal=hwBufferCurrentTotal, hwMemoryDevRawSliceUsed=hwMemoryDevRawSliceUsed, hwMemoryDevFailNoMem=hwMemoryDevFailNoMem, hwBufferTable=hwBufferTable)
