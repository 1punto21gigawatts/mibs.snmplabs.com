#
# PySNMP MIB module CISCO-WAN-FR-RSRC-PART-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-FR-RSRC-PART-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:20:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
frPortCnfResPartGrp, = mibBuilder.importSymbols("BASIS-MIB", "frPortCnfResPartGrp")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Unsigned32, ObjectIdentity, IpAddress, Counter64, ModuleIdentity, Integer32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "ObjectIdentity", "IpAddress", "Counter64", "ModuleIdentity", "Integer32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoWanFrRsrcPartMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 45))
ciscoWanFrRsrcPartMIB.setRevisions(('2002-09-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoWanFrRsrcPartMIB.setRevisionsDescriptions(('Initial version of the MIB. The content of this MIB was originally available in CISCO-WAN-AXIPOP-MIB defined using SMIv1. The applicable objects from CISCO-WAN-AXIPOP-MIB are defined using SMIv2 in this MIB. Also the descriptions of some of the objects have been modified.',))
if mibBuilder.loadTexts: ciscoWanFrRsrcPartMIB.setLastUpdated('200209040000Z')
if mibBuilder.loadTexts: ciscoWanFrRsrcPartMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoWanFrRsrcPartMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoWanFrRsrcPartMIB.setDescription("The MIB module to configure the resource partition on Frame Relay Ports. Terminlogies used: LCN : Logical Connection Number. DLCI : Data Link Connection Identifier. A unique number assigned to a PVC endpoint in a frame relay network. This identifies a particular PVC endpoint within a user's access channel in a frame relay network and has local significance only to that channel.")
frPortCnfResPartGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1), )
if mibBuilder.loadTexts: frPortCnfResPartGrpTable.setStatus('current')
if mibBuilder.loadTexts: frPortCnfResPartGrpTable.setDescription('This table is for configuring resource partition parameters. A resource partition is configured on frame relay port. The frame relay port if available in ifTable is identified by ifType values frameRelayService(44) and frForward(158).')
frPortCnfResPartGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-WAN-FR-RSRC-PART-MIB", "frResPartPortNum"), (0, "CISCO-WAN-FR-RSRC-PART-MIB", "frResPartCtrlrNum"))
if mibBuilder.loadTexts: frPortCnfResPartGrpEntry.setStatus('current')
if mibBuilder.loadTexts: frPortCnfResPartGrpEntry.setDescription('An entry for a resource partition. A resource partition has to be created before connections can be added on a frame relay port.')
frResPartPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frResPartPortNum.setReference('portNum object in CISCO-WAN-FR-PORT-MIB.my')
if mibBuilder.loadTexts: frResPartPortNum.setStatus('current')
if mibBuilder.loadTexts: frResPartPortNum.setDescription("The value of this object identifies the frame relay port. The value of this object must be same as the value of 'portNum' from frPortCnfPortGrpTable. If frame relay port is available in ifTable, then the value of this object must be same as the ifIndex value of frame relay ports with ifType frameRelayService(44) and frForward(158).")
frResPartCtrlrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("par", 1), ("pnni", 2), ("tag", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frResPartCtrlrNum.setStatus('current')
if mibBuilder.loadTexts: frResPartCtrlrNum.setDescription('This object identifies the controller which can be used for accessing the resources. The possible values are : par(1) : Portable Auto Route controller. : This value is applicable in Release 1.x. pnni(2): PNNI Controller. : This value is applicable in Release 2.x. tag(3) : MPLS(Formerly known as Tag Switch)Controller ')
frResPartRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartRowStatus.setStatus('current')
if mibBuilder.loadTexts: frResPartRowStatus.setDescription('This object is used for adding/deleting/modifying resource partition on a frame relay port. In MGX Release 1.x: To add an entry, this object should be set to add, value for other objects should not be specified. FRSM will choose default values for all other objects. In MGX Release 2.x: To add an entry, this object should be set to add, value for frResPartCtrlrID may be specified. FRSM will choose default values for all other objects. To delete an entry, this object has to be set to del. Currently the value mod is not supported. The resource partition can be deleted only after deleting all the connections (LCNs).')
frResPartNumOfLcnAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartNumOfLcnAvail.setStatus('current')
if mibBuilder.loadTexts: frResPartNumOfLcnAvail.setDescription(' This represents number of LCNs available for this controller and this port. FRSM VHS 2CT3 can support LCNs upto 4000. FRSM12 can support LCNs upto 16000. ')
frResPartDlciLow = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388607))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartDlciLow.setStatus('current')
if mibBuilder.loadTexts: frResPartDlciLow.setDescription('This represents low end of reserved DLCI.')
frResPartDlciHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388607))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartDlciHigh.setStatus('current')
if mibBuilder.loadTexts: frResPartDlciHigh.setDescription('This represents high end of reserved DLCI.')
frResPartIngrPctBW = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartIngrPctBW.setStatus('current')
if mibBuilder.loadTexts: frResPartIngrPctBW.setDescription('The percentage of total ingress bandwidth reserved.')
frResPartEgrPctBW = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartEgrPctBW.setStatus('current')
if mibBuilder.loadTexts: frResPartEgrPctBW.setDescription('The percentage of total egress bandwidth reserved.')
frResPartCtrlrID = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frResPartCtrlrID.setStatus('current')
if mibBuilder.loadTexts: frResPartCtrlrID.setDescription('This is the controller identifier for the resource patition. The default value is set for PNNI controller. Refer object frResPartCtrlrNum.')
cwfRsrcPartMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 45, 2))
cwfRsrcPartMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 45, 2, 1))
cwfRsrcPartMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 45, 2, 2))
ciscoWanFrRsrcPartCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 45, 2, 1, 1)).setObjects(("CISCO-WAN-FR-RSRC-PART-MIB", "ciscoWanFrRsrcPartGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrRsrcPartCompliance = ciscoWanFrRsrcPartCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoWanFrRsrcPartCompliance.setDescription('The compliance statement for entities which implement the Frame Relay Resource Partition MIB.')
ciscoWanFrRsrcPartGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 45, 2, 2, 1)).setObjects(("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartPortNum"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartCtrlrNum"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartRowStatus"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartNumOfLcnAvail"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartDlciLow"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartDlciHigh"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartIngrPctBW"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartEgrPctBW"), ("CISCO-WAN-FR-RSRC-PART-MIB", "frResPartCtrlrID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanFrRsrcPartGroup = ciscoWanFrRsrcPartGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWanFrRsrcPartGroup.setDescription('A collection of objects providing the Frame Relay Port resource partition configuration information.')
mibBuilder.exportSymbols("CISCO-WAN-FR-RSRC-PART-MIB", cwfRsrcPartMIBCompliances=cwfRsrcPartMIBCompliances, PYSNMP_MODULE_ID=ciscoWanFrRsrcPartMIB, frResPartDlciLow=frResPartDlciLow, frResPartNumOfLcnAvail=frResPartNumOfLcnAvail, frPortCnfResPartGrpTable=frPortCnfResPartGrpTable, frResPartPortNum=frResPartPortNum, frResPartDlciHigh=frResPartDlciHigh, frResPartIngrPctBW=frResPartIngrPctBW, cwfRsrcPartMIBConformance=cwfRsrcPartMIBConformance, cwfRsrcPartMIBGroups=cwfRsrcPartMIBGroups, ciscoWanFrRsrcPartCompliance=ciscoWanFrRsrcPartCompliance, ciscoWanFrRsrcPartMIB=ciscoWanFrRsrcPartMIB, frResPartEgrPctBW=frResPartEgrPctBW, frResPartCtrlrID=frResPartCtrlrID, frResPartCtrlrNum=frResPartCtrlrNum, frPortCnfResPartGrpEntry=frPortCnfResPartGrpEntry, frResPartRowStatus=frResPartRowStatus, ciscoWanFrRsrcPartGroup=ciscoWanFrRsrcPartGroup)
