#
# PySNMP MIB module CISCO-PFC-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PFC-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
QosQueueNumber, = mibBuilder.importSymbols("CISCO-QOS-TC-MIB", "QosQueueNumber")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, MibIdentifier, Integer32, Gauge32, Counter32, iso, Counter64, TimeTicks, NotificationType, ObjectIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "Integer32", "Gauge32", "Counter32", "iso", "Counter64", "TimeTicks", "NotificationType", "ObjectIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoPfcExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 813))
ciscoPfcExtMIB.setRevisions(('2016-04-28 00:00', '2013-09-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoPfcExtMIB.setRevisionsDescriptions(('Added support for: - ciscoPfcExtWatchdogIfQueueGroup', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoPfcExtMIB.setLastUpdated('201604280000Z')
if mibBuilder.loadTexts: ciscoPfcExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoPfcExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoPfcExtMIB.setDescription('This MIB module defines management objects for monitoring information of Priority-based Flow Control. The following terms are used throughout the MIB: PFC: Priority Flow Control')
ciscoPfcExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 813, 0))
ciscoPfcExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 813, 1))
ciscoPfcExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 813, 2))
cpfcIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 1), )
if mibBuilder.loadTexts: cpfcIfTable.setStatus('current')
if mibBuilder.loadTexts: cpfcIfTable.setDescription('A list of PFC informaton for each interface in the system capable of providing such information.')
cpfcIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cpfcIfEntry.setReference('802.1Qbb clause 12.18')
if mibBuilder.loadTexts: cpfcIfEntry.setStatus('current')
if mibBuilder.loadTexts: cpfcIfEntry.setDescription('Each entry contains the PFC statistics information of the interface.')
cpfcIfRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcIfRequests.setStatus('current')
if mibBuilder.loadTexts: cpfcIfRequests.setDescription('A count of the invoked PFC M_CONTROL.request primitives for a particular interface.')
cpfcIfIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcIfIndications.setStatus('current')
if mibBuilder.loadTexts: cpfcIfIndications.setDescription('A count of the received PFC M_CONTROL.indication primitives for a particular interface.')
cpfcIfPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 2), )
if mibBuilder.loadTexts: cpfcIfPriorityTable.setStatus('current')
if mibBuilder.loadTexts: cpfcIfPriorityTable.setDescription('A list of PFC informaton for each PFC priority of each interface in the system capable of providing such information.')
cpfcIfPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PFC-EXT-MIB", "cpfcIfPriorityValue"))
if mibBuilder.loadTexts: cpfcIfPriorityEntry.setStatus('current')
if mibBuilder.loadTexts: cpfcIfPriorityEntry.setDescription('Each entry contains the PFC statistics information for a PFC priority of the interface.')
cpfcIfPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: cpfcIfPriorityValue.setStatus('current')
if mibBuilder.loadTexts: cpfcIfPriorityValue.setDescription('This object indicates the priority value of the PFC capable interface.')
cpfcIfPriorityRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcIfPriorityRequests.setStatus('current')
if mibBuilder.loadTexts: cpfcIfPriorityRequests.setDescription('A count of invoked request premitives for a specific PFC priority of a particular interface.')
cpfcIfPriorityIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcIfPriorityIndications.setStatus('current')
if mibBuilder.loadTexts: cpfcIfPriorityIndications.setDescription('A count of the received indication primitives for a specific PFC priority of a particular interface.')
cpfcWatchdogIfQueueInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3), )
if mibBuilder.loadTexts: cpfcWatchdogIfQueueInfoTable.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueInfoTable.setDescription('This table provides PFC Watchdog Timer related information for each queue of each watchdog timer capable interface.')
cpfcWatchdogIfQueueInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueNumber"))
if mibBuilder.loadTexts: cpfcWatchdogIfQueueInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueInfoEntry.setDescription('Each entry contains the PFC Watchdog Time information, which are per interface and per queue.')
cpfcWatchdogIfQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 1), QosQueueNumber())
if mibBuilder.loadTexts: cpfcWatchdogIfQueueNumber.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueNumber.setDescription('This object indicates the queue number of the interface.')
cpfcWatchdogIfQueueState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("shutdown", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcWatchdogIfQueueState.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueState.setDescription('This object indicates the state of the PFC queue for the interface.')
cpfcWatchdogIfQueueShutdowns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcWatchdogIfQueueShutdowns.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueShutdowns.setDescription('This object indicates the number of times a given PFC queue was shutdown for the interface.')
cpfcWatchdogIfQueueRestores = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcWatchdogIfQueueRestores.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueRestores.setDescription('This object indicates the number of times a given PFC queue was restored for the interface.')
cpfcWatchdogIfQueueTotalDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcWatchdogIfQueueTotalDropPkts.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueTotalDropPkts.setDescription('This object indicates total number of packets that were dropped due to corrective action for a given PFC queue of the interface.')
cpfcWatchdogIfQueueDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 813, 1, 3, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpfcWatchdogIfQueueDropPkts.setStatus('current')
if mibBuilder.loadTexts: cpfcWatchdogIfQueueDropPkts.setDescription('This object indicates total number of packets that have been dropped due to corrective action since last shutdown action for a given PFC queue of the interface.')
ciscoPfcExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 1))
ciscoPfcExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 2))
ciscoPfcExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 1, 1)).setObjects(("CISCO-PFC-EXT-MIB", "ciscoPfcExtIfGroup"), ("CISCO-PFC-EXT-MIB", "ciscoPfcExtIfPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPfcExtMIBCompliance = ciscoPfcExtMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPfcExtMIBCompliance.setDescription('The compliance statement for the CISCO-PFC-EXT-MIB.')
ciscoPfcExtMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 1, 2)).setObjects(("CISCO-PFC-EXT-MIB", "ciscoPfcExtIfGroup"), ("CISCO-PFC-EXT-MIB", "ciscoPfcExtIfPriorityGroup"), ("CISCO-PFC-EXT-MIB", "ciscoPfcExtWatchdogIfQueueGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPfcExtMIBCompliance2 = ciscoPfcExtMIBCompliance2.setStatus('current')
if mibBuilder.loadTexts: ciscoPfcExtMIBCompliance2.setDescription('The compliance statement for the CISCO-PFC-EXT-MIB.')
ciscoPfcExtIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 2, 1)).setObjects(("CISCO-PFC-EXT-MIB", "cpfcIfRequests"), ("CISCO-PFC-EXT-MIB", "cpfcIfIndications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPfcExtIfGroup = ciscoPfcExtIfGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoPfcExtIfGroup.setDescription('A collection of objects that provides PFC information of each interface capable of providing such information.')
ciscoPfcExtIfPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 2, 2)).setObjects(("CISCO-PFC-EXT-MIB", "cpfcIfPriorityRequests"), ("CISCO-PFC-EXT-MIB", "cpfcIfPriorityIndications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPfcExtIfPriorityGroup = ciscoPfcExtIfPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoPfcExtIfPriorityGroup.setDescription('A collection of objects that provides PFC information of each PFC priority of an interface capable of providing such information.')
ciscoPfcExtWatchdogIfQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 813, 2, 2, 3)).setObjects(("CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueState"), ("CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueShutdowns"), ("CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueRestores"), ("CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueTotalDropPkts"), ("CISCO-PFC-EXT-MIB", "cpfcWatchdogIfQueueDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPfcExtWatchdogIfQueueGroup = ciscoPfcExtWatchdogIfQueueGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoPfcExtWatchdogIfQueueGroup.setDescription('A collection of object(s) for PFC watchdog timer information of each queue of an interface capable of providing such information.')
mibBuilder.exportSymbols("CISCO-PFC-EXT-MIB", cpfcIfPriorityRequests=cpfcIfPriorityRequests, cpfcIfIndications=cpfcIfIndications, cpfcWatchdogIfQueueShutdowns=cpfcWatchdogIfQueueShutdowns, cpfcIfTable=cpfcIfTable, ciscoPfcExtMIBObjects=ciscoPfcExtMIBObjects, cpfcWatchdogIfQueueInfoTable=cpfcWatchdogIfQueueInfoTable, cpfcWatchdogIfQueueState=cpfcWatchdogIfQueueState, ciscoPfcExtMIBCompliances=ciscoPfcExtMIBCompliances, cpfcIfEntry=cpfcIfEntry, ciscoPfcExtMIBNotifs=ciscoPfcExtMIBNotifs, cpfcWatchdogIfQueueRestores=cpfcWatchdogIfQueueRestores, cpfcWatchdogIfQueueDropPkts=cpfcWatchdogIfQueueDropPkts, cpfcIfPriorityEntry=cpfcIfPriorityEntry, ciscoPfcExtMIBConform=ciscoPfcExtMIBConform, ciscoPfcExtIfGroup=ciscoPfcExtIfGroup, cpfcIfPriorityTable=cpfcIfPriorityTable, cpfcWatchdogIfQueueNumber=cpfcWatchdogIfQueueNumber, cpfcIfPriorityIndications=cpfcIfPriorityIndications, cpfcIfPriorityValue=cpfcIfPriorityValue, cpfcIfRequests=cpfcIfRequests, ciscoPfcExtMIBCompliance2=ciscoPfcExtMIBCompliance2, ciscoPfcExtMIBCompliance=ciscoPfcExtMIBCompliance, ciscoPfcExtMIBGroups=ciscoPfcExtMIBGroups, ciscoPfcExtWatchdogIfQueueGroup=ciscoPfcExtWatchdogIfQueueGroup, cpfcWatchdogIfQueueInfoEntry=cpfcWatchdogIfQueueInfoEntry, ciscoPfcExtMIB=ciscoPfcExtMIB, ciscoPfcExtIfPriorityGroup=ciscoPfcExtIfPriorityGroup, PYSNMP_MODULE_ID=ciscoPfcExtMIB, cpfcWatchdogIfQueueTotalDropPkts=cpfcWatchdogIfQueueTotalDropPkts)
