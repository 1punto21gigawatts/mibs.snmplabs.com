#
# PySNMP MIB module CISCO-PORT-CHANNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PORT-CHANNEL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
PortMemberList, = mibBuilder.importSymbols("CISCO-ST-TC", "PortMemberList")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, IpAddress, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, TimeTicks, NotificationType, Gauge32, MibIdentifier, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "IpAddress", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "TimeTicks", "NotificationType", "Gauge32", "MibIdentifier", "ModuleIdentity", "Counter64")
TimeStamp, RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
ciscoPortChannelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 285))
ciscoPortChannelMIB.setRevisions(('2004-09-13 00:00', '2004-06-08 00:00', '2004-03-11 00:00', '2003-05-28 00:00', '2002-10-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoPortChannelMIB.setRevisionsDescriptions(('Added new object portChannelExtOperChannelGrpMode to portChannelExtTable. Changed the SYNTAX of portChannelExtPersistent to INTEGER from TruthValue.', 'Added new tables portChannelGrpIfExtTable and portChannelExtTable. Also, added new object portChannelProtocolEnable.', 'Added portChannelMemberOperStatus to portChannelTable. ', 'Superceeded portChannelMIBCompliances with portChannelMIBCompliances1. Added portChannelAdminChannelMode object to portChannelMIBCompliances1. ', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoPortChannelMIB.setLastUpdated('200409130000Z')
if mibBuilder.loadTexts: ciscoPortChannelMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoPortChannelMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 -NETS E-mail: cs-san@cisco.com')
if mibBuilder.loadTexts: ciscoPortChannelMIB.setDescription('The MIB module for management of Port Channel ports. In addition to this MIB, CISCO-FC-FE-MIB and interface mib (rfc2863) will also contain entries for Port Channel ports.')
ciscoPortChannelObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 1))
portChannelMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 2))
portChannelConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1))
portChannelStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 2))
portChannelNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 3))
portChannelNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 3, 0))
class PortChannelMode(TextualConvention, Integer32):
    description = 'Defines how a Port Channel does channeling. auto(1) - place the port into passive negotiation state, in which the port waits for its peer to initiate negotiation. on(2) - force the port to enable channeling. off(3) - channeling is disabled. desirable(4) - place the port into active negotiating state, in which the port initiates negotiations with its peer and if the peer end agrees, channeling is enabled between them. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("auto", 1), ("on", 2), ("off", 3), ("desirable", 4))

class PortChannelGroupMode(TextualConvention, Integer32):
    description = "Defines how a Port Channel does channeling. on(1) - the port shall operate as part of a port channel or remain inactive. The port channel protocol is turned off and peer port is assumed to be configured in 'on' mode. active(2)- indicates that port shall initiate port channel negotiation with peer port according to the port channel protocol regardless of the channel mode of the peer port."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("active", 2))

portChannelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1), )
if mibBuilder.loadTexts: portChannelTable.setStatus('current')
if mibBuilder.loadTexts: portChannelTable.setDescription("This table facilitates the creation and deletion of a Port Channel interface to achieve higher bandwidths than just one E_port. More than one E_port can be a member of an Port Channel port. NOTE:Only E_ports can be members of an Port Channel port. A port is added to a Port Channel port by setting portChannelMemberList,and the 'manner' in which the agent performs the type of addition is determined by the value of portChannelAddType. During the period when port(s) is being added to the Port Channel, the agent will not allow to change any parameters of the port(s) being added. Also if the operation is successful (i.e. port(s) is added to the Port Channel) then also the agent will not allow to change any parameters of the individual port(s) that is added. But any change done to the Port Channel port will also be applied to the port(s) which are member(s) of this Port channel port. Once a port(s) is removed from a Port Channel Port it will retain the values that it had when it was a member of the Port Channel port. It will not have the old values it had before joining the Port Channel port. The port(s) that are added/removed to/from a Port Channel port will be put into administratively down (ifAdminStatus='down') which results into operationally down(ifOperStatus='down'). To bring the port up again, the user has to set the port to be administratively up(ifAdminStatus='up'). Then the port goes through its initialization cycle to become active(ifOperStatus='up'). ")
portChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-PORT-CHANNEL-MIB", "portChannelIndex"))
if mibBuilder.loadTexts: portChannelEntry.setStatus('current')
if mibBuilder.loadTexts: portChannelEntry.setDescription('There is one entry in this table for each created Port Channel port. ')
portChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: portChannelIndex.setStatus('current')
if mibBuilder.loadTexts: portChannelIndex.setDescription('An index that uniquely identifies an entry in the portChannelTable table. ')
portChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelIfIndex.setStatus('current')
if mibBuilder.loadTexts: portChannelIfIndex.setDescription('The ifIndex of this interface. ')
portChannelAdminChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 3), PortChannelMode().clone('on')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portChannelAdminChannelMode.setStatus('current')
if mibBuilder.loadTexts: portChannelAdminChannelMode.setDescription("The channel mode desired by the network manager. If this object is configured to be auto(1), then the 'portChannelOperChannelMode' will show the current operating channel mode of port. ")
portChannelOperChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 4), PortChannelMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelOperChannelMode.setStatus('current')
if mibBuilder.loadTexts: portChannelOperChannelMode.setDescription('The current operating channel mode of the port. ')
portChannelAddType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("force", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portChannelAddType.setStatus('current')
if mibBuilder.loadTexts: portChannelAddType.setDescription('The method to be adopted by the agent to add port(s) to a Port Channel port. If normal(1), then a compatibility check is done on the parameters of the port(s) being added to this Port Channel. The port(s) being added must have the same physical and configured parameters as the Port Channel port. If force(2), a compatibility check is done on only physical parameters. The port(s) being added to this Port Channel port must have same physical parameters. The operation will fail only if the physical parameters are not same. The configured parameters of the port(s) being added are overwritten by configured parameters of this Port Channel port. ')
portChannelLastActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("successful", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelLastActionStatus.setStatus('current')
if mibBuilder.loadTexts: portChannelLastActionStatus.setDescription('The status of the last operation (add or remove a member) done to change the member list of a Port Channel Port. When no ports are added or the last operation is successful then this object will be successful(1). If this value is failed(2) then the user can look at portChannelLastAddStatusCause to find the reason of failure. ')
portChannelLastActionStatusCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelLastActionStatusCause.setStatus('current')
if mibBuilder.loadTexts: portChannelLastActionStatusCause.setDescription("The cause of failure to last operation (add or remove a member) done to change the member list of a Port Channel port. This object will be zero length string if 'portChannelLastActionStatus' is successful(1). ")
portChannelLastActionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelLastActionTime.setStatus('current')
if mibBuilder.loadTexts: portChannelLastActionTime.setDescription('The timestamp indicating the time of last action performed on this entry. ')
portChannelMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 9), PortMemberList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portChannelMemberList.setStatus('current')
if mibBuilder.loadTexts: portChannelMemberList.setDescription("The list of ifIndex's of the E_ports that are members of this Port Channel port. ")
portChannelCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelCreationTime.setStatus('current')
if mibBuilder.loadTexts: portChannelCreationTime.setDescription("The timestamp of this entry's creation time. Note that at this creation time, a discontinuity occurs in the statistic/error counters which are defined in CISCO-FC-FE-MIB, and which are associated with this Port Channel. ")
portChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portChannelRowStatus.setStatus('current')
if mibBuilder.loadTexts: portChannelRowStatus.setDescription('The status of this conceptual row. ')
portChannelMemberOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 1, 1, 12), PortMemberList().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelMemberOperStatus.setStatus('current')
if mibBuilder.loadTexts: portChannelMemberOperStatus.setDescription("The list of port channel forwarding status of the E_ports that are members of this Port Channel port. Every four-byte is a status of the corresponding member port represented by ifIndex in portChannelMemberList. The portChannelMemberOperStatus may not be the same as ifOperStatus. A value of '00 00 00 01' means the corresponding member port is participating in the load balancing of the port channel. A value of '00 00 00 02' means the corresponding member port is not participating in the load balancing of the port channel. ")
portChannelProtocolEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portChannelProtocolEnable.setStatus('current')
if mibBuilder.loadTexts: portChannelProtocolEnable.setDescription('Enables/disables Port Channel Protocol. If enabled, Port Channel Protocol provides following features: - detection and correction of mis-configurations of interfaces involved with a Port Channel. - automatic creation of Channel Groups (and therefore Port Channels) if both ends of the links are compatible with each other.')
portChannelGrpIfExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 3), )
if mibBuilder.loadTexts: portChannelGrpIfExtTable.setStatus('current')
if mibBuilder.loadTexts: portChannelGrpIfExtTable.setDescription('This table facilitates Channel Group specific interface configurations.')
portChannelGrpIfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: portChannelGrpIfExtEntry.setStatus('current')
if mibBuilder.loadTexts: portChannelGrpIfExtEntry.setDescription('There is one entry in this table for each created Port Channel port.')
portChannelGrpIfAutoCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portChannelGrpIfAutoCreation.setStatus('current')
if mibBuilder.loadTexts: portChannelGrpIfAutoCreation.setDescription('This object indicates if this interface may be part of automatically created Channel Groups (and therefore Port Channels).')
portChannelExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4), )
if mibBuilder.loadTexts: portChannelExtTable.setStatus('current')
if mibBuilder.loadTexts: portChannelExtTable.setDescription('This table extends the portChannelTable to support Port Channel Protocol.')
portChannelExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4, 1), )
portChannelEntry.registerAugmentions(("CISCO-PORT-CHANNEL-MIB", "portChannelExtEntry"))
portChannelExtEntry.setIndexNames(*portChannelEntry.getIndexNames())
if mibBuilder.loadTexts: portChannelExtEntry.setStatus('current')
if mibBuilder.loadTexts: portChannelExtEntry.setDescription('There is one entry in this table for each created Port Channel port. It contains an entry for every Port Channel that is either automatically created or manually configured.')
portChannelExtChannelGrpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4, 1, 1), PortChannelGroupMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portChannelExtChannelGrpMode.setStatus('current')
if mibBuilder.loadTexts: portChannelExtChannelGrpMode.setDescription('The admin channel group mode of this port channel.')
portChannelExtAutoCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelExtAutoCreated.setStatus('current')
if mibBuilder.loadTexts: portChannelExtAutoCreated.setDescription('Indicates of this port channel was automatically created. Note that this object is valid only for Fibre Channel port channels.')
portChannelExtPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOp", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portChannelExtPersistent.setStatus('current')
if mibBuilder.loadTexts: portChannelExtPersistent.setDescription("This object converts an auto-created port channel to a persistent port channel when it is set to 'enable'. No action is taken if this object is set to 'noOp'. The value of the object when read is always 'noOp'.")
portChannelExtOperChannelGrpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 285, 1, 1, 4, 1, 4), PortChannelGroupMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portChannelExtOperChannelGrpMode.setStatus('current')
if mibBuilder.loadTexts: portChannelExtOperChannelGrpMode.setDescription('The operational channel group mode of this port channel.')
portChannelMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 1))
portChannelMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 2))
portChannelMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 1, 1)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelMIBCompliance = portChannelMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: portChannelMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-PORT-CHANNEL-MIB mib.')
portChannelMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 1, 2)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelMIBCompliance1 = portChannelMIBCompliance1.setStatus('deprecated')
if mibBuilder.loadTexts: portChannelMIBCompliance1.setDescription('The compliance statement for entities which implement the CISCO-PORT-CHANNEL-MIB mib.')
portChannelMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 1, 3)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelGroup"), ("CISCO-PORT-CHANNEL-MIB", "portChannelGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelMIBCompliance2 = portChannelMIBCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: portChannelMIBCompliance2.setDescription('The compliance statement for entities which implement the CISCO-PORT-CHANNEL-MIB mib.')
portChannelMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 1, 4)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelGroup"), ("CISCO-PORT-CHANNEL-MIB", "portChannelGroupRev1"), ("CISCO-PORT-CHANNEL-MIB", "portChannelProtocolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelMIBCompliance3 = portChannelMIBCompliance3.setStatus('current')
if mibBuilder.loadTexts: portChannelMIBCompliance3.setDescription('The compliance statement for entities which implement the CISCO-PORT-CHANNEL-MIB mib.')
portChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 2, 1)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelIfIndex"), ("CISCO-PORT-CHANNEL-MIB", "portChannelAdminChannelMode"), ("CISCO-PORT-CHANNEL-MIB", "portChannelOperChannelMode"), ("CISCO-PORT-CHANNEL-MIB", "portChannelAddType"), ("CISCO-PORT-CHANNEL-MIB", "portChannelLastActionStatus"), ("CISCO-PORT-CHANNEL-MIB", "portChannelLastActionStatusCause"), ("CISCO-PORT-CHANNEL-MIB", "portChannelLastActionTime"), ("CISCO-PORT-CHANNEL-MIB", "portChannelMemberList"), ("CISCO-PORT-CHANNEL-MIB", "portChannelCreationTime"), ("CISCO-PORT-CHANNEL-MIB", "portChannelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelGroup = portChannelGroup.setStatus('current')
if mibBuilder.loadTexts: portChannelGroup.setDescription('A collection of objects related to Port Channel Interface parameters.')
portChannelGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 2, 2)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelMemberOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelGroupRev1 = portChannelGroupRev1.setStatus('current')
if mibBuilder.loadTexts: portChannelGroupRev1.setDescription('A collection of objects related to Port Channel Interface parameters.')
portChannelProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 285, 2, 2, 3)).setObjects(("CISCO-PORT-CHANNEL-MIB", "portChannelProtocolEnable"), ("CISCO-PORT-CHANNEL-MIB", "portChannelGrpIfAutoCreation"), ("CISCO-PORT-CHANNEL-MIB", "portChannelExtChannelGrpMode"), ("CISCO-PORT-CHANNEL-MIB", "portChannelExtAutoCreated"), ("CISCO-PORT-CHANNEL-MIB", "portChannelExtPersistent"), ("CISCO-PORT-CHANNEL-MIB", "portChannelExtOperChannelGrpMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portChannelProtocolGroup = portChannelProtocolGroup.setStatus('current')
if mibBuilder.loadTexts: portChannelProtocolGroup.setDescription('A collection of objects related to Port Channel Protocol mamagement.')
mibBuilder.exportSymbols("CISCO-PORT-CHANNEL-MIB", portChannelExtTable=portChannelExtTable, portChannelMIBCompliance1=portChannelMIBCompliance1, portChannelMIBGroups=portChannelMIBGroups, portChannelGroup=portChannelGroup, portChannelLastActionTime=portChannelLastActionTime, portChannelNotification=portChannelNotification, portChannelGrpIfExtEntry=portChannelGrpIfExtEntry, portChannelMIBConformance=portChannelMIBConformance, portChannelMIBCompliance=portChannelMIBCompliance, portChannelMIBCompliance2=portChannelMIBCompliance2, portChannelProtocolGroup=portChannelProtocolGroup, portChannelIndex=portChannelIndex, portChannelNotifications=portChannelNotifications, portChannelMemberList=portChannelMemberList, portChannelCreationTime=portChannelCreationTime, portChannelTable=portChannelTable, portChannelExtOperChannelGrpMode=portChannelExtOperChannelGrpMode, portChannelGrpIfExtTable=portChannelGrpIfExtTable, PortChannelGroupMode=PortChannelGroupMode, portChannelExtEntry=portChannelExtEntry, portChannelMIBCompliance3=portChannelMIBCompliance3, portChannelProtocolEnable=portChannelProtocolEnable, portChannelGroupRev1=portChannelGroupRev1, portChannelAdminChannelMode=portChannelAdminChannelMode, PYSNMP_MODULE_ID=ciscoPortChannelMIB, portChannelMemberOperStatus=portChannelMemberOperStatus, portChannelMIBCompliances=portChannelMIBCompliances, ciscoPortChannelMIB=ciscoPortChannelMIB, portChannelAddType=portChannelAddType, portChannelExtPersistent=portChannelExtPersistent, portChannelOperChannelMode=portChannelOperChannelMode, portChannelIfIndex=portChannelIfIndex, ciscoPortChannelObjects=ciscoPortChannelObjects, portChannelLastActionStatusCause=portChannelLastActionStatusCause, portChannelStatistics=portChannelStatistics, portChannelConfig=portChannelConfig, portChannelEntry=portChannelEntry, portChannelRowStatus=portChannelRowStatus, PortChannelMode=PortChannelMode, portChannelLastActionStatus=portChannelLastActionStatus, portChannelGrpIfAutoCreation=portChannelGrpIfAutoCreation, portChannelExtAutoCreated=portChannelExtAutoCreated, portChannelExtChannelGrpMode=portChannelExtChannelGrpMode)
