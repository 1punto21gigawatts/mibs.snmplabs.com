#
# PySNMP MIB module NETSCREEN-SCHEDULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-SCHEDULE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
netscreenSchedule, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSchedule")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, IpAddress, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Bits, Counter32, Unsigned32, iso, ModuleIdentity, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Bits", "Counter32", "Unsigned32", "iso", "ModuleIdentity", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenScheduleMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 14, 0))
netscreenScheduleMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-10 00:00', '2001-09-28 00:00', '2001-05-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenScheduleMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'Correct spelling mistake', 'No Comment', 'Creation Date',))
if mibBuilder.loadTexts: netscreenScheduleMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenScheduleMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenScheduleMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenScheduleMibModule.setDescription('This module defines the object that are used to monitor all scheduled entries')
nsSchOnceTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 14, 1), )
if mibBuilder.loadTexts: nsSchOnceTable.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceTable.setDescription('By associating a schedule to a NetScreen device setting, user can determine when that setting is in effect. This table specifies the configuration of schedules as a one-time event.')
nsSchOnceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1), ).setIndexNames((0, "NETSCREEN-SCHEDULE-MIB", "nsSchOnceIndex"))
if mibBuilder.loadTexts: nsSchOnceEntry.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceEntry.setDescription('Each entry in the nsSchOnceTable holds a set of configuration parameters associated with an instance of one-time schedule.')
nsSchOnceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceIndex.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceIndex.setDescription('A unique value for schedule. Its value ranges between 1 and 65535 and may not be contiguous. The index has no other meaning but a pure index')
nsSchOnceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceName.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceName.setDescription("schedule's name.")
nsSchOnceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceStartTime.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceStartTime.setDescription("schedule's start time.")
nsSchOnceStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceStopTime.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceStopTime.setDescription("schedule's stop time.")
nsSchOnceComments = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceComments.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceComments.setDescription('Comments for this schedule.')
nsSchOnceVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceVsys.setStatus('current')
if mibBuilder.loadTexts: nsSchOnceVsys.setDescription('Vsys this entry belongs to')
nsSchRecurTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 14, 2), )
if mibBuilder.loadTexts: nsSchRecurTable.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurTable.setDescription('By associating a schedule to a NetScreen device setting, user can determine when that setting is in effect. This table specifies the configuration of schedules on a recurring basis.')
nsSchRecurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1), ).setIndexNames((0, "NETSCREEN-SCHEDULE-MIB", "nsSchRecurIndex"))
if mibBuilder.loadTexts: nsSchRecurEntry.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurEntry.setDescription('Each entry in the nsSchOnceTable holds a set of configuration parameters associated with an instance of re-occurring schedule.')
nsSchRecurIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurIndex.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurIndex.setDescription('A unique value for schedule. Its value ranges between 1 and 65535 and may not be contiguous. The index has no other meaning but a pure index')
nsSchRecurName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurName.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurName.setDescription("schedule's name")
nsSchRecurWeekday = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sun", 0), ("mon", 1), ("tue", 2), ("wed", 3), ("thu", 4), ("fri", 5), ("sat", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurWeekday.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurWeekday.setDescription("schedule's starts date, using week day to determine.")
nsSchRecurStartTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStartTime1.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurStartTime1.setDescription("schedule's start time one.")
nsSchRecurStopTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStopTime1.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurStopTime1.setDescription("schedule's stop time one.")
nsSchRecurStartTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStartTime2.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurStartTime2.setDescription('schedule start time two.')
nsSchRecurStopTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStopTime2.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurStopTime2.setDescription('schedule stop time two.')
nsSchRecurComments = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurComments.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurComments.setDescription('comments for the schedule.')
nsSchRecurVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurVsys.setStatus('current')
if mibBuilder.loadTexts: nsSchRecurVsys.setDescription('The vsys this entry belongs to')
mibBuilder.exportSymbols("NETSCREEN-SCHEDULE-MIB", nsSchRecurStartTime2=nsSchRecurStartTime2, PYSNMP_MODULE_ID=netscreenScheduleMibModule, nsSchRecurWeekday=nsSchRecurWeekday, nsSchRecurIndex=nsSchRecurIndex, nsSchOnceVsys=nsSchOnceVsys, nsSchOnceStartTime=nsSchOnceStartTime, nsSchOnceEntry=nsSchOnceEntry, nsSchRecurTable=nsSchRecurTable, nsSchOnceIndex=nsSchOnceIndex, nsSchOnceComments=nsSchOnceComments, nsSchOnceTable=nsSchOnceTable, nsSchRecurComments=nsSchRecurComments, nsSchOnceName=nsSchOnceName, nsSchRecurEntry=nsSchRecurEntry, nsSchRecurStartTime1=nsSchRecurStartTime1, nsSchRecurStopTime2=nsSchRecurStopTime2, netscreenScheduleMibModule=netscreenScheduleMibModule, nsSchOnceStopTime=nsSchOnceStopTime, nsSchRecurName=nsSchRecurName, nsSchRecurStopTime1=nsSchRecurStopTime1, nsSchRecurVsys=nsSchRecurVsys)
