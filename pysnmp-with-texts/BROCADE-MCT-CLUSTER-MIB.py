#
# PySNMP MIB module BROCADE-MCT-CLUSTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BROCADE-MCT-CLUSTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:41:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
brcdMct, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "brcdMct")
BrcdVlanIdOrNoneTC, BrcdVlanIdTC = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "BrcdVlanIdOrNoneTC", "BrcdVlanIdTC")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, Counter32, IpAddress, Counter64, Bits, NotificationType, Gauge32, ObjectIdentity, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "IpAddress", "Counter64", "Bits", "NotificationType", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "TimeTicks")
DisplayString, TruthValue, TextualConvention, RowStatus, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus", "TimeInterval")
brcdMctMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1))
brcdMctMIB.setRevisions(('2011-12-20 00:00', '2014-08-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: brcdMctMIB.setRevisionsDescriptions(('Initial version', 'Error string for the mib VAL_brcdMctClusterPeerDownReason_upgradeInProgress is modified',))
if mibBuilder.loadTexts: brcdMctMIB.setLastUpdated('201201120000Z')
if mibBuilder.loadTexts: brcdMctMIB.setOrganization('Brocade Communications Systems, Inc.')
if mibBuilder.loadTexts: brcdMctMIB.setContactInfo('Technical Support Center 130 Holger Way, San Jose, CA 95134 Email: ipsupport@brocade.com Phone: 1-800-752-8061 URL: www.brocade.com')
if mibBuilder.loadTexts: brcdMctMIB.setDescription('The MIB module contains the managed object definition for Brocade Multi Chassis Trunking. Supported Platforms: - supported on NetIron XMR/MLX CES/CER platforms. Copyright 1996-2012 Brocade Communications Systems, Inc. All rights reserved. This Brocade Communications Systems SNMP Management Information Base Specification embodies Brocade Communications Systems confidential and proprietary intellectual property. Brocade Communications Systems retains all title and ownership in the Specification, including any revisions. This Specification is supplied AS IS, and Brocade Communications Systems makes no warranty, either express or implied, as to the use, operation, condition, or performance of the specification, and any unintended consequence it may on the user environment.')
class BrcdDeployStatus(TextualConvention, Integer32):
    description = 'The deploy status.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("deploy", 1), ("undeploy", 2))

brcdMctNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 0))
brcdMctObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1))
brcdMctL2Forward = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdMctL2Forward.setStatus('current')
if mibBuilder.loadTexts: brcdMctL2Forward.setDescription('The global cluster L2 forward state for this system. When this object is set to disable, the STP protocol packets coming on the MCT VLANs are dropped.')
brcdMctClusterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2), )
if mibBuilder.loadTexts: brcdMctClusterTable.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterTable.setDescription('This table provides Multi Chassis Trunking Cluster information.')
brcdMctClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1), ).setIndexNames((0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterId"))
if mibBuilder.loadTexts: brcdMctClusterEntry.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterEntry.setDescription('An entry in this table represents the MCT Cluster.')
brcdMctClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: brcdMctClusterId.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterId.setDescription('The id for this MCT Cluster.')
brcdMctClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterName.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterName.setDescription('The name of this MCT Cluster. This object cannot be modified after creation.')
brcdMctClusterRbridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 35535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterRbridgeId.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterRbridgeId.setDescription('The remote bridge id of this MCT Cluster. This remote bridge id is used by the peer to communicate with this cluster node.')
brcdMctClusterSessionVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 4), BrcdVlanIdTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterSessionVlan.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterSessionVlan.setDescription('The session VLAN of this MCT Cluster. The cluster session VLAN can be in the range of 1 to 4090, but cannot be default VLAN. The brcdMctClusterSessionVlan and brcdMctClusterKeepAliveVlan cannot be same.')
brcdMctClusterKeepAliveVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 5), BrcdVlanIdOrNoneTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterKeepAliveVlan.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterKeepAliveVlan.setDescription('The keep-alive VLAN of this MCT Cluster. The keep-alive VLAN can be in the range of 0 to 4090, but cannot be default VLAN. The brcdMctClusterSessionVlan and brcdMctClusterKeepAliveVlan cannot be same. The value 0 indicates that keep-alive VLAN is not set for this cluster. If brcdMctClusterClientIsolationMode object is set to strict(2), then brcdMctClusterKeepAliveVlan cannot be set to except with value 0.')
brcdMctClusterClientIsolationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loose", 1), ("strict", 2))).clone('loose')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientIsolationMode.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientIsolationMode.setDescription('The client isolation mode of this MCT Cluster. When this object is set to loose(1), then whenever the CCP goes down the client performs the Master/Slave negotiation. After negotiation, the Slave shuts down its client ports whereas the Master client ports continue to forward the traffic. When this object is set to strict(2), then whenever the CCP goes down, the client interfaces on both the cluster nodes are administratively shutdown. In this mode, the client is completely isolated from the network if CCP is not operational. If brcdMctClusterKeepAliveVlan is set to a VLAN id except 0, then brcdMctClusterClientIsolationMode cannot be set to strict(2).')
brcdMctClusterClientShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientShutdown.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientShutdown.setDescription('The client shutdown state of this MCT Cluster. When set to true, shutdown all the local client interfaces in the cluster. This would result in failover of traffic to the cluster peer.')
brcdMctClusterMemberVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterMemberVlans.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterMemberVlans.setDescription('The list of the member VLAN ids on which this MCT cluster is operating. This would be the range of VLANs for which there would be MAC synchronization. The VLANs which are not continuous are represented with a space separated and continuous VLANs represented with the range. For example: 2 5 10 to 40 100')
brcdMctClusterActiveMemberVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterActiveMemberVlans.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterActiveMemberVlans.setDescription('The list of the active member VLANs of this MCT Cluster. The VLANs which are not continuous are represented with a space separated and continuous VLANs represented with the range. For example: 2 5 10 to 40 100')
brcdMctClusterDeploy = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 10), BrcdDeployStatus().clone('undeploy')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterDeploy.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterDeploy.setDescription('The admin status of this MCT Cluster. When this object is set to deploy, consistency check of the entire cluster configuration is done. Once the cluster is deployed, the configuration cannot be modified except for the brcdMctClusterMemberVlans, brcdMctClusterClientIsolationMode and brcdMctClusterDeploy objects.')
brcdMctClusterDeployFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("rBridgeIdNotConfigured", 3), ("sessionVlanNotConfigured", 4), ("iclNotConfigured", 5), ("peerNotConfigured", 6), ("iclIsMrpSecondaryInterface", 7), ("iclIsErpRplInterface", 8), ("iclIsErpMsInterface", 9), ("iclIsErpFsInterface", 10), ("iclNotInSessionVlan", 11), ("iclNotInMemberVlans", 12), ("nonIclInterfacesInSessionVlan", 13), ("mgmtVeNotConfiguredInSessionVlan", 14), ("mgmtIpNotConfiguredInSessionVlan", 15), ("mgmtIpIsUsedInPeerOrClientConfig", 16), ("mgmtIpNotInSubnetOfPeerIp", 17), ("rBridgeIdIsUsedInPeerOrClientConfig", 18), ("clientInterfaceIsNotInMemberVlan", 19), ("defaultVlanConfigForSessionOrMemberVlan", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterDeployFailureReason.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterDeployFailureReason.setDescription('The last failure reason for cluster deploy operation through SNMP. The following failure reason codes are supported: none(1) - The last deploy is successful. unknown(2) - The last deploy has failed for unknown reason. rBridgeIdNotConfigured(3) - Remote bridge id is not configured. sessionVlanNotConfigured(4) - Session VLAN is not configured. iclNotConfigured(5) - ICL is not configured. peerNotConfigured(6) - Peer is not configured. iclIsMrpSecondaryInterface(7) - In NI CES/CER devices, ICL should not be MRP secondary interface. iclIsErpRplInterface(8) - In NI CES/CER devices, ICL should not be ERP RPL interface. iclIsErpMsInterface(9) - In NI CES/CER devices, ICL should not be ERP MS interface. iclIsErpFsInterface(10) - In NI CES/CER devices, ICL should not be ERP FS interface. iclNotInSessionVlan(11) - ICL is not in session VLAN. iclNotInMemberVlans(12) - ICL is not in member VLANs. nonIclInterfacesInSessionVlan(13) - Non ICL interfaces are present under session VLAN. mgmtVeNotConfiguredInSessionVlan(14) - Management VE is not configured in session VLAN. mgmtIpNotConfiguredInSessionVlan(15) - Management IP is not configured in session VLAN. mgmtIpIsUsedInPeerOrClientConfig(16) - Management IP is used in peer or client configuration. mgmtIpNotInSubnetOfPeerIp(17) - Management IP is not in subnet of peer IP. rBridgeIdUsedInPeerOrClientConfig(18) - Remote bridge id is used in peer or client configuration. clientInterfaceIsNotInMemberVlan(19) - Client interface is not in member VLAN. defaultVlanConfigAsSessOrMemberVlan(20) - Default VLAN is configured as session or member VLAN.')
brcdMctClusterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterRowStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterRowStatus.setDescription('The row status of this MCT Cluster. All the values of RowStatus are supported. The notInService(2) indicates that cluster is not yet activated. The following objects should be present in the same SNMP set request to create a row with brcdMctClusterRowStatus set to createAndGo(4) value: brcdMctClusterName, brcdMctClusterRbridgeId, brcdMctClusterSessionVlan, brcdMctClusterMemberVlans, objects. The brcdMctClusterName object should be present in the same SNMP set request to create a row in brcdMctClusterTable with brcdMctClusterRowStatus set to createAndWait(5) value. If the cluster is deployed, then brcdMctClusterRowStatus cannot be set destroy(6)')
brcdMctClusterIclTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 3), )
if mibBuilder.loadTexts: brcdMctClusterIclTable.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterIclTable.setDescription('This table provides Multi Chassis Trunking Cluster information.')
brcdMctClusterIclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 3, 1), ).setIndexNames((0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterId"), (1, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterIclName"))
if mibBuilder.loadTexts: brcdMctClusterIclEntry.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterIclEntry.setDescription('An entry in this table represents the MCT Cluster ICL.')
brcdMctClusterIclName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: brcdMctClusterIclName.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterIclName.setDescription('The name of ICL.')
brcdMctClusterIclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterIclIfIndex.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterIclIfIndex.setDescription('The interface index of the ICL. The ICL interface can be a single ethernet interface or trunk interface index.')
brcdMctClusterIclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterIclRowStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterIclRowStatus.setDescription('The row status of this MCT Cluster ICL entry. Only the active(1), createAndGo(4) and destroy (6) values of RowStatus are supported. If the cluster is deployed, then brcdMctClusterIclRowStatus cannot be set destroy(6). If the brcdMctClusterIclName is used in the peer configuration for object brcdMctClusterPeerIclName, then the peer configuration should be removed before setting the brcdMctClusterIclRowStatus to destroy(6)')
brcdMctClusterPeerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4), )
if mibBuilder.loadTexts: brcdMctClusterPeerTable.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerTable.setDescription('This table provides Multi Chassis Trunking Cluster Peers information. The objects in this table cannot be modified after the cluster is deployed')
brcdMctClusterPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1), ).setIndexNames((0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterId"), (0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterPeerAddrType"), (0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterPeerAddr"))
if mibBuilder.loadTexts: brcdMctClusterPeerEntry.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerEntry.setDescription('An entry in this table represents the MCT Cluster Peer.')
brcdMctClusterPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: brcdMctClusterPeerAddrType.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerAddrType.setDescription('The address type of this MCT Cluster Peer. The supported address types are ipv4(1) and ipv6(2).')
brcdMctClusterPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: brcdMctClusterPeerAddr.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerAddr.setDescription('The IPv4/IPv6 address of this MCT Cluster Peer.')
brcdMctClusterPeerRbridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 35535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerRbridgeId.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerRbridgeId.setDescription('The remote bridge Id of this MCT Cluster Peer.')
brcdMctClusterPeerIclName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerIclName.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerIclName.setDescription('The ICL name of this MCT Cluster Peer. This should be same as brcdMctClusterIclName object for this MCT Cluster')
brcdMctClusterPeerFastFailover = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 5), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerFastFailover.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerFastFailover.setDescription('The fast failover status of this MCT Cluster Peer. When this object is set to enable, as soon as the ICL interface goes down the CCP goes down. All the remote MACs are flushed. When set to disable, even if the ICL interface goes down the CCP waits for the hold-time before making the CCP down. Remote MACs are flushed only when the CCP is down.')
brcdMctClusterPeerKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerKeepAliveTime.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerKeepAliveTime.setDescription('The keep-alive time in seconds of this MCT Cluster Peer. The range of keep-alive time is 0 to 21845. The default is 30 seconds.')
brcdMctClusterPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerHoldTime.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerHoldTime.setDescription('The hold time in seconds of this MCT Cluster Peer. The hold time must be at least 3 times the keep alive time. The range of hold time is 3 to 65535. The default is 90 seconds.')
brcdMctClusterPeerActiveVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterPeerActiveVlans.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerActiveVlans.setDescription('The list of the active member VLANs of this MCT Cluster Peer. The VLANs which are not continuous are represented with a space separated and continuous VLANs represented with the range. For example: 2 5 10 to 40 100')
brcdMctClusterPeerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("noState", 2), ("init", 3), ("ccpUp", 4), ("ccpDown", 5), ("reachable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterPeerOperStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerOperStatus.setDescription('The operational status of this MCT Cluster Peer. The follwoing values are supported for operational status unknown(1) - Unknown state noState(2) - The peer state machine is not started init(3) - The peer state machine is initializing ccpUp(4) - CCP is up ccpDown(5) - CCP is down reachable(6) - CCP is down, but peer is reachable through keep alive VLAN')
brcdMctClusterPeerDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("none", 1), ("loopbackInterfaceDown", 2), ("iclInterfaceDown", 3), ("upgradeInProgress", 4), ("routeNotAvailable", 5), ("iclVeDown", 6), ("rBridgeIdMismatch", 7), ("clusterIdMismatch", 8), ("keepAliveTimeMismatch", 9), ("holdTimeMismatch", 10), ("fastFailoverMismatch", 11), ("shutdownMesgFromPeer", 12), ("tcpKeepAliveTimeout", 13), ("tcpConnCloseMesg", 14), ("holdTimeoutExpired", 15), ("sendStateTimeoutExpired", 16), ("recvStateTimeoutExpired", 17), ("initMesgSendFail", 18), ("keepAliveMesgSendFail", 19), ("invalidAppMesgRecv", 20), ("badProtocolVersionPktRecv", 21), ("badPduLengthPktRecv", 22), ("unknownCcpPktRecv", 23), ("invalidCcpPktRecv", 24), ("internalCcpErrorRecv", 25), ("ccpTcpCommFail", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterPeerDownReason.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerDownReason.setDescription('The reason for the brcdMctClusterPeerOperStatus is in ccpDown(3) state. The following values are supported as down reason: none(1) - Peer is not in down state loopbackInterfaceDown(2) - Loopback interface down iclInterfaceDown(3) - ICL interface down upgradeInProgress(4) - All local client interfaces disabled routeNotAvailable(5) - Route to cluster Peer is not available iclVeDown(6) - ICL VE interface down rBridgeIdMismatch(7) - RBridge ID does not match with Peer clusterIdMismatch(8) - Cluster ID does not match with Peer keepAliveTimeMismatch(9) - KeepAlive Time does not match with Peer holdTimeMismatch(10) - Hold Time does not match with Peer fastFailoverMismatch(11) - Fast Failover parameter does not match with Peer shutdownMesgFromPeer(12) - ShutDown message came from Peer tcpKeepAliveTimeout(13) - TCP keepalive timeout message came tcpConnCloseMesg(14) - TCP connection close message came holdTimeoutExpired(15) - Hold timeout expired sendStateTimeoutExpired(16) - Send State timeout expired recvStateTimeoutExpired(17) - Recieve State timeout expired initMesgSendFail(18) - Unable to send the Init message keepAliveMesgSendFail(19) - Unable to send the Keepalive message invalidAppMesgRecv(20) - Invalid Application packet received message came from peer badProtocolVersionPktRecv(21) - Bad Protocol version packet received message came from peer badPduLengthPktRecv(22) - Bad PDU length packet received message came from peer unknownCcpPktRecv(23) - Unknown CCP message type packet received message came from peer invalidCcpPktRecv(24) - Invalid CCP message length packet received message came from peer internalCcpErrorRecv(25) - Internal CCP error message came from peer ccpTcpCommFail(26) - Cluster CCP TCP communication failed')
brcdMctClusterPeerUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 11), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterPeerUpTime.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerUpTime.setDescription('The time since this MCT Cluster Peer is up. If the brcdMctClusterPeerOperStatus is not in ccpUp(2) state, then zero will be returned.')
brcdMctClusterPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 4, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterPeerRowStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerRowStatus.setDescription('The row status of this MCT Cluster Peer. Only the active(1), notInService(2), createAndGo(4) and destroy(6) values of RowStatus are supported. The notInService(2) indicates that cluster is not yet activated. The SNMP set request to create a row with brcdMctClusterPeerRowStatus set to createAndGo(4) value should contain the brcdMctClusterPeerRbridgeId and brcdMctClusterPeerIclName objects in the same SNMP set request. If the cluster is deployed, then brcdMctClusterPeerRowStatus cannot be set destroy(6)')
brcdMctClusterClientTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5), )
if mibBuilder.loadTexts: brcdMctClusterClientTable.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientTable.setDescription('This table provides Multi Chassis Trunking Cluster Clients information.')
brcdMctClusterClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1), ).setIndexNames((0, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterId"), (1, "BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterClientName"))
if mibBuilder.loadTexts: brcdMctClusterClientEntry.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientEntry.setDescription('An entry in this table represents the MCT Cluster Client.')
brcdMctClusterClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: brcdMctClusterClientName.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientName.setDescription('The name of this MCT Cluster client.')
brcdMctClusterClientRbridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 35535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientRbridgeId.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientRbridgeId.setDescription('The remote bridge id of this MCT Cluster client. This remote bridge ID is used by the client to communicate with this cluster node.')
brcdMctClusterClientIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientIfIndex.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientIfIndex.setDescription('The interface index which is connected to this MCT Cluster client. The interface should be an ethernet interface or trunk interface.')
brcdMctClusterClientOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("noState", 2), ("init", 3), ("localDeploy", 4), ("adminUp", 5), ("remoteUp", 6), ("localUp", 7), ("up", 8), ("slave", 9), ("master", 10), ("masterPeerUp", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterClientOperStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientOperStatus.setDescription("The operational status of this MCT Cluster client. The following values are taken by the operational status: unknown(1) - Unknown state noState(2) - The peer state machine is not started init(3) - The peer state machine is initializing localDeploy(4) - The client is up, but not configured at remote side adminUp(5) - The client is up, but both the client interfaces are operationally down remoteUp(6) - The client's remote side is up and locally down localUp(7) - The client is locallly up and remote side is down up(8) - The client is up locally and at remote side slave(9) - The client is down and it has taken the slave role master(10) - The client is down and it has taken the master role masterPeerUp(11) - The client is down, it has taken the master role and master peer is up.")
brcdMctClusterClientDeploy = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 5), BrcdDeployStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientDeploy.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientDeploy.setDescription('The admin status of this MCT Cluster client. When this object is set to deploy and if cluster is not deployed, the configuration will be taken but the client state machine will not be started. The objects in this table are not allowed to modify after client is deployed except brcdMctClusterClientDeploy object.')
brcdMctClusterClientDeployFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("rBridgeIdNotConfigured", 3), ("clientInterfaceNotConfigured", 4), ("rBridgeIdUsedInClusterOrPeer", 5), ("clientInterfacePhysicallyNotUp", 6), ("clientInterfaceIsMrpRingInterface", 7), ("clientInterfaceIsErpInterface", 8), ("iclIsNotInMemberVlan", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdMctClusterClientDeployFailureReason.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientDeployFailureReason.setDescription('The failure reason for the last cluster client deploy operation through SNMP. The following failure reasons are supported: none(1) - The last deploy is successful. unknown(2) - The last deploy is failed for unknown reason. rBridgeIdNotConfigured(3) - Remote bridge is not configured. clientInterfaceNotConfigured(4) - Client interface is not configured. rBridgeIdUsedInClusterOrPeer(5) - Remote bridge id is used in cluster or peer configuration. clientInterfaceNotPresent(6) - Client interface is physically not present clientInterfaceIsMrpRingInterface(7) - Client interface is configured as MRP ring interface. clientInterfaceIsErpInterface(8) - Client interface is configured as ERP interface. iclIsNotInMemberVlan(9) - ICL is not in member VLAN.')
brcdMctClusterClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMctClusterClientRowStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientRowStatus.setDescription('The row status of this MCT Cluster client. All the values of RowStatus are supported. The notInService(2) indicates that cluster client is not deployed. The brcdMctClusterClientRbridgeId and brcdMctClusterClientIfIndex objects should be present in the same SNMP set request to create a row with brcdMctClusterClientRowStatus set to createAndGo(4) value.')
brcdMctClusterPeerStatus = NotificationType((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 0, 1)).setObjects(("BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterPeerOperStatus"), ("BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterPeerDownReason"))
if mibBuilder.loadTexts: brcdMctClusterPeerStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterPeerStatus.setDescription('This notification is generated when the brcdMctClusterPeerOperStatus object for peer entry in brcdMctClusterPeerTable changes the state to ccpUp(3), ccpDown(4) or reachable(5) from any other state.')
brcdMctClusterClientStatus = NotificationType((1, 3, 6, 1, 4, 1, 1991, 1, 1, 12, 1, 0, 2)).setObjects(("BROCADE-MCT-CLUSTER-MIB", "brcdMctClusterClientOperStatus"))
if mibBuilder.loadTexts: brcdMctClusterClientStatus.setStatus('current')
if mibBuilder.loadTexts: brcdMctClusterClientStatus.setDescription('This notification is generated when the brcdMctClusterClientOperStatus object for peer entry in brcdMctClusterClientTable changes the state to remoteUp(5), localUp(6), up(7), slave(8), master(9) or masterPeerUp(10) from any other state. This notification is not generated when the client state change happens when brcdMctClusterPeerOperState changes from ccpUp(2) to ccpDown(3) or vice versa')
mibBuilder.exportSymbols("BROCADE-MCT-CLUSTER-MIB", brcdMctClusterIclRowStatus=brcdMctClusterIclRowStatus, brcdMctClusterClientDeploy=brcdMctClusterClientDeploy, brcdMctClusterClientDeployFailureReason=brcdMctClusterClientDeployFailureReason, brcdMctClusterPeerFastFailover=brcdMctClusterPeerFastFailover, brcdMctClusterId=brcdMctClusterId, brcdMctClusterPeerEntry=brcdMctClusterPeerEntry, brcdMctClusterPeerActiveVlans=brcdMctClusterPeerActiveVlans, brcdMctClusterRowStatus=brcdMctClusterRowStatus, brcdMctMIB=brcdMctMIB, brcdMctClusterPeerKeepAliveTime=brcdMctClusterPeerKeepAliveTime, brcdMctClusterClientRbridgeId=brcdMctClusterClientRbridgeId, brcdMctClusterPeerStatus=brcdMctClusterPeerStatus, brcdMctClusterClientIsolationMode=brcdMctClusterClientIsolationMode, brcdMctClusterClientRowStatus=brcdMctClusterClientRowStatus, brcdMctClusterClientStatus=brcdMctClusterClientStatus, brcdMctClusterActiveMemberVlans=brcdMctClusterActiveMemberVlans, brcdMctClusterDeploy=brcdMctClusterDeploy, brcdMctClusterClientName=brcdMctClusterClientName, brcdMctClusterPeerAddr=brcdMctClusterPeerAddr, brcdMctClusterPeerUpTime=brcdMctClusterPeerUpTime, brcdMctClusterIclEntry=brcdMctClusterIclEntry, brcdMctClusterKeepAliveVlan=brcdMctClusterKeepAliveVlan, brcdMctClusterRbridgeId=brcdMctClusterRbridgeId, brcdMctClusterClientIfIndex=brcdMctClusterClientIfIndex, brcdMctNotifications=brcdMctNotifications, brcdMctClusterIclTable=brcdMctClusterIclTable, brcdMctClusterClientOperStatus=brcdMctClusterClientOperStatus, brcdMctClusterEntry=brcdMctClusterEntry, brcdMctClusterMemberVlans=brcdMctClusterMemberVlans, brcdMctClusterPeerRbridgeId=brcdMctClusterPeerRbridgeId, brcdMctClusterPeerHoldTime=brcdMctClusterPeerHoldTime, brcdMctClusterName=brcdMctClusterName, brcdMctClusterClientShutdown=brcdMctClusterClientShutdown, brcdMctClusterPeerAddrType=brcdMctClusterPeerAddrType, PYSNMP_MODULE_ID=brcdMctMIB, brcdMctClusterClientTable=brcdMctClusterClientTable, brcdMctClusterIclName=brcdMctClusterIclName, brcdMctClusterPeerRowStatus=brcdMctClusterPeerRowStatus, BrcdDeployStatus=BrcdDeployStatus, brcdMctClusterPeerIclName=brcdMctClusterPeerIclName, brcdMctClusterClientEntry=brcdMctClusterClientEntry, brcdMctObjects=brcdMctObjects, brcdMctClusterPeerOperStatus=brcdMctClusterPeerOperStatus, brcdMctClusterTable=brcdMctClusterTable, brcdMctL2Forward=brcdMctL2Forward, brcdMctClusterPeerTable=brcdMctClusterPeerTable, brcdMctClusterDeployFailureReason=brcdMctClusterDeployFailureReason, brcdMctClusterSessionVlan=brcdMctClusterSessionVlan, brcdMctClusterIclIfIndex=brcdMctClusterIclIfIndex, brcdMctClusterPeerDownReason=brcdMctClusterPeerDownReason)
