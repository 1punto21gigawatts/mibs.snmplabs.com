#
# PySNMP MIB module CONTIVITY-INFO-V1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CONTIVITY-INFO-V1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:26:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
contivity, = mibBuilder.importSymbols("NEWOAK-MIB", "contivity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, TimeTicks, IpAddress, Counter64, NotificationType, Gauge32, Integer32, Unsigned32, iso, ModuleIdentity, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "TimeTicks", "IpAddress", "Counter64", "NotificationType", "Gauge32", "Integer32", "Unsigned32", "iso", "ModuleIdentity", "MibIdentifier", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
snmpAgentInfo_ces = ModuleIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 15)).setLabel("snmpAgentInfo-ces")
snmpAgentInfo_ces.setRevisions(('1900-08-07 22:30',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: snmpAgentInfo_ces.setRevisionsDescriptions(('Added snmpAgentInfo-Utilities-RevDate-ces, snmpAgentInfo-Utilities-Rev-ces, snmpAgentInfo-Utilities-ServerRev-ces ',))
if mibBuilder.loadTexts: snmpAgentInfo_ces.setLastUpdated('0008072230Z')
if mibBuilder.loadTexts: snmpAgentInfo_ces.setOrganization('Nortel Networks,Inc.')
if mibBuilder.loadTexts: snmpAgentInfo_ces.setContactInfo('support@nortelnetworks.com Postal: Nortel Networks,Inc. 80 Central St. Boxboro, MA 01719 Tel: +1 978 264 7100 E-Mail: support@nortelnetworks.com')
if mibBuilder.loadTexts: snmpAgentInfo_ces.setDescription('on the Convitiy Extranet Switch.')
snmpAgentInfo_Utilities_ces = MibIdentifier((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1)).setLabel("snmpAgentInfo-Utilities-ces")
snmpAgentInfo_Utilities_Ping_ces = MibIdentifier((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1)).setLabel("snmpAgentInfo-Utilities-Ping-ces")
snmpAgentInfo_Utilities_RevDate_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 1), DisplayString()).setLabel("snmpAgentInfo-Utilities-RevDate-ces").setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_RevDate_ces.setStatus('mandatory')
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_RevDate_ces.setDescription('This value should match the LAST-UPDATED value in the MIB.')
snmpAgentInfo_Utilities_Rev_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 2), Integer32()).setLabel("snmpAgentInfo-Utilities-Rev-ces").setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_Rev_ces.setStatus('mandatory')
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_Rev_ces.setDescription('This is an integer that is increment for each change in the implementation of the MIB since the LAST-UPDATED date/time.')
snmpAgentInfo_Utilities_ServerRev_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 3), DisplayString()).setLabel("snmpAgentInfo-Utilities-ServerRev-ces").setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_ServerRev_ces.setStatus('mandatory')
if mibBuilder.loadTexts: snmpAgentInfo_Utilities_ServerRev_ces.setDescription('This is the major and minor version numbers for the server image it is compatible with.')
pingAddress_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 4), IpAddress()).setLabel("pingAddress-ces")
if mibBuilder.loadTexts: pingAddress_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingAddress_ces.setDescription('')
pingRepetitions_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setLabel("pingRepetitions-ces")
if mibBuilder.loadTexts: pingRepetitions_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingRepetitions_ces.setDescription('')
pingPacketSize_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 4076))).setLabel("pingPacketSize-ces")
if mibBuilder.loadTexts: pingPacketSize_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingPacketSize_ces.setDescription('')
pingSrcAddress_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 7), IpAddress()).setLabel("pingSrcAddress-ces")
if mibBuilder.loadTexts: pingSrcAddress_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingSrcAddress_ces.setDescription('')
pingTable_ces = MibTable((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 8), ).setLabel("pingTable-ces")
if mibBuilder.loadTexts: pingTable_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingTable_ces.setDescription('')
pingEntry_ces = MibTableRow((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 8, 1), ).setLabel("pingEntry-ces").setIndexNames((0, "CONTIVITY-INFO-V1-MIB", "pingAddress-ces"), (0, "CONTIVITY-INFO-V1-MIB", "pingRepetitions-ces"), (0, "CONTIVITY-INFO-V1-MIB", "pingPacketSize-ces"), (0, "CONTIVITY-INFO-V1-MIB", "pingSrcAddress-ces"))
if mibBuilder.loadTexts: pingEntry_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingEntry_ces.setDescription('')
pingAverageTime_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 8, 1, 1), Integer32()).setLabel("pingAverageTime-ces").setMaxAccess("readonly")
if mibBuilder.loadTexts: pingAverageTime_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingAverageTime_ces.setDescription('Possible Values: -1 indicates that the address could not be pinged. -2 indicates that the instance specified did not conform to valid IP address. A value other than -1 is the average of pings. If the value is 0, then the average ping time is less than 16ms')
pingPercentLoss_ces = MibScalar((1, 3, 6, 1, 4, 1, 2505, 1, 15, 1, 1, 8, 1, 2), Integer32()).setLabel("pingPercentLoss-ces").setMaxAccess("readonly")
if mibBuilder.loadTexts: pingPercentLoss_ces.setStatus('mandatory')
if mibBuilder.loadTexts: pingPercentLoss_ces.setDescription('Possible Values: -1 indicates that the address could not be pinged. -2 indicates that the instance specified did not conform to valid IP address. A value other than -1 is the percentage of pings loss')
mibBuilder.exportSymbols("CONTIVITY-INFO-V1-MIB", PYSNMP_MODULE_ID=snmpAgentInfo_ces, snmpAgentInfo_Utilities_Rev_ces=snmpAgentInfo_Utilities_Rev_ces, pingAddress_ces=pingAddress_ces, snmpAgentInfo_Utilities_Ping_ces=snmpAgentInfo_Utilities_Ping_ces, pingRepetitions_ces=pingRepetitions_ces, snmpAgentInfo_Utilities_RevDate_ces=snmpAgentInfo_Utilities_RevDate_ces, pingTable_ces=pingTable_ces, pingAverageTime_ces=pingAverageTime_ces, pingPacketSize_ces=pingPacketSize_ces, snmpAgentInfo_Utilities_ServerRev_ces=snmpAgentInfo_Utilities_ServerRev_ces, pingSrcAddress_ces=pingSrcAddress_ces, snmpAgentInfo_ces=snmpAgentInfo_ces, pingPercentLoss_ces=pingPercentLoss_ces, snmpAgentInfo_Utilities_ces=snmpAgentInfo_Utilities_ces, pingEntry_ces=pingEntry_ces)
