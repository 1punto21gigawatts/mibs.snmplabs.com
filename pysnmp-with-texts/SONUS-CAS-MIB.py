#
# PySNMP MIB module SONUS-CAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-CAS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Counter64, Gauge32, Bits, ModuleIdentity, iso, IpAddress, ObjectIdentity, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Counter64", "Gauge32", "Bits", "ModuleIdentity", "iso", "IpAddress", "ObjectIdentity", "Integer32", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
sonusEventClass, sonusEventLevel, sonusEventDescription = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusEventLevel", "sonusEventDescription")
sonusSignallingMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusSignallingMIBs")
SonusAdminState, SonusAdminAction, SonusServiceState, SonusName, SonusNameReference = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState", "SonusAdminAction", "SonusServiceState", "SonusName", "SonusNameReference")
sonusCasMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5))
if mibBuilder.loadTexts: sonusCasMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusCasMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusCasMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusCasMIB.setDescription('The MIB Module for CAS Service Group Management.')
sonusCasMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1))
sonusCasServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1))
sonusCasServiceGroupNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasServiceGroupNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCasServiceGroupNextIndex.setDescription('The next valid index to use when creating a new sonusCasServiceGroupAdmnEntry')
sonusCasServiceGroupAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2), )
if mibBuilder.loadTexts: sonusCasServiceGroupAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasServiceGroupAdmnTable.setDescription('')
sonusCasServiceGroupAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgServiceGroupIndex"))
if mibBuilder.loadTexts: sonusCasServiceGroupAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasServiceGroupAdmnEntry.setDescription('')
sonusCassgServiceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgServiceGroupIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupIndex.setDescription('The index for the CAS Service Group')
sonusCassgServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupName.setDescription('The name of this CAS Service Group.')
sonusCassgServiceGroupProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupProfileName.setDescription('The last CAS Service Group profile applied')
sonusCassgServiceGroupTG = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 4), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupTG.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupTG.setDescription('The trunk group that the CAS Service Group in contained')
sonusCassgServiceGroupHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bottom2Top", 1), ("top2Bottom", 2), ("circularBottom2Top", 3), ("circularTop2Bottom", 4))).clone('bottom2Top')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupHuntAlgorithm.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupHuntAlgorithm.setDescription('The method in which channels are hunted for outgoing calls')
sonusCassgServiceGroupCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupCost.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupCost.setDescription('Relative cost parameter used to augment the hunt algorithm')
sonusCassgServiceGroupSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("eM", 1), ("gsFxo", 2), ("gsFxs", 3), ("lsFxo", 4), ("lsFxs", 5), ("e1Mfr2", 6))).clone('eM')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupSignalType.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupSignalType.setDescription('The channel associated signaling type')
sonusCassgServiceGroupIngressSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 8), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupIngressSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupIngressSSP.setDescription('The SSP which defines the protocol for ingress calls')
sonusCassgServiceGroupEgressSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 9), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupEgressSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupEgressSSP.setDescription('The SSP which defines the protocol for egress calls')
sonusCassgServiceGroupHookflashSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 10), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupHookflashSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupHookflashSSP.setDescription('The SSP which defines the protocol when a hookflash is received on an egress call')
sonusCassgServiceGroupPscSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 11), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupPscSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupPscSSP.setDescription('The SSP which defines Permenant Signal Condition actions to perform to force a call onhook')
sonusCassgServiceGroupMaintBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 12), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMaintBusy.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMaintBusy.setDescription('Determines if a channel is taken offhook when it is removed from service')
sonusCassgServiceGroupAutoBusyThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupAutoBusyThreshold.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupAutoBusyThreshold.setDescription('Determines the number of signaling errors which can occur before the channel is removed from service')
sonusCassgServiceGroupRequiresCPTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 14), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupRequiresCPTone.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupRequiresCPTone.setDescription('Determines if ingress calls require call progress tones')
sonusCassgServiceGroupProvidesCPTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 15), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupProvidesCPTone.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupProvidesCPTone.setDescription('Determines if the far end switch will provide call progress tones')
sonusCassgServiceGroupDTMFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 16), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupDTMFProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupDTMFProfileName.setDescription('Name reference to DTMF collection/generation profile')
sonusCassgServiceGroupMFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 17), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMFProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMFProfileName.setDescription('Name reference to MF collection/generation profile')
sonusCassgServiceGroupCPTonePkgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 18), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupCPTonePkgName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupCPTonePkgName.setDescription('Name reference to Call Progress tone package')
sonusCassgServiceGroupMinRxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMinRxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMinRxWinkTime.setDescription('Minimum duration for a receive wink event')
sonusCassgServiceGroupMaxRxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMaxRxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMaxRxWinkTime.setDescription('Maximum duration for a receive wink event')
sonusCassgServiceGroupMinRxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMinRxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMinRxFlashTime.setDescription('Minimum duration for a receive flash event')
sonusCassgServiceGroupMaxRxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMaxRxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMaxRxFlashTime.setDescription('Maximum duration for a receive flash event')
sonusCassgServiceGroupTxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupTxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupTxWinkTime.setDescription('Duration for a transmit wink')
sonusCassgServiceGroupTxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupTxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupTxFlashTime.setDescription('Duration for a transmit flash')
sonusCassgServiceGroupGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1500)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupGuardTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupGuardTime.setDescription('Duration for the line to clear after disconnect')
sonusCassgServiceGroupOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("resetStats", 2))).clone('noAction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupOperation.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupOperation.setDescription('This objects always reads as noAction(1). Setting this object to resetStats(2) causes the statistics for the channels in the Service Group to be reset.')
sonusCassgServiceGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 27), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupAdminState.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupAdminState.setDescription('The admin state of the CAS Service Group')
sonusCassgServiceGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 28), SonusServiceState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupMode.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupMode.setDescription('The mode of operation of channels in the CAS Service Group')
sonusCassgServiceGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 29), SonusAdminAction().clone('force')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupAction.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupAction.setDescription('The action taken on the channels in the CAS Service Group')
sonusCassgServiceGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupTimeout.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupTimeout.setDescription('The timeout value in minutes for dryup action on the CAS Service Group')
sonusCassgServiceGroupAlertToneName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 31), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupAlertToneName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupAlertToneName.setDescription('Specifies a named reference to a tone to play for ring back.')
sonusCassgServiceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 32), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupRowStatus.setDescription('')
sonusCassgServiceGroupDTProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 1, 2, 1, 33), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgServiceGroupDTProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgServiceGroupDTProfileName.setDescription('Name reference to Disconnect Treatment profile')
sonusCasSvcGrpProfileAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2))
sonusCasSvcGrpProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasSvcGrpProfileNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpProfileNextIndex.setDescription('The next valid index to use when creating a new sonusCasSvcGrpProfileAdmnEntry')
sonusCasSvcGrpProfileAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2), )
if mibBuilder.loadTexts: sonusCasSvcGrpProfileAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpProfileAdmnTable.setDescription('')
sonusCasSvcGrpProfileAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgSvcGrpProfileIndex"))
if mibBuilder.loadTexts: sonusCasSvcGrpProfileAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpProfileAdmnEntry.setDescription('')
sonusCassgSvcGrpProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileIndex.setDescription('The index for the CAS Service Group Profile')
sonusCassgSvcGrpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileName.setDescription('The name of this CAS Service Group profile.')
sonusCassgSvcGrpProfileTG = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTG.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTG.setDescription('The trunk group that the CAS Service Group in contained')
sonusCassgSvcGrpProfileHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bottom2Top", 1), ("top2Bottom", 2), ("circularBottom2Top", 3), ("circularTop2Bottom", 4))).clone('bottom2Top')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileHuntAlgorithm.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileHuntAlgorithm.setDescription('The method in which channels are hunted for outgoing calls')
sonusCassgSvcGrpProfileCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileCost.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileCost.setDescription('Relative cost parameter used to augment the hunt algorithm')
sonusCassgSvcGrpProfileSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("eM", 1), ("gsFxo", 2), ("gsFxs", 3), ("lsFxo", 4), ("lsFxs", 5), ("e1Mfr2", 6))).clone('eM')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileSignalType.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileSignalType.setDescription('The channel associated signaling type')
sonusCassgSvcGrpProfileIngressSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 7), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileIngressSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileIngressSSP.setDescription('The SSP which defines the protocol for ingress calls')
sonusCassgSvcGrpProfileEgressSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 8), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileEgressSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileEgressSSP.setDescription('The SSP which defines the protocol for egress calls')
sonusCassgSvcGrpProfileHookflashSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 9), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileHookflashSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileHookflashSSP.setDescription('The SSP which defines the protocol when a hookflash is received on an egress call')
sonusCassgSvcGrpProfilePscSSP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 10), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfilePscSSP.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfilePscSSP.setDescription('The SSP which defines Permenant Signal Condition actions to perform to force a call onhook')
sonusCassgSvcGrpProfileMaintBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 11), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaintBusy.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaintBusy.setDescription('Determines if a channel is taken offhook when it is removed from service')
sonusCassgSvcGrpProfileAutoBusyThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAutoBusyThreshold.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAutoBusyThreshold.setDescription('Determines the number of signaling errors which can occur before the channel is removed from service')
sonusCassgSvcGrpProfileRequiresCPTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 13), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileRequiresCPTone.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileRequiresCPTone.setDescription('Determines if ingress calls require call progress tones')
sonusCassgSvcGrpProfileProvidesCPTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 14), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileProvidesCPTone.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileProvidesCPTone.setDescription('Determines if the far end switch will provide call progress tones')
sonusCassgSvcGrpProfileDTMFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 15), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileDTMFProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileDTMFProfileName.setDescription('Name reference to DTMF collection/generation profile')
sonusCassgSvcGrpProfileMFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 16), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMFProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMFProfileName.setDescription('Name reference to MF collection/generation profile')
sonusCassgSvcGrpProfileCPTonePkgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 17), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileCPTonePkgName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileCPTonePkgName.setDescription('Name reference to Call Progress tone package')
sonusCassgSvcGrpProfileMinRxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMinRxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMinRxWinkTime.setDescription('Minimum duration for a receive wink event')
sonusCassgSvcGrpProfileMaxRxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaxRxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaxRxWinkTime.setDescription('Maximum duration for a receive wink event')
sonusCassgSvcGrpProfileMinRxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMinRxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMinRxFlashTime.setDescription('Minimum duration for a receive flash event')
sonusCassgSvcGrpProfileMaxRxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaxRxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileMaxRxFlashTime.setDescription('Maximum duration for a receive flash event')
sonusCassgSvcGrpProfileTxWinkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 800)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTxWinkTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTxWinkTime.setDescription('Duration for a transmit wink')
sonusCassgSvcGrpProfileTxFlashTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1100)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTxFlashTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileTxFlashTime.setDescription('Duration for a transmit flash')
sonusCassgSvcGrpProfileGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1500)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileGuardTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileGuardTime.setDescription('Duration for the line to clear after disconnect')
sonusCassgSvcGrpProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 25), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAdminState.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAdminState.setDescription('The admin state of the CAS Service Group')
sonusCassgSvcGrpProfileAlertToneName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 26), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAlertToneName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileAlertToneName.setDescription('Specifies a named reference to a tone to play for ring back')
sonusCassgSvcGrpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 27), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileRowStatus.setDescription('')
sonusCassgSvcGrpProfileDTProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 2, 2, 1, 28), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileDTProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSvcGrpProfileDTProfileName.setDescription('Name reference to Disconnect Treatment profile')
sonusCasChannelAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3), )
if mibBuilder.loadTexts: sonusCasChannelAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelAdmnTable.setDescription('')
sonusCasChannelAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgChannelServiceIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelShelfIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelSlotIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelPortIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelDs3Index"), (0, "SONUS-CAS-MIB", "sonusCassgChannelDs1Index"), (0, "SONUS-CAS-MIB", "sonusCassgChannelIndex"))
if mibBuilder.loadTexts: sonusCasChannelAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelAdmnEntry.setDescription('')
sonusCassgChannelServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelServiceIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelServiceIndex.setDescription('The index of the CAS Service Group in which the channel is contained')
sonusCassgChannelShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelShelfIndex.setDescription('The shelf in which the channel is contained')
sonusCassgChannelSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelSlotIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelSlotIndex.setDescription('The slot in which the channel is contained')
sonusCassgChannelPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelPortIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelPortIndex.setDescription('The port in which the channel is contained')
sonusCassgChannelDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelDs3Index.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelDs3Index.setDescription('The DS3 in which the channel is contained')
sonusCassgChannelDs1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelDs1Index.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelDs1Index.setDescription('The DS1 in which the channel is contained')
sonusCassgChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelIndex.setDescription('The relative channel number within the port')
sonusCassgChannelCircuitProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 8), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelCircuitProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelCircuitProfileName.setDescription('Name reference to the circuit profile')
sonusCassgChannelDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("twoWay", 1), ("oneWayIn", 2), ("oneWayOut", 3))).clone('twoWay')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelDirection.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelDirection.setDescription('Direction of call traffic allowed on the channel')
sonusCassgChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 10), SonusServiceState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelMode.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelMode.setDescription('The mode of operation of the channel')
sonusCassgChannelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 11), SonusAdminAction().clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelAction.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelAction.setDescription('The action taken on the channel')
sonusCassgChannelTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelTimeout.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelTimeout.setDescription('The timeout in minutes for dryup action on the channel')
sonusCassgChannelAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 13), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelAdminState.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelAdminState.setDescription('The administrative state of the object. The object must be disabled in order to modify other objects in this row.')
sonusCassgChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 3, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgChannelRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelRowStatus.setDescription('')
sonusCasChannelStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4), )
if mibBuilder.loadTexts: sonusCasChannelStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelStatTable.setDescription('')
sonusCasChannelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgChannelStatServiceIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelStatShelfIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelStatSlotIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelStatPortIndex"), (0, "SONUS-CAS-MIB", "sonusCassgChannelStatIndex"))
if mibBuilder.loadTexts: sonusCasChannelStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelStatEntry.setDescription('')
sonusCassgChannelStatServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatServiceIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatServiceIndex.setDescription('The index of the CAS Service Group in which the channel is contained')
sonusCassgChannelStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatShelfIndex.setDescription('The shelf in which the channel is contained')
sonusCassgChannelStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatSlotIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatSlotIndex.setDescription('The slot in which the channel is contained')
sonusCassgChannelStatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatPortIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatPortIndex.setDescription('The port in which the channel is contained')
sonusCassgChannelStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatIndex.setDescription('The relative channel number within the por')
sonusCassgChannelStatUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unequipped", 1), ("idle", 2), ("inBusy", 3), ("outBusy", 4), ("transientSetup", 5), ("transientRelease", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatUsage.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatUsage.setDescription('The usage state of the channel')
sonusCassgChannelStatLocalMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outOfServiceManual", 1), ("outOfServiceAuto", 2), ("inService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatLocalMaint.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatLocalMaint.setDescription('The local maintenance state of the channel')
sonusCassgChannelStatLocalHw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatLocalHw.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatLocalHw.setDescription('The local hardware state of the channel')
sonusCassgChannelStatRemoteMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatRemoteMaint.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatRemoteMaint.setDescription('The remote status of the channel')
sonusCassgChannelStatIngressAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatIngressAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatIngressAttempts.setDescription('The number of incoming call attempts')
sonusCassgChannelStatIngressFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatIngressFailures.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatIngressFailures.setDescription('The number of incoming call failures')
sonusCassgChannelStatEgressAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatEgressAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatEgressAttempts.setDescription('The number of outgoing call attempts')
sonusCassgChannelStatEgressFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatEgressFailures.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatEgressFailures.setDescription('The number of outgoing call failures')
sonusCassgChannelStatMakeBusyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatMakeBusyFailures.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatMakeBusyFailures.setDescription('The number of failures which are considered in the auto busy threshold processing')
sonusCassgChannelStatIngressCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatIngressCompletions.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatIngressCompletions.setDescription('The number of incoming calls which have completed the Ingress SSP')
sonusCassgChannelStatEgressCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgChannelStatEgressCompletions.setStatus('current')
if mibBuilder.loadTexts: sonusCassgChannelStatEgressCompletions.setDescription('The number of outgoing calls which have completed the Egress SSP')
sonusCasCollectionProfileAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5))
sonusCasCollectionProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasCollectionProfileNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCasCollectionProfileNextIndex.setDescription('The next valid index to use when creating a new sonusCasCollectionProfileAdmnEntry')
sonusCasCollectionProfileAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2), )
if mibBuilder.loadTexts: sonusCasCollectionProfileAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasCollectionProfileAdmnTable.setDescription('')
sonusCasCollectionProfileAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgCollectProfileIndex"))
if mibBuilder.loadTexts: sonusCasCollectionProfileAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasCollectionProfileAdmnEntry.setDescription('')
sonusCassgCollectProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgCollectProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileIndex.setDescription('The index of the collection profile')
sonusCassgCollectProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileName.setDescription('The name of the collection profile')
sonusCassgCollectProfileCollectId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("calledParty", 1), ("callingParty", 2), ("ani", 3), ("iani", 4), ("iiani", 5), ("dnis", 6), ("carrierId", 7), ("internationalCountryCode", 8))).clone('calledParty')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileCollectId.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileCollectId.setDescription('Identifies the collection and where to store digits')
sonusCassgCollectProfileCollectType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dtmf", 1), ("mf", 2))).clone('dtmf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileCollectType.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileCollectType.setDescription('Type of digits to be collected')
sonusCassgCollectProfileMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileMinDigits.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileMinDigits.setDescription('Minimum number of digits to collect')
sonusCassgCollectProfileMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileMaxDigits.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileMaxDigits.setDescription('Maximum number of digits to collect')
sonusCassgCollectProfileFirstDigitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileFirstDigitTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileFirstDigitTime.setDescription('Duration in milliseconds to allow for the first digit')
sonusCassgCollectProfileInterDigitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileInterDigitTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileInterDigitTime.setDescription('Duration in milliseconds allowed between digits')
sonusCassgCollectProfileFieldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileFieldTime.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileFieldTime.setDescription('The duration in milliseconds allowed for the complete collection')
sonusCassgCollectProfileTermDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("star", 2), ("pound", 3), ("dtmfA", 4), ("dtmfB", 5), ("dtmfC", 6), ("dtmfD", 7))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileTermDigit.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileTermDigit.setDescription('Specifies a digit to terminate a DTMF collection')
sonusCassgCollectProfileRestartDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileRestartDigit.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileRestartDigit.setDescription('Specifies a digit sequence which will restart the collection and announcement prompt')
sonusCassgCollectProfileReinputDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileReinputDigit.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileReinputDigit.setDescription('Specifies a digit sequence which will restart the collection but not the announcement')
sonusCassgCollectProfileReportDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileReportDigits.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileReportDigits.setDescription('')
sonusCassgCollectProfileFirstDigitQuiet = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 14), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileFirstDigitQuiet.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileFirstDigitQuiet.setDescription('Determines if announcement should be terminated when the first digit is entered')
sonusCassgCollectProfileAnnouncementPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileAnnouncementPrompt.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileAnnouncementPrompt.setDescription('Numeric identifier for the announcement')
sonusCassgCollectProfileTonePrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileTonePrompt.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileTonePrompt.setDescription('Named reference to the tone prompt')
sonusCassgCollectProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 5, 2, 1, 17), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgCollectProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgCollectProfileRowStatus.setDescription('')
sonusCasSspGroupAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6))
sonusCasSspNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasSspNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCasSspNextIndex.setDescription('The next valid index to use when creating a new sonusCasSspGroupAdmnEntry')
sonusCasSspAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 2), )
if mibBuilder.loadTexts: sonusCasSspAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasSspAdmnTable.setDescription('')
sonusCasSspAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 2, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgSigSeqProfileIndex"))
if mibBuilder.loadTexts: sonusCasSspAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasSspAdmnEntry.setDescription('')
sonusCassgSigSeqProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigSeqProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSeqProfileIndex.setDescription('The index of the SSP')
sonusCassgSigSeqProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSeqProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSeqProfileName.setDescription('Name of the SSP')
sonusCassgSigSeqProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 6, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSeqProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSeqProfileRowStatus.setDescription('')
sonusCasSignalSeqAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7), )
if mibBuilder.loadTexts: sonusCasSignalSeqAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasSignalSeqAdmnTable.setDescription('')
sonusCasSignalSeqAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgSigSequenceProfileIndex"), (0, "SONUS-CAS-MIB", "sonusCassgSigSequenceIndex"))
if mibBuilder.loadTexts: sonusCasSignalSeqAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasSignalSeqAdmnEntry.setDescription('')
sonusCassgSigSequenceProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigSequenceProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceProfileIndex.setDescription('Index of SSP in which the Signal Sequence is contained')
sonusCassgSigSequenceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigSequenceIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceIndex.setDescription('Index of the Signal Sequence')
sonusCassgSigSequencePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequencePosition.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequencePosition.setDescription('Relative position of the Signal Sequence')
sonusCassgSigSequenceToken = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("seize", 1), ("wink", 2), ("flash", 3), ("dialMF", 4), ("dialDTMF", 5), ("dialDigit", 6), ("playTone", 7), ("playAnn", 8), ("delay", 9), ("waitWink", 10), ("waitFlash", 11), ("waitAnswer", 12), ("collectField", 13), ("collectDigit", 14), ("report", 15), ("clear", 16), ("exec", 17))).clone('seize')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceToken.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceToken.setDescription('Signaling action to perform')
sonusCassgSigSequenceParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceParam1.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceParam1.setDescription('First general parameter field specific to the signaling token')
sonusCassgSigSequenceParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceParam2.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceParam2.setDescription('Second general parameter field specific to the signaling token')
sonusCassgSigSequenceSigCondProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 7), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceSigCondProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceSigCondProfileName.setDescription('Name reference to SCP to execute when an error occurs')
sonusCassgSigSequenceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 8), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceAdminState.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceAdminState.setDescription('Admin state of the Signal Sequence')
sonusCassgSigSequenceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 7, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigSequenceRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigSequenceRowStatus.setDescription('')
sonusCasScpAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8))
sonusCasScpNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasScpNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCasScpNextIndex.setDescription('The next valid index to use when creating a new sonusCasScpAdmnEntry')
sonusCasScpAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 2), )
if mibBuilder.loadTexts: sonusCasScpAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasScpAdmnTable.setDescription('')
sonusCasScpAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 2, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgSigCondProfileIndex"))
if mibBuilder.loadTexts: sonusCasScpAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasScpAdmnEntry.setDescription('')
sonusCassgSigCondProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigCondProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigCondProfileIndex.setDescription('The index of the SCP')
sonusCassgSigCondProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigCondProfileName.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigCondProfileName.setDescription('Name of the SCP')
sonusCassgSigCondProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigCondProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigCondProfileRowStatus.setDescription('')
sonusCasSignalCondAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3), )
if mibBuilder.loadTexts: sonusCasSignalCondAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusCasSignalCondAdmnTable.setDescription('')
sonusCasSignalCondAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgSigConditionProfileIndex"), (0, "SONUS-CAS-MIB", "sonusCassgSigConditionIndex"))
if mibBuilder.loadTexts: sonusCasSignalCondAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusCasSignalCondAdmnEntry.setDescription('')
sonusCassgSigConditionProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigConditionProfileIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionProfileIndex.setDescription('Index of the SCP in which the Signal Condition is contained')
sonusCassgSigConditionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgSigConditionIndex.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionIndex.setDescription('Index of the Signal Condition')
sonusCassgSigConditionToken = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("default", 1), ("firstDigitTimeout", 2), ("interDigitTimeout", 3), ("fieldTimeout", 4), ("shortCollection", 5), ("unexpectedDigit", 6), ("rxWink", 7), ("rxFlash", 8), ("rxAnswer", 9), ("winkTimeout", 10), ("flashTimeout", 11), ("answerTimeout", 12), ("cutThrough", 13))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigConditionToken.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionToken.setDescription('Token which defines error condition which occurred')
sonusCassgSigConditionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("proceed", 1), ("exec", 2), ("abort", 3), ("abortMB", 4))).clone('proceed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigConditionControl.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionControl.setDescription('Defines how processing of the SSP should continue')
sonusCassgSigConditionParam = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigConditionParam.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionParam.setDescription('General parameter for Signal Condition specific to token and control')
sonusCassgSigConditionAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 6), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigConditionAdminState.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionAdminState.setDescription('The admin state of the Signal Condition')
sonusCassgSigConditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 8, 3, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgSigConditionRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusCassgSigConditionRowStatus.setDescription('')
sonusCasDisconnectTreatAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9), )
if mibBuilder.loadTexts: sonusCasDisconnectTreatAdmnTable.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCasDisconnectTreatAdmnTable.setDescription('')
sonusCasDisconnectTreatAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9, 1), ).setIndexNames((0, "SONUS-CAS-MIB", "sonusCassgDiscTreatmentIndex"))
if mibBuilder.loadTexts: sonusCasDisconnectTreatAdmnEntry.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCasDisconnectTreatAdmnEntry.setDescription('')
sonusCassgDiscTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgDiscTreatmentIndex.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCassgDiscTreatmentIndex.setDescription('')
sonusCassgDiscTreatmentReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCassgDiscTreatmentReason.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCassgDiscTreatmentReason.setDescription('')
sonusCassgDiscTreatmentSigSeqProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgDiscTreatmentSigSeqProfileName.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCassgDiscTreatmentSigSeqProfileName.setDescription('')
sonusCassgDiscTreatmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 9, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusCassgDiscTreatmentRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: sonusCassgDiscTreatmentRowStatus.setDescription('')
sonusCasServiceGroupMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10))
sonusCasServiceGroupMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 0))
sonusCasServiceGroupMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 1))
sonusCasSvcGrpName = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusCasSvcGrpName.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpName.setDescription('Name of the CAS service group.')
sonusCasSvcGrpInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 0, 1)).setObjects(("SONUS-CAS-MIB", "sonusCasSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCasSvcGrpInServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpInServiceNotification.setDescription('This trap indicates that the CAS Service Group was put in service by maintenance staff.')
sonusCasSvcGrpOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 0, 2)).setObjects(("SONUS-CAS-MIB", "sonusCasSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCasSvcGrpOutOfServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCasSvcGrpOutOfServiceNotification.setDescription('This trap indicates that the CAS Service Group was taken out of service by maintenance staff.')
sonusCasChannelInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 0, 3)).setObjects(("SONUS-CAS-MIB", "sonusCasSvcGrpName"), ("SONUS-CAS-MIB", "sonusCassgChannelShelfIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelSlotIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelPortIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCasChannelInServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelInServiceNotification.setDescription('This trap indicates that a CAS channel was put in service by CAS.')
sonusCasChannelOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 5, 1, 10, 0, 4)).setObjects(("SONUS-CAS-MIB", "sonusCasSvcGrpName"), ("SONUS-CAS-MIB", "sonusCassgChannelShelfIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelSlotIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelPortIndex"), ("SONUS-CAS-MIB", "sonusCassgChannelIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCasChannelOutOfServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCasChannelOutOfServiceNotification.setDescription('This trap indicates that a channel was taken out of service by the CAS SG due to signaling errors exceeding a configured threshold.')
mibBuilder.exportSymbols("SONUS-CAS-MIB", sonusCassgServiceGroupMaxRxFlashTime=sonusCassgServiceGroupMaxRxFlashTime, sonusCassgChannelPortIndex=sonusCassgChannelPortIndex, sonusCassgChannelStatIngressAttempts=sonusCassgChannelStatIngressAttempts, sonusCassgServiceGroupMinRxWinkTime=sonusCassgServiceGroupMinRxWinkTime, sonusCassgChannelStatLocalHw=sonusCassgChannelStatLocalHw, sonusCassgSvcGrpProfileDTProfileName=sonusCassgSvcGrpProfileDTProfileName, sonusCassgSigSequenceProfileIndex=sonusCassgSigSequenceProfileIndex, sonusCassgSigConditionIndex=sonusCassgSigConditionIndex, sonusCassgSvcGrpProfileTxFlashTime=sonusCassgSvcGrpProfileTxFlashTime, sonusCasDisconnectTreatAdmnTable=sonusCasDisconnectTreatAdmnTable, sonusCassgServiceGroupAction=sonusCassgServiceGroupAction, sonusCasMIBObjects=sonusCasMIBObjects, sonusCassgChannelRowStatus=sonusCassgChannelRowStatus, sonusCasChannelAdmnEntry=sonusCasChannelAdmnEntry, sonusCasSignalCondAdmnEntry=sonusCasSignalCondAdmnEntry, sonusCassgChannelServiceIndex=sonusCassgChannelServiceIndex, sonusCassgCollectProfileFirstDigitQuiet=sonusCassgCollectProfileFirstDigitQuiet, sonusCassgChannelTimeout=sonusCassgChannelTimeout, sonusCassgSigSeqProfileRowStatus=sonusCassgSigSeqProfileRowStatus, sonusCassgChannelSlotIndex=sonusCassgChannelSlotIndex, sonusCasServiceGroupMIBNotificationsPrefix=sonusCasServiceGroupMIBNotificationsPrefix, sonusCassgSvcGrpProfileAlertToneName=sonusCassgSvcGrpProfileAlertToneName, sonusCassgCollectProfileTermDigit=sonusCassgCollectProfileTermDigit, sonusCassgServiceGroupDTMFProfileName=sonusCassgServiceGroupDTMFProfileName, sonusCasDisconnectTreatAdmnEntry=sonusCasDisconnectTreatAdmnEntry, sonusCassgCollectProfileInterDigitTime=sonusCassgCollectProfileInterDigitTime, sonusCasCollectionProfileAdmn=sonusCasCollectionProfileAdmn, sonusCassgCollectProfileFieldTime=sonusCassgCollectProfileFieldTime, sonusCassgCollectProfileReportDigits=sonusCassgCollectProfileReportDigits, sonusCassgSvcGrpProfileGuardTime=sonusCassgSvcGrpProfileGuardTime, sonusCassgSvcGrpProfileIndex=sonusCassgSvcGrpProfileIndex, sonusCassgChannelAction=sonusCassgChannelAction, sonusCassgServiceGroupIndex=sonusCassgServiceGroupIndex, sonusCassgCollectProfileTonePrompt=sonusCassgCollectProfileTonePrompt, sonusCassgSigSequenceParam1=sonusCassgSigSequenceParam1, sonusCassgChannelIndex=sonusCassgChannelIndex, sonusCassgSigSequenceIndex=sonusCassgSigSequenceIndex, sonusCasSignalCondAdmnTable=sonusCasSignalCondAdmnTable, sonusCasSvcGrpName=sonusCasSvcGrpName, sonusCassgServiceGroupTG=sonusCassgServiceGroupTG, sonusCassgServiceGroupHookflashSSP=sonusCassgServiceGroupHookflashSSP, sonusCassgServiceGroupProvidesCPTone=sonusCassgServiceGroupProvidesCPTone, sonusCassgChannelStatRemoteMaint=sonusCassgChannelStatRemoteMaint, sonusCasSspGroupAdmn=sonusCasSspGroupAdmn, sonusCassgSvcGrpProfileIngressSSP=sonusCassgSvcGrpProfileIngressSSP, sonusCasChannelStatEntry=sonusCasChannelStatEntry, sonusCassgChannelStatUsage=sonusCassgChannelStatUsage, sonusCassgSvcGrpProfileAutoBusyThreshold=sonusCassgSvcGrpProfileAutoBusyThreshold, sonusCassgDiscTreatmentRowStatus=sonusCassgDiscTreatmentRowStatus, sonusCasCollectionProfileNextIndex=sonusCasCollectionProfileNextIndex, sonusCassgServiceGroupCost=sonusCassgServiceGroupCost, sonusCassgSvcGrpProfileName=sonusCassgSvcGrpProfileName, sonusCassgChannelStatMakeBusyFailures=sonusCassgChannelStatMakeBusyFailures, sonusCasChannelInServiceNotification=sonusCasChannelInServiceNotification, sonusCassgSvcGrpProfileHuntAlgorithm=sonusCassgSvcGrpProfileHuntAlgorithm, sonusCassgChannelStatIngressCompletions=sonusCassgChannelStatIngressCompletions, sonusCassgChannelCircuitProfileName=sonusCassgChannelCircuitProfileName, sonusCassgCollectProfileName=sonusCassgCollectProfileName, sonusCasScpAdmn=sonusCasScpAdmn, sonusCassgSvcGrpProfileMinRxWinkTime=sonusCassgSvcGrpProfileMinRxWinkTime, sonusCasSvcGrpProfileAdmnTable=sonusCasSvcGrpProfileAdmnTable, sonusCassgSigSeqProfileName=sonusCassgSigSeqProfileName, sonusCasSspNextIndex=sonusCasSspNextIndex, sonusCassgCollectProfileAnnouncementPrompt=sonusCassgCollectProfileAnnouncementPrompt, sonusCassgSvcGrpProfileMaxRxFlashTime=sonusCassgSvcGrpProfileMaxRxFlashTime, sonusCasSspAdmnEntry=sonusCasSspAdmnEntry, sonusCasChannelAdmnTable=sonusCasChannelAdmnTable, sonusCasServiceGroupMIBNotificationsObjects=sonusCasServiceGroupMIBNotificationsObjects, sonusCassgSigSequenceAdminState=sonusCassgSigSequenceAdminState, sonusCassgServiceGroupMinRxFlashTime=sonusCassgServiceGroupMinRxFlashTime, sonusCassgCollectProfileCollectType=sonusCassgCollectProfileCollectType, sonusCassgCollectProfileMinDigits=sonusCassgCollectProfileMinDigits, sonusCassgServiceGroupTimeout=sonusCassgServiceGroupTimeout, sonusCassgChannelShelfIndex=sonusCassgChannelShelfIndex, sonusCassgChannelStatIngressFailures=sonusCassgChannelStatIngressFailures, sonusCassgSigSequencePosition=sonusCassgSigSequencePosition, sonusCassgChannelStatPortIndex=sonusCassgChannelStatPortIndex, sonusCassgSigConditionRowStatus=sonusCassgSigConditionRowStatus, sonusCassgServiceGroupHuntAlgorithm=sonusCassgServiceGroupHuntAlgorithm, PYSNMP_MODULE_ID=sonusCasMIB, sonusCassgSigConditionParam=sonusCassgSigConditionParam, sonusCassgSigSequenceToken=sonusCassgSigSequenceToken, sonusCassgSigSequenceRowStatus=sonusCassgSigSequenceRowStatus, sonusCassgChannelStatShelfIndex=sonusCassgChannelStatShelfIndex, sonusCasSvcGrpOutOfServiceNotification=sonusCasSvcGrpOutOfServiceNotification, sonusCassgServiceGroupMaintBusy=sonusCassgServiceGroupMaintBusy, sonusCassgDiscTreatmentIndex=sonusCassgDiscTreatmentIndex, sonusCassgChannelMode=sonusCassgChannelMode, sonusCassgCollectProfileRestartDigit=sonusCassgCollectProfileRestartDigit, sonusCassgChannelAdminState=sonusCassgChannelAdminState, sonusCasSvcGrpProfileAdmnEntry=sonusCasSvcGrpProfileAdmnEntry, sonusCassgDiscTreatmentSigSeqProfileName=sonusCassgDiscTreatmentSigSeqProfileName, sonusCasSvcGrpProfileAdmn=sonusCasSvcGrpProfileAdmn, sonusCassgChannelStatServiceIndex=sonusCassgChannelStatServiceIndex, sonusCassgChannelStatEgressAttempts=sonusCassgChannelStatEgressAttempts, sonusCassgSvcGrpProfileHookflashSSP=sonusCassgSvcGrpProfileHookflashSSP, sonusCassgServiceGroupTxWinkTime=sonusCassgServiceGroupTxWinkTime, sonusCassgSvcGrpProfileDTMFProfileName=sonusCassgSvcGrpProfileDTMFProfileName, sonusCassgChannelDs3Index=sonusCassgChannelDs3Index, sonusCasScpAdmnTable=sonusCasScpAdmnTable, sonusCassgChannelDirection=sonusCassgChannelDirection, sonusCassgCollectProfileRowStatus=sonusCassgCollectProfileRowStatus, sonusCassgServiceGroupRequiresCPTone=sonusCassgServiceGroupRequiresCPTone, sonusCassgChannelDs1Index=sonusCassgChannelDs1Index, sonusCassgSigConditionProfileIndex=sonusCassgSigConditionProfileIndex, sonusCassgSvcGrpProfileEgressSSP=sonusCassgSvcGrpProfileEgressSSP, sonusCassgSvcGrpProfileAdminState=sonusCassgSvcGrpProfileAdminState, sonusCasMIB=sonusCasMIB, sonusCasServiceGroupNextIndex=sonusCasServiceGroupNextIndex, sonusCasSvcGrpProfileNextIndex=sonusCasSvcGrpProfileNextIndex, sonusCassgSvcGrpProfileMaxRxWinkTime=sonusCassgSvcGrpProfileMaxRxWinkTime, sonusCassgSvcGrpProfileProvidesCPTone=sonusCassgSvcGrpProfileProvidesCPTone, sonusCassgServiceGroupIngressSSP=sonusCassgServiceGroupIngressSSP, sonusCassgSigCondProfileIndex=sonusCassgSigCondProfileIndex, sonusCassgSigConditionAdminState=sonusCassgSigConditionAdminState, sonusCasServiceGroupAdmnEntry=sonusCasServiceGroupAdmnEntry, sonusCasChannelOutOfServiceNotification=sonusCasChannelOutOfServiceNotification, sonusCassgCollectProfileMaxDigits=sonusCassgCollectProfileMaxDigits, sonusCassgSigConditionToken=sonusCassgSigConditionToken, sonusCassgServiceGroupMaxRxWinkTime=sonusCassgServiceGroupMaxRxWinkTime, sonusCassgServiceGroupAutoBusyThreshold=sonusCassgServiceGroupAutoBusyThreshold, sonusCassgDiscTreatmentReason=sonusCassgDiscTreatmentReason, sonusCassgChannelStatSlotIndex=sonusCassgChannelStatSlotIndex, sonusCassgSigCondProfileName=sonusCassgSigCondProfileName, sonusCassgSvcGrpProfileRequiresCPTone=sonusCassgSvcGrpProfileRequiresCPTone, sonusCasCollectionProfileAdmnEntry=sonusCasCollectionProfileAdmnEntry, sonusCassgSigSequenceSigCondProfileName=sonusCassgSigSequenceSigCondProfileName, sonusCassgServiceGroupDTProfileName=sonusCassgServiceGroupDTProfileName, sonusCassgSvcGrpProfileTxWinkTime=sonusCassgSvcGrpProfileTxWinkTime, sonusCassgChannelStatEgressCompletions=sonusCassgChannelStatEgressCompletions, sonusCassgSigCondProfileRowStatus=sonusCassgSigCondProfileRowStatus, sonusCassgServiceGroupCPTonePkgName=sonusCassgServiceGroupCPTonePkgName, sonusCasServiceGroup=sonusCasServiceGroup, sonusCassgServiceGroupPscSSP=sonusCassgServiceGroupPscSSP, sonusCassgCollectProfileIndex=sonusCassgCollectProfileIndex, sonusCasServiceGroupAdmnTable=sonusCasServiceGroupAdmnTable, sonusCasSspAdmnTable=sonusCasSspAdmnTable, sonusCassgSvcGrpProfileMaintBusy=sonusCassgSvcGrpProfileMaintBusy, sonusCassgSigConditionControl=sonusCassgSigConditionControl, sonusCassgSvcGrpProfileCPTonePkgName=sonusCassgSvcGrpProfileCPTonePkgName, sonusCasScpAdmnEntry=sonusCasScpAdmnEntry, sonusCassgSvcGrpProfileSignalType=sonusCassgSvcGrpProfileSignalType, sonusCassgServiceGroupProfileName=sonusCassgServiceGroupProfileName, sonusCassgSvcGrpProfileTG=sonusCassgSvcGrpProfileTG, sonusCassgSigSeqProfileIndex=sonusCassgSigSeqProfileIndex, sonusCassgServiceGroupMFProfileName=sonusCassgServiceGroupMFProfileName, sonusCassgServiceGroupAdminState=sonusCassgServiceGroupAdminState, sonusCassgChannelStatEgressFailures=sonusCassgChannelStatEgressFailures, sonusCassgSvcGrpProfilePscSSP=sonusCassgSvcGrpProfilePscSSP, sonusCassgServiceGroupOperation=sonusCassgServiceGroupOperation, sonusCassgServiceGroupMode=sonusCassgServiceGroupMode, sonusCassgServiceGroupRowStatus=sonusCassgServiceGroupRowStatus, sonusCassgSvcGrpProfileMinRxFlashTime=sonusCassgSvcGrpProfileMinRxFlashTime, sonusCassgChannelStatLocalMaint=sonusCassgChannelStatLocalMaint, sonusCasScpNextIndex=sonusCasScpNextIndex, sonusCassgServiceGroupAlertToneName=sonusCassgServiceGroupAlertToneName, sonusCasSignalSeqAdmnEntry=sonusCasSignalSeqAdmnEntry, sonusCasServiceGroupMIBNotifications=sonusCasServiceGroupMIBNotifications, sonusCassgSvcGrpProfileCost=sonusCassgSvcGrpProfileCost, sonusCassgServiceGroupEgressSSP=sonusCassgServiceGroupEgressSSP, sonusCassgServiceGroupGuardTime=sonusCassgServiceGroupGuardTime, sonusCassgSvcGrpProfileRowStatus=sonusCassgSvcGrpProfileRowStatus, sonusCassgCollectProfileReinputDigit=sonusCassgCollectProfileReinputDigit, sonusCassgSvcGrpProfileMFProfileName=sonusCassgSvcGrpProfileMFProfileName, sonusCassgServiceGroupTxFlashTime=sonusCassgServiceGroupTxFlashTime, sonusCassgChannelStatIndex=sonusCassgChannelStatIndex, sonusCassgSigSequenceParam2=sonusCassgSigSequenceParam2, sonusCasChannelStatTable=sonusCasChannelStatTable, sonusCasSignalSeqAdmnTable=sonusCasSignalSeqAdmnTable, sonusCasSvcGrpInServiceNotification=sonusCasSvcGrpInServiceNotification, sonusCasCollectionProfileAdmnTable=sonusCasCollectionProfileAdmnTable, sonusCassgCollectProfileFirstDigitTime=sonusCassgCollectProfileFirstDigitTime, sonusCassgCollectProfileCollectId=sonusCassgCollectProfileCollectId, sonusCassgServiceGroupName=sonusCassgServiceGroupName, sonusCassgServiceGroupSignalType=sonusCassgServiceGroupSignalType)
