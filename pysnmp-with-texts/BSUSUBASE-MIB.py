#
# PySNMP MIB module BSUSUBASE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BSUSUBASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:41:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
aniBsuSuGroup, = mibBuilder.importSymbols("ANIROOT-MIB", "aniBsuSuGroup")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
aniBsuSuMacAddr, = mibBuilder.importSymbols("BSUSUINV-MIB", "aniBsuSuMacAddr")
aniBsuWirelessPort, = mibBuilder.importSymbols("BSUWIRELESSIF-MIB", "aniBsuWirelessPort")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter64, Counter32, Unsigned32, Integer32, Bits, NotificationType, Gauge32, ObjectIdentity, MibIdentifier, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "Counter32", "Unsigned32", "Integer32", "Bits", "NotificationType", "Gauge32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aniBsuSuBase = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2))
if mibBuilder.loadTexts: aniBsuSuBase.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniBsuSuBase.setOrganization('Aperto Networks')
if mibBuilder.loadTexts: aniBsuSuBase.setContactInfo(' Postal: Aperto Networks Inc 1637 S Main Street Milpitas, California 95035 Tel: +1 408 719 9977 ')
if mibBuilder.loadTexts: aniBsuSuBase.setDescription('This group allows the users of the BSU to access some basic information about the SU through Proxy. ')
aniBsuSuBaseTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1), )
if mibBuilder.loadTexts: aniBsuSuBaseTable.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuBaseTable.setDescription('This table accesses the attributes of each SU MAC interface through proxy. ')
aniBsuSuBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1, 1), ).setIndexNames((0, "BSUWIRELESSIF-MIB", "aniBsuWirelessPort"), (0, "BSUSUINV-MIB", "aniBsuSuMacAddr"))
if mibBuilder.loadTexts: aniBsuSuBaseEntry.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuBaseEntry.setDescription('Basic information for a single SU. An entry in this table exists for each SU that is connected to the BSU. ')
aniBsuSuNetworkAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuNetworkAccess.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuNetworkAccess.setDescription('This object controls whether the SU has access to the network or not. ')
aniBsuSuMaxHostSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuMaxHostSupport.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuMaxHostSupport.setDescription('This object identifies the total number of hosts that can be granted access through SU. For PacketWave 110/210, this value is limited to 5. PacketWave 120/220 can support upto 20 hosts. PacketWave 130/230 can support upto 254 hosts. ')
aniBsuSuTargetFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuTargetFreq.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuTargetFreq.setDescription('The objects displays the target frequency for a particular SU. It returns the SU target frequency in a string format. ')
aniBsuSuFrequencyTable = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuFrequencyTable.setStatus('current')
if mibBuilder.loadTexts: aniBsuSuFrequencyTable.setDescription('The objects displays the Frequency Table for a particular SU. It returns the SU frequency table in a string format. ')
mibBuilder.exportSymbols("BSUSUBASE-MIB", aniBsuSuMaxHostSupport=aniBsuSuMaxHostSupport, aniBsuSuTargetFreq=aniBsuSuTargetFreq, aniBsuSuNetworkAccess=aniBsuSuNetworkAccess, aniBsuSuBaseEntry=aniBsuSuBaseEntry, aniBsuSuFrequencyTable=aniBsuSuFrequencyTable, aniBsuSuBaseTable=aniBsuSuBaseTable, aniBsuSuBase=aniBsuSuBase, PYSNMP_MODULE_ID=aniBsuSuBase)
