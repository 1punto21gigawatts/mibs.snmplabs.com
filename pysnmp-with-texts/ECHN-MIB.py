#
# PySNMP MIB module ECHN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ECHN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:59:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, enterprises, Bits, IpAddress, ModuleIdentity, Counter64, Counter32, MibIdentifier, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "enterprises", "Bits", "IpAddress", "ModuleIdentity", "Counter64", "Counter32", "MibIdentifier", "Integer32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbsEthChn = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5))
nbsEthChnRun = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1))
nbsEthChnPerm = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2))
nbsEthChnPoss = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3))
nbsEthChnEnable = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnEnable.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnEnable.setDescription('Ethernet Channel enable/disable mode of device')
nbsEthChnPossNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossNum.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossNum.setDescription('Maximum Possible number of the Groups for Ethernet Channels constructing.')
nbsEthChnMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnMaxNum.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnMaxNum.setDescription('Maximum Real number of Ethernet Channels that may be constructed.')
nbsEthChnRunNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunNum.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunNum.setDescription('Real number of the Ethernet Channels in the RUN Data Base.')
nbsEthChnPermNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPermNum.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermNum.setDescription('Real number of the Ethernet Channels in the PERM Data Base.')
nbsEthChnRunTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1), )
if mibBuilder.loadTexts: nbsEthChnRunTable.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunTable.setDescription('A list of the current Ethernet Channels defined. Number of entries is given by nbsEthChnMaxNum')
nbsEthChnRunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnRunIndex"))
if mibBuilder.loadTexts: nbsEthChnRunEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunEntry.setDescription('Contains the descriptor of a Ethernet Channel.')
nbsEthChnRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunIndex.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunIndex.setDescription('The serial number of this entry in the nbsEthChnRunTbl. It may range from 1 to the value of nbsEthChnsRunMaxNum.')
nbsEthChnRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnRunStatus.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunStatus.setDescription('The object is used to create/delete entries in the nbsEthChnRunTable table. Setting this value to invalid(2) for a certain nbsEthChnRunIndex, deletes this entry. To create a new entry a SET PDU with the nbsEthChnRunList and nbsEthChnRunStatus=valid(1) objects is required.')
nbsEthChnRunList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnRunList.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunList.setDescription('Bitmap of ports forming the Ethernet Channel in the Run Data Base. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying ports 9 through 16, etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. Thus, each port of the switch is represented by a single bit within the value of this object. If that bit has a value of <1> then that port is included in the set of ports. The port is not included if its bit has a value of <0>.')
nbsEthChnRunLinkList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunLinkList.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnRunLinkList.setDescription('Bitmap of only Linked ports forming the Ethernet Channel in the Run Data Base. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying ports 9 through 16, etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. Thus, each port of the switch is represented by a single bit within the value of this object. If that bit has a value of <1> then that port is included in the set of ports. The port is not included if its bit has a value of <0>.')
nbsEthChnPermTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1), )
if mibBuilder.loadTexts: nbsEthChnPermTable.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermTable.setDescription('A list of the current Ethernet Channels defined. Number of entries is given by nbsEthChnMaxNum')
nbsEthChnPermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnPermIndex"))
if mibBuilder.loadTexts: nbsEthChnPermEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermEntry.setDescription('Contains the descriptor of a Ethernet Channel.')
nbsEthChnPermIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPermIndex.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermIndex.setDescription('The serial number of this entry in the nbsEthChnPermTbl. It may range from 1 to the value of nbsEthChnsPermMaxNum.')
nbsEthChnPermStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnPermStatus.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermStatus.setDescription('The object is used to create/delete entries in the nbsEthChnPermTable table. Setting this value to invalid(2) for a certain nbsEthChnPermIndex, deletes this entry. To create a new entry a SET PDU with the nbsEthChnPermList and nbsEthChnPermStatus=valid(1) objects is required.')
nbsEthChnPermList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnPermList.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPermList.setDescription('Bitmap of ports forming the Ethernet Channel in the Permanent Data Base. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying ports 9 through 16, etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. Thus, each port of the switch is represented by a single bit within the value of this object. If that bit has a value of <1> then that port is included in the set of ports. The port is not included if its bit has a value of <0>.')
nbsEthChnPossTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1), )
if mibBuilder.loadTexts: nbsEthChnPossTable.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossTable.setDescription('A list of the possible ports for the Ethernet Channels. Number of entries is given by nbsEthChnPossNum')
nbsEthChnPossEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnPossIndex"))
if mibBuilder.loadTexts: nbsEthChnPossEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossEntry.setDescription('Contains the descriptor of a Ethernet Channel.')
nbsEthChnPossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossIndex.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossIndex.setDescription('The serial number of this entry in the nbsEthChnPossTable. It may range from 1 to the value of nbsEthChnPossNum.')
nbsEthChnPossRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossRunStatus.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossRunStatus.setDescription('The object is used to know if the current possible port list is used in the RUN Ethernet Channel data base.')
nbsEthChnPossPermStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossPermStatus.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossPermStatus.setDescription('The object is used to know if the current possible port list is used in the PERM Ethernet Channel data base.')
nbsEthChnPossPortMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossPortMaxNum.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossPortMaxNum.setDescription('The max number of ports in the this EtherChannel.')
nbsEthChnPossList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossList.setStatus('mandatory')
if mibBuilder.loadTexts: nbsEthChnPossList.setDescription('Bitmap of ports that are possible for each Ethernet Channel. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying ports 9 through 16, etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. Thus, each port of the switch is represented by a single bit within the value of this object. If that bit has a value of <1> then that port is included in the set of ports. The port is not included if its bit has a value of <0>.')
mibBuilder.exportSymbols("ECHN-MIB", nbSwitchG1=nbSwitchG1, nbsEthChnPossIndex=nbsEthChnPossIndex, nbsEthChnMaxNum=nbsEthChnMaxNum, nbsEthChnPermNum=nbsEthChnPermNum, nbsEthChnPossList=nbsEthChnPossList, nbsEthChnPoss=nbsEthChnPoss, nbsEthChnPossPortMaxNum=nbsEthChnPossPortMaxNum, nbsEthChnPermIndex=nbsEthChnPermIndex, nbsEthChnRunTable=nbsEthChnRunTable, nbsEthChnPermTable=nbsEthChnPermTable, nbsEthChnPermList=nbsEthChnPermList, nbase=nbase, nbsEthChnRunIndex=nbsEthChnRunIndex, nbsEthChnRun=nbsEthChnRun, nbsEthChnPermStatus=nbsEthChnPermStatus, nbsEthChnRunLinkList=nbsEthChnRunLinkList, nbsEthChnRunEntry=nbsEthChnRunEntry, nbsEthChnEnable=nbsEthChnEnable, nbsEthChn=nbsEthChn, nbsEthChnPossRunStatus=nbsEthChnPossRunStatus, nbsEthChnPossNum=nbsEthChnPossNum, nbSwitchG1Il=nbSwitchG1Il, nbsEthChnPossTable=nbsEthChnPossTable, nbsEthChnRunStatus=nbsEthChnRunStatus, nbsEthChnRunList=nbsEthChnRunList, nbsEthChnPerm=nbsEthChnPerm, nbsEthChnPermEntry=nbsEthChnPermEntry, nbsEthChnPossPermStatus=nbsEthChnPossPermStatus, nbsEthChnRunNum=nbsEthChnRunNum, nbsEthChnPossEntry=nbsEthChnPossEntry)
