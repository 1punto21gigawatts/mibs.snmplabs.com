#
# PySNMP MIB module HUAWEI-VGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VGMP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter32, NotificationType, IpAddress, MibIdentifier, Integer32, Gauge32, Unsigned32, ObjectIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter32", "NotificationType", "IpAddress", "MibIdentifier", "Integer32", "Gauge32", "Unsigned32", "ObjectIdentity", "Counter64", "TimeTicks")
TextualConvention, TimeStamp, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString", "RowStatus")
hwVgmpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122))
hwVgmpMib.setRevisions(('2007-01-11 21:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwVgmpMib.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hwVgmpMib.setLastUpdated('200701112100Z')
if mibBuilder.loadTexts: hwVgmpMib.setOrganization('Huawei Technologies co., Ltd.')
if mibBuilder.loadTexts: hwVgmpMib.setContactInfo(' R&D Nanjing, Huawei Technologies co.,Ltd. Huihong Bld.,NO.91 Baixia Rd., Bai-Xia District Nanjing P.R. China Zip:210001 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwVgmpMib.setDescription('This mib is used for VGMP.')
vgmpGlobalCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 0))
hwVgmpTrapSnmpCtrl = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 0, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVgmpTrapSnmpCtrl.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrapSnmpCtrl.setDescription('A switch decides whether the system sends trap info or not.')
hwVgmpStrictCheck = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 0, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVgmpStrictCheck.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStrictCheck.setDescription('A switch decides whether the system carries out strict check or not.')
vgmpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 1))
hwVgmpOtherStateToMaster = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 1, 1)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgState"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgNextState"))
if mibBuilder.loadTexts: hwVgmpOtherStateToMaster.setStatus('current')
if mibBuilder.loadTexts: hwVgmpOtherStateToMaster.setDescription('The status of the vrrp-group turns to master.')
hwVgmpMasterToOtherState = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 1, 2)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgState"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgNextState"))
if mibBuilder.loadTexts: hwVgmpMasterToOtherState.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMasterToOtherState.setDescription('The status of the vrrp-group changes from master to other state.')
vgmpOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2))
vgmpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3))
vgmpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4))
hwVgmpGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1), )
if mibBuilder.loadTexts: hwVgmpGroupCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgTable.setDescription('The vrrp-group configuration table. ')
hwVgmpGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VGMP-MIB", "hwVgmpGroupCfgID"))
if mibBuilder.loadTexts: hwVgmpGroupCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgEntry.setDescription('An entry in the vrrp-group configuration table.')
hwVgmpGroupCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwVgmpGroupCfgID.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgID.setDescription('The vrrp-group ID.')
hwVgmpGroupCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgEnable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgEnable.setDescription('Whether to enable vrrp-group or not.')
hwVgmpGroupCfgPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgPri.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgPri.setDescription("The priority of the vrrp-group. This attribute cannot be configured if attribute 'hwVgmpGroupCfgUseVrrpPri' is set to 'enable'.")
hwVgmpGroupCfgUseVrrpPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgUseVrrpPri.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgUseVrrpPri.setDescription("Whether using vrrp priority compute vrrp-group priority or not. This attribute is exclusive with attributes 'hwVgmpGroupCfgPri' and 'hwVgmpGroupCfgPriPlusValue', so it is suggested not to configure this attribute together with 'hwVgmpGroupCfgPri' or 'hwVgmpGroupCfgPriPlusValue'. '. ")
hwVgmpGroupCfgPriPlusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgPriPlusValue.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgPriPlusValue.setDescription("The plus priority value after an interface added into a group. This attribute cannot be configured if attribute 'hwVgmpGroupCfgUseVrrpPri' is set to 'enable'.")
hwVgmpGroupCfgPreemptEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgPreemptEnable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgPreemptEnable.setDescription('Whether to enable preempt switch or not.')
hwVgmpGroupCfgPreemptDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milli-seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgPreemptDelayValue.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgPreemptDelayValue.setDescription('The delaying time of vrrp-group enters into new master state.')
hwVgmpGroupCfgHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 60000))).setUnits('milli-seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgHelloInterval.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgHelloInterval.setDescription('The interval for the vrrp-group to send vgmp hello packets.')
hwVgmpGroupCfgSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgSendEnable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgSendEnable.setDescription('Whether to enable vrrp-group group-send or not.')
hwVgmpGroupCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nouse", 1), ("init", 2), ("master", 3), ("slave", 4), ("master2slave", 5), ("slave2master", 6), ("max", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgState.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgState.setDescription('The state of the vrrp-group.')
hwVgmpGroupCfgRunPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgRunPri.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgRunPri.setDescription('The vrrp-group current run priority, it is different from hwVgmpGroupCfgPri. The value calculates according as configured priority attribute.')
hwVgmpGroupCfgCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgCreateTime.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgCreateTime.setDescription('A span of the current time subtract the vrrp-group create time. This attribute is expressed as second.')
hwVgmpGroupCfgLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgLastChangeTime.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgLastChangeTime.setDescription('A span of the current time subtract the vrrp-group last change time. This attribute is expressed as second.')
hwVgmpGroupCfgPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgPeerState.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgPeerState.setDescription('The vrrp-group peer state.')
hwVgmpGroupCfgVrrpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgVrrpNum.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgVrrpNum.setDescription('The vrrp-group member number.')
hwVgmpGroupCfgReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unused", 2))).clone('unused')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgReset.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgReset.setDescription('A reset sign of vrrp-group statistics.')
hwVgmpGroupCfgOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpGroupCfgOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgOperRowStatus.setDescription('The row status variable.')
hwVgmpGroupCfgNextState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nouse", 1), ("init", 2), ("master", 3), ("slave", 4), ("master2slave", 5), ("slave2master", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpGroupCfgNextState.setStatus('current')
if mibBuilder.loadTexts: hwVgmpGroupCfgNextState.setDescription('The next state of vrrp-Group. It provides for trap matching, you can get only unknown state.')
hwVgmpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2), )
if mibBuilder.loadTexts: hwVgmpMemberTable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberTable.setDescription('The vrrp-group member configuration table.')
hwVgmpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1), ).setIndexNames((0, "HUAWEI-VGMP-MIB", "hwVgmpMemberIfIndex"), (0, "HUAWEI-VGMP-MIB", "hwVgmpGroupCfgID"), (0, "HUAWEI-VGMP-MIB", "hwVgmpMemberVRID"))
if mibBuilder.loadTexts: hwVgmpMemberEntry.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberEntry.setDescription('An entry in the vrrp-group member configuration table.')
hwVgmpMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVgmpMemberIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberIfIndex.setDescription('The index of the member table.')
hwVgmpMemberVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwVgmpMemberVRID.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberVRID.setDescription("The vrrp-group member's vitual router id.")
hwVgmpMemberData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpMemberData.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberData.setDescription("It specifies the vrrp-group member's attributes. 'enable' indicates this is the vgmp data channel.")
hwVgmpMemberTran = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpMemberTran.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberTran.setDescription("It identifiers a vrrp-group member's attribute, 'enable' indicates this is the vgmp data transfer-only channel. This attribute cannot be configured if attribute 'hwVgmpMemberData' is set to 'disable'. ")
hwVgmpMemberVrrpOnline = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("peerDown", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpMemberVrrpOnline.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberVrrpOnline.setDescription("The vrrp-group member's peer state.")
hwVgmpMemberOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpMemberOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVgmpMemberOperRowStatus.setDescription('The row status variable.')
hwVgmpTrackBFDTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3), )
if mibBuilder.loadTexts: hwVgmpTrackBFDTable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDTable.setDescription('The vrrp-group tracking BFD session table.')
hwVgmpTrackBFDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3, 1), ).setIndexNames((0, "HUAWEI-VGMP-MIB", "hwVgmpGroupCfgID"), (0, "HUAWEI-VGMP-MIB", "hwVgmpTrackBFDID"))
if mibBuilder.loadTexts: hwVgmpTrackBFDEntry.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDEntry.setDescription('An entry in the vrrp-group tracking BFD session table.')
hwVgmpTrackBFDID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: hwVgmpTrackBFDID.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDID.setDescription('The session id of vrrp-group tracking BFD.')
hwVgmpTrackBFDReduceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpTrackBFDReduceValue.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDReduceValue.setDescription("The value which the system will subtract from priority, when a bfd session is down. You can't set zero.")
hwVgmpTrackBFDPreeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpTrackBFDPreeEnable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDPreeEnable.setDescription('Whether to enable track BFD slave preempt.')
hwVgmpTrackBFDOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVgmpTrackBFDOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVgmpTrackBFDOperRowStatus.setDescription('The row status variable.')
hwVgmpStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1), )
if mibBuilder.loadTexts: hwVgmpStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticTable.setDescription('The packets statistic information table.')
hwVgmpStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1), ).setIndexNames((0, "HUAWEI-VGMP-MIB", "hwVgmpGroupCfgID"))
if mibBuilder.loadTexts: hwVgmpStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticEntry.setDescription('An entry in the packets statistic information table.')
hwVgmpStatisticCheckFailDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticCheckFailDropNum.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticCheckFailDropNum.setDescription('The number of dropped packets due to check failure.')
hwVgmpStatisticDisableDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticDisableDropNum.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticDisableDropNum.setDescription('The number of dropped packets because the vrrp-group is disabled.')
hwVgmpStatisticModeTypeErrDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticModeTypeErrDropNum.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticModeTypeErrDropNum.setDescription('The number of dropped packets because the vrrp-group mode or type is wrong.')
hwVgmpStatisticAccHelloREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccHelloREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccHelloREQ.setDescription('The number of hello REQ packets received by the vrrp-group.')
hwVgmpStatisticSendHelloREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendHelloREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendHelloREQ.setDescription('The number of hello REQ packets sent by the vrrp-group.')
hwVgmpStatisticAccHelloACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccHelloACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccHelloACK.setDescription('The number of hello ACK packets received by the vrrp-group.')
hwVgmpStatisticSendHelloACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendHelloACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendHelloACK.setDescription('The vrrp-group sending hello ACK packets num.')
hwVgmpStatisticAccMasterToSlaveREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveREQ.setDescription('The number of MasterToSlave REQ packets received by the vrrp-group.')
hwVgmpStatisticSendMasterToSlaveREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveREQ.setDescription('The number of MasterToSlave REQ packets sent by the vrrp-group.')
hwVgmpStatisticAccMasterToSlaveACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveACK.setDescription('The number of MasterToSlave ACK packets received by the vrrp-group.')
hwVgmpStatisticSendMasterToSlaveACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveACK.setDescription('The number of MasterToSlave ACK packets sent by the vrrp-group.')
hwVgmpStatisticAccMasterToSlaveNACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveNACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccMasterToSlaveNACK.setDescription('The number of MasterToSlave NACK packets received by the vrrp-group.')
hwVgmpStatisticSendMasterToSlaveNACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveNACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendMasterToSlaveNACK.setDescription('The number of MasterToSlave NACK packets sent by the vrrp-group.')
hwVgmpStatisticAccSlaveToMasterREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterREQ.setDescription('The number of SlaveToMaster REQ packets received by the vrrp-group.')
hwVgmpStatisticSendSlaveToMasterREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterREQ.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterREQ.setDescription('The number of SlaveToMaster REQ packets sent by the vrrp-group.')
hwVgmpStatisticAccSlaveToMasterACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterACK.setDescription('The number of SlaveToMaster ACK packets received by the vrrp-group.')
hwVgmpStatisticSendSlaveToMasterACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterACK.setDescription('The number of SlaveToMaster ACK packets sent by the vrrp-group.')
hwVgmpStatisticAccSlaveToMasterNACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterNACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticAccSlaveToMasterNACK.setDescription('The number of SlaveToMaster NACK packets received by the vrrp-group.')
hwVgmpStatisticSendSlaveToMasterNACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 3, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterNACK.setStatus('current')
if mibBuilder.loadTexts: hwVgmpStatisticSendSlaveToMasterNACK.setDescription('The number of SlaveToMaster NACK packets sent by the vrrp-group.')
hwVGMPMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1))
hwVGMPMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1))
hwVGMPGroAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 1)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgEnable"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgPri"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgUseVrrpPri"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgPriPlusValue"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgPreemptEnable"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgPreemptDelayValue"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgHelloInterval"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgSendEnable"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgState"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgRunPri"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgCreateTime"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgLastChangeTime"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgPeerState"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgVrrpNum"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgReset"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgOperRowStatus"), ("HUAWEI-VGMP-MIB", "hwVgmpGroupCfgNextState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPGroAttrGroup = hwVGMPGroAttrGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPGroAttrGroup.setDescription(' Attributes of the vrrp-group configuration.')
hwVGMPMenAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 2)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpMemberData"), ("HUAWEI-VGMP-MIB", "hwVgmpMemberTran"), ("HUAWEI-VGMP-MIB", "hwVgmpMemberVrrpOnline"), ("HUAWEI-VGMP-MIB", "hwVgmpMemberOperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPMenAttrGroup = hwVGMPMenAttrGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPMenAttrGroup.setDescription("The vrrp-group member table's atributes.")
hwVGMPBFDSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 3)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpTrackBFDReduceValue"), ("HUAWEI-VGMP-MIB", "hwVgmpTrackBFDPreeEnable"), ("HUAWEI-VGMP-MIB", "hwVgmpTrackBFDOperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPBFDSessionGroup = hwVGMPBFDSessionGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPBFDSessionGroup.setDescription("The vrrp-group tracking BFD table's atributes.")
hwVGMPStaticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 4)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpStatisticCheckFailDropNum"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticDisableDropNum"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticModeTypeErrDropNum"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccHelloREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendHelloREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccHelloACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendHelloACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccMasterToSlaveREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendMasterToSlaveREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccMasterToSlaveACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendMasterToSlaveACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccMasterToSlaveNACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendMasterToSlaveNACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccSlaveToMasterREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendSlaveToMasterREQ"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccSlaveToMasterACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendSlaveToMasterACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticAccSlaveToMasterNACK"), ("HUAWEI-VGMP-MIB", "hwVgmpStatisticSendSlaveToMasterNACK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPStaticGroup = hwVGMPStaticGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPStaticGroup.setDescription("The vrrp-group packet's statistic info.")
hwVGMPGlobalsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 5)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpTrapSnmpCtrl"), ("HUAWEI-VGMP-MIB", "hwVgmpStrictCheck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPGlobalsGroup = hwVGMPGlobalsGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPGlobalsGroup.setDescription('The vrrp-group global group.')
hwVGMPNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 122, 4, 1, 1, 6)).setObjects(("HUAWEI-VGMP-MIB", "hwVgmpOtherStateToMaster"), ("HUAWEI-VGMP-MIB", "hwVgmpMasterToOtherState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVGMPNotificationGroup = hwVGMPNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwVGMPNotificationGroup.setDescription('The vrrp-group notification group.')
mibBuilder.exportSymbols("HUAWEI-VGMP-MIB", hwVgmpGroupCfgEntry=hwVgmpGroupCfgEntry, hwVgmpGroupCfgSendEnable=hwVgmpGroupCfgSendEnable, hwVgmpGroupCfgState=hwVgmpGroupCfgState, hwVgmpGroupCfgHelloInterval=hwVgmpGroupCfgHelloInterval, hwVgmpMemberOperRowStatus=hwVgmpMemberOperRowStatus, hwVgmpStatisticCheckFailDropNum=hwVgmpStatisticCheckFailDropNum, hwVgmpMasterToOtherState=hwVgmpMasterToOtherState, hwVGMPMenAttrGroup=hwVGMPMenAttrGroup, hwVgmpMemberTable=hwVgmpMemberTable, hwVgmpGroupCfgCreateTime=hwVgmpGroupCfgCreateTime, hwVgmpGroupCfgPeerState=hwVgmpGroupCfgPeerState, hwVgmpMemberData=hwVgmpMemberData, hwVgmpMemberTran=hwVgmpMemberTran, vgmpGlobalCtrl=vgmpGlobalCtrl, hwVgmpTrackBFDEntry=hwVgmpTrackBFDEntry, hwVgmpMemberVRID=hwVgmpMemberVRID, hwVgmpStatisticSendMasterToSlaveNACK=hwVgmpStatisticSendMasterToSlaveNACK, hwVgmpGroupCfgRunPri=hwVgmpGroupCfgRunPri, hwVgmpOtherStateToMaster=hwVgmpOtherStateToMaster, hwVgmpGroupCfgPreemptDelayValue=hwVgmpGroupCfgPreemptDelayValue, hwVgmpStatisticAccHelloREQ=hwVgmpStatisticAccHelloREQ, hwVgmpGroupCfgLastChangeTime=hwVgmpGroupCfgLastChangeTime, hwVgmpGroupCfgTable=hwVgmpGroupCfgTable, hwVgmpStatisticTable=hwVgmpStatisticTable, hwVGMPNotificationGroup=hwVGMPNotificationGroup, hwVgmpStatisticSendHelloREQ=hwVgmpStatisticSendHelloREQ, hwVgmpTrackBFDID=hwVgmpTrackBFDID, hwVGMPMIBCompliances=hwVGMPMIBCompliances, hwVgmpStatisticAccMasterToSlaveACK=hwVgmpStatisticAccMasterToSlaveACK, vgmpStatistics=vgmpStatistics, hwVgmpMemberVrrpOnline=hwVgmpMemberVrrpOnline, hwVgmpGroupCfgPreemptEnable=hwVgmpGroupCfgPreemptEnable, hwVgmpStatisticSendMasterToSlaveACK=hwVgmpStatisticSendMasterToSlaveACK, hwVgmpStatisticAccSlaveToMasterACK=hwVgmpStatisticAccSlaveToMasterACK, hwVgmpTrackBFDReduceValue=hwVgmpTrackBFDReduceValue, hwVgmpStatisticSendSlaveToMasterACK=hwVgmpStatisticSendSlaveToMasterACK, hwVgmpGroupCfgID=hwVgmpGroupCfgID, hwVgmpGroupCfgNextState=hwVgmpGroupCfgNextState, hwVgmpGroupCfgUseVrrpPri=hwVgmpGroupCfgUseVrrpPri, hwVgmpMemberEntry=hwVgmpMemberEntry, hwVgmpTrackBFDPreeEnable=hwVgmpTrackBFDPreeEnable, hwVgmpStatisticSendHelloACK=hwVgmpStatisticSendHelloACK, hwVgmpTrapSnmpCtrl=hwVgmpTrapSnmpCtrl, hwVGMPGroAttrGroup=hwVGMPGroAttrGroup, hwVGMPBFDSessionGroup=hwVGMPBFDSessionGroup, hwVgmpStatisticEntry=hwVgmpStatisticEntry, hwVgmpGroupCfgOperRowStatus=hwVgmpGroupCfgOperRowStatus, hwVgmpStatisticAccHelloACK=hwVgmpStatisticAccHelloACK, hwVgmpStatisticDisableDropNum=hwVgmpStatisticDisableDropNum, vgmpConformance=vgmpConformance, hwVgmpStatisticAccSlaveToMasterREQ=hwVgmpStatisticAccSlaveToMasterREQ, hwVgmpStatisticAccSlaveToMasterNACK=hwVgmpStatisticAccSlaveToMasterNACK, hwVgmpTrackBFDOperRowStatus=hwVgmpTrackBFDOperRowStatus, hwVGMPGlobalsGroup=hwVGMPGlobalsGroup, hwVgmpGroupCfgVrrpNum=hwVgmpGroupCfgVrrpNum, hwVgmpMemberIfIndex=hwVgmpMemberIfIndex, hwVgmpStatisticAccMasterToSlaveNACK=hwVgmpStatisticAccMasterToSlaveNACK, hwVgmpStatisticSendSlaveToMasterREQ=hwVgmpStatisticSendSlaveToMasterREQ, hwVgmpStatisticModeTypeErrDropNum=hwVgmpStatisticModeTypeErrDropNum, hwVgmpStatisticSendSlaveToMasterNACK=hwVgmpStatisticSendSlaveToMasterNACK, hwVgmpGroupCfgEnable=hwVgmpGroupCfgEnable, hwVgmpGroupCfgPriPlusValue=hwVgmpGroupCfgPriPlusValue, hwVGMPStaticGroup=hwVGMPStaticGroup, hwVgmpGroupCfgReset=hwVgmpGroupCfgReset, hwVgmpTrackBFDTable=hwVgmpTrackBFDTable, hwVgmpMib=hwVgmpMib, vgmpNotifications=vgmpNotifications, hwVGMPMIBGroups=hwVGMPMIBGroups, hwVgmpStrictCheck=hwVgmpStrictCheck, hwVgmpGroupCfgPri=hwVgmpGroupCfgPri, vgmpOperations=vgmpOperations, hwVgmpStatisticSendMasterToSlaveREQ=hwVgmpStatisticSendMasterToSlaveREQ, PYSNMP_MODULE_ID=hwVgmpMib, hwVgmpStatisticAccMasterToSlaveREQ=hwVgmpStatisticAccMasterToSlaveREQ)
