#
# PySNMP MIB module ZYXEL-MRSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-MRSTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
BridgeId, dot1dBasePort, Timeout = mibBuilder.importSymbols("BRIDGE-MIB", "BridgeId", "dot1dBasePort", "Timeout")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Bits, Counter64, Gauge32, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, ModuleIdentity, NotificationType, Counter32, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Counter64", "Gauge32", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "ModuleIdentity", "NotificationType", "Counter32", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelMrstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52))
if mibBuilder.loadTexts: zyxelMrstp.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelMrstp.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelMrstp.setContactInfo('')
if mibBuilder.loadTexts: zyxelMrstp.setDescription('The subtree for Multiple Rapid Spanning Tree Protocol (MRSTP)')
zyxelMrstpSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1))
zyxelMrstpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2))
zyxelMrstpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 3))
zyxelMrstpBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1), )
if mibBuilder.loadTexts: zyxelMrstpBridgeTable.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpBridgeTable.setDescription('The table contains MRSTP bridge configuration.')
zyxelMrstpBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1), ).setIndexNames((0, "ZYXEL-MRSTP-MIB", "zyMrstpBridgeIndex"))
if mibBuilder.loadTexts: zyxelMrstpBridgeEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpBridgeEntry.setDescription('An entry contains MRSTP bridge configuration.')
zyMrstpBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyMrstpBridgeIndex.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeIndex.setDescription('The tree index of the MRSTP.')
zyMrstpBridgeState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeState.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeState.setDescription('Enable/Disable on the mrstp bridge.')
zyMrstpBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgePriority.setReference('IEEE 802.1D-1990: Section 4.5.3.7')
if mibBuilder.loadTexts: zyMrstpBridgePriority.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgePriority.setDescription('The value of the write-able portion of the Bridge ID, i.e., the first two octets of the (8 octet long) Bridge ID. The other (last) 6 octets of the Bridge ID are given by the value of dot1dBaseBridgeAddress.')
zyMrstpBridgeRootMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 4), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeRootMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.8')
if mibBuilder.loadTexts: zyMrstpBridgeRootMaxAge.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeRootMaxAge.setDescription('The value that all bridges use for MaxAge when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of zyxelMrstpBridgeHelloTime. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyMrstpBridgeRootHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 5), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeRootHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.9')
if mibBuilder.loadTexts: zyMrstpBridgeRootHelloTime.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeRootHelloTime.setDescription('The value that all bridges use for HelloTime when this bridge is acting as the root. The granularity of this timer is specified by 802.1D- 1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyMrstpBridgeRootForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 1, 1, 6), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeRootForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.10')
if mibBuilder.loadTexts: zyMrstpBridgeRootForwardDelay.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeRootForwardDelay.setDescription('The value that all bridges use for ForwardDelay when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of mrstpBridgeMaxAge. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyxelMrstpPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2), )
if mibBuilder.loadTexts: zyxelMrstpPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpPortTable.setDescription('The table contains MRSTP port configuration.')
zyxelMrstpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMrstpPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpPortEntry.setDescription('An entry contains MRSTP port configuration.')
zyMrstpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpPortPriority.setReference('IEEE 802.1D-1990: Section 4.5.5.1')
if mibBuilder.loadTexts: zyMrstpPortPriority.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortPriority.setDescription('The value of the priority field which is contained in the first (in network byte order) octet of the (2 octet long) Port ID. The other octet of the Port ID is given by the value of mrstpPort.')
zyMrstpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpPortEnable.setReference('IEEE 802.1D-1990: Section 4.5.5.2')
if mibBuilder.loadTexts: zyMrstpPortEnable.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortEnable.setDescription('Enable/Disable the MRSTP on the port.')
zyMrstpPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpPortPathCost.setReference('IEEE 802.1D-1990: Section 4.5.5.3')
if mibBuilder.loadTexts: zyMrstpPortPathCost.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortPathCost.setDescription('The contribution of this port to the path cost of paths towards the spanning tree root which include this port. 802.1D-1990 recommends that the default value of this parameter be in inverse proportion to the speed of the attached LAN.')
zyMrstpPortOnBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpPortOnBridgeIndex.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortOnBridgeIndex.setDescription('Indetify the bridge index that this port joined to in MRSTP.')
zyMrstpPortAdminEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpPortAdminEdgePort.setReference('IEEE 802.1t clause 14.8.2, 18.3.3')
if mibBuilder.loadTexts: zyMrstpPortAdminEdgePort.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortAdminEdgePort.setDescription('The administrative value of the Edge Port parameter. A value of true(1) indicates that this port should be assumed as an edge-port, and a value of false(2) indicates that this port should be assumed as a non-edge-port.')
zyxelMrstpBridgeInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1), )
if mibBuilder.loadTexts: zyxelMrstpBridgeInfoTable.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpBridgeInfoTable.setDescription('The table contains MRSTP bridge information.')
zyxelMrstpBridgeInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1), ).setIndexNames((0, "ZYXEL-MRSTP-MIB", "zyMrstpBridgeInfoIndex"))
if mibBuilder.loadTexts: zyxelMrstpBridgeInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpBridgeInfoEntry.setDescription('An entry contains MRSTP bridge information.')
zyMrstpBridgeInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyMrstpBridgeInfoIndex.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoIndex.setDescription('The tree index of the MRSTP.')
zyMrstpBridgeInfoProtocolSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("decLb100", 2), ("ieee8021d", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoProtocolSpecification.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoProtocolSpecification.setDescription("An indication of what version of the Spanning Tree Protocol is being run. The value 'decLb100(2)' indicates the DEC LANbridge 100 Spanning Tree protocol. IEEE 802.1d implementations will return 'ieee8021d(3)'. If future versions of the IEEE Spanning Tree Protocol are released that are incompatible with the current version a new value will be defined.")
zyMrstpBridgeInfoTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoTimeSinceTopologyChange.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: zyMrstpBridgeInfoTimeSinceTopologyChange.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoTimeSinceTopologyChange.setDescription('The time (in hundredths of a second) since the last time a topology change was detected by the bridge entity.')
zyMrstpBridgeInfoTopologyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoTopologyChanges.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: zyMrstpBridgeInfoTopologyChanges.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoTopologyChanges.setDescription('The total number of topology changes detected by this bridge since the management entity was last reset or initialized.')
zyMrstpBridgeInfoDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoDesignatedRoot.setReference('IEEE 802.1D-1990: Section 4.5.3.1')
if mibBuilder.loadTexts: zyMrstpBridgeInfoDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoDesignatedRoot.setDescription('The bridge identifier of the root of the spanning tree as determined by the Spanning Tree Protocol as executed by this node. This value is used as the Root Identifier parameter in all Configuration Bridge PDUs originated by this node.')
zyMrstpBridgeInfoRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootCost.setReference('IEEE 802.1D-1990: Section 4.5.3.2')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootCost.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootCost.setDescription('The cost of the path to the root as seen from this bridge.')
zyMrstpBridgeInfoRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootPort.setReference('IEEE 802.1D-1990: Section 4.5.3.3')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootPort.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootPort.setDescription('The port number of the port which offers the lowest cost path from this bridge to the root bridge.')
zyMrstpBridgeInfoMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 8), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.4')
if mibBuilder.loadTexts: zyMrstpBridgeInfoMaxAge.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoMaxAge.setDescription('The maximum age of Spanning Tree Protocol information learned from the network on any port before it is discarded, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
zyMrstpBridgeInfoHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 9), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.5')
if mibBuilder.loadTexts: zyMrstpBridgeInfoHelloTime.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoHelloTime.setDescription('The amount of time between the transmission of Configuration bridge PDUs by this node on any port when it is the root of the spanning tree or trying to become so, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
zyMrstpBridgeInfoHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoHoldTime.setReference('IEEE 802.1D-1990: Section 4.5.3.14')
if mibBuilder.loadTexts: zyMrstpBridgeInfoHoldTime.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoHoldTime.setDescription('This time value determines the interval length during which no more than two Configuration bridge PDUs shall be transmitted by this node, in units of hundredths of a second.')
zyMrstpBridgeInfoForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 11), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpBridgeInfoForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.6')
if mibBuilder.loadTexts: zyMrstpBridgeInfoForwardDelay.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoForwardDelay.setDescription('This time value, measured in units of hundredths of a second, controls how fast a port changes its spanning state when moving towards the Forwarding state. The value determines how long the port stays in each of the Listening and Learning states, which precede the Forwarding state. This value is also used, when a topology change has been detected and is underway, to age all dynamic entries in the Forwarding Database. [Note that this value is the one that this bridge i currently using, in contrast to zyxelMrstpBridgeInfoForwardDelay which is the value that this bridge and all others would start using if/when this bridge were to become the root.')
zyMrstpBridgeInfoRootMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 12), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.8')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootMaxAge.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootMaxAge.setDescription('The value that all bridges use for MaxAge when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of zyxelMrstpBridgeInfoHelloTime. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyMrstpBridgeInfoRootHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 13), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.9')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootHelloTime.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootHelloTime.setDescription('The value that all bridges use for HelloTime when this bridge is acting as the root. The granularity of this timer is specified by 802.1D- 1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyMrstpBridgeInfoRootForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 1, 1, 14), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.10')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootForwardDelay.setStatus('current')
if mibBuilder.loadTexts: zyMrstpBridgeInfoRootForwardDelay.setDescription('The value that all bridges use for ForwardDelay when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of MrstpBridgeInfoMaxAge. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
zyxelMrstpPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2), )
if mibBuilder.loadTexts: zyxelMrstpPortInfoTable.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpPortInfoTable.setDescription('The table contains MRSTP port information.')
zyxelMrstpPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMrstpPortInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelMrstpPortInfoEntry.setDescription('An entry contains MRSTP port information.')
zyMrstpPortInfoState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoState.setReference('IEEE 802.1D-1990: Section 4.5.5.2')
if mibBuilder.loadTexts: zyMrstpPortInfoState.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoState.setDescription("The port's current state as defined by application of the Spanning Tree Protocol. This state controls what action a port takes on reception of a frame. If the bridge has detected a port that is malfunctioning it will place that port into the broken(6) state. For ports which are disabled (see MrstpPortInfoEnable), this object will have a value of disabled(1).")
zyMrstpPortInfoDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedRoot.setReference('IEEE 802.1D-1990: Section 4.5.5.4')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedRoot.setDescription('The unique Bridge Identifier of the Bridge recorded as the Root in the Configuration BPDUs transmitted by the Designated Bridge for the segment to which the port is attached.')
zyMrstpPortInfoDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedCost.setReference('IEEE 802.1D-1990: Section 4.5.5.5')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedCost.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedCost.setDescription('The path cost of the Designated Port of the segment connected to this port. This value is compared to the Root Path Cost field in received bridge PDUs.')
zyMrstpPortInfoDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedBridge.setReference('IEEE 802.1D-1990: Section 4.5.5.6')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedBridge.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedBridge.setDescription("The Bridge Identifier of the bridge which this port considers to be the Designated Bridge for this port's segment.")
zyMrstpPortInfoDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedPort.setReference('IEEE 802.1D-1990: Section 4.5.5.7')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedPort.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoDesignatedPort.setDescription("The Port Identifier of the port on the Designated Bridge for this port's segment.")
zyMrstpPortInfoForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoForwardTransitions.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoForwardTransitions.setDescription('The number of times this port has transitioned from the Learning state to the Forwarding state.')
zyMrstpPortInfoOperEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMrstpPortInfoOperEdgePort.setReference('IEEE 802.1t clause 14.8.2, 18.3.4')
if mibBuilder.loadTexts: zyMrstpPortInfoOperEdgePort.setStatus('current')
if mibBuilder.loadTexts: zyMrstpPortInfoOperEdgePort.setDescription('The operational value of the Edge Port parameter. The object is initialized to the value of the corresponding instance of dot1dStpPortAdminEdgePort. When the corresponding instance of dot1dStpPortAdminEdgePort is set, this object will be changed as well. This object will also be changed to false on reception of a BPDU.')
zyMrstpNewRoot = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 3, 1)).setObjects(("ZYXEL-MRSTP-MIB", "zyMrstpBridgeIndex"))
if mibBuilder.loadTexts: zyMrstpNewRoot.setStatus('current')
if mibBuilder.loadTexts: zyMrstpNewRoot.setDescription('The newRoot trap indicates that the sending agent has become the new root of the Spanning Tree; the trap is sent by a bridge soon after its election as the new root, e.g., upon expiration of the Topology Change Timer, immediately subsequent to its election. Implementation of this trap is optional.')
zyMrstpTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 52, 3, 2)).setObjects(("ZYXEL-MRSTP-MIB", "zyMrstpBridgeIndex"))
if mibBuilder.loadTexts: zyMrstpTopologyChange.setStatus('current')
if mibBuilder.loadTexts: zyMrstpTopologyChange.setDescription('A topologyChange is sent if the topology changed of MRSTP has detected.')
mibBuilder.exportSymbols("ZYXEL-MRSTP-MIB", zyMrstpBridgeInfoMaxAge=zyMrstpBridgeInfoMaxAge, zyxelMrstpBridgeTable=zyxelMrstpBridgeTable, zyMrstpBridgeInfoTimeSinceTopologyChange=zyMrstpBridgeInfoTimeSinceTopologyChange, zyMrstpPortInfoForwardTransitions=zyMrstpPortInfoForwardTransitions, zyxelMrstpBridgeInfoTable=zyxelMrstpBridgeInfoTable, zyxelMrstpStatus=zyxelMrstpStatus, zyMrstpPortAdminEdgePort=zyMrstpPortAdminEdgePort, zyxelMrstpPortTable=zyxelMrstpPortTable, zyMrstpNewRoot=zyMrstpNewRoot, zyMrstpPortInfoDesignatedBridge=zyMrstpPortInfoDesignatedBridge, zyMrstpBridgeInfoTopologyChanges=zyMrstpBridgeInfoTopologyChanges, zyMrstpPortPriority=zyMrstpPortPriority, zyMrstpBridgeInfoForwardDelay=zyMrstpBridgeInfoForwardDelay, zyxelMrstpSetup=zyxelMrstpSetup, zyMrstpBridgeInfoRootPort=zyMrstpBridgeInfoRootPort, zyMrstpBridgeInfoDesignatedRoot=zyMrstpBridgeInfoDesignatedRoot, zyMrstpBridgeInfoIndex=zyMrstpBridgeInfoIndex, zyxelMrstpBridgeInfoEntry=zyxelMrstpBridgeInfoEntry, zyMrstpBridgeInfoRootHelloTime=zyMrstpBridgeInfoRootHelloTime, zyMrstpPortInfoOperEdgePort=zyMrstpPortInfoOperEdgePort, zyMrstpPortInfoDesignatedPort=zyMrstpPortInfoDesignatedPort, zyMrstpBridgeInfoProtocolSpecification=zyMrstpBridgeInfoProtocolSpecification, zyxelMrstpNotifications=zyxelMrstpNotifications, PYSNMP_MODULE_ID=zyxelMrstp, zyMrstpTopologyChange=zyMrstpTopologyChange, zyMrstpBridgeRootForwardDelay=zyMrstpBridgeRootForwardDelay, zyMrstpPortInfoState=zyMrstpPortInfoState, zyMrstpPortInfoDesignatedCost=zyMrstpPortInfoDesignatedCost, zyMrstpPortEnable=zyMrstpPortEnable, zyxelMrstpPortEntry=zyxelMrstpPortEntry, zyMrstpBridgeIndex=zyMrstpBridgeIndex, zyMrstpBridgeState=zyMrstpBridgeState, zyxelMrstp=zyxelMrstp, zyMrstpBridgeInfoRootMaxAge=zyMrstpBridgeInfoRootMaxAge, zyMrstpBridgePriority=zyMrstpBridgePriority, zyMrstpBridgeInfoHoldTime=zyMrstpBridgeInfoHoldTime, zyxelMrstpBridgeEntry=zyxelMrstpBridgeEntry, zyMrstpBridgeInfoHelloTime=zyMrstpBridgeInfoHelloTime, zyMrstpPortInfoDesignatedRoot=zyMrstpPortInfoDesignatedRoot, zyxelMrstpPortInfoEntry=zyxelMrstpPortInfoEntry, zyMrstpBridgeRootMaxAge=zyMrstpBridgeRootMaxAge, zyMrstpPortOnBridgeIndex=zyMrstpPortOnBridgeIndex, zyMrstpBridgeInfoRootCost=zyMrstpBridgeInfoRootCost, zyxelMrstpPortInfoTable=zyxelMrstpPortInfoTable, zyMrstpPortPathCost=zyMrstpPortPathCost, zyMrstpBridgeRootHelloTime=zyMrstpBridgeRootHelloTime, zyMrstpBridgeInfoRootForwardDelay=zyMrstpBridgeInfoRootForwardDelay)
