#
# PySNMP MIB module BAS-EVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAS-EVENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:33:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
basExtEvent, = mibBuilder.importSymbols("BAS-MIB", "basExtEvent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, Counter64, NotificationType, Unsigned32, iso, IpAddress, MibIdentifier, Integer32, ModuleIdentity, Bits, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "Counter64", "NotificationType", "Unsigned32", "iso", "IpAddress", "MibIdentifier", "Integer32", "ModuleIdentity", "Bits", "Gauge32", "ObjectIdentity")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
basEventMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1))
if mibBuilder.loadTexts: basEventMib.setLastUpdated('9811171430Z')
if mibBuilder.loadTexts: basEventMib.setOrganization('Broadband Access Systems, Inc.')
if mibBuilder.loadTexts: basEventMib.setContactInfo(' Tech Support Broadband Access Systems, Inc. 201 Forest Street Marlborough, MA 01752 USA 508-485-8200 support@basystems.com')
if mibBuilder.loadTexts: basEventMib.setDescription('The MIB module defines the event MIB objects for Broadband Access Systems, Inc. interfaces extensions.')
basEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1))
basTrapRecipientTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1), )
if mibBuilder.loadTexts: basTrapRecipientTable.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientTable.setDescription('A list of trap recipient entries. The number of entries is given by the value of trapRecipientNumber.')
basTrapRecipientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1), ).setIndexNames((0, "BAS-EVENT-MIB", "basTrapRecipientIndex"))
if mibBuilder.loadTexts: basTrapRecipientEntry.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientEntry.setDescription('An entry containing management information applicable to a particular recipient.')
basTrapRecipientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: basTrapRecipientIndex.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientIndex.setDescription('This object indicates an entry into the Trap Recipient Table. If no entries are present, this object must be zero')
basTrapRecipientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapRecipientIpAddr.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientIpAddr.setDescription("The Recipient's IP address.")
basTrapRecipientUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapRecipientUdpPort.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientUdpPort.setDescription("The Recipient's UDP port.")
basTrapRecipientCommName = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapRecipientCommName.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientCommName.setDescription("The Recipient's community name.")
basTrapRecipientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapRecipientRowStatus.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientRowStatus.setDescription("This object is used to create and delete rows in the Trap Recipient's table")
basTrapRecipientSnmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapRecipientSnmpVersion.setStatus('current')
if mibBuilder.loadTexts: basTrapRecipientSnmpVersion.setDescription('This object is used to select the SNMP version when sending traps.')
basTrapNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 2), )
if mibBuilder.loadTexts: basTrapNotificationTable.setStatus('current')
if mibBuilder.loadTexts: basTrapNotificationTable.setDescription('A list of trap notification entries. The number of entries is given by the value of TrapRecipientNumber.')
basTrapNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 2, 1), ).setIndexNames((0, "BAS-EVENT-MIB", "basTrapNotificationId"), (0, "BAS-EVENT-MIB", "basTrapNotificationIndex"))
if mibBuilder.loadTexts: basTrapNotificationEntry.setStatus('current')
if mibBuilder.loadTexts: basTrapNotificationEntry.setDescription('An entry containing management information applicable to a particular Trap.')
basTrapNotificationId = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 2, 1, 1), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: basTrapNotificationId.setStatus('current')
if mibBuilder.loadTexts: basTrapNotificationId.setDescription('This object indicates an OID entry into the Trap Notification Table.')
basTrapNotificationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: basTrapNotificationIndex.setStatus('current')
if mibBuilder.loadTexts: basTrapNotificationIndex.setDescription("The Recipient's Trap Notification Index. The value specified by this object must be represented in the Trap Recipient's list")
basTrapNotificationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 8, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basTrapNotificationRowStatus.setStatus('current')
if mibBuilder.loadTexts: basTrapNotificationRowStatus.setDescription('This object is used to create and delete rows in the Trap Notification table.')
mibBuilder.exportSymbols("BAS-EVENT-MIB", basTrapRecipientTable=basTrapRecipientTable, basTrapRecipientSnmpVersion=basTrapRecipientSnmpVersion, basTrapRecipientIndex=basTrapRecipientIndex, basTrapNotificationRowStatus=basTrapNotificationRowStatus, basTrapNotificationTable=basTrapNotificationTable, basEvent=basEvent, basTrapRecipientIpAddr=basTrapRecipientIpAddr, basEventMib=basEventMib, basTrapNotificationId=basTrapNotificationId, basTrapRecipientCommName=basTrapRecipientCommName, basTrapRecipientEntry=basTrapRecipientEntry, basTrapNotificationIndex=basTrapNotificationIndex, basTrapRecipientRowStatus=basTrapRecipientRowStatus, PYSNMP_MODULE_ID=basEventMib, basTrapNotificationEntry=basTrapNotificationEntry, basTrapRecipientUdpPort=basTrapRecipientUdpPort)
