#
# PySNMP MIB module NETSCREEN-IPPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-IPPOOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
netscreenVpnMibModule, netscreenVpn = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpnMibModule", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, IpAddress, MibIdentifier, Counter32, NotificationType, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ModuleIdentity, Unsigned32, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "NotificationType", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ModuleIdentity", "Unsigned32", "iso", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
netscreenIppoolMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 9))
netscreenIppoolMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2000-08-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenIppoolMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'Correct spelling mistake', 'no comment', 'Creation date',))
if mibBuilder.loadTexts: netscreenIppoolMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenIppoolMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenIppoolMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenIppoolMibModule.setDescription('This module defines the object that are used to monitor VPN IP pool')
nsVpnIpPool = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 9))
nsVpnIpPoolTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1), )
if mibBuilder.loadTexts: nsVpnIpPoolTable.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolTable.setDescription('This table collects all ip pool configuration in NetScreen device.')
nsVpnIpPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1), ).setIndexNames((0, "NETSCREEN-IPPOOL-MIB", "nsVpnIpPoolIndex"))
if mibBuilder.loadTexts: nsVpnIpPoolEntry.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolEntry.setDescription('Each entry in the nsVpnIpPoolEntry holds a set of configuration parameters associated with an instance IP pool.')
nsVpnIpPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolIndex.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolIndex.setDescription('A unique value for ip pool. Its value ranges between 0 and 65535 and may not be contiguous.')
nsVpnIpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolName.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolName.setDescription('ip pool name')
nsVpnIpPoolStartIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolStartIp.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolStartIp.setDescription("IP pool's start ip address.")
nsVpnIpPoolEndIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolEndIp.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolEndIp.setDescription("IP pool's end ip address.")
nsVpnIpPoolIpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolIpUsed.setStatus('current')
if mibBuilder.loadTexts: nsVpnIpPoolIpUsed.setDescription('Total number of addresses in use from this pool.')
mibBuilder.exportSymbols("NETSCREEN-IPPOOL-MIB", nsVpnIpPool=nsVpnIpPool, nsVpnIpPoolStartIp=nsVpnIpPoolStartIp, nsVpnIpPoolIpUsed=nsVpnIpPoolIpUsed, nsVpnIpPoolIndex=nsVpnIpPoolIndex, netscreenIppoolMibModule=netscreenIppoolMibModule, nsVpnIpPoolEntry=nsVpnIpPoolEntry, PYSNMP_MODULE_ID=netscreenIppoolMibModule, nsVpnIpPoolEndIp=nsVpnIpPoolEndIp, nsVpnIpPoolName=nsVpnIpPoolName, nsVpnIpPoolTable=nsVpnIpPoolTable)
