#
# PySNMP MIB module CYAN-ODU2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-ODU2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:33:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanOpStateQualTc, CyanLayerRateTc, CyanAdminStateTc, CyanTPConnectionStateTc, CyanOpuPayloadTypeTc, CyanOpStateTc, CyanSecServiceStateTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateQualTc", "CyanLayerRateTc", "CyanAdminStateTc", "CyanTPConnectionStateTc", "CyanOpuPayloadTypeTc", "CyanOpStateTc", "CyanSecServiceStateTc")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, iso, Counter32, Gauge32, Unsigned32, MibIdentifier, ObjectIdentity, NotificationType, IpAddress, Bits, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "iso", "Counter32", "Gauge32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "NotificationType", "IpAddress", "Bits", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyanODU2Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200))
cyanODU2Module.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanODU2Module.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanODU2Module.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanODU2Module.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanODU2Module.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanODU2Module.setDescription('MIB module for ODU-2 Path')
cyanODU2MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1))
cyanODU2Table = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1), )
if mibBuilder.loadTexts: cyanODU2Table.setStatus('current')
if mibBuilder.loadTexts: cyanODU2Table.setDescription('A list of ODU2 entries.')
cyanODU2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1), ).setIndexNames((0, "CYAN-ODU2-MIB", "cyanODU2ShelfId"), (0, "CYAN-ODU2-MIB", "cyanODU2ModuleId"), (0, "CYAN-ODU2-MIB", "cyanODU2ODU2Id"))
if mibBuilder.loadTexts: cyanODU2Entry.setStatus('current')
if mibBuilder.loadTexts: cyanODU2Entry.setDescription('An entry of ODU2.')
cyanODU2ShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanODU2ShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanODU2ShelfId.setDescription('Shelf Id')
cyanODU2ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanODU2ModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanODU2ModuleId.setDescription('Module Id')
cyanODU2ODU2Id = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanODU2ODU2Id.setStatus('current')
if mibBuilder.loadTexts: cyanODU2ODU2Id.setDescription('ODU2 Termination Id')
cyanODU2AcceptedPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 4), CyanOpuPayloadTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2AcceptedPayloadType.setStatus('current')
if mibBuilder.loadTexts: cyanODU2AcceptedPayloadType.setDescription('Received ODTUG Payload Type')
cyanODU2AdaptationType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 5), CyanOpuPayloadTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2AdaptationType.setStatus('current')
if mibBuilder.loadTexts: cyanODU2AdaptationType.setDescription('Adaptation type')
cyanODU2AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 6), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2AdminState.setStatus('current')
if mibBuilder.loadTexts: cyanODU2AdminState.setDescription('Administrative state')
cyanODU2AutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2AutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanODU2AutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanODU2ConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 8), CyanTPConnectionStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2ConnectionState.setStatus('current')
if mibBuilder.loadTexts: cyanODU2ConnectionState.setDescription('Connection state')
cyanODU2OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 9), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2OperState.setStatus('current')
if mibBuilder.loadTexts: cyanODU2OperState.setDescription('Primary Operation State')
cyanODU2OperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 10), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2OperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanODU2OperStateQual.setDescription('Operation state qualifier')
cyanODU2SecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 11), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2SecServState.setStatus('current')
if mibBuilder.loadTexts: cyanODU2SecServState.setDescription('Secondary service state')
cyanODU2SupportedRates = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 1, 1, 1, 12), CyanLayerRateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanODU2SupportedRates.setStatus('current')
if mibBuilder.loadTexts: cyanODU2SupportedRates.setDescription('Supported layer & rate')
cyanODU2ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 20)).setObjects(("CYAN-ODU2-MIB", "cyanODU2AcceptedPayloadType"), ("CYAN-ODU2-MIB", "cyanODU2AdaptationType"), ("CYAN-ODU2-MIB", "cyanODU2AdminState"), ("CYAN-ODU2-MIB", "cyanODU2AutoinserviceSoakTimeSec"), ("CYAN-ODU2-MIB", "cyanODU2ConnectionState"), ("CYAN-ODU2-MIB", "cyanODU2OperState"), ("CYAN-ODU2-MIB", "cyanODU2OperStateQual"), ("CYAN-ODU2-MIB", "cyanODU2SecServState"), ("CYAN-ODU2-MIB", "cyanODU2SupportedRates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanODU2ObjectGroup = cyanODU2ObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanODU2ObjectGroup.setDescription('Group of objects that comes with ODU2 module')
cyanODU2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 200, 30)).setObjects(("CYAN-ODU2-MIB", "cyanODU2ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanODU2Compliance = cyanODU2Compliance.setStatus('current')
if mibBuilder.loadTexts: cyanODU2Compliance.setDescription('The basic info needed to be a cyan ODU2')
mibBuilder.exportSymbols("CYAN-ODU2-MIB", cyanODU2OperState=cyanODU2OperState, cyanODU2Entry=cyanODU2Entry, cyanODU2Table=cyanODU2Table, cyanODU2ConnectionState=cyanODU2ConnectionState, PYSNMP_MODULE_ID=cyanODU2Module, cyanODU2AutoinserviceSoakTimeSec=cyanODU2AutoinserviceSoakTimeSec, cyanODU2AdaptationType=cyanODU2AdaptationType, cyanODU2Module=cyanODU2Module, cyanODU2ObjectGroup=cyanODU2ObjectGroup, cyanODU2AdminState=cyanODU2AdminState, cyanODU2ODU2Id=cyanODU2ODU2Id, cyanODU2ModuleId=cyanODU2ModuleId, cyanODU2MibObjects=cyanODU2MibObjects, cyanODU2AcceptedPayloadType=cyanODU2AcceptedPayloadType, cyanODU2OperStateQual=cyanODU2OperStateQual, cyanODU2ShelfId=cyanODU2ShelfId, cyanODU2SupportedRates=cyanODU2SupportedRates, cyanODU2Compliance=cyanODU2Compliance, cyanODU2SecServState=cyanODU2SecServState)
