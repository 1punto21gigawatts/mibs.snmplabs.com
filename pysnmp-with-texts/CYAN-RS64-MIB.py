#
# PySNMP MIB module CYAN-RS64-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-RS64-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanOpStateQualTc, CyanAdminStateTc, CyanOpStateTc, CyanSecServiceStateTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateQualTc", "CyanAdminStateTc", "CyanOpStateTc", "CyanSecServiceStateTc")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Counter64, iso, MibIdentifier, Gauge32, Unsigned32, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Counter32, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "iso", "MibIdentifier", "Gauge32", "Unsigned32", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Counter32", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyanRS64Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220))
cyanRS64Module.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanRS64Module.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanRS64Module.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanRS64Module.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanRS64Module.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanRS64Module.setDescription('MIB module for OC-192/STM-64 RS layer')
cyanRS64MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1))
cyanRS64Table = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1), )
if mibBuilder.loadTexts: cyanRS64Table.setStatus('current')
if mibBuilder.loadTexts: cyanRS64Table.setDescription('A list of RS64 entries.')
cyanRS64Entry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1), ).setIndexNames((0, "CYAN-RS64-MIB", "cyanRS64ShelfId"), (0, "CYAN-RS64-MIB", "cyanRS64ModuleId"), (0, "CYAN-RS64-MIB", "cyanRS64RS64Id"))
if mibBuilder.loadTexts: cyanRS64Entry.setStatus('current')
if mibBuilder.loadTexts: cyanRS64Entry.setDescription('An entry of RS64.')
cyanRS64ShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanRS64ShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanRS64ShelfId.setDescription('Shelf Id')
cyanRS64ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanRS64ModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanRS64ModuleId.setDescription('Module Id')
cyanRS64RS64Id = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanRS64RS64Id.setStatus('current')
if mibBuilder.loadTexts: cyanRS64RS64Id.setDescription('RS64 Termination Id')
cyanRS64AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 4), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanRS64AdminState.setStatus('current')
if mibBuilder.loadTexts: cyanRS64AdminState.setDescription('Administrative state')
cyanRS64AutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanRS64AutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanRS64AutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanRS64OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 6), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanRS64OperState.setStatus('current')
if mibBuilder.loadTexts: cyanRS64OperState.setDescription('Primary Operation State')
cyanRS64OperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 7), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanRS64OperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanRS64OperStateQual.setDescription('Operation state qualifier')
cyanRS64SecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 1, 1, 1, 8), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanRS64SecServState.setStatus('current')
if mibBuilder.loadTexts: cyanRS64SecServState.setDescription('Secondary service state')
cyanRS64ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 20)).setObjects(("CYAN-RS64-MIB", "cyanRS64AdminState"), ("CYAN-RS64-MIB", "cyanRS64AutoinserviceSoakTimeSec"), ("CYAN-RS64-MIB", "cyanRS64OperState"), ("CYAN-RS64-MIB", "cyanRS64OperStateQual"), ("CYAN-RS64-MIB", "cyanRS64SecServState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanRS64ObjectGroup = cyanRS64ObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanRS64ObjectGroup.setDescription('Group of objects that comes with RS64 module')
cyanRS64Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 220, 30)).setObjects(("CYAN-RS64-MIB", "cyanRS64ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanRS64Compliance = cyanRS64Compliance.setStatus('current')
if mibBuilder.loadTexts: cyanRS64Compliance.setDescription('The basic info needed to be a cyan RS64')
mibBuilder.exportSymbols("CYAN-RS64-MIB", cyanRS64SecServState=cyanRS64SecServState, PYSNMP_MODULE_ID=cyanRS64Module, cyanRS64AutoinserviceSoakTimeSec=cyanRS64AutoinserviceSoakTimeSec, cyanRS64Entry=cyanRS64Entry, cyanRS64MibObjects=cyanRS64MibObjects, cyanRS64OperState=cyanRS64OperState, cyanRS64ModuleId=cyanRS64ModuleId, cyanRS64OperStateQual=cyanRS64OperStateQual, cyanRS64Module=cyanRS64Module, cyanRS64AdminState=cyanRS64AdminState, cyanRS64ObjectGroup=cyanRS64ObjectGroup, cyanRS64Compliance=cyanRS64Compliance, cyanRS64ShelfId=cyanRS64ShelfId, cyanRS64RS64Id=cyanRS64RS64Id, cyanRS64Table=cyanRS64Table)
