#
# PySNMP MIB module BIANCA-BRICK-PPPOA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-PPPOA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:38:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, TimeTicks, Counter32, MibIdentifier, ModuleIdentity, Unsigned32, NotificationType, ObjectIdentity, Bits, enterprises, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Counter32", "MibIdentifier", "ModuleIdentity", "Unsigned32", "NotificationType", "ObjectIdentity", "Bits", "enterprises", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
pppoa = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 28))
pppoaCallTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 28, 1), )
if mibBuilder.loadTexts: pppoaCallTable.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallTable.setDescription('The pppoaCallTable displays all currently active PPPoA calls. Only the system can add or remove entries to this table.')
pppoaCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-PPPOA-MIB", "pppoaCallId"))
if mibBuilder.loadTexts: pppoaCallEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallEntry.setDescription('')
pppoaCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallId.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallId.setDescription('Identification of the PPPoA call.')
pppoaCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("established", 2), ("terminated", 3))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoaCallState.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallState.setDescription('The state of the PPPoA discovery stage.')
pppoaCallReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallReceivedPackets.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallReceivedPackets.setDescription('Count of received valid packets.')
pppoaCallReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallReceivedOctets.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallReceivedOctets.setDescription('Count of received valid Octets.')
pppoaCallReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallReceivedErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallReceivedErrors.setDescription('Count of received invalid packets.')
pppoaCallTransmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallTransmitPackets.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallTransmitPackets.setDescription('Count of transmitted packets.')
pppoaCallTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallTransmitOctets.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallTransmitOctets.setDescription('Count of transmitted Octets.')
pppoaCallTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallTransmitErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallTransmitErrors.setDescription('Count of transmit errors.')
pppoaCallInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 28, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoaCallInfo.setStatus('mandatory')
if mibBuilder.loadTexts: pppoaCallInfo.setDescription('Additional information to identify the PPPoA call')
mibBuilder.exportSymbols("BIANCA-BRICK-PPPOA-MIB", pppoaCallTable=pppoaCallTable, pppoaCallId=pppoaCallId, pppoaCallTransmitOctets=pppoaCallTransmitOctets, pppoaCallEntry=pppoaCallEntry, pppoaCallTransmitPackets=pppoaCallTransmitPackets, pppoaCallReceivedPackets=pppoaCallReceivedPackets, pppoaCallTransmitErrors=pppoaCallTransmitErrors, pppoaCallReceivedErrors=pppoaCallReceivedErrors, bintec=bintec, pppoaCallReceivedOctets=pppoaCallReceivedOctets, bibo=bibo, pppoaCallInfo=pppoaCallInfo, pppoa=pppoa, pppoaCallState=pppoaCallState)
