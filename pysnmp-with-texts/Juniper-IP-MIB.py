#
# PySNMP MIB module Juniper-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-IP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:03:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
ipCidrRouteEntry, ipCidrRouteNumber = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteEntry", "ipCidrRouteNumber")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniIpAddrLessIf, JuniNextIfIndex, JuniEnable = mibBuilder.importSymbols("Juniper-TC", "JuniIpAddrLessIf", "JuniNextIfIndex", "JuniEnable")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, TimeTicks, NotificationType, Integer32, IpAddress, ModuleIdentity, Counter32, Gauge32, ObjectIdentity, iso, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "TimeTicks", "NotificationType", "Integer32", "IpAddress", "ModuleIdentity", "Counter32", "Gauge32", "ObjectIdentity", "iso", "Bits", "MibIdentifier")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
juniIpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12))
juniIpMIB.setRevisions(('2007-01-17 23:02', '2005-03-30 13:49', '2005-04-29 20:37', '2004-09-20 13:49', '2004-09-10 15:26', '2003-11-03 15:26', '2003-06-25 19:48', '2003-02-11 19:05', '2002-10-23 18:53', '2002-04-03 22:06', '2001-07-05 14:00', '2001-06-18 19:11', '2000-07-31 00:00', '1999-11-09 00:00', '1999-09-16 00:00', '1998-11-19 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniIpMIB.setRevisionsDescriptions(('Added warm-restart replay initial sequence preference for an IP interface by adding juniIpIfInitSeqPrefOper and juniIpIfInitSeqPrefAdmin.', 'Added IP Route Summary support for Unicast and Multicast Routes.', 'Added RLI-1925 Source Address Validation Failure Traps support.', 'Added RLI-1684 Route Table Maximum Route support.', 'Obsoleted the following objects: juniIpVpnIdOui juniIpVpnIdIndex', 'Added support to juniIpIfEntry for TCP MSS configuration.', 'Added IP interface summary statistics support - juniIpIfSummary. Added support for Interface Mirroring by adding juniIpIfAnalyzerMode. Added support to juniIpIfEntry for IP interface auto configure.', 'Replaced Unisphere names with Juniper names. In juniIpInterfaceGroup, added juniIpIfRouterIndex In juniIpIfTable, to support unnumbered interfaces referencing numbered interfaces in addition to loopback interfaces, the following objects were deprecated: juniIpIfLoopback juniIpIfLoopbackUid and the following objects were added: juniIpIfInheritNum juniIpIfInheritNumUid In juniIpAddrTable, to support unnumbered interfaces referencing numbered interfaces in addition to loopback interfaces, the following object was deprecated: juniIpAdEntUnnumLoopbackIfIndex and the following object was added: juniIpAdEntUnnumInheritNumIfIndex Added new types to juniIpIfType.', 'Added the following scalar objects: juniIpBgpCommunityNewFormat juniIpBgpAsConfedSetNewFormat Obsoleted the following objects: juniIpArpTimeout juniIpRouteLimit ', 'Obsoleted the following objects with the introduction of QoS: juniIpIfStatsInForwardedPackets juniIpIfStatsInForwardedOctets juniIpIfStatsOutRequestedPackets juniIpIfStatsOutRequesteOctets juniIpIfStatsGreenOutSchedDropPackets juniIpIfStatsYellowOutSchedDropPackets juniIpIfStatsRedOutSchedDropOctets juniIpIfStatsGreenOutSchedDropOctets juniIpIfStatsYellowOutSchedDropOctets juniIpIfStatsRedOutSchedDropOctet ', 'Added the juniIpIfAssocTable.', 'o In juniIpIfTable, added the following: juniIpIfSAValidation juniIpIfCreationType juniIpIfProfileId juniIpIfAlwaysUp juniIpIfLoopback juniIpIfLoopbackUid juniIpIfDebounceTime juniIpIfForwarding juniIpIfForceFragmentation juniIpIfSharesLowerUid juniIpIfFilterOptions juniIpIfName juniIpIfArpTimeout juniIpIfAdminSpeed juniIpIfMultipathMode juniIpIfSharedNhAddr juniIpIfSharedNhRouterId juniIpIfPrimaryIpAddress juniIpIfPrimaryIpMask juniIpIfOperDebounceTime o In juniIpAddrTable, added juniIpAdEntIsSecondary o In juniIpAddrTable, deprecated juniIpAdEntIgmpEnable o Added following scalars: juniIpDebounceTime juniIpRouterId juniIpSourceRoutingAdminStatus juniIpVpnIdOui juniIpVpnIdIndex o In juniIpIfStatsTable, added: juniIpIfStatsGreenOutSchedDropPackets juniIpIfStatsYellowOutSchedDropPackets juniIpIfStatsRedOutSchedDropPackets juniIpIfStatsGreenOutSchedDropOctets juniIpIfStatsYellowOutSchedDropOctets juniIpIfStatsRedOutSchedDropOctets o Changed the type of juniIpRouteStaticNextHop to JuniIpAddrLessIf to support setting static routes next hop values to unnumbered IP interfaces. This type is a Juniper TC, which can transparently support the original IpAddress type, so existing clients are not negatively affected by this change.', 'o Added extended IP interface statistics.', 'o In juniIpIfTable, added null(5) enumeration value for juniIpIfType. o Added juniIpIfTypeId object.', 'o In juniIpAddrTable, added juniIpAdEntUnnumLoopbackIfIndex, juniIpAdEntIrdpEnable, juniIpAdEntAccessRouteEnable, juniIpAdEntAccessRouteHost. o In juniIpRouteStaticTable, changed Tos to Preference, and added Tag. o Added juniIpCidrRouteTable (proprietary extensions to standard ipCidrRouteTable).', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniIpMIB.setLastUpdated('200701172302Z')
if mibBuilder.loadTexts: juniIpMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniIpMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 E-mail: mib@Juniper.net')
if mibBuilder.loadTexts: juniIpMIB.setDescription('The IP Protocol MIB for the Juniper Networks enterprise.')
juniIpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1))
juniIpInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1))
juniIpAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2))
juniIpRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3))
juniIpGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4))
juniIpIfSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5))
juniIpRouteSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6))
juniIpDebounceTime = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpDebounceTime.setStatus('current')
if mibBuilder.loadTexts: juniIpDebounceTime.setDescription('The time in milliseconds that an event has to be in the same state before being reported.')
juniIpRouterId = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpRouterId.setStatus('current')
if mibBuilder.loadTexts: juniIpRouterId.setDescription('The router-id that this IP router will use to identify itself.')
juniIpSourceRoutingAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 3), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpSourceRoutingAdminStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpSourceRoutingAdminStatus.setDescription('The administrative setting for source routing.')
juniIpVpnIdOui = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpVpnIdOui.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpVpnIdOui.setDescription('The OUI portion of the VPN identifier. This object must be set coincident with the index portion of the VpnId (juniIpVpnIdIndex), otherwise the set will fail.')
juniIpVpnIdIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpVpnIdIndex.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpVpnIdIndex.setDescription('The index portion of the VPN identifier. This object must be set coincident with the OUI portion of the VpnId (juniIpVpnOui), otherwise the set will fail.')
juniIpBgpCommunityNewFormat = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpBgpCommunityNewFormat.setStatus('current')
if mibBuilder.loadTexts: juniIpBgpCommunityNewFormat.setDescription('The BGP community format to be used. Set to true to use the community number, as number format.')
juniIpBgpAsConfedSetNewFormat = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 4, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpBgpAsConfedSetNewFormat.setStatus('current')
if mibBuilder.loadTexts: juniIpBgpAsConfedSetNewFormat.setDescription('The BGP as confederation set format to be used. Set to true to display the confederation set as a comma separated list, enclosed in squared braces.')
juniIpIfSummaryTotalIntf = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntf.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntf.setDescription('The total number of IP interfaces.')
juniIpIfSummaryTotalIntfUp = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfUp.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfUp.setDescription('The total number of IP interfaces in operational state UP.')
juniIpIfSummaryTotalIntfDown = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfDown.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfDown.setDescription('The total number of IP interfaces in operational state DOWN.')
juniIpIfSummaryTotalIntfProtUp = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtUp.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtUp.setDescription('The total number of IP interfaces in protocol state UP.')
juniIpIfSummaryTotalIntfProtDown = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtDown.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtDown.setDescription('The total number of IP interfaces in protocol state DOWN.')
juniIpIfSummaryTotalIntfProtNotPresent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 5, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtNotPresent.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryTotalIntfProtNotPresent.setDescription('The total number of IP interfaces in protocol state NOT PRESENT.')
juniIpRouteUnicastSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1))
juniIpRouteMulticastSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2))
juniIpRouteSummaryUnicastTotalRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastTotalRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastTotalRoutes.setDescription('The total number of Unicast IP routes.')
juniIpRouteSummaryUnicastTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastTotalBytes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastTotalBytes.setDescription('Total number of bytes in unicast route entries.')
juniIpRouteSummaryUnicastIsisRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisRoutes.setDescription('The total number of Unicast IP ISIS routes.')
juniIpRouteSummaryUnicastIsisLevel1Routes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisLevel1Routes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisLevel1Routes.setDescription('The total number of Unicast IP Level 1 ISIS routes.')
juniIpRouteSummaryUnicastIsisLevel2Routes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisLevel2Routes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIsisLevel2Routes.setDescription('The total number of Unicast IP Level 2 ISIS routes.')
juniIpRouteSummaryUnicastRipRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastRipRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastRipRoutes.setDescription('The total number of Unicast IP RIP routes.')
juniIpRouteSummaryUnicastStaticRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastStaticRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastStaticRoutes.setDescription('The total number of Unicast IP Static routes.')
juniIpRouteSummaryUnicastConnectedRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastConnectedRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastConnectedRoutes.setDescription('The total number of Unicast IP Connected routes.')
juniIpRouteSummaryUnicastBgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastBgpRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastBgpRoutes.setDescription('The total number of Unicast IP BGP routes.')
juniIpRouteSummaryUnicastOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastOspfRoutes.setDescription('The total number of Unicast IP OSPF routes.')
juniIpRouteSummaryUnicastIntraAreaOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntraAreaOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntraAreaOspfRoutes.setDescription('The total number of Unicast IP Intra Area OSPF routes.')
juniIpRouteSummaryUnicastInterAreaOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastInterAreaOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastInterAreaOspfRoutes.setDescription('The total number of Unicast IP Inter Area OSPF routes.')
juniIpRouteSummaryUnicastExternalOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastExternalOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastExternalOspfRoutes.setDescription('The total number of Unicast IP External OSPF routes.')
juniIpRouteSummaryUnicastOtherInternalRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastOtherInternalRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastOtherInternalRoutes.setDescription('The total number of Unicast IP Other Internal routes.')
juniIpRouteSummaryUnicastAccessRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastAccessRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastAccessRoutes.setDescription('The total number of Unicast IP Access routes.')
juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes.setDescription('The total number of Unicast IP Internally Created Access Host routes.')
juniIpRouteSummaryUnicastIntDialoutRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntDialoutRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastIntDialoutRoutes.setDescription('The total number of Unicast IP Internally Created Dialout routes.')
juniIpRouteSummaryUnicastRouteMemoryActive = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastRouteMemoryActive.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastRouteMemoryActive.setDescription('Unicast IP Route Memory Storage.')
juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP.setDescription('IP address for last Unicast route added or deleted.')
juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask.setDescription('Subnet mask for last Unicast route added or deleted.')
juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("inValid", 0), ("isis", 1), ("rip", 2), ("ospf", 3), ("static", 4), ("local", 5), ("bgp", 6), ("mbgp", 7), ("staticLow", 8), ("ospfInternal", 9), ("ospfExternal", 10), ("dvmrp", 11), ("dvmrpAggregate", 12), ("hidden", 13), ("access", 14), ("accessInternal", 15), ("dialOut", 16), ("default", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient.setDescription('Client for last Unicast route added or deleted.')
juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate.setDescription('Date for last Unicast route added or deleted.')
juniIpRouteSummaryMulticastTotalRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastTotalRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastTotalRoutes.setDescription('The total number of Multicast IP routes.')
juniIpRouteSummaryMulticastTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastTotalBytes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastTotalBytes.setDescription('Total number of bytes in multicast route entries.')
juniIpRouteSummaryMulticastIsisRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIsisRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIsisRoutes.setDescription('The total number of Multicast IP ISIS routes.')
juniIpRouteSummaryMulticastLevel1IsisRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLevel1IsisRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLevel1IsisRoutes.setDescription('The total number of Multicast IP Level 1 ISIS routes.')
juniIpRouteSummaryMulticastLevel2IsisRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLevel2IsisRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLevel2IsisRoutes.setDescription('The total number of Multicast IP Level 2 ISIS routes.')
juniIpRouteSummaryMulticastRipRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastRipRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastRipRoutes.setDescription('The total number of Multicast IP RIP routes.')
juniIpRouteSummaryMulticastStaticRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastStaticRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastStaticRoutes.setDescription('The total number of Multicast IP Static routes.')
juniIpRouteSummaryMulticastConnectedRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastConnectedRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastConnectedRoutes.setDescription('The total number of Multicast IP Connected routes.')
juniIpRouteSummaryMulticastBgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastBgpRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastBgpRoutes.setDescription('The total number of Multicast IP BGP routes.')
juniIpRouteSummaryMulticastOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastOspfRoutes.setDescription('The total number of Multicast IP OSPF routes.')
juniIpRouteSummaryMulticastIntraAreaOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIntraAreaOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIntraAreaOspfRoutes.setDescription('The total number of Multicast IP Intra Area OSPF routes.')
juniIpRouteSummaryMulticastInterAreaOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastInterAreaOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastInterAreaOspfRoutes.setDescription('The total number of Multicast IP Inter Area OSPF routes.')
juniIpRouteSummaryMulticastExternalOspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastExternalOspfRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastExternalOspfRoutes.setDescription('The total number of Multicast IP External OSPF routes.')
juniIpRouteSummaryMulticastOtherInternalRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastOtherInternalRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastOtherInternalRoutes.setDescription('The total number of Multicast IP Other Internal routes.')
juniIpRouteSummaryMulticastAccessRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastAccessRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastAccessRoutes.setDescription('The total number of Multicast IP Access routes.')
juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes.setDescription('The total number of Multicast IP Internally Created Access Host routes.')
juniIpRouteSummaryMultiastIntDialoutRoutes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMultiastIntDialoutRoutes.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMultiastIntDialoutRoutes.setDescription('The total number of Multicast IP Internally Created Dialout routes.')
juniIpRouteSummaryMulticastRouteMemoryActive = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastRouteMemoryActive.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastRouteMemoryActive.setDescription('Multicast IP Route Memory Storage.')
juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP.setDescription('IP address for last Multicast route added or deleted.')
juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask.setDescription('Subnet Mask for last Multicast route added or deleted.')
juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("inValid", 0), ("isis", 1), ("rip", 2), ("ospf", 3), ("static", 4), ("local", 5), ("bgp", 6), ("mbgp", 7), ("staticLow", 8), ("ospfInternal", 9), ("ospfExternal", 10), ("dvmrp", 11), ("dvmrpAggregate", 12), ("hidden", 13), ("access", 14), ("accessInternal", 15), ("dialOut", 16), ("default", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient.setDescription('Client for last Multicast route added or deleted.')
juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 6, 2, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate.setDescription('Date for last Multicast route added or deleted.')
juniIpNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 1), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniIpIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
juniIpIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2), )
if mibBuilder.loadTexts: juniIpIfTable.setStatus('current')
if mibBuilder.loadTexts: juniIpIfTable.setDescription('This table contains entries for IP interfaces present in the system.')
juniIpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-IP-MIB", "juniIpIfIndex"))
if mibBuilder.loadTexts: juniIpIfEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpIfEntry.setDescription('Each entry describes the characteristics of an IP interface. Creating/deleting entries in this table causes corresponding entries for be created/deleted in ifTable/ifXTable/juniIfTable.')
juniIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniIpIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfIndex.setDescription('The ifIndex of the IP interface. When creating entries in this table, suitable values for this object are determined by reading juniIpNextIfIndex.')
juniIpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpIfRowStatus.setDescription("Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniIpIfRowStatus juniIpIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for juniIpIfIndex must have been determined previously, typically by reading juniIpNextIfIndex. The interface identified by a nonzero juniIpIfLowerIfIndex must exist. If juniIpIfType is configured to be 'loopback' or 'null', juniIpIfLowerIfIndex must be set to zero. The selected value of juniIpIfType must be compatible with the underlying media interface identified by juniIpIfLowerIfIndex. Once created, the following objects may not be modified: juniIpIfLowerIfIndex juniIpIfType juniIpIfTypeId A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.")
juniIpIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfLowerIfIndex.setDescription('The ifIndex of a media interface over which this IP interface is to be layered. A value of zero is used when juniIpIfType is specified to be loopback(4) or null(5).')
juniIpIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 0), ("broadcast", 1), ("pointToPoint", 2), ("nbma", 3), ("loopback", 4), ("null", 5), ("bgpMplsVpn", 6), ("vrfInternal", 7), ("dialout", 8))).clone('pointToPoint')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfType.setStatus('current')
if mibBuilder.loadTexts: juniIpIfType.setDescription('The type of network interface.')
juniIpIfTypeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfTypeId.setStatus('current')
if mibBuilder.loadTexts: juniIpIfTypeId.setDescription('A numerical distinguisher relevant for the loopback and null IP interface types. loopback Must be unique for all IP interfaces of this type. null Must be unique for all IP interfaces of this type. (FOR IMPLEMENTATIONS THAT SUPPORT ONE AND ONLY ONE NULL INTERFACE, THE VALUE ZERO MUST BE USED.) For all other IP interface types, this object is not relevant, reports a value of zero when read, and must be given a value of zero if explicitly configured during creation.')
juniIpIfSAValidationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 6), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfSAValidationEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSAValidationEnable.setDescription('Enable/disable source address validation on this IP network interface.')
juniIpIfCreationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfCreationType.setStatus('current')
if mibBuilder.loadTexts: juniIpIfCreationType.setDescription('Specify if the interface was created due to static configuration or due to some dynamic event. Dynamic interfaces are not stored in NVS.')
juniIpIfProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfProfileId.setStatus('current')
if mibBuilder.loadTexts: juniIpIfProfileId.setDescription('Identified the profile used when creating a dynamic interface.')
juniIpIfAlwaysUp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 9), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfAlwaysUp.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAlwaysUp.setDescription('When enabled, the interface is determined to be up regardless of the state of any lower layer interfaces.')
juniIpIfLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 10), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfLoopback.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpIfLoopback.setDescription('Indicates whether the interface is a loopback type interface. This object has been replaced by juniIpIfInheritNum.')
juniIpIfLoopbackUid = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfLoopbackUid.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpIfLoopbackUid.setDescription('Specify the interface index of a loopback interface whose IP address should be used when sourcing traffic on this interface. Useful for unnumbered interfaces. This object has been replaced by juniIpIfInheritNumUid.')
juniIpIfDebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfDebounceTime.setStatus('current')
if mibBuilder.loadTexts: juniIpIfDebounceTime.setDescription('Specifies the time in milliseconds that a layer 2 interface must remain in a state before it is conveyed to the IP layer. Useful for interfaces that experience brief outages that should not constitute a route flap. A value of 0 indicates that the feature is disabled.')
juniIpIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 13), JuniEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfForwarding.setStatus('current')
if mibBuilder.loadTexts: juniIpIfForwarding.setDescription('Enable/disable the forwarding of IP traffic to/from this interface. This is currently only applicable to the out-of-band management port.')
juniIpIfForceFragmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 14), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfForceFragmentation.setStatus('current')
if mibBuilder.loadTexts: juniIpIfForceFragmentation.setDescription('Force the fragmentation of all IP packets greater than the interface MTU even if the DF bit is set.')
juniIpIfSharesLowerUid = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 15), JuniEnable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfSharesLowerUid.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSharesLowerUid.setDescription('Identifies the interface as sharing a lower interface with another interface vs owning it outright.')
juniIpIfFilterOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfFilterOptions.setStatus('current')
if mibBuilder.loadTexts: juniIpIfFilterOptions.setDescription('Bit mask to configure the interface to filter packets with IP header options. Currently, either no bits or all bits may be set.')
juniIpIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfName.setStatus('current')
if mibBuilder.loadTexts: juniIpIfName.setDescription('Specify the IP interface discriminator for an IP interface not attached to a layer 2 interface with a specific location.')
juniIpIfArpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 18), Unsigned32().clone(21600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfArpTimeout.setStatus('current')
if mibBuilder.loadTexts: juniIpIfArpTimeout.setDescription('Specify the ARP timeout for this interface in seconds.')
juniIpIfAdminSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 19), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfAdminSpeed.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAdminSpeed.setDescription('Set an administrative speed for the interface that overrides the speed learned from the lower layer. A value of 0 indicates no speed is specified.')
juniIpIfMultipathMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hashed", 1), ("roundRobin", 2))).clone('hashed')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfMultipathMode.setStatus('current')
if mibBuilder.loadTexts: juniIpIfMultipathMode.setDescription('Configure the mode this interface should use when forwarding equal-cost multipath traffic.')
juniIpIfSharedNhAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 21), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfSharedNhAddr.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSharedNhAddr.setDescription('The IP address of either a direct or indirect next-hop toward which this shared interface should point.')
juniIpIfSharedNhRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfSharedNhRouterId.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSharedNhRouterId.setDescription('The identifier for the domain of a virtual router in which the juniIpIfSharedNhAddr should be resolved.')
juniIpIfPrimaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfPrimaryIpAddress.setStatus('current')
if mibBuilder.loadTexts: juniIpIfPrimaryIpAddress.setDescription('The IP address of the primary IP network on an interface.')
juniIpIfPrimaryIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 24), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfPrimaryIpMask.setStatus('current')
if mibBuilder.loadTexts: juniIpIfPrimaryIpMask.setDescription('The IP address mask of the primary IP network on an interface.')
juniIpIfOperDebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfOperDebounceTime.setStatus('current')
if mibBuilder.loadTexts: juniIpIfOperDebounceTime.setDescription('Indicates the operational time in milliseconds that a layer2 interface must remain in a state before it is conveyed to the IP layer. Useful for interfaces that experience brief outages that should not constitute a route flap. A value of 0 indicates that the feature is disabled.')
juniIpIfRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfRouterIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfRouterIndex.setDescription('The index or ID of the router.')
juniIpIfInheritNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 27), JuniEnable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfInheritNum.setStatus('current')
if mibBuilder.loadTexts: juniIpIfInheritNum.setDescription('Indicates whether this numbered interface is referenced by unnumbered interfaces.')
juniIpIfInheritNumUid = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 28), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfInheritNumUid.setStatus('current')
if mibBuilder.loadTexts: juniIpIfInheritNumUid.setDescription('Specify the interface index of a numbered interface whose IP address should be used when sourcing traffic on this interface. Useful for unnumbered interfaces.')
juniIpIfAnalyzerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("default", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfAnalyzerMode.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAnalyzerMode.setDescription('Used to set the interface to analyzer mode. When enabled(1), all IP packets entering this interface and all non-mirror IP packets leaving this interface will be dropped. The value default(2) specifies that this interface will be the default analyzer port for the virtual-router where the interface resides.')
juniIpIfAutoConfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 30), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfAutoConfigure.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAutoConfigure.setDescription('When enabled, IP subscriber interfaces are created dynamically based on any attributes defined in the service-profile and the rules associated with the DCM profile selected for this subscriber.')
juniIpIfTcpMss = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(160, 10240), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfTcpMss.setStatus('current')
if mibBuilder.loadTexts: juniIpIfTcpMss.setDescription('Configures TCP MSS value for an IP interface. When configured, MSS value of TCP SYN packets received or transmitted on the interface will be compared with the configured value and lowest of the two will replace the value in the packet.')
juniIpIfInitSeqPrefOper = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfInitSeqPrefOper.setStatus('current')
if mibBuilder.loadTexts: juniIpIfInitSeqPrefOper.setDescription('Indicates the operational warm-restart replay initial sequence preference value for an IP interface. Following an HA SRP switchover, high-preference (value 1) IP interfaces are replayed first, followed by static routes, and then low-preference (value 0) IP interfaces. This allows static routes that are dependent on high-preference interfaces to be resolved and routing protocols to exchange information with peers over high-preference interfaces before low-preference interfaces are replayed. An IP interface is designated as high-preference either (1) implicitly by configuring an IGP or PIM protocol on that interface, or (2) explicitly by juniIpIfInitSeqPrefAdmin (or CLI) configuration.')
juniIpIfInitSeqPrefAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfInitSeqPrefAdmin.setStatus('current')
if mibBuilder.loadTexts: juniIpIfInitSeqPrefAdmin.setDescription('Configures the warm-restart replay initial sequence preference value for an IP interface. See the juniIpIfInitSeqPrefOper description for more information.')
juniIpIfArpSpoofCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 2, 1, 34), JuniEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpIfArpSpoofCheck.setStatus('current')
if mibBuilder.loadTexts: juniIpIfArpSpoofCheck.setDescription('When enabled, IP ARP spoof checking is performed on ARP packets received on the IP interface.')
juniIpIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3), )
if mibBuilder.loadTexts: juniIpIfStatsTable.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsTable.setDescription('This table contains entries for IP interfaces present in the system.')
juniIpIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1), ).setIndexNames((0, "Juniper-IP-MIB", "juniIpIfStatsIndex"))
if mibBuilder.loadTexts: juniIpIfStatsEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsEntry.setDescription('Each entry contains statistics for an IP interface.')
juniIpIfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniIpIfStatsIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsIndex.setDescription('The ifIndex of the IP interface.')
juniIpIfStatsInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInPackets.setDescription('The number of packets received on this interface.')
juniIpIfStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInOctets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInOctets.setDescription('The number of octets received on this interface.')
juniIpIfStatsInPoliciedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInPoliciedPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInPoliciedPackets.setDescription('The number of packets dropped due to rate limiters attached to this interface.')
juniIpIfStatsInPoliciedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInPoliciedOctets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInPoliciedOctets.setDescription('The number of octets dropped due to rate limiters attached to this interface.')
juniIpIfStatsInErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInErrorPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInErrorPackets.setDescription('The number of packets received with errors on this interface.')
juniIpIfStatsInSpoofedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInSpoofedPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsInSpoofedPackets.setDescription('The number of packets received on this interface with destination unknown.')
juniIpIfStatsInForwardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInForwardedPackets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsInForwardedPackets.setDescription('The number of packets received on this interface that were forwarded by any interface in the system.')
juniIpIfStatsInForwardedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsInForwardedOctets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsInForwardedOctets.setDescription('The number of octets received on this interface that were forwarded by any interface in the system.')
juniIpIfStatsOutForwardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutForwardedPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutForwardedPackets.setDescription('The number of packets forwarded by this interface.')
juniIpIfStatsOutForwardedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutForwardedOctets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutForwardedOctets.setDescription('The number of octets forwarded by this interface.')
juniIpIfStatsOutSchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutSchedDropPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutSchedDropPackets.setDescription('The number of packets dropped at this interface due to output queue congestion.')
juniIpIfStatsOutSchedDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutSchedDropOctets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutSchedDropOctets.setDescription('The number of octets dropped at this interface due to output queue congestion.')
juniIpIfStatsOutRequestedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutRequestedPackets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsOutRequestedPackets.setDescription('The number of packets requested for transmission at this interface.')
juniIpIfStatsOutRequestedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutRequestedOctets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsOutRequestedOctets.setDescription('The number of octets requested for transmission at this interface.')
juniIpIfStatsOutPoliciedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutPoliciedPackets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutPoliciedPackets.setDescription('The number of packets dropped due to rate limiters attached to this interface.')
juniIpIfStatsOutPoliciedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsOutPoliciedOctets.setStatus('current')
if mibBuilder.loadTexts: juniIpIfStatsOutPoliciedOctets.setDescription('The number of octets dropped due to rate limiters attached to this interface.')
juniIpIfStatsGreenOutSchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsGreenOutSchedDropPackets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsGreenOutSchedDropPackets.setDescription('The number of packets dropped at this interface due to output queue congestion in the green output queue. The green output queue has lowest drop probability.')
juniIpIfStatsYellowOutSchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsYellowOutSchedDropPackets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsYellowOutSchedDropPackets.setDescription('The number of packets dropped at this interface due to output queue congestion in the yellow output queue. The yellow output queue has medium level drop probability.')
juniIpIfStatsRedOutSchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsRedOutSchedDropPackets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsRedOutSchedDropPackets.setDescription('The number of packets dropped at this interface due to output queue congestion in the red output queue. The red output queue has highest level drop probability.')
juniIpIfStatsGreenOutSchedDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsGreenOutSchedDropOctets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsGreenOutSchedDropOctets.setDescription('The number of octets dropped at this interface due to output queue congestion in the green output queue. The green output queue has the lowest drop probability.')
juniIpIfStatsYellowOutSchedDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsYellowOutSchedDropOctets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsYellowOutSchedDropOctets.setDescription('The number of octets dropped at this interface due to output queue congestion in the yellow output queue. The yellow output queue has the medium drop probability.')
juniIpIfStatsRedOutSchedDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfStatsRedOutSchedDropOctets.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpIfStatsRedOutSchedDropOctets.setDescription('The number of octets dropped at this interface due to output queue congestion in the red output queue. The red output queue has the highest drop probability.')
juniIpIfAssocTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 4), )
if mibBuilder.loadTexts: juniIpIfAssocTable.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAssocTable.setDescription('This table contains entries of interfaces present in the system.')
juniIpIfAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 4, 1), ).setIndexNames((0, "Juniper-IP-MIB", "juniIpIfAssocLowerIfIndex"))
if mibBuilder.loadTexts: juniIpIfAssocEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAssocEntry.setDescription('Each entry in this table returns the ifIndex of the IP interface associated with the lower layer ifIndex supplied as the index to this table. The purpose of this table is to translate L2 interfaces to corresponding L3 interfaces for billing applications. Since interesting billing related statistics are kept at L3, it is often useful to know the L2-L3 relationship. Note that this table is not confined to L2-L3 relationships. Any interface sublayer can be used to access this table to determine the relationship with the L3 interface.')
juniIpIfAssocLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniIpIfAssocLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAssocLowerIfIndex.setDescription('The ifIndex of the lower layer interface.')
juniIpIfAssocIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 1, 4, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpIfAssocIpIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpIfAssocIpIfIndex.setDescription("The ifIndex of the IP interface associated with the lower layer juniIpIfAssocLowerIfIndex. In cases where there is not a 1 to 1 relationship between lower layer and higher layer IP interface, a zero value juniIpIfAssocIpIfIndex is returned; this includes the case where an IP interface has not yet been configued at the top of the interface column. An example usage of this table: Assume a user needs to know the ifIndex relationship for all interfaces with the L3 IP interface. Then starting at the bottom of the stack below, the ATM and AAL5's ifIndex would be used to access the table. The agent will return 0 for each of these cases because multiple customer's traffic is demultiplexed at these levels. IP_1 PPP IP_2 ATM1483_1 ATM1483_2 \\ / AAL5 ATM If the ATM1483_1 ifIndex is used to access this table, then the value of juniIpIfAssocLowerIfIndex will be set to the ifIndex of IP_1. Similarily, if the ATM1483_2 ifIndex is used to access this table, the juniIpifAssocLowerIfIndex will set to the ifIndex of IP_2.")
juniIpAddrGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 1))
juniIpArpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpArpTimeout.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpArpTimeout.setDescription('Timeout, in seconds, for ARP requests issued by this entity.')
juniIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2), )
if mibBuilder.loadTexts: juniIpAddrTable.setStatus('current')
if mibBuilder.loadTexts: juniIpAddrTable.setDescription("IP addressing information for this entity's IP network interfaces. Representation of both numbered and unnumbered IP interfaces is supported.")
juniIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1), ).setIndexNames((0, "Juniper-IP-MIB", "juniIpAdEntAddr"))
if mibBuilder.loadTexts: juniIpAddrEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpAddrEntry.setDescription("IP addressing information for one of this entity's IP network interfaces. This interface could be either numbered or unnumbered. The following objects correspond to (read-only) counterparts in the IP-MIB ipAddrTable: juniIpAdEntAddr juniIpAdEntIfIndex juniIpAdEntNetMask juniIpAdEntBcastAddr juniIpAdEntReasmMaxSize ")
juniIpAdEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 1), JuniIpAddrLessIf())
if mibBuilder.loadTexts: juniIpAdEntAddr.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntAddr.setDescription("The IP address for a numbered IP network interface, if this object's value has the form 'a.b.c.d', where 'a' is nonzero; or, the ifIndex (interpreting the low 24 bits of this value as an integer) of an unnumbered ('address-less') IP interface, if this object's value has the form '0.b.c.d'.")
juniIpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIfIndex.setDescription("The ifIndex of the network interface to which this entry's IP addressing mode pertains.")
juniIpAdEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 3), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntNetMask.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntNetMask.setDescription("The IP subnet mask associated with the IP address of this entry. The network and host bit fields of the mask are filled with 1's and 0's, respectively. If this entry represents an unnumbered IP interface, this object should have a value of all ones.")
juniIpAdEntBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpAdEntBcastAddr.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntBcastAddr.setDescription('The value of the least-significant bit in the IP broadcast address used for sending datagrams on the IP network interface associated with this entry. For example, when the Internet standard all-ones broadcast address is used, the value will be 1. This value applies to both the subnet and network broadcasts addresses used by the entity on this interface.')
juniIpAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpAdEntReasmMaxSize.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntReasmMaxSize.setDescription('The size of the largest IP datagram which this entity can re-assemble from incoming IP fragmented datagrams received on this interface.')
juniIpAdEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntRowStatus.setDescription('Controls the creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create entries for both numbered and unnumbered IP interfaces, the following entry objects MUST be explicitly configured: juniIpAdEntRowStatus juniIpAdEntIfIndex To create an entry for a numbered IP interface, the following conditions must also hold: <none> To create an entry for an unnumbered IP interface, the following conditions must also hold: juniIpAdEntUnnumInheritNumIfIndex must be configured with a nonzero ifIndex value of an IP numbered interface.')
juniIpAdEntAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 7), JuniEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntAdminStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntAdminStatus.setDescription('Enable/disable operation of IP on this IP network interface.')
juniIpAdEntArpRspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 8), JuniEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntArpRspEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntArpRspEnable.setDescription('Enable/disable ARP response on this IP network interface.')
juniIpAdEntProxyArpRspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 9), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntProxyArpRspEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntProxyArpRspEnable.setDescription('Enable/disable proxy ARP response on this IP network interface.')
juniIpAdEntIgmpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 10), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIgmpEnable.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpAdEntIgmpEnable.setDescription('Enable/disable IGMP operation on this IP network interface.')
juniIpAdEntDirectedBcastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 11), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntDirectedBcastEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntDirectedBcastEnable.setDescription('Enable/disable forwarding of directed broadcasts on this IP network interface.')
juniIpAdEntIcmpRedirectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 12), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIcmpRedirectEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIcmpRedirectEnable.setDescription('Enable/disable transmission of ICMP Redirect messages on this IP network interface.')
juniIpAdEntIcmpMaskReplyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 13), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIcmpMaskReplyEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIcmpMaskReplyEnable.setDescription('Enable/disable transmission of ICMP Mask Reply messages on this IP network interface.')
juniIpAdEntIcmpUnreachEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 14), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIcmpUnreachEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIcmpUnreachEnable.setDescription('Enable/disable transmission of ICMP Unreachable messages on this IP network interface.')
juniIpAdEntMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntMtu.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntMtu.setDescription('The configured MTU size for this IP network interface. If set to zero, the default MTU size, as determined by the underlying network media, is used.')
juniIpAdEntUnnumLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 16), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntUnnumLoopbackIfIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpAdEntUnnumLoopbackIfIndex.setDescription('For unnumbered interfaces, the ifIndex of the IP loopback interface whose IP address is used as the source IP address for IP packets transmitted on the unnumbered network. For numbered interfaces, this object has a value of zero. This object has been replaced by juniIpAdEntUnnumInheritNumIfIndex.')
juniIpAdEntIrdpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 17), JuniEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIrdpEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIrdpEnable.setDescription('Controls whether ICMP Router Discovery Protocol operation is permitted to be sent on this network.')
juniIpAdEntAccessRouteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 18), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntAccessRouteEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntAccessRouteEnable.setDescription('If enabled, then establishment/loss of a point-to-point network connection causes a host route for the remote host to be created/deleted automatically.')
juniIpAdEntAccessRouteHost = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpAdEntAccessRouteHost.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntAccessRouteHost.setDescription('If an access route has been established, the IP address of the remote host is reported by this object; otherwise, this object contains the value 0.0.0.0.')
juniIpAdEntIsSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 20), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntIsSecondary.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntIsSecondary.setDescription('If enabled, then the IP address corresponding to this entry is a secondary address. If disabled, then the IP address corresponding to this entry is te primary address.')
juniIpAdEntUnnumInheritNumIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 2, 2, 1, 21), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpAdEntUnnumInheritNumIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpAdEntUnnumInheritNumIfIndex.setDescription('For unnumbered interfaces, the ifIndex of the IP numbered interface whose IP address is used as the source IP address for IP packets transmitted on the unnumbered network. For numbered interfaces, this object has a value of zero.')
juniIpRouteGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1))
juniIpRouteLimit = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpRouteLimit.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpRouteLimit.setDescription('Maximum number of IP routes maintained by this entity. Setting a value lower than the current number of routes prevents additional routes from being learned or configured, but does not cause existing excess routes to be deleted to enforce the new limit.')
juniIpRouteTableLimit = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpRouteTableLimit.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableLimit.setDescription('The VRF Route Table Maximum Number of Routes Limit.')
juniIpRouteTableWarnPercent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpRouteTableWarnPercent.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableWarnPercent.setDescription('The VRF Route Table Percentage of the Route Limit at which to issue a warning. The percentage is only valid when juniIpRouteTableWarnOnly is false. It must be set to 0 if juniIpRouteTableWarnOnly is true.')
juniIpRouteTableWarnOnly = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpRouteTableWarnOnly.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableWarnOnly.setDescription('The VRF Route Table Maximum Number of Routes Warning flag. Do not actually limit the number of routes in the table')
juniIpRouteTableWarnThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteTableWarnThreshold.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableWarnThreshold.setDescription('The computed number of route to issue a warning. If juniIpRouteTableWarnOnly is true this value will be juniIpRouteTableLimit and if juniIpRouteTableWarnOnly is false it will be juniIpRouteTableLimit * juniIpRouteTableWarnPercentage')
juniIpRouteStaticTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2), )
if mibBuilder.loadTexts: juniIpRouteStaticTable.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticTable.setDescription("Table of static routes configured on this entity. The object definitions and indexing for this table are chosen to closely align with the IP-FORWARD-MIB's ipCidrRouteTable. This table serves three purposes: 1. Provide the means for configuring static routes. 2. Provide an efficient view of static routes (otherwise they must be observed by traversing the entire routing table). 3. Provide view of static routes configured on network interfaces that are currently inactive. (In this implementation, static routes configured on inactive interfaces are not visible in the routing table.)")
juniIpRouteStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1), ).setIndexNames((0, "Juniper-IP-MIB", "juniIpRouteStaticDest"), (0, "Juniper-IP-MIB", "juniIpRouteStaticMask"), (0, "Juniper-IP-MIB", "juniIpRouteStaticPref"), (0, "Juniper-IP-MIB", "juniIpRouteStaticNextHop"))
if mibBuilder.loadTexts: juniIpRouteStaticEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticEntry.setDescription('A static route.')
juniIpRouteStaticDest = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteStaticDest.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticDest.setDescription('The destination IP address of this route. This object may not take a Multicast (Class D) address value. Any assignment (implicit or otherwise) of an instance of this object to a value x must be rejected if the bitwise logical-AND of x with the value of the corresponding instance of the juniIpRouteStaticMask object is not equal to x.')
juniIpRouteStaticMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteStaticMask.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticMask.setDescription('Indicate the mask to be logical-ANDed with the destination address before being compared to the value in the juniIpRouteStaticDest field. For those systems that do not support arbitrary subnet masks, an agent constructs the value of the juniIpRouteStaticMask by reference to the IP Address Class. Any assignment (implicit or otherwise) of an instance of this object to a value x must be rejected if the bitwise logical-AND of x with the value of the corresponding instance of the juniIpRouteStaticDest object is not equal to juniIpRouteStaticDest.')
juniIpRouteStaticPref = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteStaticPref.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticPref.setDescription('The preference of this static route. Higher values correspond to higher preference. A static route with preference of zero will never be installed as an active route.')
juniIpRouteStaticNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 4), JuniIpAddrLessIf()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteStaticNextHop.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticNextHop.setDescription('The address of the next hop toward the destination.')
juniIpRouteStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticRowStatus.setDescription('The row status variable, used according to row installation and removal conventions.')
juniIpRouteStaticIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticIfIndex.setDescription('The ifIndex value which identifies the local interface through which the next hop of this route should be reached. A value of zero means the router should automatically determine the interface through which the specified next-hop address is reached. An implementation may disallow non-zero values from being configured.')
juniIpRouteStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1), ("incomplete", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpRouteStaticStatus.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticStatus.setDescription('The operational status of this static route. active(0) indicates this route is currently being used to reach the specified destination. inactive(1) indicates this route is considered valid, but currently is superseded by another routing table entry for the destination, having a higher preference value. incomplete(2) indicates this route entry contains information that is incomplete, or is inconsistent with other system configuration (for example, the interface specified in juniIpRouteStaticIfIndex does not exist).')
juniIpRouteStaticNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticNextHopAS.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticNextHopAS.setDescription("The Autonomous System Number of the Next Hop. The semantics of this object are determined by the routing-protocol specified in the route's ipCidrRouteProto value. When this object is unknown or not relevant its value should be set to zero.")
juniIpRouteStaticMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 9), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticMetric.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticMetric.setDescription("The primary routing metric for this route. The semantics of this metric are determined by the routing-protocol specified in the route's ipCidrRouteProto value. If this metric is not used, its value should be set to -1.")
juniIpRouteStaticTag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 2, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticTag.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticTag.setDescription('A tag value for this static route.')
juniIpCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 3), )
if mibBuilder.loadTexts: juniIpCidrRouteTable.setStatus('current')
if mibBuilder.loadTexts: juniIpCidrRouteTable.setDescription("Table of routes active on this entity. This table is an augmentation of the IP-FORWARD-MIB's ipCidrRouteTable.")
juniIpCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 3, 1), )
ipCidrRouteEntry.registerAugmentions(("Juniper-IP-MIB", "juniIpCidrRouteEntry"))
juniIpCidrRouteEntry.setIndexNames(*ipCidrRouteEntry.getIndexNames())
if mibBuilder.loadTexts: juniIpCidrRouteEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpCidrRouteEntry.setDescription('Additional attributes of an active route.')
juniIpCidrRoutePref = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpCidrRoutePref.setStatus('current')
if mibBuilder.loadTexts: juniIpCidrRoutePref.setDescription('The preference of this route. Higher values correspond to higher preference.')
juniIpCidrRouteArea = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpCidrRouteArea.setStatus('current')
if mibBuilder.loadTexts: juniIpCidrRouteArea.setDescription('The Area to which this route pertains. A value of 0.0.0.0 indicates no area is identified.')
juniIpCidrRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpCidrRouteTag.setStatus('current')
if mibBuilder.loadTexts: juniIpCidrRouteTag.setDescription('A tag value for this route.')
juniIpRouteStaticBFDTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4), )
if mibBuilder.loadTexts: juniIpRouteStaticBFDTable.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBFDTable.setDescription('The Juniper IP interface table describes the BFD-specific characteristics of interfaces.')
juniIpRouteStaticBFDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4, 1), )
juniIpRouteStaticEntry.registerAugmentions(("Juniper-IP-MIB", "juniIpRouteStaticBFDEntry"))
juniIpRouteStaticBFDEntry.setIndexNames(*juniIpRouteStaticEntry.getIndexNames())
if mibBuilder.loadTexts: juniIpRouteStaticBFDEntry.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBFDEntry.setDescription('The Juniper IP interface table describes the BFD-specific characteristics of one interface.')
juniIpRouteStaticBfdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticBfdEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBfdEnable.setDescription('This variable indicates whether BFD session on the interface is active or not')
juniIpRouteStaticBfdMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 65535)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticBfdMinRxInterval.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBfdMinRxInterval.setDescription('This variable specifies upper-limit on rate local-system requires remote-system to transmit bfd control-packets [milliseconds]')
juniIpRouteStaticBfdMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 65535)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticBfdMinTxInterval.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBfdMinTxInterval.setDescription('This variable specifies lower-limit on rate local-system requires remote-system to transmit bfd control-packets [milliseconds]')
juniIpRouteStaticBfdMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpRouteStaticBfdMultiplier.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBfdMultiplier.setDescription('This variable specifies detection-multiplier ')
juniIpTrapEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 2))
juniIpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3))
juniIpTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 0))
juniIpSaValidateTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpSaValidateTrapEnable.setStatus('current')
if mibBuilder.loadTexts: juniIpSaValidateTrapEnable.setDescription('Set to true to enable source address validation traps.')
juniIpRouteTableTrapRouteLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 0, 1)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableLimit"), ("IP-FORWARD-MIB", "ipCidrRouteNumber"))
if mibBuilder.loadTexts: juniIpRouteTableTrapRouteLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableTrapRouteLimitExceeded.setDescription('The juniIpRouteTableTrapRouteLimitExceeded Trap indicates that the configured route Table Limit has been exceeded. Issued once every 5 minutes that the limit is being exceeded.')
juniIpRouteTableTrapRouteLimitRemove = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 0, 2)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableLimit"), ("IP-FORWARD-MIB", "ipCidrRouteNumber"))
if mibBuilder.loadTexts: juniIpRouteTableTrapRouteLimitRemove.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableTrapRouteLimitRemove.setDescription('The juniIpRouteTableTrapRouteTableLimitRemove Trap indicates that routes have been freed up for 30 seconds and the Route Table Limit is no longer being violated. Issued once.')
juniIpRouteTableTrapWarnThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 0, 3)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableLimit"), ("Juniper-IP-MIB", "juniIpRouteTableWarnThreshold"), ("IP-FORWARD-MIB", "ipCidrRouteNumber"))
if mibBuilder.loadTexts: juniIpRouteTableTrapWarnThresholdExceeded.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteTableTrapWarnThresholdExceeded.setDescription('The juniIpRouteTableTrapWarnThresholdExceeded Trap indicates that the computed warning threshold has been exceeded. Issued once every 5 minutes that the warning threshold is being execeeded.')
juniIpTrapSaValidationFailure = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("Juniper-IP-MIB", "juniIpIfSaValFailSrcIpAddr"), ("Juniper-IP-MIB", "juniIpIfSaValFailDestIpAddr"))
if mibBuilder.loadTexts: juniIpTrapSaValidationFailure.setStatus('current')
if mibBuilder.loadTexts: juniIpTrapSaValidationFailure.setDescription('The juniIpTrapSaValidationFailure Trap indicates that a source address validation failure occurred on an interface. The interface on which the failure occurred, the source ip address and the destination ip address of the packet causing the failure are returned.')
juniIpMIBNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 1))
juniIpIfSaValFailSrcIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniIpIfSaValFailSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSaValFailSrcIpAddr.setDescription('The source IP address of the packet that caused the last source address validation failure on the IP interface.')
juniIpIfSaValFailDestIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 3, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniIpIfSaValFailDestIpAddr.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSaValFailDestIpAddr.setDescription('The destination IP address of the packet that caused the last source address validation failure on the IP interface.')
juniIpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4))
juniIpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1))
juniIpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2))
juniIpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 1)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup"), ("Juniper-IP-MIB", "juniIpAddressGroup"), ("Juniper-IP-MIB", "juniIpRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance = juniIpCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when the IP interface and IP address groups changed and the global objects were added.')
juniIpCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 2)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup2"), ("Juniper-IP-MIB", "juniIpAddressGroup2"), ("Juniper-IP-MIB", "juniIpRouteGroup"), ("Juniper-IP-MIB", "juniIpGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance2 = juniIpCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance2.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when the juniIpIfAssocTable was added.')
juniIpCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 3)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup3"), ("Juniper-IP-MIB", "juniIpAddressGroup2"), ("Juniper-IP-MIB", "juniIpRouteGroup"), ("Juniper-IP-MIB", "juniIpGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance3 = juniIpCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance3.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when the QoS related objects were obsoleted.')
juniIpCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 4)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup4"), ("Juniper-IP-MIB", "juniIpAddressGroup2"), ("Juniper-IP-MIB", "juniIpRouteGroup"), ("Juniper-IP-MIB", "juniIpGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance4 = juniIpCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance4.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when the QoS related objects were obsoleted.')
juniIpCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 5)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup4"), ("Juniper-IP-MIB", "juniIpAddressGroup3"), ("Juniper-IP-MIB", "juniIpRouteGroup2"), ("Juniper-IP-MIB", "juniIpGlobalGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance5 = juniIpCompliance5.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance5.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when support was added for router index and unnumbered interfaces referencing numbered interfaces.')
juniIpCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 6)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup5"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup2"), ("Juniper-IP-MIB", "juniIpGlobalGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance6 = juniIpCompliance6.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance6.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when interface mirroring and interface auto configure support was added.')
juniIpCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 7)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup6"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup2"), ("Juniper-IP-MIB", "juniIpGlobalGroup2"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance7 = juniIpCompliance7.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance7.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when interface TCP MSS feature was added.')
juniIpCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 8)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup7"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup2"), ("Juniper-IP-MIB", "juniIpGlobalGroup2"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance8 = juniIpCompliance8.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance8.setDescription('Obsolete compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when juniIpVpnIdOui and juniIpVpnIdIndex were obsoleted.')
juniIpCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 9)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup7"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup2"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance9 = juniIpCompliance9.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance9.setDescription('The compliance statement for entities which implement the Juniper IP MIB.')
juniIpCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 10)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup7"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup3"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance10 = juniIpCompliance10.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance10.setDescription('The compliance statement for entities which implement the Juniper IP MIB.')
juniIpCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 11)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup7"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup3"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationGroup1"), ("Juniper-IP-MIB", "juniIpMIBNotificationObjectsGroup"), ("Juniper-IP-MIB", "juniIpRouteSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance11 = juniIpCompliance11.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance11.setDescription('The compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when juniIpVpnIdOui and juniIpVpnIdIndex were obsoleted.')
juniIpCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 12)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup7"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup3"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationGroup1"), ("Juniper-IP-MIB", "juniIpMIBNotificationObjectsGroup"), ("Juniper-IP-MIB", "juniIpRouteSummaryGroup"), ("Juniper-IP-MIB", "juniIpRouteStaticBFDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance12 = juniIpCompliance12.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance12.setDescription('The compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when juniIpIfInitSeqPrefOper and juniIpIfInitSeqPrefAdmin were added.')
juniIpCompliance13 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 13)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup8"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup3"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationGroup1"), ("Juniper-IP-MIB", "juniIpMIBNotificationObjectsGroup"), ("Juniper-IP-MIB", "juniIpRouteSummaryGroup"), ("Juniper-IP-MIB", "juniIpRouteStaticBFDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance13 = juniIpCompliance13.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpCompliance13.setDescription('The compliance statement for entities which implement the Juniper IP MIB. This statement became obsolete when juniIpIfArpSpoofCheck was added.')
juniIpCompliance14 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 1, 14)).setObjects(("Juniper-IP-MIB", "juniIpInterfaceGroup9"), ("Juniper-IP-MIB", "juniIpAddressGroup4"), ("Juniper-IP-MIB", "juniIpRouteGroup3"), ("Juniper-IP-MIB", "juniIpGlobalGroup3"), ("Juniper-IP-MIB", "juniIpIfSummaryGroup"), ("Juniper-IP-MIB", "juniIpNotificationGroup1"), ("Juniper-IP-MIB", "juniIpMIBNotificationObjectsGroup"), ("Juniper-IP-MIB", "juniIpRouteSummaryGroup"), ("Juniper-IP-MIB", "juniIpRouteStaticBFDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpCompliance14 = juniIpCompliance14.setStatus('current')
if mibBuilder.loadTexts: juniIpCompliance14.setDescription('The compliance statement for entities which implement the Juniper IP MIB.')
juniIpInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 1)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup = juniIpInterfaceGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when new objects were added to the juniIpIfTable and the juniIpIfStatsTable.')
juniIpAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 2)).setObjects(("Juniper-IP-MIB", "juniIpArpTimeout"), ("Juniper-IP-MIB", "juniIpAdEntRowStatus"), ("Juniper-IP-MIB", "juniIpAdEntIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntNetMask"), ("Juniper-IP-MIB", "juniIpAdEntAdminStatus"), ("Juniper-IP-MIB", "juniIpAdEntArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntProxyArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntIgmpEnable"), ("Juniper-IP-MIB", "juniIpAdEntDirectedBcastEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpRedirectEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpMaskReplyEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpUnreachEnable"), ("Juniper-IP-MIB", "juniIpAdEntMtu"), ("Juniper-IP-MIB", "juniIpAdEntUnnumLoopbackIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntIrdpEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteHost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpAddressGroup = juniIpAddressGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpAddressGroup.setDescription('Obsolete collection of objects for managing IP address capabilities in a Juniper product. This group became obsolete when juniIpAdEntIgmpEnable was deprecated and juniIpAdEntIsSecondary was added.')
juniIpRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 3)).setObjects(("Juniper-IP-MIB", "juniIpRouteLimit"), ("Juniper-IP-MIB", "juniIpRouteStaticDest"), ("Juniper-IP-MIB", "juniIpRouteStaticMask"), ("Juniper-IP-MIB", "juniIpRouteStaticPref"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHop"), ("Juniper-IP-MIB", "juniIpRouteStaticRowStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticIfIndex"), ("Juniper-IP-MIB", "juniIpRouteStaticStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHopAS"), ("Juniper-IP-MIB", "juniIpRouteStaticMetric"), ("Juniper-IP-MIB", "juniIpRouteStaticTag"), ("Juniper-IP-MIB", "juniIpCidrRoutePref"), ("Juniper-IP-MIB", "juniIpCidrRouteArea"), ("Juniper-IP-MIB", "juniIpCidrRouteTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpRouteGroup = juniIpRouteGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpRouteGroup.setDescription('Obsolete collection of objects for managing IP routing capabilities in a Juniper product. This group became obsolete when juniIpRouteLimit was obsoleted.')
juniIpGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 4)).setObjects(("Juniper-IP-MIB", "juniIpDebounceTime"), ("Juniper-IP-MIB", "juniIpRouterId"), ("Juniper-IP-MIB", "juniIpSourceRoutingAdminStatus"), ("Juniper-IP-MIB", "juniIpVpnIdOui"), ("Juniper-IP-MIB", "juniIpVpnIdIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpGlobalGroup = juniIpGlobalGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpGlobalGroup.setDescription('Obsolete collection of IP global objects for managing instances of IP in a Juniper product. This group became obsolete when BGP new format objects were added.')
juniIpInterfaceGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 5)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfLoopback"), ("Juniper-IP-MIB", "juniIpIfLoopbackUid"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsGreenOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsYellowOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsRedOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsGreenOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsYellowOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsRedOutSchedDropOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup2 = juniIpInterfaceGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup2.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the juniIpIfAssocTable was added.')
juniIpAddressGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 6)).setObjects(("Juniper-IP-MIB", "juniIpArpTimeout"), ("Juniper-IP-MIB", "juniIpAdEntRowStatus"), ("Juniper-IP-MIB", "juniIpAdEntIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntNetMask"), ("Juniper-IP-MIB", "juniIpAdEntBcastAddr"), ("Juniper-IP-MIB", "juniIpAdEntReasmMaxSize"), ("Juniper-IP-MIB", "juniIpAdEntAdminStatus"), ("Juniper-IP-MIB", "juniIpAdEntArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntProxyArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntDirectedBcastEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpRedirectEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpMaskReplyEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpUnreachEnable"), ("Juniper-IP-MIB", "juniIpAdEntMtu"), ("Juniper-IP-MIB", "juniIpAdEntUnnumLoopbackIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntIrdpEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteHost"), ("Juniper-IP-MIB", "juniIpAdEntIsSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpAddressGroup2 = juniIpAddressGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpAddressGroup2.setDescription('Obsolete collection of objects for managing IP address capabilities in a Juniper product. This group became obsolete when when juniIpArpTimeout was obsoleted.')
juniIpInterfaceGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 7)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfLoopback"), ("Juniper-IP-MIB", "juniIpIfLoopbackUid"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutRequestedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsGreenOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsYellowOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsRedOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsGreenOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsYellowOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsRedOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup3 = juniIpInterfaceGroup3.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup3.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the QoS related objects were obsoleted.')
juniIpInterfaceGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 8)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfLoopback"), ("Juniper-IP-MIB", "juniIpIfLoopbackUid"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup4 = juniIpInterfaceGroup4.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup4.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the juniIpIfInheritNum and juniIpIfInheritNumUid objects were added and juniIpIfLoopback and juniIpIfLoopbackUid were deprecated.')
juniIpAddressGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 9)).setObjects(("Juniper-IP-MIB", "juniIpAdEntRowStatus"), ("Juniper-IP-MIB", "juniIpAdEntIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntNetMask"), ("Juniper-IP-MIB", "juniIpAdEntBcastAddr"), ("Juniper-IP-MIB", "juniIpAdEntReasmMaxSize"), ("Juniper-IP-MIB", "juniIpAdEntAdminStatus"), ("Juniper-IP-MIB", "juniIpAdEntArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntProxyArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntDirectedBcastEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpRedirectEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpMaskReplyEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpUnreachEnable"), ("Juniper-IP-MIB", "juniIpAdEntMtu"), ("Juniper-IP-MIB", "juniIpAdEntUnnumLoopbackIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntIrdpEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteHost"), ("Juniper-IP-MIB", "juniIpAdEntIsSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpAddressGroup3 = juniIpAddressGroup3.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpAddressGroup3.setDescription('Obsolete collection of objects for managing IP address capabilities in a Juniper product. This group became obsolete when the juniIpAdEntUnnumInheritNumIfIndex object was added and juniIpAdEntUnnumLoopbackIfIndex was deprecated.')
juniIpRouteGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 10)).setObjects(("Juniper-IP-MIB", "juniIpRouteStaticDest"), ("Juniper-IP-MIB", "juniIpRouteStaticMask"), ("Juniper-IP-MIB", "juniIpRouteStaticPref"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHop"), ("Juniper-IP-MIB", "juniIpRouteStaticRowStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticIfIndex"), ("Juniper-IP-MIB", "juniIpRouteStaticStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHopAS"), ("Juniper-IP-MIB", "juniIpRouteStaticMetric"), ("Juniper-IP-MIB", "juniIpRouteStaticTag"), ("Juniper-IP-MIB", "juniIpCidrRoutePref"), ("Juniper-IP-MIB", "juniIpCidrRouteArea"), ("Juniper-IP-MIB", "juniIpCidrRouteTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpRouteGroup2 = juniIpRouteGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpRouteGroup2.setDescription('A collection of objects for managing IP routing capabilities in a Juniper product.')
juniIpGlobalGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 11)).setObjects(("Juniper-IP-MIB", "juniIpDebounceTime"), ("Juniper-IP-MIB", "juniIpRouterId"), ("Juniper-IP-MIB", "juniIpSourceRoutingAdminStatus"), ("Juniper-IP-MIB", "juniIpVpnIdOui"), ("Juniper-IP-MIB", "juniIpVpnIdIndex"), ("Juniper-IP-MIB", "juniIpBgpCommunityNewFormat"), ("Juniper-IP-MIB", "juniIpBgpAsConfedSetNewFormat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpGlobalGroup2 = juniIpGlobalGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpGlobalGroup2.setDescription('Obsolete collection of IP global objects for managing instances of IP in a Juniper product. This group became obsolete when juniIpVpnIdOui and juniIpVpnIdIndex were obsoleted.')
juniIpInterfaceGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 12)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfRouterIndex"), ("Juniper-IP-MIB", "juniIpIfInheritNum"), ("Juniper-IP-MIB", "juniIpIfInheritNumUid"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup5 = juniIpInterfaceGroup5.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup5.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the juniIpIfAnalyzerMode object was added.')
juniIpAddressGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 13)).setObjects(("Juniper-IP-MIB", "juniIpAdEntRowStatus"), ("Juniper-IP-MIB", "juniIpAdEntIfIndex"), ("Juniper-IP-MIB", "juniIpAdEntNetMask"), ("Juniper-IP-MIB", "juniIpAdEntBcastAddr"), ("Juniper-IP-MIB", "juniIpAdEntReasmMaxSize"), ("Juniper-IP-MIB", "juniIpAdEntAdminStatus"), ("Juniper-IP-MIB", "juniIpAdEntArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntProxyArpRspEnable"), ("Juniper-IP-MIB", "juniIpAdEntDirectedBcastEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpRedirectEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpMaskReplyEnable"), ("Juniper-IP-MIB", "juniIpAdEntIcmpUnreachEnable"), ("Juniper-IP-MIB", "juniIpAdEntMtu"), ("Juniper-IP-MIB", "juniIpAdEntIrdpEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteEnable"), ("Juniper-IP-MIB", "juniIpAdEntAccessRouteHost"), ("Juniper-IP-MIB", "juniIpAdEntIsSecondary"), ("Juniper-IP-MIB", "juniIpAdEntUnnumInheritNumIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpAddressGroup4 = juniIpAddressGroup4.setStatus('current')
if mibBuilder.loadTexts: juniIpAddressGroup4.setDescription('A collection of objects for managing IP address capabilities in a Juniper product.')
juniIpInterfaceDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 14)).setObjects(("Juniper-IP-MIB", "juniIpIfLoopback"), ("Juniper-IP-MIB", "juniIpIfLoopbackUid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceDeprecatedGroup = juniIpInterfaceDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpInterfaceDeprecatedGroup.setDescription('A collection of deprecated objects for managing IP interface capabilities in a Juniper product. This group may continue to be support on some products.')
juniIpAddressDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 15)).setObjects(("Juniper-IP-MIB", "juniIpAdEntIgmpEnable"), ("Juniper-IP-MIB", "juniIpAdEntUnnumLoopbackIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpAddressDeprecatedGroup = juniIpAddressDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniIpAddressDeprecatedGroup.setDescription('A collection of deprecated objects for managing IP address capabilities in a Juniper product. This group may continue to be support on some products.')
juniIpInterfaceGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 16)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfRouterIndex"), ("Juniper-IP-MIB", "juniIpIfInheritNum"), ("Juniper-IP-MIB", "juniIpIfInheritNumUid"), ("Juniper-IP-MIB", "juniIpIfAnalyzerMode"), ("Juniper-IP-MIB", "juniIpIfAutoConfigure"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup6 = juniIpInterfaceGroup6.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup6.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the juniIpIfTcpMss object was added.')
juniIpIfSummaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 17)).setObjects(("Juniper-IP-MIB", "juniIpIfSummaryTotalIntf"), ("Juniper-IP-MIB", "juniIpIfSummaryTotalIntfUp"), ("Juniper-IP-MIB", "juniIpIfSummaryTotalIntfDown"), ("Juniper-IP-MIB", "juniIpIfSummaryTotalIntfProtUp"), ("Juniper-IP-MIB", "juniIpIfSummaryTotalIntfProtDown"), ("Juniper-IP-MIB", "juniIpIfSummaryTotalIntfProtNotPresent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpIfSummaryGroup = juniIpIfSummaryGroup.setStatus('current')
if mibBuilder.loadTexts: juniIpIfSummaryGroup.setDescription('A collection of IP Interface Summary Statistics.')
juniIpInterfaceGroup7 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 18)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfRouterIndex"), ("Juniper-IP-MIB", "juniIpIfInheritNum"), ("Juniper-IP-MIB", "juniIpIfInheritNumUid"), ("Juniper-IP-MIB", "juniIpIfAnalyzerMode"), ("Juniper-IP-MIB", "juniIpIfAutoConfigure"), ("Juniper-IP-MIB", "juniIpIfTcpMss"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup7 = juniIpInterfaceGroup7.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup7.setDescription('Obsolete collection of objects for managing IP interface capabilities in a Juniper product. This group became obsolete when the juniIpIfInitSeqPrefOper and juniIpIfInitSeqPrefAdmin objects were added.')
juniIpGlobalGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 19)).setObjects(("Juniper-IP-MIB", "juniIpDebounceTime"), ("Juniper-IP-MIB", "juniIpRouterId"), ("Juniper-IP-MIB", "juniIpSourceRoutingAdminStatus"), ("Juniper-IP-MIB", "juniIpBgpCommunityNewFormat"), ("Juniper-IP-MIB", "juniIpBgpAsConfedSetNewFormat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpGlobalGroup3 = juniIpGlobalGroup3.setStatus('current')
if mibBuilder.loadTexts: juniIpGlobalGroup3.setDescription('A collection of IP global objects for managing instances of IP in a Juniper product.')
juniIpRouteGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 20)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableLimit"), ("Juniper-IP-MIB", "juniIpRouteTableWarnPercent"), ("Juniper-IP-MIB", "juniIpRouteTableWarnOnly"), ("Juniper-IP-MIB", "juniIpRouteTableWarnThreshold"), ("Juniper-IP-MIB", "juniIpRouteStaticDest"), ("Juniper-IP-MIB", "juniIpRouteStaticMask"), ("Juniper-IP-MIB", "juniIpRouteStaticPref"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHop"), ("Juniper-IP-MIB", "juniIpRouteStaticRowStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticIfIndex"), ("Juniper-IP-MIB", "juniIpRouteStaticStatus"), ("Juniper-IP-MIB", "juniIpRouteStaticNextHopAS"), ("Juniper-IP-MIB", "juniIpRouteStaticMetric"), ("Juniper-IP-MIB", "juniIpRouteStaticTag"), ("Juniper-IP-MIB", "juniIpCidrRoutePref"), ("Juniper-IP-MIB", "juniIpCidrRouteArea"), ("Juniper-IP-MIB", "juniIpCidrRouteTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpRouteGroup3 = juniIpRouteGroup3.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteGroup3.setDescription('A collection of objects for managing IP routing capabilities in a Juniper product.')
juniIpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 21)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableTrapRouteLimitExceeded"), ("Juniper-IP-MIB", "juniIpRouteTableTrapRouteLimitRemove"), ("Juniper-IP-MIB", "juniIpRouteTableTrapWarnThresholdExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpNotificationGroup = juniIpNotificationGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpNotificationGroup.setDescription('The management notifications pertaining to IP Route Table state changes.')
juniIpNotificationGroup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 22)).setObjects(("Juniper-IP-MIB", "juniIpRouteTableTrapRouteLimitExceeded"), ("Juniper-IP-MIB", "juniIpRouteTableTrapRouteLimitRemove"), ("Juniper-IP-MIB", "juniIpRouteTableTrapWarnThresholdExceeded"), ("Juniper-IP-MIB", "juniIpTrapSaValidationFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpNotificationGroup1 = juniIpNotificationGroup1.setStatus('current')
if mibBuilder.loadTexts: juniIpNotificationGroup1.setDescription('The management notifications pertaining to IP.')
juniIpMIBNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 23)).setObjects(("Juniper-IP-MIB", "juniIpIfSaValFailSrcIpAddr"), ("Juniper-IP-MIB", "juniIpIfSaValFailDestIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpMIBNotificationObjectsGroup = juniIpMIBNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: juniIpMIBNotificationObjectsGroup.setDescription('The management notification objects pertaining to IP.')
juniIpRouteSummaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 24)).setObjects(("Juniper-IP-MIB", "juniIpRouteSummaryUnicastTotalRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastTotalBytes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIsisRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIsisLevel1Routes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIsisLevel2Routes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastRipRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastStaticRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastConnectedRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastBgpRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIntraAreaOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastOtherInternalRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastExternalOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastInterAreaOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastAccessRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastIntDialoutRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastRouteMemoryActive"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient"), ("Juniper-IP-MIB", "juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastTotalRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastTotalBytes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastIsisRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLevel1IsisRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLevel2IsisRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastRipRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastStaticRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastConnectedRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastBgpRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastIntraAreaOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastInterAreaOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastExternalOspfRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastOtherInternalRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastAccessRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMultiastIntDialoutRoutes"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastRouteMemoryActive"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient"), ("Juniper-IP-MIB", "juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpRouteSummaryGroup = juniIpRouteSummaryGroup.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteSummaryGroup.setDescription('The management notifications pertaining to IP Route Table state changes.')
juniIpRouteStaticBFDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 25)).setObjects(("Juniper-IP-MIB", "juniIpRouteStaticBfdEnable"), ("Juniper-IP-MIB", "juniIpRouteStaticBfdMinRxInterval"), ("Juniper-IP-MIB", "juniIpRouteStaticBfdMinTxInterval"), ("Juniper-IP-MIB", "juniIpRouteStaticBfdMultiplier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpRouteStaticBFDGroup = juniIpRouteStaticBFDGroup.setStatus('current')
if mibBuilder.loadTexts: juniIpRouteStaticBFDGroup.setDescription('The management notifications pertaining to IP Route Table state changes.')
juniIpInterfaceGroup8 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 26)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfRouterIndex"), ("Juniper-IP-MIB", "juniIpIfInheritNum"), ("Juniper-IP-MIB", "juniIpIfInheritNumUid"), ("Juniper-IP-MIB", "juniIpIfAnalyzerMode"), ("Juniper-IP-MIB", "juniIpIfAutoConfigure"), ("Juniper-IP-MIB", "juniIpIfTcpMss"), ("Juniper-IP-MIB", "juniIpIfInitSeqPrefOper"), ("Juniper-IP-MIB", "juniIpIfInitSeqPrefAdmin"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup8 = juniIpInterfaceGroup8.setStatus('obsolete')
if mibBuilder.loadTexts: juniIpInterfaceGroup8.setDescription('A collection of objects for managing IP interface capabilities in a Juniper product.')
juniIpInterfaceGroup9 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 12, 4, 2, 27)).setObjects(("Juniper-IP-MIB", "juniIpNextIfIndex"), ("Juniper-IP-MIB", "juniIpIfRowStatus"), ("Juniper-IP-MIB", "juniIpIfLowerIfIndex"), ("Juniper-IP-MIB", "juniIpIfType"), ("Juniper-IP-MIB", "juniIpIfTypeId"), ("Juniper-IP-MIB", "juniIpIfSAValidationEnable"), ("Juniper-IP-MIB", "juniIpIfCreationType"), ("Juniper-IP-MIB", "juniIpIfProfileId"), ("Juniper-IP-MIB", "juniIpIfAlwaysUp"), ("Juniper-IP-MIB", "juniIpIfDebounceTime"), ("Juniper-IP-MIB", "juniIpIfForwarding"), ("Juniper-IP-MIB", "juniIpIfForceFragmentation"), ("Juniper-IP-MIB", "juniIpIfSharesLowerUid"), ("Juniper-IP-MIB", "juniIpIfFilterOptions"), ("Juniper-IP-MIB", "juniIpIfName"), ("Juniper-IP-MIB", "juniIpIfArpTimeout"), ("Juniper-IP-MIB", "juniIpIfAdminSpeed"), ("Juniper-IP-MIB", "juniIpIfMultipathMode"), ("Juniper-IP-MIB", "juniIpIfSharedNhAddr"), ("Juniper-IP-MIB", "juniIpIfSharedNhRouterId"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpAddress"), ("Juniper-IP-MIB", "juniIpIfPrimaryIpMask"), ("Juniper-IP-MIB", "juniIpIfOperDebounceTime"), ("Juniper-IP-MIB", "juniIpIfRouterIndex"), ("Juniper-IP-MIB", "juniIpIfInheritNum"), ("Juniper-IP-MIB", "juniIpIfInheritNumUid"), ("Juniper-IP-MIB", "juniIpIfAnalyzerMode"), ("Juniper-IP-MIB", "juniIpIfAutoConfigure"), ("Juniper-IP-MIB", "juniIpIfTcpMss"), ("Juniper-IP-MIB", "juniIpIfInitSeqPrefOper"), ("Juniper-IP-MIB", "juniIpIfInitSeqPrefAdmin"), ("Juniper-IP-MIB", "juniIpIfArpSpoofCheck"), ("Juniper-IP-MIB", "juniIpIfStatsInPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsInErrorPackets"), ("Juniper-IP-MIB", "juniIpIfStatsInSpoofedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutForwardedOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutSchedDropOctets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedPackets"), ("Juniper-IP-MIB", "juniIpIfStatsOutPoliciedOctets"), ("Juniper-IP-MIB", "juniIpIfAssocIpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpInterfaceGroup9 = juniIpInterfaceGroup9.setStatus('current')
if mibBuilder.loadTexts: juniIpInterfaceGroup9.setDescription('A collection of objects for managing IP interface capabilities in a Juniper product.')
mibBuilder.exportSymbols("Juniper-IP-MIB", juniIpIfDebounceTime=juniIpIfDebounceTime, juniIpAdEntMtu=juniIpAdEntMtu, juniIpRouteGroup2=juniIpRouteGroup2, juniIpObjects=juniIpObjects, juniIpGlobalGroup2=juniIpGlobalGroup2, juniIpRouteSummaryMulticastOspfRoutes=juniIpRouteSummaryMulticastOspfRoutes, juniIpIfSummary=juniIpIfSummary, juniIpRouteSummaryUnicastOtherInternalRoutes=juniIpRouteSummaryUnicastOtherInternalRoutes, juniIpIfStatsInPoliciedOctets=juniIpIfStatsInPoliciedOctets, juniIpBgpCommunityNewFormat=juniIpBgpCommunityNewFormat, juniIpNextIfIndex=juniIpNextIfIndex, juniIpIfSharesLowerUid=juniIpIfSharesLowerUid, juniIpRouteStaticDest=juniIpRouteStaticDest, juniIpCidrRouteArea=juniIpCidrRouteArea, juniIpMIBNotificationObjects=juniIpMIBNotificationObjects, juniIpRouteStaticBfdMinTxInterval=juniIpRouteStaticBfdMinTxInterval, juniIpInterfaceGroup8=juniIpInterfaceGroup8, juniIpRouteSummaryMulticastLevel1IsisRoutes=juniIpRouteSummaryMulticastLevel1IsisRoutes, juniIpIfArpSpoofCheck=juniIpIfArpSpoofCheck, juniIpIfStatsInSpoofedPackets=juniIpIfStatsInSpoofedPackets, juniIpRouteSummaryMulticastInterAreaOspfRoutes=juniIpRouteSummaryMulticastInterAreaOspfRoutes, juniIpRouteSummaryMultiastIntDialoutRoutes=juniIpRouteSummaryMultiastIntDialoutRoutes, juniIpCompliance6=juniIpCompliance6, juniIpAdEntArpRspEnable=juniIpAdEntArpRspEnable, juniIpRouteSummaryUnicastStaticRoutes=juniIpRouteSummaryUnicastStaticRoutes, juniIpInterfaceGroup4=juniIpInterfaceGroup4, juniIpIfStatsOutPoliciedOctets=juniIpIfStatsOutPoliciedOctets, juniIpRouteMulticastSummary=juniIpRouteMulticastSummary, juniIpAdEntBcastAddr=juniIpAdEntBcastAddr, juniIpRouteSummaryUnicastRouteMemoryActive=juniIpRouteSummaryUnicastRouteMemoryActive, juniIpIfSaValFailSrcIpAddr=juniIpIfSaValFailSrcIpAddr, juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes=juniIpRouteSummaryUnicastIntCreatedAccessHostRoutes, juniIpAdEntProxyArpRspEnable=juniIpAdEntProxyArpRspEnable, juniIpAddressGroup4=juniIpAddressGroup4, juniIpIfSaValFailDestIpAddr=juniIpIfSaValFailDestIpAddr, juniIpAdEntUnnumLoopbackIfIndex=juniIpAdEntUnnumLoopbackIfIndex, juniIpRouteSummaryMulticastOtherInternalRoutes=juniIpRouteSummaryMulticastOtherInternalRoutes, juniIpIfIndex=juniIpIfIndex, juniIpAdEntIsSecondary=juniIpAdEntIsSecondary, juniIpIfPrimaryIpAddress=juniIpIfPrimaryIpAddress, juniIpIfStatsOutSchedDropOctets=juniIpIfStatsOutSchedDropOctets, juniIpRouteStaticBfdEnable=juniIpRouteStaticBfdEnable, juniIpRouteLimit=juniIpRouteLimit, juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate=juniIpRouteSummaryMulticastLastRouteAddedOrDeletedDate, juniIpRouteSummaryMulticastTotalBytes=juniIpRouteSummaryMulticastTotalBytes, juniIpIfStatsIndex=juniIpIfStatsIndex, juniIpRouteTableTrapWarnThresholdExceeded=juniIpRouteTableTrapWarnThresholdExceeded, juniIpIfRouterIndex=juniIpIfRouterIndex, juniIpAdEntIrdpEnable=juniIpAdEntIrdpEnable, juniIpGlobalGroup3=juniIpGlobalGroup3, juniIpCompliance3=juniIpCompliance3, juniIpIfStatsTable=juniIpIfStatsTable, juniIpRouteSummaryUnicastOspfRoutes=juniIpRouteSummaryUnicastOspfRoutes, juniIpIfSAValidationEnable=juniIpIfSAValidationEnable, juniIpIfSummaryTotalIntfProtNotPresent=juniIpIfSummaryTotalIntfProtNotPresent, juniIpIfLoopbackUid=juniIpIfLoopbackUid, juniIpIfForwarding=juniIpIfForwarding, juniIpRouteStaticBFDTable=juniIpRouteStaticBFDTable, juniIpIfStatsGreenOutSchedDropOctets=juniIpIfStatsGreenOutSchedDropOctets, juniIpCompliance12=juniIpCompliance12, juniIpCompliance2=juniIpCompliance2, juniIpInterface=juniIpInterface, juniIpRouteSummaryUnicastInterAreaOspfRoutes=juniIpRouteSummaryUnicastInterAreaOspfRoutes, juniIpAddrGlobals=juniIpAddrGlobals, juniIpCidrRouteTag=juniIpCidrRouteTag, juniIpTraps=juniIpTraps, juniIpRouteSummaryMulticastExternalOspfRoutes=juniIpRouteSummaryMulticastExternalOspfRoutes, juniIpTrapPrefix=juniIpTrapPrefix, juniIpInterfaceGroup3=juniIpInterfaceGroup3, juniIpIfAutoConfigure=juniIpIfAutoConfigure, juniIpIfStatsOutSchedDropPackets=juniIpIfStatsOutSchedDropPackets, juniIpIfStatsInForwardedOctets=juniIpIfStatsInForwardedOctets, juniIpInterfaceGroup6=juniIpInterfaceGroup6, juniIpCompliance7=juniIpCompliance7, juniIpIfStatsYellowOutSchedDropPackets=juniIpIfStatsYellowOutSchedDropPackets, juniIpRouteSummaryUnicastIsisLevel2Routes=juniIpRouteSummaryUnicastIsisLevel2Routes, juniIpRouteStaticNextHopAS=juniIpRouteStaticNextHopAS, juniIpIfAlwaysUp=juniIpIfAlwaysUp, juniIpAdEntIgmpEnable=juniIpAdEntIgmpEnable, juniIpRouteStaticMetric=juniIpRouteStaticMetric, juniIpRouteSummaryMulticastIsisRoutes=juniIpRouteSummaryMulticastIsisRoutes, juniIpIfSummaryTotalIntfProtUp=juniIpIfSummaryTotalIntfProtUp, juniIpAdEntDirectedBcastEnable=juniIpAdEntDirectedBcastEnable, juniIpRouteStaticStatus=juniIpRouteStaticStatus, juniIpAddressDeprecatedGroup=juniIpAddressDeprecatedGroup, juniIpRouteStaticNextHop=juniIpRouteStaticNextHop, juniIpIfStatsInOctets=juniIpIfStatsInOctets, juniIpInterfaceGroup7=juniIpInterfaceGroup7, juniIpIfStatsInPackets=juniIpIfStatsInPackets, juniIpIfFilterOptions=juniIpIfFilterOptions, juniIpIfStatsInPoliciedPackets=juniIpIfStatsInPoliciedPackets, juniIpAddrTable=juniIpAddrTable, juniIpAdEntUnnumInheritNumIfIndex=juniIpAdEntUnnumInheritNumIfIndex, juniIpIfStatsOutPoliciedPackets=juniIpIfStatsOutPoliciedPackets, juniIpAddressGroup2=juniIpAddressGroup2, juniIpRouteStaticBFDEntry=juniIpRouteStaticBFDEntry, juniIpRouteSummaryMulticastTotalRoutes=juniIpRouteSummaryMulticastTotalRoutes, juniIpRouteStaticIfIndex=juniIpRouteStaticIfIndex, juniIpCompliances=juniIpCompliances, juniIpAddressGroup=juniIpAddressGroup, juniIpIfSharedNhAddr=juniIpIfSharedNhAddr, juniIpCompliance5=juniIpCompliance5, juniIpIfSummaryTotalIntf=juniIpIfSummaryTotalIntf, juniIpArpTimeout=juniIpArpTimeout, juniIpAdEntNetMask=juniIpAdEntNetMask, juniIpIfLoopback=juniIpIfLoopback, juniIpIfInitSeqPrefOper=juniIpIfInitSeqPrefOper, juniIpIfType=juniIpIfType, juniIpRouteSummaryMulticastRipRoutes=juniIpRouteSummaryMulticastRipRoutes, juniIpSourceRoutingAdminStatus=juniIpSourceRoutingAdminStatus, juniIpIfArpTimeout=juniIpIfArpTimeout, juniIpGroups=juniIpGroups, juniIpAddrEntry=juniIpAddrEntry, juniIpAdEntIcmpRedirectEnable=juniIpAdEntIcmpRedirectEnable, juniIpRouteStaticRowStatus=juniIpRouteStaticRowStatus, juniIpAdEntRowStatus=juniIpAdEntRowStatus, juniIpRouteStaticPref=juniIpRouteStaticPref, juniIpRouteSummaryUnicastIntraAreaOspfRoutes=juniIpRouteSummaryUnicastIntraAreaOspfRoutes, juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP=juniIpRouteSummaryMulticastLastRouteAddedOrDeletedIP, juniIpRouteSummaryGroup=juniIpRouteSummaryGroup, juniIpIfSharedNhRouterId=juniIpIfSharedNhRouterId, juniIpIfInitSeqPrefAdmin=juniIpIfInitSeqPrefAdmin, juniIpMIB=juniIpMIB, juniIpIfStatsYellowOutSchedDropOctets=juniIpIfStatsYellowOutSchedDropOctets, juniIpRouteSummaryMulticastRouteMemoryActive=juniIpRouteSummaryMulticastRouteMemoryActive, juniIpRouteSummaryMulticastBgpRoutes=juniIpRouteSummaryMulticastBgpRoutes, juniIpSaValidateTrapEnable=juniIpSaValidateTrapEnable, juniIpInterfaceDeprecatedGroup=juniIpInterfaceDeprecatedGroup, juniIpIfName=juniIpIfName, juniIpTrapEnables=juniIpTrapEnables, juniIpRouteSummaryMulticastIntraAreaOspfRoutes=juniIpRouteSummaryMulticastIntraAreaOspfRoutes, juniIpIfTable=juniIpIfTable, juniIpIfAnalyzerMode=juniIpIfAnalyzerMode, juniIpMIBNotificationObjectsGroup=juniIpMIBNotificationObjectsGroup, juniIpIfStatsOutForwardedPackets=juniIpIfStatsOutForwardedPackets, juniIpIfEntry=juniIpIfEntry, juniIpRoute=juniIpRoute, juniIpIfPrimaryIpMask=juniIpIfPrimaryIpMask, juniIpRouteStaticEntry=juniIpRouteStaticEntry, juniIpVpnIdIndex=juniIpVpnIdIndex, juniIpIfStatsEntry=juniIpIfStatsEntry, juniIpTrapSaValidationFailure=juniIpTrapSaValidationFailure, juniIpIfTypeId=juniIpIfTypeId, juniIpIfSummaryTotalIntfDown=juniIpIfSummaryTotalIntfDown, juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP=juniIpRouteSummaryUnicastLastRouteAddedOrDeletedIP, juniIpConformance=juniIpConformance, juniIpInterfaceGroup=juniIpInterfaceGroup, juniIpBgpAsConfedSetNewFormat=juniIpBgpAsConfedSetNewFormat, juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient=juniIpRouteSummaryMulticastLastRouteAddedOrDeletedClient, juniIpRouteSummaryUnicastExternalOspfRoutes=juniIpRouteSummaryUnicastExternalOspfRoutes, juniIpIfInheritNumUid=juniIpIfInheritNumUid, juniIpIfStatsInErrorPackets=juniIpIfStatsInErrorPackets, juniIpRouteSummaryUnicastConnectedRoutes=juniIpRouteSummaryUnicastConnectedRoutes, juniIpAdEntAccessRouteEnable=juniIpAdEntAccessRouteEnable, juniIpIfTcpMss=juniIpIfTcpMss, juniIpCompliance9=juniIpCompliance9, juniIpRouteTableTrapRouteLimitRemove=juniIpRouteTableTrapRouteLimitRemove, juniIpRouteTableWarnOnly=juniIpRouteTableWarnOnly, juniIpIfAdminSpeed=juniIpIfAdminSpeed, juniIpRouteTableWarnPercent=juniIpRouteTableWarnPercent, juniIpIfSummaryTotalIntfUp=juniIpIfSummaryTotalIntfUp, juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes=juniIpRouteSummaryMulticastIntCreatedAccessHostRoutes, juniIpInterfaceGroup9=juniIpInterfaceGroup9, juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate=juniIpRouteSummaryUnicastLastRouteAddedOrDeletedDate, juniIpIfStatsOutRequestedOctets=juniIpIfStatsOutRequestedOctets, juniIpInterfaceGroup2=juniIpInterfaceGroup2, juniIpInterfaceGroup5=juniIpInterfaceGroup5, juniIpIfSummaryTotalIntfProtDown=juniIpIfSummaryTotalIntfProtDown, juniIpIfForceFragmentation=juniIpIfForceFragmentation, juniIpRouteStaticBfdMinRxInterval=juniIpRouteStaticBfdMinRxInterval, juniIpIfMultipathMode=juniIpIfMultipathMode, juniIpIfStatsGreenOutSchedDropPackets=juniIpIfStatsGreenOutSchedDropPackets, juniIpIfAssocEntry=juniIpIfAssocEntry, juniIpAddress=juniIpAddress, juniIpRouteStaticTag=juniIpRouteStaticTag, juniIpRouteGroup=juniIpRouteGroup, juniIpRouteSummaryUnicastTotalBytes=juniIpRouteSummaryUnicastTotalBytes, juniIpRouteTableLimit=juniIpRouteTableLimit, juniIpCompliance=juniIpCompliance, juniIpCompliance10=juniIpCompliance10, juniIpRouteGroup3=juniIpRouteGroup3, juniIpIfAssocLowerIfIndex=juniIpIfAssocLowerIfIndex, juniIpCidrRouteTable=juniIpCidrRouteTable, juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask=juniIpRouteSummaryMulticastLastRouteAddedOrDeletedMask, juniIpRouteTableTrapRouteLimitExceeded=juniIpRouteTableTrapRouteLimitExceeded, juniIpCompliance14=juniIpCompliance14, juniIpNotificationGroup=juniIpNotificationGroup, juniIpGlobalGroup=juniIpGlobalGroup, juniIpAdEntAdminStatus=juniIpAdEntAdminStatus, juniIpVpnIdOui=juniIpVpnIdOui, juniIpRouteSummaryUnicastIsisLevel1Routes=juniIpRouteSummaryUnicastIsisLevel1Routes, juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient=juniIpRouteSummaryUnicastLastRouteAddedOrDeletedClient, juniIpIfStatsRedOutSchedDropPackets=juniIpIfStatsRedOutSchedDropPackets, juniIpRouteSummaryMulticastConnectedRoutes=juniIpRouteSummaryMulticastConnectedRoutes, juniIpIfAssocIpIfIndex=juniIpIfAssocIpIfIndex, juniIpIfCreationType=juniIpIfCreationType, juniIpRouteStaticBfdMultiplier=juniIpRouteStaticBfdMultiplier, juniIpRouteUnicastSummary=juniIpRouteUnicastSummary, juniIpIfStatsOutForwardedOctets=juniIpIfStatsOutForwardedOctets, juniIpIfSummaryGroup=juniIpIfSummaryGroup, juniIpRouteSummaryUnicastBgpRoutes=juniIpRouteSummaryUnicastBgpRoutes, juniIpRouteSummaryUnicastAccessRoutes=juniIpRouteSummaryUnicastAccessRoutes, juniIpIfStatsRedOutSchedDropOctets=juniIpIfStatsRedOutSchedDropOctets, juniIpRouteSummaryUnicastRipRoutes=juniIpRouteSummaryUnicastRipRoutes, juniIpRouteSummaryUnicastIsisRoutes=juniIpRouteSummaryUnicastIsisRoutes, juniIpAddressGroup3=juniIpAddressGroup3, juniIpCompliance8=juniIpCompliance8, juniIpIfOperDebounceTime=juniIpIfOperDebounceTime, juniIpIfRowStatus=juniIpIfRowStatus, juniIpRouteGlobals=juniIpRouteGlobals, juniIpCidrRoutePref=juniIpCidrRoutePref, juniIpIfStatsInForwardedPackets=juniIpIfStatsInForwardedPackets, juniIpIfAssocTable=juniIpIfAssocTable, juniIpCompliance11=juniIpCompliance11, juniIpAdEntIfIndex=juniIpAdEntIfIndex, juniIpDebounceTime=juniIpDebounceTime, juniIpGlobals=juniIpGlobals, juniIpRouteSummaryUnicastTotalRoutes=juniIpRouteSummaryUnicastTotalRoutes, juniIpIfLowerIfIndex=juniIpIfLowerIfIndex, juniIpRouteSummaryMulticastLevel2IsisRoutes=juniIpRouteSummaryMulticastLevel2IsisRoutes, juniIpCompliance4=juniIpCompliance4, juniIpAdEntAddr=juniIpAdEntAddr, juniIpAdEntAccessRouteHost=juniIpAdEntAccessRouteHost, juniIpRouteSummaryMulticastStaticRoutes=juniIpRouteSummaryMulticastStaticRoutes, juniIpAdEntIcmpUnreachEnable=juniIpAdEntIcmpUnreachEnable, juniIpRouteSummaryUnicastIntDialoutRoutes=juniIpRouteSummaryUnicastIntDialoutRoutes, juniIpAdEntReasmMaxSize=juniIpAdEntReasmMaxSize, juniIpRouteTableWarnThreshold=juniIpRouteTableWarnThreshold, juniIpRouteStaticMask=juniIpRouteStaticMask, juniIpNotificationGroup1=juniIpNotificationGroup1, PYSNMP_MODULE_ID=juniIpMIB, juniIpRouterId=juniIpRouterId, juniIpIfStatsOutRequestedPackets=juniIpIfStatsOutRequestedPackets, juniIpAdEntIcmpMaskReplyEnable=juniIpAdEntIcmpMaskReplyEnable, juniIpRouteStaticTable=juniIpRouteStaticTable, juniIpIfProfileId=juniIpIfProfileId, juniIpCidrRouteEntry=juniIpCidrRouteEntry, juniIpRouteSummary=juniIpRouteSummary, juniIpCompliance13=juniIpCompliance13, juniIpRouteStaticBFDGroup=juniIpRouteStaticBFDGroup, juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask=juniIpRouteSummaryUnicastLastRouteAddedOrDeletedMask, juniIpRouteSummaryMulticastAccessRoutes=juniIpRouteSummaryMulticastAccessRoutes, juniIpIfInheritNum=juniIpIfInheritNum)
