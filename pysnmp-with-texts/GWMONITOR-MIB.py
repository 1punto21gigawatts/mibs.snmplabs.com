#
# PySNMP MIB module GWMONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GWMONITOR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:20:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, IpAddress, Counter64, Counter32, MibIdentifier, NotificationType, Unsigned32, enterprises, Integer32, TimeTicks, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "IpAddress", "Counter64", "Counter32", "MibIdentifier", "NotificationType", "Unsigned32", "enterprises", "Integer32", "TimeTicks", "Gauge32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
gwmontr = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 40))
gwmonserver = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 40, 5))
gwmonTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1))
gwmonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2))
gwmonTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: gwmonTrapTime.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonTrapTime.setDescription('The time the trap occurred. Seconds since Jan 1, 1970 (GMT)')
gwmonAgentName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonAgentName.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonAgentName.setDescription("Affected agent's name.")
gwmonAgentType = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonAgentType.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonAgentType.setDescription("Affected agent's type.")
gwmonStatus = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonStatus.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonStatus.setDescription('Status of the affected agent.')
gwmonStatusDuration = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 5), TimeTicks())
if mibBuilder.loadTexts: gwmonStatusDuration.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonStatusDuration.setDescription("Duration of affected agent's current status.")
gwmonThreshold = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonThreshold.setDescription('The threshold expression that has failed.')
gwmonThresholdValues = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonThresholdValues.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonThresholdValues.setDescription('The values used to determine the failure. For a threshold failure, these will be the threshold values at the time the threshold was evaluated.')
gwmonThresholdSeverity = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonThresholdSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonThresholdSeverity.setDescription('The severity of the exceeded threshold. It will be one of the following values: Unknown, Normal, Informational, Marginal, Warning, Minor, Major, Critical')
gwmonServerName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonServerName.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonServerName.setDescription("Affected agent's server name.")
gwmonServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: gwmonServerIPAddress.setStatus('mandatory')
if mibBuilder.loadTexts: gwmonServerIPAddress.setDescription("Affected agent's server IP Address.")
gwmonThresholdExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,1)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"), ("GWMONITOR-MIB", "gwmonAgentType"), ("GWMONITOR-MIB", "gwmonAgentName"), ("GWMONITOR-MIB", "gwmonServerName"), ("GWMONITOR-MIB", "gwmonServerIPAddress"), ("GWMONITOR-MIB", "gwmonThresholdValues"), ("GWMONITOR-MIB", "gwmonThresholdSeverity"))
if mibBuilder.loadTexts: gwmonThresholdExceededTrap.setDescription('GroupWise Monitor detects a threshold has been exceeded')
gwmonThresholdRecoveredTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,2)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"), ("GWMONITOR-MIB", "gwmonAgentType"), ("GWMONITOR-MIB", "gwmonAgentName"), ("GWMONITOR-MIB", "gwmonServerName"), ("GWMONITOR-MIB", "gwmonServerIPAddress"))
gwmonAgentDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,3)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"), ("GWMONITOR-MIB", "gwmonAgentType"), ("GWMONITOR-MIB", "gwmonAgentName"), ("GWMONITOR-MIB", "gwmonServerName"), ("GWMONITOR-MIB", "gwmonServerIPAddress"))
gwmonAgentUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,4)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"), ("GWMONITOR-MIB", "gwmonAgentType"), ("GWMONITOR-MIB", "gwmonAgentName"), ("GWMONITOR-MIB", "gwmonServerName"), ("GWMONITOR-MIB", "gwmonServerIPAddress"))
gwmonTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,5)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"))
gwmonPeriodicTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 40, 5, 2) + (0,6)).setObjects(("GWMONITOR-MIB", "gwmonTrapTime"))
mibBuilder.exportSymbols("GWMONITOR-MIB", gwmonTrapTime=gwmonTrapTime, gwmonTestTrap=gwmonTestTrap, gwmonThresholdExceededTrap=gwmonThresholdExceededTrap, gwmonAgentName=gwmonAgentName, mibDoc=mibDoc, gwmontr=gwmontr, gwmonStatusDuration=gwmonStatusDuration, gwmonStatus=gwmonStatus, novell=novell, gwmonThreshold=gwmonThreshold, gwmonThresholdRecoveredTrap=gwmonThresholdRecoveredTrap, gwmonTraps=gwmonTraps, gwmonAgentUpTrap=gwmonAgentUpTrap, gwmonAgentDownTrap=gwmonAgentDownTrap, gwmonThresholdSeverity=gwmonThresholdSeverity, gwmonAgentType=gwmonAgentType, gwmonThresholdValues=gwmonThresholdValues, gwmonServerName=gwmonServerName, gwmonTrapInfo=gwmonTrapInfo, gwmonserver=gwmonserver, gwmonServerIPAddress=gwmonServerIPAddress, gwmonPeriodicTrap=gwmonPeriodicTrap)
