#
# PySNMP MIB module SCHEDEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCHEDEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:01:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
schedExt, = mibBuilder.importSymbols("APENT-MIB", "schedExt")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, IpAddress, TimeTicks, MibIdentifier, ModuleIdentity, ObjectIdentity, Unsigned32, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "IpAddress", "TimeTicks", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "NotificationType", "Integer32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
schedExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 45, 1))
if mibBuilder.loadTexts: schedExtMib.setLastUpdated('9801282000Z')
if mibBuilder.loadTexts: schedExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: schedExtMib.setContactInfo('Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: schedExtMib.setDescription('This MIB module describes the ArrowPoint enterprise MIB support for CLI cmd scheduler records')
apSchedRecTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2), )
if mibBuilder.loadTexts: apSchedRecTable.setStatus('current')
if mibBuilder.loadTexts: apSchedRecTable.setDescription('A table of CLM cmd schedule records')
apSchedRecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1), ).setIndexNames((0, "SCHEDEXT-MIB", "apSchedRecName"))
if mibBuilder.loadTexts: apSchedRecEntry.setStatus('current')
if mibBuilder.loadTexts: apSchedRecEntry.setDescription('ArrowPoint Cmd Schedule record')
apSchedRecName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecName.setStatus('current')
if mibBuilder.loadTexts: apSchedRecName.setDescription('A name which uniquely identifies this schedule record')
apSchedRecMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecMin.setStatus('current')
if mibBuilder.loadTexts: apSchedRecMin.setDescription('The minute of the hour (0-59)')
apSchedRecHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecHour.setStatus('current')
if mibBuilder.loadTexts: apSchedRecHour.setDescription('The hour of the day (0-32)')
apSchedRecDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecDay.setStatus('current')
if mibBuilder.loadTexts: apSchedRecDay.setDescription('The day of the Month (1-31)')
apSchedRecMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecMonth.setStatus('current')
if mibBuilder.loadTexts: apSchedRecMonth.setDescription('The month ot the year (1-12)')
apSchedRecWDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecWDay.setStatus('current')
if mibBuilder.loadTexts: apSchedRecWDay.setDescription('The day of the week (1-7) Sunday=1')
apSchedRecCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecCmd.setStatus('current')
if mibBuilder.loadTexts: apSchedRecCmd.setDescription('command to be executed')
apSchedRecLogFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecLogFile.setStatus('current')
if mibBuilder.loadTexts: apSchedRecLogFile.setDescription('log file to capture output')
apSchedRecId = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSchedRecId.setStatus('current')
if mibBuilder.loadTexts: apSchedRecId.setDescription('A internal identifier for this record')
apSchedRecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 45, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSchedRecStatus.setStatus('current')
if mibBuilder.loadTexts: apSchedRecStatus.setDescription('This status object for this row')
apSchedEnable = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 45, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSchedEnable.setStatus('current')
if mibBuilder.loadTexts: apSchedEnable.setDescription('Parameter to enable or disable cmd scheduling functionality.')
apSchedLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 45, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSchedLogEnable.setStatus('current')
if mibBuilder.loadTexts: apSchedLogEnable.setDescription('Parameter to enable or disable cmd scheduling disk logging')
mibBuilder.exportSymbols("SCHEDEXT-MIB", apSchedRecMonth=apSchedRecMonth, apSchedRecWDay=apSchedRecWDay, apSchedRecMin=apSchedRecMin, apSchedRecCmd=apSchedRecCmd, apSchedRecLogFile=apSchedRecLogFile, apSchedLogEnable=apSchedLogEnable, apSchedRecTable=apSchedRecTable, apSchedRecEntry=apSchedRecEntry, schedExtMib=schedExtMib, apSchedRecStatus=apSchedRecStatus, apSchedRecId=apSchedRecId, apSchedRecHour=apSchedRecHour, apSchedRecDay=apSchedRecDay, PYSNMP_MODULE_ID=schedExtMib, apSchedEnable=apSchedEnable, apSchedRecName=apSchedRecName)
