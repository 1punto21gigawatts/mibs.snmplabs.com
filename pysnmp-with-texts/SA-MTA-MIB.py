#
# PySNMP MIB module SA-MTA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SA-MTA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:59:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Unsigned32, IpAddress, NotificationType, iso, Bits, enterprises, MibIdentifier, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Unsigned32", "IpAddress", "NotificationType", "iso", "Bits", "enterprises", "MibIdentifier", "TimeTicks", "Gauge32")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
sa = MibIdentifier((1, 3, 6, 1, 4, 1, 1429))
saVoip = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 78))
saMta = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 78, 3))
saMta.setRevisions(('2016-11-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: saMta.setRevisionsDescriptions(('Initial release of reduced-set module for releases based on BFC 5.7.x.',))
if mibBuilder.loadTexts: saMta.setLastUpdated('201611100000Z')
if mibBuilder.loadTexts: saMta.setOrganization('Cisco Inc.')
if mibBuilder.loadTexts: saMta.setContactInfo('vveeraga@cisco.com')
if mibBuilder.loadTexts: saMta.setDescription('saMtaDevLCSSignalingSupport controls the LCS Signaling.')
saMtaDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 78, 3, 1))
saMtaDevOffHookWarnTOBusy = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 3, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saMtaDevOffHookWarnTOBusy.setStatus('current')
if mibBuilder.loadTexts: saMtaDevOffHookWarnTOBusy.setDescription('This object configures whether an endpoint should ring off-hook warning tone. When this feature is disabled(0), Endpoint should ring off-hook warning tone. When this feature is enabled(1), Endpoint should ring busy tone instead of off-hook warning tone. The default value of this object is disabled(0).')
saMtaEndPointTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2), )
if mibBuilder.loadTexts: saMtaEndPointTable.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPointTable.setDescription('This table describes the MTA EndPoint Volume configuration. ')
saMtaEndPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saMtaEndPointEntry.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPointEntry.setDescription(' List of attributes for a single MTA endpoint interface.')
saMtaEndPntHookFlashMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 2000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saMtaEndPntHookFlashMinTime.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPntHookFlashMinTime.setDescription('Shortest onhook time at which hook-flash event will be detected, in miliseconds. Breaks in loop current with shorter duration are assumed to be noise and are ignored.')
saMtaEndPntHookFlashMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saMtaEndPntHookFlashMaxTime.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPntHookFlashMaxTime.setDescription('Longest onhook time at which hook-flash event will be detected, in miliseconds. If onhook time is longer then saMtaHookFlashMaxTime, hang up event will be detected.')
saMtaEndPntStatePhysical = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onHook", 1), ("offHook", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saMtaEndPntStatePhysical.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPntStatePhysical.setDescription('Returns the physical state of the end point. 1: No phones attached or one or more phones are attached and on-hook 2: One or more phones are attached and off-hook')
saMtaEndPntStateLogical = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 78, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("connectedIdle", 1), ("disconnected", 2), ("inCallVoice", 3), ("inCallData", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saMtaEndPntStateLogical.setStatus('current')
if mibBuilder.loadTexts: saMtaEndPntStateLogical.setDescription('Returns the logical state of the end point. 1: endpoint is connected to CMS and not in call 2: endpoint is not connected to CMS 3: endpoint is in voice mode call 4: endpoint is in data mode (fax/modem) call')
mibBuilder.exportSymbols("SA-MTA-MIB", saMtaEndPntStatePhysical=saMtaEndPntStatePhysical, saMtaEndPntHookFlashMaxTime=saMtaEndPntHookFlashMaxTime, saMtaDevOffHookWarnTOBusy=saMtaDevOffHookWarnTOBusy, saMtaDevice=saMtaDevice, saMtaEndPointTable=saMtaEndPointTable, saMtaEndPntHookFlashMinTime=saMtaEndPntHookFlashMinTime, sa=sa, saMta=saMta, saMtaEndPntStateLogical=saMtaEndPntStateLogical, saMtaEndPointEntry=saMtaEndPointEntry, PYSNMP_MODULE_ID=saMta, saVoip=saVoip)
