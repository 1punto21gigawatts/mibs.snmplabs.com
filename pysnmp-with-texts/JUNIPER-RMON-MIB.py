#
# PySNMP MIB module JUNIPER-RMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-RMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:00:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
jnxRmonTraps, jnxMibs = mibBuilder.importSymbols("JUNIPER-SMI", "jnxRmonTraps", "jnxMibs")
alarmVariable, alarmEntry, alarmIndex = mibBuilder.importSymbols("RMON-MIB", "alarmVariable", "alarmEntry", "alarmIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, ModuleIdentity, NotificationType, Bits, ObjectIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Integer32, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "ModuleIdentity", "NotificationType", "Bits", "ObjectIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Integer32", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxRmon = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 13))
jnxRmon.setRevisions(('2005-11-23 00:00', '2002-01-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jnxRmon.setRevisionsDescriptions(('Updated jnxRmonAlarmGetFailReason enum.', 'Initial revision.',))
if mibBuilder.loadTexts: jnxRmon.setLastUpdated('200511230000Z')
if mibBuilder.loadTexts: jnxRmon.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxRmon.setContactInfo(' Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net')
if mibBuilder.loadTexts: jnxRmon.setDescription('The MIB modules extends the Rmon as defined in RMON-MIB.')
jnxRmonAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1), )
if mibBuilder.loadTexts: jnxRmonAlarmTable.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmTable.setDescription('Extensions to the rmon Alarm Table')
jnxRmonAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1), )
alarmEntry.registerAugmentions(("JUNIPER-RMON-MIB", "jnxRmonAlarmEntry"))
jnxRmonAlarmEntry.setIndexNames(*alarmEntry.getIndexNames())
if mibBuilder.loadTexts: jnxRmonAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmEntry.setDescription('Each entry containing additional management information applicable to a particular rmon alarm entry.')
jnxRmonAlarmGetFailCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRmonAlarmGetFailCnt.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmGetFailCnt.setDescription('The number of times the internal get request for the variable monitored by this entry has failed.')
jnxRmonAlarmGetFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRmonAlarmGetFailTime.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmGetFailTime.setDescription('The value of sysUpTime when an internal get request for the variable monitored by this entry last failed.')
jnxRmonAlarmGetFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("noError", 2), ("noSuchObject", 3), ("outOfView", 4), ("noSuchInstance", 5), ("badReqId", 6), ("oidMatchErr", 7), ("oidBindErr", 8), ("createPktErr", 9), ("badObjType", 10), ("processRestarted", 11), ("lostInstance", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRmonAlarmGetFailReason.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmGetFailReason.setDescription('The reason why an internal get request for the variable monitored by this entry last failed.')
jnxRmonAlarmGetOkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRmonAlarmGetOkTime.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmGetOkTime.setDescription('The value of sysUpTime when an internal get request for the variable monitored by this entry succeeded and the entry left the getFailure state.')
jnxRmonAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("underCreation", 2), ("active", 3), ("startup", 4), ("risingThreshold", 5), ("fallingThreshold", 6), ("getFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRmonAlarmState.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmState.setDescription('The current state of this rmon alarm entry. The states and their definitions are: underCreation ... entry has not been activated active ... entry is active & within thresholds startup ... entry still waiting for 1st value risingThreshold ... entry has crossed the rising threshold fallingThreshold... entry has crossed the falling threshold getFailure ... internal get request failed')
jnxRmonTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 3, 0))
jnxRmonAlarmGetFailure = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 3, 0, 1)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmVariable"), ("JUNIPER-RMON-MIB", "jnxRmonAlarmGetFailReason"))
if mibBuilder.loadTexts: jnxRmonAlarmGetFailure.setStatus('current')
if mibBuilder.loadTexts: jnxRmonAlarmGetFailure.setDescription('The SNMP trap that is generated when the get request for an alarm variable returns an error. The specific error is identified by jnxRmonAlarmGetFailReason.')
jnxRmonGetOk = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 3, 0, 2)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmVariable"))
if mibBuilder.loadTexts: jnxRmonGetOk.setStatus('current')
if mibBuilder.loadTexts: jnxRmonGetOk.setDescription('The SNMP trap that is generated when the get request for an alarm variable is successful. This is only sent after previous attempts were unsuccessful.')
mibBuilder.exportSymbols("JUNIPER-RMON-MIB", jnxRmonGetOk=jnxRmonGetOk, jnxRmonAlarmState=jnxRmonAlarmState, jnxRmonAlarmGetFailCnt=jnxRmonAlarmGetFailCnt, jnxRmonAlarmGetFailTime=jnxRmonAlarmGetFailTime, jnxRmonAlarmGetFailure=jnxRmonAlarmGetFailure, jnxRmonAlarmEntry=jnxRmonAlarmEntry, jnxRmonTrapPrefix=jnxRmonTrapPrefix, jnxRmonAlarmGetOkTime=jnxRmonAlarmGetOkTime, PYSNMP_MODULE_ID=jnxRmon, jnxRmonAlarmTable=jnxRmonAlarmTable, jnxRmonAlarmGetFailReason=jnxRmonAlarmGetFailReason, jnxRmon=jnxRmon)
