#
# PySNMP MIB module ATM-FORUM-AUTO-CONFIG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATM-FORUM-AUTO-CONFIG
# Produced by pysmi-0.3.4 at Wed May  1 11:31:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
atmForumUni, atmForum = mibBuilder.importSymbols("ATM-FORUM-TC-MIB", "atmForumUni", "atmForum")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, TimeTicks, NotificationType, iso, Bits, Unsigned32, Gauge32, IpAddress, MibIdentifier, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "TimeTicks", "NotificationType", "iso", "Bits", "Unsigned32", "Gauge32", "IpAddress", "MibIdentifier", "ObjectIdentity", "Counter32")
RowPointer, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "TextualConvention", "DisplayString")
atmfAutoConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 12))
atmfAtmServiceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 1), )
if mibBuilder.loadTexts: atmfAtmServiceTypeTable.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTypeTable.setDescription('The ATM Forum ILMI Auto Configuration Extension ATM Service Type Information. ')
atmfAtmServiceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceTypeIndex"))
if mibBuilder.loadTexts: atmfAtmServiceTypeEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTypeEntry.setDescription('An entry in the service type table describes the reference information about a service that may be associated with individual ATM connections for the purpose of auto- configuration. This information describe the name and sub- name of the service, the client layer protocol using the ATM service, the TM 4.0 service category, and the TM 4.0 conformance definition.')
atmfAtmServiceTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceTypeIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTypeIndex.setDescription('A number between which identifies the entry in the Service Type Table. ')
atmfAtmServiceProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceProviderName.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceProviderName.setDescription('This string identifies the name of the service provider for the service described in this profile. The value of this attribute should not set to NULL.')
atmfAtmServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceName.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceName.setDescription('This string identifies the name of the service described in this profile. The value of this attribute should not be set to NULL. ')
atmfAtmServiceSubName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceSubName.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceSubName.setDescription('This string identifies the sub-name of the service described in this profile. A Service may have zero or more sub-names, each with its own service type profile. ')
atmfAtmServiceClient = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceClient.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceClient.setDescription('This string identifies the client protocol of the service described in this profile. A Service (sub-service) may have zero or more described client, each with its own service type profile. ')
atmfAtmServiceTMCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6), ("gfr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceTMCategory.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTMCategory.setDescription('The TM 4.0 Service category used for this service type. Indicates CBR, rt-VBR, nrt-VBR, ABR, UBR, (or GFR)')
atmfAtmServiceTMConformanceDef = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 0), ("other", 1), ("cbr1", 2), ("vbr1", 3), ("vbr2", 4), ("vbr3", 5), ("ubr1", 6), ("ubr2", 7), ("abr", 8), ("gfr1", 9), ("gfr2", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceTMConformanceDef.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTMConformanceDef.setDescription('The TM 4.1 conformance definition used for this service type. Indicates CBR.1, VBR.1, VBR.2, VBR.3, UBR.1, UBR.2, ABR, GFR.1, or GFR.2. ')
atmfAtmServiceConnInfoTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 2), )
if mibBuilder.loadTexts: atmfAtmServiceConnInfoTable.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnInfoTable.setDescription('The ATM Forum ILMI Auto Configuration Extension ATM Service Connection Information. ')
atmfAtmServiceConnInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAtmServicePortIndex"), (0, "ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceVpi"), (0, "ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceVci"))
if mibBuilder.loadTexts: atmfAtmServiceConnInfoEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnInfoEntry.setDescription('An entry in the service connection information table describes the ATM connection that provides a service across an ATM interface. The connection is identified by port and VPI/VCI value. Information about the connection includes the connection type (VP or VC, SVC or PVC), and the association of the connection with a service type. Specific connection information, such as traffic descriptors, should be accessed in the atmfVpc and atmfVcc tables defined in ILMI. ')
atmfAtmServicePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServicePortIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServicePortIndex.setDescription('The value of 0 (zero)has the special meaning of identifying the ATM Interface over which this ILMI message was received. ')
atmfAtmServiceVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceVpi.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceVpi.setDescription('The VPI value of the ATM service connection at the local ATM interface. ')
atmfAtmServiceVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceVci.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceVci.setDescription('The VCI value of the ATM service connection at the local ATM interface. If the atmfAtmServiceSignalId indicates that the connection is a VP connection, the value of this attribute shall be set to 0 (zero) and any meaning of this attribute ignored.')
atmfAtmServiceSignalId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vcCI", 0), ("vpCI", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceSignalId.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceSignalId.setDescription('This attribute represents the characteristic information of the layer network domain. It may be set to either VC characteristic information (vcCI) or VP characteristic information (vpCI).')
atmfAtmServiceConnServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConnServiceIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnServiceIndex.setDescription('The value of this object identifies the row in the atmfAtmServiceTypeTable. This entry represents the association between an ATM service connection and an ATM service type profile that describes it. ')
atmfAtmServiceConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConnName.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnName.setDescription('This string identifies the name of the service connection. The value of this attribute may be set to NULL. ')
atmfAtmServiceConnAALType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("aal1", 1), ("aal34", 2), ("aal5", 3), ("other", 4), ("unknown", 5), ("aal2", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConnAALType.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnAALType.setDescription('Describes the AAL Type of the ATM service connection. A value of none indicates that no AAL is used. The AAL types include AAL1, AAL 3/4, and AAL 5. The value other may be a user-defined AAL type. The unknown type indicates that the AAL type cannot be determined. ')
atmfAtmServiceConnAALIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConnAALIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnAALIndex.setDescription('The value of this object identifies the row in the atmfAAL1ProfileTable for AAL 1 connection, the atmfAAL34ProfileTable for AAL3/4 connection, and the atmfAAL5ProfileTable for AAL 5 connections. This entry represents the association between an ATM service connection and an ATM Adaptation Layer profile that describes it. ')
atmfAAL1ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 3), )
if mibBuilder.loadTexts: atmfAAL1ProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1ProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL1 Profile Information. ')
atmfAAL1ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL1ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL1ProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1ProfileEntry.setDescription('An entry in the AAL1 Profile table provides data that describes the AAL1 processing function. ')
atmfAAL1ProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1ProfileIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1ProfileIndex.setDescription('A number between which identifies the entry in the AAL1 Profile Table. ')
atmfAAL1Subtype = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("null", 0), ("voiceBand", 1), ("circuitEmulationSynchronous", 2), ("circuitEmulationAsynchronous", 3), ("highQualityAuto", 4), ("video", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1Subtype.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1Subtype.setDescription('This attribute describes AAL type 1 subtype used by the CBR service application (e.g. 64 KBPS voice band signal transport, circuit transport). ')
atmfAAL1CBRRate = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1CBRRate.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1CBRRate.setDescription('This attribute describes the rate of the CBR service supported by the AAL.')
atmfAAL1ClkRecoveryType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("synchronous", 0), ("srts", 1), ("adaptive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1ClkRecoveryType.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1ClkRecoveryType.setDescription('This attribute indicates whether the clock recovery type is synchronous, asynchronous-SRTS(Synchronous Residual Time Stamp), or asynchronous-Adaptive Clock Recovery. ')
atmfAAL1FEC = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noFEC", 0), ("lossSensitiveSignalFEC", 1), ("delaySensitiveSignalFEC", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1FEC.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1FEC.setDescription('This attribute indicates the FEC method: no FEC, FEC for Loss Sensitive Signal Transport, or FEC for Delay Sensitive Signal Transport. ')
atmfAAL1SDT = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1SDT.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1SDT.setDescription('This attribute indicates whether Structured Data Transfer (SDT) has been configured at the AAL. A value of TRUE means SDT has been selected. This attribute value can be set to TRUE only when the Forward Error Correction Type attribute equals noFEC. ')
atmfAAL1PartiallyFilledCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1PartiallyFilledCells.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1PartiallyFilledCells.setDescription('This attribute identifies the number of leading octets in use.')
atmfAAL1CellLossIntegrPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL1CellLossIntegrPeriod.setStatus('current')
if mibBuilder.loadTexts: atmfAAL1CellLossIntegrPeriod.setDescription('This attribute represents the time in milliseconds for the cell loss integration period. If cells are lost for this period of time, the Interworking VCC Termination Point entity will generate a cell starvation alarm.')
atmfAAL34ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 4), )
if mibBuilder.loadTexts: atmfAAL34ProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34ProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL3/4 Profile Information. ')
atmfAAL34ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL34ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL34ProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34ProfileEntry.setDescription('An entry in the AAL34 Profile table provides data that describes the AAL3/4 processing function. ')
atmfAAL34ProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34ProfileIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34ProfileIndex.setDescription('A number between which identifies the entry in the AAL3/4 Profile Table. ')
atmfAAL34MaxCpcsSduSizeForward = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34MaxCpcsSduSizeForward.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34MaxCpcsSduSizeForward.setDescription('This attribute represents the maximum CPCS_PDU size that will be transmitted over the connection in both the incoming (forward) direction of transmission. ')
atmfAAL34MaxCpcsSduSizeBackward = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34MaxCpcsSduSizeBackward.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34MaxCpcsSduSizeBackward.setDescription('This attribute represents the maximum CPCS_PDU size that will be transmitted over the connection in both the outgoing (backward) direction of transmission. ')
atmfAAL34MIDRangeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 66536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34MIDRangeLow.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34MIDRangeLow.setDescription('This attribute represents the low value of MID supported at the AAL for the supporting VCC.')
atmfAAL34MIDRangeHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 66536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34MIDRangeHigh.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34MIDRangeHigh.setDescription('This attribute represents the high value of MID supported at the AAL for the supporting VCC.')
atmfAAL34AALMode = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("messageAssured", 0), ("messageUnassured", 1), ("streamingAssured", 2), ("streamingUnassured", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34AALMode.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34AALMode.setDescription('This attribute indicates whether the AAL for the supporting VCC is operating in message mode or streaming mode, assured or unassured. ')
atmfAAL34SscsType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("dataAssured", 1), ("dataNonAssured", 2), ("frameRelay", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL34SscsType.setStatus('current')
if mibBuilder.loadTexts: atmfAAL34SscsType.setDescription('This attribute identifies the SSCS type for the AAL. Valid values are NULL, Data SSCS based on SSCOP (assured operation), Data SSCS based on SSCOP (non-assured operation), or Frame Relay SSCS ')
atmfAAL5ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 5), )
if mibBuilder.loadTexts: atmfAAL5ProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5ProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL5 Profile Information. ')
atmfAAL5ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL5ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL5ProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5ProfileEntry.setDescription('An entry in the AAL5 Profile table provides data that describes the AAL5 processing function. ')
atmfAAL5ProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5ProfileIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5ProfileIndex.setDescription('A number between which identifies the entry in the AAL5 Profile Table. ')
atmfAAL5MaxCpcsSduSizeForward = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5MaxCpcsSduSizeForward.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5MaxCpcsSduSizeForward.setDescription('This attribute represents the maximum CPCS_PDU size that will be transmitted over the connection in both the incoming (forward) direction of transmission. ')
atmfAAL5MaxCpcsSduSizeBackward = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5MaxCpcsSduSizeBackward.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5MaxCpcsSduSizeBackward.setDescription('This attribute represents the maximum CPCS_PDU size that will be transmitted over the connection in both the outgoing (backward) direction of transmission. ')
atmfAAL5AALMode = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("messageAssured", 0), ("messageUnassured", 1), ("streamingAssured", 2), ("streamingUnassured", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5AALMode.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5AALMode.setDescription('This attribute indicates whether the AAL for the supporting VCC is operating in message mode or streaming mode, assured or unassured. ')
atmfAAL5SscsType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("dataAssured", 1), ("dataNonAssured", 2), ("frameRelay", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5SscsType.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5SscsType.setDescription('This attribute identifies the SSCS type for the AAL. Valid values are NULL, Data SSCS based on SSCOP (assured operation), Data SSCS based on SSCOP (non-assured operation), or Frame Relay SSCS ')
atmfAAL2CommonProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 6), )
if mibBuilder.loadTexts: atmfAAL2CommonProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CommonProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL2 Profile Information. This table contains AAL2 parameters that are common to all AAL2 applications. These parameters are taken from I.363.2, I.366.1 and I.366.2')
atmfAAL2CommonProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL2ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL2CommonProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CommonProfileEntry.setDescription('An atmfAAL2CommonProfileEntry provides AAL2 common parameters of operation that are to be used by the PVC associated with this entry.')
atmfAAL2ProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2ProfileIndex.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2ProfileIndex.setDescription('A number which uniquely identifies the entry in the AAL2 Profile Table.')
atmfAAL2ApplicationIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2ApplicationIdentifier.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2ApplicationIdentifier.setDescription('The application identifier specifies which AAL2 application is using the PVC. In addition it specifies protocol combinations to be used on AAL2 channels between IWFs, i.e. it implicitly configures the use of I.366.1 or I.366.2 for bearer and signalling AAL2 channels. The value of this object should be one of those values given in the administered list of AppIds for AAL2 Applications in section 5 of the ATM Forum document of well-known addresses and assigned codes which can be located at vhttp://www.atmforum.com/atmforum/specs/public_assigned_codes.pdf.')
atmfAAL2ConfigResponsibility = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ilmi", 1), ("lesEoc", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2ConfigResponsibility.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2ConfigResponsibility.setDescription('This object identifies which management channel is responsible for AAL2 provisioning and auto-configuration. The user-side IME must check the value of this parameter first before configuring the AAL2 for the PVC to determine whether or not this responsibility lies with ILMI. ilmi - if this is selected then the user-side IME must use the AAL2 Profile defined in this entry and associated AAL2 Profile extension table entry to auto-configure the AAL2 for the PVC. lesEoc - if this is selected then the user-side IME must not auto-configure the AAL2 using ILMI. The AAL2 Profile parameters do not need to be provisioned by the network- side IME and with the exception of this object the AAL2 profile parameters in the ILMI MIB are not applicable. The Loop Emulation Service Embedded Operations Channel (LES EOC) shall be used to provision the AAL2 for the PVC. The start-up AAL2 parameters for this PVC must assume the default values specified in the af-vmoa-0145.000 MIB such that the LES EOC is operational. other - if this is selected then the user-side IME must not auto-configure the AAL2 using ILMI. The AAL2 Profile parameters do not need to be provisioned by the network- side IME and with the exception of this object the AAL2 profile parameters in the ILMI MIB are not applicable. Another mechanism will be used to provision the AAL2 at the ATU-R for the PVC.')
atmfAAL2CpsMaxMultiplexedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2CpsMaxMultiplexedChannels.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CpsMaxMultiplexedChannels.setDescription('Maximum number of multiplexed channels.')
atmfAAL2CpsMaxSduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(45, 45), ValueRangeConstraint(64, 64), )).clone(45)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2CpsMaxSduLength.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CpsMaxSduLength.setDescription('Maximum CPS-SDU size given in octets. This parameter is bidirectional, i.e. its value applies to both directions of the AAL2 connection.')
atmfAAL2SscsMaxSssarSduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65568))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsMaxSssarSduLength.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsMaxSssarSduLength.setDescription('This is the maximum size and SSSAR-SDU can take as defined in I.366.1. This parameter only applies to those AAL2 channels using I.366.1 SSSAR. This parameter is bidirectional, i.e its value applies to both directions of the AAL2 connection. Note that if the appID indicates Loop Emulation Service as the AAL2 application then the minimum allowable value of this parameter is 493.')
atmfAAL2SscsSstedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selected", 1), ("notSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsSstedStatus.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsSstedStatus.setDescription("This specifies whether the SSTED service is used or not. If the value of this object is 'selected' then I.366.1 SSSAR must be supported by the AAL2. This parameter only applies to those AAL2 channels using I.366.1 SSSAR.")
atmfAAL2SscsSsadtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selected", 1), ("notSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsSsadtStatus.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsSsadtStatus.setDescription("This specifies whether SSADT service is used or not. Note that if the value of this object is 'selected' then I.366.1 SSSAR must be supported and by implication the SSTED service must also be 'selected'. This parameter only applies to those AAL2 channels using I.366.1 SSSAR.")
atmfAAL2SscsServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("audio", 1), ("multirate", 2), ("audioAndMultiRate", 3))).clone('audio')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsServiceCategory.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsServiceCategory.setDescription('This object describes the type of service category supported by this AAL2 PVC.')
atmfAAL2SscsAudioServiceTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsAudioServiceTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsAudioServiceTransport.setDescription('This object describes whether the Audio Service that is used for transporting voice and voiceband data is enabled or disabled.')
atmfAAL2SscsProfileSource = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("itut", 1), ("other", 2))).clone('itut')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsProfileSource.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsProfileSource.setDescription('This attribute describes the source of the profile. ')
atmfAAL2SscsIeeeOui = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsIeeeOui.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsIeeeOui.setDescription("This attribute contains the IEEE Organizationally Unique Identifier (OUI) of the organisation that specified the profile being used, if other than ITU-T. For example, if the source is the ATM Forum, the value of this object is 00A03E. This attribute is only meaningful if atmfAAL2SccsProfileSource has the value 'other'.")
atmfAAL2SscsPredefinedProfileIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 13), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsPredefinedProfileIdentifier.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsPredefinedProfileIdentifier.setDescription('This object describes the predefined profile identifier.')
atmfAAL2SscsPcmEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aLaw", 1), ("ulaw", 2))).clone('aLaw')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsPcmEncoding.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsPcmEncoding.setDescription('This object describes the type of PCM encoding used.')
atmfAAL2SscsFaxDemodulationTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsFaxDemodulationTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsFaxDemodulationTransport.setDescription('This object describes whether transport of demodulated facsimile data is enabled or disabled.')
atmfAAL2SscsCasSignalingTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsCasSignalingTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsCasSignalingTransport.setDescription('This attribute describes whether transport of CAS signaling bits is enabled or disabled.')
atmfAAL2SscsDtmfDigitPacketTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsDtmfDigitPacketTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsDtmfDigitPacketTransport.setDescription('This attribute describes whether transport of DTMF dialled digits is enabled or disabled.')
atmfAAL2SscsMfR1DigitPacketTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsMfR1DigitPacketTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsMfR1DigitPacketTransport.setDescription('This object describes whether transport of MF-R1 dialled digits is enabled or disabled.')
atmfAAL2SscsMfR2DigitPacketTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsMfR2DigitPacketTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsMfR2DigitPacketTransport.setDescription('This object describes whether transport of MF-R2 dialled digits is enabled or disabled.')
atmfAAL2SscsCircuitModeDataTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsCircuitModeDataTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsCircuitModeDataTransport.setDescription('This object describes whether transport of circuit mode data is enabled or disabled.')
atmfAAL2SscsCircuitModeDataNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsCircuitModeDataNumChannels.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsCircuitModeDataNumChannels.setDescription("This object describes the multiplier N in N*64kbit/s circuit mode data. It is only applicable if the value of atmfAAL2SscsCircuitModeDataTransport is 'enabled'.")
atmfAAL2SscsFrameModeDataTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsFrameModeDataTransport.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsFrameModeDataTransport.setDescription('This object describes whether the I.366.2 frame mode data service is enabled or disabled.')
atmfAAL2SscsFrameModeDataMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscsFrameModeDataMaxLength.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscsFrameModeDataMaxLength.setDescription("This object specifies the maximum length of I.366.2 frame mode data. It is only applicable if the value of atmfAAL2FrameModeDataTransport is 'enabled'.")
atmfAAL2SscopSduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65524))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscopSduLength.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscopSduLength.setDescription('The Maximum SSCOP-SDU length. This object is only required is the value of atmfAAL2SscsSsadtStatus is selected else it is not applicable.')
atmfAAL2SscopUuFieldLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 6, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65524))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SscopUuFieldLength.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SscopUuFieldLength.setDescription('The Maximum SSCOP-UU field length. This object is only required is the value of atmfAAL2SscsSsadtStatus is selected else it is not applicable.')
atmfAAL2TrunkingProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 7), )
if mibBuilder.loadTexts: atmfAAL2TrunkingProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2TrunkingProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL2 Profile Information. This table contains AAL2 parameters that are specific to the ATM Trunking AAL 2 application. These parameters are taken from af-vtoa-0113.000')
atmfAAL2TrunkingProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 7, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL2ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL2TrunkingProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2TrunkingProfileEntry.setDescription('An atmfAAL2TrunkingProfileEntry provides AAL2 parameters of operation for ATM Trunking applications to be used in addition to those provided in the Common AAL2 Profile Table. These together provide complete configuration of AAL2 for PVCs that support ATM Trunking using AAl2 as defined in af-vtoa-0113.000.')
atmfAAL2Vcci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2Vcci.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2Vcci.setDescription('This object uniquely identifies a PVC between IWFs.')
atmfAAL2SignalingVcci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2SignalingVcci.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2SignalingVcci.setDescription('This object specifies the VCCI of the PVC that is used to carry the CCS for this PVC.')
atmfAAL2LESProfileTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 8), )
if mibBuilder.loadTexts: atmfAAL2LESProfileTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2LESProfileTable.setDescription('The ATM Forum ILMI Auto Configuration Extension AAL2 Profile Information. This table contains AAL2 parameters that are specific to the ATM LES AAL 2 application. These parameters are taken from af-vmna-0145.000')
atmfAAL2LESProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 8, 1), ).setIndexNames((0, "ATM-FORUM-AUTO-CONFIG", "atmfAAL2ProfileIndex"))
if mibBuilder.loadTexts: atmfAAL2LESProfileEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2LESProfileEntry.setDescription('An atmfAAL2LESProfileEntry provides AAL2 parameters of operation for LES applications to be used in addition to those provided in the Common AAL2 Profile Table. These together provide complete configuration of AAL2 for PVCs that support LES using AAl2 as defined in af-vmoa-0145.000.')
atmfAAL2CpsCIDLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 223)).clone(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2CpsCIDLowerLimit.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CpsCIDLowerLimit.setDescription('The minimum value the CID can take for AAL2 bearer channels and ISDN-D channels.')
atmfAAL2CpsCIDUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 223)).clone(223)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2CpsCIDUpperLimit.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CpsCIDUpperLimit.setDescription(' The maximum value the CID can take for AAL2 bearer channels and ISDN-D channels.')
atmfAAL2CpsOptimisation = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleCpsPacketPerCpsPduNoOverlap", 1), ("multipleCpsPacketsPerCpsPduWithOverlap", 2))).clone('singleCpsPacketPerCpsPduNoOverlap')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL2CpsOptimisation.setStatus('current')
if mibBuilder.loadTexts: atmfAAL2CpsOptimisation.setDescription('This object refers to the mode of operation of the CPS on the CP-IWF The value of this object imposes a restriction on the CPS-SDU length and hence must override the value of atmfAAl2CpsMaxSDULength. singleCpsPacketPerCpsPduNoOverlap -A single CPS Packet is contained within a CPS-PDU and no overlap can occur into the next CPS-PDU. If this option is selected, then Timer_CU is not applicable. Also Max CPS-SDU size must be less than or equal to 44. multipleCpsPacketsPerCpsPduWithOverlap - Multiple CPS Packets are contained within a CPS-PDU and overlap can occur into the next CPS-PDU. If this option is selected, then Timer_CU is applicable. Also Max CPS-SDU size must be less than or equal to 64.')
atmfAtmServiceConnInfoExtensionTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 9), )
if mibBuilder.loadTexts: atmfAtmServiceConnInfoExtensionTable.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnInfoExtensionTable.setDescription('The ATM Forum ILMI Auto Configuration Extension ATM Service Connection Information. ')
atmfAtmServiceConnInfoExtensionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 9, 1), )
atmfAtmServiceConnInfoEntry.registerAugmentions(("ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceConnInfoExtensionEntry"))
atmfAtmServiceConnInfoExtensionEntry.setIndexNames(*atmfAtmServiceConnInfoEntry.getIndexNames())
if mibBuilder.loadTexts: atmfAtmServiceConnInfoExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConnInfoExtensionEntry.setDescription('An entry in the service connection information extension table provides additional elements that help describe the ATM connection that provides a service across an ATM interface. The connection is identified by port and VPI/VCI value.')
atmfAtmServicePhyMacIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServicePhyMacIdentifier.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServicePhyMacIdentifier.setDescription(" When the physical and/or MAC layer has more than one PHY-connection or MAC-connection, this object is used to select the PHY- or MAC-connection to be bound to the PVC. The semantics of the value of this object is PHY and/or MAC specific. This semantics generally shall be specified with the PHY or MAC. However, the semantics for the two PHY/MAC specifications which have been identified as having multiple connections is provided here for convenience: When the physical layer is dual latency ADSL, the PhyMacIdentifier selects the latency path to be bound to each direction of transmission for the PVC. The value of the PhyMacIdentifier shall be as follows: default = 0 upstream and downstream both interleaved path = 1 upstream and downstream both fast path = 2 upstream interleaved path, downstream fast path = 3 upstream fast path, downstream interleaved path = 4 The 'default' value shall be used for single latency ADSL PHYs. When the physical and MAC layers are IEEE 802.14, the PhyMacIdentifier specifies the 802.14 Local Identifier for the PVC")
atmfAtmServiceTypeExtensionTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 10), )
if mibBuilder.loadTexts: atmfAtmServiceTypeExtensionTable.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTypeExtensionTable.setDescription('The ATM Forum ILMI Auto Configuration Extension ATM Service Type Extension Information. ')
atmfAtmServiceTypeExtensionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 10, 1), )
atmfAtmServiceTypeEntry.registerAugmentions(("ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceTypeExtensionEntry"))
atmfAtmServiceTypeExtensionEntry.setIndexNames(*atmfAtmServiceTypeEntry.getIndexNames())
if mibBuilder.loadTexts: atmfAtmServiceTypeExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceTypeExtensionEntry.setDescription("An entry in the service type extension table describes additional information about a service that may be associated with individual ATM connections for the purpose of auto-configuration. This information describes the Client Protocol ID's associated with a particular service.")
atmfAtmServiceLayer2ProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 10, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceLayer2ProtocolId.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceLayer2ProtocolId.setDescription("This object shall be used to select the user plane layer 2 protocol (if any) to be used above the AAL. The first octet of this object shall be encoded as follows. Bits 5-7 (i.e. the three most significant bits) shall be set to 0; any other values shall be ignored. Bits 0-4 (i.e. the five least significant bits) shall be encoded as shown in the entry for 'User information layer 2 protocol (octet 6)' in Table 4-10/Q.2931. However, if no user plane layer 2 protocol is present above the AAL, then the first (and only) octet shall be encoded as '0b00000000'. If the encoding of the first octet requires subsequent octets, then bit 7 (i.e., the most significant bit) of each of these octets shall be set to 0; however, if it is set to 1, it shall be ignored. Bits 0-6 shall be encoded according to table 4-10/Q.2931. If more than one subsequent octet is needed, then octets shall appear in the order shown in figure 4-16/Q.2931.")
atmfAtmServiceLayer3ProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 10, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceLayer3ProtocolId.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceLayer3ProtocolId.setDescription("This object shall be used to select a user plane layer 3 protocol (or user plane layer 2 bridging). The first octet of this object shall be encoded as follows. Bits 5-7 (i.e., the three most significant bits) shall be set to 0; any other values shall be ignored. Bits 0-4 (i.e., the five least significant bits) shall be encoded as shown in the entry for 'User information layer 3 protocol (octet 7)' in Table 4-10/Q.2931. However, if no user plane layer 3 protocol is specified, then the first (and only) octet shall be encoded as '0b00000000'. a) If ISO TR9577 network layer protocol identification is to be used, then the first octet shall be encoded to indicate 'ISO/IEC TR9577'. In this case, either: i) the user plane layer 3 protocol is to be selected in the management plane. The second octet of this object shall contain the ISO/IEC TR9577 Initial Protocol Identifier (IPI). - For layer 3 protocols for which ISO/IEC has assigned a Network Layer Protocol Identifier (NLPID), then this NLPID shall be used as the IPI, and the length of the octet string shall be 2. - For layer 3 protocols for which ISO/IEC has not assigned an NLPID, the IPI shall be encoded to indicate 'IEEE 802.1a SNAP identifier' (see Annex D of ISO/IEC 9577). The following five octets (octets 3 through 7) of this object shall then contain a SNAP identifier, which consists of a 3-octet organization unique identifier (OUI) and a 2-octet protocol identifier (PID). This SNAP coding shall be used only if ISO/IEC has not assigned a Network Layer Protocol Identifier for the layer 3 or layer 2 protocol. The octet string shall thus be 7 octets long. - If an IME wishes to indicate that bridged LAN frames are to be carried in the user plane then the IPI shall be encoded to indicate 'IEEE 802.1a SNAP identifier'. The following five octets of this object shall contain a SNAP identifier, which indicates the bridged protocol. For consistency with SIG 4.0, use of the ISO/IEC subsequent protocol identifier (SPI) is not recommended but not explicitly prohibited as one can envision scenarios where it has utility. or ii) the user plane layer 3 protocol is to be selected using network layer protocol identification in the user plane. The octet-string shall be one octet long. The first octet(s) of each layer 3 protocol data unit shall contain layer 3 protocol identification according to ISO/IEC TR9577. b)If bits 0-4 of the first octet of the octet string are set to any value other than 'ISO/IEC TR9577', then any subsequent octets shall be encoded as follows. Bit 7 (i.e., the most significant bit) of each of these octets shall be set to 0; however, if it is set to 1, it shall be ignored. Bits 0-6 shall be encoded according to the codings for octet 7a, octet 7b and octet 7c specified in table 4- 10/Q.2931. If more than one subsequent octet is needed, then octets shall appear in the order shown in figure 4-16/Q.2931.")
atmfAAL5ProfileExtensionTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 12, 11), )
if mibBuilder.loadTexts: atmfAAL5ProfileExtensionTable.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5ProfileExtensionTable.setDescription('Additional parameters for the AAL5 Profile are stored in this table.')
atmfAAL5ProfileExtensionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 12, 11, 1), )
atmfAAL5ProfileEntry.registerAugmentions(("ATM-FORUM-AUTO-CONFIG", "atmfAAL5ProfileExtensionEntry"))
atmfAAL5ProfileExtensionEntry.setIndexNames(*atmfAAL5ProfileEntry.getIndexNames())
if mibBuilder.loadTexts: atmfAAL5ProfileExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5ProfileExtensionEntry.setDescription('An entry in this table augments an entry in the atmfAAL5ProfileTable')
atmfAAL5Vcci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 12, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAAL5Vcci.setStatus('current')
if mibBuilder.loadTexts: atmfAAL5Vcci.setDescription("This object's value is only applicable if the AAL5 VCC is carrying CCS for AAL2 narrowband calls.")
atmfAtmServiceConfFail = NotificationType((1, 3, 6, 1, 4, 1, 353) + (0,3)).setObjects(("ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceConfFailReason"), ("ATM-FORUM-AUTO-CONFIG", "atmfAtmServiceConfFailOID"))
if mibBuilder.loadTexts: atmfAtmServiceConfFail.setDescription('The user-side IME will send this trap whenever it is unable to configure itself based on the information provided in the ILMI auto-configuration MIB. The variables included in the trap identify the reason for the failure and the row in the MIB table that caused the failure. ')
atmfAtmServiceConfFailReason = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 12, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unsupportedClientProtocol", 1), ("unsupportedServiceCategory", 2), ("unsupportedAAL", 3), ("invalidVPIVCIValue", 4), ("tooManyPVCs", 5), ("incompleteConfigurationInformation", 6), ("inconsistentConfigurationInformation", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConfFailReason.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConfFailReason.setDescription('The reason for the failure to configure the PVC at the ATU-R')
atmfAtmServiceConfFailOID = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 12, 13), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmServiceConfFailOID.setStatus('current')
if mibBuilder.loadTexts: atmfAtmServiceConfFailOID.setDescription("This object holds a pointer to a row in the appropriate table depending on the value of the atmfAtmServiceFailReason object. This will allow the network side to determine MIB information that caused the auto-configuration failure. The value of this object should be as follows: If atmfAtmServiceConfFailReason = 1 or 2, then this object's value points to the row in the atmfAtmServiceTypeTable that is the cause of the problem. If atmfAtmServiceConfFailReason = 3, then this object's value points to the row in the atmfAALxProfileTable, where x is 1, 2, 34, or 5 depending on the AAL that can't be supported. If atmfAtmServiceConfFailReason = 4, then this object's value points to the row in the atmfAtmServiceConnInfoTable that is the cause of the problem. For any other value of atmfAtmServiceConfFailReason, this object's value should be ignored.")
mibBuilder.exportSymbols("ATM-FORUM-AUTO-CONFIG", atmfAAL2CpsMaxMultiplexedChannels=atmfAAL2CpsMaxMultiplexedChannels, atmfAtmServiceConnInfoExtensionTable=atmfAtmServiceConnInfoExtensionTable, atmfAAL2SscsProfileSource=atmfAAL2SscsProfileSource, atmfAAL2CpsCIDUpperLimit=atmfAAL2CpsCIDUpperLimit, atmfAAL2SscsMfR2DigitPacketTransport=atmfAAL2SscsMfR2DigitPacketTransport, atmfAAL2LESProfileEntry=atmfAAL2LESProfileEntry, atmfAAL34SscsType=atmfAAL34SscsType, atmfAAL5ProfileIndex=atmfAAL5ProfileIndex, atmfAAL34AALMode=atmfAAL34AALMode, atmfAtmServiceSubName=atmfAtmServiceSubName, atmfAAL2SscsPredefinedProfileIdentifier=atmfAAL2SscsPredefinedProfileIdentifier, atmfAAL2LESProfileTable=atmfAAL2LESProfileTable, atmfAAL2SscopUuFieldLength=atmfAAL2SscopUuFieldLength, atmfAAL1CellLossIntegrPeriod=atmfAAL1CellLossIntegrPeriod, atmfAAL2SscsPcmEncoding=atmfAAL2SscsPcmEncoding, atmfAAL34MIDRangeLow=atmfAAL34MIDRangeLow, atmfAtmServiceTypeExtensionEntry=atmfAtmServiceTypeExtensionEntry, atmfAtmServiceTMConformanceDef=atmfAtmServiceTMConformanceDef, atmfAAL1FEC=atmfAAL1FEC, atmfAAL1ProfileEntry=atmfAAL1ProfileEntry, atmfAtmServiceConnName=atmfAtmServiceConnName, atmfAAL2SscsSstedStatus=atmfAAL2SscsSstedStatus, atmfAAL2SscsCircuitModeDataTransport=atmfAAL2SscsCircuitModeDataTransport, atmfAAL5Vcci=atmfAAL5Vcci, atmfAAL2CommonProfileEntry=atmfAAL2CommonProfileEntry, atmfAtmServiceConnAALIndex=atmfAtmServiceConnAALIndex, atmfAtmServiceTypeIndex=atmfAtmServiceTypeIndex, atmfAAL1CBRRate=atmfAAL1CBRRate, atmfAAL5ProfileEntry=atmfAAL5ProfileEntry, atmfAtmServiceConnServiceIndex=atmfAtmServiceConnServiceIndex, atmfAAL34ProfileEntry=atmfAAL34ProfileEntry, atmfAtmServiceSignalId=atmfAtmServiceSignalId, atmfAAL2TrunkingProfileEntry=atmfAAL2TrunkingProfileEntry, atmfAAL34MIDRangeHigh=atmfAAL34MIDRangeHigh, atmfAAL2SignalingVcci=atmfAAL2SignalingVcci, atmfAtmServiceConfFail=atmfAtmServiceConfFail, atmfAtmServicePortIndex=atmfAtmServicePortIndex, atmfAtmServiceVci=atmfAtmServiceVci, atmfAAL34ProfileTable=atmfAAL34ProfileTable, atmfAAL34ProfileIndex=atmfAAL34ProfileIndex, atmfAtmServiceConnInfoEntry=atmfAtmServiceConnInfoEntry, atmfAAL2SscsMaxSssarSduLength=atmfAAL2SscsMaxSssarSduLength, atmfAtmServiceLayer2ProtocolId=atmfAtmServiceLayer2ProtocolId, atmfAAL2SscsDtmfDigitPacketTransport=atmfAAL2SscsDtmfDigitPacketTransport, atmfAAL2CpsMaxSduLength=atmfAAL2CpsMaxSduLength, atmfAtmServiceName=atmfAtmServiceName, atmfAtmServiceTypeExtensionTable=atmfAtmServiceTypeExtensionTable, atmfAAL5AALMode=atmfAAL5AALMode, atmfAtmServiceConfFailReason=atmfAtmServiceConfFailReason, atmfAtmServiceLayer3ProtocolId=atmfAtmServiceLayer3ProtocolId, atmfAAL34MaxCpcsSduSizeBackward=atmfAAL34MaxCpcsSduSizeBackward, atmfAtmServicePhyMacIdentifier=atmfAtmServicePhyMacIdentifier, atmfAtmServiceVpi=atmfAtmServiceVpi, atmfAtmServiceTMCategory=atmfAtmServiceTMCategory, atmfAAL2SscsMfR1DigitPacketTransport=atmfAAL2SscsMfR1DigitPacketTransport, atmfAAL2SscsAudioServiceTransport=atmfAAL2SscsAudioServiceTransport, atmfAAL2CpsCIDLowerLimit=atmfAAL2CpsCIDLowerLimit, atmfAAL5ProfileExtensionTable=atmfAAL5ProfileExtensionTable, atmfAAL5MaxCpcsSduSizeForward=atmfAAL5MaxCpcsSduSizeForward, atmfAAL5SscsType=atmfAAL5SscsType, atmfAAL5MaxCpcsSduSizeBackward=atmfAAL5MaxCpcsSduSizeBackward, atmfAAL2TrunkingProfileTable=atmfAAL2TrunkingProfileTable, atmfAtmServiceProviderName=atmfAtmServiceProviderName, atmfAAL2SscopSduLength=atmfAAL2SscopSduLength, atmfAAL5ProfileExtensionEntry=atmfAAL5ProfileExtensionEntry, atmfAAL2CpsOptimisation=atmfAAL2CpsOptimisation, atmfAAL2SscsIeeeOui=atmfAAL2SscsIeeeOui, atmfAAL2SscsSsadtStatus=atmfAAL2SscsSsadtStatus, atmfAAL2Vcci=atmfAAL2Vcci, atmfAAL2CommonProfileTable=atmfAAL2CommonProfileTable, atmfAAL2ProfileIndex=atmfAAL2ProfileIndex, atmfAutoConfigGroup=atmfAutoConfigGroup, atmfAtmServiceClient=atmfAtmServiceClient, atmfAAL2SscsCircuitModeDataNumChannels=atmfAAL2SscsCircuitModeDataNumChannels, atmfAAL2SscsServiceCategory=atmfAAL2SscsServiceCategory, atmfAAL2ApplicationIdentifier=atmfAAL2ApplicationIdentifier, atmfAAL1PartiallyFilledCells=atmfAAL1PartiallyFilledCells, atmfAAL1SDT=atmfAAL1SDT, atmfAtmServiceConnInfoExtensionEntry=atmfAtmServiceConnInfoExtensionEntry, atmfAtmServiceConnAALType=atmfAtmServiceConnAALType, atmfAAL2SscsCasSignalingTransport=atmfAAL2SscsCasSignalingTransport, atmfAAL2SscsFaxDemodulationTransport=atmfAAL2SscsFaxDemodulationTransport, atmfAAL1ProfileIndex=atmfAAL1ProfileIndex, atmfAAL2SscsFrameModeDataTransport=atmfAAL2SscsFrameModeDataTransport, atmfAAL1ProfileTable=atmfAAL1ProfileTable, atmfAAL2SscsFrameModeDataMaxLength=atmfAAL2SscsFrameModeDataMaxLength, atmfAAL34MaxCpcsSduSizeForward=atmfAAL34MaxCpcsSduSizeForward, atmfAtmServiceTypeEntry=atmfAtmServiceTypeEntry, atmfAAL5ProfileTable=atmfAAL5ProfileTable, atmfAAL1ClkRecoveryType=atmfAAL1ClkRecoveryType, atmfAAL1Subtype=atmfAAL1Subtype, atmfAtmServiceConnInfoTable=atmfAtmServiceConnInfoTable, atmfAtmServiceConfFailOID=atmfAtmServiceConfFailOID, atmfAtmServiceTypeTable=atmfAtmServiceTypeTable, atmfAAL2ConfigResponsibility=atmfAAL2ConfigResponsibility)
