#
# PySNMP MIB module RADLAN-MGMD-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-MGMD-ROUTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:47:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
mgmdRouterInterfaceEntry, = mibBuilder.importSymbols("MGMD-STD-MIB", "mgmdRouterInterfaceEntry")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NpgOperStatus, = mibBuilder.importSymbols("RADLAN-PIM-MIB", "NpgOperStatus")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, Unsigned32, Gauge32, ObjectIdentity, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, TimeTicks, mib_2, Counter64, NotificationType, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Gauge32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "TimeTicks", "mib-2", "Counter64", "NotificationType", "iso", "IpAddress")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
rlIgmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 225))
rlIgmp.setRevisions(('2011-07-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlIgmp.setRevisionsDescriptions(('Added this MODULE-IDENTITY clause.',))
if mibBuilder.loadTexts: rlIgmp.setLastUpdated('201107210000Z')
if mibBuilder.loadTexts: rlIgmp.setOrganization('Radlan Computer Communications Ltd.')
if mibBuilder.loadTexts: rlIgmp.setContactInfo('radlan.com')
if mibBuilder.loadTexts: rlIgmp.setDescription('The private MIB module definition for IGMP Router in Radlan devices.')
class AdminStatus(TextualConvention, Integer32):
    description = 'The desired administrative state of a MIB row.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("adminStatusUp", 1), ("adminStatusDown", 2))

rlMgmdInterfaceExtTable = MibTable((1, 3, 6, 1, 4, 1, 89, 225, 1), )
if mibBuilder.loadTexts: rlMgmdInterfaceExtTable.setStatus('current')
if mibBuilder.loadTexts: rlMgmdInterfaceExtTable.setDescription('The (conceptual) Extension Interface table listing the entries with counters of the standard interface table.')
rlMgmdInterfaceExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 225, 1, 1), )
mgmdRouterInterfaceEntry.registerAugmentions(("RADLAN-MGMD-ROUTER-MIB", "rlMgmdInterfaceExtEntry"))
rlMgmdInterfaceExtEntry.setIndexNames(*mgmdRouterInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: rlMgmdInterfaceExtEntry.setStatus('current')
if mibBuilder.loadTexts: rlMgmdInterfaceExtEntry.setDescription('An entry (conceptual row) in the rlMgmdInterfaceExtTable.')
rlMgmdRouterInterfaceExtStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtStatsUpTime.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtStatsUpTime.setDescription("The time since the statistics counters for this interface were last reset. This field is reset to zero when rlMgmdRouterInterfaceExtEnableStats is modified to 'true'. This value may wrap.")
rlMgmdRouterInterfaceExtEnableStats = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtEnableStats.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtEnableStats.setDescription("This object defines whether DC-IGMP returns interface-specific statistics on MIB GET operations for this interface's MIB row. If this object is modified from 'true' to 'false' and back to 'true', the statistics fields are reset. This field is readable and writeable.")
rlMgmdRouterInterfaceExtNumFailedJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumFailedJoins.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumFailedJoins.setDescription('The number of failed joins received for this interface - that is, the number of times a group membership could not be added on this interface.')
rlMgmdRouterInterfaceExtNumIgmpV1Msgs = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV1Msgs.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV1Msgs.setDescription('The number of IGMPv1 messages received for this interface. This includes both valid and invalid messages.')
rlMgmdRouterInterfaceExtNumIgmpV2MldV1Msgs = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV2MldV1Msgs.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV2MldV1Msgs.setDescription('The number of IGMPv2 or Mldv1 messages received for this interface. This includes both valid and invalid messages.')
rlMgmdRouterInterfaceExtNumIgmpV3MldV2Msgs = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV3MldV2Msgs.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumIgmpV3MldV2Msgs.setDescription('The number of IGMPv3 or Mldv2 messages received for this interface. This includes both valid and invalid messages.')
rlMgmdRouterInterfaceExtNumInvalidMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumInvalidMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumInvalidMsgsRcvd.setDescription('The number of Invalid IGMP or MLD messages received for this interface.')
rlMgmdRouterInterfaceExtNumGenQueriesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumGenQueriesSent.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumGenQueriesSent.setDescription('The number of General Queries sent for this interface.')
rlMgmdRouterInterfaceExtNumSpecQueriesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumSpecQueriesSent.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtNumSpecQueriesSent.setDescription('The number of Specific Queries sent for this interface.')
rlmgmdRouterInterfaceQrRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrRobustness.setStatus('current')
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrRobustness.setDescription('The value of Robustness in use on this interface. The Robustness Variable allows tuning for the expected packet loss on a subnet. If a subnet is expected to be lossy, the Robustness Variable may be increased. IGMP and MLD is robust to (Robustness Variable-1) packet losses. For IGMPv3/MLDv2, this may differ from the value configured using mgmdRouterInterfaceRobustness if the local router is not the querier on this interface.')
rlmgmdRouterInterfaceQrQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrQueryInterval.setStatus('current')
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrQueryInterval.setDescription('The value of Query Interval in use on this interface. The frequency at which IGMP or MLD General Query packets are transmitted on this interface. For IGMPv3/MLDv2, this may differ from the value configured using mgmdRouterInterfaceQueryInterval if the local router is not the querier on this interface.')
rlmgmdRouterInterfaceQrQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrQueryMaxResponseTime.setStatus('current')
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrQueryMaxResponseTime.setDescription('The value of Maximum Query Response Time in use on this interface. For IGMPv3/MLDv2, this may differ from the value configured using mgmdRouterInterfaceQueryMaxResponseTime if the local router is not the querier on this interface.')
rlmgmdRouterInterfaceQrLastMembQueryIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrLastMembQueryIntvl.setStatus('current')
if mibBuilder.loadTexts: rlmgmdRouterInterfaceQrLastMembQueryIntvl.setDescription("The value of Last Member Query Interval in use on this interface. The Last Member Query Interval is the Max Response Time inserted into Group-Specific and Group-and-Source-specific Queries sent in response to Leave messages, and is also the amount of time between successive Specific Query messages. This value may be tuned to modify the leave latency of the network. A reduced value results in reduced time to detect the loss of the last member of a group. The value of this object is irrelevant if mgmdRouterInterfaceVersion is 1. The value of this object is also irrelevant if this interface is configured to use immediate-leave behavior without a last member query - that is, if mgmdRouterInterfaceImmedtLeave is 'true' and mgmdRouterInterfaceQryBefImmdLv is 'false'. For IGMPv3/MLDv2, this may differ from the value configured using mgmdRouterInterfaceLastMembQueryIntvl if the local router is not the querier on this interface.")
rlmgmdRouterInterfaceExtSrcAndGrpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 14), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlmgmdRouterInterfaceExtSrcAndGrpFilter.setStatus('current')
if mibBuilder.loadTexts: rlmgmdRouterInterfaceExtSrcAndGrpFilter.setDescription('The interface will ignore requests to join any group/source pair that is not included in the extended access list with a list index corresponding to the value configured for this object. If the value of this object is 0, no requests are ignored as a result of this object. This object deprecates the dcmgmdRouterInterfaceAllowSSMList object. If both of these (S,G) filters are set to non-zero values, then both take effect for SSM groups - that is, a request to join an SSM group/source pair is only accepted if it passes through both filters. If both this object and the dcmgmdRouterInterfaceAllowASMList object are set to non-zero values, then a request to join an ASM group/source pair is only accepted if it passes through both filters.')
rlMgmdRouterInterfaceExtAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 15), AdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtAdminStatus.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtAdminStatus.setDescription('The desired administrative state of the interface.')
rlMgmdRouterInterfaceExtOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 16), NpgOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtOperStatus.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtOperStatus.setDescription('The current operational state of the interface.')
rlMgmdRouterInterfaceExtIsQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtIsQuerier.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtIsQuerier.setDescription('???')
rlMgmdRouterInterfaceExtProxyDownProtected = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 225, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtProxyDownProtected.setStatus('current')
if mibBuilder.loadTexts: rlMgmdRouterInterfaceExtProxyDownProtected.setDescription('Enable/Disable IGMP Proxy Downstream protected on the interface.')
mibBuilder.exportSymbols("RADLAN-MGMD-ROUTER-MIB", rlMgmdInterfaceExtTable=rlMgmdInterfaceExtTable, rlMgmdRouterInterfaceExtNumIgmpV2MldV1Msgs=rlMgmdRouterInterfaceExtNumIgmpV2MldV1Msgs, rlMgmdInterfaceExtEntry=rlMgmdInterfaceExtEntry, rlmgmdRouterInterfaceQrQueryInterval=rlmgmdRouterInterfaceQrQueryInterval, rlMgmdRouterInterfaceExtIsQuerier=rlMgmdRouterInterfaceExtIsQuerier, rlMgmdRouterInterfaceExtProxyDownProtected=rlMgmdRouterInterfaceExtProxyDownProtected, AdminStatus=AdminStatus, rlMgmdRouterInterfaceExtOperStatus=rlMgmdRouterInterfaceExtOperStatus, rlmgmdRouterInterfaceExtSrcAndGrpFilter=rlmgmdRouterInterfaceExtSrcAndGrpFilter, rlmgmdRouterInterfaceQrQueryMaxResponseTime=rlmgmdRouterInterfaceQrQueryMaxResponseTime, PYSNMP_MODULE_ID=rlIgmp, rlMgmdRouterInterfaceExtNumSpecQueriesSent=rlMgmdRouterInterfaceExtNumSpecQueriesSent, rlmgmdRouterInterfaceQrLastMembQueryIntvl=rlmgmdRouterInterfaceQrLastMembQueryIntvl, rlMgmdRouterInterfaceExtEnableStats=rlMgmdRouterInterfaceExtEnableStats, rlMgmdRouterInterfaceExtStatsUpTime=rlMgmdRouterInterfaceExtStatsUpTime, rlMgmdRouterInterfaceExtNumIgmpV3MldV2Msgs=rlMgmdRouterInterfaceExtNumIgmpV3MldV2Msgs, rlMgmdRouterInterfaceExtNumGenQueriesSent=rlMgmdRouterInterfaceExtNumGenQueriesSent, rlmgmdRouterInterfaceQrRobustness=rlmgmdRouterInterfaceQrRobustness, rlMgmdRouterInterfaceExtNumInvalidMsgsRcvd=rlMgmdRouterInterfaceExtNumInvalidMsgsRcvd, rlIgmp=rlIgmp, rlMgmdRouterInterfaceExtNumIgmpV1Msgs=rlMgmdRouterInterfaceExtNumIgmpV1Msgs, rlMgmdRouterInterfaceExtNumFailedJoins=rlMgmdRouterInterfaceExtNumFailedJoins, rlMgmdRouterInterfaceExtAdminStatus=rlMgmdRouterInterfaceExtAdminStatus)
