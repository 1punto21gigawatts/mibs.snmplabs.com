#
# PySNMP MIB module HP-ICF-RATE-LIMIT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-RATE-LIMIT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:35:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
hpicfRateLimitTrapsPrefix, hpicfObjectModules = mibBuilder.importSymbols("HP-ICF-OID", "hpicfRateLimitTrapsPrefix", "hpicfObjectModules")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, NotificationType, iso, Gauge32, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, Unsigned32, Integer32, ModuleIdentity, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "iso", "Gauge32", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "Unsigned32", "Integer32", "ModuleIdentity", "MibIdentifier", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpicfRateLimitMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14))
hpicfRateLimitMIB.setRevisions(('2017-10-13 00:00', '2016-08-03 00:00', '2015-09-04 00:00', '2014-11-17 10:00', '2014-11-18 00:00', '2013-07-11 00:00', '2013-03-12 15:10', '2012-10-05 19:30', '2012-03-12 12:30', '2010-09-27 11:30', '2010-07-14 16:10', '2007-12-04 12:30', '2007-08-29 11:20', '2007-07-27 19:20', '2007-06-01 11:46', '2007-05-30 16:10', '2006-07-07 18:33', '2005-04-20 11:30', '2004-08-22 10:30',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfRateLimitMIB.setRevisionsDescriptions(('The maximum value of hpUnknownUnicastLimitPortSingleControlKbps has been modified to 100,000,000.', 'The description of below MIBs are modified: hpEgressRateLimitPortControlMode, hpIngressRateLimitPortControlMode.', 'The hpICMPRateLimitPortKbps modified.', 'Added egress maximum rate limit objects.', 'Increased max range value from 10G to 100G for hpEgressRateLimitPortSingleControlKbps, hpIngressRateLimitPortSingleControlKbps, hpIngressBcastLimitPortSingleControlKbps and hpIngressMcastLimitPortSingleControlKbps.', 'Added hpicfIngressRateLimitVlanConfigTable, hpicfRateLimitCompliance3 and hpicfIngressRateLimitVlanGroup for limiting ingress rate on a VLAN.', 'Added kbps-mode rate-limit option for ingress unknown-unicast traffic. This is an enhancement OID for the unknown-unicast rate-limiting MIB', 'Updated the description of the hpBWMinEgressPortPrct object to remove queue sum restriction.', 'Added the Unknown Unicast Rate-Limiting MIB object, which is used by the switch to control the unknown unicast traffic.', 'Added IPv6 ICMP Rate-Limiting Enhancements through the inclusion of IP packet type MIB object.', 'Added kbps-mode limit option for ingress Broadcast and ingress Multicast rate limiting MIB objects.', 'Added ingress Broadcast and ingress Multicast rate limiting MIB objects.', 'Deprecated all bps objects for hpEgressRateLimitPortConfigTable and hpIngressRateLimitPortConfigTable, and updated compliance information (including correcting ICMP group to be hpICMPRateLimitPortConfigGroup2).', 'Modified enumerated type names for hpICMPRateLimitPortControlMode object.', 'Deprecated hpICMPRateLimitPortState in favor of new hpICMPRateLimitPortControlMode object.', 'Added Kbps configuration for ICMP, port-egress, and port-ingress rate-limiting definitions.', 'Added new egress rate limiting bps objects, and ingress rate-limiting definitions.', 'Added minimum bandwidth and egress rate limiting definitions.', 'Initial version.',))
if mibBuilder.loadTexts: hpicfRateLimitMIB.setLastUpdated('201710130000Z')
if mibBuilder.loadTexts: hpicfRateLimitMIB.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfRateLimitMIB.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfRateLimitMIB.setDescription('This MIB module describes HP rate limit information.')
hpicfRateLimitObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1))
hpicfICMPRateLimitObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1))
hpICMPRateLimitConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1))
hpICMPRateLimitPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1), )
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigTable.setDescription('A table that contains configuration objects on ICMP rate limit on a per interface basis.')
hpICMPRateLimitPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortConfigIndex"))
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigEntry.setDescription('Entry that contains configuration objects on ICMP rate limit on a per interface basis')
hpICMPRateLimitPortConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigIndex.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigIndex.setDescription('The interface index associated with this entry.')
hpICMPRateLimitPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortState.setStatus('deprecated')
if mibBuilder.loadTexts: hpICMPRateLimitPortState.setDescription('This object indicates whether ICMP rate limiting is enabled on the corresponding port. Because this is a State object it cannot distinguish between percent-based ICMP Rate-Limiting and the newer Kbps-based ICMP Rate-Limiting. Therefore, it has been deprecated in favor of hpICMPRateLimitPortControlMode.')
hpICMPRateLimitPortPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortPrct.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortPrct.setDescription('This indicates the percent of ICMP rate limit on the port. The value of this object must be interpreted under the context of hpICMPRateLimitPortState. A value of 0 is not the same as disabling, but rather all ICMP traffic must be dropped.')
hpICMPRateLimitPortAlarmFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("set", 2))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortAlarmFlag.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortAlarmFlag.setDescription('This object indicates whether ICMP rate limiting alarm has been sent. When an alarm is sent, this object is set to set(2). Once a management station changes this object to clear(1), an alarm can be sent again for this port.')
hpICMPRateLimitPortKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortKbps.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortKbps.setDescription('The maximum Kilobits-per-second of ICMP traffic that may be received inbound on the port. The value of this object must be interpreted under the context of hpICMPRateLimitControlMode. A value of 0 is not the same as disabling, but means instead that all ICMP traffic must be dropped.')
hpICMPRateLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("portPrct", 2), ("portKbps", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortControlMode.setDescription('The mode by which inbound ICMP traffic on this port will Rate-Limited. If icmpRateLimitPerPortOnly is configured, there will be a single maximum percentage-based rate for the entire port. If icmpRateLimitPerPortOnlyKbpsMode is configured, there will be a single maximum kilobits-per- second rate for the entire port. When ICMP rate-limiting is disabled, there are no maximum controls on inbound ICMP traffic for this port.')
hpICMPRateLimitPortIpPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipv4PacketsOnly", 1), ("ipv6PacketsOnly", 2), ("ipv4AndIpv6Packets", 3))).clone('ipv4PacketsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpICMPRateLimitPortIpPacketType.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortIpPacketType.setDescription('This object represents the type(s) of IP packet to which the specified ICMP rate-limit will be applied. The default is IPv4.')
hpICMPRateLimitPortNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 5, 0, 1)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitNotifyPortIndex"))
if mibBuilder.loadTexts: hpICMPRateLimitPortNotification.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortNotification.setDescription('This notification indicates limit has exceeded.')
hpICMPRateLimitNotifyPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 1, 2), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpICMPRateLimitNotifyPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitNotifyPortIndex.setDescription('The interface index associated with hpICMPRateLimitPortNotification event.')
hpicfBWMinEgressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2))
hpBWMinEgressPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1))
hpBWMinEgressPortNumQueues = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpBWMinEgressPortNumQueues.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortNumQueues.setDescription('The number of bandwidth minimum egress queues supported on this system.')
hpBWMinEgressPortPrctTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1, 2), )
if mibBuilder.loadTexts: hpBWMinEgressPortPrctTable.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortPrctTable.setDescription("A table that contains information about the port's egress Guaranteed Minimum Bandwidth percent configurations on this switch. The number of entries in this table is determined by hpBWMinEgressPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpBWMinEgressPortNumQueues being the highest.")
hpBWMinEgressPortPrctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortPrctQueue"))
if mibBuilder.loadTexts: hpBWMinEgressPortPrctEntry.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortPrctEntry.setDescription("The information associated with each port's egress Guaranteed Minimum Bandwidth percent configuration.")
hpBWMinEgressPortPrctQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpBWMinEgressPortPrctQueue.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortPrctQueue.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpBWMinEgressPortNumQueues being the highest.')
hpBWMinEgressPortPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpBWMinEgressPortPrct.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortPrct.setDescription('The percentage of Guaranteed Minimum bandwidth to be assigned to this egress queue for this port. Total values for all queues must not exceed 100 percent.')
hpicfBWMinIngressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3))
hpBWMinIngressPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1))
hpBWMinIngressPortNumQueues = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpBWMinIngressPortNumQueues.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortNumQueues.setDescription('The number of bandwidth minimum ingress queues supported on this system.')
hpBWMinIngressPortPrctTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1, 2), )
if mibBuilder.loadTexts: hpBWMinIngressPortPrctTable.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortPrctTable.setDescription("A table that contains information about the port's ingress Guaranteed Minimum Bandwidth percent configurations on this switch. The number of entries in this table is determined by hpBWMinIngressPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpBWMinIngressPortNumQueues being the highest.")
hpBWMinIngressPortPrctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortPrctQueue"))
if mibBuilder.loadTexts: hpBWMinIngressPortPrctEntry.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortPrctEntry.setDescription("The information associated with each port's ingress Guaranteed Minimum Bandwidth percent configuration.")
hpBWMinIngressPortPrctQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpBWMinIngressPortPrctQueue.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortPrctQueue.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpBWMinIngressPortNumQueues being the highest.')
hpBWMinIngressPortPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpBWMinIngressPortPrct.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortPrct.setDescription('The percentage of Guaranteed Minimum bandwidth to be assigned to this ingress queue for this port. Total values for all queues must not exceed 100 percent.')
hpicfRateLimitPortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4))
hpRateLimitPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1))
hpEgressRateLimitPortNumQueues = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEgressRateLimitPortNumQueues.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortNumQueues.setDescription('The number of egress rate-limiting queues supported on this system.')
hpEgressRateLimitPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2), )
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigTable.setDescription('A table that contains information about the port egress Rate-Limiting configurations on this switch.')
hpEgressRateLimitPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortIndex"))
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigEntry.setDescription("The information associated with each port's egress Rate-Limiting configuration.")
hpEgressRateLimitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpEgressRateLimitPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortIndex.setDescription('The ifIndex value which uniquely identifies a row in the Interfaces Table.')
hpEgressRateLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("egressRateLimitPerPortOnly", 2), ("egressRateLimitPerQueue", 3), ("egressRateLimitPerPortOnlyBpsMode", 4), ("egressRateLimitPerQueueBpsMode", 5), ("egressRateLimitPerPortOnlyKbpsMode", 6))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortControlMode.setDescription('The mode by which this port will be Rate-Limited on egress. If egressRateLimitPerPortOnly is configured, there will be a single maximum percentage-based rate for the entire port. If egressRateLimitPerQueue is configured, the values for each of the queues indicate the maximum percentage of port traffic that may be transmitted by that queue. If egressRateLimitPerPortOnlyKbpsMode is configured, there will be a single maximum kilobits-per-second rate for the entire port. The queues are defined under hpEgressRateLimitPortPrctTable. When egress rate-limiting is disabled, there are no maximum controls on egress for this port. NOTE : Currently, egressRateLimitPerPortOnlyBpsMode and egressRateLimitPerQueueBpsMode are not supported.')
hpEgressRateLimitPortSingleControlPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlPrct.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlPrct.setDescription('When hpEgressRateLimitPortControlMode is configured for egressRateLimitPerPortOnly, this value is the maximum percentage of traffic that may be transmitted by this port on egress.')
hpEgressRateLimitPortSingleControlBps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlBps.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlBps.setDescription('When hpEgressRateLimitPortControlMode is configured for egressRateLimitPerPortOnlyBpsMode, this value is the maximum bits-per-second of traffic that may be transmitted by this port on egress.')
hpEgressRateLimitPortSingleControlKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlKbps.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortSingleControlKbps.setDescription('When hpEgressRateLimitPortControlMode is configured for egressRateLimitPerPortOnlyKbpsMode, this value is the maximum kilobits-per-second of traffic that may be transmitted by this port on egress.')
hpEgressRateLimitPortQueueControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("egressRateLimitQueuePrctMode", 2), ("egressRateLimitQueueKbpsMode", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueControlMode.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueControlMode.setDescription('The mode by which queues on this port will be rate-limited on egress. If egressRateLimitQueuePrctMode is configured, the values for each of the queues indicate the maximum percentage of port traffic that may be transmitted by that queue.If egressRateLimitQueueKbpsMode is configured, the maximum transmission-rate values for each of the queues will be expressed in kilobits-per-second. The queues are defined under hpEgressRateLimitPortQueueTable. When egress rate-limiting is disabled, there are no maximum controls on egress for this port.')
hpEgressRateLimitPortPrctTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 3), )
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctTable.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctTable.setDescription('A table that contains information about the port egress Rate-Limiting percent configurations on this switch. The number of entries in this table is determined by hpEgressRateLimitPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest priority and queue hpEgressRateLimitPortNumQueues being the highest priority.')
hpEgressRateLimitPortPrctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 3, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortPrctQueue"))
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctEntry.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctEntry.setDescription("The information associated with each port's egress Rate-Limiting percent configuration.")
hpEgressRateLimitPortPrctQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctQueue.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortPrctQueue.setDescription('The queue associated with this entry. The priority o of the queues is in ascending order, starting with queue one being the lowest and queue hpEgressRateLimitgressPortNumQueues being the highest.')
hpEgressRateLimitPortPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortPrct.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortPrct.setDescription("The maximum percentage of traffic that may be transmitted by this port's queue on egress. hpEgressRateLimitPortControlMode must be configured to use egressRateLimitPerQueue for this to take effect. A value of 0-percent for any queue means that no traffic will ever be transmitted on this port for that egress queue.")
hpEgressRateLimitPortBpsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 4), )
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsTable.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsTable.setDescription('A table that contains information about the port egress Rate-Limiting bits-per-second configurations on this switch. The number of entries in this table is determined by hpEgressRateLimitPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest priority and queue hpEgressRateLimitPortNumQueues being the highest priority queue.')
hpEgressRateLimitPortBpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 4, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortBpsQueue"))
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsEntry.setDescription("The information associated with each port's egress Rate-Limiting bits-per-second configuration.")
hpEgressRateLimitPortBpsQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsQueue.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortBpsQueue.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpEgressRateLimitgressPortNumQueues being the highest.')
hpEgressRateLimitPortBps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortBps.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortBps.setDescription("The maximum bits-per-second of traffic that may be transmitted by this port's queue on egress. hpEgressRateLimitPortControlMode must be configured to use egressRateLimitPerQueue for this to take effect. A value of 0-percent for any queue means that no traffic will ever be transmitted on this port for that egress queue. The values for each queue must not exceed the bits-per-second capability of the current network link speed.")
hpEgressRateLimitPortQueueConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 5), )
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueConfigTable.setDescription('A table that contains information about the port egress- queue rate-limiting configurations on this switch.')
hpEgressRateLimitPortQueueConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 5, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortQueueIndex"))
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueConfigEntry.setDescription('The information associated with the egress rate-limiting configuration for the queues on each port.')
hpEgressRateLimitPortQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueIndex.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpEgressRateLimitEgressPortNumQueues being the highest.')
hpEgressRateLimitPortQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 4, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueMax.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueMax.setDescription("The maximum amount of traffic that may be transmitted by this port's corresponding queue on egress. When the value of hpEgressRateLimitPortQueueControlMode is egressRateLimitQueuePrctMode, this maximum value is a percentage. A limit of 100% acts as no limit. A value of 0-percent for any queue means that no traffic will ever be transmitted on this port for that egress queue. When the value of hpEgressRateLimitPortQueueControlMode is egressRateLimitQueueKbpsMode, this maximum value is in kilobits-per-second. A limit of kbps which matches the port's maximum media speed acts as no limit.")
hpicfIngressRateLimitPortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5))
hpRateLimitIngressPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1))
hpIngressRateLimitPortNumQueues = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpIngressRateLimitPortNumQueues.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortNumQueues.setDescription('The number of ingress rate-limiting queues supported on this system.')
hpIngressRateLimitPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2), )
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigTable.setDescription('A table that contains information about the port ingress Rate-Limiting configurations on this switch.')
hpIngressRateLimitPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortIndex"))
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigEntry.setDescription("The information associated with each port's ingress Rate-Limiting configuration.")
hpIngressRateLimitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpIngressRateLimitPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortIndex.setDescription('The ifIndex value which uniquely identifies a row in the Interfaces Table.')
hpIngressRateLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("ingressRateLimitPerPortOnly", 2), ("ingressRateLimitPerQueue", 3), ("ingressRateLimitPerPortOnlyBpsMode", 4), ("ingressRateLimitPerQueueBpsMode", 5), ("ingressRateLimitPerPortOnlyKbpsMode", 6))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortControlMode.setDescription('The mode by which this port will be Rate-Limited on ingress. If ingressRateLimitPerPortOnly is configured, there will be a single maximum percentage-based rate for the entire port. If ingressRateLimitPerQueue is configured, the values for each of the queues indicate the maximum percentage of port traffic that may be transmitted by that queue. If ingressRateLimitPerPortOnlyKbpsMode is configured, there will be a single maximum kilobits-per-second rate for the entire port. The queues are defined under hpIngressRateLimitPortPrctTable. When ingress rate-limiting is disabled, there are no maximum controls on ingress for this port. NOTE : Currently, IngressRateLimitPerPortOnlyBpsMode and ingressRateLimitPerQueueBpsMode are not supported.')
hpIngressRateLimitPortSingleControlPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlPrct.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlPrct.setDescription('When hpIngressRateLimitPortControlMode is configured for ingressRateLimitPerPortOnly, this value is the maximum percentage of traffic that may be transmitted by this port on egress.')
hpIngressRateLimitPortSingleControlBps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlBps.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlBps.setDescription('When hpIngressRateLimitPortControlMode is configured for ingressRateLimitPerPortOnlyBpsMode, this value is the maximum bits-per-second of traffic that may be transmitted by this port on ingress.')
hpIngressRateLimitPortSingleControlKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlKbps.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortSingleControlKbps.setDescription('When hpIngressRateLimitPortControlMode is configured for ingressRateLimitPerPortOnlyKbpsMode, this value is the maximum kilobits-per-second of traffic that may be transmitted by this port on ingress.')
hpIngressRateLimitPortPrctTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 3), )
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctTable.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctTable.setDescription('A table that contains information about the port ingress Rate-Limiting percent configurations on this switch. The number of entries in this table is determined by hpIngressRateLimitPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest priority and queue hpIngressRateLimitPortNumQueues being the highest priority.')
hpIngressRateLimitPortPrctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 3, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortPrctQueue"))
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctEntry.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctEntry.setDescription("The information associated with each port's ingress Rate-Limiting percent configuration.")
hpIngressRateLimitPortPrctQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctQueue.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortPrctQueue.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpIngressRateLimitgressPortNumQueues being the highest.')
hpIngressRateLimitPortPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortPrct.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortPrct.setDescription("The maximum percentage of traffic that may be transmitted by this port's queue on ingress. hpIngressRateLimitPortControlMode must be configured to use ingressRateLimitPerQueue for this to take effect. A value of 0-percent for any queue means that no traffic will ever be transmitted on this port for that ingress queue. The values for each queue must not exceed 100 percent.")
hpIngressRateLimitPortBpsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 4), )
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsTable.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsTable.setDescription('A table that contains information about the port ingress Rate-Limiting bits-per-second configurations on this switch. The number of entries in this table is determined by hpIngressRateLimitPortNumQueues. The priority of the queues is in ascending order, starting with queue one being the lowest priority and queue hpIngressRateLimitPortNumQueues being the highest priority queue.')
hpIngressRateLimitPortBpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 4, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortIndex"), (0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortBpsQueue"))
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsEntry.setDescription("The information associated with each port's egress Rate-Limiting bits-per-second configuration.")
hpIngressRateLimitPortBpsQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsQueue.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortBpsQueue.setDescription('The queue associated with this entry. The priority of the queues is in ascending order, starting with queue one being the lowest and queue hpIngressRateLimitgressPortNumQueues being the highest.')
hpIngressRateLimitPortBps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 5, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressRateLimitPortBps.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortBps.setDescription("The maximum bits-per-second of traffic that may be transmitted by this port's queue on ingress. hpIngressRateLimitPortControlMode must be configured to use ingressRateLimitPerQueue for this to take effect. A value of 0-percent for any queue means that no traffic will ever be transmitted on this port for that ingress queue. The values for each queue must not exceed the bits-per-second capability of the current network link speed.")
hpicfIngressBcastLimitPortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6))
hpBcastLimitIngressPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1))
hpIngressBcastLimitPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1), )
if mibBuilder.loadTexts: hpIngressBcastLimitPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortConfigTable.setDescription('A table that contains information about the port ingress Broadcast-Limiting configurations on this switch.')
hpIngressBcastLimitPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortIndex"))
if mibBuilder.loadTexts: hpIngressBcastLimitPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortConfigEntry.setDescription("The information associated with each port's ingress Broadcast-Limiting configuration.")
hpIngressBcastLimitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpIngressBcastLimitPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortIndex.setDescription('The ifIndex value which uniquely identifies a row in the Interfaces Table.')
hpIngressBcastLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("ingressBcastLimitPerPortOnly", 2), ("ingressBcastLimitPerPortOnlyKbpsMode", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressBcastLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortControlMode.setDescription('The mode by which this port will be Broadcast-Limited on ingress. If ingressBcastLimitPerPortOnly is configured, there will be a single maximum percentage-based broadcast traffic limit for the entire port. If ingressBcastLimitPerPortOnlyKbpsMode is configured, there will be a single maximum kilobits-per-second maximum broadcast traffic rate for the entire port. When ingress Broadcast-limiting is disabled, there are no maximum broadcast traffic controls on ingress for this port.')
hpIngressBcastLimitPortSingleControlPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressBcastLimitPortSingleControlPrct.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortSingleControlPrct.setDescription('When hpIngressBcastLimitPortControlMode is configured for ingressBcastLimitPerPortOnly, this value is the maximum percentage of traffic that may be transmitted by this port on ingress.')
hpIngressBcastLimitPortSingleControlKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressBcastLimitPortSingleControlKbps.setStatus('current')
if mibBuilder.loadTexts: hpIngressBcastLimitPortSingleControlKbps.setDescription('When hpIngressBcastLimitPortControlMode is configured for ingressBcastLimitPerPortOnlyKbpsMode, this value is the maximum kilobits-per-second of broadcast traffic that may be transmitted by this port on ingress.')
hpicfIngressMcastLimitPortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7))
hpMcastLimitIngressPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1))
hpIngressMcastLimitPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1), )
if mibBuilder.loadTexts: hpIngressMcastLimitPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortConfigTable.setDescription('A table that contains information about the port ingress Multicast-Limiting configurations on this switch.')
hpIngressMcastLimitPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortIndex"))
if mibBuilder.loadTexts: hpIngressMcastLimitPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortConfigEntry.setDescription("The information associated with each port's ingress Multicast-Limiting configuration.")
hpIngressMcastLimitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpIngressMcastLimitPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortIndex.setDescription('The ifIndex value which uniquely identifies a row in the Interfaces Table.')
hpIngressMcastLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("ingressMcastLimitPerPortOnly", 2), ("ingressMcastLimitPerPortOnlyKbpsMode", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressMcastLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortControlMode.setDescription('The mode by which this port will be Multicast-Limited on ingress. If ingressMcastLimitPerPortOnly is configured, there will be a single maximum percentage-based multicast traffic limit for the entire port. If ingressMcastLimitPerPortOnlyKbpsMode is configured, there will be a single maximum kilobits-per-second maximum multicast traffic rate for the entire port. When ingress Multicast-limiting is disabled, there are no maximum multicast traffic controls on ingress for this port.')
hpIngressMcastLimitPortSingleControlPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressMcastLimitPortSingleControlPrct.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortSingleControlPrct.setDescription('When hpIngressMcastLimitPortControlMode is configured for ingressMcastLimitPerPortOnly, this value is the maximum percentage of multicast traffic that may be transmitted by this port on ingress.')
hpIngressMcastLimitPortSingleControlKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpIngressMcastLimitPortSingleControlKbps.setStatus('current')
if mibBuilder.loadTexts: hpIngressMcastLimitPortSingleControlKbps.setDescription('When hpIngressMcastLimitPortControlMode is configured for ingressMcastLimitPerPortOnlyKbpsMode, this value is the maximum kilobits-per-second of multicast traffic that may be transmitted by this port on ingress.')
hpicfUnknownUnicastLimitPortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8))
hpUnknownUnicastLimitPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1))
hpUnknownUnicastLimitConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1), )
if mibBuilder.loadTexts: hpUnknownUnicastLimitConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitConfigTable.setDescription('A table that contains information about the unknown-unicast rate limiting configurations on this switch.')
hpUnknownUnicastLimitConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortIndex"))
if mibBuilder.loadTexts: hpUnknownUnicastLimitConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitConfigEntry.setDescription("The information associated with each port's unknown-unicast rate limiting configuration.")
hpUnknownUnicastLimitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortIndex.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortIndex.setDescription('The ifIndex value which uniquely identifies a row in the interfaces table.')
hpUnknownUnicastLimitPortControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("unknownUnicastLimitPerPortOnly", 2), ("unknownUnicastLimitPerPortOnlyKbpsMode", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortControlMode.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortControlMode.setDescription('The mode by which unknown-unicast ingress traffic on this port will be rate limited. If unknownUnicastLimitPerPortOnly is configured, the limit will be a percentage of the current line rate of the port. The percentage is specified in hpUnknownUnicastLimitPortSingleControlPrct. If unknownUnicastLimitPerPortOnlyKbpsMode is configured, the limit will be an absolute value in kilobits-per-second. The kbps rate is specified in hpUnknownUnicastLimitPortSingleControlKbps. If disabled is configured, any unknown-unicast rate limit will be removed.')
hpUnknownUnicastLimitPortSingleControlPrct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortSingleControlPrct.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortSingleControlPrct.setDescription('When hpUnknownUnicastLimitPortControlMode is unknownUnicastLimitPerPortOnly, this value is the maximum allowed ingress rate for unknown-unicast traffic on this port as a percentage of the current line rate.')
hpUnknownUnicastLimitPortSingleControlKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 8, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortSingleControlKbps.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUnicastLimitPortSingleControlKbps.setDescription('When hpUnknownUnicastLimitPortControlMode is UnknownUnicastLimitPerPortOnlyKbpsMode, this value is the maximum allowed ingress rate for unknown-unicast traffic on this port in kilobits-per-second.')
hpicfIngressRateLimitVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9))
hpicfIngressRateLimitVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9, 1), )
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanConfigTable.setDescription('A table of VLAN rate limits.')
hpicfIngressRateLimitVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9, 1, 1), ).setIndexNames((0, "HP-ICF-RATE-LIMIT-MIB", "hpicfIngressRateLimitVlanIndex"))
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanConfigEntry.setDescription('A set of objects used to configure rate limits on a VLANs.')
hpicfIngressRateLimitVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanIndex.setDescription('The VLAN ifIndex value that uniquely identifies a row in the Interfaces Table and corresponds to the VLAN on which the rate limit is being set.')
hpicfIngressRateLimitVlanControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("ingressVlanKbps", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanControlMode.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanControlMode.setDescription('The rate limit mode. A value of 1 indicates that there is no rate limit set. A value of 2 indicates that the rate limit on the VLAN will be set in Kilobits per second.')
hpicfIngressRateLimitVlanKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 1, 9, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 260000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanKbps.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanKbps.setDescription("The maximum rate of inbound traffic permitted on the VLAN in kilobits per second. This limit is the total aggregate inbound traffic allowed across all ports in the VLAN. The value of this object only takes effect when hpicfIngressRateLimitVlanControlMode is set to 'ingressVlanKbps. A limit of 0 will drop all traffic. The actual traffic limit applied in hardware may be rounded down to the nearest multiple of the platform-dependent rate limiting granularity.")
hpicfRateLimitConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2))
hpicfRateLimitGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1))
hpicfRateLimitCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2))
hpICMPRateLimitPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 1)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortState"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortAlarmFlag"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitNotifyPortIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpICMPRateLimitPortConfigGroup = hpICMPRateLimitPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigGroup.setDescription('A collection of objects providing configuration to ICMP rate limiting on an interface.')
hpICMPRateLimitPortNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 2)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpICMPRateLimitPortNotifyGroup = hpICMPRateLimitPortNotifyGroup.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortNotifyGroup.setDescription('A collection of notifications used to indicate ICMP rate limiting on an interface events.')
hpBWMinIngressPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 3)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortPrct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpBWMinIngressPortConfigGroup = hpBWMinIngressPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpBWMinIngressPortConfigGroup.setDescription('A collection of objects providing configuration to Guaranteed Minimum ingress bandwidth on an interface.')
hpBWMinEgressPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 4)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortPrct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpBWMinEgressPortConfigGroup = hpBWMinEgressPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpBWMinEgressPortConfigGroup.setDescription('A collection of objects providing configuration to Guaranteed Minimum egress bandwidth on an interface.')
hpEgressRateLimitPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 5)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlBps"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortBps"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEgressRateLimitPortConfigGroup = hpEgressRateLimitPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigGroup.setDescription('A collection of objects providing configuration to Egress Rate-Limiting on an interface.')
hpIngressRateLimitPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 6)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortSingleControlBps"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortBps"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpIngressRateLimitPortConfigGroup = hpIngressRateLimitPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigGroup.setDescription('A collection of objects providing configuration to Ingress Rate-Limiting on an interface.')
hpICMPRateLimitPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 7)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortAlarmFlag"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitNotifyPortIndex"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortKbps"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortControlMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpICMPRateLimitPortConfigGroup2 = hpICMPRateLimitPortConfigGroup2.setStatus('deprecated')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigGroup2.setDescription('This replaces the deprecated hpICMPRateLimitPortConfigGroup. A collection of objects providing configuration to ICMP rate limiting on an interface.')
hpEgressRateLimitPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 8)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEgressRateLimitPortConfigGroup2 = hpEgressRateLimitPortConfigGroup2.setStatus('deprecated')
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigGroup2.setDescription('This replaces the deprecated hpEgressRateLimitPortConfigGroup. A collection of objects providing configuration to Egress Rate-Limiting on an interface.')
hpIngressRateLimitPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 9)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpIngressRateLimitPortConfigGroup2 = hpIngressRateLimitPortConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: hpIngressRateLimitPortConfigGroup2.setDescription('This replaces the deprecated hpIngressRateLimitPortConfigGroup. A collection of objects providing configuration to Ingress Rate-Limiting on an interface.')
hpBcastLimitIngressPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 10)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortSingleControlPrct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpBcastLimitIngressPortConfigGroup = hpBcastLimitIngressPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpBcastLimitIngressPortConfigGroup.setDescription('A collection of objects providing configuration to Ingress Broadcast Limiting on an interface.')
hpMcastLimitIngressPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 11)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortSingleControlPrct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpMcastLimitIngressPortConfigGroup = hpMcastLimitIngressPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpMcastLimitIngressPortConfigGroup.setDescription('A collection of objects providing configuration to Ingress Multicast Limiting on an interface.')
hpBcastLimitIngressPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 12)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressBcastLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpBcastLimitIngressPortConfigGroup2 = hpBcastLimitIngressPortConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: hpBcastLimitIngressPortConfigGroup2.setDescription('This replaces the deprecated hpBcastLimitIngressPortConfigGroup. A collection of objects providing configuration of Ingress Broadcast Limiting on an interface.')
hpMcastLimitIngressPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 13)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressMcastLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpMcastLimitIngressPortConfigGroup2 = hpMcastLimitIngressPortConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: hpMcastLimitIngressPortConfigGroup2.setDescription('This replaces the deprecated hpMcastLimitIngressPortConfigGroup A collection of objects providing configuration of Ingress Multicast Limiting on an interface.')
hpICMPRateLimitPortConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 14)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortAlarmFlag"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitNotifyPortIndex"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortKbps"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortIpPacketType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpICMPRateLimitPortConfigGroup3 = hpICMPRateLimitPortConfigGroup3.setStatus('current')
if mibBuilder.loadTexts: hpICMPRateLimitPortConfigGroup3.setDescription('This replaces the deprecated hpICMPRateLimitPortConfigGroup2. A collection of objects providing configuration for ICMP rate limiting on an interface.')
hpUnknownUcastLimitIngressPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 15)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortSingleControlPrct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpUnknownUcastLimitIngressPortConfigGroup = hpUnknownUcastLimitIngressPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpUnknownUcastLimitIngressPortConfigGroup.setDescription('A collection of objects providing configuration to Ingress Unknown Unicast traffic Limiting on an interface.')
hpicfIngressRateLimitVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 16)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpicfIngressRateLimitVlanControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpicfIngressRateLimitVlanKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIngressRateLimitVlanGroup = hpicfIngressRateLimitVlanGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfIngressRateLimitVlanGroup.setDescription('A collection of HP proprietary objects to support configuration of VLAN-based rate limits on HP Networking devices.')
hpUnknownUcastLimitIngressPortConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 17)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUnicastLimitPortSingleControlKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpUnknownUcastLimitIngressPortConfigGroup2 = hpUnknownUcastLimitIngressPortConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: hpUnknownUcastLimitIngressPortConfigGroup2.setDescription('A collection of objects providing configuration to Ingress Unknown Unicast traffic Limiting on an interface.')
hpEgressRateLimitPortConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 18)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortNumQueues"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortControlMode"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortPrct"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortSingleControlKbps"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortQueueControlMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEgressRateLimitPortConfigGroup3 = hpEgressRateLimitPortConfigGroup3.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortConfigGroup3.setDescription('This replaces the deprecated hpEgressRateLimitPortConfigGroup2. A collection of objects providing configuration to Egress Rate-Limiting on an interface.')
hpEgressRateLimitPortQueueConfigEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 1, 19)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortQueueMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEgressRateLimitPortQueueConfigEntryGroup = hpEgressRateLimitPortQueueConfigEntryGroup.setStatus('current')
if mibBuilder.loadTexts: hpEgressRateLimitPortQueueConfigEntryGroup.setDescription('A collection of objects providing configuration to egress rate-limit on an interface queues.')
hpicfRateLimitCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2, 1)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRateLimitCompliance = hpicfRateLimitCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfRateLimitCompliance.setDescription('The compliance statement for device support of HP-ICF-RATE-LIMIT MIB.')
hpicfRateLimitCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2, 2)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortNotifyGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpBcastLimitIngressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpMcastLimitIngressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUcastLimitIngressPortConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRateLimitCompliance1 = hpicfRateLimitCompliance1.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfRateLimitCompliance1.setDescription('The compliance statement for device support of HP-ICF-RATE-LIMIT MIB.')
hpicfRateLimitCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2, 3)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortConfigGroup3"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortNotifyGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpBcastLimitIngressPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpMcastLimitIngressPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUcastLimitIngressPortConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRateLimitCompliance2 = hpicfRateLimitCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfRateLimitCompliance2.setDescription('The compliance statement for device support of HP-ICF-RATE-LIMIT MIB.')
hpicfRateLimitCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2, 4)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpicfIngressRateLimitVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRateLimitCompliance3 = hpicfRateLimitCompliance3.setStatus('current')
if mibBuilder.loadTexts: hpicfRateLimitCompliance3.setDescription('The compliance statement for HP switches running IngressRateLimitVlan feature.')
hpicfRateLimitCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14, 2, 2, 5)).setObjects(("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortConfigGroup3"), ("HP-ICF-RATE-LIMIT-MIB", "hpICMPRateLimitPortNotifyGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinEgressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpBWMinIngressPortConfigGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortConfigGroup3"), ("HP-ICF-RATE-LIMIT-MIB", "hpEgressRateLimitPortQueueConfigEntryGroup"), ("HP-ICF-RATE-LIMIT-MIB", "hpIngressRateLimitPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpBcastLimitIngressPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpMcastLimitIngressPortConfigGroup2"), ("HP-ICF-RATE-LIMIT-MIB", "hpUnknownUcastLimitIngressPortConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRateLimitCompliance4 = hpicfRateLimitCompliance4.setStatus('current')
if mibBuilder.loadTexts: hpicfRateLimitCompliance4.setDescription('The compliance statement for device support of HP-ICF-RATE-LIMIT MIB.')
mibBuilder.exportSymbols("HP-ICF-RATE-LIMIT-MIB", hpicfICMPRateLimitObjects=hpicfICMPRateLimitObjects, hpIngressMcastLimitPortConfigTable=hpIngressMcastLimitPortConfigTable, hpBWMinIngressPortConfig=hpBWMinIngressPortConfig, hpEgressRateLimitPortSingleControlPrct=hpEgressRateLimitPortSingleControlPrct, hpBWMinIngressPortPrct=hpBWMinIngressPortPrct, hpBWMinIngressPortPrctEntry=hpBWMinIngressPortPrctEntry, hpUnknownUnicastLimitPortConfig=hpUnknownUnicastLimitPortConfig, hpBWMinEgressPortConfig=hpBWMinEgressPortConfig, hpUnknownUnicastLimitPortSingleControlPrct=hpUnknownUnicastLimitPortSingleControlPrct, hpicfIngressRateLimitVlanConfigTable=hpicfIngressRateLimitVlanConfigTable, hpEgressRateLimitPortQueueConfigTable=hpEgressRateLimitPortQueueConfigTable, hpicfRateLimitConformance=hpicfRateLimitConformance, hpicfIngressBcastLimitPortObjects=hpicfIngressBcastLimitPortObjects, hpIngressRateLimitPortBpsTable=hpIngressRateLimitPortBpsTable, hpMcastLimitIngressPortConfigGroup2=hpMcastLimitIngressPortConfigGroup2, hpicfRateLimitCompliance1=hpicfRateLimitCompliance1, hpicfRateLimitMIB=hpicfRateLimitMIB, hpUnknownUnicastLimitPortControlMode=hpUnknownUnicastLimitPortControlMode, hpEgressRateLimitPortBpsEntry=hpEgressRateLimitPortBpsEntry, hpBWMinIngressPortPrctQueue=hpBWMinIngressPortPrctQueue, hpIngressRateLimitPortPrctEntry=hpIngressRateLimitPortPrctEntry, hpIngressBcastLimitPortConfigTable=hpIngressBcastLimitPortConfigTable, hpicfRateLimitPortObjects=hpicfRateLimitPortObjects, hpUnknownUnicastLimitConfigTable=hpUnknownUnicastLimitConfigTable, hpEgressRateLimitPortControlMode=hpEgressRateLimitPortControlMode, hpIngressRateLimitPortPrct=hpIngressRateLimitPortPrct, hpEgressRateLimitPortQueueControlMode=hpEgressRateLimitPortQueueControlMode, hpEgressRateLimitPortConfigTable=hpEgressRateLimitPortConfigTable, hpRateLimitIngressPortConfig=hpRateLimitIngressPortConfig, hpicfIngressRateLimitPortObjects=hpicfIngressRateLimitPortObjects, hpEgressRateLimitPortPrctQueue=hpEgressRateLimitPortPrctQueue, hpIngressMcastLimitPortConfigEntry=hpIngressMcastLimitPortConfigEntry, hpIngressMcastLimitPortSingleControlKbps=hpIngressMcastLimitPortSingleControlKbps, hpicfIngressRateLimitVlanIndex=hpicfIngressRateLimitVlanIndex, hpIngressRateLimitPortSingleControlPrct=hpIngressRateLimitPortSingleControlPrct, hpBWMinEgressPortNumQueues=hpBWMinEgressPortNumQueues, hpIngressRateLimitPortIndex=hpIngressRateLimitPortIndex, hpIngressMcastLimitPortSingleControlPrct=hpIngressMcastLimitPortSingleControlPrct, hpUnknownUnicastLimitConfigEntry=hpUnknownUnicastLimitConfigEntry, hpEgressRateLimitPortPrctEntry=hpEgressRateLimitPortPrctEntry, hpBWMinIngressPortNumQueues=hpBWMinIngressPortNumQueues, hpBWMinIngressPortPrctTable=hpBWMinIngressPortPrctTable, hpICMPRateLimitPortConfigGroup3=hpICMPRateLimitPortConfigGroup3, hpicfRateLimitObjects=hpicfRateLimitObjects, hpIngressBcastLimitPortSingleControlPrct=hpIngressBcastLimitPortSingleControlPrct, hpICMPRateLimitPortState=hpICMPRateLimitPortState, hpBWMinEgressPortConfigGroup=hpBWMinEgressPortConfigGroup, hpicfRateLimitGroups=hpicfRateLimitGroups, hpEgressRateLimitPortPrctTable=hpEgressRateLimitPortPrctTable, hpICMPRateLimitPortConfigEntry=hpICMPRateLimitPortConfigEntry, hpBWMinEgressPortPrct=hpBWMinEgressPortPrct, hpICMPRateLimitPortConfigGroup2=hpICMPRateLimitPortConfigGroup2, hpEgressRateLimitPortConfigGroup3=hpEgressRateLimitPortConfigGroup3, hpEgressRateLimitPortConfigGroup2=hpEgressRateLimitPortConfigGroup2, hpICMPRateLimitPortConfigIndex=hpICMPRateLimitPortConfigIndex, hpEgressRateLimitPortConfigEntry=hpEgressRateLimitPortConfigEntry, hpBWMinEgressPortPrctQueue=hpBWMinEgressPortPrctQueue, hpBcastLimitIngressPortConfig=hpBcastLimitIngressPortConfig, hpicfIngressRateLimitVlanKbps=hpicfIngressRateLimitVlanKbps, hpIngressRateLimitPortSingleControlBps=hpIngressRateLimitPortSingleControlBps, hpicfRateLimitCompliance4=hpicfRateLimitCompliance4, hpIngressRateLimitPortNumQueues=hpIngressRateLimitPortNumQueues, hpicfRateLimitCompliance3=hpicfRateLimitCompliance3, PYSNMP_MODULE_ID=hpicfRateLimitMIB, hpicfBWMinIngressObjects=hpicfBWMinIngressObjects, hpEgressRateLimitPortSingleControlKbps=hpEgressRateLimitPortSingleControlKbps, hpEgressRateLimitPortNumQueues=hpEgressRateLimitPortNumQueues, hpIngressBcastLimitPortControlMode=hpIngressBcastLimitPortControlMode, hpIngressRateLimitPortConfigGroup=hpIngressRateLimitPortConfigGroup, hpIngressRateLimitPortSingleControlKbps=hpIngressRateLimitPortSingleControlKbps, hpIngressRateLimitPortPrctQueue=hpIngressRateLimitPortPrctQueue, hpMcastLimitIngressPortConfig=hpMcastLimitIngressPortConfig, hpIngressMcastLimitPortControlMode=hpIngressMcastLimitPortControlMode, hpIngressRateLimitPortConfigGroup2=hpIngressRateLimitPortConfigGroup2, hpICMPRateLimitPortNotification=hpICMPRateLimitPortNotification, hpBcastLimitIngressPortConfigGroup2=hpBcastLimitIngressPortConfigGroup2, hpIngressMcastLimitPortIndex=hpIngressMcastLimitPortIndex, hpICMPRateLimitPortConfigGroup=hpICMPRateLimitPortConfigGroup, hpIngressBcastLimitPortConfigEntry=hpIngressBcastLimitPortConfigEntry, hpIngressBcastLimitPortIndex=hpIngressBcastLimitPortIndex, hpEgressRateLimitPortSingleControlBps=hpEgressRateLimitPortSingleControlBps, hpIngressRateLimitPortPrctTable=hpIngressRateLimitPortPrctTable, hpEgressRateLimitPortBps=hpEgressRateLimitPortBps, hpEgressRateLimitPortQueueConfigEntry=hpEgressRateLimitPortQueueConfigEntry, hpICMPRateLimitPortConfigTable=hpICMPRateLimitPortConfigTable, hpIngressRateLimitPortConfigEntry=hpIngressRateLimitPortConfigEntry, hpicfRateLimitCompliance2=hpicfRateLimitCompliance2, hpIngressBcastLimitPortSingleControlKbps=hpIngressBcastLimitPortSingleControlKbps, hpICMPRateLimitPortNotifyGroup=hpICMPRateLimitPortNotifyGroup, hpicfIngressMcastLimitPortObjects=hpicfIngressMcastLimitPortObjects, hpUnknownUnicastLimitPortIndex=hpUnknownUnicastLimitPortIndex, hpicfRateLimitCompliances=hpicfRateLimitCompliances, hpIngressRateLimitPortBps=hpIngressRateLimitPortBps, hpUnknownUcastLimitIngressPortConfigGroup2=hpUnknownUcastLimitIngressPortConfigGroup2, hpEgressRateLimitPortQueueConfigEntryGroup=hpEgressRateLimitPortQueueConfigEntryGroup, hpIngressRateLimitPortConfigTable=hpIngressRateLimitPortConfigTable, hpICMPRateLimitPortPrct=hpICMPRateLimitPortPrct, hpICMPRateLimitNotifyPortIndex=hpICMPRateLimitNotifyPortIndex, hpBWMinEgressPortPrctEntry=hpBWMinEgressPortPrctEntry, hpEgressRateLimitPortBpsQueue=hpEgressRateLimitPortBpsQueue, hpUnknownUnicastLimitPortSingleControlKbps=hpUnknownUnicastLimitPortSingleControlKbps, hpICMPRateLimitPortControlMode=hpICMPRateLimitPortControlMode, hpEgressRateLimitPortBpsTable=hpEgressRateLimitPortBpsTable, hpICMPRateLimitConfig=hpICMPRateLimitConfig, hpicfIngressRateLimitVlanConfigEntry=hpicfIngressRateLimitVlanConfigEntry, hpEgressRateLimitPortIndex=hpEgressRateLimitPortIndex, hpicfRateLimitCompliance=hpicfRateLimitCompliance, hpicfBWMinEgressObjects=hpicfBWMinEgressObjects, hpBWMinIngressPortConfigGroup=hpBWMinIngressPortConfigGroup, hpMcastLimitIngressPortConfigGroup=hpMcastLimitIngressPortConfigGroup, hpIngressRateLimitPortControlMode=hpIngressRateLimitPortControlMode, hpEgressRateLimitPortConfigGroup=hpEgressRateLimitPortConfigGroup, hpIngressRateLimitPortBpsEntry=hpIngressRateLimitPortBpsEntry, hpicfUnknownUnicastLimitPortObjects=hpicfUnknownUnicastLimitPortObjects, hpBWMinEgressPortPrctTable=hpBWMinEgressPortPrctTable, hpICMPRateLimitPortKbps=hpICMPRateLimitPortKbps, hpicfIngressRateLimitVlanControlMode=hpicfIngressRateLimitVlanControlMode, hpEgressRateLimitPortQueueMax=hpEgressRateLimitPortQueueMax, hpBcastLimitIngressPortConfigGroup=hpBcastLimitIngressPortConfigGroup, hpEgressRateLimitPortQueueIndex=hpEgressRateLimitPortQueueIndex, hpUnknownUcastLimitIngressPortConfigGroup=hpUnknownUcastLimitIngressPortConfigGroup, hpICMPRateLimitPortAlarmFlag=hpICMPRateLimitPortAlarmFlag, hpicfIngressRateLimitVlanGroup=hpicfIngressRateLimitVlanGroup, hpIngressRateLimitPortBpsQueue=hpIngressRateLimitPortBpsQueue, hpEgressRateLimitPortPrct=hpEgressRateLimitPortPrct, hpicfIngressRateLimitVlanObjects=hpicfIngressRateLimitVlanObjects, hpRateLimitPortConfig=hpRateLimitPortConfig, hpICMPRateLimitPortIpPacketType=hpICMPRateLimitPortIpPacketType)
