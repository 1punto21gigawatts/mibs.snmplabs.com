#
# PySNMP MIB module TapeAlert-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TapeAlert-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:28:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, ObjectIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Counter32, ModuleIdentity, Unsigned32, TimeTicks, MibIdentifier, IpAddress, iso, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ObjectIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Counter32", "ModuleIdentity", "Unsigned32", "TimeTicks", "MibIdentifier", "IpAddress", "iso", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3))
netPeripheral = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9))
netTape = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7))
tapeAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1))
control = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1))
revMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: revMajor.setStatus('mandatory')
if mibBuilder.loadTexts: revMajor.setDescription('The TapeAlert major revision level (left of the decimal). Used for presence checking.')
revMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: revMinor.setStatus('mandatory')
if mibBuilder.loadTexts: revMinor.setDescription('The TapeAlert minor revision level (right of the decimal).')
trapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapEnable.setStatus('optional')
if mibBuilder.loadTexts: trapEnable.setDescription('Indicates whether agent should or should not send TapeAlert traps.')
autoCleanEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCleanEnable.setStatus('optional')
if mibBuilder.loadTexts: autoCleanEnable.setDescription('Indicates whether application should or should not perform an automatic cleaning operation based on TapeAlert cleaning information.')
autoCopyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCopyEnable.setStatus('optional')
if mibBuilder.loadTexts: autoCopyEnable.setDescription('Indicates whether application should or should not perform an automatic tape copy or tape discard operation based on TapeAlert media information.')
numDevices = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numDevices.setStatus('mandatory')
if mibBuilder.loadTexts: numDevices.setDescription('Total number of tape devices attached to server and managed by TapeAlert agent. Zero means no devices present.')
devTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3), )
if mibBuilder.loadTexts: devTable.setStatus('mandatory')
if mibBuilder.loadTexts: devTable.setDescription('A list of tape device information entries. The number of entries is given by the value of numDevices.')
devInfo = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1), ).setIndexNames((0, "TapeAlert-MIB", "devNum"))
if mibBuilder.loadTexts: devInfo.setStatus('mandatory')
if mibBuilder.loadTexts: devInfo.setDescription('A tape device information entry, containing configuration information for a particular tape device.')
devNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devNum.setStatus('mandatory')
if mibBuilder.loadTexts: devNum.setDescription('A unique index value for each tape device. Its value ranges between 1 and the value of numDevices.')
tapeAlertCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeAlertCapability.setStatus('mandatory')
if mibBuilder.loadTexts: tapeAlertCapability.setDescription('Indicates whether tape device supports TapeAlert, with zero indicating not supported and one indicating supported')
hbaName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hbaName.setStatus('mandatory')
if mibBuilder.loadTexts: hbaName.setDescription('Name of SCSI Host Bus Adaptor connected to tape drive, for example Adaptec AHA2740AT.')
hbaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hbaNumber.setStatus('mandatory')
if mibBuilder.loadTexts: hbaNumber.setDescription('The number of SCSI Host Bus Adaptor connected to tape drive, for example 0 is first HBA on the system.')
hbaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hbaChannel.setStatus('mandatory')
if mibBuilder.loadTexts: hbaChannel.setDescription('SCSI Channel number of SCSI Host Bus Adaptor connected to tape drive, for example 0 is first SCSI channel of HBA.')
driveScsiID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveScsiID.setStatus('mandatory')
if mibBuilder.loadTexts: driveScsiID.setDescription('SCSI ID of Tape Device.')
driveInquiry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveInquiry.setStatus('mandatory')
if mibBuilder.loadTexts: driveInquiry.setDescription('SCSI Inquiry data of Tape Device, with vendor ID data followed by device ID data.')
driveFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveFirmware.setStatus('mandatory')
if mibBuilder.loadTexts: driveFirmware.setDescription('Firmware revision of Tape Device.')
driveType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveType.setStatus('mandatory')
if mibBuilder.loadTexts: driveType.setDescription('Device type of Tape Device, for example DDS1')
driveCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveCompress.setStatus('mandatory')
if mibBuilder.loadTexts: driveCompress.setDescription('Indicates whether Tape Device supports hardware compression, with zero indicating not supported and one indicating supported.')
currentMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentMedia.setStatus('mandatory')
if mibBuilder.loadTexts: currentMedia.setDescription('Software label of current media loaded in drive')
driveSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveSerialNum.setStatus('optional')
if mibBuilder.loadTexts: driveSerialNum.setDescription('Hardware Serial Number of Tape Device, if available')
numErrors = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numErrors.setStatus('mandatory')
if mibBuilder.loadTexts: numErrors.setDescription('Total number of TapeAlert error traps logged by TapeAlert agent since agent was initialised. Zero means that no TapeAlert trap events occurred since initialisation.')
errorHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5), )
if mibBuilder.loadTexts: errorHistoryTable.setStatus('mandatory')
if mibBuilder.loadTexts: errorHistoryTable.setDescription('A list of historical error entries for all tape devices on the server. The list should contain an entry for each TapeAlert trap sent since the TapeAlert agent was initialised.')
errorHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1), ).setIndexNames((0, "TapeAlert-MIB", "errorIndex"))
if mibBuilder.loadTexts: errorHistoryEntry.setStatus('mandatory')
if mibBuilder.loadTexts: errorHistoryEntry.setDescription('An error entry in the errorHistoryTable, containing information on a historic TapeAlert trap sent by the TapeAlert agent')
errorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorIndex.setStatus('mandatory')
if mibBuilder.loadTexts: errorIndex.setDescription('A unique index value for each error entry. Its value ranges between 1 and the value of numErrors.')
errorHbaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorHbaNumber.setStatus('mandatory')
if mibBuilder.loadTexts: errorHbaNumber.setDescription('The number of SCSI Host Bus Adaptor connected to the tape drive that caused this specific TapeAlert error, for example 0 is first HBA on the system.')
errorHbaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorHbaChannel.setStatus('mandatory')
if mibBuilder.loadTexts: errorHbaChannel.setDescription('SCSI channel number of SCSI Host Bus Adaptor connected to the tape drive that caused this specific TapeAlert error, for example 0 is first SCSI channel of HBA.')
errorDriveScsiID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorDriveScsiID.setStatus('mandatory')
if mibBuilder.loadTexts: errorDriveScsiID.setDescription('SCSI of the tape drive that caused this specific TapeAlert error, for example 0 is first SCSI channel of HBA.')
errorDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorDate.setStatus('mandatory')
if mibBuilder.loadTexts: errorDate.setDescription('Date and time of the error in yyyymmddHHMMSS format: where yyyy year 1980-9999 mm month 01-12 dd day 01-31 HH hour 00-23 MM minute 00-59 SS second 00-60 (use 60 for leap-second) Example 14:35:26 5th Oct 1996 = 19961005143526')
errorTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorTrapNum.setStatus('mandatory')
if mibBuilder.loadTexts: errorTrapNum.setDescription('TapeAlert trap number of the error. For tape drive/autoloader traps, range 1-64. For library device traps, range 256-319 (Library device traps = TapeAlert flag + 255)')
errorMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorMedia.setStatus('mandatory')
if mibBuilder.loadTexts: errorMedia.setDescription('Software label of the media that was loaded in the tape drive at the time of the error.')
tapeAlertTrap1 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,1)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap1.setDescription('The tape drive is having problems reading data. No data has been lost, but there has been a reduction in the performance of the tape.')
tapeAlertTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,2)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap2.setDescription('The tape drive is having problems writing data. No data has been lost, but there has been a reduction in the capacity of the tape.')
tapeAlertTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,3)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap3.setDescription('The operation has stopped because an error has occured while reading or writing data which the drive cannot correct.')
tapeAlertTrap4 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,4)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"), ("TapeAlert-MIB", "currentMedia"))
if mibBuilder.loadTexts: tapeAlertTrap4.setDescription('Your data is at risk: 1. Copy any data you require from this tape 2. Do not use this tape again 3. Restart the operation with a different tape')
tapeAlertTrap5 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,5)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap5.setDescription('The tape is damaged or the drive is faulty. Call the tape drive supplier helpline.')
tapeAlertTrap6 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,6)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap6.setDescription('The tape is from a faulty batch or the tape drive is faulty: 1. Use a good tape to test the drive. 2. If the problem persists, call the tape drive supplier helpline.')
tapeAlertTrap7 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,7)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"), ("TapeAlert-MIB", "currentMedia"))
if mibBuilder.loadTexts: tapeAlertTrap7.setDescription('The tape cartridge has reached the end of its calculated useful life: 1. Copy any data you need to another tape 2. Discard the old tape.')
tapeAlertTrap8 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,8)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap8.setDescription('The tape cartridge is not data-grade. Any data you back up to the tape is at risk. Replace the cartridge with a data-grade tape.')
tapeAlertTrap9 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,9)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap9.setDescription('You are trying to write to a write-protected cartridge. Remove the write-protection or use another tape.')
tapeAlertTrap10 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,10)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap10.setDescription('You cannot eject the cartridge because the tape drive is in use. Wait until the operation is complete before ejecting the cartridge.')
tapeAlertTrap11 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,11)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap11.setDescription('The tape in the drive is a cleaning cartridge. If you want to back up or restore, insert a data-grade tape.')
tapeAlertTrap12 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,12)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap12.setDescription('You have tried to load a cartridge of a type which is not supported by this drive.')
tapeAlertTrap13 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,13)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap13.setDescription('The operation has failed because the tape in the drive has snapped: 1. Discard the old tape. 2. Restart the operation with a different tape.')
tapeAlertTrap14 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,14)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap14.setDescription('The operation has failed because the tape in the drive has snapped: 1. Do not attempt to extract the tape cartridge. 2. Call the tape drive supplier helpline.')
tapeAlertTrap15 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,15)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"), ("TapeAlert-MIB", "currentMedia"))
if mibBuilder.loadTexts: tapeAlertTrap15.setDescription('The memory in the tape cartridge has failed, which reduces performance. Do not use the cartridge for further backup operations.')
tapeAlertTrap16 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,16)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap16.setDescription('The operation has failed because the tape cartridge was manually ejected while the tape drive was actively writing or reading.')
tapeAlertTrap17 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,17)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap17.setDescription('You have loaded a cartridge of a type that is read-only in this drive. The cartridge will appear as write-protected')
tapeAlertTrap18 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,18)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap18.setDescription('The directory on the tape cartridge has been corrupted. File search performance will be degraded.')
tapeAlertTrap19 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,19)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"), ("TapeAlert-MIB", "currentMedia"))
if mibBuilder.loadTexts: tapeAlertTrap19.setDescription('The tape cartridge is nearing the end of its useful life. It is recommended that you: 1. Use another tape cartridge for your next backup. 2. Store this tape cartridge in a safe place in case you need to restore data from it.')
tapeAlertTrap20 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,20)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap20.setDescription('The tape drive needs cleaning: 1. If the operation has stopped, eject the tape and clean the drive 2. If the operation has not stopped, wait for it to finish and then clean the drive. Check the tape drive users manual for device specific cleaning instructions.')
tapeAlertTrap21 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,21)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap21.setDescription('The tape drive is due for routine cleaning: 1. Wait for the current operation to finish. 2. Then use a cleaning cartridge. Check the tape drive users manual for device specific cleaning instructions.')
tapeAlertTrap22 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,22)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap22.setDescription('The last cleaning cartridge used in the tape drive has worn out: 1. Discard the worn out cleaning cartridge. 2. Wait for the current operation to finish. 3. Then use a new cleaning cartridge.')
tapeAlertTrap23 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,23)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap23.setDescription('The last cleaning cartridge used in the tape drive was an invalid type: 1. Do not use this cleaning cartridge in this drive. 2. Wait for the current operation to finish. 3. Then use a valid cleaning cartridge.')
tapeAlertTrap29 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,29)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap29.setDescription('Preventive maintenance of the tape drive is required. Check the tape drive users manual for device specific preventive maintenance tasks or call the tape drive supplier helpline.')
tapeAlertTrap30 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,30)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap30.setDescription('The tape drive has a hardware fault: 1. Eject the tape or magazine. 2. Reset the drive. 3. Restart the operation.')
tapeAlertTrap31 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,31)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap31.setDescription('The tape drive has a hardware fault: 1. Turn the tape drive off and then on again. 2. Restart the operation. 3. If the problem persists, call the tape drive supplier helpline. Check the tape drive users manual for device specific instructions on turning the device power on and off.')
tapeAlertTrap32 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,32)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap32.setDescription('The tape drive has a problem with the host interface: 1. Check the cables and cable connections. 2. Restart the operation.')
tapeAlertTrap33 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,33)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap33.setDescription('The operation has failed: 1. Eject the tape or magazine. 2. Insert the tape or magazine again. 3. Restart the operation.')
tapeAlertTrap34 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,34)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap34.setDescription('The firmware download has failed because you have tried to use the incorrect firmware for this tape drive. Obtain the correct firmware and try again.')
tapeAlertTrap35 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,35)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap35.setDescription('Environmental conditions inside the tape drive are exceeding the humidity specifications')
tapeAlertTrap36 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,36)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap36.setDescription('Environmental conditions inside the tape drive are exceeding the temperature specifications')
tapeAlertTrap37 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,37)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap37.setDescription('The voltage supply to the tape drive exceeds specifications')
tapeAlertTrap38 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,38)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap38.setDescription('A hardware failure of the tape drive is predicted. Call the tape drive supplier helpline.')
tapeAlertTrap39 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,39)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap39.setDescription('The tape drive may have a hardware fault. Run extended diagnostics to verify and diagnose the problem. Check the tape drive users manual for device specific instructions on running extended diagnostic tests.')
tapeAlertTrap40 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,40)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap40.setDescription('The changer mechanism is having difficulty communicating with the tape drive: 1. Turn the autoloader off then on. 2. Restart the operation. 3. If problem persists, call the tape drive supplier helpline.')
tapeAlertTrap41 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,41)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap41.setDescription('A tape has been left in the autoloader by a previous hardware fault: 1. Insert an empty magazine to clear the fault. 2. If the fault does not clear, turn the autoloader off and then on again. 3. If the problem persists, call the tape drive supplier helpline.')
tapeAlertTrap42 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,42)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap42.setDescription('There is a problem with the autoloader mechanism.')
tapeAlertTrap43 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,43)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap43.setDescription('The operation has failed because the autoloader door is open: 1. Clear any obstructions from the autoloader door. 2. Eject the magazine and then insert it again. 3. If the fault does not clear, turn the autoloader off and then on again. 4. If the problem persists, call the tape drive supplier helpline.')
tapeAlertTrap44 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,44)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap44.setDescription('The autoloader has a hardware fault: 1. Turn the autoloader off and then on again. 2. Restart the operation. 3. If the problem persists, call the tape drive supplier helpline. Check the autoloader users manual for device specific instructions on turning the device power on and off.')
tapeAlertTrap45 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,45)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap45.setDescription('The autoloader cannot operate without the magazine. 1. Insert the magazine into the autoloader 2. Restart the operation.')
tapeAlertTrap46 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,46)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap46.setDescription('A hardware failure of the changer mechanism is predicted. Call the tape drive supplier helpline.')
tapeAlertTrap256 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,256)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap256.setDescription('The library mechanism is having difficulty communicating with the drive: 1. Turn the library off then on. 2. Restart the operation. 3. If problem persists, call the library supplier helpline.')
tapeAlertTrap257 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,257)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap257.setDescription('There is a problem with the library mechanism. If problem persists, call the library supplier helpline.')
tapeAlertTrap258 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,258)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap258.setDescription('The library has a hardware fault: 1. Reset the library 2. Restart the operation. Check the library users manual for device specific instructions on resetting the device.')
tapeAlertTrap259 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,259)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap259.setDescription('The library has a hardware fault: 1. Turn the library off and then on again. 2. Restart the operation. 3. If the problem persists, call the library supplier helpline. Check the library users manual for device specific instructions on turning the device power on and off.')
tapeAlertTrap260 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,260)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap260.setDescription('The library mechanism may have a hardware fault. Run extended diagnostics to verify and diagnose the problem. Check the library users manual for device specific instructions on running extended diagnostic tests.')
tapeAlertTrap261 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,261)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap261.setDescription('The library has a problem with the host interface: 1. Check the cables and cable connections. 2. Restart the operation.')
tapeAlertTrap262 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,262)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap262.setDescription('A hardware failure of the library is predicted. Call the library supplier helpline.')
tapeAlertTrap263 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,263)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap263.setDescription('Preventative maintenance of the library is required. Check the library users manual for device specific preventative maintenance tasks, or call your library supplier helpline.')
tapeAlertTrap264 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,264)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap264.setDescription('General environmental conditions inside the library have exceeded the humidity specifications.')
tapeAlertTrap265 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,265)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap265.setDescription('General environmental conditions inside the library have exceeded the temperature specifications.e')
tapeAlertTrap266 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,266)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap266.setDescription('he voltage supply to the library exceeds specifications. There is a potential problem with the power supply or failure of a redundant power supply')
tapeAlertTrap267 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,267)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap267.setDescription('A cartridge has been left in a drive inside the library by a previous hardware fault: 1. Insert an empty magazine to clear the fault. 2. If the fault does not clear, turn the library off and then on again. 3. If the problem persists, call the library supplier helpline.')
tapeAlertTrap268 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,268)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap268.setDescription('There is a potential problem with a drive ejecting cartridges short or with the library mechanism picking a cartridge from a slot. 1. No action needs to be taken at this time. 2. If the problem persists, call the library supplier helpline.')
tapeAlertTrap269 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,269)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap269.setDescription('There is a potential problem with the library mechanism placing a cartridge into a slot 1. No action needs to be taken at this time. 2. If the problem persists, call the library supplier helpline.')
tapeAlertTrap270 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,270)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap270.setDescription('There is a potential problem with a drive or the library mechanism loading cartridges, or an incompatible cartridge.')
tapeAlertTrap271 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,271)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap271.setDescription('The operation has failed because the library door is open: 1. Clear any obstructions from the library door. 2. Close the library door. 3. If the problem persists, call the library supplier helpline.')
tapeAlertTrap272 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,272)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap272.setDescription('There is a mechanical problem with the library media import/export mailslot.')
tapeAlertTrap273 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,273)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap273.setDescription('The library cannot operate without the magazine. 1. Insert the magazine into the library 2. Restart the operation.')
tapeAlertTrap274 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,274)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap274.setDescription('Library security has been compromised')
tapeAlertTrap275 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,275)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap275.setDescription('The security mode of the library has been changed. The library has either been put into secure mode, or the library has exited the secure mode. This is for information purposes only. No action is required.')
tapeAlertTrap276 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,276)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap276.setDescription('The library has been manually turned offline and is unavailable for use.')
tapeAlertTrap277 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,277)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap277.setDescription('A drive inside the library has been taken offline. This is for information purposes only. No action is required.')
tapeAlertTrap278 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,278)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap278.setDescription('There is a potential problem with the barcode label or the scanner hardware in the library mechanism. 1. No action needs to be taken at this time. 2. If the problem persists, call the library supplier helpline.')
tapeAlertTrap279 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,279)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap279.setDescription('The library has detected a inconsistency in its inventory. 1. Redo the library inventory to correct inconsistency. 2. Restart the operation Check the applications users manual or the hardware users manual for specific instructions on redoing the library inventory.')
tapeAlertTrap280 = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 7, 1) + (0,280)).setObjects(("TapeAlert-MIB", "hbaNumber"), ("TapeAlert-MIB", "hbaChannel"), ("TapeAlert-MIB", "driveScsiID"))
if mibBuilder.loadTexts: tapeAlertTrap280.setDescription('A library operation has been attempted that is invalid at this time.')
mibBuilder.exportSymbols("TapeAlert-MIB", numErrors=numErrors, tapeAlertTrap18=tapeAlertTrap18, tapeAlertTrap266=tapeAlertTrap266, tapeAlertTrap8=tapeAlertTrap8, tapeAlertTrap261=tapeAlertTrap261, errorHistoryEntry=errorHistoryEntry, tapeAlertTrap20=tapeAlertTrap20, tapeAlertTrap44=tapeAlertTrap44, trapEnable=trapEnable, errorTrapNum=errorTrapNum, devTable=devTable, tapeAlertTrap263=tapeAlertTrap263, driveCompress=driveCompress, tapeAlertTrap31=tapeAlertTrap31, tapeAlertTrap278=tapeAlertTrap278, tapeAlertTrap17=tapeAlertTrap17, tapeAlertTrap38=tapeAlertTrap38, driveScsiID=driveScsiID, tapeAlertTrap280=tapeAlertTrap280, nm=nm, hbaName=hbaName, errorIndex=errorIndex, tapeAlertTrap256=tapeAlertTrap256, driveInquiry=driveInquiry, tapeAlertTrap2=tapeAlertTrap2, errorHbaNumber=errorHbaNumber, numDevices=numDevices, tapeAlertTrap41=tapeAlertTrap41, tapeAlertTrap10=tapeAlertTrap10, tapeAlertTrap35=tapeAlertTrap35, errorDate=errorDate, tapeAlertTrap265=tapeAlertTrap265, autoCopyEnable=autoCopyEnable, errorMedia=errorMedia, tapeAlertTrap274=tapeAlertTrap274, tapeAlertTrap5=tapeAlertTrap5, tapeAlertTrap260=tapeAlertTrap260, tapeAlertTrap22=tapeAlertTrap22, tapeAlertTrap46=tapeAlertTrap46, tapeAlertCapability=tapeAlertCapability, tapeAlertTrap277=tapeAlertTrap277, control=control, tapeAlertTrap14=tapeAlertTrap14, tapeAlertTrap259=tapeAlertTrap259, tapeAlertTrap276=tapeAlertTrap276, tapeAlertTrap279=tapeAlertTrap279, tapeAlertTrap16=tapeAlertTrap16, errorDriveScsiID=errorDriveScsiID, tapeAlertTrap15=tapeAlertTrap15, tapeAlertTrap269=tapeAlertTrap269, revMinor=revMinor, autoCleanEnable=autoCleanEnable, tapeAlertTrap13=tapeAlertTrap13, driveFirmware=driveFirmware, tapeAlertTrap271=tapeAlertTrap271, tapeAlertTrap6=tapeAlertTrap6, tapeAlertTrap19=tapeAlertTrap19, tapeAlertTrap33=tapeAlertTrap33, tapeAlertTrap262=tapeAlertTrap262, tapeAlertTrap11=tapeAlertTrap11, tapeAlert=tapeAlert, tapeAlertTrap42=tapeAlertTrap42, errorHistoryTable=errorHistoryTable, tapeAlertTrap36=tapeAlertTrap36, tapeAlertTrap29=tapeAlertTrap29, tapeAlertTrap1=tapeAlertTrap1, errorHbaChannel=errorHbaChannel, tapeAlertTrap270=tapeAlertTrap270, devNum=devNum, tapeAlertTrap40=tapeAlertTrap40, netTape=netTape, tapeAlertTrap272=tapeAlertTrap272, tapeAlertTrap3=tapeAlertTrap3, netPeripheral=netPeripheral, tapeAlertTrap257=tapeAlertTrap257, tapeAlertTrap268=tapeAlertTrap268, tapeAlertTrap275=tapeAlertTrap275, tapeAlertTrap258=tapeAlertTrap258, tapeAlertTrap39=tapeAlertTrap39, tapeAlertTrap273=tapeAlertTrap273, hbaChannel=hbaChannel, tapeAlertTrap30=tapeAlertTrap30, tapeAlertTrap7=tapeAlertTrap7, tapeAlertTrap264=tapeAlertTrap264, system=system, tapeAlertTrap9=tapeAlertTrap9, tapeAlertTrap23=tapeAlertTrap23, tapeAlertTrap45=tapeAlertTrap45, devInfo=devInfo, currentMedia=currentMedia, tapeAlertTrap32=tapeAlertTrap32, tapeAlertTrap43=tapeAlertTrap43, hp=hp, revMajor=revMajor, driveType=driveType, hbaNumber=hbaNumber, tapeAlertTrap4=tapeAlertTrap4, tapeAlertTrap34=tapeAlertTrap34, driveSerialNum=driveSerialNum, tapeAlertTrap21=tapeAlertTrap21, tapeAlertTrap267=tapeAlertTrap267, tapeAlertTrap37=tapeAlertTrap37, tapeAlertTrap12=tapeAlertTrap12)
