#
# PySNMP MIB module CISCO-PORT-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PORT-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
QosLayer2Cos, Dscp = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "QosLayer2Cos", "Dscp")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
vtpVlanIndex, = mibBuilder.importSymbols("CISCO-VTP-MIB", "vtpVlanIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, ModuleIdentity, Unsigned32, Counter64, TimeTicks, MibIdentifier, NotificationType, Counter32, Gauge32, Bits, Integer32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter64", "TimeTicks", "MibIdentifier", "NotificationType", "Counter32", "Gauge32", "Bits", "Integer32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "TruthValue", "DisplayString")
ciscoPortQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 189))
ciscoPortQosMIB.setRevisions(('2015-09-25 00:00', '2008-09-10 00:00', '2008-03-05 00:00', '2008-01-09 00:00', '2006-02-17 00:00', '2005-02-23 00:00', '2004-05-20 00:00', '2004-01-30 00:00', '2002-03-20 00:00', '2001-05-15 00:00', '2000-12-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoPortQosMIB.setRevisionsDescriptions(('This MIB is deprecated by CISCO-CLASS-BASED-QOS-MIB. The objects in this MIB are either directly replaced or functionally derived by objects in CISCO-CLASS-BASED-QOS-MIB.', 'Added the following tables: cportQosEgressQueueStatsTable, cportQosClassEgressStatsTable, cportQosClassIngressStatsTable, cportQosDscpStatsTable and cportQosCosStatsTable. Deprecated ciscoPortQosMIBComplianceRev5 added ciscoPortQosMIBComplianceRev6.', 'Added cportQosVlanInProfPolicyOctets, cportQosVlanOutOfProfPolicyOctets, cportQosVlanViolateProfPolicyPkts and cportQosVlanViolateProfPolicyOctets to the cportQosInVlanStatsTable.', 'Added cportQosInProfPolicyOctets, cportQosOutOfProfPolicyOctets, cportQosViolateProfPolicyPkts and cportQosViolateProfPolicyOctets to the cportQosStatsTable.', 'Added per port per vlan ingress statistics table.', 'Deprecated the cportQosIndexType added the cportQosIndexTypeNew which is read-write. In addition, added the cportQosInProfPolicyPkts and cportQosOutOfProfPolicyPkts objects to the statistic table.', 'Extend per port QoS Statistics table by adding no_change object.', 'Add cos(4) to cportQosIndexType.', 'Add per port QoS Statistics table.', 'Add cportQosRLConfigEnable and cportQosTSConfigEnable and renumber the objects.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoPortQosMIB.setLastUpdated('201509250000Z')
if mibBuilder.loadTexts: ciscoPortQosMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoPortQosMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134-1706 USA Tel: +1 800 553-NETS E-mail: cs-port-qos@cisco.com')
if mibBuilder.loadTexts: ciscoPortQosMIB.setDescription("Cisco PORT QOS MIB - Overview This MIB module is for the management of Cisco's per port rate-limiting and traffic shaping on L3 switch/Router Platform(s). Per-port rate-limiting is a traffic control method. A set of rate limits are applied to the traffic traversing an interface. Each rate limit has a configurable action that is taken when rate limiting criteria is met. Per-port traffic shaping is a traffic control method. The user can restrict the amount of traffic coming out of a physical port. Excess traffic is buffered within the router/switch to the extent possible. A class represents a class of traffic. It is defined via the specification of the packet matching criteria that identifies packets that are to belong to the class. Class-default: In addition to user defined classes, a pre-existing class named 'class-default' exists to represent all packets that do not match any of the user defined classes. This class-default exists so that policies can be defined for this group of packets that do not match any user defined classes. Actions are individual policies (e.g.: policing) that can be applied to a traffic class. A policy represents a set of actions that are to be applied to a set of traffic classes. The policy is associated with a target (like a port) and the direction of traffic on that target to which the policy is to be applied. A hierarchical policy is one in which an entire policy is directly assigned to a class of traffic. Thus, a hierarchical policy is a nested policy that contains a set of the pair of a child-policy and the traffic-class to which it is applied. DSCP (Differentiated Services Code Point) is the six most significant bits of the ToS field in a IP packet header. CoS (Class of Service) is the three bits in the layer 2 header that indicates user priority value assigned to this packet. This MIB module also provides per port QoS statistics.")
ciscoPortQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1))
cportQosRLConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1))
cportQosTSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2))
cportQosStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3))
cportQosRLConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1), )
if mibBuilder.loadTexts: cportQosRLConfigTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigTable.setDescription('A table of rate limit configuration entries. Rate Limiting is a method of traffic control. It allows a set of rate limits to be configured and applied to packets flowing into/out of an interface to regulate network traffic. This object is deprecated and replaced by cbQosPoliceCfgTable in CISCO-CLASS-BASED-QOS-MIB. Rate limit is functionally same as police action in current QoS implementation on various platforms.')
cportQosRLConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosRLConfigDirection"))
if mibBuilder.loadTexts: cportQosRLConfigEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigEntry.setDescription('A collection of rate-limit configuration objects for a particular interface. Entries in the cportQosRLConfigTable are created and deleted by non-SNMP methods. Creation of these entries is dependent upon configuration of a physical interface. Further, the physical interfaces which are configured for port-qos, can only have these entries. The ifIndex in the INDEX clause identifies the interface number for a physical interface. This object is deprecated and replaced by cbQosPoliceCfgEntry in CISCO-CLASS-BASED-QOS-MIB.')
cportQosRLConfigDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input", 1), ("output", 2))))
if mibBuilder.loadTexts: cportQosRLConfigDirection.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigDirection.setDescription('The direction in which the rate-limit is applied to packet: input statistics of the input packets. output statistics of the output packets. This object is deprecated and replaced by cbQosPolicyDirection in CISCO-CLASS-BASED-QOS-MIB. This object is deprecated for the same reason mentioned in description of cportQosRLConfigTable.')
cportQosRLConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosRLConfigEnable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigEnable.setDescription("This indicates the rate-limit is enabled or disabled. A value of true(1) indicates the rate-limit is enabled and a value of false(2) indicates it's disabled. Writing a value of true(1) to this object also requires writing a valid value to the cportQosRLConfigRate at the same time. Writing to cportQosRLConfigBurstSize is optional. This object is deprecated, but there is no direct mapping to any object. To obtain information about police being configured or not on a given interface, cbQosPoliceCfgEntry can be queried. To query, cbQosPoliceCfgEntry following steps can be followed: Step 1: Use ifIndex and cbQosPolicyDirection to index into cbQosInterfacePolicyTable to obtain cbQosIFPolicyIndex, which same as cbQosPolicyIndex. Step 2: Walk through all entries for given cbQosPolicyIndex in cbQosObjectsTable. If there is entry with cbQosObjectsType as 'police', then the corresponding cbQosConfigIndex corresponds to the index for cbQosPoliceCfgEntry. If such entry exists, then policer is enabled (i.e. true) on that ifIndex in cbQosPolicyDirection, else it is not (i.e. false).")
cportQosRLConfigRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32000, 2147483647))).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosRLConfigRate.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigRate.setDescription('This is the sustained rate permitted by the rate limit. Writing to this object also requires writing a value of true(1) to cportQosRLConfigEnable at the same time. This object is deprecated and replaced by cbQosPoliceCfgRate in CISCO-CLASS-BASED-QOS-MIB. cbQosPoliceCfgRate is in cbQosPoliceCfgEntry, which can be queried using ifIndex and cbQosPolicyDirection in the same fashion as mentioned in cportQosRLConfigEnable.')
cportQosRLConfigBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosRLConfigBurstSize.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosRLConfigBurstSize.setDescription('The burst size. The amount of traffic, in bytes, in excess of the sustained rate which will be instantaneously permitted by the rate limit. Writing to this object also requires writing a value of true(1) to cportQosRLConfigEnable and a valid value to the cportQosRLConfigRate at the same time. This object is deprecated and replaced by cbQosPoliceCfgBurstSize in CISCO-CLASS-BASED-QOS-MIB. cbQosPoliceCfgBurstSize is in cbQosPoliceCfgEntry, which can be queried using ifIndex and cbQosPolicyDirection in the same fashion as mentioned in cportQosRLConfigEnable.')
cportQosTSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1), )
if mibBuilder.loadTexts: cportQosTSConfigTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosTSConfigTable.setDescription('A table of traffic-shaping action configuration entries. This object is deprecated and replaced by cbQosTSCfgTable in CISCO-CLASS-BASED-QOS-MIB.')
cportQosTSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cportQosTSConfigEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosTSConfigEntry.setDescription('A collection of traffic shaping action configuration objects for a particular interface. Entries in the cportQosTSConfigTable are created and deleted by non-SNMP methods. Creation of these entries is dependent upon configuration of a physical interface. Further, the physical interfaces which are configured for port-qos, can only have these entries. The ifIndex in the INDEX clause identifies the interface number for a physical interface. This object is deprecated and replaced by cbQosTSCfgEntry in CISCO-CLASS-BASED-QOS-MIB.')
cportQosTSConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosTSConfigEnable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosTSConfigEnable.setDescription("This indicates the traffic shaping is enabled or disabled. A value of true(1) indicates the traffic shaping is enabled and a value of false(2) indicates it's disabled. Writing a value of true(1) to this object also requires writing a valid value to the cportQosTSConfigRate at the same time. Writing to cportQosTSConfigBurstSize is optional. This object is deprecated and there is no direct replacement. To obtain information about police being configured or not on a given interface, cbQosTSCfgEntry can be queried. To query cbQosTSCfgEntry for a given interface, following steps can be followed: Step 1: Use ifIndex and cbQosPolicyDirection index into to cbQosInterfacePolicyTable and obtain cbQosIFPolicyIndex which same as cbQosPolicyIndex. Step 2: Use cbQosPolicyIndex to index into cbQosObjectsTable and get all entries for this policy index. Among these entries search for entry with cbQosObjectsType as 'trafficShaping'. If such entry exists, then TS is enabled (i.e. true) , else it is not(i.e. false). This query can be run for both values of cbQosPolicyDirection, 'input' and 'output' to obtain information for a given ifIndex.")
cportQosTSConfigRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32000, 2147483647))).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosTSConfigRate.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosTSConfigRate.setDescription('This is the sustained rate permitted by the traffic shaping. Writing to this object also requires writing a value of true(1) to cportQosTSConfigEnable at the same time. This object is deprecated and replaced by cbQosTSCfgRate in CISCO-CLASS-BASED-QOS-MIB. cbQosTSCfgRate is in CbQosTSCfgEntry, which can be queried by using ifIndex and cbQosPolicyDirection in same fashion as mentioned in cportQosTSConfigEnable.')
cportQosTSConfigBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512000))).setUnits('bits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosTSConfigBurstSize.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosTSConfigBurstSize.setDescription('The amount of traffic, in bits, in excess of the sustained traffic shaping rate that will be instantaneously permitted by this feature. Writing to this object also requires writing a value of true(1) to cportQosTSConfigEnable and a valid value to the cportQosTSConfigRate at the same time. This object is deprecated and replaced by cbQosTSCfgBurstSize in CISCO-CLASS-BASED-QOS-MIB. cbQosTSCfgBurstSize is in CbQosTSCfgEntry, which can be queried using ifIndex and cbQosPolicyDirection in same fashion as mentioned in cportQosTSConfigEnable.')
cportQosIndexType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("dscp", 2), ("ipPrecedence", 3), ("cos", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosIndexType.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosIndexType.setDescription('This object specifies the sorting mechanism used to collect and store the statistical QoS information. This object value is device dependent and it could be optionally configured via command-line. This object has been deprecated in order to make the selection of sorting mechanism selectable from the MIB. The replacement object is cportQosIndexTypeNew.')
cportQosStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2), )
if mibBuilder.loadTexts: cportQosStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosStatsTable.setDescription("This table specifies QoS port related Statistical information. This object is deprecated and replaced by various action specific table in CISCO-CLASS-BASED-QOS-MIB. To view port specific policy execution stats on interface, policy on that interface can be looked up and then action specific can be obtained from that policy info. Following steps illustrates this. Step 1: Use ifIndex and cbQosPolicyDirection to lookup cbQosInterfacePolicyEntry and obtain cbQosIFPolicyIndex which is same as cbQosPolicyIndex. Step 2: Index cbQosPolicyIndex into cbQosObjectsTable and obtain all entries corresponding to this policy instance of cbQosPolicyIndex. Step 3: With the obtained entries, filter the ones with desired action in cbQosObjectsType. For example, to get all policing action stats, filter on cbQosObjectsType = 'police'. Step 4: Collect all cbQosObjectsIndex for all such filtered entries. Step 5: Index cbQosPolicyIndex and cbQosObjectsIndex into corresponding action specific stats table to obtain corresponding stats. For example, for policer action, cbQosPoliceStatsEntry can be indexed. ")
cportQosStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosDirection"), (0, "CISCO-PORT-QOS-MIB", "cportQosIndex"))
if mibBuilder.loadTexts: cportQosStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosStatsEntry.setDescription('Each entry in this table describes the QoS port statistical information which are : pre/post policy pkts/octets counts, drop pkts/octets, classified pkts/octets. This object is deprecated and replaced by various action specific stats in CISCO-CLASS-BASED-QOS-MIB as described in cportQosStatsTable.')
cportQosDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2))))
if mibBuilder.loadTexts: cportQosDirection.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDirection.setDescription("The direction of the reported statistics: -'ingress' statistics for the input direction. -'egress' statistics for the output direction. This object is deprecated and replaced by cbQosPolicyDirection in CISCO-CLASS-BASED-QOS-MIB.")
cportQosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cportQosIndex.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosIndex.setDescription("An arbitrary integer to identify this entry. cportQosIndex value, which may have non-contiguous range, is linked to cportQosIndexType: -if cportQosIndexTypeNew equals 'none', cportQosIndex is constant with the value of 1 and all statistics are classified per port -if cportQosIndexTypeNew equals 'DSCP', cportQosIndex range is from 1 to 65 and all statistics are classified per port and DSCP value. The range of DSCP values reported is shifted up one meaning a cportQosIndex of 1 translates to a packet DSCP value of 0. Value of 65 is an arbitrary number used to report aggregate counts of packets which were not displayed in the 1 to 64 range. This usually happens when the range value of cportQosIndex is non-contiguous -if cportQosIndexTypeNew equals 'ipPrecedence', cportQosIndex range is from 1 to 8 and all statistics are classified per port and IP precedence value. The range of IP precedence values reported is shifted up one meaning a cportQosIndex of 1 translates to an IP precedence value of 0 -if cportQosIndexTypeNew equals 'cos', cportQosIndex range is from 1 to 8 and all statistics are classified per interface and L2 COS value. The range of COS values reported is shifted up one meaning a cportQosIndex of 1 translates to a COS value of 0 -if cportQosIndexTypeNew equals 'police', cportQosIndex range is from 1 to 65 and all statistics are classified per interface and police index. The police indexes are arbitrary numbers that do not correlate to policers names or identifiers. This object is deprecated and has no direct replacement. As indicated in description of cportQosStatsEntry, since stats table in CISCO-CLASS-BASED-QOS-MIB are action specific, this object is not required to classify the stats per action.")
cportQosPrePolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPrePolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPrePolicyPkts.setDescription('The count of packets prior to executing any QoS policies. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosPrePolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPrePolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPrePolicyOctets.setDescription('The count of octets prior to executing any QoS policies. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosPostPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPostPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPostPolicyPkts.setDescription('The count of packets after executing QoS policies. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosPostPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPostPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPostPolicyOctets.setDescription('The count of octets after executing QoS policies. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDropPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDropPkts.setDescription('The count of dropped packets as the result of queuing and scheduling related QoS features that can produce drops. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 8), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDropOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDropOctets.setDescription('The count of dropped octets as the result of queuing and scheduling related QoS features that can produce drops. This object is deprecated and replaced by corresponding action specific pre policy counter in CISCO-CLASS-BASED-QOS-MIB. Since CISCO-CLASS-BASED-QOS-MIB has action based stats, there is no direct mapping for this object.')
cportQosClassifiedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassifiedOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassifiedOctets.setDescription('The count of classified octets during QoS. This object is deprecated and replaced by various stats table objects in CISCO-CLASS-BASED-QOS-MIB. cbQosCMPrePolicyByte64 in CbQosCMStatsEntry be used in place this object. Entry specific to a given ifIndex and cbQosPolicyDirection can be obtained in same fashion as described in description of cportQosStatsTable, with exception of step 5. In step 5, index cbQosPolicyIndex and cbQosObjectsIndex into CbQosCMStatsEntry to obtain cbQosCMPrePolicyByte64 in that entry. ')
cportQosClassifiedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassifiedPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassifiedPkts.setDescription('The count of classified packets during QoS. This object is deprecated and replaced by various stats table objects in CISCO-CLASS-BASED-QOS-MIB. cbQosCMPrePolicyPkt64 in CbQosCMStatsEntry be used in place this object. Entry specific to a given ifIndex and cbQosPolicyDirection can be obtained in same fashion as described in description of cportQosStatsTable, with exception of step 5. In step 5, index cbQosPolicyIndex and cbQosObjectsIndex into CbQosCMStatsEntry to obtain cbQosCMPrePolicyPkt64 in that entry.')
cportQosNoChangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosNoChangePkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosNoChangePkts.setDescription('The count of packets maintain unchange after executing QoS policies. This object is deprecated and replaced by various stats table object in CISCO-CLASS-BASED-QOS-MIB. There is no direct mapping of this object as it depends on action for which stats being asked for. For example, to obtain No change packet for policer action, cbQosPoliceConformedPkt64 from CbQosPoliceStatsEntry can be used. Steps to index into CbQosPoliceStatsEntry using ifIndex and cbQosPolicyDirection is described in the description of cportQosStatsTable.')
cportQosNoChangeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 12), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosNoChangeOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosNoChangeOctets.setDescription('The count of octets maintain unchange after executing QoS policies. This object is deprecated and replaced by various stats table object in CISCO-CLASS-BASED-QOS-MIB. There is no direct mapping of this object as it depends on action for which stats being asked for. For example, to obtain No change packet for policer action, cbQosPoliceConformedPkt64 from CbQosPoliceStatsEntry can be used. Steps to index into CbQosPoliceStatsEntry using ifIndex and cbQosPolicyDirection is described in the description of cportQosStatsTable.')
cportQosInProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosInProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosInProfPolicyPkts.setDescription('The count of packets that are within the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceConformedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosOutOfProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosOutOfProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosOutOfProfPolicyPkts.setDescription('The count of packets that exceed the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceExceededPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosInProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 15), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosInProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosInProfPolicyOctets.setDescription('The count of octets that are within the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceConformedByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosOutOfProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 16), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosOutOfProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosOutOfProfPolicyOctets.setDescription('The count of octets that exceed the policer profile limit configured for this policy. This objected is deprecated and replaced by cbQosPoliceExceededByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosViolateProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosViolateProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosViolateProfPolicyPkts.setDescription('The count of packets that violate the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceViolatedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosViolateProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 18), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosViolateProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosViolateProfPolicyOctets.setDescription('The count of octets that violate the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceViolatedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosIndexTypeNew = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("dscp", 2), ("ipPrecedence", 3), ("cos", 4), ("police", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cportQosIndexTypeNew.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosIndexTypeNew.setDescription('This object specifies the sorting mechanism used to collect and store the statistical QoS information. This object value is device dependent. This object is deprecated since cbQosIndex is deprecated.')
cportQosInVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4), )
if mibBuilder.loadTexts: cportQosInVlanStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosInVlanStatsTable.setDescription('This table specifies QoS port related ingress statistical information. The type of information is controlled by the cportQosIndexTypeNew object. This table is deprecated. Stats for service policy attached to vlan on a trunk or multi-vlan access port can be accessed in same fashion as described in description of in cportQosStatsTable. In Step 1 of description, when cbQosPolicyIndex is obtained from lookup of cbQosInterfacePolicyEntry using ifIndex, this is indexed into CbQosServicePolicyEntry to obtain the cbQosVlanIndex for this policy instance. If this matches, then cbQosPolicyIndex can be used to lookup the stats in same fashion as mentioned in step 2-5 mentioned in the description of cportQosStatsTable.')
cportQosInVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-VTP-MIB", "vtpVlanIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosIndex"))
if mibBuilder.loadTexts: cportQosInVlanStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosInVlanStatsEntry.setDescription('It exists an entry in this table for each port on which QoS is configured per port and per VLAN. This object is deprecated for the same reason mentioned in description of cportQosInVlanStatsTable.')
cportQosVlanInProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanInProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanInProfPolicyPkts.setDescription('The count of packets that are within the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceConformedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosVlanOutOfProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanOutOfProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanOutOfProfPolicyPkts.setDescription('The count of packets that exceeds the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceExceededPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosVlanInProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanInProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanInProfPolicyOctets.setDescription('The count of octets that are within the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceConformedByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosVlanOutOfProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanOutOfProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanOutOfProfPolicyOctets.setDescription('The count of octets that exceed the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceExceededByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosVlanViolateProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanViolateProfPolicyPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanViolateProfPolicyPkts.setDescription('The count of packets that violate the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceViolatedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosVlanViolateProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosVlanViolateProfPolicyOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosVlanViolateProfPolicyOctets.setDescription('The count of octets that violate the policer profile limit configured for this policy. This object is deprecated and replaced by cbQosPoliceViolatedByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosEgressQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5), )
if mibBuilder.loadTexts: cportQosEgressQueueStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosEgressQueueStatsTable.setDescription("This table specifies QoS related statistical information for egress queues on each port. The agent will add an entry in this table for each queue, threshold and port. This object is deprecated. Port specific queueing info can be obtained from cbQosQueueingCfgTable and cbQosQueueingStatsTable if port contains policy with queueing action. The process to obtain this info is similar to what is described in cportQosStatsTable: Step 1: Use ifIndex and cbQosPolicyDirection to lookup cbQosInterfacePolicyEntry and obtain cbQosIFPolicyIndex which is same as cbQosPolicyIndex. Step 2: Index cbQosPolicyIndex into cbQosObjectsTable and obtain all entries corresponding to this policy instance of cbQosPolicyIndex. Step 3: With the obtained entries, filter the ones with action as 'queueing' in cbQosObjectsType. Step 4: Collect all cbQosObjectsIndex and cbQosConfigIndex for all such filtered entries. Step 5: To get queueing stats : Index cbQosPolicyIndex and cbQosObjectsIndex into cbQosQueueingStatsTable To get queueing config : Index cbQosConfigIndex into cbQosQueueingCfgTable.")
cportQosEgressQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosQueueId"), (0, "CISCO-PORT-QOS-MIB", "cportQosQueueThreshold"))
if mibBuilder.loadTexts: cportQosEgressQueueStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosEgressQueueStatsEntry.setDescription('A conceptual row in cportQosEgressQueueStatsTable. ` This object is deprecated for the same reason as mentioned in description of cportQosEgressQueueStatsTable.')
cportQosQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cportQosQueueId.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosQueueId.setDescription('This object identifies the queue ID of this port for which QoS statistics are collected. For example, if a port has 4 queues, this index value can be 1,2,3,4. This object is deprecated and has no direct replacement object. Queue id is no longer needed to get queueing action config as described in description of cportQosEgressQueueStatsTable.')
cportQosQueueThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cportQosQueueThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosQueueThreshold.setDescription('This object identifies the threshold number of the queue threshold associated with this queue. A queue can have more than one threshold. For example, if a queue has 3 thresholds, this index could be 1,2,3. This object is deprecated and has no direct replacement.')
cportQosQueueEnqueuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosQueueEnqueuePkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosQueueEnqueuePkts.setDescription('This object indicates the number of egress packets that have been enqueued for this queue and threshold. This object is deprecated and replaced by cbQosQueueingCurrentQDepth in CISCO-CLASS-BASED-QOS-MIB.')
cportQosQueueDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosQueueDropPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosQueueDropPkts.setDescription('This object indicates the number of egress packets that have been dropped for this queue and threshold. This object is deprecated and replaced by cbQosQueueingDiscardPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosClassEgressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6), )
if mibBuilder.loadTexts: cportQosClassEgressStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassEgressStatsTable.setDescription("This table specifies egress QoS related statistical information for classes associated with an egress QoS policy. Each queue on a port is uniquely mapped to a class in an egress QoS policy. This table provides the statistical information for each class-queue on each port. The agent will add an entry in this table for each queue and threshold on a port associated with a class. This object is deprecated by corresponding class based table in CISCO-CLASS-BASED-QOS-MIB-MIB. Same information can be obtained from cbQosCMStatsTable and cbQosCMCfgTable. To access a port specific class configuration and stats, following steps can be followed: Step 1: Use ifIndex and cbQosPolicyDirection='output' to lookup cbQosInterfacePolicyEntry and obtain cbQosIFPolicyIndex which is same as cbQosPolicyIndex. Step 2: Index cbQosPolicyIndex into cbQosObjectsTable and obtain all entries corresponding to this policy instance of cbQosPolicyIndex. Step 3: With the obtained entries, filter the ones with object type as 'classmap' in cbQosObjectsType. Step 4: Collect all cbQosObjectsIndex and cbQosConfigIndex for all such filtered entries. Step 5: To get queueing stats : Index cbQosPolicyIndex and cbQosObjectsIndex into cbQosCMStatsTable To get queueing config : Index cbQosConfigIndex into cbQosCMCfgTable.")
cportQosClassEgressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassId"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassThreshold"))
if mibBuilder.loadTexts: cportQosClassEgressStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassEgressStatsEntry.setDescription('A conceptual row in cportQosClassEgressStatsTable. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable.')
cportQosClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cportQosClassId.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassId.setDescription('This object identifies the class-ID of the class in an egress policy for which QoS statistics are being collected. Each queue on a port is uniquely mapped to a class in an egress policy. Each class in a policy is uniquely identified by a class-ID. A value of 0 indicates the default queue/class-default. This object is deprecated and no direct mapping is available. All classes must be referred to by name, cbQosCMName, in CISCO-CLASS-BASED-QOS-MIB.')
cportQosClassThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Number of buffers')
if mibBuilder.loadTexts: cportQosClassThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassThreshold.setDescription('This object identifies the tail-drop queue thresholds value on a class-queue on a port. These values can either be the default value or each could be an explicitly configured value. For example, if a queue has 3 thresholds, 16, 64 and 256, this index value for each threshold would be 16, 64, 256 respectively. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. There is no mapping for this object.')
cportQosClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassName.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassName.setDescription('This object indicates the class name that is associated with the class-ID indicated by the cportQosClassId object. This object is deprecated and replaced by cbQosCMName in CISCO-CLASS-BASED-QOS-MIB. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable.')
cportQosClassEnqueuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassEnqueuePkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassEnqueuePkts.setDescription('This object indicates the number of egress packets that have been enqueued for this queue and threshold. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. The equivalent info can be obtained from cbQosCMPrePolicyPkt64- cbQosCMDropPkt64. Access of cbQosCMPrePolicyPkt64- cbQosCMDropPkt64, can de done as described in description of cportQosClassEgressStatsTable.')
cportQosClassDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassDropPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassDropPkts.setDescription('This object indicates the number of egress packets that have been dropped for this queue and threshold. This object is deprecated and replaced by cbQosCMDropPkt64 in CISCO-CLASS-BASED-QOS-MIB. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable.')
cportQosClassDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassDiscontinuityTime.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any of this entry's counter experienced a discontinuity. If discontinuities have not occurred since the last re-initialization of the local management subsystem, then this object contains a zero value. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. Generic platform independent counters in CISCO-CLASS-BASED-QOS-MIB should be used instead of platform dependent objects in this MIB. There is no direct mapping available for object.")
cportQosClassIngressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7), )
if mibBuilder.loadTexts: cportQosClassIngressStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassIngressStatsTable.setDescription("This table specifies QoS related statistical information per port for ingress traffic belonging to QoS classes configured with an action that support statistics (for example: a policer). This object is deprecated by corresponding class based table in CISCO-CLASS-BASED-QOS-MIB-MIB. Same information can be obtained from cbQosPoliceStatsTable and cbQosCMCfgTable. To access a port specific class configuration and stats, following steps can be followed: Step 1: Use ifIndex and cbQosPolicyDirection='input' to lookup cbQosInterfacePolicyEntry and obtain cbQosIFPolicyIndex which is same as cbQosPolicyIndex. Step 2: Index cbQosPolicyIndex into cbQosObjectsTable and obtain all entries corresponding to this policy instance of cbQosPolicyIndex. Step 3: With the obtained entries, filter following: - For entries having 'classmap' in cbQosObjectsType, collect cbQosConfigIndex. - For entries having 'police' in cbQosObjectsType, collect cbQosObjectsIndex. Here the selected entries should be the ones which maps to cbQosParentObjectsIndex of the desired class. Step 4: Collect all cbQosObjectsIndex and cbQosConfigIndex for all such filtered entries. Step 5: To get policing stats : Index cbQosPolicyIndex and cbQosObjectsIndex into cbQosPoliceStatsTable To get class config : Index cbQosConfigIndex into cbQosCMCfgTable.")
cportQosClassIngressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassIdLevel1"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassIdLevel2"))
if mibBuilder.loadTexts: cportQosClassIngressStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassIngressStatsEntry.setDescription('A conceptual row in cportQosClassIngressStatsTable. An entry is added per port for ingress traffic belonging to QoS classes, indicated by cportQosClassIdLevel1 and cportQosClassIdLevel2, configured with an action that supports statistics. This object is deprecated for the same reason as mentioned in cportQosClassIngressStatsTable.')
cportQosClassIdLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cportQosClassIdLevel1.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassIdLevel1.setDescription('This object identifies the class-ID of a class at the first (highest) level of a hierarchical policy. A value of 0 indicates class default. For a non-hierarchical policy, the value of this object is always 0. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. There is no mapping for this object. All classes must be referred by class name object cbQosCMName of cbQosCMCfgEntry in CISCO-CLASS-BASED-QOS-MIB.')
cportQosClassIdLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cportQosClassIdLevel2.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassIdLevel2.setDescription('This object identifies the class-ID of a class at the second level of a hierarchical policy, or at the first (only) level in a non-hierarchical policy. For a two level policy, this object identifies the class-ID at the second level of the policy. For a non-hierarchical/ single level policy this object identifies the class-ID of a class at the first (only) level of the policy. A value of 0 indicates class default. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. There is no mapping for this object. All classes must be referred by class name object cbQosCMName of cbQosCMCfgEntry in CISCO-CLASS-BASED-QOS-MIB.')
cportQosClassNameLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassNameLevel1.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassNameLevel1.setDescription('This object indicates the class name that is associated with the class-ID indicated by the cportQosClassIdLevel1 object. This object is deprecated and replaced by cbQosCMName in CbQosCMCfgEntry in CISCO-CLASS-BASED-QOS-MIB.')
cportQosClassNameLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosClassNameLevel2.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosClassNameLevel2.setDescription('This object indicates the class name that is associated with the class-ID indicated by the cportQosClassIdLevel2 object. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosCMName of cbQosCMCfgEntry which uniquely identifies a class. To lookup level 2 of hierarchical policy, cbQosConfigIndex chosen should belong to row having appropriate cbQosParentObjectsIndex.')
cportQosPoliceConformPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceConformPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceConformPkts.setDescription('This object indicates the number of ingress packets that conforms to the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceConformedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceConformOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceConformOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceConformOctets.setDescription('This object indicates the number of ingress octets that conforms to the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceConformedByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceExceedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceExceedPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceExceedPkts.setDescription('This object indicates the number of ingress packets that exceeds the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceExceededPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceExceedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 8), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceExceedOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceExceedOctets.setDescription('This object indicates the number of ingress octets that exceeds the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceExceededPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceViolatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceViolatePkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceViolatePkts.setDescription('This object indicates the number of ingress packets that violates the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceViolatedPkt64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceViolateOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 10), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceViolateOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceViolateOctets.setDescription('This object indicates the number of ingress octets that violates the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceViolatedByte64 in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceConformRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 11), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceConformRate.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceConformRate.setDescription('This object indicates the rate of ingress packets that conforms to the policing rate for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceConformedBitRate in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceExceedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 12), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceExceedRate.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceExceedRate.setDescription('This object indicates the rate of ingress packets that exceeds the policing for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceExceedBitRate in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceViolateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 13), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceViolateRate.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceViolateRate.setDescription('This object indicates the rate of ingress packets that violates the policing for traffic belonging to the classes indicated by the cportQosClassIdLevel1 and cportQosClassIdLevel2 indices. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. This object can be mapped to cbQosPoliceViolateBitRate in CISCO-CLASS-BASED-QOS-MIB.')
cportQosPoliceDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosPoliceDiscontinuityTime.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosPoliceDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any of this entry's counter experienced a discontinuity. If discontinuities have not occurred since the last re-initialization of the local management subsystem, then this object contains a zero value. This object is deprecated for the same reason as mentioned in cportQosClassEgressStatsTable. There is no direct object mapped for this object.")
cportQosDscpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8), )
if mibBuilder.loadTexts: cportQosDscpStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpStatsTable.setDescription('This table indicates QoS related statistical DSCP information. The statistics are collected per physical port and DSCP value. This object is deprecated. Customers should move to using generic policy based counters provided by CISCO-CLASS-BASED-QOS-MIB-MIB instead of using platform specific objects. One way to obtain port specific dscp counters would be to configure a policy with class having match on desired dscp value and no action under it. Then counters in cbQosCMStatsTable can be used to infer the packet counts in ingress and egress direction.')
cportQosDscpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosDscpValue"))
if mibBuilder.loadTexts: cportQosDscpStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpStatsEntry.setDescription('A conceptual row in cportQosDscpStatsTable. There is an entry in this table for each port and each DSCP value. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 1), Dscp())
if mibBuilder.loadTexts: cportQosDscpValue.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpValue.setDescription('This object identifies the DSCP value for incoming or outgoing packets. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosDscpIngressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDscpIngressPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpIngressPkts.setDescription('This object indicates the number of ingress packets whose DSCP value matched the value of the cportQosDscpValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosDscpIngressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDscpIngressOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpIngressOctets.setDescription('This object indicates the number of ingress octets whose DSCP value matched the value of the cportQosDscpValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosDscpEgressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDscpEgressPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpEgressPkts.setDescription('This object indicates the number of egress packets whose DSCP value matched the value of the cportQosDscpValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosDscpEgressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosDscpEgressOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosDscpEgressOctets.setDescription('This object indicates the number of egress octets whose DSCP value matched the value of the cportQosDscpValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosDscpStatsTable.')
cportQosCosStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9), )
if mibBuilder.loadTexts: cportQosCosStatsTable.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosStatsTable.setDescription('This table indicates QoS related statistical COS information. The statistics are collected per physical port and COS value. This object is deprecated. Customers should move to using generic independent counters provided by CISCO-CLASS-BASED-QOS-MIB-MIB instead of using platform specific objects. One way to obtain port specific dscp counters would be to configure a policy with class having match on desired cos value and no action under it. Then counters in cbQosCMStatsTable can be used to infer the packet counts in ingress and egress direction.')
cportQosCosStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosCosValue"))
if mibBuilder.loadTexts: cportQosCosStatsEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosStatsEntry.setDescription('A conceptual row in cportQosCosStatsTable. There is an entry in this table for each port and each COS value. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
cportQosCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 1), QosLayer2Cos())
if mibBuilder.loadTexts: cportQosCosValue.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosValue.setDescription('This object identifies the COS value for each received or sent packet. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
cportQosCosIngressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosCosIngressPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosIngressPkts.setDescription('This object indicates the number of ingress packets whose COS value matched the value of the cportQosCosValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
cportQosCosIngressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosCosIngressOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosIngressOctets.setDescription('This object indicates the number of ingress octets whose COS value matched the value of the cportQosCosValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
cportQosCosEgressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosCosEgressPkts.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosEgressPkts.setDescription('This object indicates the number of egress packets whose COS value matched the value of the cportQosCosValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
cportQosCosEgressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cportQosCosEgressOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cportQosCosEgressOctets.setDescription('This object indicates the number of egress octets whose COS value matched the value of the cportQosCosValue object. This object is deprecated. The reason of deprecation and the alternative of obtaining same information are mentioned in cportQosCosStatsTable.')
ciscoPortQosMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 2))
ciscoPortQosMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3))
ciscoPortQosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1))
ciscoPortQosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2))
ciscoPortQosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 1)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBCompliance = ciscoPortQosMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBCompliance.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 2)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev1 = ciscoPortQosMIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev1.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 3)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev2 = ciscoPortQosMIBComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev2.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 4)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev3 = ciscoPortQosMIBComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev3.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 5)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev4 = ciscoPortQosMIBComplianceRev4.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev4.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 6)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev5 = ciscoPortQosMIBComplianceRev5.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev5.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 7)).setObjects(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp3"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp4"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp5"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp6"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp7"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp8"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBComplianceRev6 = ciscoPortQosMIBComplianceRev6.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBComplianceRev6.setDescription('The compliance statement for entities which implement Port QoS functions on a Cisco router.')
ciscoPortQosMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 1)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosRLConfigEnable"), ("CISCO-PORT-QOS-MIB", "cportQosRLConfigRate"), ("CISCO-PORT-QOS-MIB", "cportQosRLConfigBurstSize"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigEnable"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigRate"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigBurstSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosMIBGroup = ciscoPortQosMIBGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosMIBGroup.setDescription('A collection of objects providing Port QoS features. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 2)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosIndexType"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroup = ciscoPortQosStatsMIBGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroup.setDescription('A collection of objects providing per Port QoS statistics. Replaced by: ciscoPortQosStatsMIBGroupRev1. This object is deprecated since all the objects in this MIB file is being deprecated')
ciscoPortQosStatsMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 3)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosIndexType"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangePkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangeOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev1 = ciscoPortQosStatsMIBGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev1.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 4)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosIndexTypeNew"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangePkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangeOctets"), ("CISCO-PORT-QOS-MIB", "cportQosInProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosOutOfProfPolicyPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2 = ciscoPortQosStatsMIBGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 5)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosVlanInProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosVlanOutOfProfPolicyPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp1 = ciscoPortQosStatsMIBGroupRev2Supp1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp1.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 6)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosInProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosOutOfProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosViolateProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosViolateProfPolicyOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp2 = ciscoPortQosStatsMIBGroupRev2Supp2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp2.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 7)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosVlanInProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosVlanOutOfProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosVlanViolateProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosVlanViolateProfPolicyOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp3 = ciscoPortQosStatsMIBGroupRev2Supp3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp3.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 8)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosQueueEnqueuePkts"), ("CISCO-PORT-QOS-MIB", "cportQosQueueDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp4 = ciscoPortQosStatsMIBGroupRev2Supp4.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp4.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp5 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 9)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosClassName"), ("CISCO-PORT-QOS-MIB", "cportQosClassEnqueuePkts"), ("CISCO-PORT-QOS-MIB", "cportQosClassDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosClassDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp5 = ciscoPortQosStatsMIBGroupRev2Supp5.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp5.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp6 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 10)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosClassNameLevel1"), ("CISCO-PORT-QOS-MIB", "cportQosClassNameLevel2"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolatePkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolateOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolateRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp6 = ciscoPortQosStatsMIBGroupRev2Supp6.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp6.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp7 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 11)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosDscpIngressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDscpIngressOctets"), ("CISCO-PORT-QOS-MIB", "cportQosDscpEgressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDscpEgressOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp7 = ciscoPortQosStatsMIBGroupRev2Supp7.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp7.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
ciscoPortQosStatsMIBGroupRev2Supp8 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 12)).setObjects(("CISCO-PORT-QOS-MIB", "cportQosCosIngressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosCosIngressOctets"), ("CISCO-PORT-QOS-MIB", "cportQosCosEgressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosCosEgressOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPortQosStatsMIBGroupRev2Supp8 = ciscoPortQosStatsMIBGroupRev2Supp8.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPortQosStatsMIBGroupRev2Supp8.setDescription('A collection of objects providing per Port QoS statistics. This object is deprecated since all the objects in this MIB file is being deprecated.')
mibBuilder.exportSymbols("CISCO-PORT-QOS-MIB", cportQosRLConfigDirection=cportQosRLConfigDirection, cportQosRLConfigRate=cportQosRLConfigRate, cportQosPoliceConformPkts=cportQosPoliceConformPkts, ciscoPortQosStatsMIBGroupRev2Supp1=ciscoPortQosStatsMIBGroupRev2Supp1, cportQosDropOctets=cportQosDropOctets, cportQosNoChangeOctets=cportQosNoChangeOctets, cportQosPoliceViolateOctets=cportQosPoliceViolateOctets, cportQosDscpIngressOctets=cportQosDscpIngressOctets, cportQosOutOfProfPolicyOctets=cportQosOutOfProfPolicyOctets, cportQosInProfPolicyOctets=cportQosInProfPolicyOctets, cportQosClassDiscontinuityTime=cportQosClassDiscontinuityTime, cportQosPoliceDiscontinuityTime=cportQosPoliceDiscontinuityTime, ciscoPortQosMIBCompliances=ciscoPortQosMIBCompliances, ciscoPortQosMIBComplianceRev2=ciscoPortQosMIBComplianceRev2, cportQosQueueDropPkts=cportQosQueueDropPkts, ciscoPortQosStatsMIBGroupRev2Supp7=ciscoPortQosStatsMIBGroupRev2Supp7, ciscoPortQosStatsMIBGroupRev2Supp6=ciscoPortQosStatsMIBGroupRev2Supp6, cportQosOutOfProfPolicyPkts=cportQosOutOfProfPolicyPkts, ciscoPortQosMIBGroups=ciscoPortQosMIBGroups, cportQosInVlanStatsEntry=cportQosInVlanStatsEntry, cportQosVlanViolateProfPolicyOctets=cportQosVlanViolateProfPolicyOctets, ciscoPortQosMIBNotifications=ciscoPortQosMIBNotifications, cportQosPoliceExceedPkts=cportQosPoliceExceedPkts, cportQosClassNameLevel2=cportQosClassNameLevel2, cportQosCosStatsEntry=cportQosCosStatsEntry, cportQosQueueId=cportQosQueueId, cportQosTSConfigEntry=cportQosTSConfigEntry, cportQosPoliceViolateRate=cportQosPoliceViolateRate, ciscoPortQosStatsMIBGroupRev2Supp4=ciscoPortQosStatsMIBGroupRev2Supp4, cportQosClassEnqueuePkts=cportQosClassEnqueuePkts, cportQosCosValue=cportQosCosValue, ciscoPortQosMIBComplianceRev6=ciscoPortQosMIBComplianceRev6, cportQosVlanInProfPolicyOctets=cportQosVlanInProfPolicyOctets, cportQosClassIdLevel2=cportQosClassIdLevel2, ciscoPortQosStatsMIBGroupRev2Supp2=ciscoPortQosStatsMIBGroupRev2Supp2, cportQosPoliceConformOctets=cportQosPoliceConformOctets, PYSNMP_MODULE_ID=ciscoPortQosMIB, ciscoPortQosStatsMIBGroup=ciscoPortQosStatsMIBGroup, ciscoPortQosStatsMIBGroupRev1=ciscoPortQosStatsMIBGroupRev1, cportQosDscpStatsTable=cportQosDscpStatsTable, cportQosTSConfigTable=cportQosTSConfigTable, cportQosVlanOutOfProfPolicyPkts=cportQosVlanOutOfProfPolicyPkts, cportQosClassIngressStatsTable=cportQosClassIngressStatsTable, cportQosPoliceExceedRate=cportQosPoliceExceedRate, cportQosRLConfigBurstSize=cportQosRLConfigBurstSize, cportQosTSConfigBurstSize=cportQosTSConfigBurstSize, cportQosStatistics=cportQosStatistics, cportQosTSConfig=cportQosTSConfig, cportQosViolateProfPolicyOctets=cportQosViolateProfPolicyOctets, cportQosRLConfigTable=cportQosRLConfigTable, cportQosEgressQueueStatsEntry=cportQosEgressQueueStatsEntry, cportQosClassNameLevel1=cportQosClassNameLevel1, cportQosTSConfigRate=cportQosTSConfigRate, cportQosClassId=cportQosClassId, ciscoPortQosStatsMIBGroupRev2Supp5=ciscoPortQosStatsMIBGroupRev2Supp5, cportQosClassThreshold=cportQosClassThreshold, cportQosStatsTable=cportQosStatsTable, ciscoPortQosMIBComplianceRev5=ciscoPortQosMIBComplianceRev5, cportQosInProfPolicyPkts=cportQosInProfPolicyPkts, cportQosQueueEnqueuePkts=cportQosQueueEnqueuePkts, ciscoPortQosMIB=ciscoPortQosMIB, cportQosCosEgressPkts=cportQosCosEgressPkts, cportQosVlanViolateProfPolicyPkts=cportQosVlanViolateProfPolicyPkts, ciscoPortQosMIBGroup=ciscoPortQosMIBGroup, cportQosNoChangePkts=cportQosNoChangePkts, cportQosVlanOutOfProfPolicyOctets=cportQosVlanOutOfProfPolicyOctets, cportQosClassIngressStatsEntry=cportQosClassIngressStatsEntry, cportQosDscpEgressOctets=cportQosDscpEgressOctets, cportQosCosEgressOctets=cportQosCosEgressOctets, cportQosIndexType=cportQosIndexType, cportQosRLConfigEntry=cportQosRLConfigEntry, cportQosDscpEgressPkts=cportQosDscpEgressPkts, cportQosCosStatsTable=cportQosCosStatsTable, cportQosIndexTypeNew=cportQosIndexTypeNew, cportQosClassifiedPkts=cportQosClassifiedPkts, ciscoPortQosStatsMIBGroupRev2Supp3=ciscoPortQosStatsMIBGroupRev2Supp3, cportQosTSConfigEnable=cportQosTSConfigEnable, ciscoPortQosMIBConformance=ciscoPortQosMIBConformance, cportQosClassIdLevel1=cportQosClassIdLevel1, cportQosRLConfigEnable=cportQosRLConfigEnable, ciscoPortQosMIBCompliance=ciscoPortQosMIBCompliance, cportQosPrePolicyOctets=cportQosPrePolicyOctets, cportQosDscpIngressPkts=cportQosDscpIngressPkts, cportQosDscpStatsEntry=cportQosDscpStatsEntry, cportQosPoliceConformRate=cportQosPoliceConformRate, cportQosStatsEntry=cportQosStatsEntry, cportQosCosIngressPkts=cportQosCosIngressPkts, cportQosClassEgressStatsEntry=cportQosClassEgressStatsEntry, cportQosEgressQueueStatsTable=cportQosEgressQueueStatsTable, ciscoPortQosMIBComplianceRev4=ciscoPortQosMIBComplianceRev4, cportQosRLConfig=cportQosRLConfig, cportQosDropPkts=cportQosDropPkts, cportQosPrePolicyPkts=cportQosPrePolicyPkts, ciscoPortQosMIBComplianceRev1=ciscoPortQosMIBComplianceRev1, cportQosCosIngressOctets=cportQosCosIngressOctets, cportQosViolateProfPolicyPkts=cportQosViolateProfPolicyPkts, ciscoPortQosMIBObjects=ciscoPortQosMIBObjects, ciscoPortQosStatsMIBGroupRev2=ciscoPortQosStatsMIBGroupRev2, cportQosInVlanStatsTable=cportQosInVlanStatsTable, cportQosClassName=cportQosClassName, cportQosVlanInProfPolicyPkts=cportQosVlanInProfPolicyPkts, cportQosQueueThreshold=cportQosQueueThreshold, cportQosClassEgressStatsTable=cportQosClassEgressStatsTable, cportQosIndex=cportQosIndex, cportQosPostPolicyOctets=cportQosPostPolicyOctets, cportQosPostPolicyPkts=cportQosPostPolicyPkts, cportQosDscpValue=cportQosDscpValue, cportQosClassDropPkts=cportQosClassDropPkts, cportQosDirection=cportQosDirection, cportQosPoliceExceedOctets=cportQosPoliceExceedOctets, ciscoPortQosStatsMIBGroupRev2Supp8=ciscoPortQosStatsMIBGroupRev2Supp8, cportQosPoliceViolatePkts=cportQosPoliceViolatePkts, cportQosClassifiedOctets=cportQosClassifiedOctets, ciscoPortQosMIBComplianceRev3=ciscoPortQosMIBComplianceRev3)
