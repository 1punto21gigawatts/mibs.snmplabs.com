#
# PySNMP MIB module ZYXEL-VLAN-MAPPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-VLAN-MAPPING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:52:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, IpAddress, NotificationType, ModuleIdentity, Counter64, Gauge32, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "IpAddress", "NotificationType", "ModuleIdentity", "Counter64", "Gauge32", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "MibIdentifier", "Integer32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelVlanMapping = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88))
if mibBuilder.loadTexts: zyxelVlanMapping.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelVlanMapping.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelVlanMapping.setContactInfo('')
if mibBuilder.loadTexts: zyxelVlanMapping.setDescription('The subtree for VLAN mapping')
zyxelVlanMappingSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1))
zyVlanMappingState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanMappingState.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingState.setDescription("Enable/Disable VLAN mapping on the switch. With VLAN mapping enabled, the switch can map the VLAN ID and priority level of packets received from a private network to those used in the service provider's network.")
zyxelVlanMappingPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 2), )
if mibBuilder.loadTexts: zyxelVlanMappingPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelVlanMappingPortTable.setDescription('The table contains VLAN mapping port configuration.')
zyxelVlanMappingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelVlanMappingPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelVlanMappingPortEntry.setDescription('An entry contains VLAN mapping port configuration.')
zyVlanMappingPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 2, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanMappingPortState.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingPortState.setDescription('Enable/Disable the VLAN mapping feature on this port.')
zyVlanMappingMaxNumberOfRules = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanMappingMaxNumberOfRules.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingMaxNumberOfRules.setDescription('The maximum number of VLAN mapping rule entries that can be created.')
zyxelVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4), )
if mibBuilder.loadTexts: zyxelVlanMappingTable.setStatus('current')
if mibBuilder.loadTexts: zyxelVlanMappingTable.setDescription('The table contains VLAN mapping configuration.')
zyxelVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1), ).setIndexNames((0, "ZYXEL-VLAN-MAPPING-MIB", "zyVlanMappingPort"), (0, "ZYXEL-VLAN-MAPPING-MIB", "zyVlanMappingVid"))
if mibBuilder.loadTexts: zyxelVlanMappingEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelVlanMappingEntry.setDescription('An entry contains VLAN mapping configuration.')
zyVlanMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanMappingName.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingName.setDescription('Set a descriptive name of VLAN mapping rule for identification purposes.')
zyVlanMappingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: zyVlanMappingPort.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingPort.setDescription('The port to be included in this rule.')
zyVlanMappingVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 3), Integer32())
if mibBuilder.loadTexts: zyVlanMappingVid.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingVid.setDescription('This is the VLAN tag carried in the packets and will be translated into the VID you specified in the Translated VID entry.')
zyVlanMappingTranslatedVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanMappingTranslatedVid.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingTranslatedVid.setDescription('Set a VLAN ID (from 1 to 4094) into which the customer VID carried in the packets will be translated.')
zyVlanMappingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("priority0", 0), ("priority1", 1), ("priority2", 2), ("priority3", 3), ("priority4", 4), ("priority5", 5), ("priority6", 6), ("priority7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanMappingPriority.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingPriority.setDescription('Set a priority level (from 0 to 7). This is the priority level that replaces the customer priority level in the tagged packets or adds to the untagged packets.')
zyVlanMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 88, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyVlanMappingRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyVlanMappingRowStatus.setDescription('This object allows to create and delete a VLAN mapping rule entry.')
mibBuilder.exportSymbols("ZYXEL-VLAN-MAPPING-MIB", zyVlanMappingRowStatus=zyVlanMappingRowStatus, zyxelVlanMappingSetup=zyxelVlanMappingSetup, zyxelVlanMappingTable=zyxelVlanMappingTable, PYSNMP_MODULE_ID=zyxelVlanMapping, zyVlanMappingState=zyVlanMappingState, zyVlanMappingVid=zyVlanMappingVid, zyxelVlanMappingEntry=zyxelVlanMappingEntry, zyVlanMappingName=zyVlanMappingName, zyVlanMappingTranslatedVid=zyVlanMappingTranslatedVid, zyVlanMappingPriority=zyVlanMappingPriority, zyxelVlanMappingPortTable=zyxelVlanMappingPortTable, zyxelVlanMapping=zyxelVlanMapping, zyVlanMappingPortState=zyVlanMappingPortState, zyVlanMappingPort=zyVlanMappingPort, zyVlanMappingMaxNumberOfRules=zyVlanMappingMaxNumberOfRules, zyxelVlanMappingPortEntry=zyxelVlanMappingPortEntry)
