#
# PySNMP MIB module ChrComPmSonetSNT-P-Current-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmSonetSNT-P-Current-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:36:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmSonet, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmSonet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, Counter64, MibIdentifier, iso, ModuleIdentity, Bits, NotificationType, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Counter64", "MibIdentifier", "iso", "ModuleIdentity", "Bits", "NotificationType", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
chrComPmSonetSNT_P_CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10), ).setLabel("chrComPmSonetSNT-P-CurrentTable")
if mibBuilder.loadTexts: chrComPmSonetSNT_P_CurrentTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_P_CurrentTable.setDescription('')
chrComPmSonetSNT_P_CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1), ).setLabel("chrComPmSonetSNT-P-CurrentEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"))
if mibBuilder.loadTexts: chrComPmSonetSNT_P_CurrentEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_P_CurrentEntry.setDescription('')
chrComPmSonetSuspectedInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setDescription('')
chrComPmSonetElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setDescription('')
chrComPmSonetSuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setDescription('')
chrComPmSonetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetStatus.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetStatus.setDescription('')
chrComPmSonetWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetWidth.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetWidth.setDescription('')
chrComPmSonetES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetES.setDescription('')
chrComPmSonetSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSES.setDescription('')
chrComPmSonetCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetCV.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetCV.setDescription('')
chrComPmSonetUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetUAS.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetUAS.setDescription('')
chrComPmSonetPS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetPS.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetPS.setDescription('')
chrComPmSonetThresholdProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setDescription('')
chrComPmSonetResetPmCountersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 10, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setDescription('')
mibBuilder.exportSymbols("ChrComPmSonetSNT-P-Current-MIB", chrComPmSonetSNT_P_CurrentEntry=chrComPmSonetSNT_P_CurrentEntry, chrComPmSonetElapsedTime=chrComPmSonetElapsedTime, chrComPmSonetCV=chrComPmSonetCV, chrComPmSonetSuppressedIntrvls=chrComPmSonetSuppressedIntrvls, chrComPmSonetSES=chrComPmSonetSES, chrComPmSonetSNT_P_CurrentTable=chrComPmSonetSNT_P_CurrentTable, chrComPmSonetES=chrComPmSonetES, chrComPmSonetPS=chrComPmSonetPS, chrComPmSonetResetPmCountersAction=chrComPmSonetResetPmCountersAction, chrComPmSonetWidth=chrComPmSonetWidth, chrComPmSonetUAS=chrComPmSonetUAS, chrComPmSonetStatus=chrComPmSonetStatus, chrComPmSonetThresholdProfIndex=chrComPmSonetThresholdProfIndex, chrComPmSonetSuspectedInterval=chrComPmSonetSuspectedInterval)
