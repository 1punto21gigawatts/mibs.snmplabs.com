#
# PySNMP MIB module ELTEX-FLEX-LINKS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-FLEX-LINKS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:00:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, IpAddress, Counter32, Bits, Gauge32, ObjectIdentity, NotificationType, ModuleIdentity, Unsigned32, TimeTicks, Integer32, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Counter32", "Bits", "Gauge32", "ObjectIdentity", "NotificationType", "ModuleIdentity", "Unsigned32", "TimeTicks", "Integer32", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
eltexFlexLinksMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 31))
if mibBuilder.loadTexts: eltexFlexLinksMIB.setLastUpdated('201410070000Z')
if mibBuilder.loadTexts: eltexFlexLinksMIB.setOrganization('Eltex Ltd.')
if mibBuilder.loadTexts: eltexFlexLinksMIB.setContactInfo('http://www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltexFlexLinksMIB.setDescription('This MIB module is for configuration and status query of Flex Links feature on the Eltex device. Flex Links are a pair of Layer 2 interfaces, where one interface is configured to act as a backup to the other. The feature provides an alternative solution to the Spanning Tree Protocol (STP), allowing users to turn off STP and still provide basic link redundancy. Flex Links are typically configured in service provider or enterprise networks where users do not want to run STP on the device.')
eltexFlexLinksMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 0))
eltexFlexLinksMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1))
eltexFlexLinksMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2))
eltexFlConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1))
eltexFlStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2))
eltexFlIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1), )
if mibBuilder.loadTexts: eltexFlIfConfigTable.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigTable.setDescription('This table allows user to configure Flex Links. The Flex Links feature requires interface pairs to be setup. This table allows user to specify such interface pairs. An interface can become part of only one such interface pair at any given time.')
eltexFlIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltexFlIfConfigEntry.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigEntry.setDescription('An entry containing information about Flex Links configuration. Each entry configures a pair of interfaces for a Flex Links. Only those Layer 2 interfaces which are capable of performing Flex Links operation may be configured in this table. Once an interface is configured as part of a Flex Links pair, such an interface, can not be configured as a part of other Flex Links pairs.')
eltexFlIfConfigPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: eltexFlIfConfigPrimary.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigPrimary.setDescription('The object indicates the primary interface in this Flex Links pair.')
eltexFlIfConfigBackUp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltexFlIfConfigBackUp.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigBackUp.setDescription("The object indicates the back up interface in this Flex Links pair. The value of this object is changed to 0 (zero) if this interface is removed from the ifTable. The SNMP agent is responsible for updating this object's value once the interface is added to the ifTable. The value of 0 (zero) cannot be set.")
eltexFlEnableStatusChangeNotif = MibScalar((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlEnableStatusChangeNotif.setStatus('current')
if mibBuilder.loadTexts: eltexFlEnableStatusChangeNotif.setDescription("This variable indicates whether the system produces the eltexFlIfStatusChangeNotif. A value of 'false' will prevent eltexFlIfStatusChangeNotif.")
eltexFlIfConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3), )
if mibBuilder.loadTexts: eltexFlIfConfigExtTable.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigExtTable.setDescription('This table contains management information, such as of MAC address-table Move Update(MMU), preemption mechanism, VLAN load balancing of Flex Links pair, of interfaces which are capable of supporting these features.')
eltexFlIfConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltexFlIfConfigExtEntry.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigExtEntry.setDescription('An entry containing Flex Links management information for a particular interface.')
eltexFlIfConfigPreemptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("forced", 2), ("bandwidth", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionMode.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionMode.setDescription('The object specifies the preemption mechanism for a Flex Link interface pair. off - No preemption happens from active interface to backup interface. forced - The active interface always preempts the backup interface. The preemption occurs after the time specified in eltexFlIfConfigPreemptionDelay. bandwidth - The interface with higher bandwidth always acts as the active interface.')
eltexFlIfConfigPreemptionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionDelay.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionDelay.setDescription('The object specifies the delay time until an interface preempts another interface for a Flex Link interface pair.')
eltexFlIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1), )
if mibBuilder.loadTexts: eltexFlIfStatusTable.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfStatusTable.setDescription('A list of interfaces which are members of Flex Links.')
eltexFlIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfIndex"))
if mibBuilder.loadTexts: eltexFlIfStatusEntry.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfStatusEntry.setDescription('An entry, containing status information about a Flex Links interface. Entry is created when an interface is configured as a member of a Flex Links. When an entry is created in the eltexFlIfConfigTable, entries corresponding to eltexFlIfConfigPrimary and eltexFlIfConfigBackUp are created in this table. Entry is deleted when an interface is removed from a Flex Links. When an entry is removed from the eltexFlIfConfigTable, entries corresponding to eltexFlIfConfigPrimary and eltexFlIfConfigBackUp are deleted from this table.')
eltexFlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexFlIfIndex.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfIndex.setDescription('The index value which uniquely identifies the interface to which this entry is applicable. eltexFlIfIndex is the same as the ifIndex of the interface associated with a Flex Links.')
eltexFlIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forwarding", 1), ("blocking", 2), ("down", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexFlIfStatus.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfStatus.setDescription("The status of an interface which is participating in Flex Links operation. A value of 'forwarding' indicates that, the interface is participating in Flex Links operation and is actively forwarding traffic. A value of 'blocking' indicates that, interface is participating in Flex Links operation and is ready to forward traffic if the interface it backs up in Flex Links operation goes down. A value of 'down' indicates that, the interface participating in Flex Links operation has gone down. A value of 'unknown' indicates that, the interface is participating Flex Links operation and has entered an unknown state.")
eltexFlIfStatusChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 35265, 31, 0, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfIndex"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatus"))
if mibBuilder.loadTexts: eltexFlIfStatusChangeNotif.setStatus('current')
if mibBuilder.loadTexts: eltexFlIfStatusChangeNotif.setDescription('A eltexFlIfStatusChangeNotif is generated when the value of eltexFlIfStatus changes.')
eltexFlexLinksMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2, 1))
eltexFlexLinksMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2))
eltexFlexLinksMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 35265, 31, 2, 1, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksIfConfigGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksIfStatusGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksEnableNotifGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksNotifGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksPreemptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksMIBCompliance = eltexFlexLinksMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksMIBCompliance.setDescription('The compliance statement for entities which implement the ELTEX-FLEX-LINKS-MIB.')
eltexFlexLinksIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigBackUp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksIfConfigGroup = eltexFlexLinksIfConfigGroup.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksIfConfigGroup.setDescription('A collection of objects providing interface configuration information for Flex Links.')
eltexFlexLinksIfStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 2)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksIfStatusGroup = eltexFlexLinksIfStatusGroup.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksIfStatusGroup.setDescription('A collection of objects providing interface status information for Flex Links.')
eltexFlexLinksEnableNotifGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 3)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlEnableStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksEnableNotifGroup = eltexFlexLinksEnableNotifGroup.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksEnableNotifGroup.setDescription('A collection of objects providing enabling/disabling of the status change notifications for Flex Links.')
eltexFlexLinksNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 4)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksNotifGroup = eltexFlexLinksNotifGroup.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksNotifGroup.setDescription('A collection of notifications providing the status change for Flex Links.')
eltexFlexLinksPreemptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 5)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPreemptionMode"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPreemptionDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksPreemptionGroup = eltexFlexLinksPreemptionGroup.setStatus('current')
if mibBuilder.loadTexts: eltexFlexLinksPreemptionGroup.setDescription('A collection of objects providing interface preemption information of Flex Links.')
mibBuilder.exportSymbols("ELTEX-FLEX-LINKS-MIB", eltexFlIfConfigExtTable=eltexFlIfConfigExtTable, eltexFlexLinksMIB=eltexFlexLinksMIB, eltexFlIfStatus=eltexFlIfStatus, eltexFlexLinksEnableNotifGroup=eltexFlexLinksEnableNotifGroup, eltexFlIfStatusTable=eltexFlIfStatusTable, eltexFlexLinksMIBObjects=eltexFlexLinksMIBObjects, eltexFlIfConfigPreemptionDelay=eltexFlIfConfigPreemptionDelay, eltexFlConfig=eltexFlConfig, eltexFlexLinksMIBCompliance=eltexFlexLinksMIBCompliance, eltexFlexLinksIfConfigGroup=eltexFlexLinksIfConfigGroup, eltexFlIfConfigEntry=eltexFlIfConfigEntry, eltexFlIfConfigBackUp=eltexFlIfConfigBackUp, eltexFlIfConfigExtEntry=eltexFlIfConfigExtEntry, eltexFlStatus=eltexFlStatus, eltexFlEnableStatusChangeNotif=eltexFlEnableStatusChangeNotif, eltexFlexLinksPreemptionGroup=eltexFlexLinksPreemptionGroup, PYSNMP_MODULE_ID=eltexFlexLinksMIB, eltexFlexLinksIfStatusGroup=eltexFlexLinksIfStatusGroup, eltexFlIfConfigPrimary=eltexFlIfConfigPrimary, eltexFlexLinksMIBNotifs=eltexFlexLinksMIBNotifs, eltexFlexLinksNotifGroup=eltexFlexLinksNotifGroup, eltexFlexLinksMIBGroups=eltexFlexLinksMIBGroups, eltexFlIfStatusEntry=eltexFlIfStatusEntry, eltexFlexLinksMIBCompliances=eltexFlexLinksMIBCompliances, eltexFlIfConfigPreemptionMode=eltexFlIfConfigPreemptionMode, eltexFlIfStatusChangeNotif=eltexFlIfStatusChangeNotif, eltexFlexLinksMIBConformance=eltexFlexLinksMIBConformance, eltexFlIfConfigTable=eltexFlIfConfigTable, eltexFlIfIndex=eltexFlIfIndex)
