#
# PySNMP MIB module HUAWEI-BRAS-PPPoX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-PPPoX-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, iso, Integer32, TimeTicks, ObjectIdentity, MibIdentifier, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, NotificationType, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Integer32", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "NotificationType", "IpAddress", "Counter64")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
hwBRASPPPoX = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2))
if mibBuilder.loadTexts: hwBRASPPPoX.setLastUpdated('200403031508Z')
if mibBuilder.loadTexts: hwBRASPPPoX.setOrganization('Huawei Technologies Co., Ltd. ')
if mibBuilder.loadTexts: hwBRASPPPoX.setContactInfo('Floor 5, Block 4, R&D Building, Huawei Longgang Production Base, Shenzhen, P.R.C. http://www.huawei.com Zip:518057 ')
if mibBuilder.loadTexts: hwBRASPPPoX.setDescription('The MIB contains objects of module PPP.')
hwPPPoXMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1))
hwPppConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1), )
if mibBuilder.loadTexts: hwPppConfigTable.setStatus('current')
if mibBuilder.loadTexts: hwPppConfigTable.setDescription('PPP configuration information table. ')
hwPppConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-PPPoX-MIB", "hwVtIndex"))
if mibBuilder.loadTexts: hwPppConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hwPppConfigEntry.setDescription('Description.')
hwVtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVtIndex.setStatus('current')
if mibBuilder.loadTexts: hwVtIndex.setDescription('Vt index. ')
hwPppAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pap", 0), ("chap", 1), ("auto", 2), ("mschapv1", 3), ("mschapv2", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthMode.setStatus('current')
if mibBuilder.loadTexts: hwPppAuthMode.setDescription('PPP authentication method. ')
hwPppNegTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppNegTimeout.setStatus('current')
if mibBuilder.loadTexts: hwPppNegTimeout.setDescription('Config PPP overtime. ')
hwPppKeepInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppKeepInterval.setStatus('current')
if mibBuilder.loadTexts: hwPppKeepInterval.setDescription('Config interval of sending ECHO packet(second). ')
hwPppKeepRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppKeepRetransmit.setStatus('current')
if mibBuilder.loadTexts: hwPppKeepRetransmit.setDescription('Config retransmission times of ECHO packet.')
hwPppCHAPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppCHAPUserName.setStatus('current')
if mibBuilder.loadTexts: hwPppCHAPUserName.setDescription('Config CHAP authentication username. ')
hwPppCHAPUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppCHAPUserPassword.setStatus('current')
if mibBuilder.loadTexts: hwPppCHAPUserPassword.setDescription('Config CHAP authentication password(only support simple password). ')
hwPppPAPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppPAPUserName.setStatus('current')
if mibBuilder.loadTexts: hwPppPAPUserName.setDescription('Config PAP authentication username. ')
hwPppPAPUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppPAPUserPassword.setStatus('current')
if mibBuilder.loadTexts: hwPppPAPUserPassword.setDescription('Config PAP authentication password(only support simple password). ')
hwPppServiceName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName1.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName1.setDescription(' Service name one . ')
hwPppServiceName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName2.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName2.setDescription(' Service name two . ')
hwPppServiceName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName3.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName3.setDescription(' Service name three . ')
hwPppServiceName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName4.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName4.setDescription(' Service name four . ')
hwPppServiceName5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName5.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName5.setDescription(' Service name five . ')
hwPppServiceName6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName6.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName6.setDescription(' Service name six . ')
hwPppServiceName7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName7.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName7.setDescription(' Service name seven . ')
hwPppServiceName8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName8.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceName8.setDescription(' Service name eight . ')
hwPppServiceNameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exactMatch", 1), ("normalMatch", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceNameType.setStatus('current')
if mibBuilder.loadTexts: hwPppServiceNameType.setDescription('Config servicename kind of match. 1 exact match. 2 fuzzy match(default). ')
hwPppAcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAcName.setStatus('current')
if mibBuilder.loadTexts: hwPppAcName.setDescription(' AcName. ')
hwPppVTBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2), )
if mibBuilder.loadTexts: hwPppVTBindTable.setStatus('current')
if mibBuilder.loadTexts: hwPppVTBindTable.setDescription('PPP VT and interface binding configuration information table. ')
hwPppVTBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindIfIndex"))
if mibBuilder.loadTexts: hwPppVTBindEntry.setStatus('current')
if mibBuilder.loadTexts: hwPppVTBindEntry.setDescription('Description.')
hwPppVTBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPppVTBindIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwPppVTBindIfIndex.setDescription('Interface index. ')
hwVtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1023), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVtNumber.setStatus('current')
if mibBuilder.loadTexts: hwVtNumber.setDescription('Vt index. ')
hwPppConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2))
hwPppCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 1))
hwPppCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 1, 1)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwPppConfigGroup"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppCompliance = hwPppCompliance.setStatus('current')
if mibBuilder.loadTexts: hwPppCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwPppGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2))
hwPppConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2, 1)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwVtIndex"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppAuthMode"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppNegTimeout"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppKeepInterval"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppKeepRetransmit"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppCHAPUserName"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppCHAPUserPassword"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppPAPUserName"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppPAPUserPassword"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName1"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName2"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName3"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName4"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName5"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName6"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName7"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName8"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceNameType"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppAcName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppConfigGroup = hwPppConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hwPppConfigGroup.setDescription('The ppp config group.')
hwPppVTBindGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2, 2)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindIfIndex"), ("HUAWEI-BRAS-PPPoX-MIB", "hwVtNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppVTBindGroup = hwPppVTBindGroup.setStatus('current')
if mibBuilder.loadTexts: hwPppVTBindGroup.setDescription('The ppp VT Bind group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-PPPoX-MIB", PYSNMP_MODULE_ID=hwBRASPPPoX, hwPppAcName=hwPppAcName, hwPppServiceName5=hwPppServiceName5, hwPppCHAPUserPassword=hwPppCHAPUserPassword, hwPppVTBindEntry=hwPppVTBindEntry, hwPppServiceName1=hwPppServiceName1, hwPPPoXMibObjects=hwPPPoXMibObjects, hwPppServiceName8=hwPppServiceName8, hwPppConfigTable=hwPppConfigTable, hwPppAuthMode=hwPppAuthMode, hwBRASPPPoX=hwBRASPPPoX, hwPppKeepRetransmit=hwPppKeepRetransmit, hwPppServiceName6=hwPppServiceName6, hwPppKeepInterval=hwPppKeepInterval, hwPppCompliance=hwPppCompliance, hwPppServiceName3=hwPppServiceName3, hwPppConformance=hwPppConformance, hwPppNegTimeout=hwPppNegTimeout, hwPppVTBindTable=hwPppVTBindTable, hwVtNumber=hwVtNumber, hwPppVTBindIfIndex=hwPppVTBindIfIndex, hwVtIndex=hwVtIndex, hwPppServiceName7=hwPppServiceName7, hwPppConfigGroup=hwPppConfigGroup, hwPppPAPUserName=hwPppPAPUserName, hwPppServiceName2=hwPppServiceName2, hwPppCompliances=hwPppCompliances, hwPppServiceName4=hwPppServiceName4, hwPppVTBindGroup=hwPppVTBindGroup, hwPppCHAPUserName=hwPppCHAPUserName, hwPppGroups=hwPppGroups, hwPppPAPUserPassword=hwPppPAPUserPassword, hwPppConfigEntry=hwPppConfigEntry, hwPppServiceNameType=hwPppServiceNameType)
