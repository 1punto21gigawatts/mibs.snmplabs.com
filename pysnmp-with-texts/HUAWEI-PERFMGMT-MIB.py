#
# PySNMP MIB module HUAWEI-PERFMGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-PERFMGMT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:47:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter64, Unsigned32, Integer32, MibIdentifier, IpAddress, Bits, ModuleIdentity, Gauge32, NotificationType, ObjectIdentity, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Unsigned32", "Integer32", "MibIdentifier", "IpAddress", "Bits", "ModuleIdentity", "Gauge32", "NotificationType", "ObjectIdentity", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, DisplayString, TextualConvention, RowStatus, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "RowStatus", "TimeStamp")
hwPerfMgmt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190))
hwPerfMgmt.setRevisions(('2015-10-16 14:34', '2015-09-21 14:34', '2015-02-07 14:34', '2015-02-06 14:34', '2014-05-05 16:31', '2014-03-13 21:19', '2013-10-14 16:55', '2013-09-26 10:00', '2013-05-20 15:12', '2013-05-20 15:12', '2013-05-20 15:12', '2011-03-16 00:00', '2009-02-27 11:41',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwPerfMgmt.setRevisionsDescriptions(('The MIB module for performance management.', 'V4.08 add MIB nodes.', 'V4.07 modify MIB nodes hwPMReSetCurrentDataIndicatorID, hwPMReSetCurrentDataInstanceName,hwPMReSetCurrentDataInstanceType for mistakes in format.', 'V4.06 delete MIB nodes hwPMReSetCurrentDataIndicatorID, hwPMReSetCurrentDataInstanceName,hwPMReSetCurrentDataInstanceType from group as they are undefined or unaccessible.', 'V4.05 modify MIB nodes.', 'V4.04 modify MIB nodes.', 'V4.03 modify MIB nodes.', 'V4.02 Add hwPMServerVPNType to support VPN.', 'V4.00, modify MIB nodes.', 'V3.00, add MIB nodes.', 'V3.00, modify for this MIB module.', 'V1.01 modify for mib index.', 'V1.00, The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hwPerfMgmt.setLastUpdated('201510161434Z')
if mibBuilder.loadTexts: hwPerfMgmt.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwPerfMgmt.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwPerfMgmt.setDescription('V4.09 modify MIB nodes hwPMMeasureExceed .')
hwPMStatisticsMIBInstances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1))
hwPMStatisticsEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPMStatisticsEnable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsEnable.setDescription('Enable or disable the statistics data function.')
hwPMStatisticsMaxFilesPerTask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsMaxFilesPerTask.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsMaxFilesPerTask.setDescription('The maximum number of files reserved for each statistics task.')
hwPMStatisticsMaxTasks = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsMaxTasks.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsMaxTasks.setDescription('The maximum number of statistics tasks allowed to be created.')
hwPMStatisticsCurrentTasks = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsCurrentTasks.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsCurrentTasks.setDescription('The current number of statistics tasks configured.')
hwPMStatisticsTaskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5), )
if mibBuilder.loadTexts: hwPMStatisticsTaskTable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskTable.setDescription('The statistics task table, providing create/modify/delete operations. To create a task, you need to create a related record in this table, and add instance nodes in the hwPMTaskInstanceTable. If you delete a task, the related instances in the hwPMTaskInstanceTable will be deleted.')
hwPMStatisticsTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"))
if mibBuilder.loadTexts: hwPMStatisticsTaskEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskEntry.setDescription('The entry of hwStatisticsTaskTable.')
hwPMStatisticsTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskName.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskName.setDescription('The statistics task name, only letter, digit or underline can be allowed, must begin with letter or digit.')
hwPMStatisticsTaskFileFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hwPMtxtv1", 1), ("hwPMbinv1", 2), ("hwPM3Gppxmlv1", 3))).clone('hwPMtxtv1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskFileFormat.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskFileFormat.setDescription('The statistics task file format, only text(1) can be supported now.')
hwPMStatisticsRecordFileEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsRecordFileEnable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsRecordFileEnable.setDescription('Enable or disable the record file function. ')
hwPMStatisticsThresholdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsThresholdEnable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsThresholdEnable.setDescription('Enable or disable the threshold function. ')
hwPMStatisticsTaskPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 10, 15, 30, 60, 1440, 0))).clone(namedValues=NamedValues(("five", 5), ("ten", 10), ("fifteen", 15), ("thirty", 30), ("sixty", 60), ("twentyfourhours", 1440), ("invalid", 0))).clone('fifteen')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskPeriod.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskPeriod.setDescription('The interval of statistics task, in minutes.')
hwPMStatisticsTaskTransferPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskTransferPeriod.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskTransferPeriod.setDescription('The interval of transferring statistics task files to NMS, in times of statistics task period.')
hwPMStatisticsTaskCurrentFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskCurrentFileIndex.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskCurrentFileIndex.setDescription('The current file index of statistics task.')
hwPMStatisticsTaskRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskRowStatus.setDescription('The row status.')
hwPMStatisticsTaskSampleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 10, 15, 30, 60))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("five", 5), ("ten", 10), ("fifteen", 15), ("thirty", 30), ("sixty", 60))).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskSampleInterval.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskSampleInterval.setDescription('The interval of task sampling, in minutes.')
hwPMStatisticsUploadAutoName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsUploadAutoName.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsUploadAutoName.setDescription('The object refers to the mib node hwPMFileUploadRequestName,which enables the device to automatically and periodically send statistics files to the server.')
hwPMStatisticsTaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8, 10))).clone(namedValues=NamedValues(("pmStatistics", 3), ("pmSdh", 6), ("monHistory", 7), ("monStatistics", 8), ("sdhShort", 10))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskType.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskType.setDescription('The type of statistics task.')
hwPMStatisticsHighPrecisionPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 86400)).clone(900)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsHighPrecisionPeriod.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsHighPrecisionPeriod.setDescription('The interval of statistics task, in seconds. if taskType is sdhShort , It must be multiple of 5 seconds and less or equal to 900 seconds, else It must be multiple of 30 seconds.')
hwPMStatisticsTaskInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 6), )
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceTable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceTable.setDescription('The statistics task instance table.')
hwPMStatisticsTaskInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 6, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceType"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceName"))
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceEntry.setDescription('The entry of hwStatisticsTaskInstanceTable.')
hwPMStatisticsTaskInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceType.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceType.setDescription('The instance type of statistics task.')
hwPMStatisticsTaskInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceName.setDescription('The instance name of statistics task.')
hwPMStatisticsTaskInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskInstanceRowStatus.setDescription('The row status.')
hwPMStatisticsTaskIndicatorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 7), )
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorTable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorTable.setDescription('The statistics task indicator table.')
hwPMStatisticsTaskIndicatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 7, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceType"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicator"))
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorEntry.setDescription('The entry of hwStatisticsTaskIndicatorTable.')
hwPMStatisticsTaskIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 7, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicator.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicator.setDescription('The statistics task indicator.')
hwPMStatisticsTaskIndicatorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicatorRowStatus.setDescription('The row status.')
hwPMStatisticsTaskThresholdRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8), )
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleTable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleTable.setDescription('The threshold rule table. ')
hwPMStatisticsTaskThresholdRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceType"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicator"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdType"))
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleEntry.setDescription('The entry of hwStatisticsTaskThresholdRuleTable.')
hwPMStatisticsTaskThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hightrigger", 1), ("lowtrigger", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdType.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdType.setDescription('The threshold type of the threshold rule.')
hwPMStatisticsTaskThresholdHighTriggerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdHighTriggerValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdHighTriggerValue.setDescription('The high 32 bit of threshold alarm trigger value. ')
hwPMStatisticsTaskThresholdLowTriggerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdLowTriggerValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdLowTriggerValue.setDescription('The low 32 bit of threshold alarm trigger value . ')
hwPMStatisticsTaskThresholdHighClearedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdHighClearedValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdHighClearedValue.setDescription('The high 32 bit of threshold alarm clear value. ')
hwPMStatisticsTaskThresholdLowClearedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdLowClearedValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdLowClearedValue.setDescription('The low 32 bit of threshold alarm clear value. ')
hwPMStatisticsTaskThresholdRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 8, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdRuleRowStatus.setDescription('The row status of the threshold rule.')
hwPMStatisticsTaskThresholdEvent = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 9))
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdEvent.setDescription('Definition point for performance threshold notifications.')
hwPMStatisticsTaskThresholdTriggerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 9, 1)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskPeriod"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicator"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdType"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdHighTriggerValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdLowTriggerValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateHighValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateLowValue"))
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdTriggerAlarm.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdTriggerAlarm.setDescription('The SNMP trap that is generated when an alarm entry crosses its rising threshold and generates an event that is configured for sending SNMP traps. When alarm is high trigger, hwPMStatisticsTaskThresholdType is 1, when alarm is low trigger, hwPMStatisticsTaskThresholdType is 2. ')
hwPMStatisticsTaskThresholdClearAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 9, 2)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskPeriod"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicator"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdType"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdHighClearedValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdLowClearedValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateHighValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateLowValue"))
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdClearAlarm.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskThresholdClearAlarm.setDescription('The SNMP trap that is generated when an alarm entry crosses its falling threshold and generates an event that is configured for sending SNMP traps. When alarm is high trigger, hwPMStatisticsTaskThresholdType is 1, when alarm is low trigger, hwPMStatisticsTaskThresholdType is 2. ')
hwPMStatisticsTaskIndicateLowValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicateLowValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicateLowValue.setDescription('The PM indicator value node. ')
hwPMStatisticsTaskIndicateHighValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 11), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicateHighValue.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskIndicateHighValue.setDescription('The PM indicator value node. ')
hwPMStatisticsTaskFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 12), )
if mibBuilder.loadTexts: hwPMStatisticsTaskFileTable.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskFileTable.setDescription('The statistics task file table.')
hwPMStatisticsTaskFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 12, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskFileIndex"))
if mibBuilder.loadTexts: hwPMStatisticsTaskFileEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskFileEntry.setDescription('The entry of hwStatisticsTaskFileTable.')
hwPMStatisticsTaskFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskFileIndex.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskFileIndex.setDescription('The statistics task file index.')
hwPMStatisticsTaskFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 12, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMStatisticsTaskFileName.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTaskFileName.setDescription('The statistics task file name.')
hwPMStatisticsTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 13))
if mibBuilder.loadTexts: hwPMStatisticsTraps.setStatus('current')
if mibBuilder.loadTexts: hwPMStatisticsTraps.setDescription('Definition point for measure exceed notifications.')
hwPMMeasureExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 1, 13, 1))
if mibBuilder.loadTexts: hwPMMeasureExceed.setStatus('current')
if mibBuilder.loadTexts: hwPMMeasureExceed.setDescription('The number of statistical indexes has reached the upper limit.')
hwPMFileUploadMgmtInstances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2))
hwPMServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1), )
if mibBuilder.loadTexts: hwPMServerTable.setStatus('current')
if mibBuilder.loadTexts: hwPMServerTable.setDescription('The PM server table.')
hwPMServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMServerName"))
if mibBuilder.loadTexts: hwPMServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMServerEntry.setDescription('The entry of hwPMServerTable.')
hwPMServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMServerName.setStatus('current')
if mibBuilder.loadTexts: hwPMServerName.setDescription('The server name.')
hwPMServerSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMServerSrcAddrType.setStatus('current')
if mibBuilder.loadTexts: hwPMServerSrcAddrType.setDescription('Server source ip-address type.')
hwPMServerSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMServerSrcAddr.setStatus('current')
if mibBuilder.loadTexts: hwPMServerSrcAddr.setDescription("The server source ip-address, reservation node, don't support now.")
hwPMServerVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerVpnName.setStatus('current')
if mibBuilder.loadTexts: hwPMServerVpnName.setDescription('The server VPN name.')
hwPMServerHostAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 5), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerHostAddrType.setStatus('current')
if mibBuilder.loadTexts: hwPMServerHostAddrType.setDescription('Server host ip-address type.')
hwPMServerHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerHostAddr.setStatus('current')
if mibBuilder.loadTexts: hwPMServerHostAddr.setDescription('The server host ip-address.')
hwPMServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerPort.setStatus('current')
if mibBuilder.loadTexts: hwPMServerPort.setDescription('The server port.')
hwPMServerUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerUserName.setStatus('current')
if mibBuilder.loadTexts: hwPMServerUserName.setDescription('The server user name.')
hwPMServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerPassword.setStatus('current')
if mibBuilder.loadTexts: hwPMServerPassword.setDescription('The object indicates the server user password, which supports encrypted text and plain text. When read, hwPMServerPassword always returns an Octet String of length zero.')
hwPMServerSrcIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMServerSrcIfName.setStatus('current')
if mibBuilder.loadTexts: hwPMServerSrcIfName.setDescription("The server source interface name, reservation node, don't support now.")
hwPMServerRetryTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerRetryTimes.setStatus('current')
if mibBuilder.loadTexts: hwPMServerRetryTimes.setDescription('The erver retry times.')
hwPMServerDestPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerDestPath.setStatus('current')
if mibBuilder.loadTexts: hwPMServerDestPath.setDescription('The server destination path.')
hwPMServerTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("sftp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerTransferProtocol.setStatus('current')
if mibBuilder.loadTexts: hwPMServerTransferProtocol.setDescription('The server transfer protocol')
hwPMServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMServerRowStatus.setDescription('The row status.')
hwPMServerVpnType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("managevpn", 1), ("vpninstance", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMServerVpnType.setStatus('current')
if mibBuilder.loadTexts: hwPMServerVpnType.setDescription('The server VPN type.')
hwPMFileUploadCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 2), )
if mibBuilder.loadTexts: hwPMFileUploadCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadCfgTable.setDescription('The PM file upload config table.')
hwPMFileUploadCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 2, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMFileUploadRequestName"))
if mibBuilder.loadTexts: hwPMFileUploadCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadCfgEntry.setDescription('The Entry of hwPMFileUploadCfgTable.')
hwPMFileUploadRequestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMFileUploadRequestName.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadRequestName.setDescription('The Upload Request name.')
hwPMFileUploadServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMFileUploadServerName.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadServerName.setDescription('The file upload server name.')
hwPMFileUploadCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMFileUploadCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadCfgRowStatus.setDescription('File upload request config row status.')
hwPMFileUploadMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 3), )
if mibBuilder.loadTexts: hwPMFileUploadMgmtTable.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadMgmtTable.setDescription('PM file upload management table.')
hwPMFileUploadMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 3, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMFileUploadRequestName"))
if mibBuilder.loadTexts: hwPMFileUploadMgmtEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadMgmtEntry.setDescription('Entry of hwPMFileUploadMgmtTable.')
hwPMFileUploadFileList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 543))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPMFileUploadFileList.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadFileList.setDescription('The file list needed to be uploaded. Format is TaskName1:FileIndex1,TaskName2:FileIndex2.')
hwPMFileUploadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("init", 1), ("running", 2), ("success", 3), ("fileOpenFail", 4), ("unreachableServerIp", 5), ("linkFailed", 6), ("authenticateFailed", 7), ("fileReadFailed", 8), ("fileWriteFailed", 9), ("failed", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMFileUploadStatus.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadStatus.setDescription('The file upload status. init(1): FTP has not been starting to upload file. running(2): FTP is running. If you set this node as running, the FTP will be started. success(3): FTP completed successfully. fileOpenFail(4): FTP failed. The cause is file open failure. unreachableServerIp(5): FTP failed. The cause is that the IP address of the server is not reachable. linkFailed(6): FTP failed. The cause is connecting to server failed. authenticateFailed(7): FTP failed. The cause is authenticating failed.For FTP mode only. fileReadFailed(8): FTP failed. The cause is reading file failed. fileWriteFailed(9): FTP failed. The cause is writing file failed. failed(10):FTP failed, General error.')
hwPMDataInstances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4))
hwPMHistoryDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1), )
if mibBuilder.loadTexts: hwPMHistoryDataTable.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataTable.setDescription('The performance statistic history data table.')
hwPMHistoryDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataInstanceType"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataInstanceName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataIndicatorID"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataIntervalIndex"))
if mibBuilder.loadTexts: hwPMHistoryDataEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataEntry.setDescription('The entry of performance statistic history data table.')
hwPMHistoryDataInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPMHistoryDataInstanceType.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataInstanceType.setDescription('The instance type of history data.')
hwPMHistoryDataInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 2), OctetString())
if mibBuilder.loadTexts: hwPMHistoryDataInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataInstanceName.setDescription('The instance name of history data.')
hwPMHistoryDataIndicatorID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwPMHistoryDataIndicatorID.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataIndicatorID.setDescription('The indicator ID of history data.')
hwPMHistoryDataIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwPMHistoryDataIntervalIndex.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataIntervalIndex.setDescription('The interval index of history data.')
hwPMHistoryDataHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMHistoryDataHighValue.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataHighValue.setDescription('The high 32 bit of history data value.')
hwPMHistoryDataLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMHistoryDataLowValue.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataLowValue.setDescription('The low 32 bit of history data value.')
hwPMHistoryDataValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 1), ("valid", 2), ("incredible", 3), ("measureNotConfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMHistoryDataValidFlag.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDataValidFlag.setDescription('The valid flag of history data.')
hwPMHistoryDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMHistoryDateAndTime.setStatus('current')
if mibBuilder.loadTexts: hwPMHistoryDateAndTime.setDescription('The date and time of history data.')
hwPMCurrentDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2), )
if mibBuilder.loadTexts: hwPMCurrentDataTable.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataTable.setDescription('Performance statistic current data table.')
hwPMCurrentDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataInstanceType"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataInstanceName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataIndicatorID"))
if mibBuilder.loadTexts: hwPMCurrentDataEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataEntry.setDescription('Entry of performance statistic current data table.')
hwPMCurrentDataInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPMCurrentDataInstanceType.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataInstanceType.setDescription('The instance type of current data.')
hwPMCurrentDataInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 2), OctetString())
if mibBuilder.loadTexts: hwPMCurrentDataInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataInstanceName.setDescription('The instance name of current data.')
hwPMCurrentDataIndicatorID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwPMCurrentDataIndicatorID.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataIndicatorID.setDescription('The indicator ID of current data.')
hwPMCurrentDataHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMCurrentDataHighValue.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataHighValue.setDescription('The high 32 bit of current data value.')
hwPMCurrentDataLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMCurrentDataLowValue.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataLowValue.setDescription('The low 32 bit of current data value.')
hwPMCurrentDataValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 1), ("valid", 2), ("incredible", 3), ("measureNotConfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMCurrentDataValidFlag.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDataValidFlag.setDescription('The valid flag of current data.')
hwPMCurrentDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMCurrentDateAndTime.setStatus('current')
if mibBuilder.loadTexts: hwPMCurrentDateAndTime.setDescription('The date and time of current data.')
hwPMResetCurrentDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 3), )
if mibBuilder.loadTexts: hwPMResetCurrentDataTable.setStatus('current')
if mibBuilder.loadTexts: hwPMResetCurrentDataTable.setDescription('Performance statistic current data table.')
hwPMResetCurrentDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 3, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), (0, "HUAWEI-PERFMGMT-MIB", "hwPMResetCurrentDataInstanceType"))
if mibBuilder.loadTexts: hwPMResetCurrentDataEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMResetCurrentDataEntry.setDescription('Entry of reset performance statistic current data table.')
hwPMResetCurrentDataInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPMResetCurrentDataInstanceType.setStatus('current')
if mibBuilder.loadTexts: hwPMResetCurrentDataInstanceType.setDescription('The instance type of current data.')
hwPMResetCurrentDataInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 3, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPMResetCurrentDataInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwPMResetCurrentDataInstanceName.setDescription('The instance name of current data.')
hwPMResetCurrentDataIndicatorID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPMResetCurrentDataIndicatorID.setStatus('current')
if mibBuilder.loadTexts: hwPMResetCurrentDataIndicatorID.setDescription('The indicator ID of current data.')
hwPMGlobalInstances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5))
hwPMIntervalTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1), )
if mibBuilder.loadTexts: hwPMIntervalTypeTable.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeTable.setDescription('The interval type table.')
hwPMIntervalTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMIntervalType"))
if mibBuilder.loadTexts: hwPMIntervalTypeEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeEntry.setDescription('The entry of hwPMIntervalTypeTable.')
hwPMIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPMIntervalType.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalType.setDescription('The interval type ID.')
hwPMIntervalTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIntervalTypeName.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeName.setDescription('The interval type name.')
hwPMIntervalTypeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 10, 15, 30, 60, 1440))).clone(namedValues=NamedValues(("five", 5), ("ten", 10), ("fifteen", 15), ("thirty", 30), ("sixty", 60), ("twentyfourhours", 1440)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIntervalTypeInterval.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeInterval.setDescription('The enum value of interval type.')
hwPMIntervalTypeHistorynum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIntervalTypeHistorynum.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeHistorynum.setDescription('The history number of save data per interval type.')
hwPMIntervalTypeDelayRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 5), Unsigned32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIntervalTypeDelayRange.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeDelayRange.setDescription('The range of delay time per interval type.')
hwPMIntervalTypeSampleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 1, 1, 6), Unsigned32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIntervalTypeSampleInterval.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeSampleInterval.setDescription('The default sample interval per interval type.')
hwPMInstanceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 2), )
if mibBuilder.loadTexts: hwPMInstanceTypeTable.setStatus('current')
if mibBuilder.loadTexts: hwPMInstanceTypeTable.setDescription('The instance type table.')
hwPMInstanceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 2, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMInstanceTypeID"))
if mibBuilder.loadTexts: hwPMInstanceTypeEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMInstanceTypeEntry.setDescription('The entry of hwPMInstanceTypeTable.')
hwPMInstanceTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPMInstanceTypeID.setStatus('current')
if mibBuilder.loadTexts: hwPMInstanceTypeID.setDescription('The instance type ID.')
hwPMInstanceTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMInstanceTypeName.setStatus('current')
if mibBuilder.loadTexts: hwPMInstanceTypeName.setDescription('The instance type name.')
hwPMIndicatorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3), )
if mibBuilder.loadTexts: hwPMIndicatorTable.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorTable.setDescription('The indicator table.')
hwPMIndicatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3, 1), ).setIndexNames((0, "HUAWEI-PERFMGMT-MIB", "hwPMIndicatorID"))
if mibBuilder.loadTexts: hwPMIndicatorEntry.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorEntry.setDescription('The entry of hwPMIndicatorTable.')
hwPMIndicatorID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPMIndicatorID.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorID.setDescription('The indicator ID.')
hwPMIndicatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIndicatorName.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorName.setDescription('The indicator name.')
hwPMIndicatorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("increase", 1), ("measure", 2), ("max", 3), ("min", 4), ("avg", 5), ("es", 6), ("delta", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIndicatorType.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorType.setDescription('The indicator type.')
hwPMIndicatorCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("counter32", 1), ("counter64", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPMIndicatorCounterType.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorCounterType.setDescription('The indicator counter type.')
hwPMConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6))
hwPMCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 1))
hwPMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 1, 1)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMMIBGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMTaskGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMTaskInstanceGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMTaskThresholdGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMTaskFileGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMDataInstanceGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMInstanceTypeGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMIndicatorGroup"), ("HUAWEI-PERFMGMT-MIB", "hwPMNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMCompliance = hwPMCompliance.setStatus('current')
if mibBuilder.loadTexts: hwPMCompliance.setDescription('The performance management compliance.')
hwPMGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2))
hwPMMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 1)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsEnable"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsMaxFilesPerTask"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsMaxTasks"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsCurrentTasks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMMIBGroup = hwPMMIBGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMMIBGroup.setDescription('The performance management group.')
hwPMTaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 2)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskFileFormat"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsRecordFileEnable"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsThresholdEnable"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskPeriod"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskTransferPeriod"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskRowStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskSampleInterval"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicator"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicatorRowStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskCurrentFileIndex"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsUploadAutoName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMTaskGroup = hwPMTaskGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMTaskGroup.setDescription('The performance management statistics task group.')
hwPMTaskInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 3)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceType"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceName"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskInstanceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMTaskInstanceGroup = hwPMTaskInstanceGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMTaskInstanceGroup.setDescription('The performance management statistics task instances group.')
hwPMTaskThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 4)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdType"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdHighTriggerValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdLowTriggerValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdHighClearedValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdLowClearedValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdRuleRowStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateLowValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskIndicateHighValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMTaskThresholdGroup = hwPMTaskThresholdGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMTaskThresholdGroup.setDescription('The performance management statistics task threshold group.')
hwPMTaskFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 5)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskFileIndex"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMTaskFileGroup = hwPMTaskFileGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMTaskFileGroup.setDescription('The performance management statistics task file group.')
hwPMFileUploadGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 6)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadRequestName"), ("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadServerName"), ("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadFileList"), ("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMFileUploadCfgRowStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerName"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerSrcAddrType"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerSrcAddr"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerVpnName"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerHostAddr"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerHostAddrType"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerPort"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerUserName"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerPassword"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerSrcIfName"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerRetryTimes"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerTransferProtocol"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerDestPath"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerRowStatus"), ("HUAWEI-PERFMGMT-MIB", "hwPMServerVpnType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMFileUploadGroup = hwPMFileUploadGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMFileUploadGroup.setDescription('The performance management statistics file upload group.')
hwPMDataInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 7)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataHighValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataLowValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMHistoryDataValidFlag"), ("HUAWEI-PERFMGMT-MIB", "hwPMHistoryDateAndTime"), ("HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataHighValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataLowValue"), ("HUAWEI-PERFMGMT-MIB", "hwPMCurrentDataValidFlag"), ("HUAWEI-PERFMGMT-MIB", "hwPMCurrentDateAndTime"), ("HUAWEI-PERFMGMT-MIB", "hwPMResetCurrentDataIndicatorID"), ("HUAWEI-PERFMGMT-MIB", "hwPMResetCurrentDataInstanceName"), ("HUAWEI-PERFMGMT-MIB", "hwPMResetCurrentDataInstanceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMDataInstanceGroup = hwPMDataInstanceGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMDataInstanceGroup.setDescription('The performance management data group.')
hwPMIntervalTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 8)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeName"), ("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeInterval"), ("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeHistorynum"), ("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeDelayRange"), ("HUAWEI-PERFMGMT-MIB", "hwPMIntervalTypeSampleInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMIntervalTypeGroup = hwPMIntervalTypeGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMIntervalTypeGroup.setDescription('The performance management interval type group.')
hwPMInstanceTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 9)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMInstanceTypeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMInstanceTypeGroup = hwPMInstanceTypeGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMInstanceTypeGroup.setDescription('The performance management instance type group.')
hwPMIndicatorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 10)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMIndicatorName"), ("HUAWEI-PERFMGMT-MIB", "hwPMIndicatorType"), ("HUAWEI-PERFMGMT-MIB", "hwPMIndicatorCounterType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMIndicatorGroup = hwPMIndicatorGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMIndicatorGroup.setDescription('The performance management indicator group.')
hwPMNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 190, 6, 2, 11)).setObjects(("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdTriggerAlarm"), ("HUAWEI-PERFMGMT-MIB", "hwPMStatisticsTaskThresholdClearAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPMNotificationGroup = hwPMNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwPMNotificationGroup.setDescription('The notification group.')
mibBuilder.exportSymbols("HUAWEI-PERFMGMT-MIB", hwPMIndicatorGroup=hwPMIndicatorGroup, hwPMStatisticsTaskFileIndex=hwPMStatisticsTaskFileIndex, hwPMTaskInstanceGroup=hwPMTaskInstanceGroup, hwPMCurrentDataInstanceName=hwPMCurrentDataInstanceName, hwPMServerTable=hwPMServerTable, hwPMServerPassword=hwPMServerPassword, hwPMResetCurrentDataEntry=hwPMResetCurrentDataEntry, hwPMStatisticsTaskTable=hwPMStatisticsTaskTable, hwPMTaskThresholdGroup=hwPMTaskThresholdGroup, hwPMStatisticsTaskIndicateHighValue=hwPMStatisticsTaskIndicateHighValue, hwPMHistoryDataValidFlag=hwPMHistoryDataValidFlag, hwPMStatisticsTaskType=hwPMStatisticsTaskType, hwPMStatisticsTaskInstanceEntry=hwPMStatisticsTaskInstanceEntry, hwPMServerRetryTimes=hwPMServerRetryTimes, hwPMStatisticsTaskRowStatus=hwPMStatisticsTaskRowStatus, hwPMStatisticsTaskThresholdType=hwPMStatisticsTaskThresholdType, hwPMHistoryDataEntry=hwPMHistoryDataEntry, hwPMStatisticsTaskThresholdLowTriggerValue=hwPMStatisticsTaskThresholdLowTriggerValue, hwPMCurrentDataIndicatorID=hwPMCurrentDataIndicatorID, hwPMHistoryDataHighValue=hwPMHistoryDataHighValue, hwPMMIBGroup=hwPMMIBGroup, hwPMStatisticsTaskIndicatorEntry=hwPMStatisticsTaskIndicatorEntry, hwPMCurrentDataInstanceType=hwPMCurrentDataInstanceType, hwPMFileUploadCfgRowStatus=hwPMFileUploadCfgRowStatus, hwPMIntervalTypeSampleInterval=hwPMIntervalTypeSampleInterval, hwPMServerTransferProtocol=hwPMServerTransferProtocol, hwPMFileUploadStatus=hwPMFileUploadStatus, hwPMHistoryDateAndTime=hwPMHistoryDateAndTime, hwPMStatisticsTaskFileName=hwPMStatisticsTaskFileName, hwPMInstanceTypeName=hwPMInstanceTypeName, hwPMStatisticsTaskThresholdRuleEntry=hwPMStatisticsTaskThresholdRuleEntry, hwPMStatisticsTaskInstanceTable=hwPMStatisticsTaskInstanceTable, hwPMFileUploadMgmtInstances=hwPMFileUploadMgmtInstances, hwPMStatisticsTaskIndicator=hwPMStatisticsTaskIndicator, hwPMStatisticsCurrentTasks=hwPMStatisticsCurrentTasks, hwPMStatisticsTaskInstanceRowStatus=hwPMStatisticsTaskInstanceRowStatus, hwPMNotificationGroup=hwPMNotificationGroup, hwPMGlobalInstances=hwPMGlobalInstances, hwPMServerUserName=hwPMServerUserName, hwPMStatisticsTaskThresholdRuleRowStatus=hwPMStatisticsTaskThresholdRuleRowStatus, hwPMStatisticsEnable=hwPMStatisticsEnable, hwPMCurrentDataTable=hwPMCurrentDataTable, hwPMFileUploadMgmtTable=hwPMFileUploadMgmtTable, hwPMStatisticsTaskTransferPeriod=hwPMStatisticsTaskTransferPeriod, hwPMHistoryDataLowValue=hwPMHistoryDataLowValue, hwPMStatisticsTaskThresholdClearAlarm=hwPMStatisticsTaskThresholdClearAlarm, hwPMStatisticsTaskFileFormat=hwPMStatisticsTaskFileFormat, hwPMStatisticsTaskPeriod=hwPMStatisticsTaskPeriod, hwPMIntervalTypeName=hwPMIntervalTypeName, hwPMCurrentDataHighValue=hwPMCurrentDataHighValue, hwPMServerSrcAddrType=hwPMServerSrcAddrType, hwPMFileUploadRequestName=hwPMFileUploadRequestName, hwPMStatisticsTaskFileEntry=hwPMStatisticsTaskFileEntry, hwPMServerName=hwPMServerName, hwPMResetCurrentDataTable=hwPMResetCurrentDataTable, hwPMCompliances=hwPMCompliances, hwPMStatisticsMIBInstances=hwPMStatisticsMIBInstances, hwPMIndicatorID=hwPMIndicatorID, hwPMStatisticsTraps=hwPMStatisticsTraps, hwPMIndicatorType=hwPMIndicatorType, hwPMResetCurrentDataIndicatorID=hwPMResetCurrentDataIndicatorID, hwPMStatisticsTaskThresholdEvent=hwPMStatisticsTaskThresholdEvent, hwPMStatisticsTaskThresholdRuleTable=hwPMStatisticsTaskThresholdRuleTable, hwPMStatisticsThresholdEnable=hwPMStatisticsThresholdEnable, hwPMStatisticsTaskIndicatorRowStatus=hwPMStatisticsTaskIndicatorRowStatus, hwPMStatisticsTaskInstanceType=hwPMStatisticsTaskInstanceType, hwPMStatisticsTaskThresholdHighTriggerValue=hwPMStatisticsTaskThresholdHighTriggerValue, hwPMStatisticsTaskThresholdTriggerAlarm=hwPMStatisticsTaskThresholdTriggerAlarm, hwPMHistoryDataTable=hwPMHistoryDataTable, hwPMFileUploadGroup=hwPMFileUploadGroup, hwPMTaskGroup=hwPMTaskGroup, hwPMStatisticsMaxTasks=hwPMStatisticsMaxTasks, hwPerfMgmt=hwPerfMgmt, hwPMIntervalTypeHistorynum=hwPMIntervalTypeHistorynum, hwPMHistoryDataIndicatorID=hwPMHistoryDataIndicatorID, PYSNMP_MODULE_ID=hwPerfMgmt, hwPMIntervalTypeGroup=hwPMIntervalTypeGroup, hwPMConformance=hwPMConformance, hwPMStatisticsMaxFilesPerTask=hwPMStatisticsMaxFilesPerTask, hwPMStatisticsHighPrecisionPeriod=hwPMStatisticsHighPrecisionPeriod, hwPMCurrentDataLowValue=hwPMCurrentDataLowValue, hwPMInstanceTypeID=hwPMInstanceTypeID, hwPMCompliance=hwPMCompliance, hwPMHistoryDataIntervalIndex=hwPMHistoryDataIntervalIndex, hwPMServerHostAddr=hwPMServerHostAddr, hwPMInstanceTypeEntry=hwPMInstanceTypeEntry, hwPMStatisticsTaskThresholdLowClearedValue=hwPMStatisticsTaskThresholdLowClearedValue, hwPMIntervalTypeDelayRange=hwPMIntervalTypeDelayRange, hwPMStatisticsTaskIndicatorTable=hwPMStatisticsTaskIndicatorTable, hwPMServerSrcAddr=hwPMServerSrcAddr, hwPMServerHostAddrType=hwPMServerHostAddrType, hwPMServerEntry=hwPMServerEntry, hwPMStatisticsTaskIndicateLowValue=hwPMStatisticsTaskIndicateLowValue, hwPMFileUploadFileList=hwPMFileUploadFileList, hwPMIndicatorName=hwPMIndicatorName, hwPMIndicatorEntry=hwPMIndicatorEntry, hwPMFileUploadServerName=hwPMFileUploadServerName, hwPMStatisticsRecordFileEnable=hwPMStatisticsRecordFileEnable, hwPMHistoryDataInstanceType=hwPMHistoryDataInstanceType, hwPMDataInstances=hwPMDataInstances, hwPMStatisticsTaskInstanceName=hwPMStatisticsTaskInstanceName, hwPMResetCurrentDataInstanceType=hwPMResetCurrentDataInstanceType, hwPMServerRowStatus=hwPMServerRowStatus, hwPMCurrentDateAndTime=hwPMCurrentDateAndTime, hwPMStatisticsTaskCurrentFileIndex=hwPMStatisticsTaskCurrentFileIndex, hwPMHistoryDataInstanceName=hwPMHistoryDataInstanceName, hwPMGroup=hwPMGroup, hwPMStatisticsTaskEntry=hwPMStatisticsTaskEntry, hwPMStatisticsTaskThresholdHighClearedValue=hwPMStatisticsTaskThresholdHighClearedValue, hwPMFileUploadCfgEntry=hwPMFileUploadCfgEntry, hwPMIntervalTypeTable=hwPMIntervalTypeTable, hwPMServerPort=hwPMServerPort, hwPMIntervalTypeInterval=hwPMIntervalTypeInterval, hwPMStatisticsTaskName=hwPMStatisticsTaskName, hwPMIndicatorTable=hwPMIndicatorTable, hwPMServerVpnType=hwPMServerVpnType, hwPMFileUploadCfgTable=hwPMFileUploadCfgTable, hwPMInstanceTypeGroup=hwPMInstanceTypeGroup, hwPMServerSrcIfName=hwPMServerSrcIfName, hwPMResetCurrentDataInstanceName=hwPMResetCurrentDataInstanceName, hwPMDataInstanceGroup=hwPMDataInstanceGroup, hwPMIntervalTypeEntry=hwPMIntervalTypeEntry, hwPMStatisticsUploadAutoName=hwPMStatisticsUploadAutoName, hwPMIndicatorCounterType=hwPMIndicatorCounterType, hwPMStatisticsTaskSampleInterval=hwPMStatisticsTaskSampleInterval, hwPMServerDestPath=hwPMServerDestPath, hwPMServerVpnName=hwPMServerVpnName, hwPMFileUploadMgmtEntry=hwPMFileUploadMgmtEntry, hwPMIntervalType=hwPMIntervalType, hwPMMeasureExceed=hwPMMeasureExceed, hwPMStatisticsTaskFileTable=hwPMStatisticsTaskFileTable, hwPMCurrentDataEntry=hwPMCurrentDataEntry, hwPMCurrentDataValidFlag=hwPMCurrentDataValidFlag, hwPMTaskFileGroup=hwPMTaskFileGroup, hwPMInstanceTypeTable=hwPMInstanceTypeTable)
