#
# PySNMP MIB module ALVARION-DEVICE-WIRELESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-DEVICE-WIRELESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
coDevDisIndex, = mibBuilder.importSymbols("ALVARION-DEVICE-MIB", "coDevDisIndex")
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionNotificationEnable, AlvarionRadioType, AlvarionSSIDOrNone = mibBuilder.importSymbols("ALVARION-TC", "AlvarionNotificationEnable", "AlvarionRadioType", "AlvarionSSIDOrNone")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, Counter64, Counter32, TimeTicks, ModuleIdentity, NotificationType, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, ObjectIdentity, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "Counter32", "TimeTicks", "ModuleIdentity", "NotificationType", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "ObjectIdentity", "Bits", "IpAddress")
MacAddress, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention", "TruthValue")
alvarionDeviceWirelessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25))
if mibBuilder.loadTexts: alvarionDeviceWirelessMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionDeviceWirelessMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionDeviceWirelessMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionDeviceWirelessMIB.setDescription('Alvarion Device Wireless MIB.')
alvarionDeviceWirelessMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1))
coDeviceWirelessConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 1))
coDeviceWirelessIfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2))
coDeviceWirelessIfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3))
coDeviceWirelessIfQosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 4))
coDeviceWirelessVscStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5))
coDeviceWirelessVscStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6))
coDeviceWirelessClientStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7))
coDeviceWirelessClientStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8))
coDeviceWirelessClientRatesGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9))
coDeviceWirelessDetectedAPGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13))
coDevWirSNRLevelNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 1, 1), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirSNRLevelNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDevWirSNRLevelNotificationEnabled.setDescription('This attribute, when true, enables the generation of SNR level notifications.')
coDevWirSNRLevelNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirSNRLevelNotificationInterval.setStatus('current')
if mibBuilder.loadTexts: coDevWirSNRLevelNotificationInterval.setDescription('Specifies the interval in minutes between SNR level notifications.')
coDevWirMinimumSNRLevel = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirMinimumSNRLevel.setStatus('current')
if mibBuilder.loadTexts: coDevWirMinimumSNRLevel.setDescription('A SNR level notification is generated each time the average SNR for all wireless stations connected to a VSC drops below this value.')
coDevWirAssociationNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 1, 4), AlvarionNotificationEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirAssociationNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDevWirAssociationNotificationEnabled.setDescription('Specifies if an association notification is generated when a new wireless client station associates with any VSC.')
coDeviceWirelessInterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatusTable.setDescription('Device wireless interface status attributes.')
coDeviceWirelessInterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioIndex"))
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatusEntry.setDescription('An entry in the coDeviceWirelessInterfaceStatusTable. coDevDisIndex - Uniquely identifies a device in the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device.')
coDevWirIfStaRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevWirIfStaRadioIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaRadioIndex.setDescription('Specifies the index of a radio on the device.')
coDevWirIfStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaIfIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaIfIndex.setDescription('Link to coDevIfStaIfIndex.')
coDevWirIfStaOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("station", 1), ("apAndWds", 2), ("apOnly", 3), ("wdsOnly", 4), ("monitor", 5), ("sensor", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaOperatingMode.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaOperatingMode.setDescription('The current operating mode used by the radio.')
coDevWirIfStaTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaTransmitPower.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaTransmitPower.setDescription('Identifies the transmission power of the radio.')
coDevWirIfStaOperatingChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 199))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaOperatingChannel.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaOperatingChannel.setDescription('Identifies the current operating channel of the radio.')
coDevWirIfStaRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11b", 2), ("ieee802dot11g", 3), ("ieee802dot11bAndg", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaRadioMode.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaRadioMode.setDescription('Identifies the current operating phy type of the radio.')
coDevWirIfStaRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 7), AlvarionRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaRadioType.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaRadioType.setDescription('Identifies the wireless device inside the Alvarion product.')
coDevWirIfStaRadioOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaRadioOperState.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaRadioOperState.setDescription('When True indicates that the radio is enabled.')
coDevWirIfStaNumberOfClient = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaNumberOfClient.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaNumberOfClient.setDescription('Identifies the number of associated wireless clients.')
coDevWirIfStaAutoChannelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaAutoChannelEnabled.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaAutoChannelEnabled.setDescription('When True indicates that the Auto Channel option is enabled.')
coDevWirIfStaAutoChannelInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaAutoChannelInterval.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaAutoChannelInterval.setDescription('Time interval, in minutes, between auto rescanning of channels. Maximum is 1440 minutes (24 hours). A value of zero disables automatic rescanning of channels which means that the radio will automatically select a channel when the interface intializes and use that channel as long as the interface is operational.')
coDevWirIfStaAutoPowerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaAutoPowerEnabled.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaAutoPowerEnabled.setDescription('When True indicates that the Auto Power option is enabled.')
coDevWirIfStaAutoPowerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStaAutoPowerInterval.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaAutoPowerInterval.setDescription('Identifies the time interval, in minutes, between auto rescanning of channels. Maximum is 1440 minutes (24 hours).')
coDevWirIfStaResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirIfStaResetStats.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStaResetStats.setDescription("Reset the wireless interface statistics. Reading this object will always return 'idle'.")
coDeviceWirelessInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1), )
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatsTable.setDescription('Device wireless interface statistics attributes.')
coDeviceWirelessInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1), )
coDeviceWirelessInterfaceStatusEntry.registerAugmentions(("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessInterfaceStatsEntry"))
coDeviceWirelessInterfaceStatsEntry.setIndexNames(*coDeviceWirelessInterfaceStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessInterfaceStatsEntry.setDescription('An entry in the coDeviceWirelessInterfaceStatsTable. coDevDisIndex - Uniquely identifies a device in the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device.')
coDevWirIfStsTransmittedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsTransmittedFragmentCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsTransmittedFragmentCount.setDescription('This counter is incremented for each acknowledged MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field of type Data or Management.')
coDevWirIfStsMulticastTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsMulticastTransmittedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsMulticastTransmittedFrameCount.setDescription('This counter is incremented only when the multicast bit is set in the destination MAC address of a successfully transmitted MSDU. When operating as a STA in an ESS, where these frames are directed to the AP, this implies having received an acknowledgment to all associated MPDUs.')
coDevWirIfStsFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsFailedCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsFailedCount.setDescription('This counter is incremented when an MSDU is not transmitted successfully due to the number of transmit attempts exceeding either coDot11ShortRetryLimit or coDot11LongRetryLimit.')
coDevWirIfStsRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 4), Counter32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsRetryCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsRetryCount.setDescription('This counter is incremented when an MSDU is successfully transmitted after one or more retransmissions.')
coDevWirIfStsMultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsMultipleRetryCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsMultipleRetryCount.setDescription('This counter is incremented when an MSDU is successfully transmitted after more than one retransmission.')
coDevWirIfStsFrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsFrameDuplicateCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsFrameDuplicateCount.setDescription('This counter is incremented when a frame is received and the Sequence Control field indicates that it is a duplicate.')
coDevWirIfStsRTSSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsRTSSuccessCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsRTSSuccessCount.setDescription('This counter is incremented when a CTS is received in response to an RTS.')
coDevWirIfStsRTSFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsRTSFailureCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsRTSFailureCount.setDescription('This counter is incremented when a CTS is not received in response to an RTS.')
coDevWirIfStsACKFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsACKFailureCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsACKFailureCount.setDescription('This counter is incremented when an ACK is not received when expected.')
coDevWirIfStsReceivedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsReceivedFragmentCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsReceivedFragmentCount.setDescription('This counter is incremented for each successfully received MPDU of type Data or Management.')
coDevWirIfStsMulticastReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsMulticastReceivedFrameCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsMulticastReceivedFrameCount.setDescription('This counter is incremented when a MSDU is received with the multicast bit set in the destination MAC address.')
coDevWirIfStsFCSErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirIfStsFCSErrorCount.setStatus('current')
if mibBuilder.loadTexts: coDevWirIfStsFCSErrorCount.setDescription('This counter is incremented when an FCS error is detected in a received MPDU.')
coDeviceWirelessVscStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1), )
if mibBuilder.loadTexts: coDeviceWirelessVscStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessVscStatusTable.setDescription('Device Virtual Service Communities status attributes.')
coDeviceWirelessVscStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaVscIndex"))
if mibBuilder.loadTexts: coDeviceWirelessVscStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessVscStatusEntry.setDescription('An entry in the coDeviceWirelessVscStatusTable. coDevDisIndex - Uniquely identifies a device in the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device. coDevWirVscStaVscIndex - Uniquely identifies a Virtual Service Community on the device configuration file.')
coDevWirVscStaVscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevWirVscStaVscIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaVscIndex.setDescription('Specifies the index of a Virtual Service Community in the device configuration file.')
coDevWirVscStaMscVscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaMscVscIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaMscVscIndex.setDescription('Link to the Virtual Service Community in the device configuration file (coVscCfgIndex).')
coDevWirVscStaBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaBSSID.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaBSSID.setDescription('MAC Address assigned to the Virtual Service Community running on the specified radio.')
coDevWirVscStaDefaultVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaDefaultVLAN.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaDefaultVLAN.setDescription('VLAN ID assigned to a station after a successfull 802.11 association.')
coDevWirVscStaMaximumNumberOfUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaMaximumNumberOfUsers.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaMaximumNumberOfUsers.setDescription('Maximum number of wireless client stations that can use the VSC on a specific radio.')
coDevWirVscStaCurrentNumberOfUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaCurrentNumberOfUsers.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaCurrentNumberOfUsers.setDescription('Indicates the number of wireless client stations connected via this VSC.')
coDevWirVscStaAverageSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStaAverageSNR.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaAverageSNR.setDescription('Average SNR level for the users connected to this VSC.')
coDevWirVscStaResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirVscStaResetStats.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStaResetStats.setDescription("Reset the Virtual Service Communities statistics. Read ing this object will always return 'idle'.")
coDeviceWirelessVscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1), )
if mibBuilder.loadTexts: coDeviceWirelessVscStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessVscStatsTable.setDescription('Device Virtual Service Communities statistical attributes.')
coDeviceWirelessVscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1), )
coDeviceWirelessVscStatusEntry.registerAugmentions(("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessVscStatsEntry"))
coDeviceWirelessVscStatsEntry.setIndexNames(*coDeviceWirelessVscStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceWirelessVscStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessVscStatsEntry.setDescription('An entry in the coDeviceWirelessVscStatsTable. coDevDisIndex - Uniquely identifies a device in the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device. coDevWirVscStaVscIndex - Uniquely identifies a Virtual Service Community in the device configuration file.')
coDevWirVscStsTxSecurityFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsTxSecurityFilter.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsTxSecurityFilter.setDescription('Number of outgoing packets dropped by the wireless security filters.')
coDevWirVscStsRxSecurityFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsRxSecurityFilter.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsRxSecurityFilter.setDescription('Number of incoming packets dropped by the wireless security filters.')
coDevWirVscStsWEPICVError = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsWEPICVError.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsWEPICVError.setDescription('This counter increments when a frame is received with the WEP subfield of the Frame Control field set to one and the value of the ICV as received in the frame does not match the ICV value that is calculated for the contents of the received frame.')
coDevWirVscStsWEPExcluded = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsWEPExcluded.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsWEPExcluded.setDescription('This counter increments when a frame is received with the WEP subfield of the Frame Control field set to zero.')
coDevWirVscStsTKIPICVError = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsTKIPICVError.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsTKIPICVError.setDescription('Number of incoming packets with TKIP ICV errors.')
coDevWirVscStsTKIPMICError = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsTKIPMICError.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsTKIPMICError.setDescription('Number of incoming packets with TKIP MIC errors.')
coDevWirVscStsTKIPCounterMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsTKIPCounterMeasure.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsTKIPCounterMeasure.setDescription('Number of times the counter measure has been invoked.')
coDevWirVscStsTKIPReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsTKIPReplay.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsTKIPReplay.setDescription('Number of incoming packets with TKIP replays.')
coDevWirVscStsAESError = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsAESError.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsAESError.setDescription('Number of incoming AES packets that were undecryptable.')
coDevWirVscStsAESReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirVscStsAESReplay.setStatus('current')
if mibBuilder.loadTexts: coDevWirVscStsAESReplay.setDescription('Number of incoming packets with AES replays.')
coDeviceWirelessClientStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1), )
if mibBuilder.loadTexts: coDeviceWirelessClientStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatusTable.setDescription('Device Wireless client status attributes.')
coDeviceWirelessClientStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaIndex"))
if mibBuilder.loadTexts: coDeviceWirelessClientStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatusEntry.setDescription('An entry in the coDeviceWirelessClientStatusTable. coDevDisIndex - Uniquely identifies a device in the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device. coDevWirCliStaIndex - Uniquely identifies a wireless client using the specified radio on the device.')
coDevWirCliStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevWirCliStaIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaIndex.setDescription('Specifies the index of a wireless client using the specified radio in the device. The association ID is used for the index.')
coDevWirCliStaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaMACAddress.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaMACAddress.setDescription('Unique MAC Address assigned to the wireless device.')
coDevWirCliStaVscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaVscIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaVscIndex.setDescription('Index of the Virtual Service Community in the device configuration file (coDevWirVscStaVscIndex).')
coDevWirCliStaConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaConnectTime.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaConnectTime.setDescription('Elapsed time in seconds since a station has associated with this device.')
coDevWirCliStaSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 5), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaSignalLevel.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaSignalLevel.setDescription('Strength of the wireless signal.')
coDevWirCliStaNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 6), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaNoiseLevel.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaNoiseLevel.setDescription('Level of local background noise.')
coDevWirCliStaSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaSNR.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaSNR.setDescription('Relative strength of the signal level compared to the noise level.')
coDevWirCliStaVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaVLAN.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaVLAN.setDescription('VLAN ID of the associated station.')
coDevWirCliStaTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaTransmitRate.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaTransmitRate.setDescription('Current transmit rate of the associated station.')
coDevWirCliStaReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaReceiveRate.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaReceiveRate.setDescription('Current receive rate of the associated station.')
coDevWirCliStaTrafficAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaTrafficAuthorized.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaTrafficAuthorized.setDescription('Current receive rate of the associated station.')
coDevWirCliSta8021xAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliSta8021xAuthenticated.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliSta8021xAuthenticated.setDescription('Current receive rate of the associated station.')
coDevWirCliStaMACAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaMACAuthenticated.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaMACAuthenticated.setDescription('Current receive rate of the associated station.')
coDevWirCliStaMACFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaMACFiltered.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaMACFiltered.setDescription('Current receive rate of the associated station.')
coDevWirCliStaPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11b", 2), ("ieee802dot11g", 3), ("ieee802dot11bAndg", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaPhyType.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaPhyType.setDescription('Indicates the wireless mode used by the associated station.')
coDevWirCliStaWPAType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("wpaTkip", 2), ("wpa2Aes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaWPAType.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaWPAType.setDescription('Indicates the WPA/Encryption type used by the wireless station.')
coDevWirCliStaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaIpAddress.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaIpAddress.setDescription('Indicates the IP address of the wireless station.')
coDevWirCliStaPowerSavingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaPowerSavingMode.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaPowerSavingMode.setDescription('If true, indicates that the wireless station is in power saving mode.')
coDevWirCliStaWME = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaWME.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaWME.setDescription('true : the wireless station sends QOS data frames. false : the wireless station sends data frames.')
coDevWirCliStaPreviousAPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStaPreviousAPAddress.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaPreviousAPAddress.setDescription('Indicates the if the station roamed from this access point.')
coDevWirCliStaResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 7, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("resetStats", 1), ("resetRates", 2), ("resetAll", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDevWirCliStaResetStats.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStaResetStats.setDescription("Reset the wireless client statistics. Reading this object will always return 'idle'. resetStats: reset the client statistics, resetRates: reset the client statistics rates, resetAll: perform both operations.")
coDeviceWirelessClientStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1), )
if mibBuilder.loadTexts: coDeviceWirelessClientStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatsTable.setDescription('Device Wireless client statistical attributes.')
coDeviceWirelessClientStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1, 1), )
coDeviceWirelessClientStatusEntry.registerAugmentions(("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessClientStatsEntry"))
coDeviceWirelessClientStatsEntry.setIndexNames(*coDeviceWirelessClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceWirelessClientStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatsEntry.setDescription('An entry in the coDeviceWirelessClientStatsTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device. coDevWirCliStaIndex - Uniquely identifies a wireless client using the specified radio on the device.')
coDevWirCliStsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsInPkts.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsInPkts.setDescription('Number of packets received from the wireless station after it associated.')
coDevWirCliStsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsOutPkts.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsOutPkts.setDescription('Number of packets send to the wireless station after it associated.')
coDevWirCliStsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsInOctets.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsInOctets.setDescription('Number of octets received from the wireless station after it associated.')
coDevWirCliStsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 8, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsOutOctets.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsOutOctets.setDescription('Number of octets send to the wireless station after it associated.')
coDeviceWirelessClientStatsRatesTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1), )
if mibBuilder.loadTexts: coDeviceWirelessClientStatsRatesTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatsRatesTable.setDescription('Device Wireless client statistical rate attributes.')
coDeviceWirelessClientStatsRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1), )
coDeviceWirelessClientStatusEntry.registerAugmentions(("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessClientStatsRatesEntry"))
coDeviceWirelessClientStatsRatesEntry.setIndexNames(*coDeviceWirelessClientStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceWirelessClientStatsRatesEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessClientStatsRatesEntry.setDescription('An entry in the coDeviceWirelessClientStatsRatesTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller. coDevWirIfStaRadioIndex - Uniquely identifies a radio on the device. coDevWirCliStaIndex - Uniquely identifies a wireless client using the specified radio on the device.')
coDevWirCliStsPktsTxRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate1.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate1.setDescription('Number of frames transmitted at 1 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate2.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate2.setDescription('Number of frames transmitted at 2 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate5dot5.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate5dot5.setDescription('Number of frames transmitted at 5.5 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate11.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate11.setDescription('Number of frames transmitted at 11 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate6.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate6.setDescription('Number of frames transmitted at 6 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate9.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate9.setDescription('Number of frames transmitted at 9 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate12.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate12.setDescription('Number of frames transmitted at 12 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate18.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate18.setDescription('Number of frames transmitted at 18 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate24.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate24.setDescription('Number of frames transmitted at 24 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate36.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate36.setDescription('Number of frames transmitted at 36 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate48.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate48.setDescription('Number of frames transmitted at 48 Mbit/s since the station associated.')
coDevWirCliStsPktsTxRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate54.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsTxRate54.setDescription('Number of frames transmitted at 54 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate1.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate1.setDescription('Number of frames received at 1 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate2.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate2.setDescription('Number of frames received at 2 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate5dot5.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate5dot5.setDescription('Number of frames received at 5.5 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate11.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate11.setDescription('Number of frames received at 11 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate6.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate6.setDescription('Number of frames received at 6 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate9.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate9.setDescription('Number of frames received at 9 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate12.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate12.setDescription('Number of frames received at 12 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate18.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate18.setDescription('Number of frames received at 18 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate24.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate24.setDescription('Number of frames received at 24 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate36.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate36.setDescription('Number of frames received at 36 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate48.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate48.setDescription('Number of frames received at 48 Mbit/s since the station associated.')
coDevWirCliStsPktsRxRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 9, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate54.setStatus('current')
if mibBuilder.loadTexts: coDevWirCliStsPktsRxRate54.setDescription('Number of frames received at 54 Mbit/s since the station associated.')
coDeviceWirelessDetectedAPTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1), )
if mibBuilder.loadTexts: coDeviceWirelessDetectedAPTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessDetectedAPTable.setDescription('Device Wireless detected AP attributes.')
coDeviceWirelessDetectedAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApIndex"))
if mibBuilder.loadTexts: coDeviceWirelessDetectedAPEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessDetectedAPEntry.setDescription('An entry in the coDeviceWirelessDetectedAPTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller. coDevWirApIndex - Uniquely identifies an Access Point in the device detected AP table.')
coDevWirApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevWirApIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirApIndex.setDescription('The auxiliary variable used to identify instances of APs in the device detected AP table.')
coDevWirApBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApBSSID.setStatus('current')
if mibBuilder.loadTexts: coDevWirApBSSID.setDescription('The wireless MAC address of the remote device.')
coDevWirApRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApRadioIndex.setStatus('current')
if mibBuilder.loadTexts: coDevWirApRadioIndex.setDescription('Link to coDevWirIfStaRadioIndex.')
coDevWirApSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 4), AlvarionSSIDOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApSSID.setStatus('current')
if mibBuilder.loadTexts: coDevWirApSSID.setDescription('The Service Set ID broadcast by the remote device.')
coDevWirApChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApChannel.setStatus('current')
if mibBuilder.loadTexts: coDevWirApChannel.setDescription('The operating frequency channel of the remote device.')
coDevWirApSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 6), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApSignalLevel.setStatus('current')
if mibBuilder.loadTexts: coDevWirApSignalLevel.setDescription('Strength of the wireless signal.')
coDevWirApNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApNoiseLevel.setStatus('current')
if mibBuilder.loadTexts: coDevWirApNoiseLevel.setDescription('Level of local background noise.')
coDevWirApSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApSNR.setStatus('current')
if mibBuilder.loadTexts: coDevWirApSNR.setDescription('Relative strength of the signal level compared to the noise level.')
coDevWirApPHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11b", 2), ("ieee802dot11g", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApPHYType.setStatus('current')
if mibBuilder.loadTexts: coDevWirApPHYType.setDescription('Radio type used by the device.')
coDevWirApSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 1, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("wpa", 3), ("wpa2", 4), ("wpaAndWpa2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevWirApSecurity.setStatus('current')
if mibBuilder.loadTexts: coDevWirApSecurity.setDescription('Indicates the WPA/Encryption type used by the wireless station.')
alvarionDeviceWirelessMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 2))
alvarionDeviceWirelessMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 2, 0))
coDeviceWirelessSNRLevelNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 2, 0, 1)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaBSSID"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaMscVscIndex"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaAverageSNR"))
if mibBuilder.loadTexts: coDeviceWirelessSNRLevelNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessSNRLevelNotification.setDescription('The average SNR level for all the stations using this Virtual Service Community is below the threshlod.')
coDeviceWirelessAssociationNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 2, 0, 2)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaMACAddress"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaBSSID"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaMscVscIndex"))
if mibBuilder.loadTexts: coDeviceWirelessAssociationNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceWirelessAssociationNotification.setDescription('Sent when a new association is made with a Virtual Service Community.')
alvarionDeviceWirelessMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3))
alvarionDeviceWirelessMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 1))
alvarionDeviceWirelessMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2))
alvarionDeviceWirelessMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 1, 1)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessConfigMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessIfStatusMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessIfStatsMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceVscStatusMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceVscStatsMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessClientStatusMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessClientStatsMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessClientStatsRatesMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessDetectedAPMIBGroup"), ("ALVARION-DEVICE-WIRELESS-MIB", "alvarionDeviceWirelessNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessMIBCompliance = alvarionDeviceWirelessMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessMIBCompliance.setDescription('The compliance statement for the device Wireless MIB.')
alvarionDeviceWirelessConfigMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 1)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirSNRLevelNotificationEnabled"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirSNRLevelNotificationInterval"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirMinimumSNRLevel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirAssociationNotificationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessConfigMIBGroup = alvarionDeviceWirelessConfigMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessConfigMIBGroup.setDescription('A collection of objects for the device wireless notifications.')
alvarionDeviceWirelessIfStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 2)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaIfIndex"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaOperatingMode"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaTransmitPower"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaOperatingChannel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioMode"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioType"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaRadioOperState"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaNumberOfClient"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaAutoChannelEnabled"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaAutoChannelInterval"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaAutoPowerEnabled"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaAutoPowerInterval"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStaResetStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessIfStatusMIBGroup = alvarionDeviceWirelessIfStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessIfStatusMIBGroup.setDescription('A collection of objects for the wireless interface status.')
alvarionDeviceWirelessIfStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 3)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsTransmittedFragmentCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsMulticastTransmittedFrameCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsFailedCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsRetryCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsMultipleRetryCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsFrameDuplicateCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsRTSSuccessCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsRTSFailureCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsACKFailureCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsReceivedFragmentCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsMulticastReceivedFrameCount"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirIfStsFCSErrorCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessIfStatsMIBGroup = alvarionDeviceWirelessIfStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessIfStatsMIBGroup.setDescription('A collection of objects for the wireless interface statistics.')
alvarionDeviceVscStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 4)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaMscVscIndex"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaBSSID"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaDefaultVLAN"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaMaximumNumberOfUsers"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaCurrentNumberOfUsers"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaAverageSNR"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStaResetStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceVscStatusMIBGroup = alvarionDeviceVscStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceVscStatusMIBGroup.setDescription('A collection of objects for Virtual Service Communities status information.')
alvarionDeviceVscStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 5)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsTxSecurityFilter"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsRxSecurityFilter"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsWEPICVError"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsWEPExcluded"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsTKIPICVError"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsTKIPMICError"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsTKIPCounterMeasure"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsTKIPReplay"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsAESError"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirVscStsAESReplay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceVscStatsMIBGroup = alvarionDeviceVscStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceVscStatsMIBGroup.setDescription('A collection of objects for Virtual Service Communities statistical information.')
alvarionDeviceWirelessClientStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 6)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaMACAddress"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaVscIndex"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaConnectTime"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaSignalLevel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaNoiseLevel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaSNR"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaVLAN"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaTransmitRate"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaReceiveRate"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaTrafficAuthorized"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliSta8021xAuthenticated"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaMACAuthenticated"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaMACFiltered"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaPhyType"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaWPAType"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaIpAddress"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaPowerSavingMode"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaWME"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaPreviousAPAddress"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStaResetStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessClientStatusMIBGroup = alvarionDeviceWirelessClientStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessClientStatusMIBGroup.setDescription('A collection of objects for wireless client status information.')
alvarionDeviceWirelessClientStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 7)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsInPkts"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsOutPkts"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsInOctets"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessClientStatsMIBGroup = alvarionDeviceWirelessClientStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessClientStatsMIBGroup.setDescription('A collection of objects for wireless client statistical information.')
alvarionDeviceWirelessClientStatsRatesMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 8)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate1"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate2"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate5dot5"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate11"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate6"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate9"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate12"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate18"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate24"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate36"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate48"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsTxRate54"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate1"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate2"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate5dot5"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate11"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate6"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate9"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate12"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate18"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate24"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate36"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate48"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirCliStsPktsRxRate54"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessClientStatsRatesMIBGroup = alvarionDeviceWirelessClientStatsRatesMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessClientStatsRatesMIBGroup.setDescription('A collection of objects for wireless client statistical rates information.')
alvarionDeviceWirelessDetectedAPMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 9)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApBSSID"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApRadioIndex"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApSSID"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApChannel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApSignalLevel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApNoiseLevel"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApSNR"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApPHYType"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDevWirApSecurity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessDetectedAPMIBGroup = alvarionDeviceWirelessDetectedAPMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessDetectedAPMIBGroup.setDescription('A collection of objects for detected AP information.')
alvarionDeviceWirelessNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 25, 3, 2, 10)).setObjects(("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessSNRLevelNotification"), ("ALVARION-DEVICE-WIRELESS-MIB", "coDeviceWirelessAssociationNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceWirelessNotificationGroup = alvarionDeviceWirelessNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceWirelessNotificationGroup.setDescription('A collection of supported wireless notifications.')
mibBuilder.exportSymbols("ALVARION-DEVICE-WIRELESS-MIB", coDevWirCliStsPktsRxRate6=coDevWirCliStsPktsRxRate6, coDevWirMinimumSNRLevel=coDevWirMinimumSNRLevel, coDevWirCliStsPktsTxRate5dot5=coDevWirCliStsPktsTxRate5dot5, coDevWirCliStaReceiveRate=coDevWirCliStaReceiveRate, coDevWirCliStsPktsRxRate9=coDevWirCliStsPktsRxRate9, coDevWirApNoiseLevel=coDevWirApNoiseLevel, coDevWirCliStaTransmitRate=coDevWirCliStaTransmitRate, coDevWirApBSSID=coDevWirApBSSID, coDevWirCliStsPktsTxRate11=coDevWirCliStsPktsTxRate11, coDeviceWirelessIfStatsGroup=coDeviceWirelessIfStatsGroup, coDevWirIfStaNumberOfClient=coDevWirIfStaNumberOfClient, coDevWirIfStaRadioOperState=coDevWirIfStaRadioOperState, coDevWirApSignalLevel=coDevWirApSignalLevel, coDeviceWirelessDetectedAPEntry=coDeviceWirelessDetectedAPEntry, coDeviceWirelessInterfaceStatsEntry=coDeviceWirelessInterfaceStatsEntry, coDevWirSNRLevelNotificationInterval=coDevWirSNRLevelNotificationInterval, coDevWirCliStsPktsTxRate6=coDevWirCliStsPktsTxRate6, alvarionDeviceWirelessMIBCompliances=alvarionDeviceWirelessMIBCompliances, coDevWirCliStaPhyType=coDevWirCliStaPhyType, coDevWirIfStsMultipleRetryCount=coDevWirIfStsMultipleRetryCount, coDevWirCliStsPktsTxRate54=coDevWirCliStsPktsTxRate54, coDevWirIfStsFCSErrorCount=coDevWirIfStsFCSErrorCount, coDeviceWirelessVscStatusEntry=coDeviceWirelessVscStatusEntry, coDevWirCliStaMACFiltered=coDevWirCliStaMACFiltered, coDevWirVscStsAESError=coDevWirVscStsAESError, coDevWirVscStsAESReplay=coDevWirVscStsAESReplay, coDevWirVscStsTKIPCounterMeasure=coDevWirVscStsTKIPCounterMeasure, coDevWirCliStaResetStats=coDevWirCliStaResetStats, coDeviceWirelessVscStatsTable=coDeviceWirelessVscStatsTable, coDeviceWirelessClientStatsEntry=coDeviceWirelessClientStatsEntry, coDevWirIfStaAutoPowerInterval=coDevWirIfStaAutoPowerInterval, coDevWirIfStsMulticastReceivedFrameCount=coDevWirIfStsMulticastReceivedFrameCount, coDevWirIfStsFailedCount=coDevWirIfStsFailedCount, coDevWirCliStaNoiseLevel=coDevWirCliStaNoiseLevel, alvarionDeviceWirelessMIBObjects=alvarionDeviceWirelessMIBObjects, coDevWirCliStsPktsRxRate2=coDevWirCliStsPktsRxRate2, coDevWirCliStsPktsRxRate11=coDevWirCliStsPktsRxRate11, coDevWirIfStsRTSSuccessCount=coDevWirIfStsRTSSuccessCount, coDevWirIfStaAutoChannelInterval=coDevWirIfStaAutoChannelInterval, coDevWirIfStsFrameDuplicateCount=coDevWirIfStsFrameDuplicateCount, coDevWirVscStaMaximumNumberOfUsers=coDevWirVscStaMaximumNumberOfUsers, coDevWirCliStsPktsTxRate24=coDevWirCliStsPktsTxRate24, coDevWirCliStaSignalLevel=coDevWirCliStaSignalLevel, coDevWirCliStaWPAType=coDevWirCliStaWPAType, coDevWirCliStsPktsRxRate54=coDevWirCliStsPktsRxRate54, coDeviceWirelessClientStatusEntry=coDeviceWirelessClientStatusEntry, coDevWirIfStaRadioMode=coDevWirIfStaRadioMode, coDevWirIfStaOperatingChannel=coDevWirIfStaOperatingChannel, alvarionDeviceWirelessMIBGroups=alvarionDeviceWirelessMIBGroups, coDevWirIfStsACKFailureCount=coDevWirIfStsACKFailureCount, coDevWirIfStaResetStats=coDevWirIfStaResetStats, alvarionDeviceWirelessConfigMIBGroup=alvarionDeviceWirelessConfigMIBGroup, coDevWirCliStsPktsTxRate36=coDevWirCliStsPktsTxRate36, coDevWirCliStsPktsRxRate5dot5=coDevWirCliStsPktsRxRate5dot5, coDeviceWirelessInterfaceStatusEntry=coDeviceWirelessInterfaceStatusEntry, coDevWirIfStaIfIndex=coDevWirIfStaIfIndex, coDevWirCliStsOutOctets=coDevWirCliStsOutOctets, coDevWirCliStaSNR=coDevWirCliStaSNR, coDevWirIfStsRTSFailureCount=coDevWirIfStsRTSFailureCount, coDevWirCliStsPktsTxRate9=coDevWirCliStsPktsTxRate9, coDevWirApPHYType=coDevWirApPHYType, coDevWirCliStsPktsTxRate2=coDevWirCliStsPktsTxRate2, coDevWirIfStaAutoChannelEnabled=coDevWirIfStaAutoChannelEnabled, coDevWirIfStsRetryCount=coDevWirIfStsRetryCount, coDevWirCliStaPowerSavingMode=coDevWirCliStaPowerSavingMode, coDeviceWirelessConfigGroup=coDeviceWirelessConfigGroup, coDeviceWirelessSNRLevelNotification=coDeviceWirelessSNRLevelNotification, coDevWirCliStaIpAddress=coDevWirCliStaIpAddress, coDevWirVscStaResetStats=coDevWirVscStaResetStats, coDevWirIfStsTransmittedFragmentCount=coDevWirIfStsTransmittedFragmentCount, coDeviceWirelessClientStatsGroup=coDeviceWirelessClientStatsGroup, coDevWirApRadioIndex=coDevWirApRadioIndex, alvarionDeviceWirelessIfStatusMIBGroup=alvarionDeviceWirelessIfStatusMIBGroup, coDeviceWirelessVscStatsEntry=coDeviceWirelessVscStatsEntry, coDevWirVscStsWEPExcluded=coDevWirVscStsWEPExcluded, coDevWirIfStaOperatingMode=coDevWirIfStaOperatingMode, coDeviceWirelessClientStatusGroup=coDeviceWirelessClientStatusGroup, coDeviceWirelessInterfaceStatusTable=coDeviceWirelessInterfaceStatusTable, coDevWirCliStsPktsTxRate1=coDevWirCliStsPktsTxRate1, coDevWirApSSID=coDevWirApSSID, coDevWirCliSta8021xAuthenticated=coDevWirCliSta8021xAuthenticated, coDevWirVscStaMscVscIndex=coDevWirVscStaMscVscIndex, coDevWirCliStaVscIndex=coDevWirCliStaVscIndex, coDevWirVscStsRxSecurityFilter=coDevWirVscStsRxSecurityFilter, coDevWirIfStsMulticastTransmittedFrameCount=coDevWirIfStsMulticastTransmittedFrameCount, coDeviceWirelessIfQosGroup=coDeviceWirelessIfQosGroup, coDevWirVscStsTxSecurityFilter=coDevWirVscStsTxSecurityFilter, coDevWirCliStaPreviousAPAddress=coDevWirCliStaPreviousAPAddress, alvarionDeviceVscStatusMIBGroup=alvarionDeviceVscStatusMIBGroup, coDevWirVscStsTKIPMICError=coDevWirVscStsTKIPMICError, coDevWirApSecurity=coDevWirApSecurity, coDeviceWirelessInterfaceStatsTable=coDeviceWirelessInterfaceStatsTable, coDevWirCliStsPktsRxRate24=coDevWirCliStsPktsRxRate24, coDeviceWirelessDetectedAPGroup=coDeviceWirelessDetectedAPGroup, coDevWirVscStaAverageSNR=coDevWirVscStaAverageSNR, alvarionDeviceWirelessClientStatsMIBGroup=alvarionDeviceWirelessClientStatsMIBGroup, coDevWirVscStsTKIPReplay=coDevWirVscStsTKIPReplay, coDeviceWirelessClientStatsRatesTable=coDeviceWirelessClientStatsRatesTable, coDevWirCliStsPktsRxRate36=coDevWirCliStsPktsRxRate36, coDevWirCliStaConnectTime=coDevWirCliStaConnectTime, coDevWirCliStsPktsRxRate18=coDevWirCliStsPktsRxRate18, alvarionDeviceWirelessMIB=alvarionDeviceWirelessMIB, alvarionDeviceWirelessClientStatusMIBGroup=alvarionDeviceWirelessClientStatusMIBGroup, coDevWirCliStsPktsRxRate1=coDevWirCliStsPktsRxRate1, coDeviceWirelessVscStatsGroup=coDeviceWirelessVscStatsGroup, coDevWirCliStaIndex=coDevWirCliStaIndex, coDevWirCliStaWME=coDevWirCliStaWME, alvarionDeviceWirelessMIBNotifications=alvarionDeviceWirelessMIBNotifications, coDevWirApChannel=coDevWirApChannel, coDevWirSNRLevelNotificationEnabled=coDevWirSNRLevelNotificationEnabled, coDevWirApIndex=coDevWirApIndex, alvarionDeviceWirelessMIBNotificationPrefix=alvarionDeviceWirelessMIBNotificationPrefix, coDevWirCliStaMACAuthenticated=coDevWirCliStaMACAuthenticated, coDevWirVscStaBSSID=coDevWirVscStaBSSID, coDevWirVscStaDefaultVLAN=coDevWirVscStaDefaultVLAN, coDevWirIfStsReceivedFragmentCount=coDevWirIfStsReceivedFragmentCount, coDevWirVscStsWEPICVError=coDevWirVscStsWEPICVError, coDeviceWirelessClientStatsRatesEntry=coDeviceWirelessClientStatsRatesEntry, alvarionDeviceWirelessClientStatsRatesMIBGroup=alvarionDeviceWirelessClientStatsRatesMIBGroup, coDevWirCliStsInOctets=coDevWirCliStsInOctets, coDevWirCliStsPktsRxRate48=coDevWirCliStsPktsRxRate48, alvarionDeviceWirelessMIBConformance=alvarionDeviceWirelessMIBConformance, coDevWirCliStsOutPkts=coDevWirCliStsOutPkts, coDeviceWirelessIfStatusGroup=coDeviceWirelessIfStatusGroup, coDeviceWirelessVscStatusGroup=coDeviceWirelessVscStatusGroup, alvarionDeviceWirelessIfStatsMIBGroup=alvarionDeviceWirelessIfStatsMIBGroup, coDevWirIfStaAutoPowerEnabled=coDevWirIfStaAutoPowerEnabled, coDeviceWirelessDetectedAPTable=coDeviceWirelessDetectedAPTable, alvarionDeviceWirelessNotificationGroup=alvarionDeviceWirelessNotificationGroup, coDevWirIfStaRadioType=coDevWirIfStaRadioType, PYSNMP_MODULE_ID=alvarionDeviceWirelessMIB, coDevWirVscStaVscIndex=coDevWirVscStaVscIndex, coDevWirCliStsInPkts=coDevWirCliStsInPkts, coDevWirCliStsPktsTxRate18=coDevWirCliStsPktsTxRate18, coDevWirCliStaVLAN=coDevWirCliStaVLAN, coDeviceWirelessClientRatesGroup=coDeviceWirelessClientRatesGroup, coDeviceWirelessClientStatusTable=coDeviceWirelessClientStatusTable, coDeviceWirelessClientStatsTable=coDeviceWirelessClientStatsTable, coDevWirIfStaRadioIndex=coDevWirIfStaRadioIndex, coDevWirVscStaCurrentNumberOfUsers=coDevWirVscStaCurrentNumberOfUsers, coDevWirVscStsTKIPICVError=coDevWirVscStsTKIPICVError, coDevWirCliStaTrafficAuthorized=coDevWirCliStaTrafficAuthorized, coDeviceWirelessAssociationNotification=coDeviceWirelessAssociationNotification, coDevWirAssociationNotificationEnabled=coDevWirAssociationNotificationEnabled, coDeviceWirelessVscStatusTable=coDeviceWirelessVscStatusTable, coDevWirCliStaMACAddress=coDevWirCliStaMACAddress, coDevWirApSNR=coDevWirApSNR, alvarionDeviceWirelessMIBCompliance=alvarionDeviceWirelessMIBCompliance, alvarionDeviceWirelessDetectedAPMIBGroup=alvarionDeviceWirelessDetectedAPMIBGroup, alvarionDeviceVscStatsMIBGroup=alvarionDeviceVscStatsMIBGroup, coDevWirCliStsPktsTxRate12=coDevWirCliStsPktsTxRate12, coDevWirCliStsPktsRxRate12=coDevWirCliStsPktsRxRate12, coDevWirCliStsPktsTxRate48=coDevWirCliStsPktsTxRate48, coDevWirIfStaTransmitPower=coDevWirIfStaTransmitPower)
