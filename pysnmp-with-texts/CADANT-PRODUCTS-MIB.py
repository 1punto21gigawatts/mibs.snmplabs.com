#
# PySNMP MIB module CADANT-PRODUCTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-PRODUCTS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:44:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, IpAddress, Counter32, ModuleIdentity, ObjectIdentity, MibIdentifier, NotificationType, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "IpAddress", "Counter32", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "NotificationType", "Integer32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cadant = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998))
cadant.setRevisions(('2014-06-25 00:00', '2010-04-06 00:00', '2007-06-04 00:00', '2003-06-30 00:00', '2002-12-10 00:00', '2002-06-26 00:00', '2002-05-07 00:00', '2002-02-01 00:00', '2000-11-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cadant.setRevisionsDescriptions(('Added cadLicense.', 'Added cadCmtsIpVideo.', 'Added cadTopology.', 'Added G2 IMS.', 'Added IKE.', 'Added AAA support.', 'Added cadPolicy.', 'Added c4ccmts.', 'Initial version. Added c4cmts.',))
if mibBuilder.loadTexts: cadant.setLastUpdated('201406250000Z')
if mibBuilder.loadTexts: cadant.setOrganization('Arris International')
if mibBuilder.loadTexts: cadant.setContactInfo('support@arrisi.com')
if mibBuilder.loadTexts: cadant.setDescription('The object identifiers of Cadant products.')
cadObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1))
cadProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2))
cadCable = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1))
cadSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5))
cadNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6))
cadEquipment = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10))
cadSpectrum = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15))
cadLayer2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20))
cadLayer3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25))
cadSubscriber = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 30))
cadPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35))
cadAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 40))
cadIke = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 45))
cadSchema = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 50))
cadCmRemoteQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55))
cadExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100))
cadTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 105))
cadCmtsIf3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 110))
cadL2vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 120))
cadCmtsIpVideo = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125))
cadMpls = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130))
cadLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 135))
cadNms = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 2))
c4cmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 1))
c4ccmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 2))
g2ims = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 3))
mibBuilder.exportSymbols("CADANT-PRODUCTS-MIB", cadSubscriber=cadSubscriber, cadObjects=cadObjects, cadCmRemoteQuery=cadCmRemoteQuery, cadExperimental=cadExperimental, cadLayer3=cadLayer3, cadant=cadant, cadTopology=cadTopology, cadProducts=cadProducts, cadPolicy=cadPolicy, g2ims=g2ims, PYSNMP_MODULE_ID=cadant, cadIke=cadIke, cadCmtsIf3=cadCmtsIf3, cadNms=cadNms, cadSchema=cadSchema, cadLicense=cadLicense, cadLayer2=cadLayer2, cadL2vpn=cadL2vpn, cadCable=cadCable, cadAuthentication=cadAuthentication, cadSpectrum=cadSpectrum, c4cmts=c4cmts, cadEquipment=cadEquipment, cadSystem=cadSystem, cadNotification=cadNotification, cadCmtsIpVideo=cadCmtsIpVideo, c4ccmts=c4ccmts, cadMpls=cadMpls)
