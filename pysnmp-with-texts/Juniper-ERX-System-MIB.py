#
# PySNMP MIB module Juniper-ERX-System-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-ERX-System-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:02:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniEnable, = mibBuilder.importSymbols("Juniper-TC", "JuniEnable")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Unsigned32, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, IpAddress, MibIdentifier, Counter64, ObjectIdentity, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "IpAddress", "MibIdentifier", "Counter64", "ObjectIdentity", "Bits", "Integer32")
TextualConvention, TruthValue, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DateAndTime", "DisplayString")
juniERXSysMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17))
juniERXSysMIB.setRevisions(('2003-11-24 21:01', '2003-11-24 14:26', '2003-11-18 22:06', '2002-10-14 17:40', '2002-04-12 20:57', '2001-05-21 19:27', '2001-05-15 18:27', '2000-04-25 18:44', '2000-01-20 00:00', '1999-02-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniERXSysMIB.setRevisionsDescriptions(('Added Hybrid Line Modules and Hybrid IOA modules. Added GE2 Line Module and GE2 IOA module. ', 'Replaced Unisphere names with Juniper names.', 'Deprecated this MIB in favor of the generic E-series system MIB, Juniper-System-MIB. Added a general trap control object. Added new line card types: vts, oc48, ut3Atm4.', 'Added new line card types: X.21/V.35, Ut3f12, Ue3f12, Cocx-F3.', 'Modified the following objects: juniERXSysTempFanStatus juniERXSysTempStatus Added the following objects: juniERXSysTempProtectionStatus juniERXSysTempProtectionHoldOffTime juniERXSysTempProtectionHoldOffTimeRemaining Added the following notification: juniERXSysTempProtectionStatusChange ', 'Added the following objects: juniERXSysMemUtilPct juniERXSysMemCapacity juniERXSysHighMemUtilThreshold juniERXSysAbatedMemUtilThreshold juniERXSysMemUtilTrapEnable Added the following notifications: juniERXSysHighMemUtil juniERXSysAbatedMemUtil ', 'Added support for system timing parameters. Added juniERXSysSlotDescr to juniERXSysSlotOperStatusChange trap.', 'Added board serial number, assembly number and assembly revision.', 'Added OC-12 card and Dual FE card support. Added redundancy/reversion and boot record configuration support.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniERXSysMIB.setLastUpdated('200311242101Z')
if mibBuilder.loadTexts: juniERXSysMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniERXSysMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniERXSysMIB.setDescription('Deprecated MIB objects for managing ERX Edge Router system elements. See the generic E-series system MIB (Juniper-System-MIB) for the preferred definitions. If both MIBs are supported, using the corresponding varbinds from both MIBs to set the same object in a single PDU is not supported.')
class JuniTimingSelector(TextualConvention, Integer32):
    description = 'The system timing selector. A value of 1 corresponds to the primary timing selector. A value of 2 corresponds to the secondary timing selector. A value of 3 corresponds to the tertiary timing selector. A value of 4 indicates an error with the timing selector.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4)

class JuniTimingSourceType(TextualConvention, Integer32):
    description = 'The set of selectable timing source types. The timing source type determines the timing source parameters.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("timingInterfaceIfIndex", 1), ("timingInternal", 2), ("timingLine", 3))

class JuniTimingSourceLineType(TextualConvention, Integer32):
    description = 'The set of choices for line type timing.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("timingSourceLineUndefined", 0), ("timingSourceLineE1PortA", 1), ("timingSourceLineE1PortB", 2), ("timingSourceLineT1PortA", 3), ("timingSourceLineT1PortB", 4))

class JuniSysCardType(TextualConvention, Integer32):
    description = 'The type of card in a system slot: unknown Unknown type. srp Switch/Route Processor. ct3 Channelized T3. oc3 OC-3 (SONET/SDH). ut3Atm Unchannelized T3 (ATM service). ut3Frame Unchannelized T3 (Frame service). ue3Atm Unchannelized E3 (ATM service). ue3Frame Uncahnnelized E3 (Frame service). ce1 Channelized E1. ct1 Channelized T1. dpfe Dual Port Fast Ethernet. oc12Pos OC-12 (POS/SDH). oc12Atm OC-12 (ATM service). oc3Pos Quad OC-3 (POS/SDH). oc3Atm Quad OC-3 (ATM service). ge Gigabit Ethernet. fe8 Fast Ethernet 8-port. oc3oc12Pos Generic OC3/OC12 POS (multi-personality). oc3oc12Atm Generic OC3/OC12 ATM (multi-personality). coc3oc12 Channelized generic OC3/OC12 (multi-personality). coc3 Channelized OC3. coc12 Channelized OC12. oc12Server OC-12 Rate Server Card. hssi High Speed Serial Interface. geFe Generic GE/FE (multi-personality). ct3P12 Channelized T3 12-port. v35 X.21/V.35 Card. ut3f12 Unchannelized T3 12-port. ue3f12 Unchannelized E3 12-port. coc3F3 OC-3 channelized to T3. coc12F3 OC-12 channelized to T3. cocxF3 12-port T3/E3 or OC3/OC12 (multi-personality). vts Virtual Tunnel Server. oc48 OC-48 (SONET/SDH). ut3Atm4 4-port Unchannelized T3 ATM. hybrid Generic ATM/POS/GE Hybrid (multi-personality). oc3AtmGe OC3 ATM 2-port Gigabit Ethernet 1-port. oc3AtmPos OC3 ATM 2-port OC3 POS 2-port. ge2 Gigabit Ethernet 2-port.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38))
    namedValues = NamedValues(("unknown", 0), ("srp", 1), ("ct3", 2), ("oc3", 3), ("ut3Atm", 4), ("ut3Frame", 5), ("ue3Atm", 6), ("ue3Frame", 7), ("ce1", 8), ("ct1", 9), ("dpfe", 10), ("oc12Pos", 11), ("oc12Atm", 12), ("oc3Pos", 13), ("oc3Atm", 14), ("ge", 15), ("fe8", 16), ("oc3oc12Pos", 17), ("oc3oc12Atm", 18), ("coc3oc12", 19), ("coc3", 20), ("coc12", 21), ("oc12Server", 22), ("hssi", 23), ("geFe", 24), ("ct3P12", 25), ("v35", 26), ("ut3f12", 27), ("ue3f12", 28), ("coc12F3", 29), ("coc3F3", 30), ("cocxF3", 31), ("vts", 32), ("oc48", 33), ("ut3Atm4", 34), ("hybrid", 35), ("oc3AtmGe", 36), ("oc3AtmPos", 37), ("ge2", 38))

juniERXSysTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0))
juniERXSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1))
juniERXSysConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2))
juniERXSysGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1))
juniERXSysFabric = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 2))
juniERXSysNvs = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 3))
juniERXSysSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4))
juniERXSysPort = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5))
juniERXSysPower = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6))
juniERXSysTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7))
juniERXSysSubsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8))
juniERXSysChassisRev = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysChassisRev.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysChassisRev.setDescription('Chassis revision number. If unknown, the value 255 is reported.')
juniERXSysSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSwVersion.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSwVersion.setDescription('Currently executing operational software version.')
juniERXSysSwBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSwBuildDate.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSwBuildDate.setDescription('Build date of currently executing operational software version.')
juniERXSysRevertControl = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("immediate", 1), ("timeOfDay", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysRevertControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysRevertControl.setDescription('Global revert control: off Disable global revert. immediate All slots are to revert immediately (asap). timeOfDay All slots are to revert at time specified by juniRxSysRevertTimeOfDay. This object/value must be set concurrently with juniERXSysRevertTimeOfDay.')
juniERXSysRevertTimeOfDay = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86399))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysRevertTimeOfDay.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysRevertTimeOfDay.setDescription('The number of seconds past midnight on any given day at which time reverts are allowed to occur. This object must be set concurrently with juniERXSysRevertControl.')
juniERXSysBootConfigControl = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("file", 0), ("fileOnce", 1), ("factoryDefaults", 2), ("runningConfiguration", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootConfigControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootConfigControl.setDescription('System boot configuration control: file Revert to configuration settings specified by juniERXSysBootConfigFile. The juniERXSysBootConfigControl and juniERXSysBootConfigFile must be specified together in the same set request PDU. fileOnce Revert to configuration settings specified by juniERXSysBootConfigFile. Do not continue to use file after using it once. The juniERXSysBootConfigControl and juniERXSysBootConfigFile must be specified together in the same set request PDU. factoryDefaults Revert to factory default settings. runningConfiguration Revert to current settings.')
juniERXSysBootBackupConfigControl = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("file", 0), ("factoryDefaults", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootBackupConfigControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootBackupConfigControl.setDescription('System boot backup configuration control: file Revert to backup configuration settings specified by juniERXSysBootBackupConfigFile. The juniERXSysBootBackupConfigControl and juniERXSysBootBackupConfigFile must be specified together in the same set request PDU. factoryDefaults Revert to factory default settings. none Specify no backup.')
juniERXSysBootForceBackupControl = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootForceBackupControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootForceBackupControl.setDescription('System boot force backup control: off Do not force revert to backup settings. on Do force revert to backup settings.')
juniERXSysBootAutoRevertControl = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("default", 0), ("never", 1), ("set", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootAutoRevertControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootAutoRevertControl.setDescription('System boot auto revert control: default Use default auto-revert tolerances. never Never auto-revert to backup. set Set auto-revert settings at specified tolerances.')
juniERXSysBootAutoRevertCountTolerance = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootAutoRevertCountTolerance.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootAutoRevertCountTolerance.setDescription('The auto-revert reboot count tolerance. This object cannot be set to zero, but may contain a zero value when the control is set to never(1).')
juniERXSysBootAutoRevertTimeTolerance = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootAutoRevertTimeTolerance.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootAutoRevertTimeTolerance.setDescription('The auto-revert reboot time tolerance. This object cannot be set to zero, but will contain a zero value when the control is set to never(1).')
juniERXSysBootReleaseFile = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootReleaseFile.setDescription('The local boot release file name, with extension .rel.')
juniERXSysBootConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootConfigFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootConfigFile.setDescription('The local boot configuration file name, with extension .cnf. The juniERXSysBootConfigControl and juniERXSysBootConfigFile must be specified together in the same set request PDU.')
juniERXSysBootBackupReleaseFile = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootBackupReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootBackupReleaseFile.setDescription('The local backup boot release file name, with extension .rel.')
juniERXSysBootBackupConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysBootBackupConfigFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysBootBackupConfigFile.setDescription('The local backup boot configuration file name, with extension .cnf. The juniERXSysBootBackupConfigControl and juniERXSysBootBackupConfigFile must be specified together in the same set request PDU.')
juniERXSysAdminTimingSource = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 16), JuniTimingSelector()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysAdminTimingSource.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysAdminTimingSource.setDescription('The administrative timing source for the ERX system. The ERX periodically monitors the status of three timing sources, primary, secondary and tertiary. If the systems current timing source fails, the system will automatically downgrade to the next timing source. If the system is configured to automatically upgrade (juniERXSysTimingDisableAutoUpgrade is set to false(2)) the system will switch back to the higher timing source when it becomes available. A timing source failure can be detected by comparing the operational and admin timing sources. If they are not equal, the system has swapped timing sources because the administratively set value is in the error state.')
juniERXSysOperTimingSource = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 17), JuniTimingSelector()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysOperTimingSource.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysOperTimingSource.setDescription('The operations timing source for the ERX system. The ERX periodically monitors the status of three timing sources, primary, secondary and tertiary. If the systems current timing source fails, the system will automatically downgrade to the next timing source. If the system is configured to automatically upgrade (juniERXSysTimingDisableAutoUpgrade is set to false(2)) the system will switch back to the higher timing source when it becomes available.')
juniERXSysTimingDisableAutoUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysTimingDisableAutoUpgrade.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingDisableAutoUpgrade.setDescription('This object controls the automatic timing selector upgrade. Setting this object to true(1) will prevent automatic upgrade to the next highest timing selector. Setting this object to false(2) will enable the automatic upgrade of timing selectors.')
juniERXSysTimingSelectorTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19), )
if mibBuilder.loadTexts: juniERXSysTimingSelectorTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSelectorTable.setDescription('Table of system timing selectors.')
juniERXSysTimingSelectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysTimingSelectorIndex"))
if mibBuilder.loadTexts: juniERXSysTimingSelectorEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSelectorEntry.setDescription('A table entry describing a system timing selector.')
juniERXSysTimingSelectorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1, 1), JuniTimingSelector())
if mibBuilder.loadTexts: juniERXSysTimingSelectorIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSelectorIndex.setDescription('The system timing selector index associated with this entry.')
juniERXSysTimingSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1, 2), JuniTimingSourceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysTimingSourceType.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSourceType.setDescription('The system timing source type for this entry. This object must be present when setting either the juniERXSysTimingSourceIfIndex or juniERXSysTimingSourceLine objects. Also, if the value of this object is set to timingInternal(2), no other objects should be simultanously set, otherwise the agent will return an error.')
juniERXSysTimingSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysTimingSourceIfIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSourceIfIndex.setDescription('The ifIndex of the interface selected as the system timing source. The juniERXSysTimingSourceType object must be set to timingInterfaceIfIndex(1) otherwise setting this object will fail.')
juniERXSysTimingSourceLine = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1, 4), JuniTimingSourceLineType().clone('timingSourceLineUndefined')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysTimingSourceLine.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingSourceLine.setDescription('The line type timing source for this entry. The juniRxSysTimingSourceType object must be set to timingLine(3) for the agent to accept a set to this object.')
juniERXSysTimingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("timingStatusOk", 1), ("timingStatusError", 2), ("timingStatusUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTimingStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingStatus.setDescription('The status associated with this system timing selector.')
juniERXSysMemUtilPct = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysMemUtilPct.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysMemUtilPct.setDescription('Percentage of system memory utilization. A value of -1 indicates the utilization is unknown.')
juniERXSysMemCapacity = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 21), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysMemCapacity.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysMemCapacity.setDescription('The total memory capacity of the system. Negative values are returned when the capacity exceeds 2147483647; interpret the negative 32-bit integer as an unsigned 32-bit integer value.')
juniERXSysHighMemUtilThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(85)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysHighMemUtilThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysHighMemUtilThreshold.setDescription('The value of system memory utilization, where if reached for the first time will generate a high memory utilization event to the management entity on this system. The value of this object must be greated than the value of juniERXSysAbatedMemUtilThreshold.')
juniERXSysAbatedMemUtilThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(75)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysAbatedMemUtilThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysAbatedMemUtilThreshold.setDescription('The value of system memory utilization that is used to determine when to generate an abated memory utilization event notification to the management entity on this system. The value of this object must be less than the value of juniERXSysHighMemUtilThreshold. The abated memory utilization trap is sent once if the high memory threshold was reached, and memory utilization falls to the value of this object.')
juniERXSysMemUtilTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 24), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysMemUtilTrapEnable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysMemUtilTrapEnable.setDescription('Controls the sending of system memory utilization events. Setting the value of this object to true(1) will cause system memory utilization event notification, if they occur, to be sent to the management entity on this system. Setting the value of this object to false(2) will disable event notifications.')
juniERXSysGeneralTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysGeneralTrapEnable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysGeneralTrapEnable.setDescription('Controls whether a member of the set of ERX system notifications (traps) defined in this MIB or the counterpart notifications defined in the generic E-series system MIB (Juniper-System-MIB) will be initiated when the appropriate system event occures. Setting the value of this object to true(1) will enable the event notifications from this MIB, if they occur, to be sent to the management entity on this system, provided no other restrictions are in effect, instead of the counterparts from the generic system MIB. Setting the value of this object to false(2) will disable all event notifications defined in this MIB, enabling the ones from the generic system MIB.')
juniERXSysFabricSpeed = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 2, 1), Integer32()).setUnits('gigabits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysFabricSpeed.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysFabricSpeed.setDescription('Speed of switching fabric, in gigabits per second.')
juniERXSysFabricRev = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysFabricRev.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysFabricRev.setDescription('Fabric revision number. If unknown, the value 255 is reported.')
juniERXSysNvsStatus = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notPresent", 0), ("writeProtected", 1), ("volumeError", 2), ("nearCapacity", 3), ("ok", 4), ("nearConfigCapacity", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysNvsStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysNvsStatus.setDescription('Status of non-volatile storage (NVS): notPresent NVS is not installed. writeProtected NVS is write-protected. volumeError Status poll of NVS failed. nearCapacity Utilization exceeds 85% of NVS capacity. ok NVS is operational, none of the preceding conditions apply. nearConfigCapacity Utilization exceeds the ability to save the running configuration.')
juniERXSysNvsCapacity = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 3, 2), Integer32()).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysNvsCapacity.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysNvsCapacity.setDescription('Capacity of NVS storage in megabytes.')
juniERXSysNvsUtilPct = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysNvsUtilPct.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysNvsUtilPct.setDescription('Percentage of NVS storage used. A value of -1 indicates NVS utilization is unknown.')
juniERXSysSlotCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotCount.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotCount.setDescription('The number of slots in the system.')
juniERXSysSlotTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2), )
if mibBuilder.loadTexts: juniERXSysSlotTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotTable.setDescription('Table of system slots.')
juniERXSysSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysSlotIndex"))
if mibBuilder.loadTexts: juniERXSysSlotEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotEntry.setDescription('A table entry describing contents of a system slot.')
juniERXSysSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: juniERXSysSlotIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotIndex.setDescription('Slot number. NOTE: Slot numbers are zero-based.')
juniERXSysSlotDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotDescr.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotDescr.setDescription('Textual description of the card.')
juniERXSysSlotCurrentCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 3), JuniSysCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotCurrentCardType.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotCurrentCardType.setDescription("Type of card actually in the slot. This could be different from the type reported in juniERXSysSlotExpectedCardType, in which case it may be necessary to set juniERXSysSlotControl to 'flush' before this card can be made operational.")
juniERXSysSlotRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotRev.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotRev.setDescription('Revision number of the card. If unknown, the value 255 is reported.')
juniERXSysSlotAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 5), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotAdminStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotAdminStatus.setDescription('Exerts administrative control to enable/disable the slot.')
juniERXSysSlotOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("empty", 1), ("disabled", 2), ("failed", 3), ("booting", 4), ("initializing", 5), ("online", 6), ("standby", 7), ("inactive", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotOperStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotOperStatus.setDescription('Status of the card.')
juniERXSysSlotDisableReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("assessing", 2), ("admin", 3), ("cardMismatch", 4), ("fabricLimit", 5), ("imageError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotDisableReason.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotDisableReason.setDescription('Indicates the condition causing the slot to be disabled: none Value when card is not disabled. unknown Unknown reason for disablement. assessing The slot content is being assessed (transient initialization state). admin The slot is administratively disabled. cardMismatch The current card type conflicts with configuration associated with a different card type that previously occupied the slot. fabricLimit Card resource requirements exceed available fabric capacity. imageError Software image for card is missing or invalid.')
juniERXSysSlotExpectedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 8), JuniSysCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotExpectedCardType.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotExpectedCardType.setDescription("Type of card associated with this slot through prior presence. After the card is removed, this association persists (and inhibits operation of a different card type in this slot, if one is inserted) until juniERXSysSlotControl is set to 'flush'.")
juniERXSysSlotControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noOperation", 0), ("flush", 1), ("reset", 2), ("forceFailover", 3), ("noBoot", 4), ("noBootBackup", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotControl.setDescription('Administrative control of this slot: noOperation Setting this value has no effect. flush Flushes configuration associated with a card type that previously occupied this slot. Used to explicitly confirm that the slot is now empty, or contains a different card type. Card must be disabled when this value is asserted. See description for juniERXSysSlotDisableReason. reset Resets the slot. forceFailover Forces the slot to failover to backup. noBoot Deconfigure primary release file for the slot. noBootBackup Deconfigure backup release file for the slot.')
juniERXSysSlotCpuUtilPct = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotCpuUtilPct.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotCpuUtilPct.setDescription('Percentage of CPU utilization. A value of -1 indicates the utilization is unknown.')
juniERXSysSlotMemUtilPct = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotMemUtilPct.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotMemUtilPct.setDescription('Percentage of memory utilization. A value of -1 indicates the utilization is unknown.')
juniERXSysSlotIoaPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotIoaPresent.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotIoaPresent.setDescription("Indicates whether the card's corresponding I/O adapter is present.")
juniERXSysSlotPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotPortCount.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotPortCount.setDescription('Number of physical ports for the EXPECTED card type for this slot. NOTE: In event of a card mismatch in this slot, the port count for the CURRENT card in this slot is not recognized/reported until the configuration for the EXPECTED card is explicitly flushed via juniERXSysSlotControl.')
juniERXSysSlotLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotLastChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotLastChange.setDescription('The value of sysUpTime when the value of juniERXSysSlotOperStatus last changed.')
juniERXSysSlotRedundancyLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 15), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotRedundancyLockout.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotRedundancyLockout.setDescription('Exerts administrative control to enable/disable Redundancy protection for the slot.')
juniERXSysSlotRedundancyGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotRedundancyGroupId.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotRedundancyGroupId.setDescription('Identifies the Redundancy group as derived from hardware settings.')
juniERXSysSlotSpareServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotSpareServer.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotSpareServer.setDescription('True only if the line card in slot is a spare redundant server.')
juniERXSysSlotAssociatedSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotAssociatedSlot.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotAssociatedSlot.setDescription('If the module is a primary card and the spare is acting on its behalf, then the value of this object is the slot number of the associated spare. If the module is a primary card and is active (not spared), then the value of this object is the cards actual slot number. If the module is a spare card and it is active, then the value of this object is the slot number of the primary card that is being spared for. If the module is a spare and it is inactive, then the value of this object is the its own slot number. If module is not part of a redundancy group, or the slot is empty, the value of this object is 255.')
juniERXSysSlotRevertControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("immediate", 1), ("timeAndDate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotRevertControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotRevertControl.setDescription('Per-slot revert control: off Disable slot revert. immediate Slot is to revert immediately (asap). timeAndDate Slot is to revert at time specified by juniRxSysSlotRedundancyRevertTime.')
juniERXSysSlotRedundancyRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 20), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotRedundancyRevertTime.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotRedundancyRevertTime.setDescription('The date and time associated with the timeAndDate (delayed) revert operation.')
juniERXSysSlotBootReleaseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotBootReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotBootReleaseFile.setDescription('The local boot release file name for this slot, with extension .rel.')
juniERXSysSlotBootBackupReleaseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSlotBootBackupReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotBootBackupReleaseFile.setDescription('The local backup boot release file name for this slot, with extension .rel.')
juniERXSysSlotSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotSerialNumber.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotSerialNumber.setDescription('The serial number of the card in this slot.')
juniERXSysSlotAssemblyPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotAssemblyPartNumber.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotAssemblyPartNumber.setDescription('The part number of the card in this slot.')
juniERXSysSlotAssemblyRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotAssemblyRev.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotAssemblyRev.setDescription('The revision number of the card assembly in this slot.')
juniERXSysSlotIoaSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotIoaSerialNumber.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotIoaSerialNumber.setDescription('The serial number of the I/O adaptor on the card in this slot.')
juniERXSysSlotIoaAssemblyPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotIoaAssemblyPartNumber.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotIoaAssemblyPartNumber.setDescription('The part number of the I/O adaptor on the card in this slot.')
juniERXSysSlotIoaAssemblyRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 4, 2, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSlotIoaAssemblyRev.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotIoaAssemblyRev.setDescription('The revision number of the I/O adaptor assembly on the card in this slot.')
juniERXSysPortTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1), )
if mibBuilder.loadTexts: juniERXSysPortTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortTable.setDescription('Table of system physical ports. The information in this table reflects the ports for the EXPECTED card type in each slot; in event of a card mismatch, this table permits navigation of the existing configuration of the expected card type.')
juniERXSysPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysSlotIndex"), (0, "Juniper-ERX-System-MIB", "juniERXSysPortIndex"))
if mibBuilder.loadTexts: juniERXSysPortEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortEntry.setDescription('A table entry describing a physical port of the system.')
juniERXSysPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: juniERXSysPortIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortIndex.setDescription('Port number of this physical port, relative to the slot in which it resides. Each physical port is uniquely distinguished by its slot/port pair. NOTE: Port numbers are zero-based.')
juniERXSysPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysPortDescr.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortDescr.setDescription('Textual description of this port.')
juniERXSysPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("unknown", 0), ("eth", 1), ("ct3", 2), ("oc3c", 3), ("ut3Atm", 4), ("ut3Frame", 5), ("ue3Atm", 6), ("ue3Frame", 7), ("ce1", 8), ("ct1", 9), ("oc12cPos", 10), ("oc12cAtm", 11), ("oc3cPos", 12), ("oc3cAtm", 13), ("coc3", 14), ("coc12", 15), ("server", 16), ("hssi", 17), ("v35", 18), ("oc48cPos", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysPortType.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortType.setDescription('Type of the physical port: unknown Unknown port type. eth Ethernet. ct3 Channelized T3. oc3c OC-3c (SONET/SDH). ut3Atm Unchannelized T3 (ATM service). ut3Frame Unchannelized T3 (Frame service). ue3Atm Unchannelized E3 (ATM service). ue3Frame Unchannelized E3 (Frame service). ce1 Channelized E1. ct1 Channelized T1. oc12cPos OC-12c (POS/SDH). oc12cAtm OC-12c (ATM service). oc3cPos OC-3c (POS/SDH). oc3cAtm OC-3c (ATM service). coc3 Channelized OC-3. coc12 Channelized OC-12. server Tunnel Server (no physical ports). hssi High Speed Serial Interface. v35 X.21/V.35. oc48cPos OC-48c (POS/SDH).')
juniERXSysPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 5, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysPortIfIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortIfIndex.setDescription('The ifIndex of the Interfaces MIB ifTable entry corresponding to this physical port; if zero, the ifIndex is unknown or does not exist.')
juniERXSysPowerTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6, 1), )
if mibBuilder.loadTexts: juniERXSysPowerTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerTable.setDescription('Table of system power elements.')
juniERXSysPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6, 1, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysPowerIndex"))
if mibBuilder.loadTexts: juniERXSysPowerEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerEntry.setDescription('A table entry describing status of a system power element.')
juniERXSysPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: juniERXSysPowerIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerIndex.setDescription('Arbitrary integer index to distinguish entries in this table.')
juniERXSysPowerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysPowerDescr.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerDescr.setDescription('Textual description of this power element.')
juniERXSysPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysPowerStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerStatus.setDescription('The status of the power element: inactive No power available from this element. active Power available from this element.')
juniERXSysTempFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("failed", 0), ("ok", 1), ("warning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempFanStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempFanStatus.setDescription('Status of fan subsystem. ok All components operational warning The fan subsystem has a non-critical failure. failed The fan subsystem has a critical failure, or has been removed, and is now non-operational.')
juniERXSysTempTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2), )
if mibBuilder.loadTexts: juniERXSysTempTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempTable.setDescription('Table of system temperature sensors. Sensors are distributed across the chassis, at least one sensor per populated slot.')
juniERXSysTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysSlotIndex"), (0, "Juniper-ERX-System-MIB", "juniERXSysTempIndex"))
if mibBuilder.loadTexts: juniERXSysTempEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempEntry.setDescription('A table entry describing status of a temperature sensor.')
juniERXSysTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: juniERXSysTempIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempIndex.setDescription('Arbitrary integer index to distinguish sensors associated with the same chassis slot.')
juniERXSysTempDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempDescr.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempDescr.setDescription('Textual description of this sensor.')
juniERXSysTempStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("failed", 1), ("tooLow", 2), ("nominal", 3), ("tooHigh", 4), ("tooLowWarning", 5), ("tooHighWarning", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempStatus.setDescription('The status of a temperature sensor: unknown unknown failed failed tooLow below nominal range nominal within nominal range tooHigh above nominal range tooLowWarning near lower limit tooHighWarning near upper limit')
juniERXSysTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 2, 1, 4), Integer32()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempValue.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempValue.setDescription('The temperature measured by this sensor in degrees Celsius. This measurement is valid only if the value of the corresponding juniERXSysTempStatus is nominal.')
juniERXSysTempProtectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("monitoring", 1), ("inHoldOff", 2), ("activatedHoldOffExpired", 3), ("activatedTempTooHigh", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempProtectionStatus.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempProtectionStatus.setDescription('Thermal protection status: monitoring monitoring inHoldOff hold off time has begun activatedHoldOffExpired hold off time has expired, the system is in thermal protection mode activatedTempTooHigh temperature too high, the system is in thermal protection mode ')
juniERXSysTempProtectionHoldOffTime = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200)).clone(150)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempProtectionHoldOffTime.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempProtectionHoldOffTime.setDescription('The time, in seconds, before the system enters thermal protection mode after a critical fan subsystem failure is detected.')
juniERXSysTempProtectionHoldOffTimeRemaining = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200)).clone(150)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysTempProtectionHoldOffTimeRemaining.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempProtectionHoldOffTimeRemaining.setDescription('The time remaining, in seconds, before the system enters thermal protection mode while the thermal protection status is set to inHoldOff. The value decrements every second until it reaches zero, and the status changes to activatedHoldOffExpired. When the thermal protection status is not inHoldOff or activatedHoldOffExpired, the value is set to the hold off time.')
juniERXSysSubsystemTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1), )
if mibBuilder.loadTexts: juniERXSysSubsystemTable.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemTable.setDescription('Table of subsystems.')
juniERXSysSubsystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1), ).setIndexNames((0, "Juniper-ERX-System-MIB", "juniERXSysSubsystemIndex"))
if mibBuilder.loadTexts: juniERXSysSubsystemEntry.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemEntry.setDescription('A table entry containing information pertaining to a subsystem.')
juniERXSysSubsystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: juniERXSysSubsystemIndex.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemIndex.setDescription('Subsystem number.')
juniERXSysSubsystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniERXSysSubsystemName.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemName.setDescription('The name of the subsystem.')
juniERXSysSubsystemControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noOperation", 0), ("noBoot", 1), ("noBootBackup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSubsystemControl.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemControl.setDescription('Administrative control of this subsystem: noOperation Setting this value has no effect. noBoot Deconfigure primary release file for the subsystem. noBootBackup Deconfigure backup release file for the subsystem.')
juniERXSysSubsystemBootReleaseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSubsystemBootReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemBootReleaseFile.setDescription('The local boot release file name for this subsystem, with extension .rel.')
juniERXSysSubsystemBootBackupReleaseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 1, 8, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniERXSysSubsystemBootBackupReleaseFile.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemBootBackupReleaseFile.setDescription('The local backup boot release file name for this subsystem, with extension .rel.')
juniERXSysSlotOperStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 1)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSlotCurrentCardType"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAdminStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDisableReason"), ("Juniper-ERX-System-MIB", "juniERXSysSlotSpareServer"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAssociatedSlot"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDescr"))
if mibBuilder.loadTexts: juniERXSysSlotOperStatusChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotOperStatusChange.setDescription('Reports a status change for a slot. This trap is generated on a transition into a stable state (online or disabled) or on a transition out of online.')
juniERXSysPowerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 2)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysPowerStatus"))
if mibBuilder.loadTexts: juniERXSysPowerStatusChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerStatusChange.setDescription('Reports a change in the status of a power element.')
juniERXSysTempFanStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 3)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysTempFanStatus"))
if mibBuilder.loadTexts: juniERXSysTempFanStatusChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempFanStatusChange.setDescription('Reports a transition between the three states of the fan subsystem. When the fan subsystem transitions to the failed state the thermal protection hold off time begins.')
juniERXSysTempStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 4)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysTempStatus"))
if mibBuilder.loadTexts: juniERXSysTempStatusChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempStatusChange.setDescription('Reports a change in the temperature status. When the status transitions to the tooHigh state the system enters thermal protection mode.')
juniERXSysHighMemUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 5)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysMemCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtilThreshold"))
if mibBuilder.loadTexts: juniERXSysHighMemUtil.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysHighMemUtil.setDescription('Report system memory utilization has met the conditions of juniERXSysHighMemUtilThreshold.')
juniERXSysAbatedMemUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 6)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysMemCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtilThreshold"))
if mibBuilder.loadTexts: juniERXSysAbatedMemUtil.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysAbatedMemUtil.setDescription('Reports system memory utilization has met the conditions of juniERXSysAbatedMemUtilThreshold.')
juniERXSysTempProtectionStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 0, 7)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysTempProtectionStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempProtectionHoldOffTimeRemaining"))
if mibBuilder.loadTexts: juniERXSysTempProtectionStatusChange.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTempProtectionStatusChange.setDescription('Notification about changes in the state of Thermal Protection. This notification is sent when the tempProtectionStatus changes. It is also sent when the holdOffTimeRemaining is 50% of the holdOffTime.')
juniERXSysCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1))
juniERXSysGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2))
juniERXSysCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 1)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance = juniERXSysCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysCompliance.setDescription('Obsolete compliance statement for entities which implement the ERX System MIB. This compliance statement became obsolete when new slot information objects were added.')
juniERXSysCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 2)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGeneralGroup"), ("Juniper-ERX-System-MIB", "juniERXSysFabricGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNvsGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSlotGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPortGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPowerGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTemperatureGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance1 = juniERXSysCompliance1.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysCompliance1.setDescription('Obsolete compliance statement for entities which implement the ERX System MIB. This compliance statement became obsolete when the timing group was added.')
juniERXSysCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 3)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGeneralGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTimingGroup"), ("Juniper-ERX-System-MIB", "juniERXSysFabricGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNvsGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSlotGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPortGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPowerGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTemperatureGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance2 = juniERXSysCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysCompliance2.setDescription('Obsolete compliance statement for entities which implement the ERX System MIB. This compliance statement became obsolete when new memory information objects and notifications were added.')
juniERXSysCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 4)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGeneralGroup2"), ("Juniper-ERX-System-MIB", "juniERXSysTimingGroup"), ("Juniper-ERX-System-MIB", "juniERXSysFabricGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNvsGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSlotGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPortGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPowerGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTemperatureGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance3 = juniERXSysCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysCompliance3.setDescription('Obsolete compliance statement for entities which implement the ERX System MIB. This compliance statement became obsolete when new system temperature information objects and notifications were added.')
juniERXSysCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 5)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGeneralGroup2"), ("Juniper-ERX-System-MIB", "juniERXSysTimingGroup"), ("Juniper-ERX-System-MIB", "juniERXSysFabricGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNvsGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSlotGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPortGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPowerGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTemperatureGroup2"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance4 = juniERXSysCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysCompliance4.setDescription('Obsolete compliance statement for entities which implement the ERX System MIB. This compliance statement became obsolete when the general trap control object was added.')
juniERXSysCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 1, 6)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysGeneralGroup3"), ("Juniper-ERX-System-MIB", "juniERXSysTimingGroup"), ("Juniper-ERX-System-MIB", "juniERXSysFabricGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNvsGroup"), ("Juniper-ERX-System-MIB", "juniERXSysSlotGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPortGroup"), ("Juniper-ERX-System-MIB", "juniERXSysPowerGroup"), ("Juniper-ERX-System-MIB", "juniERXSysTemperatureGroup2"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemGroup"), ("Juniper-ERX-System-MIB", "juniERXSysNotifyGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysCompliance5 = juniERXSysCompliance5.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysCompliance5.setDescription('The compliance statement for entities which implement the ERX System MIB.')
juniERXSysGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 1)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysChassisRev"), ("Juniper-ERX-System-MIB", "juniERXSysSwVersion"), ("Juniper-ERX-System-MIB", "juniERXSysSwBuildDate"), ("Juniper-ERX-System-MIB", "juniERXSysRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysRevertTimeOfDay"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootForceBackupControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertCountTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertTimeTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysFabricSpeed"), ("Juniper-ERX-System-MIB", "juniERXSysFabricRev"), ("Juniper-ERX-System-MIB", "juniERXSysNvsStatus"), ("Juniper-ERX-System-MIB", "juniERXSysNvsCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysNvsUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysSlotCount"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDescr"), ("Juniper-ERX-System-MIB", "juniERXSysSlotCurrentCardType"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRev"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAdminStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDisableReason"), ("Juniper-ERX-System-MIB", "juniERXSysSlotExpectedCardType"), ("Juniper-ERX-System-MIB", "juniERXSysSlotControl"), ("Juniper-ERX-System-MIB", "juniERXSysSlotCpuUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysSlotMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysSlotIoaPresent"), ("Juniper-ERX-System-MIB", "juniERXSysSlotPortCount"), ("Juniper-ERX-System-MIB", "juniERXSysSlotLastChange"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyLockout"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyGroupId"), ("Juniper-ERX-System-MIB", "juniERXSysSlotSpareServer"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAssociatedSlot"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyRevertTime"), ("Juniper-ERX-System-MIB", "juniERXSysSlotBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysSlotBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysPortDescr"), ("Juniper-ERX-System-MIB", "juniERXSysPortType"), ("Juniper-ERX-System-MIB", "juniERXSysPortIfIndex"), ("Juniper-ERX-System-MIB", "juniERXSysPowerDescr"), ("Juniper-ERX-System-MIB", "juniERXSysPowerStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempFanStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempDescr"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempValue"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemName"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemControl"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemBootBackupReleaseFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysGroup = juniERXSysGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysGroup.setDescription('Obsolete collection of management objects pertaining to system capabilities in a Juniper product. This group became obsolete when new slot information objects were added.')
juniERXSysNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 2)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysPowerStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempFanStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysNotifyGroup = juniERXSysNotifyGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysNotifyGroup.setDescription('Obsolete collection of management notifications pertaining to system operations in a Juniper product. This group became obsolete when new memory threshold notificaitons were added.')
juniERXSysGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 3)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysChassisRev"), ("Juniper-ERX-System-MIB", "juniERXSysSwVersion"), ("Juniper-ERX-System-MIB", "juniERXSysSwBuildDate"), ("Juniper-ERX-System-MIB", "juniERXSysRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysRevertTimeOfDay"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootForceBackupControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertCountTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertTimeTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysGeneralGroup = juniERXSysGeneralGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysGeneralGroup.setDescription('Obsolete collection of management objects pertaining to general system capabilities in a Juniper product. This group became obsolete when new memory management objects were added.')
juniERXSysFabricGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 4)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysFabricSpeed"), ("Juniper-ERX-System-MIB", "juniERXSysFabricRev"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysFabricGroup = juniERXSysFabricGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysFabricGroup.setDescription('A collection of management objects pertaining to system fabric capabilities in a Juniper product.')
juniERXSysNvsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 5)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysNvsStatus"), ("Juniper-ERX-System-MIB", "juniERXSysNvsCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysNvsUtilPct"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysNvsGroup = juniERXSysNvsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysNvsGroup.setDescription('A collection of management objects pertaining to non-volitile storage subsystem capabilities in a Juniper product.')
juniERXSysSlotGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 6)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSlotCount"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDescr"), ("Juniper-ERX-System-MIB", "juniERXSysSlotCurrentCardType"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRev"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAdminStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatus"), ("Juniper-ERX-System-MIB", "juniERXSysSlotDisableReason"), ("Juniper-ERX-System-MIB", "juniERXSysSlotExpectedCardType"), ("Juniper-ERX-System-MIB", "juniERXSysSlotControl"), ("Juniper-ERX-System-MIB", "juniERXSysSlotCpuUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysSlotMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysSlotIoaPresent"), ("Juniper-ERX-System-MIB", "juniERXSysSlotPortCount"), ("Juniper-ERX-System-MIB", "juniERXSysSlotLastChange"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyLockout"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyGroupId"), ("Juniper-ERX-System-MIB", "juniERXSysSlotSpareServer"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAssociatedSlot"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysSlotRedundancyRevertTime"), ("Juniper-ERX-System-MIB", "juniERXSysSlotBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysSlotBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysSlotSerialNumber"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAssemblyPartNumber"), ("Juniper-ERX-System-MIB", "juniERXSysSlotAssemblyRev"), ("Juniper-ERX-System-MIB", "juniERXSysSlotIoaSerialNumber"), ("Juniper-ERX-System-MIB", "juniERXSysSlotIoaAssemblyPartNumber"), ("Juniper-ERX-System-MIB", "juniERXSysSlotIoaAssemblyRev"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysSlotGroup = juniERXSysSlotGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSlotGroup.setDescription('A collection of management objects pertaining to slot-specific system capabilities in a Juniper product.')
juniERXSysPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 7)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysPortDescr"), ("Juniper-ERX-System-MIB", "juniERXSysPortType"), ("Juniper-ERX-System-MIB", "juniERXSysPortIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysPortGroup = juniERXSysPortGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPortGroup.setDescription('A collection of management objects pertaining to port-related system capabilities in a Juniper product.')
juniERXSysPowerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 8)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysPowerDescr"), ("Juniper-ERX-System-MIB", "juniERXSysPowerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysPowerGroup = juniERXSysPowerGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysPowerGroup.setDescription('A collection of management objects pertaining to the power subsystem capabilities in a Juniper product.')
juniERXSysTemperatureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 9)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysTempFanStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempDescr"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysTemperatureGroup = juniERXSysTemperatureGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysTemperatureGroup.setDescription('Obsolete collection of management objects pertaining to system temperature monitoring capabilities in a Juniper product. This group became obsolete when temperature shutdown parameters were added.')
juniERXSysSubsystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 10)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSubsystemName"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemControl"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysSubsystemBootBackupReleaseFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysSubsystemGroup = juniERXSysSubsystemGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysSubsystemGroup.setDescription('A collection of management objects pertaining to subsystem capabilities in a Juniper product.')
juniERXSysTimingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 11)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysAdminTimingSource"), ("Juniper-ERX-System-MIB", "juniERXSysOperTimingSource"), ("Juniper-ERX-System-MIB", "juniERXSysTimingDisableAutoUpgrade"), ("Juniper-ERX-System-MIB", "juniERXSysTimingSourceType"), ("Juniper-ERX-System-MIB", "juniERXSysTimingSourceIfIndex"), ("Juniper-ERX-System-MIB", "juniERXSysTimingSourceLine"), ("Juniper-ERX-System-MIB", "juniERXSysTimingStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysTimingGroup = juniERXSysTimingGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTimingGroup.setDescription('A collection of management objects pertaining to system timing capabilities in a Juniper product.')
juniERXSysGeneralGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 12)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysChassisRev"), ("Juniper-ERX-System-MIB", "juniERXSysSwVersion"), ("Juniper-ERX-System-MIB", "juniERXSysSwBuildDate"), ("Juniper-ERX-System-MIB", "juniERXSysRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysRevertTimeOfDay"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootForceBackupControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertCountTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertTimeTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysMemCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysGeneralGroup2 = juniERXSysGeneralGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysGeneralGroup2.setDescription('Obsolete collection of management objects pertaining to general system capabilities in a Juniper product. This group became obsolete when the general trap control object was added.')
juniERXSysNotifyGroup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 13)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysPowerStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempFanStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtil"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysNotifyGroup2 = juniERXSysNotifyGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniERXSysNotifyGroup2.setDescription('Obsolete collection of management notifications pertaining to system operations in a Juniper product. This group became obsolete when the tempProtectionStatusChange notification was added.')
juniERXSysTemperatureGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 14)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysTempFanStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempDescr"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempValue"), ("Juniper-ERX-System-MIB", "juniERXSysTempProtectionStatus"), ("Juniper-ERX-System-MIB", "juniERXSysTempProtectionHoldOffTime"), ("Juniper-ERX-System-MIB", "juniERXSysTempProtectionHoldOffTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysTemperatureGroup2 = juniERXSysTemperatureGroup2.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysTemperatureGroup2.setDescription('A collection of management objects pertaining to system temperature monitoring capabilities in a Juniper product.')
juniERXSysNotifyGroup3 = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 15)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysSlotOperStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysPowerStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempFanStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysTempStatusChange"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtil"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtil"), ("Juniper-ERX-System-MIB", "juniERXSysTempProtectionStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysNotifyGroup3 = juniERXSysNotifyGroup3.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysNotifyGroup3.setDescription('A collection of management notifications pertaining to system operations in a Juniper product.')
juniERXSysGeneralGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 17, 2, 2, 16)).setObjects(("Juniper-ERX-System-MIB", "juniERXSysChassisRev"), ("Juniper-ERX-System-MIB", "juniERXSysSwVersion"), ("Juniper-ERX-System-MIB", "juniERXSysSwBuildDate"), ("Juniper-ERX-System-MIB", "juniERXSysRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysRevertTimeOfDay"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootForceBackupControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertControl"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertCountTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootAutoRevertTimeTolerance"), ("Juniper-ERX-System-MIB", "juniERXSysBootReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupReleaseFile"), ("Juniper-ERX-System-MIB", "juniERXSysBootBackupConfigFile"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilPct"), ("Juniper-ERX-System-MIB", "juniERXSysMemCapacity"), ("Juniper-ERX-System-MIB", "juniERXSysHighMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysAbatedMemUtilThreshold"), ("Juniper-ERX-System-MIB", "juniERXSysMemUtilTrapEnable"), ("Juniper-ERX-System-MIB", "juniERXSysGeneralTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniERXSysGeneralGroup3 = juniERXSysGeneralGroup3.setStatus('deprecated')
if mibBuilder.loadTexts: juniERXSysGeneralGroup3.setDescription('A collection of management objects pertaining to general system capabilities in a Juniper product.')
mibBuilder.exportSymbols("Juniper-ERX-System-MIB", juniERXSysSwVersion=juniERXSysSwVersion, juniERXSysNotifyGroup=juniERXSysNotifyGroup, juniERXSysTempEntry=juniERXSysTempEntry, juniERXSysBootBackupReleaseFile=juniERXSysBootBackupReleaseFile, juniERXSysSubsystemBootBackupReleaseFile=juniERXSysSubsystemBootBackupReleaseFile, juniERXSysSlotDisableReason=juniERXSysSlotDisableReason, juniERXSysCompliance=juniERXSysCompliance, juniERXSysTimingSelectorEntry=juniERXSysTimingSelectorEntry, juniERXSysRevertTimeOfDay=juniERXSysRevertTimeOfDay, juniERXSysNvsUtilPct=juniERXSysNvsUtilPct, juniERXSysPowerStatus=juniERXSysPowerStatus, juniERXSysSlotGroup=juniERXSysSlotGroup, juniERXSysSlotRedundancyLockout=juniERXSysSlotRedundancyLockout, juniERXSysMemCapacity=juniERXSysMemCapacity, juniERXSysGeneralTrapEnable=juniERXSysGeneralTrapEnable, juniERXSysOperTimingSource=juniERXSysOperTimingSource, juniERXSysMemUtilPct=juniERXSysMemUtilPct, juniERXSysAbatedMemUtilThreshold=juniERXSysAbatedMemUtilThreshold, juniERXSysTempProtectionStatus=juniERXSysTempProtectionStatus, juniERXSysSubsystemName=juniERXSysSubsystemName, juniERXSysTempProtectionHoldOffTimeRemaining=juniERXSysTempProtectionHoldOffTimeRemaining, juniERXSysSlotLastChange=juniERXSysSlotLastChange, JuniTimingSourceType=JuniTimingSourceType, juniERXSysTempValue=juniERXSysTempValue, juniERXSysSlotMemUtilPct=juniERXSysSlotMemUtilPct, juniERXSysPowerStatusChange=juniERXSysPowerStatusChange, juniERXSysPortEntry=juniERXSysPortEntry, juniERXSysPortDescr=juniERXSysPortDescr, juniERXSysSlotIndex=juniERXSysSlotIndex, juniERXSysAdminTimingSource=juniERXSysAdminTimingSource, juniERXSysBootAutoRevertCountTolerance=juniERXSysBootAutoRevertCountTolerance, juniERXSysRevertControl=juniERXSysRevertControl, juniERXSysSubsystemTable=juniERXSysSubsystemTable, PYSNMP_MODULE_ID=juniERXSysMIB, juniERXSysSlotRedundancyGroupId=juniERXSysSlotRedundancyGroupId, JuniTimingSelector=JuniTimingSelector, juniERXSysSlotPortCount=juniERXSysSlotPortCount, juniERXSysTempDescr=juniERXSysTempDescr, juniERXSysSubsystemEntry=juniERXSysSubsystemEntry, juniERXSysSlotExpectedCardType=juniERXSysSlotExpectedCardType, juniERXSysSubsystemBootReleaseFile=juniERXSysSubsystemBootReleaseFile, JuniSysCardType=JuniSysCardType, juniERXSysSlot=juniERXSysSlot, juniERXSysSlotIoaSerialNumber=juniERXSysSlotIoaSerialNumber, juniERXSysSlotOperStatusChange=juniERXSysSlotOperStatusChange, juniERXSysObjects=juniERXSysObjects, juniERXSysPower=juniERXSysPower, juniERXSysSubsystemGroup=juniERXSysSubsystemGroup, juniERXSysSlotIoaPresent=juniERXSysSlotIoaPresent, juniERXSysFabricRev=juniERXSysFabricRev, juniERXSysAbatedMemUtil=juniERXSysAbatedMemUtil, juniERXSysGroup=juniERXSysGroup, juniERXSysBootConfigControl=juniERXSysBootConfigControl, juniERXSysTempProtectionStatusChange=juniERXSysTempProtectionStatusChange, juniERXSysSlotIoaAssemblyRev=juniERXSysSlotIoaAssemblyRev, juniERXSysSlotCount=juniERXSysSlotCount, juniERXSysSlotAssociatedSlot=juniERXSysSlotAssociatedSlot, juniERXSysPort=juniERXSysPort, juniERXSysSlotEntry=juniERXSysSlotEntry, juniERXSysGeneralGroup=juniERXSysGeneralGroup, juniERXSysPortGroup=juniERXSysPortGroup, juniERXSysTimingSelectorTable=juniERXSysTimingSelectorTable, juniERXSysMemUtilTrapEnable=juniERXSysMemUtilTrapEnable, juniERXSysSlotSerialNumber=juniERXSysSlotSerialNumber, juniERXSysTimingSelectorIndex=juniERXSysTimingSelectorIndex, juniERXSysTempFanStatusChange=juniERXSysTempFanStatusChange, juniERXSysNotifyGroup2=juniERXSysNotifyGroup2, juniERXSysNvsCapacity=juniERXSysNvsCapacity, juniERXSysSubsystemControl=juniERXSysSubsystemControl, juniERXSysPowerGroup=juniERXSysPowerGroup, juniERXSysBootConfigFile=juniERXSysBootConfigFile, juniERXSysSlotOperStatus=juniERXSysSlotOperStatus, juniERXSysTrap=juniERXSysTrap, juniERXSysHighMemUtilThreshold=juniERXSysHighMemUtilThreshold, juniERXSysNotifyGroup3=juniERXSysNotifyGroup3, juniERXSysFabricSpeed=juniERXSysFabricSpeed, juniERXSysCompliance3=juniERXSysCompliance3, juniERXSysPowerDescr=juniERXSysPowerDescr, juniERXSysSlotAssemblyRev=juniERXSysSlotAssemblyRev, juniERXSysPortIfIndex=juniERXSysPortIfIndex, juniERXSysSubsystem=juniERXSysSubsystem, juniERXSysNvsStatus=juniERXSysNvsStatus, juniERXSysSlotIoaAssemblyPartNumber=juniERXSysSlotIoaAssemblyPartNumber, juniERXSysTimingGroup=juniERXSysTimingGroup, juniERXSysPortTable=juniERXSysPortTable, juniERXSysSwBuildDate=juniERXSysSwBuildDate, juniERXSysTimingSourceType=juniERXSysTimingSourceType, juniERXSysTempIndex=juniERXSysTempIndex, juniERXSysCompliance4=juniERXSysCompliance4, juniERXSysTemperatureGroup2=juniERXSysTemperatureGroup2, juniERXSysTempTable=juniERXSysTempTable, juniERXSysTimingDisableAutoUpgrade=juniERXSysTimingDisableAutoUpgrade, juniERXSysTimingSourceLine=juniERXSysTimingSourceLine, juniERXSysTempStatusChange=juniERXSysTempStatusChange, juniERXSysSlotRedundancyRevertTime=juniERXSysSlotRedundancyRevertTime, juniERXSysMIB=juniERXSysMIB, juniERXSysBootForceBackupControl=juniERXSysBootForceBackupControl, juniERXSysNvsGroup=juniERXSysNvsGroup, juniERXSysFabricGroup=juniERXSysFabricGroup, juniERXSysSlotCurrentCardType=juniERXSysSlotCurrentCardType, juniERXSysCompliance1=juniERXSysCompliance1, juniERXSysSlotDescr=juniERXSysSlotDescr, juniERXSysGeneralGroup3=juniERXSysGeneralGroup3, juniERXSysGeneralGroup2=juniERXSysGeneralGroup2, juniERXSysChassisRev=juniERXSysChassisRev, juniERXSysPowerIndex=juniERXSysPowerIndex, juniERXSysConformance=juniERXSysConformance, juniERXSysTimingStatus=juniERXSysTimingStatus, juniERXSysTempFanStatus=juniERXSysTempFanStatus, juniERXSysGroups=juniERXSysGroups, juniERXSysTimingSourceIfIndex=juniERXSysTimingSourceIfIndex, juniERXSysHighMemUtil=juniERXSysHighMemUtil, juniERXSysPortType=juniERXSysPortType, juniERXSysSlotBootBackupReleaseFile=juniERXSysSlotBootBackupReleaseFile, juniERXSysSlotBootReleaseFile=juniERXSysSlotBootReleaseFile, juniERXSysBootBackupConfigFile=juniERXSysBootBackupConfigFile, juniERXSysNvs=juniERXSysNvs, juniERXSysBootAutoRevertControl=juniERXSysBootAutoRevertControl, juniERXSysPortIndex=juniERXSysPortIndex, juniERXSysTempStatus=juniERXSysTempStatus, juniERXSysSlotSpareServer=juniERXSysSlotSpareServer, juniERXSysTempProtectionHoldOffTime=juniERXSysTempProtectionHoldOffTime, juniERXSysTemperature=juniERXSysTemperature, juniERXSysFabric=juniERXSysFabric, JuniTimingSourceLineType=JuniTimingSourceLineType, juniERXSysCompliance2=juniERXSysCompliance2, juniERXSysSlotControl=juniERXSysSlotControl, juniERXSysSubsystemIndex=juniERXSysSubsystemIndex, juniERXSysSlotRevertControl=juniERXSysSlotRevertControl, juniERXSysSlotAdminStatus=juniERXSysSlotAdminStatus, juniERXSysBootAutoRevertTimeTolerance=juniERXSysBootAutoRevertTimeTolerance, juniERXSysSlotAssemblyPartNumber=juniERXSysSlotAssemblyPartNumber, juniERXSysPowerEntry=juniERXSysPowerEntry, juniERXSysPowerTable=juniERXSysPowerTable, juniERXSysCompliances=juniERXSysCompliances, juniERXSysBootBackupConfigControl=juniERXSysBootBackupConfigControl, juniERXSysCompliance5=juniERXSysCompliance5, juniERXSysSlotCpuUtilPct=juniERXSysSlotCpuUtilPct, juniERXSysTemperatureGroup=juniERXSysTemperatureGroup, juniERXSysGeneral=juniERXSysGeneral, juniERXSysSlotTable=juniERXSysSlotTable, juniERXSysBootReleaseFile=juniERXSysBootReleaseFile, juniERXSysSlotRev=juniERXSysSlotRev)
