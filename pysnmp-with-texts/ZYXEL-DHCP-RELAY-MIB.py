#
# PySNMP MIB module ZYXEL-DHCP-RELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-DHCP-RELAY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, NotificationType, Unsigned32, MibIdentifier, Bits, Gauge32, ObjectIdentity, iso, Integer32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "NotificationType", "Unsigned32", "MibIdentifier", "Bits", "Gauge32", "ObjectIdentity", "iso", "Integer32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelDhcpRelay = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18))
if mibBuilder.loadTexts: zyxelDhcpRelay.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelDhcpRelay.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelDhcpRelay.setContactInfo('')
if mibBuilder.loadTexts: zyxelDhcpRelay.setDescription('The subtree for dhcp relay')
zyxelDhcpRelaySetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1))
zyxelDhcpRelayGlobalRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1))
zyxelDhcpRelayVlanRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2))
zyDhcpRelayGlobalRelayState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayState.setDescription('Enable/Disable global DHCP Relay.')
zyDhcpRelayGlobalRelayRemoteServerMaxNumberOfServers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerMaxNumberOfServers.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerMaxNumberOfServers.setDescription('The maximum number of remote DHCP servers that can be created.')
zyxelDhcpRelayGlobalRelayRemoteServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 3), )
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayRemoteServerTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayRemoteServerTable.setDescription('The table contains global DHCP relay remote server configuration.')
zyxelDhcpRelayGlobalRelayRemoteServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 3, 1), ).setIndexNames((0, "ZYXEL-DHCP-RELAY-MIB", "zyDhcpRelayGlobalRelayRemoteServerIpAddress"))
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayRemoteServerEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayRemoteServerEntry.setDescription('An entry contains global DHCP relay remote server configuration.')
zyDhcpRelayGlobalRelayRemoteServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerIpAddress.setDescription('IP address of the remote DHCP server.')
zyDhcpRelayGlobalRelayRemoteServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayRemoteServerRowStatus.setDescription('This object allows a remote DHCP server to be created and deleted.')
zyDhcpRelayGlobalRelayOption82Profile = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayOption82Profile.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayOption82Profile.setDescription('Name of DHCP option 82 profile.')
zyDhcpRelayGlobalRelayMaxNumberOfOption82Port = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayMaxNumberOfOption82Port.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayMaxNumberOfOption82Port.setDescription('The maximum number of DHCP global relay Option82 port entries that can be created.')
zyxelDhcpRelayGlobalRelayOption82PortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 6), )
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayOption82PortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayOption82PortTable.setDescription('The table contains DHCP global relay Option82 port configuration.')
zyxelDhcpRelayGlobalRelayOption82PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 6, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayOption82PortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayGlobalRelayOption82PortEntry.setDescription('An entry contains DHCP global relay Option82 port configuration. ')
zyDhcpRelayGlobalRelayOption82PortProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 1, 6, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayOption82PortProfile.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayGlobalRelayOption82PortProfile.setDescription('DHCP option 82 profile in specified port.')
zyDhcpRelayVlanRelayMaxNumberOfRelays = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayMaxNumberOfRelays.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayMaxNumberOfRelays.setDescription('The maximum numbers of DHCP relay entries that can be created. A value of 0 for this object implies that there exist settings for global DHCP relay.')
zyDhcpRelayVlanRelayRemoteServerMaxNumberOfServers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerMaxNumberOfServers.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerMaxNumberOfServers.setDescription('The maximum number of remote DHCP servers that can be created.')
zyxelDhcpRelayVlanRelayRemoteServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 3), )
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayRemoteServerTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayRemoteServerTable.setDescription('The table contains DHCP relay remote server configuration.')
zyxelDhcpRelayVlanRelayRemoteServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 3, 1), ).setIndexNames((0, "ZYXEL-DHCP-RELAY-MIB", "zyDhcpRelayVlanRelayRemoteServerServeVid"), (0, "ZYXEL-DHCP-RELAY-MIB", "zyDhcpRelayVlanRelayRemoteServerIpAddress"))
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayRemoteServerEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayRemoteServerEntry.setDescription('An entry contains DHCP relay remote server configuration.')
zyDhcpRelayVlanRelayRemoteServerServeVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerServeVid.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerServeVid.setDescription('The VLAN ID to which these DHCP settings apply.')
zyDhcpRelayVlanRelayRemoteServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerIpAddress.setDescription('IP address of a remote DHCP server.')
zyDhcpRelayVlanRelayRemoteServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayRemoteServerRowStatus.setDescription('This object allows remote DHCP servers entries to be created and deleted for the specified VLAN.')
zyxelDhcpRelayVlanRelayTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 4), )
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayTable.setDescription('The table contains DHCP VLAN relay configuration.')
zyxelDhcpRelayVlanRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 4, 1), ).setIndexNames((0, "ZYXEL-DHCP-RELAY-MIB", "zyDhcpRelayVlanRelayRemoteServerServeVid"))
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayEntry.setDescription('An entry contains DHCP VLAN relay configuration. ')
zyDhcpRelayVlanRelayOption82Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayOption82Profile.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayOption82Profile.setDescription('Name of DHCP option 82 profile.')
zyDhcpRelayVlanRelayMaxNumberOfOption82VlanPort = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayMaxNumberOfOption82VlanPort.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayMaxNumberOfOption82VlanPort.setDescription('The maximum number of DHCP VLAN relay Option82 VLAN port entries that can be created.')
zyxelDhcpRelayVlanRelayOption82VlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 6), )
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayOption82VlanPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayOption82VlanPortTable.setDescription('The table contains DHCP VLAN relay Option82 VLAN port configuration.')
zyxelDhcpRelayVlanRelayOption82VlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 6, 1), ).setIndexNames((0, "ZYXEL-DHCP-RELAY-MIB", "zyDhcpRelayVlanRelayRemoteServerServeVid"), (0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayOption82VlanPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpRelayVlanRelayOption82VlanPortEntry.setDescription('An entry contains DHCP VLAN relay Option82 VLAN port configuration. ')
zyDhcpRelayVlanRelayOption82VlanPortProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 18, 1, 2, 6, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayOption82VlanPortProfile.setStatus('current')
if mibBuilder.loadTexts: zyDhcpRelayVlanRelayOption82VlanPortProfile.setDescription('DHCP option 82 profile in specified VLAN and port.')
mibBuilder.exportSymbols("ZYXEL-DHCP-RELAY-MIB", zyxelDhcpRelayVlanRelayTable=zyxelDhcpRelayVlanRelayTable, zyDhcpRelayVlanRelayRemoteServerIpAddress=zyDhcpRelayVlanRelayRemoteServerIpAddress, zyDhcpRelayVlanRelayOption82Profile=zyDhcpRelayVlanRelayOption82Profile, zyDhcpRelayGlobalRelayState=zyDhcpRelayGlobalRelayState, zyxelDhcpRelayVlanRelay=zyxelDhcpRelayVlanRelay, PYSNMP_MODULE_ID=zyxelDhcpRelay, zyDhcpRelayVlanRelayMaxNumberOfOption82VlanPort=zyDhcpRelayVlanRelayMaxNumberOfOption82VlanPort, zyxelDhcpRelayGlobalRelay=zyxelDhcpRelayGlobalRelay, zyDhcpRelayVlanRelayRemoteServerMaxNumberOfServers=zyDhcpRelayVlanRelayRemoteServerMaxNumberOfServers, zyxelDhcpRelayVlanRelayRemoteServerTable=zyxelDhcpRelayVlanRelayRemoteServerTable, zyDhcpRelayGlobalRelayRemoteServerIpAddress=zyDhcpRelayGlobalRelayRemoteServerIpAddress, zyDhcpRelayGlobalRelayRemoteServerRowStatus=zyDhcpRelayGlobalRelayRemoteServerRowStatus, zyxelDhcpRelay=zyxelDhcpRelay, zyDhcpRelayVlanRelayOption82VlanPortProfile=zyDhcpRelayVlanRelayOption82VlanPortProfile, zyxelDhcpRelayGlobalRelayOption82PortEntry=zyxelDhcpRelayGlobalRelayOption82PortEntry, zyDhcpRelayVlanRelayMaxNumberOfRelays=zyDhcpRelayVlanRelayMaxNumberOfRelays, zyDhcpRelayGlobalRelayRemoteServerMaxNumberOfServers=zyDhcpRelayGlobalRelayRemoteServerMaxNumberOfServers, zyDhcpRelayVlanRelayRemoteServerServeVid=zyDhcpRelayVlanRelayRemoteServerServeVid, zyxelDhcpRelayVlanRelayOption82VlanPortTable=zyxelDhcpRelayVlanRelayOption82VlanPortTable, zyDhcpRelayVlanRelayRemoteServerRowStatus=zyDhcpRelayVlanRelayRemoteServerRowStatus, zyxelDhcpRelayVlanRelayRemoteServerEntry=zyxelDhcpRelayVlanRelayRemoteServerEntry, zyxelDhcpRelayVlanRelayOption82VlanPortEntry=zyxelDhcpRelayVlanRelayOption82VlanPortEntry, zyDhcpRelayGlobalRelayOption82PortProfile=zyDhcpRelayGlobalRelayOption82PortProfile, zyxelDhcpRelayGlobalRelayOption82PortTable=zyxelDhcpRelayGlobalRelayOption82PortTable, zyDhcpRelayGlobalRelayOption82Profile=zyDhcpRelayGlobalRelayOption82Profile, zyDhcpRelayGlobalRelayMaxNumberOfOption82Port=zyDhcpRelayGlobalRelayMaxNumberOfOption82Port, zyxelDhcpRelayVlanRelayEntry=zyxelDhcpRelayVlanRelayEntry, zyxelDhcpRelayGlobalRelayRemoteServerEntry=zyxelDhcpRelayGlobalRelayRemoteServerEntry, zyxelDhcpRelaySetup=zyxelDhcpRelaySetup, zyxelDhcpRelayGlobalRelayRemoteServerTable=zyxelDhcpRelayGlobalRelayRemoteServerTable)
