#
# PySNMP MIB module TPLINK-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:26:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, Bits, Counter32, IpAddress, MibIdentifier, Counter64, Gauge32, Integer32, ModuleIdentity, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "Bits", "Counter32", "IpAddress", "MibIdentifier", "Counter64", "Gauge32", "Integer32", "ModuleIdentity", "Unsigned32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkSyslogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 24))
tplinkSyslogMIB.setRevisions(('2012-11-29 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkSyslogMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkSyslogMIB.setLastUpdated('201211290000Z')
if mibBuilder.loadTexts: tplinkSyslogMIB.setOrganization('TP-LINK')
if mibBuilder.loadTexts: tplinkSyslogMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkSyslogMIB.setDescription('This MIB module contain a collection of managed objects that apply to network devices with Syslog function.')
tplinkSyslogMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1))
tplinkSyslogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 2))
class MessageLevelType(TextualConvention, Integer32):
    description = 'Specify severity level of message.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("informational", 6), ("debug", 7))

tpSyslogBuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 1))
tpSyslogBufferSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 1, 1), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogBufferSeverity.setStatus('current')
if mibBuilder.loadTexts: tpSyslogBufferSeverity.setDescription('Select the severity of information to be stored to System Log Buffer.')
tpSyslogBufferState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogBufferState.setStatus('current')
if mibBuilder.loadTexts: tpSyslogBufferState.setDescription('Select Enable/Disable System Log Buffer on the Switch.')
tpSyslogConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 2))
tpSyslogConsoleSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 2, 1), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogConsoleSeverity.setStatus('current')
if mibBuilder.loadTexts: tpSyslogConsoleSeverity.setDescription('Select the severity of information to be stored to System Log Console.')
tpSyslogConsoleState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogConsoleState.setStatus('current')
if mibBuilder.loadTexts: tpSyslogConsoleState.setDescription('Select Enable/Disable System Log Console on the Switch.')
tpSyslogFlash = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 3))
tpSyslogFlashSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 3, 1), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogFlashSeverity.setStatus('current')
if mibBuilder.loadTexts: tpSyslogFlashSeverity.setDescription('Select the severity of information to be stored to System Log Flash.')
tpSyslogFlashState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogFlashState.setStatus('current')
if mibBuilder.loadTexts: tpSyslogFlashState.setDescription('Select Enable/Disable System Log Flash on the Switch.')
tpSyslogFlashSyncFrequency = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogFlashSyncFrequency.setStatus('current')
if mibBuilder.loadTexts: tpSyslogFlashSyncFrequency.setDescription('Specify the frequency of information to be synchronized to System Log Flash.')
tpSyslogMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 4))
tpSyslogMonitorSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 4, 1), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogMonitorSeverity.setStatus('current')
if mibBuilder.loadTexts: tpSyslogMonitorSeverity.setDescription('Select the severity of information to be stored to System Log Monitor.')
tpSyslogMonitorState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogMonitorState.setStatus('current')
if mibBuilder.loadTexts: tpSyslogMonitorState.setDescription('Select Enable/Disable System Log Monitor on the Switch.')
tpSyslogHostTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5), )
if mibBuilder.loadTexts: tpSyslogHostTable.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostTable.setDescription('This table contain System Log Host information.')
tpSyslogHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5, 1), ).setIndexNames((0, "TPLINK-SYSLOG-MIB", "tpSyslogHostIndex"))
if mibBuilder.loadTexts: tpSyslogHostEntry.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostEntry.setDescription('Configuration of System Log Host.')
tpSyslogHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSyslogHostIndex.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostIndex.setDescription('The index of System Log Host entry ,and is unique.')
tpSyslogHostIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogHostIPAddress.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostIPAddress.setDescription('Specifies the IP address of the System Log Host.')
tpSyslogHostSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5, 1, 3), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogHostSeverity.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostSeverity.setDescription('Select the severity of information to be stored to System Log Host.')
tpSyslogHostState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 24, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSyslogHostState.setStatus('current')
if mibBuilder.loadTexts: tpSyslogHostState.setDescription('Select Enable/Disable System Log Host on the Switch.')
mibBuilder.exportSymbols("TPLINK-SYSLOG-MIB", MessageLevelType=MessageLevelType, tpSyslogHostState=tpSyslogHostState, tpSyslogMonitorState=tpSyslogMonitorState, tpSyslogFlashState=tpSyslogFlashState, tpSyslogConsoleState=tpSyslogConsoleState, PYSNMP_MODULE_ID=tplinkSyslogMIB, tpSyslogConsole=tpSyslogConsole, tpSyslogHostSeverity=tpSyslogHostSeverity, tpSyslogBuffer=tpSyslogBuffer, tpSyslogFlashSeverity=tpSyslogFlashSeverity, tplinkSyslogMIB=tplinkSyslogMIB, tpSyslogMonitor=tpSyslogMonitor, tpSyslogHostIndex=tpSyslogHostIndex, tpSyslogHostEntry=tpSyslogHostEntry, tpSyslogMonitorSeverity=tpSyslogMonitorSeverity, tpSyslogFlashSyncFrequency=tpSyslogFlashSyncFrequency, tplinkSyslogMIBObjects=tplinkSyslogMIBObjects, tplinkSyslogNotifications=tplinkSyslogNotifications, tpSyslogHostIPAddress=tpSyslogHostIPAddress, tpSyslogFlash=tpSyslogFlash, tpSyslogHostTable=tpSyslogHostTable, tpSyslogBufferSeverity=tpSyslogBufferSeverity, tpSyslogConsoleSeverity=tpSyslogConsoleSeverity, tpSyslogBufferState=tpSyslogBufferState)
