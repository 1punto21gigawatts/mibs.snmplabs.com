#
# PySNMP MIB module LANCOM-1711-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANCOM-1711-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:05:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysDescr")
iso, Counter32, Unsigned32, IpAddress, ModuleIdentity, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, Bits, NotificationType, MibIdentifier, enterprises, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Unsigned32", "IpAddress", "ModuleIdentity", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "Bits", "NotificationType", "MibIdentifier", "enterprises", "TimeTicks")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
lancom_1711_plus = ModuleIdentity((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712)).setLabel("lancom-1711-plus")
lancom_1711_plus.setRevisions(('2009-08-12 17:08',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lancom_1711_plus.setRevisionsDescriptions(('Auto-Generated on Apr 04, 2010',))
if mibBuilder.loadTexts: lancom_1711_plus.setLastUpdated('200908121708Z')
if mibBuilder.loadTexts: lancom_1711_plus.setOrganization('LANCOM Systems')
if mibBuilder.loadTexts: lancom_1711_plus.setContactInfo('http://www.lancom-systems.de')
if mibBuilder.loadTexts: lancom_1711_plus.setDescription('MIB Definitions for LANCOM 1711+ VPN')
sta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1))
set = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2))
fir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3))
oth = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4))
staOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staOper.setStatus('current')
if mibBuilder.loadTexts: staOper.setDescription('Operating-Time')
staWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4))
staWanBytetransTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1), )
if mibBuilder.loadTexts: staWanBytetransTable.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransTable.setDescription('Byte-Transport')
staWanBytetransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanBytetransIfc"))
if mibBuilder.loadTexts: staWanBytetransEntry.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransEntry.setDescription('entry in table')
staWanBytetransIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransIfc.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransIfc.setDescription('Ifc')
staWanBytetransCrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCrx.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransCrx.setDescription('CRx-Bytes')
staWanBytetransRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransRxb.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransRxb.setDescription('Rx-Bytes')
staWanBytetransTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransTxb.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransTxb.setDescription('Tx-Bytes')
staWanBytetransCtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCtx.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransCtx.setDescription('CTx-Bytes')
staWanPackettraTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2), )
if mibBuilder.loadTexts: staWanPackettraTable.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTable.setDescription('Packet-Transport')
staWanPackettraEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanPackettraIfc"))
if mibBuilder.loadTexts: staWanPackettraEntry.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraEntry.setDescription('entry in table')
staWanPackettraIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraIfc.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraIfc.setDescription('Ifc')
staWanPackettraRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraRx.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraRx.setDescription('Rx')
staWanPackettraTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxt.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxt.setDescription('Tx-total')
staWanPackettraTxn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxn.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxn.setDescription('Tx-normal')
staWanPackettraTxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxr.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxr.setDescription('Tx-reliable')
staWanPackettraTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxu.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxu.setDescription('Tx-urgent')
staWanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3), )
if mibBuilder.loadTexts: staWanErrorsTable.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsTable.setDescription('Errors')
staWanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanErrorsIfc"))
if mibBuilder.loadTexts: staWanErrorsEntry.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsEntry.setDescription('entry in table')
staWanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsIfc.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsIfc.setDescription('Ifc')
staWanErrorsRxl1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl1.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl1.setDescription('Rx-l1-Error')
staWanErrorsRxl2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl2.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl2.setDescription('Rx-l2-Error')
staWanErrorsRxl3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl3.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl3.setDescription('Rx-l3-Error')
staWanErrorsStac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsStac.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsStac.setDescription('Stack-Error')
staWanErrorsTxer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsTxer.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsTxer.setDescription('Tx-Error')
staWanWantxdisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWantxdisc.setStatus('current')
if mibBuilder.loadTexts: staWanWantxdisc.setDescription('WAN-Tx-Discarded')
staWanWanheappa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanheappa.setStatus('current')
if mibBuilder.loadTexts: staWanWanheappa.setDescription('WAN-Heap-Packets')
staWanWanqueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuep.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuep.setDescription('WAN-Queue-Packets')
staWanWanqueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuee.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuee.setDescription('WAN-Queue-Errors')
staWanWanqueuem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuem.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuem.setDescription('WAN-Queue-Mgt-Drop')
staWanThroughpuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8), )
if mibBuilder.loadTexts: staWanThroughpuTable.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTable.setDescription('Throughput')
staWanThroughpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanThroughpuIfc"))
if mibBuilder.loadTexts: staWanThroughpuEntry.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuEntry.setDescription('entry in table')
staWanThroughpuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuIfc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuIfc.setDescription('Ifc')
staWanThroughpuRxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuRxsc.setDescription('Rx/s current')
staWanThroughpuTxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTxsc.setDescription('Tx/s current')
staWanThroughpuRxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsa.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuRxsa.setDescription('Rx/s average')
staWanThroughpuTxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsa.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTxsa.setDescription('Tx/s average')
staWanDeleteval = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanDeleteval.setStatus('current')
if mibBuilder.loadTexts: staWanDeleteval.setDescription('Delete-Values')
staWanConnectio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanConnectio.setStatus('current')
if mibBuilder.loadTexts: staWanConnectio.setDescription('Connections')
staWanMtuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11), )
if mibBuilder.loadTexts: staWanMtuTable.setStatus('current')
if mibBuilder.loadTexts: staWanMtuTable.setDescription('MTU')
staWanMtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanMtuPee"))
if mibBuilder.loadTexts: staWanMtuEntry.setStatus('current')
if mibBuilder.loadTexts: staWanMtuEntry.setDescription('entry in table')
staWanMtuPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuPee.setStatus('current')
if mibBuilder.loadTexts: staWanMtuPee.setDescription('Peer')
staWanMtuMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuMtu.setStatus('current')
if mibBuilder.loadTexts: staWanMtuMtu.setDescription('MTU')
staWanActions = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20))
staWanActionsActTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1), )
if mibBuilder.loadTexts: staWanActionsActTable.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActTable.setDescription('Action-Table')
staWanActionsActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanActionsActTim"))
if mibBuilder.loadTexts: staWanActionsActEntry.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActEntry.setDescription('entry in table')
staWanActionsActTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActTim.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActTim.setDescription('Time')
staWanActionsActAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActAct.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActAct.setDescription('Action')
staWanActionsActRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActRes.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActRes.setDescription('Result')
staWanActionsLocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2), )
if mibBuilder.loadTexts: staWanActionsLocTable.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocTable.setDescription('Lock-Table')
staWanActionsLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staWanActionsLocInd"))
if mibBuilder.loadTexts: staWanActionsLocEntry.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocEntry.setDescription('entry in table')
staWanActionsLocInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocInd.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocInd.setDescription('Index')
staWanActionsLocRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocRem.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocRem.setDescription('Remaining-Locktime')
staLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5))
staLanLanh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanh.setStatus('current')
if mibBuilder.loadTexts: staLanLanh.setDescription('LAN-Heap-Packets')
staLanDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLanDele.setStatus('current')
if mibBuilder.loadTexts: staLanDele.setDescription('Delete-Values')
staLanLanq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanq.setStatus('current')
if mibBuilder.loadTexts: staLanLanq.setDescription('LAN-Queue-Mgt-Drop')
staLanInteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51), )
if mibBuilder.loadTexts: staLanInteTable.setStatus('current')
if mibBuilder.loadTexts: staLanInteTable.setDescription('Interfaces')
staLanInteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanInteIfc"))
if mibBuilder.loadTexts: staLanInteEntry.setStatus('current')
if mibBuilder.loadTexts: staLanInteEntry.setDescription('entry in table')
staLanInteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteIfc.setStatus('current')
if mibBuilder.loadTexts: staLanInteIfc.setDescription('Ifc')
staLanInteQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteQue.setStatus('current')
if mibBuilder.loadTexts: staLanInteQue.setDescription('Queue-Packets')
staLanByteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52), )
if mibBuilder.loadTexts: staLanByteTable.setStatus('current')
if mibBuilder.loadTexts: staLanByteTable.setDescription('Byte-Transport')
staLanByteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanByteIfc"))
if mibBuilder.loadTexts: staLanByteEntry.setStatus('current')
if mibBuilder.loadTexts: staLanByteEntry.setDescription('entry in table')
staLanByteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteIfc.setStatus('current')
if mibBuilder.loadTexts: staLanByteIfc.setDescription('Ifc')
staLanByteTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteTxbyte.setStatus('current')
if mibBuilder.loadTexts: staLanByteTxbyte.setDescription('Tx-Bytes')
staLanByteRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteRxbyte.setStatus('current')
if mibBuilder.loadTexts: staLanByteRxbyte.setDescription('Rx-Bytes')
staLanByteThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteThroug.setStatus('current')
if mibBuilder.loadTexts: staLanByteThroug.setDescription('Throughput')
staLanByteMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteMaxthr.setStatus('current')
if mibBuilder.loadTexts: staLanByteMaxthr.setDescription('Max.-Throughput')
staLanByteBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytest.setStatus('current')
if mibBuilder.loadTexts: staLanByteBytest.setDescription('Bytes-Throughput')
staLanByteBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytesm.setStatus('current')
if mibBuilder.loadTexts: staLanByteBytesm.setDescription('Bytes-Max.-Throughput')
staLanPackTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53), )
if mibBuilder.loadTexts: staLanPackTable.setStatus('current')
if mibBuilder.loadTexts: staLanPackTable.setDescription('Packet-Transport')
staLanPackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanPackIfc"))
if mibBuilder.loadTexts: staLanPackEntry.setStatus('current')
if mibBuilder.loadTexts: staLanPackEntry.setDescription('entry in table')
staLanPackIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackIfc.setStatus('current')
if mibBuilder.loadTexts: staLanPackIfc.setDescription('Ifc')
staLanPackRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxp.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxp.setDescription('Rx-Packets')
staLanPackTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxp.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxp.setDescription('Tx-Packets')
staLanPackRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxb.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxb.setDescription('Rx-Broadcasts')
staLanPackRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxm.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxm.setDescription('Rx-Multicasts')
staLanPackRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxu.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxu.setDescription('Rx-Unicasts')
staLanPackTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxb.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxb.setDescription('Tx-Broadcasts')
staLanPackTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxm.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxm.setDescription('Tx-Multicasts')
staLanPackTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxu.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxu.setDescription('Tx-Unicasts')
staLanErroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54), )
if mibBuilder.loadTexts: staLanErroTable.setStatus('current')
if mibBuilder.loadTexts: staLanErroTable.setDescription('Errors')
staLanErroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLanErroIfc"))
if mibBuilder.loadTexts: staLanErroEntry.setStatus('current')
if mibBuilder.loadTexts: staLanErroEntry.setDescription('entry in table')
staLanErroIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroIfc.setStatus('current')
if mibBuilder.loadTexts: staLanErroIfc.setDescription('Ifc')
staLanErroRxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxerro.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxerro.setDescription('Rx-Errors')
staLanErroTxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxerro.setStatus('current')
if mibBuilder.loadTexts: staLanErroTxerro.setDescription('Tx-Errors')
staLanErroStacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroStacke.setStatus('current')
if mibBuilder.loadTexts: staLanErroStacke.setDescription('Stack-Errors')
staLanErroNicerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroNicerr.setStatus('current')
if mibBuilder.loadTexts: staLanErroNicerr.setDescription('NIC-Errors')
staLanErroQueuee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroQueuee.setStatus('current')
if mibBuilder.loadTexts: staLanErroQueuee.setDescription('Queue-Errors')
staLanErroRxcrce = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxcrce.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxcrce.setDescription('Rx-CRC-Errors')
staLanErroCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroCollis.setStatus('current')
if mibBuilder.loadTexts: staLanErroCollis.setDescription('Collisions')
staLanErroSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroSingle.setStatus('current')
if mibBuilder.loadTexts: staLanErroSingle.setDescription('Single-Collisions')
staLanErroMultip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroMultip.setStatus('current')
if mibBuilder.loadTexts: staLanErroMultip.setDescription('Multiple-Collisions')
staLanErroLateco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroLateco.setStatus('current')
if mibBuilder.loadTexts: staLanErroLateco.setDescription('Late-Collisions')
staLanErroExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroExcess.setStatus('current')
if mibBuilder.loadTexts: staLanErroExcess.setDescription('Excessive-Collisions')
staLanErroRxalig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxalig.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxalig.setDescription('Rx-Align-Errors')
staLanErroRxtoos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxtoos.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxtoos.setDescription('Rx-Too-Short')
staLanErroRxtool = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxtool.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxtool.setDescription('Rx-Too-Long')
staLanErroTxcarr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxcarr.setStatus('current')
if mibBuilder.loadTexts: staLanErroTxcarr.setDescription('Tx-Carrier')
staLanErroTxdefe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxdefe.setStatus('current')
if mibBuilder.loadTexts: staLanErroTxdefe.setDescription('Tx-Deferred')
staPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6))
staPppPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1), )
if mibBuilder.loadTexts: staPppPppTable.setStatus('current')
if mibBuilder.loadTexts: staPppPppTable.setDescription('PPP-Phases')
staPppPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppPppIfc"))
if mibBuilder.loadTexts: staPppPppEntry.setStatus('current')
if mibBuilder.loadTexts: staPppPppEntry.setDescription('entry in table')
staPppPppIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIfc.setStatus('current')
if mibBuilder.loadTexts: staPppPppIfc.setDescription('Ifc')
staPppPppPha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dead", 1), ("establish", 2), ("terminate", 3), ("authenticate", 4), ("callback", 5), ("network", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppPha.setStatus('current')
if mibBuilder.loadTexts: staPppPppPha.setDescription('Phase to')
staPppPppLcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppLcp.setStatus('current')
if mibBuilder.loadTexts: staPppPppLcp.setDescription('LCP')
staPppPppIpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIpc.setStatus('current')
if mibBuilder.loadTexts: staPppPppIpc.setDescription('IPCP')
staPppPppCcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppCcp.setStatus('current')
if mibBuilder.loadTexts: staPppPppCcp.setDescription('CCP')
staPppPppBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppBac.setStatus('current')
if mibBuilder.loadTexts: staPppPppBac.setDescription('BACP')
staPppLcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2))
staPppLcpRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxerrors.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxerrors.setDescription('Rx-Errors')
staPppLcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setDescription('Rx-Discarded')
staPppLcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setDescription('Rx-Config-Request')
staPppLcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigack.setDescription('Rx-Config-Ack.')
staPppLcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfignak.setDescription('Rx-Config-Nak.')
staPppLcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setDescription('Rx-Config-Reject')
staPppLcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxterminater.setDescription('Rx-Terminate-Request')
staPppLcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppLcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxcodereject.setDescription('Rx-Code-Reject')
staPppLcpRxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setDescription('Rx-Protocol-Reject')
staPppLcpRxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreques.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxechoreques.setDescription('Rx-Echo-Request')
staPppLcpRxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreply.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxechoreply.setDescription('Rx-Echo-Reply')
staPppLcpRxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setDescription('Rx-Discard-Request')
staPppLcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setDescription('Tx-Config-Request')
staPppLcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigack.setDescription('Tx-Config-Ack.')
staPppLcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfignak.setDescription('Tx-Config-Nak.')
staPppLcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setDescription('Tx-Config-Reject')
staPppLcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxterminater.setDescription('Tx-Terminate-Request')
staPppLcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppLcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxcodereject.setDescription('Tx-Code-Reject')
staPppLcpTxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setDescription('Tx-Protocol-Reject')
staPppLcpTxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreques.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxechoreques.setDescription('Tx-Echo-Request')
staPppLcpTxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreply.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxechoreply.setDescription('Tx-Echo-Reply')
staPppLcpTxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setDescription('Tx-Discard-Request')
staPppLcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppLcpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppLcpDeletevalues.setDescription('Delete-Values')
staPppPap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3))
staPppPapRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxdis.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxdis.setDescription('Rx-Discarded')
staPppPapRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxreq.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxreq.setDescription('Rx-Request')
staPppPapRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxsuc.setDescription('Rx-Success')
staPppPapRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxfai.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxfai.setDescription('Rx-Failure')
staPppPapTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxret.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxret.setDescription('Tx-Retry')
staPppPapTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxreq.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxreq.setDescription('Tx-Request')
staPppPapTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxsuc.setDescription('Tx-Success')
staPppPapTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxfai.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxfai.setDescription('Tx-Failure')
staPppPapDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppPapDelet.setStatus('current')
if mibBuilder.loadTexts: staPppPapDelet.setDescription('Delete-Values')
staPppCha = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4))
staPppChaRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxdis.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxdis.setDescription('Rx-Discarded')
staPppChaRxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxcha.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxcha.setDescription('Rx-Challenge')
staPppChaRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxres.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxres.setDescription('Rx-Response')
staPppChaRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxsuc.setDescription('Rx-Success')
staPppChaRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxfai.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxfai.setDescription('Rx-Failure')
staPppChaTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxret.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxret.setDescription('Tx-Retry')
staPppChaTxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxcha.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxcha.setDescription('Tx-Challenge')
staPppChaTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxres.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxres.setDescription('Tx-Response')
staPppChaTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxsuc.setDescription('Tx-Success')
staPppChaTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxfai.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxfai.setDescription('Tx-Failure')
staPppChaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppChaDelet.setStatus('current')
if mibBuilder.loadTexts: staPppChaDelet.setDescription('Delete-Values')
staPppCbc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7))
staPppCbcRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxdis.setStatus('current')
if mibBuilder.loadTexts: staPppCbcRxdis.setDescription('Rx-Discarded')
staPppCbcRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxreq.setStatus('current')
if mibBuilder.loadTexts: staPppCbcRxreq.setDescription('Rx-Request')
staPppCbcRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxres.setStatus('current')
if mibBuilder.loadTexts: staPppCbcRxres.setDescription('Rx-Response')
staPppCbcRxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcRxack.setStatus('current')
if mibBuilder.loadTexts: staPppCbcRxack.setDescription('Rx-Acknowledge')
staPppCbcTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxreq.setStatus('current')
if mibBuilder.loadTexts: staPppCbcTxreq.setDescription('Tx-Request')
staPppCbcTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxres.setStatus('current')
if mibBuilder.loadTexts: staPppCbcTxres.setDescription('Tx-Response')
staPppCbcTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCbcTxack.setStatus('current')
if mibBuilder.loadTexts: staPppCbcTxack.setDescription('Tx-Acknowledge')
staPppCbcDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCbcDelet.setStatus('current')
if mibBuilder.loadTexts: staPppCbcDelet.setDescription('Delete-Values')
staPppIpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6))
staPppIpcRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setDescription('Rx-Discarded')
staPppIpcRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setDescription('Rx-Config-Request')
staPppIpcRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigack.setDescription('Rx-Config-Ack.')
staPppIpcRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfignak.setDescription('Rx-Config-Nak.')
staPppIpcRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setDescription('Rx-Config-Reject')
staPppIpcRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxterminater.setDescription('Rx-Terminate-Request')
staPppIpcRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppIpcRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxcodereject.setDescription('Rx-Code-Reject')
staPppIpcTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setDescription('Tx-Config-Request')
staPppIpcTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigack.setDescription('Tx-Config-Ack.')
staPppIpcTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfignak.setDescription('Tx-Config-Nak.')
staPppIpcTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setDescription('Tx-Config-Reject')
staPppIpcTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxterminater.setDescription('Tx-Terminate-Request')
staPppIpcTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppIpcTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxcodereject.setDescription('Tx-Code-Reject')
staPppIpcDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppIpcDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppIpcDeletevalues.setDescription('Delete-Values')
staPppCcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10))
staPppCcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setDescription('Rx-Discarded')
staPppCcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setDescription('Rx-Config-Request')
staPppCcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigack.setDescription('Rx-Config-Ack.')
staPppCcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfignak.setDescription('Rx-Config-Nak.')
staPppCcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setDescription('Rx-Config-Reject')
staPppCcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxterminater.setDescription('Rx-Terminate-Request')
staPppCcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppCcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxcodereject.setDescription('Rx-Code-Reject')
staPppCcpRxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetreque.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxresetreque.setDescription('Rx-Reset-Request')
staPppCcpRxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxresetack.setDescription('Rx-Reset-Ack')
staPppCcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setDescription('Tx-Config-Request')
staPppCcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigack.setDescription('Tx-Config-Ack.')
staPppCcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfignak.setDescription('Tx-Config-Nak.')
staPppCcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setDescription('Tx-Config-Reject')
staPppCcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxterminater.setDescription('Tx-Terminate-Request')
staPppCcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppCcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxcodereject.setDescription('Tx-Code-Reject')
staPppCcpTxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetreque.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxresetreque.setDescription('Tx-Reset-Request')
staPppCcpTxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxresetack.setDescription('Tx-Reset-Ack')
staPppCcpCompressione = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpCompressione.setStatus('current')
if mibBuilder.loadTexts: staPppCcpCompressione.setDescription('Compression-Errors')
staPppCcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCcpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppCcpDeletevalues.setDescription('Delete-Values')
staPppMl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11))
staPppMlBundlec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlBundlec.setStatus('current')
if mibBuilder.loadTexts: staPppMlBundlec.setDescription('Bundle-Connections')
staPppMlRxseqlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxseqlo.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxseqlo.setDescription('Rx-Seq-Lost')
staPppMlRxseqre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxseqre.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxseqre.setDescription('Rx-Seq-Repeat')
staPppMlRxmrrue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxmrrue.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxmrrue.setDescription('Rx-Mrru-Exceeded')
staPppMlRxheade = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxheade.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxheade.setDescription('Rx-Header-Error')
staPppMlRxdisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxdisca.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxdisca.setDescription('Rx-Discarded')
staPppMlRxfrags = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfrags.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxfrags.setDescription('Rx-Frag-Start')
staPppMlRxfragm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfragm.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxfragm.setDescription('Rx-Frag-Mid')
staPppMlRxfrage = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxfrage.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxfrage.setDescription('Rx-Frag-End')
staPppMlRxnotfr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppMlRxnotfr.setStatus('current')
if mibBuilder.loadTexts: staPppMlRxnotfr.setDescription('Rx-not-Fragmented')
staPppMlDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppMlDeletev.setStatus('current')
if mibBuilder.loadTexts: staPppMlDeletev.setDescription('Delete-Values')
staPppBac = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12))
staPppBacRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxerrors.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxerrors.setDescription('Rx-Errors')
staPppBacRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxdiscarded.setDescription('Rx-Discarded')
staPppBacRxcallrequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallrequest.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxcallrequest.setDescription('Rx-Call-Request')
staPppBacRxcallrespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallrespons.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxcallrespons.setDescription('Rx-Call-Response')
staPppBacRxcallbackreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallbackreq.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxcallbackreq.setDescription('Rx-Callback-Request')
staPppBacRxcallbackres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxcallbackres.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxcallbackres.setDescription('Rx-Callback-Response')
staPppBacRxlinkdropreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxlinkdropreq.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxlinkdropreq.setDescription('Rx-Link-Drop-Request')
staPppBacRxlinkdropres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxlinkdropres.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxlinkdropres.setDescription('Rx-Link-Drop-Response')
staPppBacRxstatusindic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxstatusindic.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxstatusindic.setDescription('Rx-Status-Indication')
staPppBacRxstatusrespo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacRxstatusrespo.setStatus('current')
if mibBuilder.loadTexts: staPppBacRxstatusrespo.setDescription('Rx-Status-Response')
staPppBacTxcallrequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallrequest.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxcallrequest.setDescription('Tx-Call-Request')
staPppBacTxcallrespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallrespons.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxcallrespons.setDescription('Tx-Call-Response')
staPppBacTxcallbackreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallbackreq.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxcallbackreq.setDescription('Tx-Callback-Request')
staPppBacTxcallbackres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxcallbackres.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxcallbackres.setDescription('Tx-Callback-Response')
staPppBacTxlinkdropreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxlinkdropreq.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxlinkdropreq.setDescription('Tx-Link-Drop-Request')
staPppBacTxlinkdropres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxlinkdropres.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxlinkdropres.setDescription('Tx-Link-Drop-Response')
staPppBacTxstatusindic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxstatusindic.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxstatusindic.setDescription('Tx-Status-Indication')
staPppBacTxstatusrespo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppBacTxstatusrespo.setStatus('current')
if mibBuilder.loadTexts: staPppBacTxstatusrespo.setDescription('Tx-Status-Response')
staPppBacDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppBacDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppBacDeletevalues.setDescription('Delete-Values')
staPppRxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8))
staPppRxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1), )
if mibBuilder.loadTexts: staPppRxoLcpTable.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpTable.setDescription('LCP')
staPppRxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppRxoLcpIfc"))
if mibBuilder.loadTexts: staPppRxoLcpEntry.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpEntry.setDescription('entry in table')
staPppRxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpIfc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpIfc.setDescription('Ifc')
staPppRxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMru.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpMru.setDescription('MRU')
staPppRxoLcpAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAcc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpAcc.setDescription('ACCM')
staPppRxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 32, 16, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("ms-chapv2", 32), ("ms-chap", 16), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAut.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpAut.setDescription('Authent.request')
staPppRxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMag.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpMag.setDescription('Magic-Num')
staPppRxoLcpPfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpPfc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpPfc.setDescription('PFC')
staPppRxoLcpAcf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAcf.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpAcf.setDescription('ACFC')
staPppRxoLcpCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("none", 255), ("lcp", 1), ("lcp", 2), ("lcp", 3), ("lcp", 4), ("lcp", 5), ("cbcp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpCal.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpCal.setDescription('Call-back')
staPppRxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3), )
if mibBuilder.loadTexts: staPppRxoIpcTable.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcTable.setDescription('IPCP')
staPppRxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppRxoIpcIfc"))
if mibBuilder.loadTexts: staPppRxoIpcEntry.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcEntry.setDescription('entry in table')
staPppRxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIfc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcIfc.setDescription('Ifc')
staPppRxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setDescription('IP-Address')
staPppRxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setDescription('DNS-Default')
staPppRxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setDescription('DNS-Backup')
staPppRxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setDescription('NBNS-Default')
staPppRxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setDescription('NBNS-Backup')
staPppTxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9))
staPppTxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1), )
if mibBuilder.loadTexts: staPppTxoLcpTable.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpTable.setDescription('LCP')
staPppTxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppTxoLcpIfc"))
if mibBuilder.loadTexts: staPppTxoLcpEntry.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpEntry.setDescription('entry in table')
staPppTxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpIfc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpIfc.setDescription('Ifc')
staPppTxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMru.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpMru.setDescription('MRU')
staPppTxoLcpAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAcc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpAcc.setDescription('ACCM')
staPppTxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 32, 16, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("ms-chapv2", 32), ("ms-chap", 16), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAut.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpAut.setDescription('Authent.request')
staPppTxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMag.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpMag.setDescription('Magic-Num')
staPppTxoLcpPfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpPfc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpPfc.setDescription('PFC')
staPppTxoLcpAcf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAcf.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpAcf.setDescription('ACFC')
staPppTxoLcpCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("none", 255), ("lcp", 1), ("lcp", 2), ("lcp", 3), ("lcp", 4), ("lcp", 5), ("cbcp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpCal.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpCal.setDescription('Call-back')
staPppTxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3), )
if mibBuilder.loadTexts: staPppTxoIpcTable.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcTable.setDescription('IPCP')
staPppTxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppTxoIpcIfc"))
if mibBuilder.loadTexts: staPppTxoIpcEntry.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcEntry.setDescription('entry in table')
staPppTxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIfc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcIfc.setDescription('Ifc')
staPppTxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setDescription('IP-Address')
staPppTxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setDescription('DNS-Default')
staPppTxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setDescription('DNS-Backup')
staPppTxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setDescription('NBNS-Default')
staPppTxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setDescription('NBNS-Backup')
staPppDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppDel.setStatus('current')
if mibBuilder.loadTexts: staPppDel.setDescription('Delete-Values')
staTcpi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9))
staTcpiArp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1))
staTcpiArpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpLanr.setDescription('LAN-Rx')
staTcpiArpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLant.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpLant.setDescription('LAN-Tx')
staTcpiArpLane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpLane.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpLane.setDescription('LAN-Errors')
staTcpiArpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpWanr.setDescription('WAN-Rx')
staTcpiArpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWant.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpWant.setDescription('WAN-Tx')
staTcpiArpWane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpWane.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpWane.setDescription('WAN-Errors')
staTcpiArpTablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7), )
if mibBuilder.loadTexts: staTcpiArpTablTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablTable.setDescription('Table-ARP')
staTcpiArpTablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiArpTablIpa"))
if mibBuilder.loadTexts: staTcpiArpTablEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablEntry.setDescription('entry in table')
staTcpiArpTablIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablIpa.setDescription('IP-Address')
staTcpiArpTablMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablMac.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablMac.setDescription('MAC-Address')
staTcpiArpTablLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablLas.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablLas.setDescription('Last-access')
staTcpiArpTablCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("wan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablCon.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablCon.setDescription('Connect')
staTcpiArpTablEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablEth.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablEth.setDescription('Ethernet-Port')
staTcpiArpTablVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablVla.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablVla.setDescription('VLAN-ID')
staTcpiArpTablPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiArpTablPee.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpTablPee.setDescription('Peer')
staTcpiArpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiArpDele.setStatus('current')
if mibBuilder.loadTexts: staTcpiArpDele.setDescription('Delete-Values')
staTcpiIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2))
staTcpiIpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanrx.setDescription('LAN-Rx')
staTcpiIpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLantx.setDescription('LAN-Tx')
staTcpiIpLanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanchecksumerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanchecksumerrors.setDescription('LAN-Checksum-Errors')
staTcpiIpLanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanserviceerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanserviceerrors.setDescription('LAN-Service-Errors')
staTcpiIpLanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentationer.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanfragmentationer.setDescription('LAN-Fragmentation-Errors')
staTcpiIpLanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentations.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanfragmentations.setDescription('LAN-Fragmentations')
staTcpiIpLanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLanfragmentationsf.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLanfragmentationsf.setDescription('LAN-Fragmentations-Forced')
staTcpiIpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanrx.setDescription('WAN-Rx')
staTcpiIpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWantx.setDescription('WAN-Tx')
staTcpiIpWanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanchecksumerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanchecksumerrors.setDescription('WAN-Checksum-Errors')
staTcpiIpWanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanserviceerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanserviceerrors.setDescription('WAN-Service-Errors')
staTcpiIpWanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentationer.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanfragmentationer.setDescription('WAN-Fragmentation-Errors')
staTcpiIpWanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentations.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanfragmentations.setDescription('WAN-Fragmentations')
staTcpiIpWanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanfragmentationsf.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanfragmentationsf.setDescription('WAN-Fragmentations-Forced')
staTcpiIpWanrxdisconnect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpWanrxdisconnect.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpWanrxdisconnect.setDescription('WAN-Rx-Disconnect')
staTcpiIpLooperror = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIpLooperror.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpLooperror.setDescription('Loop-Error')
staTcpiIpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiIpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staTcpiIpDeletevalues.setDescription('Delete-Values')
staTcpiIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3))
staTcpiIcmpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpLanr.setDescription('LAN-Rx')
staTcpiIcmpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLant.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpLant.setDescription('LAN-Tx')
staTcpiIcmpLanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLanc.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpLanc.setDescription('LAN-Checksum-Errors')
staTcpiIcmpLans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpLans.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpLans.setDescription('LAN-Service-Errors')
staTcpiIcmpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpWanr.setDescription('WAN-Rx')
staTcpiIcmpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWant.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpWant.setDescription('WAN-Tx')
staTcpiIcmpWanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWanc.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpWanc.setDescription('WAN-Checksum-Errors')
staTcpiIcmpWans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiIcmpWans.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpWans.setDescription('WAN-Service-Errors')
staTcpiIcmpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiIcmpDele.setStatus('current')
if mibBuilder.loadTexts: staTcpiIcmpDele.setDescription('Delete-Values')
staTcpiTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4))
staTcpiTftpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrx.setDescription('LAN-Rx')
staTcpiTftpLanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxr.setDescription('LAN-Rx-Read-Request')
staTcpiTftpLanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxw.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxw.setDescription('LAN-Rx-Write-Request')
staTcpiTftpLanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxd.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxd.setDescription('LAN-Rx-Data')
staTcpiTftpLanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxa.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxa.setDescription('LAN-Rx-Ack.')
staTcpiTftpLanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxo.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxo.setDescription('LAN-Rx-Option-Ack.')
staTcpiTftpLanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxe.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxe.setDescription('LAN-Rx-Errors')
staTcpiTftpLanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLanrxb.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLanrxb.setDescription('LAN-Rx-Bad-Packets')
staTcpiTftpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantx.setDescription('LAN-Tx')
staTcpiTftpLantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxd.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantxd.setDescription('LAN-Tx-Data')
staTcpiTftpLantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxa.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantxa.setDescription('LAN-Tx-Ack.')
staTcpiTftpLantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxo.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantxo.setDescription('LAN-Tx-Option-Ack.')
staTcpiTftpLantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxe.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantxe.setDescription('LAN-Tx-Errors')
staTcpiTftpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLantxr.setDescription('LAN-Tx-Repeats')
staTcpiTftpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpLancon.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpLancon.setDescription('LAN-Connections')
staTcpiTftpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrx.setDescription('WAN-Rx')
staTcpiTftpWanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxr.setDescription('WAN-Rx-Read-Request')
staTcpiTftpWanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxw.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxw.setDescription('WAN-Rx-Write-Request')
staTcpiTftpWanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxd.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxd.setDescription('WAN-Rx-Data')
staTcpiTftpWanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxa.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxa.setDescription('WAN-Rx-Ack.')
staTcpiTftpWanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxo.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxo.setDescription('WAN-Rx-Option-Ack.')
staTcpiTftpWanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxe.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxe.setDescription('WAN-Rx-Errors')
staTcpiTftpWanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWanrxb.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWanrxb.setDescription('WAN-Rx-Bad-Packets')
staTcpiTftpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantx.setDescription('WAN-Tx')
staTcpiTftpWantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxd.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantxd.setDescription('WAN-Tx-Data')
staTcpiTftpWantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxa.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantxa.setDescription('WAN-Tx-Ack.')
staTcpiTftpWantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxo.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantxo.setDescription('WAN-Tx-Option-Ack.')
staTcpiTftpWantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxe.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantxe.setDescription('WAN-Tx-Errors')
staTcpiTftpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWantxr.setDescription('WAN-Tx-Repeats')
staTcpiTftpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTftpWancon.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpWancon.setDescription('WAN-Connections')
staTcpiTftpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiTftpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpiTftpDelete.setDescription('Delete-Values')
staTcpiTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5))
staTcpiTcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLanrx.setDescription('LAN-Rx')
staTcpiTcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLantx.setDescription('LAN-Tx')
staTcpiTcpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLantxr.setDescription('LAN-Tx-Repeats')
staTcpiTcpLanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanche.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLanche.setDescription('LAN-Checksum-Errors')
staTcpiTcpLanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLanser.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLanser.setDescription('LAN-Service-Errors')
staTcpiTcpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpLancon.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpLancon.setDescription('LAN-Connections')
staTcpiTcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWanrx.setDescription('WAN-Rx')
staTcpiTcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWantx.setDescription('WAN-Tx')
staTcpiTcpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWantxr.setDescription('WAN-Tx-Repeats')
staTcpiTcpWanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanche.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWanche.setDescription('WAN-Checksum-Errors')
staTcpiTcpWanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWanser.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWanser.setDescription('WAN-Service-Errors')
staTcpiTcpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiTcpWancon.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpWancon.setDescription('WAN-Connections')
staTcpiTcpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiTcpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpiTcpDelete.setDescription('Delete-Values')
staTcpiDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6))
staTcpiDhcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpLanrx.setDescription('LAN-Rx')
staTcpiDhcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpLantx.setDescription('LAN-Tx')
staTcpiDhcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpWanrx.setDescription('WAN-Rx')
staTcpiDhcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpWantx.setDescription('WAN-Tx')
staTcpiDhcpDisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDisca.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDisca.setDescription('Discard')
staTcpiDhcpRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxdis.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpRxdis.setDescription('Rx-Discover')
staTcpiDhcpRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxreq.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpRxreq.setDescription('Rx-Request')
staTcpiDhcpRxdec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxdec.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpRxdec.setDescription('Rx-Decline')
staTcpiDhcpRxinf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxinf.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpRxinf.setDescription('Rx-Inform')
staTcpiDhcpRxrel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpRxrel.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpRxrel.setDescription('Rx-Release')
staTcpiDhcpTxoff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxoff.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpTxoff.setDescription('Tx-Offer')
staTcpiDhcpTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxack.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpTxack.setDescription('Tx-Ack.')
staTcpiDhcpTxnak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpTxnak.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpTxnak.setDescription('Tx-Nak.')
staTcpiDhcpServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpServe.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpServe.setDescription('Server-Error')
staTcpiDhcpAssig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpAssig.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpAssig.setDescription('Assigned')
staTcpiDhcpMacco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpMacco.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpMacco.setDescription('MAC-Conflicts')
staTcpiDhcpNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20), )
if mibBuilder.loadTexts: staTcpiDhcpNetwoTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoTable.setDescription('Network-list')
staTcpiDhcpNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDhcpNetwoNetworknam"))
if mibBuilder.loadTexts: staTcpiDhcpNetwoEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoEntry.setDescription('entry in table')
staTcpiDhcpNetwoNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetworknam.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetworknam.setDescription('Network-name')
staTcpiDhcpNetwoStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoStartaddre.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoStartaddre.setDescription('Start-Address-Pool')
staTcpiDhcpNetwoEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoEndaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoEndaddress.setDescription('End-Address-Pool')
staTcpiDhcpNetwoNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetmask.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoNetmask.setDescription('Netmask')
staTcpiDhcpNetwoBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcasta.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcasta.setDescription('Broadcast-Address')
staTcpiDhcpNetwoGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoGatewayadd.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoGatewayadd.setDescription('Gateway-Address')
staTcpiDhcpNetwoDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsdefault.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsdefault.setDescription('DNS-Default')
staTcpiDhcpNetwoDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsbackup.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoDnsbackup.setDescription('DNS-Backup')
staTcpiDhcpNetwoNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsdefaul.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsdefaul.setDescription('NBNS-Default')
staTcpiDhcpNetwoNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsbackup.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoNbnsbackup.setDescription('NBNS-Backup')
staTcpiDhcpNetwoServerflag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerflag.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerflag.setDescription('Server-Flags')
staTcpiDhcpNetwoBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcastb.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoBroadcastb.setDescription('Broadcast-Bit')
staTcpiDhcpNetwoServerid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerid.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoServerid.setDescription('Server-ID')
staTcpiDhcpNetwoLanifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoLanifc.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoLanifc.setDescription('LAN-Ifc')
staTcpiDhcpNetwoVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoVlanid.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoVlanid.setDescription('VLAN-ID')
staTcpiDhcpNetwoMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoMasterserv.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoMasterserv.setDescription('Master-Server')
staTcpiDhcpNetwoCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoCache.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoCache.setDescription('Cache')
staTcpiDhcpNetwoAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpNetwoAdaption.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpNetwoAdaption.setDescription('Adaption')
staTcpiDhcpDhcptTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16), )
if mibBuilder.loadTexts: staTcpiDhcpDhcptTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptTable.setDescription('DHCP-Table')
staTcpiDhcpDhcptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptIpa"), (0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptNet"))
if mibBuilder.loadTexts: staTcpiDhcpDhcptEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptEntry.setDescription('entry in table')
staTcpiDhcpDhcptIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptIpa.setDescription('IP-Address')
staTcpiDhcpDhcptMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptMac.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptMac.setDescription('MAC-Address')
staTcpiDhcpDhcptTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptTim.setDescription('Timeout')
staTcpiDhcpDhcptHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptHos.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptHos.setDescription('Hostname')
staTcpiDhcpDhcptTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 5), Bits().clone(namedValues=NamedValues(("new", 15), ("new", 14), ("dyn", 11), ("unkn", 13), ("stat", 12), ("bootp", 10), ("relay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptTyp.setDescription('Type')
staTcpiDhcpDhcptLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptLan.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptLan.setDescription('LAN-Ifc')
staTcpiDhcpDhcptEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptEth.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptEth.setDescription('Ethernet-Port')
staTcpiDhcpDhcptVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptVla.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptVla.setDescription('VLAN-ID')
staTcpiDhcpDhcptNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDhcpDhcptNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDhcptNet.setDescription('Network-name')
staTcpiDhcpDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDhcpDelet.setStatus('current')
if mibBuilder.loadTexts: staTcpiDhcpDelet.setDescription('Delete-Values')
staTcpiDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDele.setStatus('current')
if mibBuilder.loadTexts: staTcpiDele.setDescription('Delete-Values')
staTcpiNetb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8))
staTcpiNetbLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbLanrx.setDescription('LAN-Rx')
staTcpiNetbLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbLantx.setDescription('LAN-Tx')
staTcpiNetbWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbWanrx.setDescription('WAN-Rx')
staTcpiNetbWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbWantx.setDescription('WAN-Tx')
staTcpiNetbRegist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbRegist.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbRegist.setDescription('Registers')
staTcpiNetbConfli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbConfli.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbConfli.setDescription('Conflicts')
staTcpiNetbReleas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbReleas.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbReleas.setDescription('Releases')
staTcpiNetbRefres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbRefres.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbRefres.setDescription('Refreshs')
staTcpiNetbTimeou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbTimeou.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbTimeou.setDescription('Timeouts')
staTcpiNetbHosts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHosts.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHosts.setDescription('Hosts')
staTcpiNetbGroups = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGroups.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGroups.setDescription('Groups')
staTcpiNetbBnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBnodes.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBnodes.setDescription('B-Nodes')
staTcpiNetbPnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPnodes.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPnodes.setDescription('P-Nodes')
staTcpiNetbMnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbMnodes.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbMnodes.setDescription('M-Nodes')
staTcpiNetbWnodes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbWnodes.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbWnodes.setDescription('W-Nodes')
staTcpiNetbPeersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16), )
if mibBuilder.loadTexts: staTcpiNetbPeersTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersTable.setDescription('Peers')
staTcpiNetbPeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbPeersNam"))
if mibBuilder.loadTexts: staTcpiNetbPeersEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersEntry.setDescription('entry in table')
staTcpiNetbPeersNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersNam.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersNam.setDescription('Name')
staTcpiNetbPeersTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersTyp.setDescription('Type')
staTcpiNetbPeersBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersBac.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersBac.setDescription('Backoff')
staTcpiNetbPeersTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbPeersTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbPeersTim.setDescription('Time')
staTcpiNetbNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18), )
if mibBuilder.loadTexts: staTcpiNetbNetworTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworTable.setDescription('Networks')
staTcpiNetbNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbNetworNet"))
if mibBuilder.loadTexts: staTcpiNetbNetworEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworEntry.setDescription('entry in table')
staTcpiNetbNetworNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworNet.setDescription('Network-name')
staTcpiNetbNetworNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworNtd.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworNtd.setDescription('NT-Domain')
staTcpiNetbNetworRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworRtg.setDescription('Rtg-tag')
staTcpiNetbNetworInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworInt.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworInt.setDescription('Interface')
staTcpiNetbNetworVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbNetworVla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbNetworVla.setDescription('VLAN-ID')
staTcpiNetbGrouplTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19), )
if mibBuilder.loadTexts: staTcpiNetbGrouplTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplTable.setDescription('Group-List')
staTcpiNetbGrouplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbGrouplGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplTyp"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplRtg"))
if mibBuilder.loadTexts: staTcpiNetbGrouplEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplEntry.setDescription('entry in table')
staTcpiNetbGrouplGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplGro.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplGro.setDescription('Group/Domain')
staTcpiNetbGrouplTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplTyp.setDescription('Type')
staTcpiNetbGrouplIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplIpa.setDescription('IP-Address')
staTcpiNetbGrouplRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplRtg.setDescription('Rtg-tag')
staTcpiNetbGrouplPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplPee.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplPee.setDescription('Peer')
staTcpiNetbGrouplNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplNet.setDescription('Network-name')
staTcpiNetbGrouplTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplTim.setDescription('Timeout')
staTcpiNetbGrouplFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbGrouplFla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbGrouplFla.setDescription('Flags')
staTcpiNetbHostliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20), )
if mibBuilder.loadTexts: staTcpiNetbHostliTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliTable.setDescription('Host-List')
staTcpiNetbHostliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbHostliNam"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliTyp"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbHostliRtg"))
if mibBuilder.loadTexts: staTcpiNetbHostliEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliEntry.setDescription('entry in table')
staTcpiNetbHostliNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliNam.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliNam.setDescription('Name')
staTcpiNetbHostliTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliTyp.setDescription('Type')
staTcpiNetbHostliIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliIpa.setDescription('IP-Address')
staTcpiNetbHostliRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliRtg.setDescription('Rtg-tag')
staTcpiNetbHostliPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliPee.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliPee.setDescription('Peer')
staTcpiNetbHostliNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliNet.setDescription('Network-name')
staTcpiNetbHostliTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliTim.setDescription('Timeout')
staTcpiNetbHostliFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbHostliFla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbHostliFla.setDescription('Flags')
staTcpiNetbServerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21), )
if mibBuilder.loadTexts: staTcpiNetbServerTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerTable.setDescription('Server-List')
staTcpiNetbServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbServerHos"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbServerRtg"))
if mibBuilder.loadTexts: staTcpiNetbServerEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerEntry.setDescription('entry in table')
staTcpiNetbServerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerHos.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerHos.setDescription('Host')
staTcpiNetbServerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerGro.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerGro.setDescription('Group/Domain')
staTcpiNetbServerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerIpa.setDescription('IP-Address')
staTcpiNetbServerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerRtg.setDescription('Rtg-tag')
staTcpiNetbServerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerOsv.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerOsv.setDescription('OS-Ver.')
staTcpiNetbServerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerSmb.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerSmb.setDescription('SMB-Ver.')
staTcpiNetbServerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerSer.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerSer.setDescription('Server-Typ')
staTcpiNetbServerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerPee.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerPee.setDescription('Peer')
staTcpiNetbServerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerNet.setDescription('Network-name')
staTcpiNetbServerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerTim.setDescription('Timeout')
staTcpiNetbServerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbServerFla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbServerFla.setDescription('Flags')
staTcpiNetbBrowseTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22), )
if mibBuilder.loadTexts: staTcpiNetbBrowseTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseTable.setDescription('Browser-List')
staTcpiNetbBrowseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetbBrowseBro"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseGro"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseIpa"), (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseRtg"))
if mibBuilder.loadTexts: staTcpiNetbBrowseEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseEntry.setDescription('entry in table')
staTcpiNetbBrowseBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseBro.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseBro.setDescription('Browser')
staTcpiNetbBrowseGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseGro.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseGro.setDescription('Group/Domain')
staTcpiNetbBrowseIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseIpa.setDescription('IP-Address')
staTcpiNetbBrowseRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseRtg.setDescription('Rtg-tag')
staTcpiNetbBrowseOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseOsv.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseOsv.setDescription('OS-Ver.')
staTcpiNetbBrowseSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseSer.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseSer.setDescription('Server-Typ')
staTcpiNetbBrowsePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowsePee.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowsePee.setDescription('Peer')
staTcpiNetbBrowseNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseNet.setDescription('Network-name')
staTcpiNetbBrowseTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseTim.setDescription('Timeout')
staTcpiNetbBrowseFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetbBrowseFla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbBrowseFla.setDescription('Flags')
staTcpiNetbDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiNetbDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetbDelete.setDescription('Delete-Values')
staTcpiDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9))
staTcpiDnsLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsLanr.setDescription('LAN-Rx')
staTcpiDnsLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsLant.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsLant.setDescription('LAN-Tx')
staTcpiDnsWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsWanr.setDescription('WAN-Rx')
staTcpiDnsWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsWant.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsWant.setDescription('WAN-Tx')
staTcpiDnsForw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsForw.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsForw.setDescription('Forwarded')
staTcpiDnsErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsErro.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsErro.setDescription('Errors')
staTcpiDnsDnsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsDnsa.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsDnsa.setDescription('DNS-Access')
staTcpiDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsDhcp.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsDhcp.setDescription('DHCP-Access')
staTcpiDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsNetb.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsNetb.setDescription('NetBIOS-Access')
staTcpiDnsFilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsFilt.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsFilt.setDescription('Filter')
staTcpiDnsHitlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11), )
if mibBuilder.loadTexts: staTcpiDnsHitlTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlTable.setDescription('Hit-List')
staTcpiDnsHitlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiDnsHitlDom"))
if mibBuilder.loadTexts: staTcpiDnsHitlEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlEntry.setDescription('entry in table')
staTcpiDnsHitlDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlDom.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlDom.setDescription('Domain')
staTcpiDnsHitlReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlReq.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlReq.setDescription('Requests')
staTcpiDnsHitlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlTim.setDescription('Time')
staTcpiDnsHitlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiDnsHitlIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsHitlIpa.setDescription('IP-Address')
staTcpiDnsDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiDnsDele.setStatus('current')
if mibBuilder.loadTexts: staTcpiDnsDele.setDescription('Delete-Values')
staTcpiHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10))
staTcpiHttpHttpac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpac.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpHttpac.setDescription('HTTP-Accesses')
staTcpiHttpHttpsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpsa.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpHttpsa.setDescription('HTTPS-Accesses')
staTcpiHttpHttpno = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpno.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpHttpno.setDescription('HTTP-Notfound-Errors')
staTcpiHttpHttpau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttpau.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpHttpau.setDescription('HTTP-Authentication-Errors')
staTcpiHttpHttppr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpHttppr.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpHttppr.setDescription('HTTP-Protocol-Errors')
staTcpiHttpAgentlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7), )
if mibBuilder.loadTexts: staTcpiHttpAgentlTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpAgentlTable.setDescription('Agent-List')
staTcpiHttpAgentlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiHttpAgentlAge"))
if mibBuilder.loadTexts: staTcpiHttpAgentlEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpAgentlEntry.setDescription('entry in table')
staTcpiHttpAgentlAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 67))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpAgentlAge.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpAgentlAge.setDescription('Agent-Name')
staTcpiHttpAgentlAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpAgentlAcc.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpAgentlAcc.setDescription('Accesses')
staTcpiHttpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiHttpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpDelete.setDescription('Delete-Values')
staTcpiHttpActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8), )
if mibBuilder.loadTexts: staTcpiHttpActiveTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveTable.setDescription('Active-Tunnels')
staTcpiHttpActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiHttpActiveIndex"))
if mibBuilder.loadTexts: staTcpiHttpActiveEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveEntry.setDescription('entry in table')
staTcpiHttpActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveIndex.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveIndex.setDescription('Index')
staTcpiHttpActiveRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveRemotea.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveRemotea.setDescription('Remote-Address')
staTcpiHttpActiveRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveRemotep.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveRemotep.setDescription('Remote-Port')
staTcpiHttpActiveLocalho = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalho.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveLocalho.setDescription('Local-Host')
staTcpiHttpActiveLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalpo.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveLocalpo.setDescription('Local-Port')
staTcpiHttpActiveLocalrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveLocalrt.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveLocalrt.setDescription('Local-Rtg-Tag')
staTcpiHttpActiveIdletim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveIdletim.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveIdletim.setDescription('Idle-Time')
staTcpiHttpActiveNumconn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiHttpActiveNumconn.setStatus('current')
if mibBuilder.loadTexts: staTcpiHttpActiveNumconn.setDescription('Num-Connections')
staTcpiNetwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20), )
if mibBuilder.loadTexts: staTcpiNetwTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwTable.setDescription('Network-list')
staTcpiNetwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiNetwNet"))
if mibBuilder.loadTexts: staTcpiNetwEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwEntry.setDescription('entry in table')
staTcpiNetwNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwNet.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwNet.setDescription('Network-name')
staTcpiNetwIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwIpa.setDescription('IP-Address')
staTcpiNetwIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwIpn.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwIpn.setDescription('IP-Netmask')
staTcpiNetwVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwVla.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwVla.setDescription('VLAN-ID')
staTcpiNetwInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 257, 258, 259, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("lan-2", 257), ("lan-3", 258), ("lan-4", 259), ("any", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwInt.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwInt.setDescription('Interface')
staTcpiNetwSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwSrc.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwSrc.setDescription('Src-check')
staTcpiNetwTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwTyp.setDescription('Type')
staTcpiNetwRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiNetwRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpiNetwRtg.setDescription('Rtg-tag')
staTcpiSysl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11))
staTcpiSyslLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11), )
if mibBuilder.loadTexts: staTcpiSyslLasTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasTable.setDescription('Last-Messages')
staTcpiSyslLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiSyslLasIdx"))
if mibBuilder.loadTexts: staTcpiSyslLasEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasEntry.setDescription('entry in table')
staTcpiSyslLasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasIdx.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasIdx.setDescription('Idx.')
staTcpiSyslLasTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasTim.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasTim.setDescription('Time')
staTcpiSyslLasSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasSou.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasSou.setDescription('Source')
staTcpiSyslLasLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alarm", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasLev.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasLev.setDescription('Level')
staTcpiSyslLasMes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiSyslLasMes.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslLasMes.setDescription('Message')
staTcpiSyslDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpiSyslDel.setStatus('current')
if mibBuilder.loadTexts: staTcpiSyslDel.setDescription('Delete-Values')
staTcpiRadi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13))
staTcpiRadiInvalidau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiInvalidau.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiInvalidau.setDescription('Invalid-Auth.-Address-Responses')
staTcpiRadiAuthenticTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2), )
if mibBuilder.loadTexts: staTcpiRadiAuthenticTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticTable.setDescription('Authentication-Servers')
staTcpiRadiAuthenticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticIpaddress"), (0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticPort"))
if mibBuilder.loadTexts: staTcpiRadiAuthenticEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticEntry.setDescription('entry in table')
staTcpiRadiAuthenticIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticIpaddress.setDescription('IP-Address')
staTcpiRadiAuthenticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticPort.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticPort.setDescription('Port')
staTcpiRadiAuthenticLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticLastreque.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticLastreque.setDescription('Last-Request')
staTcpiRadiAuthenticRoundtrip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticRoundtrip.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticRoundtrip.setDescription('Round-Trip-Time')
staTcpiRadiAuthenticAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessreq.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessreq.setDescription('Access-Requests')
staTcpiRadiAuthenticAccessret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessret.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessret.setDescription('Access-Retransmits')
staTcpiRadiAuthenticAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessacc.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessacc.setDescription('Access-Accepts')
staTcpiRadiAuthenticAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessrej.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccessrej.setDescription('Access-Rejects')
staTcpiRadiAuthenticAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccesscha.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticAccesscha.setDescription('Access-Challenges')
staTcpiRadiAuthenticMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticMalformed.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticMalformed.setDescription('Malformed-Access-Responses')
staTcpiRadiAuthenticBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticBadauthen.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticBadauthen.setDescription('Bad-Authenticators')
staTcpiRadiAuthenticPendingre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticPendingre.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticPendingre.setDescription('Pending-Requests')
staTcpiRadiAuthenticTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticTimeouts.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticTimeouts.setDescription('Timeouts')
staTcpiRadiAuthenticUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticUnknownty.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticUnknownty.setDescription('Unknown-Types')
staTcpiRadiAuthenticDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAuthenticDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAuthenticDropped.setDescription('Dropped')
staTcpiRadiInvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiInvalidac.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiInvalidac.setDescription('Invalid-Accnt.-Address-Responses')
staTcpiRadiAccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12), )
if mibBuilder.loadTexts: staTcpiRadiAccountinTable.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinTable.setDescription('Accounting-Servers')
staTcpiRadiAccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTcpiRadiAccountinIpaddress"), (0, "LANCOM-1711-MIB", "staTcpiRadiAccountinPort"))
if mibBuilder.loadTexts: staTcpiRadiAccountinEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinEntry.setDescription('entry in table')
staTcpiRadiAccountinIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinIpaddress.setDescription('IP-Address')
staTcpiRadiAccountinPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinPort.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinPort.setDescription('Port')
staTcpiRadiAccountinLastrequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinLastrequest.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinLastrequest.setDescription('Last-Request')
staTcpiRadiAccountinRoundtriptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinRoundtriptime.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinRoundtriptime.setDescription('Round-Trip-Time')
staTcpiRadiAccountinAccountingreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingreq.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingreq.setDescription('Accounting-Requests')
staTcpiRadiAccountinAccountingret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingret.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingret.setDescription('Accounting-Retransmits')
staTcpiRadiAccountinAccountingres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingres.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinAccountingres.setDescription('Accounting-Responses')
staTcpiRadiAccountinMalformedacco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinMalformedacco.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinMalformedacco.setDescription('Malformed-Accounting-Responses')
staTcpiRadiAccountinBadauthentica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinBadauthentica.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinBadauthentica.setDescription('Bad-Authenticators')
staTcpiRadiAccountinPendingreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinPendingreques.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinPendingreques.setDescription('Pending-Requests')
staTcpiRadiAccountinTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinTimeouts.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinTimeouts.setDescription('Timeouts')
staTcpiRadiAccountinUnknowntypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinUnknowntypes.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinUnknowntypes.setDescription('Unknown-Types')
staTcpiRadiAccountinDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpiRadiAccountinDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpiRadiAccountinDropped.setDescription('Dropped')
staIpro = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10))
staIproLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanrx.setStatus('current')
if mibBuilder.loadTexts: staIproLanrx.setDescription('LAN-Rx')
staIproLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLantx.setStatus('current')
if mibBuilder.loadTexts: staIproLantx.setDescription('LAN-Tx')
staIproLanloca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanloca.setStatus('current')
if mibBuilder.loadTexts: staIproLanloca.setDescription('LAN-Local-Routings')
staIproLannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLannetw.setStatus('current')
if mibBuilder.loadTexts: staIproLannetw.setDescription('LAN-Network-Errors')
staIproLanrout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanrout.setStatus('current')
if mibBuilder.loadTexts: staIproLanrout.setDescription('LAN-Routing-Errors')
staIproLanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanttle.setStatus('current')
if mibBuilder.loadTexts: staIproLanttle.setDescription('LAN-TTL-Errors')
staIproLanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLanfilt.setStatus('current')
if mibBuilder.loadTexts: staIproLanfilt.setDescription('LAN-Filters')
staIproLandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLandisc.setStatus('current')
if mibBuilder.loadTexts: staIproLandisc.setDescription('LAN-Discards')
staIproWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanrx.setStatus('current')
if mibBuilder.loadTexts: staIproWanrx.setDescription('WAN-Rx')
staIproWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWantx.setStatus('current')
if mibBuilder.loadTexts: staIproWantx.setDescription('WAN-Tx')
staIproWannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWannetw.setStatus('current')
if mibBuilder.loadTexts: staIproWannetw.setDescription('WAN-Network-Errors')
staIproWanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanttle.setStatus('current')
if mibBuilder.loadTexts: staIproWanttle.setDescription('WAN-TTL-Errors')
staIproWanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWanfilt.setStatus('current')
if mibBuilder.loadTexts: staIproWanfilt.setDescription('WAN-Filters')
staIproWandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWandisc.setStatus('current')
if mibBuilder.loadTexts: staIproWandisc.setDescription('WAN-Discards')
staIproWantype = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproWantype.setStatus('current')
if mibBuilder.loadTexts: staIproWantype.setDescription('WAN-Type-Errors')
staIproArperro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproArperro.setStatus('current')
if mibBuilder.loadTexts: staIproArperro.setDescription('ARP-Errors')
staIproEstabliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17), )
if mibBuilder.loadTexts: staIproEstabliTable.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliTable.setDescription('Establish-Table')
staIproEstabliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproEstabliTim"), (0, "LANCOM-1711-MIB", "staIproEstabliCou"))
if mibBuilder.loadTexts: staIproEstabliEntry.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliEntry.setDescription('entry in table')
staIproEstabliTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliTim.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliTim.setDescription('Time')
staIproEstabliDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliDes.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliDes.setDescription('Dest.-Address')
staIproEstabliSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliSrc.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliSrc.setDescription('Src.-Address')
staIproEstabliPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliPro.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliPro.setDescription('Prot.')
staIproEstabliDpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliDpo.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliDpo.setDescription('D-port-from')
staIproEstabliSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliSou.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliSou.setDescription('Source-Port')
staIproEstabliCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproEstabliCou.setStatus('current')
if mibBuilder.loadTexts: staIproEstabliCou.setDescription('Counter')
staIproProtocoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18), )
if mibBuilder.loadTexts: staIproProtocoTable.setStatus('current')
if mibBuilder.loadTexts: staIproProtocoTable.setDescription('Protocol-Table')
staIproProtocoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproProtocoPro"))
if mibBuilder.loadTexts: staIproProtocoEntry.setStatus('current')
if mibBuilder.loadTexts: staIproProtocoEntry.setDescription('entry in table')
staIproProtocoPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoPro.setStatus('current')
if mibBuilder.loadTexts: staIproProtocoPro.setDescription('Prot.')
staIproProtocoLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoLan.setStatus('current')
if mibBuilder.loadTexts: staIproProtocoLan.setDescription('LAN-Tx')
staIproProtocoWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproProtocoWan.setStatus('current')
if mibBuilder.loadTexts: staIproProtocoWan.setDescription('WAN-Tx')
staIproRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19))
staIproRipRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipRx.setStatus('current')
if mibBuilder.loadTexts: staIproRipRx.setDescription('Rx')
staIproRipRequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipRequ.setStatus('current')
if mibBuilder.loadTexts: staIproRipRequ.setDescription('Requests')
staIproRipResp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipResp.setStatus('current')
if mibBuilder.loadTexts: staIproRipResp.setDescription('Response')
staIproRipDisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDisc.setStatus('current')
if mibBuilder.loadTexts: staIproRipDisc.setDescription('Discards')
staIproRipErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipErro.setStatus('current')
if mibBuilder.loadTexts: staIproRipErro.setDescription('Errors')
staIproRipEntr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipEntr.setStatus('current')
if mibBuilder.loadTexts: staIproRipEntr.setDescription('Entry-Errors')
staIproRipTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipTx.setStatus('current')
if mibBuilder.loadTexts: staIproRipTx.setDescription('Tx')
staIproRipIpriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8), )
if mibBuilder.loadTexts: staIproRipIpriTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriTable.setDescription('IP-RIP-Table')
staIproRipIpriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipIpriIpa"), (0, "LANCOM-1711-MIB", "staIproRipIpriIpn"), (0, "LANCOM-1711-MIB", "staIproRipIpriRtg"))
if mibBuilder.loadTexts: staIproRipIpriEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriEntry.setDescription('entry in table')
staIproRipIpriIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriIpa.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriIpa.setDescription('IP-Address')
staIproRipIpriIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriIpn.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriIpn.setDescription('IP-Netmask')
staIproRipIpriRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriRtg.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriRtg.setDescription('Rtg-tag')
staIproRipIpriTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriTim.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriTim.setDescription('Time')
staIproRipIpriDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriDis.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriDis.setDescription('Distance')
staIproRipIpriGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriGat.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriGat.setDescription('Gateway')
staIproRipIpriPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriPee.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriPee.setDescription('Peer')
staIproRipIpriPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriPor.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriPor.setDescription('Port')
staIproRipIpriVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriVla.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriVla.setDescription('VLAN-ID')
staIproRipIpriNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipIpriNet.setStatus('current')
if mibBuilder.loadTexts: staIproRipIpriNet.setDescription('Network-name')
staIproRipDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproRipDele.setStatus('current')
if mibBuilder.loadTexts: staIproRipDele.setDescription('Delete-Values')
staIproRipLansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10), )
if mibBuilder.loadTexts: staIproRipLansTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansTable.setDescription('LAN-Sites')
staIproRipLansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipLansNetw"))
if mibBuilder.loadTexts: staIproRipLansEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansEntry.setDescription('entry in table')
staIproRipLansNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansNetw.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansNetw.setDescription('Network-name')
staIproRipLansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRipt.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansRipt.setDescription('RIP-Type')
staIproRipLansRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRips.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansRips.setDescription('RIP-Send')
staIproRipLansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRipa.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansRipa.setDescription('RIP-Accept')
staIproRipLansProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansProp.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansProp.setDescription('Propagate')
staIproRipLansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansPois.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansPois.setDescription('Poisoned-Reverse')
staIproRipLansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansDftr.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansDftr.setDescription('Dft-Rtg-Tag')
staIproRipLansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansRtgt.setDescription('Rtg-Tag-List')
staIproRipLansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansRxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansRxfi.setDescription('Rx-Filter')
staIproRipLansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansTxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansTxfi.setDescription('Tx-Filter')
staIproRipLansPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansPort.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansPort.setDescription('Port')
staIproRipLansVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipLansVlan.setStatus('current')
if mibBuilder.loadTexts: staIproRipLansVlan.setDescription('VLAN-ID')
staIproRipVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12), )
if mibBuilder.loadTexts: staIproRipVrrpTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipVrrpTable.setDescription('VRRP-Sites')
staIproRipVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipVrrpNet"), (0, "LANCOM-1711-MIB", "staIproRipVrrpRou"))
if mibBuilder.loadTexts: staIproRipVrrpEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipVrrpEntry.setDescription('entry in table')
staIproRipVrrpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpNet.setStatus('current')
if mibBuilder.loadTexts: staIproRipVrrpNet.setDescription('Network-name')
staIproRipVrrpRip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpRip.setStatus('current')
if mibBuilder.loadTexts: staIproRipVrrpRip.setDescription('RIP-Type')
staIproRipVrrpRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipVrrpRou.setStatus('current')
if mibBuilder.loadTexts: staIproRipVrrpRou.setDescription('Router-ID')
staIproRipWansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11), )
if mibBuilder.loadTexts: staIproRipWansTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansTable.setDescription('WAN-Sites')
staIproRipWansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipWansPeer"))
if mibBuilder.loadTexts: staIproRipWansEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansEntry.setDescription('entry in table')
staIproRipWansPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansPeer.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansPeer.setDescription('Peer')
staIproRipWansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRipt.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRipt.setDescription('RIP-Type')
staIproRipWansRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRips.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRips.setDescription('RIP-Send')
staIproRipWansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRipa.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRipa.setDescription('RIP-Accept')
staIproRipWansMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansMasq.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansMasq.setDescription('Masquerade')
staIproRipWansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansPois.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansPois.setDescription('Poisoned-Reverse')
staIproRipWansRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRfc2.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRfc2.setDescription('RFC2091')
staIproRipWansGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansGate.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansGate.setDescription('Gateway')
staIproRipWansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansDftr.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansDftr.setDescription('Dft-Rtg-Tag')
staIproRipWansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRtgt.setDescription('Rtg-Tag-List')
staIproRipWansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansRxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansRxfi.setDescription('Rx-Filter')
staIproRipWansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWansTxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipWansTxfi.setDescription('Tx-Filter')
staIproRipDynlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13), )
if mibBuilder.loadTexts: staIproRipDynlTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlTable.setDescription('Dyn.-LAN-Sites')
staIproRipDynlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipDynlGate"))
if mibBuilder.loadTexts: staIproRipDynlEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlEntry.setDescription('entry in table')
staIproRipDynlGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlGate.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlGate.setDescription('Gateway')
staIproRipDynlRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRipt.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlRipt.setDescription('RIP-Type')
staIproRipDynlRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRips.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlRips.setDescription('RIP-Send')
staIproRipDynlRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRipa.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlRipa.setDescription('RIP-Accept')
staIproRipDynlPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlPois.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlPois.setDescription('Poisoned-Reverse')
staIproRipDynlDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlDftr.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlDftr.setDescription('Dft-Rtg-Tag')
staIproRipDynlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlRtgt.setDescription('Rtg-Tag-List')
staIproRipDynlRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlRxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlRxfi.setDescription('Rx-Filter')
staIproRipDynlTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlTxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlTxfi.setDescription('Tx-Filter')
staIproRipDynlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlPort.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlPort.setDescription('Port')
staIproRipDynlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynlVlan.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynlVlan.setDescription('VLAN-ID')
staIproRipDynwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14), )
if mibBuilder.loadTexts: staIproRipDynwTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwTable.setDescription('Dyn.-WAN-Sites')
staIproRipDynwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipDynwPeer"))
if mibBuilder.loadTexts: staIproRipDynwEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwEntry.setDescription('entry in table')
staIproRipDynwPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwPeer.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwPeer.setDescription('Peer')
staIproRipDynwRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRipt.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRipt.setDescription('RIP-Type')
staIproRipDynwRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRips.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRips.setDescription('RIP-Send')
staIproRipDynwRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRipa.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRipa.setDescription('RIP-Accept')
staIproRipDynwMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwMasq.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwMasq.setDescription('Masquerade')
staIproRipDynwPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwPois.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwPois.setDescription('Poisoned-Reverse')
staIproRipDynwRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRfc2.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRfc2.setDescription('RFC2091')
staIproRipDynwGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwGate.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwGate.setDescription('Gateway')
staIproRipDynwDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwDftr.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwDftr.setDescription('Dft-Rtg-Tag')
staIproRipDynwRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRtgt.setDescription('Rtg-Tag-List')
staIproRipDynwRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwRxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwRxfi.setDescription('Rx-Filter')
staIproRipDynwTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipDynwTxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipDynwTxfi.setDescription('Tx-Filter')
staIproRipWildTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16), )
if mibBuilder.loadTexts: staIproRipWildTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildTable.setDescription('Wildcard-Sites')
staIproRipWildEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipWildPeer"))
if mibBuilder.loadTexts: staIproRipWildEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildEntry.setDescription('entry in table')
staIproRipWildPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildPeer.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildPeer.setDescription('Peer')
staIproRipWildRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRipt.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRipt.setDescription('RIP-Type')
staIproRipWildRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRips.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRips.setDescription('RIP-Send')
staIproRipWildRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRipa.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRipa.setDescription('RIP-Accept')
staIproRipWildMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildMasq.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildMasq.setDescription('Masquerade')
staIproRipWildPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildPois.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildPois.setDescription('Poisoned-Reverse')
staIproRipWildRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRfc2.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRfc2.setDescription('RFC2091')
staIproRipWildGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildGate.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildGate.setDescription('Gateway')
staIproRipWildDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildDftr.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildDftr.setDescription('Dft-Rtg-Tag')
staIproRipWildRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRtgt.setDescription('Rtg-Tag-List')
staIproRipWildRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildRxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildRxfi.setDescription('Rx-Filter')
staIproRipWildTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipWildTxfi.setStatus('current')
if mibBuilder.loadTexts: staIproRipWildTxfi.setDescription('Tx-Filter')
staIproRipFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15), )
if mibBuilder.loadTexts: staIproRipFiltTable.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltTable.setDescription('Filter')
staIproRipFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproRipFiltIdx"))
if mibBuilder.loadTexts: staIproRipFiltEntry.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltEntry.setDescription('entry in table')
staIproRipFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIdx.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltIdx.setDescription('Idx.')
staIproRipFiltNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltNam.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltNam.setDescription('Name')
staIproRipFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIpa.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltIpa.setDescription('IP-Address')
staIproRipFiltIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltIpn.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltIpn.setDescription('IP-Netmask')
staIproRipFiltTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRipFiltTyp.setStatus('current')
if mibBuilder.loadTexts: staIproRipFiltTyp.setDescription('Type')
staIproDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproDeletev.setStatus('current')
if mibBuilder.loadTexts: staIproDeletev.setDescription('Delete-Values')
staIproServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21), )
if mibBuilder.loadTexts: staIproServiceTable.setStatus('current')
if mibBuilder.loadTexts: staIproServiceTable.setDescription('Service-Table')
staIproServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproServiceService"))
if mibBuilder.loadTexts: staIproServiceEntry.setStatus('current')
if mibBuilder.loadTexts: staIproServiceEntry.setDescription('entry in table')
staIproServiceService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("icmp", 1), ("ftp", 2), ("http", 3), ("smtp", 4), ("dns", 5), ("telnet", 6), ("tftp", 7), ("dhcp", 8), ("pop3", 9), ("netbios", 10), ("imap2", 11), ("news", 12), ("irc", 13), ("snmp", 14), ("other", 15), ("total", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceService.setStatus('current')
if mibBuilder.loadTexts: staIproServiceService.setDescription('Service')
staIproServicePacketrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePacketrx.setStatus('current')
if mibBuilder.loadTexts: staIproServicePacketrx.setDescription('Packet-Rx')
staIproServicePackettx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePackettx.setStatus('current')
if mibBuilder.loadTexts: staIproServicePackettx.setDescription('Packet-Tx')
staIproServicePacketre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServicePacketre.setStatus('current')
if mibBuilder.loadTexts: staIproServicePacketre.setDescription('Packet-Rel')
staIproServiceKbytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytesrx.setStatus('current')
if mibBuilder.loadTexts: staIproServiceKbytesrx.setDescription('KBytes-Rx')
staIproServiceKbytestx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytestx.setStatus('current')
if mibBuilder.loadTexts: staIproServiceKbytestx.setDescription('KBytes-Tx')
staIproServiceKbytesre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproServiceKbytesre.setStatus('current')
if mibBuilder.loadTexts: staIproServiceKbytesre.setDescription('KBytes-Rel')
staIproFilterlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22), )
if mibBuilder.loadTexts: staIproFilterlTable.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlTable.setDescription('Filter-List')
staIproFilterlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproFilterlIdx"))
if mibBuilder.loadTexts: staIproFilterlEntry.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlEntry.setDescription('entry in table')
staIproFilterlIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlIdx.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlIdx.setDescription('Idx.')
staIproFilterlProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlProt.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlProt.setDescription('Prot.')
staIproFilterlSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrcm.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlSrcm.setDescription('Src-MAC')
staIproFilterlSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrca.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlSrca.setDescription('Src-Address')
staIproFilterlSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSrcn.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlSrcn.setDescription('Src-Netmask')
staIproFilterlSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSst.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlSst.setDescription('S-St.')
staIproFilterlSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlSend.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlSend.setDescription('S-End')
staIproFilterlDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDstm.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlDstm.setDescription('Dst-MAC')
staIproFilterlDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDsta.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlDsta.setDescription('Dst-Address')
staIproFilterlDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDstn.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlDstn.setDescription('Dst-Netmask')
staIproFilterlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDst.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlDst.setDescription('D-St.')
staIproFilterlDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlDend.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlDend.setDescription('D-End')
staIproFilterlActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlActi.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlActi.setDescription('Action')
staIproFilterlLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlLink.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlLink.setDescription('Linked')
staIproFilterlPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlPrio.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlPrio.setDescription('Prio')
staIproFilterlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilterlRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproFilterlRtgt.setDescription('Rtg-tag')
staIproConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23), )
if mibBuilder.loadTexts: staIproConnectTable.setStatus('current')
if mibBuilder.loadTexts: staIproConnectTable.setDescription('Connection-List')
staIproConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproConnectSrca"), (0, "LANCOM-1711-MIB", "staIproConnectDsta"), (0, "LANCOM-1711-MIB", "staIproConnectProt"), (0, "LANCOM-1711-MIB", "staIproConnectSrcp"), (0, "LANCOM-1711-MIB", "staIproConnectDstp"))
if mibBuilder.loadTexts: staIproConnectEntry.setStatus('current')
if mibBuilder.loadTexts: staIproConnectEntry.setDescription('entry in table')
staIproConnectSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrca.setStatus('current')
if mibBuilder.loadTexts: staIproConnectSrca.setDescription('Src-Address')
staIproConnectDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDsta.setStatus('current')
if mibBuilder.loadTexts: staIproConnectDsta.setDescription('Dst-Address')
staIproConnectProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectProt.setStatus('current')
if mibBuilder.loadTexts: staIproConnectProt.setDescription('Prot.')
staIproConnectSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrcp.setStatus('current')
if mibBuilder.loadTexts: staIproConnectSrcp.setDescription('Src-Port')
staIproConnectDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDstp.setStatus('current')
if mibBuilder.loadTexts: staIproConnectDstp.setDescription('Dst-Port')
staIproConnectRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectRtgt.setStatus('current')
if mibBuilder.loadTexts: staIproConnectRtgt.setDescription('Rtg-tag')
staIproConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectTime.setStatus('current')
if mibBuilder.loadTexts: staIproConnectTime.setDescription('Timeout')
staIproConnectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectFlag.setStatus('current')
if mibBuilder.loadTexts: staIproConnectFlag.setDescription('Flags')
staIproConnectFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectFilt.setStatus('current')
if mibBuilder.loadTexts: staIproConnectFilt.setDescription('Filter-Rule')
staIproConnectSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectSrcr.setStatus('current')
if mibBuilder.loadTexts: staIproConnectSrcr.setDescription('Src-Route')
staIproConnectDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproConnectDest.setStatus('current')
if mibBuilder.loadTexts: staIproConnectDest.setDescription('Dest-Route')
staIproOpenporTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29), )
if mibBuilder.loadTexts: staIproOpenporTable.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporTable.setDescription('Open-Port-List')
staIproOpenporEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproOpenporSrca"), (0, "LANCOM-1711-MIB", "staIproOpenporDsta"), (0, "LANCOM-1711-MIB", "staIproOpenporProt"), (0, "LANCOM-1711-MIB", "staIproOpenporDstp"))
if mibBuilder.loadTexts: staIproOpenporEntry.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporEntry.setDescription('entry in table')
staIproOpenporSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporSrca.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporSrca.setDescription('Src-Address')
staIproOpenporDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporDsta.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporDsta.setDescription('Dst-Address')
staIproOpenporProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporProt.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporProt.setDescription('Prot.')
staIproOpenporDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporDstp.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporDstp.setDescription('Dst-Port')
staIproOpenporTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporTime.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporTime.setDescription('Timeout')
staIproOpenporFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporFilt.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporFilt.setDescription('Filter-Rule')
staIproOpenporSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproOpenporSrcr.setStatus('current')
if mibBuilder.loadTexts: staIproOpenporSrcr.setDescription('Src-Route')
staIproHostbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24), )
if mibBuilder.loadTexts: staIproHostbloTable.setStatus('current')
if mibBuilder.loadTexts: staIproHostbloTable.setDescription('Host-Block-List')
staIproHostbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproHostbloSrc"))
if mibBuilder.loadTexts: staIproHostbloEntry.setStatus('current')
if mibBuilder.loadTexts: staIproHostbloEntry.setDescription('entry in table')
staIproHostbloSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloSrc.setStatus('current')
if mibBuilder.loadTexts: staIproHostbloSrc.setDescription('Src-Address')
staIproHostbloTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloTim.setStatus('current')
if mibBuilder.loadTexts: staIproHostbloTim.setDescription('Timeout')
staIproHostbloFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHostbloFil.setStatus('current')
if mibBuilder.loadTexts: staIproHostbloFil.setDescription('Filter-Rule')
staIproPortbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25), )
if mibBuilder.loadTexts: staIproPortbloTable.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloTable.setDescription('Port-Block-List')
staIproPortbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproPortbloDsta"))
if mibBuilder.loadTexts: staIproPortbloEntry.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloEntry.setDescription('entry in table')
staIproPortbloDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloDsta.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloDsta.setDescription('Dst-Address')
staIproPortbloProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloProt.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloProt.setDescription('Prot.')
staIproPortbloDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloDstp.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloDstp.setDescription('Dst-Port')
staIproPortbloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloTime.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloTime.setDescription('Timeout')
staIproPortbloFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproPortbloFilt.setStatus('current')
if mibBuilder.loadTexts: staIproPortbloFilt.setDescription('Filter-Rule')
staIproLogtablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26), )
if mibBuilder.loadTexts: staIproLogtablTable.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablTable.setDescription('Log-Table')
staIproLogtablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproLogtablIdx"))
if mibBuilder.loadTexts: staIproLogtablEntry.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablEntry.setDescription('entry in table')
staIproLogtablIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablIdx.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablIdx.setDescription('Idx.')
staIproLogtablSyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSyst.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablSyst.setDescription('System-time')
staIproLogtablSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSrca.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablSrca.setDescription('Src-Address')
staIproLogtablDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablDsta.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablDsta.setDescription('Dst-Address')
staIproLogtablProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablProt.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablProt.setDescription('Prot.')
staIproLogtablSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablSrcp.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablSrcp.setDescription('Src-Port')
staIproLogtablDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablDstp.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablDstp.setDescription('Dst-Port')
staIproLogtablFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablFilt.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablFilt.setDescription('Filter-Rule')
staIproLogtablLimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablLimi.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablLimi.setDescription('Limit')
staIproLogtablThre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablThre.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablThre.setDescription('Threshold')
staIproLogtablActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLogtablActi.setStatus('current')
if mibBuilder.loadTexts: staIproLogtablActi.setDescription('Action')
staIproHoconnlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27), )
if mibBuilder.loadTexts: staIproHoconnlTable.setStatus('current')
if mibBuilder.loadTexts: staIproHoconnlTable.setDescription('HO-Conn.-List')
staIproHoconnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproHoconnlDst"))
if mibBuilder.loadTexts: staIproHoconnlEntry.setStatus('current')
if mibBuilder.loadTexts: staIproHoconnlEntry.setDescription('entry in table')
staIproHoconnlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlDst.setStatus('current')
if mibBuilder.loadTexts: staIproHoconnlDst.setDescription('Dst-Address')
staIproHoconnlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlNum.setStatus('current')
if mibBuilder.loadTexts: staIproHoconnlNum.setDescription('Num-HO-Conn.')
staIproHoconnlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproHoconnlTim.setStatus('current')
if mibBuilder.loadTexts: staIproHoconnlTim.setDescription('Timeout')
staIproQosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28), )
if mibBuilder.loadTexts: staIproQosTable.setStatus('current')
if mibBuilder.loadTexts: staIproQosTable.setDescription('QoS')
staIproQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproQosIfc"))
if mibBuilder.loadTexts: staIproQosEntry.setStatus('current')
if mibBuilder.loadTexts: staIproQosEntry.setDescription('entry in table')
staIproQosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosIfc.setStatus('current')
if mibBuilder.loadTexts: staIproQosIfc.setDescription('Ifc')
staIproQosPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosPeer.setStatus('current')
if mibBuilder.loadTexts: staIproQosPeer.setDescription('Peer')
staIproQosUpstr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosUpstr.setStatus('current')
if mibBuilder.loadTexts: staIproQosUpstr.setDescription('Upstream-Rate')
staIproQosDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosDowns.setStatus('current')
if mibBuilder.loadTexts: staIproQosDowns.setDescription('Downstream-Rate')
staIproQosRxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxres.setStatus('current')
if mibBuilder.loadTexts: staIproQosRxres.setDescription('Rx-reserved')
staIproQosRxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxreq.setStatus('current')
if mibBuilder.loadTexts: staIproQosRxreq.setDescription('Rx-requested')
staIproQosRxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosRxblo.setStatus('current')
if mibBuilder.loadTexts: staIproQosRxblo.setDescription('Rx-blocks-pending')
staIproQosTxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxres.setStatus('current')
if mibBuilder.loadTexts: staIproQosTxres.setDescription('Tx-reserved')
staIproQosTxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxreq.setStatus('current')
if mibBuilder.loadTexts: staIproQosTxreq.setDescription('Tx-requested')
staIproQosTxfav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxfav.setStatus('current')
if mibBuilder.loadTexts: staIproQosTxfav.setDescription('Tx-favoured')
staIproQosTxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosTxblo.setStatus('current')
if mibBuilder.loadTexts: staIproQosTxblo.setDescription('Tx-blocks-pending')
staIproQosFragm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosFragm.setStatus('current')
if mibBuilder.loadTexts: staIproQosFragm.setDescription('Fragment-size')
staIproQosPmtus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproQosPmtus.setStatus('current')
if mibBuilder.loadTexts: staIproQosPmtus.setDescription('PMTU-size')
staIproRules = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproRules.setStatus('current')
if mibBuilder.loadTexts: staIproRules.setDescription('Rules')
staIproFilter = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproFilter.setStatus('current')
if mibBuilder.loadTexts: staIproFilter.setDescription('Filter')
staIproL4error = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproL4error.setStatus('current')
if mibBuilder.loadTexts: staIproL4error.setDescription('L4-Errors')
staIproLoadbal = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32))
staIproLoadbalOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalOpe.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalOpe.setDescription('Operating')
staIproLoadbalConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2), )
if mibBuilder.loadTexts: staIproLoadbalConTable.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConTable.setDescription('Connections')
staIproLoadbalConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproLoadbalConPee"), (0, "LANCOM-1711-MIB", "staIproLoadbalConBun"))
if mibBuilder.loadTexts: staIproLoadbalConEntry.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConEntry.setDescription('entry in table')
staIproLoadbalConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConPee.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConPee.setDescription('Peer')
staIproLoadbalConBun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConBun.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConBun.setDescription('Bundle-Peer')
staIproLoadbalConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 7, 8))).clone(namedValues=NamedValues(("ready", 2), ("connection", 7), ("disconnecting", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConSta.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConSta.setDescription('State')
staIproLoadbalConTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConTcp.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConTcp.setDescription('TCP/IP-Sessions')
staIproLoadbalConPpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConPpt.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConPpt.setDescription('PPTP-Sessions')
staIproLoadbalConVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproLoadbalConVpn.setStatus('current')
if mibBuilder.loadTexts: staIproLoadbalConVpn.setDescription('VPN-Sessions')
staIproVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33))
staIproVrrpOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpOpe.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpOpe.setDescription('Operating')
staIproVrrpRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpRx.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpRx.setDescription('Rx')
staIproVrrpTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpTx.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpTx.setDescription('Tx')
staIproVrrpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpErr.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpErr.setDescription('Error')
staIproVrrpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpDro.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpDro.setDescription('Drop')
staIproVrrpInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpInt.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpInt.setDescription('Internal-Services')
staIproVrrpVirTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10), )
if mibBuilder.loadTexts: staIproVrrpVirTable.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirTable.setDescription('Virtual-Router')
staIproVrrpVirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpVirRou"))
if mibBuilder.loadTexts: staIproVrrpVirEntry.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirEntry.setDescription('entry in table')
staIproVrrpVirRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirRou.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirRou.setDescription('Router-ID')
staIproVrrpVirVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirVir.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirVir.setDescription('virt.-Address')
staIproVrrpVirPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPri.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirPri.setDescription('Prio')
staIproVrrpVirBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirBpr.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirBpr.setDescription('B-Prio')
staIproVrrpVirPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPee.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirPee.setDescription('Peer')
staIproVrrpVirSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 0), ("listen", 1), ("standby", 2), ("master", 3), ("down", 4), ("reconnect", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirSta.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirSta.setDescription('State')
staIproVrrpVirBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirBac.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirBac.setDescription('Backup')
staIproVrrpVirMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirMas.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirMas.setDescription('Master')
staIproVrrpVirPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirPor.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirPor.setDescription('Port')
staIproVrrpVirVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirVla.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirVla.setDescription('VLAN-ID')
staIproVrrpVirNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpVirNet.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpVirNet.setDescription('Network-name')
staIproVrrpMacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11), )
if mibBuilder.loadTexts: staIproVrrpMacTable.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpMacTable.setDescription('MAC-List')
staIproVrrpMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpMacVir"))
if mibBuilder.loadTexts: staIproVrrpMacEntry.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpMacEntry.setDescription('entry in table')
staIproVrrpMacVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacVir.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpMacVir.setDescription('virt.-Address')
staIproVrrpMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacMac.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpMacMac.setDescription('MAC-Address')
staIproVrrpMacRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpMacRou.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpMacRou.setDescription('Router-ID')
staIproVrrpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12), )
if mibBuilder.loadTexts: staIproVrrpEveTable.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveTable.setDescription('Event-Log')
staIproVrrpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproVrrpEveIdx"))
if mibBuilder.loadTexts: staIproVrrpEveEntry.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveEntry.setDescription('entry in table')
staIproVrrpEveIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveIdx.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveIdx.setDescription('Idx.')
staIproVrrpEveSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveSys.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveSys.setDescription('System-time')
staIproVrrpEveSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveSrc.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveSrc.setDescription('Src-Address')
staIproVrrpEveVri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveVri.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveVri.setDescription('VRID')
staIproVrrpEveEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("invalid-ttl", 1), ("invalid-version", 2), ("bad-number-of-virtual-addresses", 3), ("bad-authentication-type", 4), ("bad-advertisement-interval", 5), ("invalid-vrid", 6), ("invalid-router-address", 7), ("invalid-priority", 8), ("virtual-router-stopped", 9), ("virtual-router-started", 10), ("link-up", 11), ("link-down", 12), ("new-master", 13), ("backup-started", 14), ("backup-ended", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveEve.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveEve.setDescription('Event')
staIproVrrpEveInf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproVrrpEveInf.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpEveInf.setDescription('Info')
staIproVrrpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIproVrrpDel.setStatus('current')
if mibBuilder.loadTexts: staIproVrrpDel.setDescription('Delete-Values')
staIproActiproTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30), )
if mibBuilder.loadTexts: staIproActiproTable.setStatus('current')
if mibBuilder.loadTexts: staIproActiproTable.setDescription('Act.-IP-Routing-Tab.')
staIproActiproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIproActiproIpa"), (0, "LANCOM-1711-MIB", "staIproActiproIpn"), (0, "LANCOM-1711-MIB", "staIproActiproRtg"))
if mibBuilder.loadTexts: staIproActiproEntry.setStatus('current')
if mibBuilder.loadTexts: staIproActiproEntry.setDescription('entry in table')
staIproActiproIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproIpa.setStatus('current')
if mibBuilder.loadTexts: staIproActiproIpa.setDescription('IP-Address')
staIproActiproIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproIpn.setStatus('current')
if mibBuilder.loadTexts: staIproActiproIpn.setDescription('IP-Netmask')
staIproActiproRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproRtg.setStatus('current')
if mibBuilder.loadTexts: staIproActiproRtg.setDescription('Rtg-tag')
staIproActiproGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproGat.setStatus('current')
if mibBuilder.loadTexts: staIproActiproGat.setDescription('Gateway')
staIproActiproPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproPee.setStatus('current')
if mibBuilder.loadTexts: staIproActiproPee.setDescription('Peer')
staIproActiproDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproDis.setStatus('current')
if mibBuilder.loadTexts: staIproActiproDis.setDescription('Distance')
staIproActiproMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproMas.setStatus('current')
if mibBuilder.loadTexts: staIproActiproMas.setDescription('Masquerade')
staIproActiproTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("static", 1), ("rip", 2), ("vpn", 3), ("capwap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIproActiproTyp.setStatus('current')
if mibBuilder.loadTexts: staIproActiproTyp.setDescription('Type')
staConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11))
staConfLanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLanactiv.setStatus('current')
if mibBuilder.loadTexts: staConfLanactiv.setDescription('LAN-Active-Connections')
staConfLantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLantotal.setStatus('current')
if mibBuilder.loadTexts: staConfLantotal.setDescription('LAN-Total-Connections')
staConfWanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfWanactiv.setStatus('current')
if mibBuilder.loadTexts: staConfWanactiv.setDescription('WAN-Active-Connections')
staConfWantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfWantotal.setStatus('current')
if mibBuilder.loadTexts: staConfWantotal.setDescription('WAN-Total-Connections')
staConfOutbanda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbanda.setStatus('current')
if mibBuilder.loadTexts: staConfOutbanda.setDescription('Outband-Active-Connections')
staConfOutbandt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbandt.setStatus('current')
if mibBuilder.loadTexts: staConfOutbandt.setDescription('Outband-total-Connections')
staConfOutbandb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfOutbandb.setStatus('current')
if mibBuilder.loadTexts: staConfOutbandb.setDescription('Outband-Bitrate')
staConfLoginerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginerr.setStatus('current')
if mibBuilder.loadTexts: staConfLoginerr.setDescription('Login-Errors')
staConfLoginloc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginloc.setStatus('current')
if mibBuilder.loadTexts: staConfLoginloc.setDescription('Login-Locks')
staConfLoginrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLoginrej.setStatus('current')
if mibBuilder.loadTexts: staConfLoginrej.setDescription('Login-Rejects')
staConfStartsca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfStartsca.setStatus('current')
if mibBuilder.loadTexts: staConfStartsca.setDescription('Start-Scan')
staConfScanresuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14), )
if mibBuilder.loadTexts: staConfScanresuTable.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuTable.setDescription('Scan-Results')
staConfScanresuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfScanresuIpadd"), (0, "LANCOM-1711-MIB", "staConfScanresuRtgta"))
if mibBuilder.loadTexts: staConfScanresuEntry.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuEntry.setDescription('entry in table')
staConfScanresuIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuIpadd.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuIpadd.setDescription('IP-Address')
staConfScanresuRtgta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuRtgta.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuRtgta.setDescription('Rtg-tag')
staConfScanresuName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuName.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuName.setDescription('Name')
staConfScanresuDevic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuDevic.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuDevic.setDescription('Device-Type')
staConfScanresuVersi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuVersi.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuVersi.setDescription('Version')
staConfScanresuCapip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuCapip.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuCapip.setDescription('CAPI-Port')
staConfScanresuHttpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuHttpp.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuHttpp.setDescription('HTTP-Port')
staConfScanresuHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuHttps.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuHttps.setDescription('HTTPS-Port')
staConfScanresuState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("scanning", 0), ("ready", 1), ("error", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfScanresuState.setStatus('current')
if mibBuilder.loadTexts: staConfScanresuState.setDescription('State')
staConfFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16), )
if mibBuilder.loadTexts: staConfFeaturesTable.setStatus('current')
if mibBuilder.loadTexts: staConfFeaturesTable.setDescription('Features')
staConfFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfFeaturesFea"))
if mibBuilder.loadTexts: staConfFeaturesEntry.setStatus('current')
if mibBuilder.loadTexts: staConfFeaturesEntry.setDescription('entry in table')
staConfFeaturesFea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("ipx", 1), ("lan-bridge", 2), ("lancapi", 3), ("leased-line", 4), ("switched-line", 5), ("dsl-interface", 6), ("fax", 7), ("modem", 8), ("vpn-5", 9), ("vpn-25", 10), ("vpn-25-old", 11), ("vpn-50-old", 12), ("vpn-100", 13), ("wlc-4025-100", 14), ("wlan-point-to-point", 15), ("public-spot", 16), ("vpn-200", 17), ("vpn-500", 18), ("vpn-1000", 19), ("hermes1-wpa", 20), ("vpn-3", 21), ("umts", 22), ("dynamic-vpn", 23), ("wlan-5ghz", 24), ("wlan-no-encryption", 25), ("voip-advanced-32", 26), ("voip-basic", 27), ("wlan-fcc-restrictions", 28), ("wlc-4025-50", 29), ("wlc-4006-12", 30), ("voip-advanced-8", 31), ("unused", 32), ("unused", 33), ("utm-antivirus-small", 34), ("utm-antispam-small", 35), ("utm-contentfilter-small", 36), ("wlc-public-spot", 37), ("wlan-monitor-mode", 38), ("wlan-no-5ghz", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfFeaturesFea.setStatus('current')
if mibBuilder.loadTexts: staConfFeaturesFea.setDescription('Feature')
staConfFeaturesExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfFeaturesExp.setStatus('current')
if mibBuilder.loadTexts: staConfFeaturesExp.setDescription('Expire')
staConfAntithef = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15))
staConfAntithefState = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("active", 1), ("successfull", 2), ("locked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefState.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefState.setDescription('State')
staConfAntithefSendi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefSendi.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefSendi.setDescription('sending-call-to')
staConfAntithefWaiti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefWaiti.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefWaiti.setDescription('waiting-for-call-from')
staConfAntithefLasts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefLasts.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefLasts.setDescription('last-seen-call-from')
staConfAntithefCalla = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefCalla.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefCalla.setDescription('call-accepted')
staConfAntithefIncom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefIncom.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefIncom.setDescription('incoming-call')
staConfAntithefLaste = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 16, 17, 18, 19, 21, 22, 26, 27, 31, 34, 42, 81, 88, 41, 50, 63))).clone(namedValues=NamedValues(("unknown", 0), ("unallocated-number", 1), ("no-route-to-destination", 3), ("normal-call-clearing", 16), ("user-busy", 17), ("no-user-responding", 18), ("user-alerting-no-answer", 19), ("call-rejected", 21), ("number-changed", 22), ("non-selected-user-clearing", 26), ("destination-out-of-order", 27), ("normal-unspecified", 31), ("no-channel-available", 34), ("switching-equipment-congestion", 42), ("invalid-call-reference-number", 81), ("incompatible-destination", 88), ("temp-failure", 41), ("facility-not-subscribed", 50), ("facility-not-available", 63)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefLaste.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefLaste.setDescription('last-error')
staConfAntithefMetho = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic-call", 0), ("facility", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfAntithefMetho.setStatus('current')
if mibBuilder.loadTexts: staConfAntithefMetho.setDescription('Method')
staConfLl2m = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65))
staConfLl2mRxpa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxpa.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxpa.setDescription('Rx-Packets')
staConfLl2mRxbr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxbr.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxbr.setDescription('Rx-Broadcast-Packets')
staConfLl2mRxmu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxmu.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxmu.setDescription('Rx-Multicast-Packets')
staConfLl2mRxun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxun.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxun.setDescription('Rx-Unicast-Packets')
staConfLl2mRxdi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxdi.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxdi.setDescription('Rx-Discard')
staConfLl2mRxma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mRxma.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mRxma.setDescription('Rx-Malformed')
staConfLl2mServ = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20))
staConfLl2mServRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxp.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServRxp.setDescription('Rx-Packets')
staConfLl2mServRxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxb.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServRxb.setDescription('Rx-Broadcast-Packets')
staConfLl2mServRxm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxm.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServRxm.setDescription('Rx-Multicast-Packets')
staConfLl2mServRxu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxu.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServRxu.setDescription('Rx-Unicast-Packets')
staConfLl2mServRxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mServRxd.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServRxd.setDescription('Rx-Discard')
staConfLl2mServDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mServDel.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mServDel.setDescription('Delete-Values')
staConfLl2mClie = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30))
staConfLl2mClieRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxp.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieRxp.setDescription('Rx-Packets')
staConfLl2mClieRxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxb.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieRxb.setDescription('Rx-Broadcast-Packets')
staConfLl2mClieRxm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxm.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieRxm.setDescription('Rx-Multicast-Packets')
staConfLl2mClieRxu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxu.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieRxu.setDescription('Rx-Unicast-Packets')
staConfLl2mClieRxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfLl2mClieRxd.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieRxd.setDescription('Rx-Discard')
staConfLl2mClieDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mClieDel.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mClieDel.setDescription('Delete-Values')
staConfLl2mDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfLl2mDele.setStatus('current')
if mibBuilder.loadTexts: staConfLl2mDele.setDescription('Delete-Values')
staConfDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfDeleteva.setStatus('current')
if mibBuilder.loadTexts: staConfDeleteva.setDescription('Delete-Values')
staConfEventlogTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12), )
if mibBuilder.loadTexts: staConfEventlogTable.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogTable.setDescription('Event-Log')
staConfEventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConfEventlogIdx"))
if mibBuilder.loadTexts: staConfEventlogEntry.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogEntry.setDescription('entry in table')
staConfEventlogIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogIdx.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogIdx.setDescription('Idx.')
staConfEventlogSyste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogSyste.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogSyste.setDescription('System-time')
staConfEventlogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogEvent.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogEvent.setDescription('Event')
staConfEventlogAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 254, 255))).clone(namedValues=NamedValues(("outband", 0), ("telnet", 1), ("tftp", 2), ("http", 3), ("snmp", 4), ("https", 5), ("telnet-ssl", 6), ("ssh", 7), ("ll2m", 8), ("ppp", 254), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogAcces.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogAcces.setDescription('Access')
staConfEventlogIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogIpadd.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogIpadd.setDescription('IP-Address')
staConfEventlogInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogInfo1.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogInfo1.setDescription('Info1')
staConfEventlogInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfEventlogInfo2.setStatus('current')
if mibBuilder.loadTexts: staConfEventlogInfo2.setDescription('Info2')
staQueu = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12))
staQueuLanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuLanheap.setStatus('current')
if mibBuilder.loadTexts: staQueuLanheap.setDescription('LAN-Heap-Packets')
staQueuQueuepa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuQueuepa.setStatus('current')
if mibBuilder.loadTexts: staQueuQueuepa.setDescription('Queue-Packets')
staQueuWanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuWanheap.setStatus('current')
if mibBuilder.loadTexts: staQueuWanheap.setDescription('WAN-Heap-Packets')
staQueuWanqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuWanqueu.setStatus('current')
if mibBuilder.loadTexts: staQueuWanqueu.setDescription('WAN-Queue-Packets')
staQueuArpquer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuArpquer.setStatus('current')
if mibBuilder.loadTexts: staQueuArpquer.setDescription('ARP-query-Queue-Packets')
staQueuArpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuArpqueu.setStatus('current')
if mibBuilder.loadTexts: staQueuArpqueu.setDescription('ARP-Queue-Packets')
staQueuIpqueue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIpqueue.setStatus('current')
if mibBuilder.loadTexts: staQueuIpqueue.setDescription('IP-Queue-Packets')
staQueuIpurgen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIpurgen.setStatus('current')
if mibBuilder.loadTexts: staQueuIpurgen.setDescription('IP-urgent-Queue-Packets')
staQueuIcmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIcmpque.setStatus('current')
if mibBuilder.loadTexts: staQueuIcmpque.setDescription('ICMP-Queue-Packets')
staQueuTcpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuTcpqueu.setStatus('current')
if mibBuilder.loadTexts: staQueuTcpqueu.setDescription('TCP-Queue-Packets')
staQueuTftpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuTftpser.setStatus('current')
if mibBuilder.loadTexts: staQueuTftpser.setDescription('TFTP-server-Queue-Packets')
staQueuSnmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuSnmpque.setStatus('current')
if mibBuilder.loadTexts: staQueuSnmpque.setDescription('SNMP-Queue-Packets')
staQueuProthea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuProthea.setStatus('current')
if mibBuilder.loadTexts: staQueuProthea.setDescription('PROT-Heap-Packets')
staQueuDhcpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDhcpser.setStatus('current')
if mibBuilder.loadTexts: staQueuDhcpser.setDescription('DHCP-server-Queue-Packets')
staQueuDhcpcli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDhcpcli.setStatus('current')
if mibBuilder.loadTexts: staQueuDhcpcli.setDescription('DHCP-client-Queue-Packets')
staQueuIprripq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuIprripq.setStatus('current')
if mibBuilder.loadTexts: staQueuIprripq.setDescription('IPR-RIP-Queue-Packets')
staQueuDnstxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDnstxqu.setStatus('current')
if mibBuilder.loadTexts: staQueuDnstxqu.setDescription('DNS-TX-Queue-Packets')
staQueuDnsrxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueuDnsrxqu.setStatus('current')
if mibBuilder.loadTexts: staQueuDnsrxqu.setDescription('DNS-RX-Queue-Packets')
staConnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13), )
if mibBuilder.loadTexts: staConnTable.setStatus('current')
if mibBuilder.loadTexts: staConnTable.setDescription('Connection')
staConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staConnIfc"))
if mibBuilder.loadTexts: staConnEntry.setStatus('current')
if mibBuilder.loadTexts: staConnEntry.setDescription('entry in table')
staConnIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnIfc.setStatus('current')
if mibBuilder.loadTexts: staConnIfc.setDescription('Ifc')
staConnConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnConn.setStatus('current')
if mibBuilder.loadTexts: staConnConn.setDescription('Connections')
staConnActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnActi.setStatus('current')
if mibBuilder.loadTexts: staConnActi.setDescription('active')
staConnPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnPass.setStatus('current')
if mibBuilder.loadTexts: staConnPass.setDescription('passive')
staConnErro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnErro.setStatus('current')
if mibBuilder.loadTexts: staConnErro.setDescription('Errors')
staConnCont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnCont.setStatus('current')
if mibBuilder.loadTexts: staConnCont.setDescription('Con.-Time')
staConnChar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnChar.setStatus('current')
if mibBuilder.loadTexts: staConnChar.setDescription('Charge')
staInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14), )
if mibBuilder.loadTexts: staInfoTable.setStatus('current')
if mibBuilder.loadTexts: staInfoTable.setDescription('Info-Connection')
staInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staInfoIfc"))
if mibBuilder.loadTexts: staInfoEntry.setStatus('current')
if mibBuilder.loadTexts: staInfoEntry.setDescription('entry in table')
staInfoIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoIfc.setStatus('current')
if mibBuilder.loadTexts: staInfoIfc.setDescription('Ifc')
staInfoSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoSta.setStatus('current')
if mibBuilder.loadTexts: staInfoSta.setDescription('Status')
staInfoMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoMod.setStatus('current')
if mibBuilder.loadTexts: staInfoMod.setDescription('Mode')
staInfoDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoDia.setStatus('current')
if mibBuilder.loadTexts: staInfoDia.setDescription('Dialup-remote')
staInfoPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoPee.setStatus('current')
if mibBuilder.loadTexts: staInfoPee.setDescription('Peer')
staInfoB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoB1d.setStatus('current')
if mibBuilder.loadTexts: staInfoB1d.setDescription('B1-DT')
staInfoB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfoB2d.setStatus('current')
if mibBuilder.loadTexts: staInfoB2d.setDescription('B2-DT')
staLayeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15), )
if mibBuilder.loadTexts: staLayeTable.setStatus('current')
if mibBuilder.loadTexts: staLayeTable.setDescription('Layer-Connection')
staLayeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLayeIfc"))
if mibBuilder.loadTexts: staLayeEntry.setStatus('current')
if mibBuilder.loadTexts: staLayeEntry.setDescription('entry in table')
staLayeIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeIfc.setStatus('current')
if mibBuilder.loadTexts: staLayeIfc.setDescription('Ifc')
staLayeWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeWanl.setStatus('current')
if mibBuilder.loadTexts: staLayeWanl.setDescription('WAN-layer')
staLayeEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeEnca.setStatus('current')
if mibBuilder.loadTexts: staLayeEnca.setDescription('Encaps.')
staLayeLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("trans", 0), ("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay3.setStatus('current')
if mibBuilder.loadTexts: staLayeLay3.setDescription('Lay-3')
staLayeLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 5, 0, 1))).clone(namedValues=NamedValues(("sscop", 6), ("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay2.setStatus('current')
if mibBuilder.loadTexts: staLayeLay2.setDescription('Lay-2')
staLayeL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeL2op.setStatus('current')
if mibBuilder.loadTexts: staLayeL2op.setDescription('L2-Opt.')
staLayeLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 0, 1, 3, 67, 131, 5))).clone(namedValues=NamedValues(("aal-5", 2), ("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeLay1.setStatus('current')
if mibBuilder.loadTexts: staLayeLay1.setDescription('Lay-1')
staLayeL1pa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("none", 0), ("v-21-300", 1), ("v-23-600", 2), ("v-23-1200", 3), ("v-22-1200", 4), ("v-22bis-2400", 5), ("v-32qam-4800", 6), ("v-32qam-9600", 7), ("v-32bis-7200", 8), ("v-32tcm-9600", 9), ("v-32bis-12000", 10), ("v-32bis-14400", 11), ("v-34-2400", 12), ("v-34-4800", 13), ("v-34-7200", 14), ("v-34-9600", 15), ("v-34-12000", 16), ("v-34-14400", 17), ("v-34-16800", 18), ("v-34-19200", 19), ("v-34-21600", 20), ("v-34-24000", 21), ("v-34-26400", 22), ("v-34-28800", 23), ("v-34-31200", 24), ("v-34-33600", 25), ("v-90-28000", 26), ("v-90-29333", 27), ("v-90-30667", 28), ("v-90-32000", 29), ("v-90-33333", 30), ("v-90-34667", 31), ("v-90-36000", 32), ("v-90-37333", 33), ("v-90-38667", 34), ("v-90-40000", 35), ("v-90-41333", 36), ("v-90-42667", 37), ("v-90-44000", 38), ("v-90-45333", 39), ("v-90-46667", 40), ("v-90-48000", 41), ("v-90-49333", 42), ("v-90-50667", 43), ("v-90-52000", 44), ("v-90-53333", 45), ("v-90-54667", 46), ("v-90-56000", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayeL1pa.setStatus('current')
if mibBuilder.loadTexts: staLayeL1pa.setDescription('L1-Parameter')
staCallTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16), )
if mibBuilder.loadTexts: staCallTable.setStatus('current')
if mibBuilder.loadTexts: staCallTable.setDescription('Call-Information')
staCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCallSys"), (0, "LANCOM-1711-MIB", "staCallCou"))
if mibBuilder.loadTexts: staCallEntry.setStatus('current')
if mibBuilder.loadTexts: staCallEntry.setDescription('entry in table')
staCallSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallSys.setStatus('current')
if mibBuilder.loadTexts: staCallSys.setDescription('System-time')
staCallIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallIfc.setStatus('current')
if mibBuilder.loadTexts: staCallIfc.setDescription('Ifc')
staCallCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCli.setStatus('current')
if mibBuilder.loadTexts: staCallCli.setDescription('CLIP-Caller')
staCallDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallDia.setStatus('current')
if mibBuilder.loadTexts: staCallDia.setDescription('Dial-Caller')
staCallCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 3, 67, 131, 5, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 255), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5), ("a-3-1khz", 13), ("speech", 14), ("fax-g2-3", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCap.setStatus('current')
if mibBuilder.loadTexts: staCallCap.setDescription('Capab.')
staCallBch = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallBch.setStatus('current')
if mibBuilder.loadTexts: staCallBch.setDescription('B-chan.')
staCallCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCallCou.setStatus('current')
if mibBuilder.loadTexts: staCallCou.setDescription('Counter')
staRemoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17), )
if mibBuilder.loadTexts: staRemoTable.setStatus('current')
if mibBuilder.loadTexts: staRemoTable.setDescription('Remote-Connections')
staRemoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staRemoConns"), (0, "LANCOM-1711-MIB", "staRemoCount"))
if mibBuilder.loadTexts: staRemoEntry.setStatus('current')
if mibBuilder.loadTexts: staRemoEntry.setDescription('entry in table')
staRemoConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoConns.setStatus('current')
if mibBuilder.loadTexts: staRemoConns.setDescription('Conn.-start')
staRemoRemot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoRemot.setStatus('current')
if mibBuilder.loadTexts: staRemoRemot.setDescription('Remote-ID')
staRemoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoMode.setStatus('current')
if mibBuilder.loadTexts: staRemoMode.setDescription('Mode')
staRemoIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoIfc.setStatus('current')
if mibBuilder.loadTexts: staRemoIfc.setDescription('Ifc')
staRemoConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoConnt.setStatus('current')
if mibBuilder.loadTexts: staRemoConnt.setDescription('Conn.-time')
staRemoCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoCharg.setStatus('current')
if mibBuilder.loadTexts: staRemoCharg.setDescription('Charge')
staRemoCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemoCount.setStatus('current')
if mibBuilder.loadTexts: staRemoCount.setDescription('Counter')
staCurr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCurr.setStatus('current')
if mibBuilder.loadTexts: staCurr.setDescription('Current-Time')
staTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21))
staTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeCur.setStatus('current')
if mibBuilder.loadTexts: staTimeCur.setDescription('Current-Time')
staTimeSou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 9, 8, 0))).clone(namedValues=NamedValues(("manual", 1), ("isdn", 2), ("lan", 3), ("ram", 4), ("ntp", 9), ("lanconfig", 8), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSou.setStatus('current')
if mibBuilder.loadTexts: staTimeSou.setDescription('Source')
staTimeSet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSet.setStatus('current')
if mibBuilder.loadTexts: staTimeSet.setDescription('Set-Count')
staTimeIsd = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4))
staTimeIsdConne = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdConne.setStatus('current')
if mibBuilder.loadTexts: staTimeIsdConne.setDescription('Connection')
staTimeIsdInfor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdInfor.setStatus('current')
if mibBuilder.loadTexts: staTimeIsdInfor.setDescription('Information')
staTimeIsdInfoe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdInfoe.setStatus('current')
if mibBuilder.loadTexts: staTimeIsdInfoe.setDescription('Info-Error')
staTimeIsdUnits = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeIsdUnits.setStatus('current')
if mibBuilder.loadTexts: staTimeIsdUnits.setDescription('Units')
staTimeIsdDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeIsdDelet.setStatus('current')
if mibBuilder.loadTexts: staTimeIsdDelet.setDescription('Delete-Values')
staTimeUtc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeUtc.setStatus('current')
if mibBuilder.loadTexts: staTimeUtc.setDescription('UTC-in-Seconds')
staTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeTim.setStatus('current')
if mibBuilder.loadTexts: staTimeTim.setDescription('Timezone')
staTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDay.setStatus('current')
if mibBuilder.loadTexts: staTimeDay.setDescription('Daylight-saving-time')
staTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12), )
if mibBuilder.loadTexts: staTimeDstTable.setStatus('current')
if mibBuilder.loadTexts: staTimeDstTable.setDescription('DST-clock-changes')
staTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staTimeDstEve"))
if mibBuilder.loadTexts: staTimeDstEntry.setStatus('current')
if mibBuilder.loadTexts: staTimeDstEntry.setDescription('entry in table')
staTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDstEve.setStatus('current')
if mibBuilder.loadTexts: staTimeDstEve.setDescription('Event')
staTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstInd.setStatus('current')
if mibBuilder.loadTexts: staTimeDstInd.setDescription('Index')
staTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstDay.setStatus('current')
if mibBuilder.loadTexts: staTimeDstDay.setDescription('Day')
staTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMon.setStatus('current')
if mibBuilder.loadTexts: staTimeDstMon.setDescription('Month')
staTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstHou.setStatus('current')
if mibBuilder.loadTexts: staTimeDstHou.setDescription('Hour')
staTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMin.setStatus('current')
if mibBuilder.loadTexts: staTimeDstMin.setDescription('Minute')
staTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstTim.setStatus('current')
if mibBuilder.loadTexts: staTimeDstTim.setDescription('Time-type')
staLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22))
staLcrTot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrTot.setStatus('current')
if mibBuilder.loadTexts: staLcrTot.setDescription('Total-Calls')
staLcrFou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrFou.setStatus('current')
if mibBuilder.loadTexts: staLcrFou.setDescription('Found-Events')
staLcrNot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrNot.setStatus('current')
if mibBuilder.loadTexts: staLcrNot.setDescription('Notfound-Errors')
staLcrMis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrMis.setStatus('current')
if mibBuilder.loadTexts: staLcrMis.setDescription('Missingtime-Errors')
staLcrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6), )
if mibBuilder.loadTexts: staLcrProTable.setStatus('current')
if mibBuilder.loadTexts: staLcrProTable.setDescription('Provider')
staLcrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staLcrProPro"))
if mibBuilder.loadTexts: staLcrProEntry.setStatus('current')
if mibBuilder.loadTexts: staLcrProEntry.setDescription('entry in table')
staLcrProPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProPro.setStatus('current')
if mibBuilder.loadTexts: staLcrProPro.setDescription('Provider')
staLcrProFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProFai.setStatus('current')
if mibBuilder.loadTexts: staLcrProFai.setDescription('Failures')
staLcrProSuc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProSuc.setStatus('current')
if mibBuilder.loadTexts: staLcrProSuc.setDescription('Successes')
staLcrDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLcrDel.setStatus('current')
if mibBuilder.loadTexts: staLcrDel.setDescription('Delete-Values')
staChar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24))
staCharSpareda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareda.setStatus('current')
if mibBuilder.loadTexts: staCharSpareda.setDescription('Spare-Days-per-Period')
staCharSpareun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareun.setStatus('current')
if mibBuilder.loadTexts: staCharSpareun.setDescription('Spare-Units')
staCharRouteru = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouteru.setStatus('current')
if mibBuilder.loadTexts: staCharRouteru.setDescription('Router-Units')
staCharTotalun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTotalun.setStatus('current')
if mibBuilder.loadTexts: staCharTotalun.setDescription('Total-Units')
staCharTablebuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5), )
if mibBuilder.loadTexts: staCharTablebuTable.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuTable.setDescription('Table-Budget')
staCharTablebuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCharTablebuIfc"))
if mibBuilder.loadTexts: staCharTablebuEntry.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuEntry.setDescription('entry in table')
staCharTablebuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("router-isdn-serial", 1), ("lancapi", 2), ("ab-1", 3), ("ab-2", 4), ("ab-3", 5), ("ab-4", 6), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuIfc.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuIfc.setDescription('Ifc')
staCharTablebuBud = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuBud.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuBud.setDescription('Budget-units')
staCharTablebuSpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuSpa.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuSpa.setDescription('Spare-Budget')
staCharTablebuTot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTablebuTot.setStatus('current')
if mibBuilder.loadTexts: staCharTablebuTot.setDescription('Total-units')
staCharSparedi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSparedi.setStatus('current')
if mibBuilder.loadTexts: staCharSparedi.setDescription('Spare-Dialup-Minutes')
staCharRouteri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouteri.setStatus('current')
if mibBuilder.loadTexts: staCharRouteri.setDescription('Router-ISDN-Serial-Minutes-Active')
staCharSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharSpareds.setStatus('current')
if mibBuilder.loadTexts: staCharSpareds.setDescription('Spare-DSL-Broadband-Minutes')
staCharRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharRouterd.setStatus('current')
if mibBuilder.loadTexts: staCharRouterd.setDescription('Router-DSL-Broadband-Minutes-Active')
staCharTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2), )
if mibBuilder.loadTexts: staCharTimetabTable.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabTable.setDescription('Time-Table')
staCharTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCharTimetabIfc"))
if mibBuilder.loadTexts: staCharTimetabEntry.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabEntry.setDescription('entry in table')
staCharTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-isdn-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabIfc.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabIfc.setDescription('Ifc')
staCharTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabBudgetmi.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabBudgetmi.setDescription('Budget-minutes')
staCharTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabSparemin.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabSparemin.setDescription('Spare-minutes')
staCharTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabMinutesa.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabMinutesa.setDescription('Minutes-active')
staCharTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCharTimetabMinutesp.setStatus('current')
if mibBuilder.loadTexts: staCharTimetabMinutesp.setDescription('Minutes-passive')
staCharDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCharDeletev.setStatus('current')
if mibBuilder.loadTexts: staCharDeletev.setDescription('Delete-Values')
staDsl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25))
staDslIntTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1), )
if mibBuilder.loadTexts: staDslIntTable.setStatus('current')
if mibBuilder.loadTexts: staDslIntTable.setDescription('Interfaces')
staDslIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslIntIfc"))
if mibBuilder.loadTexts: staDslIntEntry.setStatus('current')
if mibBuilder.loadTexts: staDslIntEntry.setDescription('entry in table')
staDslIntIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslIntIfc.setStatus('current')
if mibBuilder.loadTexts: staDslIntIfc.setDescription('Ifc')
staDslIntLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslIntLin.setStatus('current')
if mibBuilder.loadTexts: staDslIntLin.setDescription('Link-Active')
staDslBytTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2), )
if mibBuilder.loadTexts: staDslBytTable.setStatus('current')
if mibBuilder.loadTexts: staDslBytTable.setDescription('Byte-Transport')
staDslBytEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslBytIfc"))
if mibBuilder.loadTexts: staDslBytEntry.setStatus('current')
if mibBuilder.loadTexts: staDslBytEntry.setDescription('entry in table')
staDslBytIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytIfc.setStatus('current')
if mibBuilder.loadTexts: staDslBytIfc.setDescription('Ifc')
staDslBytTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytTxb.setStatus('current')
if mibBuilder.loadTexts: staDslBytTxb.setDescription('Tx-Bytes')
staDslBytRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslBytRxb.setStatus('current')
if mibBuilder.loadTexts: staDslBytRxb.setDescription('Rx-Bytes')
staDslPacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3), )
if mibBuilder.loadTexts: staDslPacTable.setStatus('current')
if mibBuilder.loadTexts: staDslPacTable.setDescription('Packet-Transport')
staDslPacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslPacIfc"))
if mibBuilder.loadTexts: staDslPacEntry.setStatus('current')
if mibBuilder.loadTexts: staDslPacEntry.setDescription('entry in table')
staDslPacIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacIfc.setStatus('current')
if mibBuilder.loadTexts: staDslPacIfc.setDescription('Ifc')
staDslPacRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxp.setStatus('current')
if mibBuilder.loadTexts: staDslPacRxp.setDescription('Rx-Packets')
staDslPacTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxp.setStatus('current')
if mibBuilder.loadTexts: staDslPacTxp.setDescription('Tx-Packets')
staDslPacRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxb.setStatus('current')
if mibBuilder.loadTexts: staDslPacRxb.setDescription('Rx-Broadcasts')
staDslPacRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxm.setStatus('current')
if mibBuilder.loadTexts: staDslPacRxm.setDescription('Rx-Multicasts')
staDslPacRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacRxu.setStatus('current')
if mibBuilder.loadTexts: staDslPacRxu.setDescription('Rx-Unicasts')
staDslPacTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxb.setStatus('current')
if mibBuilder.loadTexts: staDslPacTxb.setDescription('Tx-Broadcasts')
staDslPacTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxm.setStatus('current')
if mibBuilder.loadTexts: staDslPacTxm.setDescription('Tx-Multicasts')
staDslPacTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPacTxu.setStatus('current')
if mibBuilder.loadTexts: staDslPacTxu.setDescription('Tx-Unicasts')
staDslErrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4), )
if mibBuilder.loadTexts: staDslErrTable.setStatus('current')
if mibBuilder.loadTexts: staDslErrTable.setDescription('Errors')
staDslErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDslErrIfc"))
if mibBuilder.loadTexts: staDslErrEntry.setStatus('current')
if mibBuilder.loadTexts: staDslErrEntry.setDescription('entry in table')
staDslErrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrIfc.setStatus('current')
if mibBuilder.loadTexts: staDslErrIfc.setDescription('Ifc')
staDslErrRxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxerro.setStatus('current')
if mibBuilder.loadTexts: staDslErrRxerro.setDescription('Rx-Errors')
staDslErrTxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxerro.setStatus('current')
if mibBuilder.loadTexts: staDslErrTxerro.setDescription('Tx-Errors')
staDslErrStacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrStacke.setStatus('current')
if mibBuilder.loadTexts: staDslErrStacke.setDescription('Stack-Errors')
staDslErrNicerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrNicerr.setStatus('current')
if mibBuilder.loadTexts: staDslErrNicerr.setDescription('NIC-Errors')
staDslErrQueuee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrQueuee.setStatus('current')
if mibBuilder.loadTexts: staDslErrQueuee.setDescription('Queue-Errors')
staDslErrRxcrce = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxcrce.setStatus('current')
if mibBuilder.loadTexts: staDslErrRxcrce.setDescription('Rx-CRC-Errors')
staDslErrCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrCollis.setStatus('current')
if mibBuilder.loadTexts: staDslErrCollis.setDescription('Collisions')
staDslErrSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrSingle.setStatus('current')
if mibBuilder.loadTexts: staDslErrSingle.setDescription('Single-Collisions')
staDslErrMultip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrMultip.setStatus('current')
if mibBuilder.loadTexts: staDslErrMultip.setDescription('Multiple-Collisions')
staDslErrLateco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrLateco.setStatus('current')
if mibBuilder.loadTexts: staDslErrLateco.setDescription('Late-Collisions')
staDslErrExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrExcess.setStatus('current')
if mibBuilder.loadTexts: staDslErrExcess.setDescription('Excessive-Collisions')
staDslErrRxalig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxalig.setStatus('current')
if mibBuilder.loadTexts: staDslErrRxalig.setDescription('Rx-Align-Errors')
staDslErrRxtoos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxtoos.setStatus('current')
if mibBuilder.loadTexts: staDslErrRxtoos.setDescription('Rx-Too-Short')
staDslErrRxtool = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrRxtool.setStatus('current')
if mibBuilder.loadTexts: staDslErrRxtool.setDescription('Rx-Too-Long')
staDslErrTxcarr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxcarr.setStatus('current')
if mibBuilder.loadTexts: staDslErrTxcarr.setDescription('Tx-Carrier')
staDslErrTxdefe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslErrTxdefe.setStatus('current')
if mibBuilder.loadTexts: staDslErrTxdefe.setDescription('Tx-Deferred')
staDslPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23))
staDslPppTxpadi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadi.setStatus('current')
if mibBuilder.loadTexts: staDslPppTxpadi.setDescription('Tx-PADI')
staDslPppRxpado = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpado.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxpado.setDescription('Rx-PADO')
staDslPppTxpadr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadr.setStatus('current')
if mibBuilder.loadTexts: staDslPppTxpadr.setDescription('Tx-PADR')
staDslPppRxpads = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpads.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxpads.setDescription('Rx-PADS')
staDslPppTxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxpadt.setStatus('current')
if mibBuilder.loadTexts: staDslPppTxpadt.setDescription('Tx-PADT')
staDslPppRxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxpadt.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxpadt.setDescription('Rx-PADT')
staDslPppTxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxprot.setStatus('current')
if mibBuilder.loadTexts: staDslPppTxprot.setDescription('Tx-Protocol')
staDslPppRxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxprot.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxprot.setDescription('Rx-Protocol')
staDslPppTxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppTxdata.setStatus('current')
if mibBuilder.loadTexts: staDslPppTxdata.setDescription('Tx-Data')
staDslPppRxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxdata.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxdata.setDescription('Rx-Data')
staDslPppRxbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppRxbad.setStatus('current')
if mibBuilder.loadTexts: staDslPppRxbad.setDescription('Rx-Bad')
staDslPppAcname = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppAcname.setStatus('current')
if mibBuilder.loadTexts: staDslPppAcname.setDescription('AC-Name')
staDslPppServic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppServic.setStatus('current')
if mibBuilder.loadTexts: staDslPppServic.setDescription('Service')
staDslPppDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslPppDelete.setStatus('current')
if mibBuilder.loadTexts: staDslPppDelete.setDescription('Delete-Values')
staDslDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslDel.setStatus('current')
if mibBuilder.loadTexts: staDslDel.setDescription('Delete-Values')
staVpn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26))
staVpnPeers = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnPeers.setStatus('current')
if mibBuilder.loadTexts: staVpnPeers.setDescription('Peers')
staVpnRules = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnRules.setStatus('current')
if mibBuilder.loadTexts: staVpnRules.setDescription('Rules')
staVpnTunnel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnTunnel.setStatus('current')
if mibBuilder.loadTexts: staVpnTunnel.setDescription('Tunnel')
staVpnIkesas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkesas.setStatus('current')
if mibBuilder.loadTexts: staVpnIkesas.setDescription('IKE-SAs')
staVpnEspsas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspsas.setStatus('current')
if mibBuilder.loadTexts: staVpnEspsas.setDescription('ESP-SAs')
staVpnAhsas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhsas.setStatus('current')
if mibBuilder.loadTexts: staVpnAhsas.setDescription('AH-SAs')
staVpnIpcomps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcomps.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcomps.setDescription('IPCOMP-SAs')
staVpnIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8), )
if mibBuilder.loadTexts: staVpnIkeTable.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeTable.setDescription('IKE')
staVpnIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnIkeIdx"))
if mibBuilder.loadTexts: staVpnIkeEntry.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeEntry.setDescription('entry in table')
staVpnIkeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIdx.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeIdx.setDescription('Idx.')
staVpnIkePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkePeer.setStatus('current')
if mibBuilder.loadTexts: staVpnIkePeer.setDescription('Peer')
staVpnIkeDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeDesta.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeDesta.setDescription('Dest.-Address')
staVpnIkeDstpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeDstpo.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeDstpo.setDescription('Dst-Port')
staVpnIkeSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSrcad.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeSrcad.setDescription('Src.-Address')
staVpnIkeSrcpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSrcpo.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeSrcpo.setDescription('Src-Port')
staVpnIkeCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeCrypt.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeCrypt.setDescription('Crypt-Alg')
staVpnIkeHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeHasha.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeHasha.setDescription('Hash-Alg')
staVpnIkeIkeau = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 65001, 65002, 65003, 65004, 65005, 65006))).clone(namedValues=NamedValues(("no", 0), ("pre-shared", 1), ("dss", 2), ("rsa-sig", 3), ("rsa-enc", 4), ("rsa-enc-rev", 5), ("el-gamal-enc", 6), ("el-gamal-enc-rev", 7), ("ecdsa-sig", 8), ("pre-shared-init-xauth", 65001), ("pre-shared-resp-xauth", 65002), ("dss-init-xauth", 65003), ("dss-resp-xauth", 65004), ("rsa-init-xauth", 65005), ("rsa-resp-xauth", 65006)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIkeau.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeIkeau.setDescription('IKE-Auth-Mode')
staVpnIkeIniti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeIniti.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeIniti.setDescription('Initiator')
staVpnIkeAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeAge.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeAge.setDescription('Age')
staVpnIkeSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSofts.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeSofts.setDescription('Soft-Sec')
staVpnIkeMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeMaxse.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeMaxse.setDescription('Max-Sec')
staVpnIkeKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeKbyte.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeKbyte.setDescription('KByte')
staVpnIkeSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeSoftk.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeSoftk.setDescription('Soft-KByte')
staVpnIkeMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIkeMaxkb.setStatus('current')
if mibBuilder.loadTexts: staVpnIkeMaxkb.setDescription('Max-KByte')
staVpnEspTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9), )
if mibBuilder.loadTexts: staVpnEspTable.setStatus('current')
if mibBuilder.loadTexts: staVpnEspTable.setDescription('ESP')
staVpnEspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnEspIdx"))
if mibBuilder.loadTexts: staVpnEspEntry.setStatus('current')
if mibBuilder.loadTexts: staVpnEspEntry.setDescription('entry in table')
staVpnEspIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspIdx.setStatus('current')
if mibBuilder.loadTexts: staVpnEspIdx.setDescription('Idx.')
staVpnEspPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspPeer.setStatus('current')
if mibBuilder.loadTexts: staVpnEspPeer.setDescription('Peer')
staVpnEspDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspDesta.setStatus('current')
if mibBuilder.loadTexts: staVpnEspDesta.setDescription('Dest.-Address')
staVpnEspSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSrcad.setStatus('current')
if mibBuilder.loadTexts: staVpnEspSrcad.setDescription('Src.-Address')
staVpnEspMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMode.setStatus('current')
if mibBuilder.loadTexts: staVpnEspMode.setDescription('Mode')
staVpnEspCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspCrypt.setStatus('current')
if mibBuilder.loadTexts: staVpnEspCrypt.setDescription('Crypt-Alg')
staVpnEspHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspHasha.setStatus('current')
if mibBuilder.loadTexts: staVpnEspHasha.setDescription('Hash-Alg')
staVpnEspSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSpi.setStatus('current')
if mibBuilder.loadTexts: staVpnEspSpi.setDescription('SPI')
staVpnEspAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspAge.setStatus('current')
if mibBuilder.loadTexts: staVpnEspAge.setDescription('Age')
staVpnEspSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSofts.setStatus('current')
if mibBuilder.loadTexts: staVpnEspSofts.setDescription('Soft-Sec')
staVpnEspMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMaxse.setStatus('current')
if mibBuilder.loadTexts: staVpnEspMaxse.setDescription('Max-Sec')
staVpnEspKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspKbyte.setStatus('current')
if mibBuilder.loadTexts: staVpnEspKbyte.setDescription('KByte')
staVpnEspSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspSoftk.setStatus('current')
if mibBuilder.loadTexts: staVpnEspSoftk.setDescription('Soft-KByte')
staVpnEspMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnEspMaxkb.setStatus('current')
if mibBuilder.loadTexts: staVpnEspMaxkb.setDescription('Max-KByte')
staVpnAhTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10), )
if mibBuilder.loadTexts: staVpnAhTable.setStatus('current')
if mibBuilder.loadTexts: staVpnAhTable.setDescription('AH')
staVpnAhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnAhIdx"))
if mibBuilder.loadTexts: staVpnAhEntry.setStatus('current')
if mibBuilder.loadTexts: staVpnAhEntry.setDescription('entry in table')
staVpnAhIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhIdx.setStatus('current')
if mibBuilder.loadTexts: staVpnAhIdx.setDescription('Idx.')
staVpnAhPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhPeer.setStatus('current')
if mibBuilder.loadTexts: staVpnAhPeer.setDescription('Peer')
staVpnAhDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhDesta.setStatus('current')
if mibBuilder.loadTexts: staVpnAhDesta.setDescription('Dest.-Address')
staVpnAhSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSrcad.setStatus('current')
if mibBuilder.loadTexts: staVpnAhSrcad.setDescription('Src.-Address')
staVpnAhMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMode.setStatus('current')
if mibBuilder.loadTexts: staVpnAhMode.setDescription('Mode')
staVpnAhCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhCrypt.setStatus('current')
if mibBuilder.loadTexts: staVpnAhCrypt.setDescription('Crypt-Alg')
staVpnAhHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhHasha.setStatus('current')
if mibBuilder.loadTexts: staVpnAhHasha.setDescription('Hash-Alg')
staVpnAhSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSpi.setStatus('current')
if mibBuilder.loadTexts: staVpnAhSpi.setDescription('SPI')
staVpnAhAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhAge.setStatus('current')
if mibBuilder.loadTexts: staVpnAhAge.setDescription('Age')
staVpnAhSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSofts.setStatus('current')
if mibBuilder.loadTexts: staVpnAhSofts.setDescription('Soft-Sec')
staVpnAhMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMaxse.setStatus('current')
if mibBuilder.loadTexts: staVpnAhMaxse.setDescription('Max-Sec')
staVpnAhKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhKbyte.setStatus('current')
if mibBuilder.loadTexts: staVpnAhKbyte.setDescription('KByte')
staVpnAhSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhSoftk.setStatus('current')
if mibBuilder.loadTexts: staVpnAhSoftk.setDescription('Soft-KByte')
staVpnAhMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnAhMaxkb.setStatus('current')
if mibBuilder.loadTexts: staVpnAhMaxkb.setDescription('Max-KByte')
staVpnIpcompTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14), )
if mibBuilder.loadTexts: staVpnIpcompTable.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompTable.setDescription('IPCOMP')
staVpnIpcompEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnIpcompIdx"))
if mibBuilder.loadTexts: staVpnIpcompEntry.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompEntry.setDescription('entry in table')
staVpnIpcompIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompIdx.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompIdx.setDescription('Idx.')
staVpnIpcompPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompPeer.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompPeer.setDescription('Peer')
staVpnIpcompDesta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompDesta.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompDesta.setDescription('Dest.-Address')
staVpnIpcompSrcad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSrcad.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompSrcad.setDescription('Src.-Address')
staVpnIpcompMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMode.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompMode.setDescription('Mode')
staVpnIpcompCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompCrypt.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompCrypt.setDescription('Crypt-Alg')
staVpnIpcompHasha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompHasha.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompHasha.setDescription('Hash-Alg')
staVpnIpcompSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSpi.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompSpi.setDescription('SPI')
staVpnIpcompAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompAge.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompAge.setDescription('Age')
staVpnIpcompSofts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSofts.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompSofts.setDescription('Soft-Sec')
staVpnIpcompMaxse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMaxse.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompMaxse.setDescription('Max-Sec')
staVpnIpcompKbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompKbyte.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompKbyte.setDescription('KByte')
staVpnIpcompSoftk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompSoftk.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompSoftk.setDescription('Soft-KByte')
staVpnIpcompMaxkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnIpcompMaxkb.setStatus('current')
if mibBuilder.loadTexts: staVpnIpcompMaxkb.setDescription('Max-KByte')
staVpnConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17), )
if mibBuilder.loadTexts: staVpnConnectTable.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectTable.setDescription('Connections')
staVpnConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVpnConnectPeer"))
if mibBuilder.loadTexts: staVpnConnectEntry.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectEntry.setDescription('entry in table')
staVpnConnectPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectPeer.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectPeer.setDescription('Peer')
staVpnConnectState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectState.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectState.setDescription('State')
staVpnConnectLaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 275, 4353, 4609, 4354, 4610, 4355, 4611, 4356, 4612, 4357, 4613, 4358, 4614, 4871, 4360, 4361, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4904, 8705, 8706, 8451, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8458, 8714, 8715, 8716, 8461, 8717, 8462, 8718, 8463, 8719, 8464, 8720, 8465, 8721, 8466, 8722, 8467, 8723, 8468, 8724, 8469, 8725, 8470, 8726, 8471, 8727, 8472, 8728, 8473, 8729, 8474, 8730, 8475, 8731, 8476, 8732, 8477, 8733, 8478, 8734, 8479, 8735, 8480, 8736, 8481, 8737, 8482, 8738, 8483, 8739, 8484, 8740, 8485, 8741, 8486, 8742, 8487, 8743, 8488, 8744, 8489, 8745, 8490, 8746, 8491, 8747, 8492, 8748, 8493, 8749, 8494, 8750, 8495, 8751, 8496, 8752, 8497, 8753, 8498, 8754, 8499, 8755, 8500, 8756, 8501, 8757, 8502, 8758, 8503, 8759, 8504, 8760, 8505, 8761, 8506, 8762, 8507, 8763, 8508, 8764, 8509, 8765, 8703, 8959, 8702, 8958, 12801, 12546, 12802, 12803, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160))).clone(namedValues=NamedValues(("none", 0), ("icmp-conn-error", 275), ("ifc-i-license-exceeded", 4353), ("ifc-r-license-exceeded", 4609), ("ifc-i-no-channel-available", 4354), ("ifc-r-no-channel-available", 4610), ("ifc-i-no-route-to-remote-gateway", 4355), ("ifc-r-no-route-to-remote-gateway", 4611), ("ifc-i-no-ppp-table-entry-matched", 4356), ("ifc-r-no-ppp-table-entry-matched", 4612), ("ifc-i-connection-timeout-dynamic", 4357), ("ifc-r-connection-timeout-dynamic", 4613), ("ifc-i-connection-timeout-ike-ipsec", 4358), ("ifc-r-connection-timeout-ike-ipsec", 4614), ("ifc-x-line-polling-failed", 4871), ("ifc-i-no-poll-table-entry-matched", 4360), ("ifc-i-name-resolution-failed", 4361), ("ifc-i-negotiator-charge-locked", 4369), ("ifc-i-negotiator-time-locked", 4370), ("ifc-i-negotiator-no-dial-number", 4371), ("ifc-i-negotiator-no-remote", 4372), ("ifc-i-negotiator-remote-blocked", 4373), ("ifc-i-negotiator-no-multiconnect", 4374), ("ifc-i-negotiator-line-error", 4375), ("ifc-i-physical-charge-locked", 4385), ("ifc-i-physical-time-locked", 4386), ("ifc-i-physical-no-dial-number", 4387), ("ifc-i-physical-no-remote", 4388), ("ifc-i-physical-no-server-address", 4389), ("ifc-i-physical-remote-locked", 4390), ("ifc-i-physical-no-multiconnect", 4391), ("ifc-x-physical-line-error", 4904), ("ike-r-license-exceeded", 8705), ("ike-r-exchange-type-mismatch", 8706), ("ike-i-no-proposal-matched", 8451), ("ike-r-no-proposal-matched", 8707), ("ike-r-ike-group-mismatch", 8708), ("ike-r-life-type-unsupported", 8709), ("ike-r-life-duration-mismatch", 8710), ("ike-r-id-type-unsupported", 8711), ("ike-r-id-type-mismatch", 8712), ("ike-r-no-rule-matched-id", 8713), ("ike-i-ike-key-mismatch", 8458), ("ike-r-ike-key-mismatch", 8714), ("ike-r-license-demosn-exceeded", 8715), ("ike-r-license-sn-exceeded", 8716), ("ike-i-dpd-timeout", 8461), ("ike-r-dpd-timeout", 8717), ("ike-i-unable-to-get-issuer-cert", 8462), ("ike-r-unable-to-get-issuer-cert", 8718), ("ike-i-unable-to-get-crl", 8463), ("ike-r-unable-to-get-crl", 8719), ("ike-i-unable-to-decrypt-cert-signature", 8464), ("ike-r-unable-to-decrypt-cert-signature", 8720), ("ike-i-unable-to-decrypt-crl-signature", 8465), ("ike-r-unable-to-decrypt-crl-signature", 8721), ("ike-i-unable-to-decode-issuer-public-key", 8466), ("ike-r-unable-to-decode-issuer-public-key", 8722), ("ike-i-cert-signature-failure", 8467), ("ike-r-cert-signature-failure", 8723), ("ike-i-crl-signature-failure", 8468), ("ike-r-crl-signature-failure", 8724), ("ike-i-cert-not-yet-valid", 8469), ("ike-r-cert-not-yet-valid", 8725), ("ike-i-cert-has-expired", 8470), ("ike-r-cert-has-expired", 8726), ("ike-i-crl-not-yet-valid", 8471), ("ike-r-crl-not-yet-valid", 8727), ("ike-i-crl-has-expired", 8472), ("ike-r-crl-has-expired", 8728), ("ike-i-error-in-cert-not-before-field", 8473), ("ike-r-error-in-cert-not-before-field", 8729), ("ike-i-error-in-cert-not-after-field", 8474), ("ike-r-error-in-cert-not-after-field", 8730), ("ike-i-error-in-crl-last-update-field", 8475), ("ike-r-error-in-crl-last-update-field", 8731), ("ike-i-error-in-crl-next-update-field", 8476), ("ike-r-error-in-crl-next-update-field", 8732), ("ike-i-out-of-mem", 8477), ("ike-r-out-of-mem", 8733), ("ike-i-depth-zero-self-signed-cert", 8478), ("ike-r-depth-zero-self-signed-cert", 8734), ("ike-i-self-signed-cert-in-chain", 8479), ("ike-r-self-signed-cert-in-chain", 8735), ("ike-i-unable-to-get-issuer-cert-locally", 8480), ("ike-r-unable-to-get-issuer-cert-locally", 8736), ("ike-i-unable-to-verify-leaf-signature", 8481), ("ike-r-unable-to-verify-leaf-signature", 8737), ("ike-i-cert-chain-too-long", 8482), ("ike-r-cert-chain-too-long", 8738), ("ike-i-cert-revoked", 8483), ("ike-r-cert-revoked", 8739), ("ike-i-invalid-ca", 8484), ("ike-r-invalid-ca", 8740), ("ike-i-path-length-exceeded", 8485), ("ike-r-path-length-exceeded", 8741), ("ike-i-invalid-purpose", 8486), ("ike-r-invalid-purpose", 8742), ("ike-i-cert-untrusted", 8487), ("ike-r-cert-untrusted", 8743), ("ike-i-cert-rejected", 8488), ("ike-r-cert-rejected", 8744), ("ike-i-subject-issuer-mismatch", 8489), ("ike-r-subject-issuer-mismatch", 8745), ("ike-i-akid-skid-mismatch", 8490), ("ike-r-akid-skid-mismatch", 8746), ("ike-i-akid-issuer-serial-mismatch", 8491), ("ike-r-akid-issuer-serial-mismatch", 8747), ("ike-i-keyusage-no-certsign", 8492), ("ike-r-keyusage-no-certsign", 8748), ("ike-i-unable-to-get-crl-issuer", 8493), ("ike-r-unable-to-get-crl-issuer", 8749), ("ike-i-unhandled-critical-extension", 8494), ("ike-r-unhandled-critical-extension", 8750), ("ike-i-keyusage-no-crl-sign", 8495), ("ike-r-keyusage-no-crl-sign", 8751), ("ike-i-unhandled-critical-crl-extension", 8496), ("ike-r-unhandled-critical-crl-extension", 8752), ("ike-i-crl-has-exceeded-exceedance", 8497), ("ike-r-crl-has-exceeded-exceedance", 8753), ("ike-i-application-verification", 8498), ("ike-r-application-verification", 8754), ("ike-i-cert-revoked-unspecified", 8499), ("ike-r-cert-revoked-unspecified", 8755), ("ike-i-cert-revoked-key-compromise", 8500), ("ike-r-cert-revoked-key-compromise", 8756), ("ike-i-cert-revoked-ca-compromise", 8501), ("ike-r-cert-revoked-ca-compromise", 8757), ("ike-i-cert-revoked-affiliation-changed", 8502), ("ike-r-cert-revoked-affiliation-changed", 8758), ("ike-i-cert-revoked-superseded", 8503), ("ike-r-cert-revoked-superseded", 8759), ("ike-i-cert-revoked-cessation-of-operation", 8504), ("ike-r-cert-revoked-cessation-of-operation", 8760), ("ike-i-cert-revoked-certificate-hold", 8505), ("ike-r-cert-revoked-certificate-hold", 8761), ("ike-i-cert-revoked-remove-from-crl", 8506), ("ike-r-cert-revoked-remove-from-crl", 8762), ("ike-i-cert-revoked-privilege-withdrawn", 8507), ("ike-r-cert-revoked-privilege-withdrawn", 8763), ("ike-i-cert-revoked-a-a-compromise", 8508), ("ike-r-cert-revoked-a-a-compromise", 8764), ("ike-i-cert-revoked-unknown-reason", 8509), ("ike-r-cert-revoked-unknown-reason", 8765), ("ike-i-general-failure", 8703), ("ike-r-general-failure", 8959), ("ike-i-out-of-memory", 8702), ("ike-r-out-of-memory", 8958), ("ipsec-r-no-rule-matched-ids", 12801), ("ipsec-i-no-proposal-matched", 12546), ("ipsec-r-no-proposal-matched", 12802), ("ipsec-r-pfs-group-mismatch", 12803), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staVpnConnectLaster.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectLaster.setDescription('Last-Error')
staVpnConnectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectMode.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectMode.setDescription('Mode')
staVpnConnectShtime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectShtime.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectShtime.setDescription('SH-Time')
staVpnConnectPhysco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectPhysco.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectPhysco.setDescription('phys.-Conn.')
staVpnConnectB1dt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectB1dt.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectB1dt.setDescription('B1-DT')
staVpnConnectRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectRemote.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectRemote.setDescription('Remote-Gw')
staVpnConnectNatdet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no-nat", 0), ("nat-local", 1), ("nat-remote", 2), ("nat-both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectNatdet.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectNatdet.setDescription('Nat-Detection')
staVpnConnectCrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCrypta.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectCrypta.setDescription('Crypt-Alg')
staVpnConnectCryptl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCryptl.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectCryptl.setDescription('Crypt-Length')
staVpnConnectHashal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHashal.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectHashal.setDescription('Hash-Alg')
staVpnConnectHashle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHashle.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectHashle.setDescription('Hash-Length')
staVpnConnectHmacal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHmacal.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectHmacal.setDescription('Hmac-Alg')
staVpnConnectHmacle = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectHmacle.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectHmacle.setDescription('Hmac-Length')
staVpnConnectCompra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectCompra.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectCompra.setDescription('Compr-Alg')
staVpnConnectClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("not-available", -1), ("demo-version", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectClient.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectClient.setDescription('Client-SN')
staVpnConnectConnti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVpnConnectConnti.setStatus('current')
if mibBuilder.loadTexts: staVpnConnectConnti.setDescription('Conn.-time')
staVpnDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staVpnDeletev.setStatus('current')
if mibBuilder.loadTexts: staVpnDeletev.setDescription('Delete-Values')
staPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27))
staPptpRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxp.setStatus('current')
if mibBuilder.loadTexts: staPptpRxp.setDescription('Rx-Packets')
staPptpTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTxp.setStatus('current')
if mibBuilder.loadTexts: staPptpTxp.setDescription('Tx-Packets')
staPptpEch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpEch.setStatus('current')
if mibBuilder.loadTexts: staPptpEch.setDescription('Echo-Retries')
staPptpAck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpAck.setStatus('current')
if mibBuilder.loadTexts: staPptpAck.setDescription('Ack-Timeouts')
staPptpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpDro.setStatus('current')
if mibBuilder.loadTexts: staPptpDro.setDescription('Dropped-Packets')
staPptpRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxe.setStatus('current')
if mibBuilder.loadTexts: staPptpRxe.setDescription('Rx-Errors')
staPptpTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTcp.setStatus('current')
if mibBuilder.loadTexts: staPptpTcp.setDescription('Tcp-Errors')
staPptpCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpCal.setStatus('current')
if mibBuilder.loadTexts: staPptpCal.setDescription('Call-Errors')
staPptpConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9), )
if mibBuilder.loadTexts: staPptpConTable.setStatus('current')
if mibBuilder.loadTexts: staPptpConTable.setDescription('Connections')
staPptpConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPptpConChann"))
if mibBuilder.loadTexts: staPptpConEntry.setStatus('current')
if mibBuilder.loadTexts: staPptpConEntry.setDescription('entry in table')
staPptpConChann = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConChann.setStatus('current')
if mibBuilder.loadTexts: staPptpConChann.setDescription('Channel')
staPptpConState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConState.setStatus('current')
if mibBuilder.loadTexts: staPptpConState.setDescription('State')
staPptpConLaste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpConLaste.setStatus('current')
if mibBuilder.loadTexts: staPptpConLaste.setDescription('Last-Error')
staPptpConMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConMode.setStatus('current')
if mibBuilder.loadTexts: staPptpConMode.setDescription('Mode')
staPptpConShtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConShtim.setStatus('current')
if mibBuilder.loadTexts: staPptpConShtim.setDescription('SH-Time')
staPptpConPhysc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPhysc.setStatus('current')
if mibBuilder.loadTexts: staPptpConPhysc.setDescription('Phys.-connection')
staPptpConPeera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPeera.setStatus('current')
if mibBuilder.loadTexts: staPptpConPeera.setDescription('Peer-Address')
staPptpConIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConIpadd.setStatus('current')
if mibBuilder.loadTexts: staPptpConIpadd.setDescription('IP-Address')
staPptpConDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsde.setStatus('current')
if mibBuilder.loadTexts: staPptpConDnsde.setDescription('DNS-Default')
staPptpConDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsba.setStatus('current')
if mibBuilder.loadTexts: staPptpConDnsba.setDescription('DNS-Backup')
staPptpConNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPptpConNbnsd.setDescription('NBNS-Default')
staPptpConNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPptpConNbnsb.setDescription('NBNS-Backup')
staPptpConConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConConnt.setStatus('current')
if mibBuilder.loadTexts: staPptpConConnt.setDescription('Conn.-time')
staPptpConGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConGatew.setStatus('current')
if mibBuilder.loadTexts: staPptpConGatew.setDescription('Gateway')
staPptpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTun.setStatus('current')
if mibBuilder.loadTexts: staPptpTun.setDescription('Tunnel')
staPptpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpDel.setStatus('current')
if mibBuilder.loadTexts: staPptpDel.setDescription('Delete-Values')
staPptpFlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpFlo.setStatus('current')
if mibBuilder.loadTexts: staPptpFlo.setDescription('Flow-Control-Queue')
staDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32))
staDhcpWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20), )
if mibBuilder.loadTexts: staDhcpWanTable.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanTable.setDescription('WAN-IP-List')
staDhcpWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDhcpWanIfc"))
if mibBuilder.loadTexts: staDhcpWanEntry.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanEntry.setDescription('entry in table')
staDhcpWanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("dsl-ch-2", 2), ("dsl-ch-3", 3), ("dsl-ch-4", 4), ("dsl-ch-5", 5), ("dsl-ch-6", 6), ("dsl-ch-7", 7), ("dsl-ch-8", 8), ("ch01", 9), ("ch02", 10), ("ext", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIfc.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanIfc.setDescription('Ifc')
staDhcpWanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIpadd.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanIpadd.setDescription('IP-Address')
staDhcpWanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanIpnet.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanIpnet.setDescription('IP-Netmask')
staDhcpWanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanGatew.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanGatew.setDescription('Gateway')
staDhcpWanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDnsde.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanDnsde.setDescription('DNS-Default')
staDhcpWanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDnsba.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanDnsba.setDescription('DNS-Backup')
staDhcpWanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanNbnsd.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanNbnsd.setDescription('NBNS-Default')
staDhcpWanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanNbnsb.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanNbnsb.setDescription('NBNS-Backup')
staDhcpWanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDomai.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanDomai.setDescription('Domain')
staDhcpWanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpWanDhcps.setStatus('current')
if mibBuilder.loadTexts: staDhcpWanDhcps.setDescription('DHCP-server')
staDhcpLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21), )
if mibBuilder.loadTexts: staDhcpLanTable.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanTable.setDescription('LAN-IP-List')
staDhcpLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staDhcpLanIfc"))
if mibBuilder.loadTexts: staDhcpLanEntry.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanEntry.setDescription('entry in table')
staDhcpLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIfc.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanIfc.setDescription('Ifc')
staDhcpLanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIpadd.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanIpadd.setDescription('IP-Address')
staDhcpLanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanIpnet.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanIpnet.setDescription('IP-Netmask')
staDhcpLanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanGatew.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanGatew.setDescription('Gateway')
staDhcpLanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDnsde.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanDnsde.setDescription('DNS-Default')
staDhcpLanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDnsba.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanDnsba.setDescription('DNS-Backup')
staDhcpLanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanNbnsd.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanNbnsd.setDescription('NBNS-Default')
staDhcpLanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanNbnsb.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanNbnsb.setDescription('NBNS-Backup')
staDhcpLanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDomai.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanDomai.setDescription('Domain')
staDhcpLanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpLanDhcps.setStatus('current')
if mibBuilder.loadTexts: staDhcpLanDhcps.setDescription('DHCP-server')
staIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33))
staIsdnLin = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1))
staIsdnLinS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1), )
if mibBuilder.loadTexts: staIsdnLinS0Table.setStatus('current')
if mibBuilder.loadTexts: staIsdnLinS0Table.setDescription('S0')
staIsdnLinS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnLinS0Ifc"))
if mibBuilder.loadTexts: staIsdnLinS0Entry.setStatus('current')
if mibBuilder.loadTexts: staIsdnLinS0Entry.setDescription('entry in table')
staIsdnLinS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnLinS0Ifc.setStatus('current')
if mibBuilder.loadTexts: staIsdnLinS0Ifc.setDescription('Ifc')
staIsdnLinS0Ope = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnLinS0Ope.setStatus('current')
if mibBuilder.loadTexts: staIsdnLinS0Ope.setDescription('Operating')
staIsdnFra = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2))
staIsdnFraS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1), )
if mibBuilder.loadTexts: staIsdnFraS0Table.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0Table.setDescription('S0')
staIsdnFraS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnFraS0Ifc"))
if mibBuilder.loadTexts: staIsdnFraS0Entry.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0Entry.setDescription('entry in table')
staIsdnFraS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0Ifc.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0Ifc.setDescription('Ifc')
staIsdnFraS0Sta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0Sta.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0Sta.setDescription('State')
staIsdnFraS0B1f = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 3), Bits().clone(namedValues=NamedValues(("loop", 7), ("rx-data", 6), ("tx-data", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0B1f.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0B1f.setDescription('B1-Frame')
staIsdnFraS0B2f = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 4), Bits().clone(namedValues=NamedValues(("loop", 7), ("rx-data", 6), ("tx-data", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnFraS0B2f.setStatus('current')
if mibBuilder.loadTexts: staIsdnFraS0B2f.setDescription('B2-Frame')
staIsdnSig = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3))
staIsdnSigLay = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1))
staIsdnSigLayLapTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1), )
if mibBuilder.loadTexts: staIsdnSigLayLapTable.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapTable.setDescription('LAPD')
staIsdnSigLayLapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigLayLapCha"))
if mibBuilder.loadTexts: staIsdnSigLayLapEntry.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapEntry.setDescription('entry in table')
staIsdnSigLayLapCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1-1", 1), ("e1-2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapCha.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapCha.setDescription('Channel')
staIsdnSigLayLapTei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128))).clone(namedValues=NamedValues(("none", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapTei.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapTei.setDescription('TEI')
staIsdnSigLayLapL2a = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapL2a.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapL2a.setDescription('L2-Activation')
staIsdnSigLayLapCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigLayLapCon.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigLayLapCon.setDescription('Connections')
staIsdnSigMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3))
staIsdnSigManDinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1), )
if mibBuilder.loadTexts: staIsdnSigManDinTable.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinTable.setDescription('D-Info')
staIsdnSigManDinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigManDinCha"))
if mibBuilder.loadTexts: staIsdnSigManDinEntry.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinEntry.setDescription('entry in table')
staIsdnSigManDinCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinCha.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinCha.setDescription('Channel')
staIsdnSigManDinPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("dss1", 1), ("e1tr6", 2), ("p2p-dss1", 4), ("auto", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinPro.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinPro.setDescription('Protocol')
staIsdnSigManDinLay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinLay.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinLay.setDescription('Layer-2')
staIsdnSigManDinTei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinTei.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinTei.setDescription('TEI')
staIsdnSigManDinS0a = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManDinS0a.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManDinS0a.setDescription('S0-Activation')
staIsdnSigManErrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2), )
if mibBuilder.loadTexts: staIsdnSigManErrTable.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrTable.setDescription('Error-Statistic')
staIsdnSigManErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staIsdnSigManErrIfc"))
if mibBuilder.loadTexts: staIsdnSigManErrEntry.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrEntry.setDescription('entry in table')
staIsdnSigManErrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrIfc.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrIfc.setDescription('Ifc')
staIsdnSigManErrA = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrA.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrA.setDescription('A')
staIsdnSigManErrB = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrB.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrB.setDescription('B')
staIsdnSigManErrC = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrC.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrC.setDescription('C')
staIsdnSigManErrD = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrD.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrD.setDescription('D')
staIsdnSigManErrE = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrE.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrE.setDescription('E')
staIsdnSigManErrF = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrF.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrF.setDescription('F')
staIsdnSigManErrG = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrG.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrG.setDescription('G')
staIsdnSigManErrH = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrH.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrH.setDescription('H')
staIsdnSigManErrI = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrI.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrI.setDescription('I')
staIsdnSigManErrJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrJ.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrJ.setDescription('J')
staIsdnSigManErrK = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrK.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrK.setDescription('K')
staIsdnSigManErrL = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrL.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrL.setDescription('L')
staIsdnSigManErrM = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrM.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrM.setDescription('M')
staIsdnSigManErrN = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrN.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrN.setDescription('N')
staIsdnSigManErrO = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIsdnSigManErrO.setStatus('current')
if mibBuilder.loadTexts: staIsdnSigManErrO.setDescription('O')
staIsdnDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIsdnDel.setStatus('current')
if mibBuilder.loadTexts: staIsdnDel.setDescription('Delete-Values')
staSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35))
staSnmpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1), )
if mibBuilder.loadTexts: staSnmpEveTable.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveTable.setDescription('Event')
staSnmpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staSnmpEveTra"), (0, "LANCOM-1711-MIB", "staSnmpEveVen"))
if mibBuilder.loadTexts: staSnmpEveEntry.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveEntry.setDescription('entry in table')
staSnmpEveTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("coldstart", 255), ("warmstart", 1), ("linkdown", 2), ("linkup", 3), ("authfail", 4), ("epgnloss", 5), ("enterprise", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveTra.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveTra.setDescription('Trap-Name')
staSnmpEveVen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 28, 39, 27, 2000, 2001, 26, 38, 41, 5002, 5003, 5004, 1))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29), ("pptpconn", 28), ("pppoesconn", 39), ("vpnconn", 27), ("http-tunnel-open", 2000), ("http-tunnel-close", 2001), ("ipfwflt", 26), ("ldblconn", 38), ("vrrp", 41), ("lan-overtemp-throttle", 5002), ("lan-overtemp-throttle-end", 5003), ("lan-overtemp-throttle-recommend", 5004), ("statchan", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveVen.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveVen.setDescription('Vendor-Name')
staSnmpEveCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveCou.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveCou.setDescription('Count')
staMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43))
staMailBuf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailBuf.setStatus('current')
if mibBuilder.loadTexts: staMailBuf.setDescription('Buffered-Mails')
staMailSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailSen.setStatus('current')
if mibBuilder.loadTexts: staMailSen.setDescription('Sent-Mails')
staMailDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailDis.setStatus('current')
if mibBuilder.loadTexts: staMailDis.setDescription('Discarded-Mails')
staMailCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailCle.setStatus('current')
if mibBuilder.loadTexts: staMailCle.setDescription('Clear-Buffer')
staMailDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailDel.setStatus('current')
if mibBuilder.loadTexts: staMailDel.setDescription('Delete-Statistics')
staHard = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47))
staHardMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardMode.setStatus('current')
if mibBuilder.loadTexts: staHardMode.setDescription('Model-Number')
staHardSeri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardSeri.setStatus('current')
if mibBuilder.loadTexts: staHardSeri.setDescription('Serial-Number')
staHardBoar = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardBoar.setStatus('current')
if mibBuilder.loadTexts: staHardBoar.setDescription('Board-Revision')
staHardCput = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCput.setStatus('current')
if mibBuilder.loadTexts: staHardCput.setDescription('CPU-Type')
staHardCpuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCpuc.setStatus('current')
if mibBuilder.loadTexts: staHardCpuc.setDescription('CPU-Clock-MHz')
staHardCpul = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardCpul.setStatus('current')
if mibBuilder.loadTexts: staHardCpul.setDescription('CPU-Load-Percent')
staHardTota = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardTota.setStatus('current')
if mibBuilder.loadTexts: staHardTota.setDescription('Total-Memory-KBytes')
staHardFree = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardFree.setStatus('current')
if mibBuilder.loadTexts: staHardFree.setDescription('Free-Memory-KBytes')
staHardVpnh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardVpnh.setStatus('current')
if mibBuilder.loadTexts: staHardVpnh.setDescription('VPN-HW-Accelerator')
staHardSwve = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardSwve.setStatus('current')
if mibBuilder.loadTexts: staHardSwve.setDescription('SW-Version')
staHardEthe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardEthe.setStatus('current')
if mibBuilder.loadTexts: staHardEthe.setDescription('Ethernet-Switch-Type')
staChanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48), )
if mibBuilder.loadTexts: staChanTable.setStatus('current')
if mibBuilder.loadTexts: staChanTable.setDescription('Channel')
staChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staChanChan"))
if mibBuilder.loadTexts: staChanEntry.setStatus('current')
if mibBuilder.loadTexts: staChanEntry.setDescription('entry in table')
staChanChan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("dsl-err", 1), ("dsl-ch-1", 2), ("dsl-ch-2", 3), ("dsl-ch-3", 4), ("dsl-ch-4", 5), ("dsl-ch-5", 6), ("dsl-ch-6", 7), ("dsl-ch-7", 8), ("dsl-ch-8", 9), ("s0-1-err", 10), ("s0-1-b1", 11), ("s0-1-b2", 12), ("ext-err", 13), ("ext", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanChan.setStatus('current')
if mibBuilder.loadTexts: staChanChan.setDescription('Chan.')
staChanPhcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPhcha.setStatus('current')
if mibBuilder.loadTexts: staChanPhcha.setDescription('Ph.-Chan.')
staChanPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPlci.setStatus('current')
if mibBuilder.loadTexts: staChanPlci.setDescription('PLCI')
staChanBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanBus.setStatus('current')
if mibBuilder.loadTexts: staChanBus.setDescription('Bus')
staChanState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanState.setStatus('current')
if mibBuilder.loadTexts: staChanState.setDescription('State')
staChanApp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("none", 0), ("router", 1), ("capi", 2), ("a-b", 3), ("time-module", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanApp.setStatus('current')
if mibBuilder.loadTexts: staChanApp.setDescription('App')
staChanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unk", 0), ("act", 1), ("pas", 2), ("perm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanMode.setStatus('current')
if mibBuilder.loadTexts: staChanMode.setDescription('Mode')
staChanCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChanCause.setStatus('current')
if mibBuilder.loadTexts: staChanCause.setDescription('Cause')
staChanNumbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanNumbe.setStatus('current')
if mibBuilder.loadTexts: staChanNumbe.setDescription('Number')
staChanSubad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanSubad.setStatus('current')
if mibBuilder.loadTexts: staChanSubad.setDescription('Subaddress')
staChanCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanCharg.setStatus('current')
if mibBuilder.loadTexts: staChanCharg.setDescription('Charge')
staChanConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanConns.setStatus('current')
if mibBuilder.loadTexts: staChanConns.setDescription('Conn.-start')
staChanConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanConnt.setStatus('current')
if mibBuilder.loadTexts: staChanConnt.setDescription('Conn.-time')
staChanExtra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanExtra.setStatus('current')
if mibBuilder.loadTexts: staChanExtra.setDescription('Extra')
staChanIsdnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanIsdnd.setStatus('current')
if mibBuilder.loadTexts: staChanIsdnd.setDescription('ISDN-display')
staChanPptpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanPptpc.setStatus('current')
if mibBuilder.loadTexts: staChanPptpc.setDescription('PPTP-Conns.')
staChanVpnco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChanVpnco.setStatus('current')
if mibBuilder.loadTexts: staChanVpnco.setDescription('VPN-Conns.')
staMode = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49))
staModeOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("modem", 1), ("umts-gprs", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeOperating.setStatus('current')
if mibBuilder.loadTexts: staModeOperating.setDescription('Operating')
staModeModeminfo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeModeminfo.setStatus('current')
if mibBuilder.loadTexts: staModeModeminfo.setDescription('Modem-Info')
staModeConnectinfo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeConnectinfo.setStatus('current')
if mibBuilder.loadTexts: staModeConnectinfo.setDescription('Connect-Info')
staModeState = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("wait-for-device", 15), ("deactivated", 0), ("device-detection", 1), ("reset", 2), ("initializing", 3), ("modem-id", 4), ("ready", 5), ("connecting", 6), ("pass-connecting", 7), ("data-mode", 8), ("network-scan", 9), ("set-pin", 10), ("pin-invalid", 11), ("unexpected-response", 12), ("puk-required", 13), ("network", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeState.setStatus('current')
if mibBuilder.loadTexts: staModeState.setDescription('State')
staModeDatarate = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeDatarate.setStatus('current')
if mibBuilder.loadTexts: staModeDatarate.setDescription('Data-Rate')
staModeSignaldbm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSignaldbm.setStatus('current')
if mibBuilder.loadTexts: staModeSignaldbm.setDescription('Signal[dBm]')
staModeRegistration = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("no-network", 0), ("home-network", 1), ("searching", 2), ("denied", 3), ("unknown", 4), ("roaming", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeRegistration.setStatus('current')
if mibBuilder.loadTexts: staModeRegistration.setDescription('Registration')
staModeNetwork = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetwork.setStatus('current')
if mibBuilder.loadTexts: staModeNetwork.setDescription('Network')
staModeMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("umts", 1), ("gprs", 2), ("gsm", 3), ("edge", 4), ("hsdpa", 5), ("hsupa", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeMode.setStatus('current')
if mibBuilder.loadTexts: staModeMode.setDescription('Mode')
staModePort = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("outband", 1), ("usb", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModePort.setStatus('current')
if mibBuilder.loadTexts: staModePort.setDescription('Port')
staModePinstatus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModePinstatus.setStatus('current')
if mibBuilder.loadTexts: staModePinstatus.setDescription('PIN-Status')
staModeHardwareresets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHardwareresets.setStatus('current')
if mibBuilder.loadTexts: staModeHardwareresets.setDescription('Hardware-Resets')
staModeTemperaturesta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("low", 2), ("high", 3), ("low-critical", 5), ("high-critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeTemperaturesta.setStatus('current')
if mibBuilder.loadTexts: staModeTemperaturesta.setDescription('Temperature_status')
staModeTemperaturedeg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeTemperaturedeg.setStatus('current')
if mibBuilder.loadTexts: staModeTemperaturedeg.setDescription('Temperature[degC]')
staModeSupplyvoltages = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("low", 2), ("high", 3), ("low-critical", 5), ("high-critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSupplyvoltages.setStatus('current')
if mibBuilder.loadTexts: staModeSupplyvoltages.setDescription('Supply_voltage_status')
staModeSupplyvoltagem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSupplyvoltagem.setStatus('current')
if mibBuilder.loadTexts: staModeSupplyvoltagem.setDescription('Supply_voltage[mV]')
staModeSimidiccid = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeSimidiccid.setStatus('current')
if mibBuilder.loadTexts: staModeSimidiccid.setDescription('SIM-ID(ICCID)')
staModeNetworklistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9), )
if mibBuilder.loadTexts: staModeNetworklistTable.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistTable.setDescription('Network-List')
staModeNetworklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staModeNetworklistNet"))
if mibBuilder.loadTexts: staModeNetworklistEntry.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistEntry.setDescription('entry in table')
staModeNetworklistNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistNet.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistNet.setDescription('Network')
staModeNetworklistNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistNum.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistNum.setDescription('Numeric')
staModeNetworklistSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("current", 3), ("forbidden", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistSta.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistSta.setDescription('State')
staModeNetworklistMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 3), Bits().clone(namedValues=NamedValues(("gprs", 31), ("umts", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeNetworklistMod.setStatus('current')
if mibBuilder.loadTexts: staModeNetworklistMod.setDescription('Mode')
staModeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16), )
if mibBuilder.loadTexts: staModeHistoryTable.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryTable.setDescription('History')
staModeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staModeHistoryInd"))
if mibBuilder.loadTexts: staModeHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryEntry.setDescription('entry in table')
staModeHistoryInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryInd.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryInd.setDescription('Index')
staModeHistoryTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryTim.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryTim.setDescription('Timestamp')
staModeHistorySig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistorySig.setStatus('current')
if mibBuilder.loadTexts: staModeHistorySig.setDescription('Signal[dBm]')
staModeHistoryNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryNet.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryNet.setDescription('Network')
staModeHistoryMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("umts", 1), ("gprs", 2), ("gsm", 3), ("edge", 4), ("hsdpa", 5), ("hsupa", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryMod.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryMod.setDescription('Mode')
staModeHistoryReg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("no-network", 0), ("home-network", 1), ("searching", 2), ("denied", 3), ("unknown", 4), ("roaming", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeHistoryReg.setStatus('current')
if mibBuilder.loadTexts: staModeHistoryReg.setDescription('Registration')
staModeScannetworks = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staModeScannetworks.setStatus('current')
if mibBuilder.loadTexts: staModeScannetworks.setDescription('Scan-Networks')
staModeInputpuk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staModeInputpuk.setStatus('current')
if mibBuilder.loadTexts: staModeInputpuk.setDescription('Input-PUK')
staModeDroppedtxpacke = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeDroppedtxpacke.setStatus('current')
if mibBuilder.loadTexts: staModeDroppedtxpacke.setDescription('Dropped-Tx-packets')
staModeRxtimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staModeRxtimeouts.setStatus('current')
if mibBuilder.loadTexts: staModeRxtimeouts.setDescription('Rx-Timeouts')
staFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50))
staFileConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1), )
if mibBuilder.loadTexts: staFileConTable.setStatus('current')
if mibBuilder.loadTexts: staFileConTable.setDescription('Contents')
staFileConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staFileConNam"))
if mibBuilder.loadTexts: staFileConEntry.setStatus('current')
if mibBuilder.loadTexts: staFileConEntry.setDescription('entry in table')
staFileConNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFileConNam.setStatus('current')
if mibBuilder.loadTexts: staFileConNam.setDescription('Name')
staFileConSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFileConSiz.setStatus('current')
if mibBuilder.loadTexts: staFileConSiz.setDescription('Size')
staEthe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51))
staEthePortsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1), )
if mibBuilder.loadTexts: staEthePortsTable.setStatus('current')
if mibBuilder.loadTexts: staEthePortsTable.setDescription('Ports')
staEthePortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staEthePortsPor"))
if mibBuilder.loadTexts: staEthePortsEntry.setStatus('current')
if mibBuilder.loadTexts: staEthePortsEntry.setDescription('entry in table')
staEthePortsPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsPor.setStatus('current')
if mibBuilder.loadTexts: staEthePortsPor.setDescription('Port')
staEthePortsAss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(512, 513, 514, 515, 0, 1, 2, 3, 65533, 65534, 65535))).clone(namedValues=NamedValues(("dsl-1", 512), ("dsl-2", 513), ("dsl-3", 514), ("dsl-4", 515), ("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("idle", 65533), ("monitor", 65534), ("power-down", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsAss.setStatus('current')
if mibBuilder.loadTexts: staEthePortsAss.setDescription('Assignment')
staEthePortsPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsPri.setStatus('current')
if mibBuilder.loadTexts: staEthePortsPri.setDescription('Private-Mode')
staEthePortsLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsLin.setStatus('current')
if mibBuilder.loadTexts: staEthePortsLin.setDescription('Link-Active')
staEthePortsCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsCon.setStatus('current')
if mibBuilder.loadTexts: staEthePortsCon.setDescription('Connector')
staEthePortsAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pending", 0), ("completed", 1), ("disabled", 2), ("not-available", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsAut.setStatus('current')
if mibBuilder.loadTexts: staEthePortsAut.setDescription('Auto-Negotiation')
staEthePortsFlo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsFlo.setStatus('current')
if mibBuilder.loadTexts: staEthePortsFlo.setDescription('Flow-Control')
staEthePortsMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mdi", 0), ("mdix", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEthePortsMdi.setStatus('current')
if mibBuilder.loadTexts: staEthePortsMdi.setDescription('MDI-Mode')
staEtheCabletest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staEtheCabletest.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletest.setDescription('Cable-Test')
staEtheCabletestrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3), )
if mibBuilder.loadTexts: staEtheCabletestrTable.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrTable.setDescription('Cable-Test-Results')
staEtheCabletestrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staEtheCabletestrIfc"))
if mibBuilder.loadTexts: staEtheCabletestrEntry.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrEntry.setDescription('entry in table')
staEtheCabletestrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrIfc.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrIfc.setDescription('Ifc')
staEtheCabletestrTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-fault", 4), ("fail", 5), ("busy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrTxs.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrTxs.setDescription('Tx-Status')
staEtheCabletestrTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrTxd.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrTxd.setDescription('Tx-Distance')
staEtheCabletestrRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-fault", 4), ("fail", 5), ("busy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrRxs.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrRxs.setDescription('Rx-Status')
staEtheCabletestrRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staEtheCabletestrRxd.setStatus('current')
if mibBuilder.loadTexts: staEtheCabletestrRxd.setDescription('Rx-Distance')
staPppo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52))
staPppoRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoRxp.setStatus('current')
if mibBuilder.loadTexts: staPppoRxp.setDescription('Rx-Packets')
staPppoTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoTxp.setStatus('current')
if mibBuilder.loadTexts: staPppoTxp.setDescription('Tx-Packets')
staPppoDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoDro.setStatus('current')
if mibBuilder.loadTexts: staPppoDro.setDescription('Dropped-Packets')
staPppoRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoRxe.setStatus('current')
if mibBuilder.loadTexts: staPppoRxe.setDescription('Rx-Errors')
staPppoSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoSes.setStatus('current')
if mibBuilder.loadTexts: staPppoSes.setDescription('Session-Errors')
staPppoConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9), )
if mibBuilder.loadTexts: staPppoConTable.setStatus('current')
if mibBuilder.loadTexts: staPppoConTable.setDescription('Connections')
staPppoConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staPppoConCha"), (0, "LANCOM-1711-MIB", "staPppoConMac"))
if mibBuilder.loadTexts: staPppoConEntry.setStatus('current')
if mibBuilder.loadTexts: staPppoConEntry.setDescription('entry in table')
staPppoConCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConCha.setStatus('current')
if mibBuilder.loadTexts: staPppoConCha.setDescription('Channel')
staPppoConMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConMac.setStatus('current')
if mibBuilder.loadTexts: staPppoConMac.setDescription('MAC-Address')
staPppoConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConSta.setStatus('current')
if mibBuilder.loadTexts: staPppoConSta.setDescription('State')
staPppoConLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoConLas.setStatus('current')
if mibBuilder.loadTexts: staPppoConLas.setDescription('Last-Error')
staPppoConSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConSht.setStatus('current')
if mibBuilder.loadTexts: staPppoConSht.setDescription('SH-Time')
staPppoConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConPee.setStatus('current')
if mibBuilder.loadTexts: staPppoConPee.setDescription('Peer-Address')
staPppoConCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoConCon.setStatus('current')
if mibBuilder.loadTexts: staPppoConCon.setDescription('Conn.-time')
staPppoNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoNum.setStatus('current')
if mibBuilder.loadTexts: staPppoNum.setDescription('Num.-Connections')
staPppoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoDel.setStatus('current')
if mibBuilder.loadTexts: staPppoDel.setDescription('Delete-Values')
staUsb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54))
staUsbDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1), )
if mibBuilder.loadTexts: staUsbDevTable.setStatus('current')
if mibBuilder.loadTexts: staUsbDevTable.setDescription('Devices')
staUsbDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staUsbDevBus"), (0, "LANCOM-1711-MIB", "staUsbDevAddress"))
if mibBuilder.loadTexts: staUsbDevEntry.setStatus('current')
if mibBuilder.loadTexts: staUsbDevEntry.setDescription('entry in table')
staUsbDevBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevBus.setStatus('current')
if mibBuilder.loadTexts: staUsbDevBus.setDescription('Bus')
staUsbDevAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevAddress.setStatus('current')
if mibBuilder.loadTexts: staUsbDevAddress.setDescription('Address')
staUsbDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevVendor.setStatus('current')
if mibBuilder.loadTexts: staUsbDevVendor.setDescription('Vendor')
staUsbDevVendorid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevVendorid.setStatus('current')
if mibBuilder.loadTexts: staUsbDevVendorid.setDescription('Vendor-ID')
staUsbDevProduct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevProduct.setStatus('current')
if mibBuilder.loadTexts: staUsbDevProduct.setDescription('Product')
staUsbDevProducti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevProducti.setStatus('current')
if mibBuilder.loadTexts: staUsbDevProducti.setDescription('Product-ID')
staUsbDevDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevDepth.setStatus('current')
if mibBuilder.loadTexts: staUsbDevDepth.setDescription('Depth')
staUsbDevSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevSpeed.setStatus('current')
if mibBuilder.loadTexts: staUsbDevSpeed.setDescription('Speed')
staUsbDevInterfac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevInterfac.setStatus('current')
if mibBuilder.loadTexts: staUsbDevInterfac.setDescription('Interfaces')
staUsbDevPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevPower.setStatus('current')
if mibBuilder.loadTexts: staUsbDevPower.setDescription('Power')
staUsbDevDriver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevDriver.setStatus('current')
if mibBuilder.loadTexts: staUsbDevDriver.setDescription('Driver')
staUsbDevParent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUsbDevParent.setStatus('current')
if mibBuilder.loadTexts: staUsbDevParent.setDescription('Parent')
staUsbRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staUsbRei.setStatus('current')
if mibBuilder.loadTexts: staUsbRei.setDescription('Reinit')
staAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56))
staAccoCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1), )
if mibBuilder.loadTexts: staAccoCurTable.setStatus('current')
if mibBuilder.loadTexts: staAccoCurTable.setDescription('Current-User')
staAccoCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoCurUsern"), (0, "LANCOM-1711-MIB", "staAccoCurMacad"), (0, "LANCOM-1711-MIB", "staAccoCurPeer"), (0, "LANCOM-1711-MIB", "staAccoCurConnt"))
if mibBuilder.loadTexts: staAccoCurEntry.setStatus('current')
if mibBuilder.loadTexts: staAccoCurEntry.setDescription('entry in table')
staAccoCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurUsern.setStatus('current')
if mibBuilder.loadTexts: staAccoCurUsern.setDescription('Username')
staAccoCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurMacad.setStatus('current')
if mibBuilder.loadTexts: staAccoCurMacad.setDescription('MAC-Address')
staAccoCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurPeer.setStatus('current')
if mibBuilder.loadTexts: staAccoCurPeer.setDescription('Peer')
staAccoCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurConnt.setStatus('current')
if mibBuilder.loadTexts: staAccoCurConnt.setDescription('Conn.-Type')
staAccoCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoCurRxkby.setDescription('Rx-KBytes')
staAccoCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoCurTxkby.setDescription('Tx-KBytes')
staAccoCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurTotal.setStatus('current')
if mibBuilder.loadTexts: staAccoCurTotal.setDescription('Total-Time')
staAccoCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoCurConne.setStatus('current')
if mibBuilder.loadTexts: staAccoCurConne.setDescription('Connections')
staAccoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2), )
if mibBuilder.loadTexts: staAccoAccTable.setStatus('current')
if mibBuilder.loadTexts: staAccoAccTable.setDescription('Accounting-List')
staAccoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoAccUsern"), (0, "LANCOM-1711-MIB", "staAccoAccMacad"), (0, "LANCOM-1711-MIB", "staAccoAccPeer"), (0, "LANCOM-1711-MIB", "staAccoAccConnt"))
if mibBuilder.loadTexts: staAccoAccEntry.setStatus('current')
if mibBuilder.loadTexts: staAccoAccEntry.setDescription('entry in table')
staAccoAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccUsern.setStatus('current')
if mibBuilder.loadTexts: staAccoAccUsern.setDescription('Username')
staAccoAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccMacad.setStatus('current')
if mibBuilder.loadTexts: staAccoAccMacad.setDescription('MAC-Address')
staAccoAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccPeer.setStatus('current')
if mibBuilder.loadTexts: staAccoAccPeer.setDescription('Peer')
staAccoAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccConnt.setStatus('current')
if mibBuilder.loadTexts: staAccoAccConnt.setDescription('Conn.-Type')
staAccoAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoAccRxkby.setDescription('Rx-KBytes')
staAccoAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoAccTxkby.setDescription('Tx-KBytes')
staAccoAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccTotal.setStatus('current')
if mibBuilder.loadTexts: staAccoAccTotal.setDescription('Total-Time')
staAccoAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoAccConne.setStatus('current')
if mibBuilder.loadTexts: staAccoAccConne.setDescription('Connections')
staAccoLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3), )
if mibBuilder.loadTexts: staAccoLasTable.setStatus('current')
if mibBuilder.loadTexts: staAccoLasTable.setDescription('Last-Snapshot')
staAccoLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoLasUsern"), (0, "LANCOM-1711-MIB", "staAccoLasMacad"), (0, "LANCOM-1711-MIB", "staAccoLasPeer"), (0, "LANCOM-1711-MIB", "staAccoLasConnt"))
if mibBuilder.loadTexts: staAccoLasEntry.setStatus('current')
if mibBuilder.loadTexts: staAccoLasEntry.setDescription('entry in table')
staAccoLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasUsern.setStatus('current')
if mibBuilder.loadTexts: staAccoLasUsern.setDescription('Username')
staAccoLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasMacad.setStatus('current')
if mibBuilder.loadTexts: staAccoLasMacad.setDescription('MAC-Address')
staAccoLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasPeer.setStatus('current')
if mibBuilder.loadTexts: staAccoLasPeer.setDescription('Peer')
staAccoLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasConnt.setStatus('current')
if mibBuilder.loadTexts: staAccoLasConnt.setDescription('Conn.-Type')
staAccoLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoLasRxkby.setDescription('Rx-KBytes')
staAccoLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccoLasTxkby.setDescription('Tx-KBytes')
staAccoLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasTotal.setStatus('current')
if mibBuilder.loadTexts: staAccoLasTotal.setDescription('Total-Time')
staAccoLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoLasConne.setStatus('current')
if mibBuilder.loadTexts: staAccoLasConne.setDescription('Connections')
staAccoTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5), )
if mibBuilder.loadTexts: staAccoTimTable.setStatus('current')
if mibBuilder.loadTexts: staAccoTimTable.setDescription('Time-Last-Snapshot')
staAccoTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staAccoTimSys"))
if mibBuilder.loadTexts: staAccoTimEntry.setStatus('current')
if mibBuilder.loadTexts: staAccoTimEntry.setDescription('entry in table')
staAccoTimSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccoTimSys.setStatus('current')
if mibBuilder.loadTexts: staAccoTimSys.setDescription('System-time')
staAccoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staAccoDel.setStatus('current')
if mibBuilder.loadTexts: staAccoDel.setDescription('Delete-Values')
staCert = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61))
staCertSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1))
staCertSceNumca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumca.setStatus('current')
if mibBuilder.loadTexts: staCertSceNumca.setDescription('NumCAs')
staCertSceNumra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumra.setStatus('current')
if mibBuilder.loadTexts: staCertSceNumra.setDescription('NumRAs')
staCertSceNumce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceNumce.setStatus('current')
if mibBuilder.loadTexts: staCertSceNumce.setDescription('NumCerts')
staCertSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4), )
if mibBuilder.loadTexts: staCertSceCasTable.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasTable.setDescription('CAs')
staCertSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceCasIdx"))
if mibBuilder.loadTexts: staCertSceCasEntry.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasEntry.setDescription('entry in table')
staCertSceCasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIdx.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasIdx.setDescription('Idx.')
staCertSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasName.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasName.setDescription('Name')
staCertSceCasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasExpire.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasExpire.setDescription('Expires')
staCertSceCasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIssued.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasIssued.setDescription('Issued')
staCertSceCasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasKeyusa.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasKeyusa.setDescription('Key-Usage')
staCertSceCasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasIssuer.setDescription('Issuer')
staCertSceCasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasSubjec.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasSubjec.setDescription('Subject')
staCertSceCasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasStatus.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasStatus.setDescription('Status')
staCertSceCasIkecer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIkecer.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasIkecer.setDescription('IKE-Certificate')
staCertSceCasMd5fin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasMd5fin.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasMd5fin.setDescription('md5-Fingerprint')
staCertSceCasSha1fi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasSha1fi.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasSha1fi.setDescription('sha1-Fingerprint')
staCertSceCasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasExpsnm.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasExpsnm.setDescription('Exp-SNMP')
staCertSceCasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCasIsssnm.setStatus('current')
if mibBuilder.loadTexts: staCertSceCasIsssnm.setDescription('Iss-SNMP')
staCertSceRasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5), )
if mibBuilder.loadTexts: staCertSceRasTable.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasTable.setDescription('RAs')
staCertSceRasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceRasIdx"))
if mibBuilder.loadTexts: staCertSceRasEntry.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasEntry.setDescription('entry in table')
staCertSceRasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIdx.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasIdx.setDescription('Idx.')
staCertSceRasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasName.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasName.setDescription('Name')
staCertSceRasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasExpire.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasExpire.setDescription('Expires')
staCertSceRasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIssued.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasIssued.setDescription('Issued')
staCertSceRasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasKeyusa.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasKeyusa.setDescription('Key-Usage')
staCertSceRasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasIssuer.setDescription('Issuer')
staCertSceRasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasSubjec.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasSubjec.setDescription('Subject')
staCertSceRasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasStatus.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasStatus.setDescription('Status')
staCertSceRasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasExpsnm.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasExpsnm.setDescription('Exp-SNMP')
staCertSceRasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceRasIsssnm.setStatus('current')
if mibBuilder.loadTexts: staCertSceRasIsssnm.setDescription('Iss-SNMP')
staCertSceCertsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6), )
if mibBuilder.loadTexts: staCertSceCertsTable.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsTable.setDescription('Certs')
staCertSceCertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertSceCertsIdx"))
if mibBuilder.loadTexts: staCertSceCertsEntry.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsEntry.setDescription('entry in table')
staCertSceCertsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIdx.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsIdx.setDescription('Idx.')
staCertSceCertsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsName.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsName.setDescription('Name')
staCertSceCertsExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExpires.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsExpires.setDescription('Expires')
staCertSceCertsIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIssued.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsIssued.setDescription('Issued')
staCertSceCertsKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsKeyusage.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsKeyusage.setDescription('Key-Usage')
staCertSceCertsExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExtended.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsExtended.setDescription('Extended-KeyUsage')
staCertSceCertsSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsSubjecta.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsSubjecta.setDescription('SubjectAltName')
staCertSceCertsIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsIssuer.setDescription('Issuer')
staCertSceCertsSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsSubject.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsSubject.setDescription('Subject')
staCertSceCertsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsStatus.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsStatus.setDescription('Status')
staCertSceCertsExpsnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsExpsnmp.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsExpsnmp.setDescription('Exp-SNMP')
staCertSceCertsIsssnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertSceCertsIsssnmp.setStatus('current')
if mibBuilder.loadTexts: staCertSceCertsIsssnmp.setDescription('Iss-SNMP')
staCertSceDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCertSceDelet.setStatus('current')
if mibBuilder.loadTexts: staCertSceDelet.setDescription('Delete-Values')
staCertCrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3))
staCertCrlNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlNum.setStatus('current')
if mibBuilder.loadTexts: staCertCrlNum.setDescription('NumCRLs')
staCertCrlCrlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2), )
if mibBuilder.loadTexts: staCertCrlCrlTable.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlTable.setDescription('CRLs')
staCertCrlCrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCertCrlCrlIdx"))
if mibBuilder.loadTexts: staCertCrlCrlEntry.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlEntry.setDescription('entry in table')
staCertCrlCrlIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIdx.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlIdx.setDescription('Idx.')
staCertCrlCrlExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlExpire.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlExpire.setDescription('Expires')
staCertCrlCrlIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIssued.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlIssued.setDescription('Issued')
staCertCrlCrlIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlIssuer.setDescription('Issuer')
staCertCrlCrlDistri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlDistri.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlDistri.setDescription('Distribution-Point')
staCertCrlCrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("status-unknown", 0), ("update-requested", 1), ("update-received", 2), ("update-ok", 3), ("update-bad", 4), ("crl-job-busy", 5), ("crl-job-timeout", 6), ("crl-not-free-err", 7), ("no-url-passed-err", 8), ("no-crl-received-err", 9), ("no-utc-err", 10), ("crl-job-mem-err", 11), ("crl-len-err", 12), ("crl-gen-err", 13), ("httpc-err", 14), ("httpc-con-err", 15), ("httpc-dns-err", 16), ("httpc-prot-err", 17), ("httpc-mem-err", 18), ("crl-job-wdog-err", 19), ("prefetching", 20), ("retrieving", 21), ("crl-ok", 22), ("not-a-crl", 23), ("no-root-issuer", 24), ("issuer-mismatch", 25), ("no-lu-in-crl", 26), ("crl-not-gmt", 27), ("invalid-field", 28), ("update-expired", 29), ("crls-disabled", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlStatus.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlStatus.setDescription('Status')
staCertCrlCrlExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlExpsnm.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlExpsnm.setDescription('Exp-SNMP')
staCertCrlCrlIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertCrlCrlIsssnm.setStatus('current')
if mibBuilder.loadTexts: staCertCrlCrlIsssnm.setDescription('Iss-SNMP')
staVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62))
staVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanOpe.setStatus('current')
if mibBuilder.loadTexts: staVlanOpe.setDescription('Operating')
staVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1), )
if mibBuilder.loadTexts: staVlanNetTable.setStatus('current')
if mibBuilder.loadTexts: staVlanNetTable.setDescription('Networks')
staVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVlanNetVla"))
if mibBuilder.loadTexts: staVlanNetEntry.setStatus('current')
if mibBuilder.loadTexts: staVlanNetEntry.setDescription('entry in table')
staVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetVla.setStatus('current')
if mibBuilder.loadTexts: staVlanNetVla.setDescription('VLAN-ID')
staVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetPor.setStatus('current')
if mibBuilder.loadTexts: staVlanNetPor.setDescription('Ports')
staVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2), )
if mibBuilder.loadTexts: staVlanPorTable.setStatus('current')
if mibBuilder.loadTexts: staVlanPorTable.setDescription('Port-Table')
staVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staVlanPorPor"))
if mibBuilder.loadTexts: staVlanPorEntry.setStatus('current')
if mibBuilder.loadTexts: staVlanPorEntry.setDescription('entry in table')
staVlanPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorPor.setStatus('current')
if mibBuilder.loadTexts: staVlanPorPor.setDescription('Port')
staVlanPorTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorTag.setStatus('current')
if mibBuilder.loadTexts: staVlanPorTag.setDescription('Tagging-Mode')
staComp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67))
staCompDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1), )
if mibBuilder.loadTexts: staCompDevTable.setStatus('current')
if mibBuilder.loadTexts: staCompDevTable.setDescription('Devices')
staCompDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompDevIndex"))
if mibBuilder.loadTexts: staCompDevEntry.setStatus('current')
if mibBuilder.loadTexts: staCompDevEntry.setDescription('entry in table')
staCompDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevIndex.setStatus('current')
if mibBuilder.loadTexts: staCompDevIndex.setDescription('Index')
staCompDevDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband-modem", 2), ("outband", 1), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevDevicet.setStatus('current')
if mibBuilder.loadTexts: staCompDevDevicet.setDescription('Device-Type')
staCompDevBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("outband", 1), ("cardbus", 2), ("usb", 3), ("virtual", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevBus.setStatus('current')
if mibBuilder.loadTexts: staCompDevBus.setDescription('Bus')
staCompDevDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevDevice.setStatus('current')
if mibBuilder.loadTexts: staCompDevDevice.setDescription('Device')
staCompDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevVendor.setStatus('current')
if mibBuilder.loadTexts: staCompDevVendor.setDescription('Vendor')
staCompDevUsbdriv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("ubsa", 1), ("uchcom", 2), ("uftdi", 3), ("ugensa", 4), ("uhmodem", 5), ("ukyopon", 6), ("uplcom", 7), ("uslsa", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevUsbdriv.setStatus('current')
if mibBuilder.loadTexts: staCompDevUsbdriv.setDescription('USB-Driver')
staCompDevState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("initialize", 1), ("wait-for-firmware", 2), ("ready", 3), ("in-use", 4), ("exclusive", 5), ("initialize", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevState.setStatus('current')
if mibBuilder.loadTexts: staCompDevState.setDescription('State')
staCompDevFirmwar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevFirmwar.setStatus('current')
if mibBuilder.loadTexts: staCompDevFirmwar.setDescription('Firmware-Version')
staCompDevService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wan", 1), ("com-port-server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevService.setStatus('current')
if mibBuilder.loadTexts: staCompDevService.setDescription('Service')
staCompDevFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompDevFullnam.setStatus('current')
if mibBuilder.loadTexts: staCompDevFullnam.setDescription('Full-Name')
staCompCom = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2))
staCompComNetworksTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1), )
if mibBuilder.loadTexts: staCompComNetworksTable.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksTable.setDescription('Network-Status')
staCompComNetworksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComNetworksDevicet"), (0, "LANCOM-1711-MIB", "staCompComNetworksPortnum"))
if mibBuilder.loadTexts: staCompComNetworksEntry.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksEntry.setDescription('entry in table')
staCompComNetworksDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksDevicet.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksDevicet.setDescription('Device-Type')
staCompComNetworksPortnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksPortnum.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksPortnum.setDescription('Port-Number')
staCompComNetworksFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksFullnam.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksFullnam.setDescription('Full-Name')
staCompComNetworksConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("listening", 1), ("connecting", 2), ("connected", 3), ("not-listening", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksConnect.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksConnect.setDescription('Connection-Status')
staCompComNetworksLasterr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dns-error", 1), ("tcp-connect-error", 2), ("remote-disconnect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksLasterr.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksLasterr.setDescription('Last-Error')
staCompComNetworksRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksRemotea.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksRemotea.setDescription('Remote-Address')
staCompComNetworksLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksLocalpo.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksLocalpo.setDescription('Local-Port')
staCompComNetworksRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComNetworksRemotep.setStatus('current')
if mibBuilder.loadTexts: staCompComNetworksRemotep.setDescription('Remote-Port')
staCompComComportsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2), )
if mibBuilder.loadTexts: staCompComComportsTable.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsTable.setDescription('COM-Port-Status')
staCompComComportsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComComportsDev"), (0, "LANCOM-1711-MIB", "staCompComComportsPor"))
if mibBuilder.loadTexts: staCompComComportsEntry.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsEntry.setDescription('entry in table')
staCompComComportsDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsDev.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsDev.setDescription('Device-Type')
staCompComComportsPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsPor.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsPor.setDescription('Port-Number')
staCompComComportsFul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsFul.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsFul.setDescription('Full-Name')
staCompComComportsInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("not-present", 0), ("not-ready", 1), ("ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsInt.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsInt.setDescription('Interface-Status')
staCompComComportsBit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 125000, 230400))).clone(namedValues=NamedValues(("e110", 110), ("e300", 300), ("e600", 600), ("e1200", 1200), ("e2400", 2400), ("e4800", 4800), ("e9600", 9600), ("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200), ("e125000", 125000), ("e230400", 230400)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsBit.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsBit.setDescription('Bit-Rate')
staCompComComportsDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("e7", 7), ("e8", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsDat.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsDat.setDescription('Data-Bits')
staCompComComportsPar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsPar.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsPar.setDescription('Parity')
staCompComComportsSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1", 1), ("e2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsSto.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsSto.setDescription('Stop-Bits')
staCompComComportsHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rts-cts", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportsHan.setStatus('current')
if mibBuilder.loadTexts: staCompComComportsHan.setDescription('Handshake')
staCompComBytecounTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3), )
if mibBuilder.loadTexts: staCompComBytecounTable.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounTable.setDescription('Byte-Counters')
staCompComBytecounEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComBytecounDevicety"), (0, "LANCOM-1711-MIB", "staCompComBytecounPortnumb"))
if mibBuilder.loadTexts: staCompComBytecounEntry.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounEntry.setDescription('entry in table')
staCompComBytecounDevicety = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounDevicety.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounDevicety.setDescription('Device-Type')
staCompComBytecounPortnumb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounPortnumb.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounPortnumb.setDescription('Port-Number')
staCompComBytecounFullname = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounFullname.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounFullname.setDescription('Full-Name')
staCompComBytecounSerialtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounSerialtx.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounSerialtx.setDescription('Serial-Tx')
staCompComBytecounSerialrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounSerialrx.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounSerialrx.setDescription('Serial-Rx')
staCompComBytecounNetworkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounNetworkt.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounNetworkt.setDescription('Network-Tx')
staCompComBytecounNetworkr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComBytecounNetworkr.setStatus('current')
if mibBuilder.loadTexts: staCompComBytecounNetworkr.setDescription('Network-Rx')
staCompComComporteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4), )
if mibBuilder.loadTexts: staCompComComporteTable.setStatus('current')
if mibBuilder.loadTexts: staCompComComporteTable.setDescription('COM-Port-Errors')
staCompComComporteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComComporteDev"), (0, "LANCOM-1711-MIB", "staCompComComportePor"))
if mibBuilder.loadTexts: staCompComComporteEntry.setStatus('current')
if mibBuilder.loadTexts: staCompComComporteEntry.setDescription('entry in table')
staCompComComporteDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteDev.setStatus('current')
if mibBuilder.loadTexts: staCompComComporteDev.setDescription('Device-Type')
staCompComComportePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportePor.setStatus('current')
if mibBuilder.loadTexts: staCompComComportePor.setDescription('Port-Number')
staCompComComporteFul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteFul.setStatus('current')
if mibBuilder.loadTexts: staCompComComporteFul.setDescription('Full-Name')
staCompComComportePar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComportePar.setStatus('current')
if mibBuilder.loadTexts: staCompComComportePar.setDescription('Parity-Errors')
staCompComComporteFra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComComporteFra.setStatus('current')
if mibBuilder.loadTexts: staCompComComporteFra.setDescription('Framing-Errors')
staCompComConnectiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5), )
if mibBuilder.loadTexts: staCompComConnectiTable.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiTable.setDescription('Connections')
staCompComConnectiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "staCompComConnectiDevicet"), (0, "LANCOM-1711-MIB", "staCompComConnectiPortnum"))
if mibBuilder.loadTexts: staCompComConnectiEntry.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiEntry.setDescription('entry in table')
staCompComConnectiDevicet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiDevicet.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiDevicet.setDescription('Device-Type')
staCompComConnectiPortnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiPortnum.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiPortnum.setDescription('Port-Number')
staCompComConnectiFullnam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiFullnam.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiFullnam.setDescription('Full-Name')
staCompComConnectiServerg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiServerg.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiServerg.setDescription('Server-Granted')
staCompComConnectiServerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiServerr.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiServerr.setDescription('Server-Rejected')
staCompComConnectiClients = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClients.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiClients.setDescription('Client-Succeeded')
staCompComConnectiClientd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientd.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiClientd.setDescription('Client-DNS-Error')
staCompComConnectiClientt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientt.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiClientt.setDescription('Client-TCP-Error')
staCompComConnectiClientr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCompComConnectiClientr.setStatus('current')
if mibBuilder.loadTexts: staCompComConnectiClientr.setDescription('Client-Remote-Disconnects')
staCompComDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCompComDeleteva.setStatus('current')
if mibBuilder.loadTexts: staCompComDeleteva.setDescription('Delete-Values')
staTaca = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69))
staTacaAuthe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTacaAuthe.setStatus('current')
if mibBuilder.loadTexts: staTacaAuthe.setDescription('Authentication-Errors')
staTacaAutho = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTacaAutho.setStatus('current')
if mibBuilder.loadTexts: staTacaAutho.setDescription('Authorisation-Errors')
staTacaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTacaDelet.setStatus('current')
if mibBuilder.loadTexts: staTacaDelet.setDescription('Delete-Values')
staDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDele.setStatus('current')
if mibBuilder.loadTexts: staDele.setDescription('Delete-Values')
setName = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setName.setStatus('current')
if mibBuilder.loadTexts: setName.setDescription('Name')
setWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2))
setWanDialuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2), )
if mibBuilder.loadTexts: setWanDialuppTable.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppTable.setDescription('Dialup-Peers')
setWanDialuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanDialuppPee"))
if mibBuilder.loadTexts: setWanDialuppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppEntry.setDescription('entry in table')
setWanDialuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppPee.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppPee.setDescription('Peer')
setWanDialuppDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppDia.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppDia.setDescription('Dialup-remote')
setWanDialuppB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB1d.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppB1d.setDescription('B1-DT')
setWanDialuppB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB2d.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppB2d.setDescription('B2-DT')
setWanDialuppWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppWan.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppWan.setDescription('WAN-layer')
setWanDialuppCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 9, 2))).clone(namedValues=NamedValues(("no", 0), ("auto", 1), ("name", 5), ("fast", 9), ("looser", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppCal.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppCal.setDescription('Callback')
setWanRoundroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3), )
if mibBuilder.loadTexts: setWanRoundroTable.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroTable.setDescription('RoundRobin')
setWanRoundroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanRoundroPee"))
if mibBuilder.loadTexts: setWanRoundroEntry.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroEntry.setDescription('entry in table')
setWanRoundroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroPee.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroPee.setDescription('Peer')
setWanRoundroRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroRou.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroRou.setDescription('Round-Robin')
setWanRoundroHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroHea.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroHea.setDescription('Head')
setWanLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4), )
if mibBuilder.loadTexts: setWanLayerTable.setStatus('current')
if mibBuilder.loadTexts: setWanLayerTable.setDescription('Layer')
setWanLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanLayerWanl"))
if mibBuilder.loadTexts: setWanLayerEntry.setStatus('current')
if mibBuilder.loadTexts: setWanLayerEntry.setDescription('entry in table')
setWanLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerWanl.setStatus('current')
if mibBuilder.loadTexts: setWanLayerWanl.setDescription('WAN-layer')
setWanLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerEnca.setStatus('current')
if mibBuilder.loadTexts: setWanLayerEnca.setDescription('Encaps.')
setWanLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay3.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay3.setDescription('Lay-3')
setWanLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 0, 1))).clone(namedValues=NamedValues(("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay2.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay2.setDescription('Lay-2')
setWanLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerL2op.setStatus('current')
if mibBuilder.loadTexts: setWanLayerL2op.setDescription('L2-Opt.')
setWanLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 0, 1, 3, 67, 131, 6))).clone(namedValues=NamedValues(("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("serial", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay1.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay1.setDescription('Lay-1')
setWanPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5), )
if mibBuilder.loadTexts: setWanPppTable.setStatus('current')
if mibBuilder.loadTexts: setWanPppTable.setDescription('PPP')
setWanPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPppPeer"))
if mibBuilder.loadTexts: setWanPppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPppEntry.setDescription('entry in table')
setWanPppPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppPeer.setStatus('current')
if mibBuilder.loadTexts: setWanPppPeer.setDescription('Peer')
setWanPppAuthentreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 2), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAuthentreq.setStatus('current')
if mibBuilder.loadTexts: setWanPppAuthentreq.setDescription('Authent.request')
setWanPppAuthentres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 11), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAuthentres.setStatus('current')
if mibBuilder.loadTexts: setWanPppAuthentres.setDescription('Authent-response')
setWanPppKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppKey.setStatus('current')
if mibBuilder.loadTexts: setWanPppKey.setDescription('Key')
setWanPppTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTime.setStatus('current')
if mibBuilder.loadTexts: setWanPppTime.setDescription('Time')
setWanPppTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTry.setStatus('current')
if mibBuilder.loadTexts: setWanPppTry.setDescription('Try')
setWanPppConf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppConf.setStatus('current')
if mibBuilder.loadTexts: setWanPppConf.setDescription('Conf')
setWanPppFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppFail.setStatus('current')
if mibBuilder.loadTexts: setWanPppFail.setDescription('Fail')
setWanPppTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTerm.setStatus('current')
if mibBuilder.loadTexts: setWanPppTerm.setDescription('Term')
setWanPppUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppUsername.setStatus('current')
if mibBuilder.loadTexts: setWanPppUsername.setDescription('Username')
setWanPppRights = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ip", 1), ("ip-plus-nbt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppRights.setStatus('current')
if mibBuilder.loadTexts: setWanPppRights.setDescription('Rights')
setWanDslbroaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19), )
if mibBuilder.loadTexts: setWanDslbroaTable.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaTable.setDescription('DSL-Broadband-Peers')
setWanDslbroaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanDslbroaPee"))
if mibBuilder.loadTexts: setWanDslbroaEntry.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaEntry.setDescription('entry in table')
setWanDslbroaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaPee.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaPee.setDescription('Peer')
setWanDslbroaSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSht.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaSht.setDescription('SH-Time')
setWanDslbroaAcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaAcn.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaAcn.setDescription('AC-name')
setWanDslbroaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSer.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaSer.setDescription('Servicename')
setWanDslbroaWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaWan.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaWan.setDescription('WAN-layer')
setWanDslbroaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("global", 1), ("local", 0), ("user-def", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaMac.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaMac.setDescription('MAC-Type')
setWanDslbroaUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaUse.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaUse.setDescription('user-def.-MAC')
setWanDslbroaDsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaDsl.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaDsl.setDescription('DSL-ifc(s)')
setWanDslbroaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaVla.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaVla.setDescription('VLAN-ID')
setWanMtulistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26), )
if mibBuilder.loadTexts: setWanMtulistTable.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistTable.setDescription('MTU-List')
setWanMtulistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanMtulistPee"))
if mibBuilder.loadTexts: setWanMtulistEntry.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistEntry.setDescription('entry in table')
setWanMtulistPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistPee.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistPee.setDescription('Peer')
setWanMtulistMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistMtu.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistMtu.setDescription('MTU')
setWanIplistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20), )
if mibBuilder.loadTexts: setWanIplistTable.setStatus('current')
if mibBuilder.loadTexts: setWanIplistTable.setDescription('IP-List')
setWanIplistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanIplistPeer"))
if mibBuilder.loadTexts: setWanIplistEntry.setStatus('current')
if mibBuilder.loadTexts: setWanIplistEntry.setDescription('entry in table')
setWanIplistPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistPeer.setStatus('current')
if mibBuilder.loadTexts: setWanIplistPeer.setDescription('Peer')
setWanIplistIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpadd.setStatus('current')
if mibBuilder.loadTexts: setWanIplistIpadd.setDescription('IP-Address')
setWanIplistIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpnet.setStatus('current')
if mibBuilder.loadTexts: setWanIplistIpnet.setDescription('IP-Netmask')
setWanIplistMasqi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistMasqi.setStatus('current')
if mibBuilder.loadTexts: setWanIplistMasqi.setDescription('Masq.-IP-Addr.')
setWanIplistGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistGatew.setStatus('current')
if mibBuilder.loadTexts: setWanIplistGatew.setDescription('Gateway')
setWanIplistDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsde.setStatus('current')
if mibBuilder.loadTexts: setWanIplistDnsde.setDescription('DNS-Default')
setWanIplistDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsba.setStatus('current')
if mibBuilder.loadTexts: setWanIplistDnsba.setDescription('DNS-Backup')
setWanIplistNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsd.setStatus('current')
if mibBuilder.loadTexts: setWanIplistNbnsd.setDescription('NBNS-Default')
setWanIplistNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsb.setStatus('current')
if mibBuilder.loadTexts: setWanIplistNbnsb.setDescription('NBNS-Backup')
setWanPptppeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21), )
if mibBuilder.loadTexts: setWanPptppeeTable.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeTable.setDescription('PPTP-Peers')
setWanPptppeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPptppeePee"))
if mibBuilder.loadTexts: setWanPptppeeEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeEntry.setDescription('entry in table')
setWanPptppeePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePee.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeePee.setDescription('Peer')
setWanPptppeeIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeIpa.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeIpa.setDescription('IP-Address')
setWanPptppeeRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeRtg.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeRtg.setDescription('Rtg-tag')
setWanPptppeePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePor.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeePor.setDescription('Port')
setWanPptppeeSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeSht.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeSht.setDescription('SH-Time')
setWanRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22))
setWanRadiusOperat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusOperat.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusOperat.setDescription('Operating')
setWanRadiusServer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusServer.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusServer.setDescription('Server-Address')
setWanRadiusAuthpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthpo.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusAuthpo.setDescription('Auth.-Port')
setWanRadiusLoopba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusLoopba.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusLoopba.setDescription('Loopback-Addr.')
setWanRadiusProtoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusProtoc.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusProtoc.setDescription('Protocol')
setWanRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusSecret.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusSecret.setDescription('Secret')
setWanRadiusPppope = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusPppope.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusPppope.setDescription('PPP-Operation')
setWanRadiusAuthpr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 10), Bits().clone(namedValues=NamedValues(("ms-chapv2", 2), ("ms-chap", 3), ("chap", 4), ("pap", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthpr.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusAuthpr.setDescription('Auth.-Protocols')
setWanRadiusClipop = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipop.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusClipop.setDescription('CLIP-Operation')
setWanRadiusClippa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClippa.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusClippa.setDescription('CLIP-Password')
setWanPollingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23), )
if mibBuilder.loadTexts: setWanPollingTable.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTable.setDescription('Polling-Table')
setWanPollingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanPollingPeer"))
if mibBuilder.loadTexts: setWanPollingEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPollingEntry.setDescription('entry in table')
setWanPollingPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingPeer.setStatus('current')
if mibBuilder.loadTexts: setWanPollingPeer.setDescription('Peer')
setWanPollingIpaddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress1.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress1.setDescription('IP-Address-1')
setWanPollingIpaddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress2.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress2.setDescription('IP-Address-2')
setWanPollingIpaddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress3.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress3.setDescription('IP-Address-3')
setWanPollingIpaddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress4.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress4.setDescription('IP-Address-4')
setWanPollingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTime.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTime.setDescription('Time')
setWanPollingTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTry.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTry.setDescription('Try')
setWanPollingLoopbackad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingLoopbackad.setStatus('current')
if mibBuilder.loadTexts: setWanPollingLoopbackad.setDescription('Loopback-Addr.')
setWanBackuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24), )
if mibBuilder.loadTexts: setWanBackuppTable.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppTable.setDescription('Backup-Peers')
setWanBackuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanBackuppPee"))
if mibBuilder.loadTexts: setWanBackuppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppEntry.setDescription('entry in table')
setWanBackuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppPee.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppPee.setDescription('Peer')
setWanBackuppAlt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppAlt.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppAlt.setDescription('Alternative-Peers')
setWanBackuppHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppHea.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppHea.setDescription('Head')
setWanActiontTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25), )
if mibBuilder.loadTexts: setWanActiontTable.setStatus('current')
if mibBuilder.loadTexts: setWanActiontTable.setDescription('Action-Table')
setWanActiontEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanActiontIndex"))
if mibBuilder.loadTexts: setWanActiontEntry.setStatus('current')
if mibBuilder.loadTexts: setWanActiontEntry.setDescription('entry in table')
setWanActiontIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontIndex.setStatus('current')
if mibBuilder.loadTexts: setWanActiontIndex.setDescription('Index')
setWanActiontActiv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActiv.setStatus('current')
if mibBuilder.loadTexts: setWanActiontActiv.setDescription('Active')
setWanActiontHostn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontHostn.setStatus('current')
if mibBuilder.loadTexts: setWanActiontHostn.setDescription('Host-Name')
setWanActiontPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontPeer.setStatus('current')
if mibBuilder.loadTexts: setWanActiontPeer.setDescription('Peer')
setWanActiontLockt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontLockt.setStatus('current')
if mibBuilder.loadTexts: setWanActiontLockt.setDescription('Lock-Time')
setWanActiontCondi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("establish", 0), ("disconnect", 1), ("end", 2), ("failure", 3), ("establish-failure", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCondi.setStatus('current')
if mibBuilder.loadTexts: setWanActiontCondi.setDescription('Condition')
setWanActiontActio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActio.setStatus('current')
if mibBuilder.loadTexts: setWanActiontActio.setDescription('Action')
setWanActiontCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCheck.setStatus('current')
if mibBuilder.loadTexts: setWanActiontCheck.setDescription('Check-For')
setWanActiontOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontOwner.setStatus('current')
if mibBuilder.loadTexts: setWanActiontOwner.setDescription('Owner')
setWanBackupd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackupd.setStatus('current')
if mibBuilder.loadTexts: setWanBackupd.setDescription('Backup-Delay-Seconds')
setWanIncominTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6), )
if mibBuilder.loadTexts: setWanIncominTable.setStatus('current')
if mibBuilder.loadTexts: setWanIncominTable.setDescription('Incoming-Calling-Numbers')
setWanIncominEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanIncominDia"))
if mibBuilder.loadTexts: setWanIncominEntry.setStatus('current')
if mibBuilder.loadTexts: setWanIncominEntry.setDescription('entry in table')
setWanIncominDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominDia.setStatus('current')
if mibBuilder.loadTexts: setWanIncominDia.setDescription('Dialup-remote')
setWanIncominPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominPee.setStatus('current')
if mibBuilder.loadTexts: setWanIncominPee.setDescription('Peer')
setWanScriptsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8), )
if mibBuilder.loadTexts: setWanScriptsTable.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsTable.setDescription('Scripts')
setWanScriptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanScriptsPee"))
if mibBuilder.loadTexts: setWanScriptsEntry.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsEntry.setDescription('entry in table')
setWanScriptsPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsPee.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsPee.setDescription('Peer')
setWanScriptsScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsScr.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsScr.setDescription('Script')
setWanProtect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("none", 0), ("number", 2), ("screened", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanProtect.setStatus('current')
if mibBuilder.loadTexts: setWanProtect.setDescription('Protect')
setWanCallbac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanCallbac.setStatus('current')
if mibBuilder.loadTexts: setWanCallbac.setDescription('Callback-Attempts')
setWanManuald = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13))
setWanManualdCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdCon.setStatus('current')
if mibBuilder.loadTexts: setWanManualdCon.setDescription('Connect')
setWanManualdDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdDis.setStatus('current')
if mibBuilder.loadTexts: setWanManualdDis.setDescription('Disconnect')
setWanRouteriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11), )
if mibBuilder.loadTexts: setWanRouteriTable.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriTable.setDescription('Router-Interface')
setWanRouteriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setWanRouteriIfc"))
if mibBuilder.loadTexts: setWanRouteriEntry.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriEntry.setDescription('entry in table')
setWanRouteriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriIfc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriIfc.setDescription('Ifc')
setWanRouteriMsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriMsn.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriMsn.setDescription('MSN/EAZ')
setWanRouteriYc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriYc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriYc.setDescription('YC.')
setWanRouteriCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriCli.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriCli.setDescription('CLIP')
setWanRouteriAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 128))).clone(namedValues=NamedValues(("all", 0), ("analog", 2), ("digital", 1), ("none", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriAcc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriAcc.setDescription('Accept-calls')
setWanRouteriTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriTyp.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriTyp.setDescription('Type-of-interface')
setWanDialpre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)))
if mibBuilder.loadTexts: setWanDialpre.setStatus('current')
if mibBuilder.loadTexts: setWanDialpre.setDescription('Dial-Prefix')
setAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18))
setAccoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoOpe.setStatus('current')
if mibBuilder.loadTexts: setAccoOpe.setDescription('Operating')
setAccoSav = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoSav.setStatus('current')
if mibBuilder.loadTexts: setAccoSav.setDescription('Save-to-Flashrom')
setAccoDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("ip-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoDis.setStatus('current')
if mibBuilder.loadTexts: setAccoDis.setDescription('Discriminator')
setAccoSor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("time", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoSor.setStatus('current')
if mibBuilder.loadTexts: setAccoSor.setDescription('Sort-by')
setAccoCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4), )
if mibBuilder.loadTexts: setAccoCurTable.setStatus('current')
if mibBuilder.loadTexts: setAccoCurTable.setDescription('Current-User')
setAccoCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoCurUsern"), (0, "LANCOM-1711-MIB", "setAccoCurMacad"), (0, "LANCOM-1711-MIB", "setAccoCurPeer"), (0, "LANCOM-1711-MIB", "setAccoCurConnt"))
if mibBuilder.loadTexts: setAccoCurEntry.setStatus('current')
if mibBuilder.loadTexts: setAccoCurEntry.setDescription('entry in table')
setAccoCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurUsern.setStatus('current')
if mibBuilder.loadTexts: setAccoCurUsern.setDescription('Username')
setAccoCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurMacad.setStatus('current')
if mibBuilder.loadTexts: setAccoCurMacad.setDescription('MAC-Address')
setAccoCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurPeer.setStatus('current')
if mibBuilder.loadTexts: setAccoCurPeer.setDescription('Peer')
setAccoCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurConnt.setStatus('current')
if mibBuilder.loadTexts: setAccoCurConnt.setDescription('Conn.-Type')
setAccoCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoCurRxkby.setDescription('Rx-KBytes')
setAccoCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoCurTxkby.setDescription('Tx-KBytes')
setAccoCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurTotal.setStatus('current')
if mibBuilder.loadTexts: setAccoCurTotal.setDescription('Total-Time')
setAccoCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoCurConne.setStatus('current')
if mibBuilder.loadTexts: setAccoCurConne.setDescription('Connections')
setAccoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5), )
if mibBuilder.loadTexts: setAccoAccTable.setStatus('current')
if mibBuilder.loadTexts: setAccoAccTable.setDescription('Accounting-List')
setAccoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoAccUsern"), (0, "LANCOM-1711-MIB", "setAccoAccMacad"), (0, "LANCOM-1711-MIB", "setAccoAccPeer"), (0, "LANCOM-1711-MIB", "setAccoAccConnt"))
if mibBuilder.loadTexts: setAccoAccEntry.setStatus('current')
if mibBuilder.loadTexts: setAccoAccEntry.setDescription('entry in table')
setAccoAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccUsern.setStatus('current')
if mibBuilder.loadTexts: setAccoAccUsern.setDescription('Username')
setAccoAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccMacad.setStatus('current')
if mibBuilder.loadTexts: setAccoAccMacad.setDescription('MAC-Address')
setAccoAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccPeer.setStatus('current')
if mibBuilder.loadTexts: setAccoAccPeer.setDescription('Peer')
setAccoAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccConnt.setStatus('current')
if mibBuilder.loadTexts: setAccoAccConnt.setDescription('Conn.-Type')
setAccoAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoAccRxkby.setDescription('Rx-KBytes')
setAccoAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoAccTxkby.setDescription('Tx-KBytes')
setAccoAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccTotal.setStatus('current')
if mibBuilder.loadTexts: setAccoAccTotal.setDescription('Total-Time')
setAccoAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoAccConne.setStatus('current')
if mibBuilder.loadTexts: setAccoAccConne.setDescription('Connections')
setAccoDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoDel.setStatus('current')
if mibBuilder.loadTexts: setAccoDel.setDescription('Delete-Accounting-List')
setAccoTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8), )
if mibBuilder.loadTexts: setAccoTimTable.setStatus('current')
if mibBuilder.loadTexts: setAccoTimTable.setDescription('Time-Snapshot')
setAccoTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoTimInde"))
if mibBuilder.loadTexts: setAccoTimEntry.setStatus('current')
if mibBuilder.loadTexts: setAccoTimEntry.setDescription('entry in table')
setAccoTimInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoTimInde.setStatus('current')
if mibBuilder.loadTexts: setAccoTimInde.setDescription('Index')
setAccoTimActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimActi.setStatus('current')
if mibBuilder.loadTexts: setAccoTimActi.setDescription('Active')
setAccoTimType = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monthly", 0), ("weekly", 1), ("daily", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimType.setStatus('current')
if mibBuilder.loadTexts: setAccoTimType.setDescription('Type')
setAccoTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimDay.setStatus('current')
if mibBuilder.loadTexts: setAccoTimDay.setDescription('Day')
setAccoTimDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimDayo.setStatus('current')
if mibBuilder.loadTexts: setAccoTimDayo.setDescription('DayOfWeek')
setAccoTimHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimHour.setStatus('current')
if mibBuilder.loadTexts: setAccoTimHour.setDescription('Hour')
setAccoTimMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccoTimMinu.setStatus('current')
if mibBuilder.loadTexts: setAccoTimMinu.setDescription('Minute')
setAccoLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9), )
if mibBuilder.loadTexts: setAccoLasTable.setStatus('current')
if mibBuilder.loadTexts: setAccoLasTable.setDescription('Last-Snapshot')
setAccoLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setAccoLasUsern"), (0, "LANCOM-1711-MIB", "setAccoLasMacad"), (0, "LANCOM-1711-MIB", "setAccoLasPeer"), (0, "LANCOM-1711-MIB", "setAccoLasConnt"))
if mibBuilder.loadTexts: setAccoLasEntry.setStatus('current')
if mibBuilder.loadTexts: setAccoLasEntry.setDescription('entry in table')
setAccoLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasUsern.setStatus('current')
if mibBuilder.loadTexts: setAccoLasUsern.setDescription('Username')
setAccoLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasMacad.setStatus('current')
if mibBuilder.loadTexts: setAccoLasMacad.setDescription('MAC-Address')
setAccoLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasPeer.setStatus('current')
if mibBuilder.loadTexts: setAccoLasPeer.setDescription('Peer')
setAccoLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasConnt.setStatus('current')
if mibBuilder.loadTexts: setAccoLasConnt.setDescription('Conn.-Type')
setAccoLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoLasRxkby.setDescription('Rx-KBytes')
setAccoLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccoLasTxkby.setDescription('Tx-KBytes')
setAccoLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasTotal.setStatus('current')
if mibBuilder.loadTexts: setAccoLasTotal.setDescription('Total-Time')
setAccoLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccoLasConne.setStatus('current')
if mibBuilder.loadTexts: setAccoLasConne.setDescription('Connections')
setChar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3))
setCharDaysper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDaysper.setStatus('current')
if mibBuilder.loadTexts: setCharDaysper.setDescription('Days-per-Period')
setCharBudgetu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharBudgetu.setStatus('current')
if mibBuilder.loadTexts: setCharBudgetu.setDescription('Budget-Units')
setCharSpareun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSpareun.setStatus('current')
if mibBuilder.loadTexts: setCharSpareun.setDescription('Spare-Units')
setCharRouteru = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouteru.setStatus('current')
if mibBuilder.loadTexts: setCharRouteru.setDescription('Router-Units')
setCharTotalun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTotalun.setStatus('current')
if mibBuilder.loadTexts: setCharTotalun.setDescription('Total-Units')
setCharTablebuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5), )
if mibBuilder.loadTexts: setCharTablebuTable.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuTable.setDescription('Table-Budget')
setCharTablebuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCharTablebuIfc"))
if mibBuilder.loadTexts: setCharTablebuEntry.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuEntry.setDescription('entry in table')
setCharTablebuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("router-isdn-serial", 1), ("lancapi", 2), ("ab-1", 3), ("ab-2", 4), ("ab-3", 5), ("ab-4", 6), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuIfc.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuIfc.setDescription('Ifc')
setCharTablebuBud = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuBud.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuBud.setDescription('Budget-units')
setCharTablebuSpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuSpa.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuSpa.setDescription('Spare-Budget')
setCharTablebuTot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTablebuTot.setStatus('current')
if mibBuilder.loadTexts: setCharTablebuTot.setDescription('Total-units')
setCharDialupm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDialupm.setStatus('current')
if mibBuilder.loadTexts: setCharDialupm.setDescription('Dialup-Minutes-Budget')
setCharSparedi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSparedi.setStatus('current')
if mibBuilder.loadTexts: setCharSparedi.setDescription('Spare-Dialup-Minutes')
setCharRouteri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouteri.setStatus('current')
if mibBuilder.loadTexts: setCharRouteri.setDescription('Router-ISDN-Serial-Minutes-Active')
setCharTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7), )
if mibBuilder.loadTexts: setCharTimetabTable.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabTable.setDescription('Time-Table')
setCharTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCharTimetabIfc"))
if mibBuilder.loadTexts: setCharTimetabEntry.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabEntry.setDescription('entry in table')
setCharTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-isdn-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabIfc.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabIfc.setDescription('Ifc')
setCharTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabBudgetmi.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabBudgetmi.setDescription('Budget-minutes')
setCharTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabSparemin.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabSparemin.setDescription('Spare-minutes')
setCharTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabMinutesa.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabMinutesa.setDescription('Minutes-active')
setCharTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharTimetabMinutesp.setStatus('current')
if mibBuilder.loadTexts: setCharTimetabMinutesp.setDescription('Minutes-passive')
setCharDslbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharDslbroa.setStatus('current')
if mibBuilder.loadTexts: setCharDslbroa.setDescription('DSL-Broadband-Minutes-Budget')
setCharAdditio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharAdditio.setStatus('current')
if mibBuilder.loadTexts: setCharAdditio.setDescription('Additional-DSL-Broadband-Budget')
setCharSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharSpareds.setStatus('current')
if mibBuilder.loadTexts: setCharSpareds.setDescription('Spare-DSL-Broadband-Minutes')
setCharRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setCharRouterd.setStatus('current')
if mibBuilder.loadTexts: setCharRouterd.setDescription('Router-DSL-Broadband-Minutes-Active')
setCharActivat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharActivat.setStatus('current')
if mibBuilder.loadTexts: setCharActivat.setDescription('Activate-Additional-Budget')
setCharResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCharResetbu.setStatus('current')
if mibBuilder.loadTexts: setCharResetbu.setDescription('Reset-Budgets')
setLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4))
setLanMacadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanMacadd.setStatus('current')
if mibBuilder.loadTexts: setLanMacadd.setDescription('MAC-Address')
setLanSpareh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanSpareh.setStatus('current')
if mibBuilder.loadTexts: setLanSpareh.setDescription('Spare-Heap')
setLanTracem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracem.setStatus('current')
if mibBuilder.loadTexts: setLanTracem.setDescription('Trace-MAC')
setLanTracel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracel.setStatus('current')
if mibBuilder.loadTexts: setLanTracel.setDescription('Trace-Level')
setTcpi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7))
setTcpiOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiOpera.setStatus('current')
if mibBuilder.loadTexts: setTcpiOpera.setDescription('Operating')
setTcpiNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30), )
if mibBuilder.loadTexts: setTcpiNetwoTable.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoTable.setDescription('Network-list')
setTcpiNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiNetwoNet"))
if mibBuilder.loadTexts: setTcpiNetwoEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoEntry.setDescription('entry in table')
setTcpiNetwoNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoNet.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoNet.setDescription('Network-name')
setTcpiNetwoIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoIpa.setDescription('IP-Address')
setTcpiNetwoIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoIpn.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoIpn.setDescription('IP-Netmask')
setTcpiNetwoVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoVla.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoVla.setDescription('VLAN-ID')
setTcpiNetwoInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 257, 258, 259, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("lan-2", 257), ("lan-3", 258), ("lan-4", 259), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoInt.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoInt.setDescription('Interface')
setTcpiNetwoSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoSrc.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoSrc.setDescription('Src-check')
setTcpiNetwoTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoTyp.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoTyp.setDescription('Type')
setTcpiNetwoRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoRtg.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoRtg.setDescription('Rtg-tag')
setTcpiNetwoCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNetwoCom.setStatus('current')
if mibBuilder.loadTexts: setTcpiNetwoCom.setDescription('Comment')
setTcpiLoopbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17), )
if mibBuilder.loadTexts: setTcpiLoopbTable.setStatus('current')
if mibBuilder.loadTexts: setTcpiLoopbTable.setDescription('Loopback-List')
setTcpiLoopbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiLoopbNam"))
if mibBuilder.loadTexts: setTcpiLoopbEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpiLoopbEntry.setDescription('entry in table')
setTcpiLoopbNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbNam.setStatus('current')
if mibBuilder.loadTexts: setTcpiLoopbNam.setDescription('Name')
setTcpiLoopbLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbLoo.setStatus('current')
if mibBuilder.loadTexts: setTcpiLoopbLoo.setDescription('Loopback-Addr.')
setTcpiLoopbRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiLoopbRtg.setStatus('current')
if mibBuilder.loadTexts: setTcpiLoopbRtg.setDescription('Rtg-tag')
setTcpiAccesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6), )
if mibBuilder.loadTexts: setTcpiAccesTable.setStatus('current')
if mibBuilder.loadTexts: setTcpiAccesTable.setDescription('Access-List')
setTcpiAccesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiAccesIpa"), (0, "LANCOM-1711-MIB", "setTcpiAccesIpn"), (0, "LANCOM-1711-MIB", "setTcpiAccesRtg"))
if mibBuilder.loadTexts: setTcpiAccesEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpiAccesEntry.setDescription('entry in table')
setTcpiAccesIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpiAccesIpa.setDescription('IP-Address')
setTcpiAccesIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesIpn.setStatus('current')
if mibBuilder.loadTexts: setTcpiAccesIpn.setDescription('IP-Netmask')
setTcpiAccesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAccesRtg.setStatus('current')
if mibBuilder.loadTexts: setTcpiAccesRtg.setDescription('Rtg-tag')
setTcpiDnsde = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiDnsde.setStatus('current')
if mibBuilder.loadTexts: setTcpiDnsde.setDescription('DNS-Default')
setTcpiDnsba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiDnsba.setStatus('current')
if mibBuilder.loadTexts: setTcpiDnsba.setDescription('DNS-Backup')
setTcpiNbnsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNbnsd.setStatus('current')
if mibBuilder.loadTexts: setTcpiNbnsd.setDescription('NBNS-Default')
setTcpiNbnsb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNbnsb.setStatus('current')
if mibBuilder.loadTexts: setTcpiNbnsb.setDescription('NBNS-Backup')
setTcpiArptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16), )
if mibBuilder.loadTexts: setTcpiArptaTable.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaTable.setDescription('ARP-Table')
setTcpiArptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTcpiArptaIpa"))
if mibBuilder.loadTexts: setTcpiArptaEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaEntry.setDescription('entry in table')
setTcpiArptaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaIpa.setDescription('IP-Address')
setTcpiArptaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaMac.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaMac.setDescription('MAC-Address')
setTcpiArptaLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaLas.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaLas.setDescription('Last-access')
setTcpiArptaCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("wan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaCon.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaCon.setDescription('Connect')
setTcpiArptaEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaEth.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaEth.setDescription('Ethernet-Port')
setTcpiArptaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaVla.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaVla.setDescription('VLAN-ID')
setTcpiArptaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpiArptaPee.setStatus('current')
if mibBuilder.loadTexts: setTcpiArptaPee.setDescription('Peer')
setTcpiNonlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiNonlo.setStatus('current')
if mibBuilder.loadTexts: setTcpiNonlo.setDescription('Non-Loc.-ARP-Replies')
setTcpiIcmpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiIcmpo.setStatus('current')
if mibBuilder.loadTexts: setTcpiIcmpo.setDescription('ICMP-On-ARP-Timeout')
setTcpiArpag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiArpag.setStatus('current')
if mibBuilder.loadTexts: setTcpiArpag.setDescription('ARP-Aging-Minutes')
setTcpiAlive = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21))
setTcpiAliveTarget = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveTarget.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveTarget.setDescription('Target-Address')
setTcpiAliveTestin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveTestin.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveTestin.setDescription('Test-Interval')
setTcpiAliveRetryc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveRetryc.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveRetryc.setDescription('Retry-Count')
setTcpiAliveRetryi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveRetryi.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveRetryi.setDescription('Retry-Interval')
setTcpiAliveFailli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveFailli.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveFailli.setDescription('Fail-Limit')
setTcpiAliveBootty = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("warm-boot", 0), ("cold-boot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpiAliveBootty.setStatus('current')
if mibBuilder.loadTexts: setTcpiAliveBootty.setDescription('Boot-Type')
setIpro = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8))
setIproOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproOpe.setStatus('current')
if mibBuilder.loadTexts: setIproOpe.setDescription('Operating')
setIproIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2), )
if mibBuilder.loadTexts: setIproIprTable.setStatus('current')
if mibBuilder.loadTexts: setIproIprTable.setDescription('IP-Routing-Table')
setIproIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproIprIpa"), (0, "LANCOM-1711-MIB", "setIproIprIpn"), (0, "LANCOM-1711-MIB", "setIproIprRtg"))
if mibBuilder.loadTexts: setIproIprEntry.setStatus('current')
if mibBuilder.loadTexts: setIproIprEntry.setDescription('entry in table')
setIproIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprIpa.setStatus('current')
if mibBuilder.loadTexts: setIproIprIpa.setDescription('IP-Address')
setIproIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprIpn.setStatus('current')
if mibBuilder.loadTexts: setIproIprIpn.setDescription('IP-Netmask')
setIproIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprRtg.setStatus('current')
if mibBuilder.loadTexts: setIproIprRtg.setDescription('Rtg-tag')
setIproIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprPee.setStatus('current')
if mibBuilder.loadTexts: setIproIprPee.setDescription('Peer-or-IP')
setIproIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprDis.setStatus('current')
if mibBuilder.loadTexts: setIproIprDis.setDescription('Distance')
setIproIprMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprMas.setStatus('current')
if mibBuilder.loadTexts: setIproIprMas.setDescription('Masquerade')
setIproIprAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 0), ("semi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprAct.setStatus('current')
if mibBuilder.loadTexts: setIproIprAct.setDescription('Active')
setIproIprCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproIprCom.setStatus('current')
if mibBuilder.loadTexts: setIproIprCom.setDescription('Comment')
setIproDefTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13), )
if mibBuilder.loadTexts: setIproDefTable.setStatus('current')
if mibBuilder.loadTexts: setIproDefTable.setDescription('Default-Time-List')
setIproDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproDefInd"))
if mibBuilder.loadTexts: setIproDefEntry.setStatus('current')
if mibBuilder.loadTexts: setIproDefEntry.setDescription('entry in table')
setIproDefInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefInd.setStatus('current')
if mibBuilder.loadTexts: setIproDefInd.setDescription('Index')
setIproDefDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 2), Bits().clone(namedValues=NamedValues(("monday", 7), ("tuesday", 6), ("wednesday", 5), ("thursday", 4), ("friday", 3), ("saturday", 2), ("sunday", 1), ("holiday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefDay.setStatus('current')
if mibBuilder.loadTexts: setIproDefDay.setDescription('Days')
setIproDefSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefSta.setStatus('current')
if mibBuilder.loadTexts: setIproDefSta.setDescription('Start')
setIproDefSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefSto.setStatus('current')
if mibBuilder.loadTexts: setIproDefSto.setDescription('Stop')
setIproDefPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproDefPee.setStatus('current')
if mibBuilder.loadTexts: setIproDefPee.setDescription('Peer')
setIproUsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproUsa.setStatus('current')
if mibBuilder.loadTexts: setIproUsa.setDescription('Usage-Default-Timetable')
setIproPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproPro.setStatus('current')
if mibBuilder.loadTexts: setIproPro.setDescription('Proxy-ARP')
setIproSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproSen.setStatus('current')
if mibBuilder.loadTexts: setIproSen.setDescription('Send-ICMP-Redirect')
setIproSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproSta.setStatus('current')
if mibBuilder.loadTexts: setIproSta.setDescription('Start-WAN-Pool')
setIproEnd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproEnd.setStatus('current')
if mibBuilder.loadTexts: setIproEnd.setDescription('End-WAN-Pool')
setIproLoa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20))
setIproLoaOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaOpe.setStatus('current')
if mibBuilder.loadTexts: setIproLoaOpe.setDescription('Operating')
setIproLoaBunTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2), )
if mibBuilder.loadTexts: setIproLoaBunTable.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunTable.setDescription('Bundle-Peers')
setIproLoaBunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproLoaBunPeer"))
if mibBuilder.loadTexts: setIproLoaBunEntry.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunEntry.setDescription('entry in table')
setIproLoaBunPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunPeer.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunPeer.setDescription('Peer')
setIproLoaBunBundlepeer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer1.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunBundlepeer1.setDescription('Bundle-Peer-1')
setIproLoaBunBundlepeer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer2.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunBundlepeer2.setDescription('Bundle-Peer-2')
setIproLoaBunBundlepeer3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer3.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunBundlepeer3.setDescription('Bundle-Peer-3')
setIproLoaBunBundlepeer4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproLoaBunBundlepeer4.setStatus('current')
if mibBuilder.loadTexts: setIproLoaBunBundlepeer4.setDescription('Bundle-Peer-4')
setIproVrr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21))
setIproVrrOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrOpe.setStatus('current')
if mibBuilder.loadTexts: setIproVrrOpe.setDescription('Operating')
setIproVrrVrrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2), )
if mibBuilder.loadTexts: setIproVrrVrrTable.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrTable.setDescription('VRRP-List')
setIproVrrVrrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproVrrVrrRou"))
if mibBuilder.loadTexts: setIproVrrVrrEntry.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrEntry.setDescription('entry in table')
setIproVrrVrrRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrRou.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrRou.setDescription('Router-ID')
setIproVrrVrrVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrVir.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrVir.setDescription('virt.-Address')
setIproVrrVrrPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrPri.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrPri.setDescription('Prio')
setIproVrrVrrBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrBpr.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrBpr.setDescription('B-Prio')
setIproVrrVrrPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrPee.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrPee.setDescription('Peer')
setIproVrrVrrCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrVrrCom.setStatus('current')
if mibBuilder.loadTexts: setIproVrrVrrCom.setDescription('Comment')
setIproVrrRec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrRec.setStatus('current')
if mibBuilder.loadTexts: setIproVrrRec.setDescription('Reconnect-Delay')
setIproVrrAdv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrAdv.setStatus('current')
if mibBuilder.loadTexts: setIproVrrAdv.setDescription('Advert.-Intervall')
setIproVrrInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproVrrInt.setStatus('current')
if mibBuilder.loadTexts: setIproVrrInt.setDescription('Internal-Services')
setIproRou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7))
setIproRouRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("type-of-service", 1), ("diffserv", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouRou.setStatus('current')
if mibBuilder.loadTexts: setIproRouRou.setDescription('Routing-Method')
setIproRouIcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("reliable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouIcm.setStatus('current')
if mibBuilder.loadTexts: setIproRouIcm.setDescription('ICMP-Routing-Method')
setIproRouSyn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouSyn.setStatus('current')
if mibBuilder.loadTexts: setIproRouSyn.setDescription('SYN/ACK-Speedup')
setIproRouL2l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouL2l.setStatus('current')
if mibBuilder.loadTexts: setIproRouL2l.setDescription('L2-L3-Tagging')
setIproRouL3l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRouL3l.setStatus('current')
if mibBuilder.loadTexts: setIproRouL3l.setDescription('L3-L2-Tagging')
setIproRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8))
setIproRipLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5), )
if mibBuilder.loadTexts: setIproRipLanTable.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanTable.setDescription('LAN-Sites')
setIproRipLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipLanNetw"))
if mibBuilder.loadTexts: setIproRipLanEntry.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanEntry.setDescription('entry in table')
setIproRipLanNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanNetw.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanNetw.setDescription('Network-name')
setIproRipLanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRipt.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanRipt.setDescription('RIP-Type')
setIproRipLanRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRips.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanRips.setDescription('RIP-Send')
setIproRipLanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRipa.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanRipa.setDescription('RIP-Accept')
setIproRipLanProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanProp.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanProp.setDescription('Propagate')
setIproRipLanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanPois.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanPois.setDescription('Poisoned-Reverse')
setIproRipLanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanDftr.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanDftr.setDescription('Dft-Rtg-Tag')
setIproRipLanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRtgt.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanRtgt.setDescription('Rtg-Tag-List')
setIproRipLanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanRxfi.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanRxfi.setDescription('Rx-Filter')
setIproRipLanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipLanTxfi.setStatus('current')
if mibBuilder.loadTexts: setIproRipLanTxfi.setDescription('Tx-Filter')
setIproRipR1m = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("class", 0), ("address", 1), ("cl-plus-addr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipR1m.setStatus('current')
if mibBuilder.loadTexts: setIproRipR1m.setDescription('R1-Mask')
setIproRipIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3), )
if mibBuilder.loadTexts: setIproRipIprTable.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprTable.setDescription('IP-RIP-Table')
setIproRipIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipIprIpa"), (0, "LANCOM-1711-MIB", "setIproRipIprIpn"), (0, "LANCOM-1711-MIB", "setIproRipIprRtg"))
if mibBuilder.loadTexts: setIproRipIprEntry.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprEntry.setDescription('entry in table')
setIproRipIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprIpa.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprIpa.setDescription('IP-Address')
setIproRipIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprIpn.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprIpn.setDescription('IP-Netmask')
setIproRipIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprRtg.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprRtg.setDescription('Rtg-tag')
setIproRipIprTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprTim.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprTim.setDescription('Time')
setIproRipIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprDis.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprDis.setDescription('Distance')
setIproRipIprGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprGat.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprGat.setDescription('Gateway')
setIproRipIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprPee.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprPee.setDescription('Peer')
setIproRipIprPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprPor.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprPor.setDescription('Port')
setIproRipIprVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprVla.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprVla.setDescription('VLAN-ID')
setIproRipIprNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproRipIprNet.setStatus('current')
if mibBuilder.loadTexts: setIproRipIprNet.setDescription('Network-name')
setIproRipWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4), )
if mibBuilder.loadTexts: setIproRipWanTable.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanTable.setDescription('WAN-Sites')
setIproRipWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipWanPeer"))
if mibBuilder.loadTexts: setIproRipWanEntry.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanEntry.setDescription('entry in table')
setIproRipWanPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanPeer.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanPeer.setDescription('Peer')
setIproRipWanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRipt.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRipt.setDescription('RIP-Type')
setIproRipWanRips = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRips.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRips.setDescription('RIP-Send')
setIproRipWanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRipa.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRipa.setDescription('RIP-Accept')
setIproRipWanMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanMasq.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanMasq.setDescription('Masquerade')
setIproRipWanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanPois.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanPois.setDescription('Poisoned-Reverse')
setIproRipWanRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRfc2.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRfc2.setDescription('RFC2091')
setIproRipWanGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanGate.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanGate.setDescription('Gateway')
setIproRipWanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanDftr.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanDftr.setDescription('Dft-Rtg-Tag')
setIproRipWanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRtgt.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRtgt.setDescription('Rtg-Tag-List')
setIproRipWanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanRxfi.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanRxfi.setDescription('Rx-Filter')
setIproRipWanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipWanTxfi.setStatus('current')
if mibBuilder.loadTexts: setIproRipWanTxfi.setDescription('Tx-Filter')
setIproRipFilTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7), )
if mibBuilder.loadTexts: setIproRipFilTable.setStatus('current')
if mibBuilder.loadTexts: setIproRipFilTable.setDescription('Filter')
setIproRipFilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproRipFilNam"))
if mibBuilder.loadTexts: setIproRipFilEntry.setStatus('current')
if mibBuilder.loadTexts: setIproRipFilEntry.setDescription('entry in table')
setIproRipFilNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipFilNam.setStatus('current')
if mibBuilder.loadTexts: setIproRipFilNam.setDescription('Name')
setIproRipFilFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipFilFil.setStatus('current')
if mibBuilder.loadTexts: setIproRipFilFil.setDescription('Filter')
setIproRipPar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6))
setIproRipParUpda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParUpda.setStatus('current')
if mibBuilder.loadTexts: setIproRipParUpda.setDescription('Update')
setIproRipParHold = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParHold.setStatus('current')
if mibBuilder.loadTexts: setIproRipParHold.setDescription('Holddown')
setIproRipParInva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParInva.setStatus('current')
if mibBuilder.loadTexts: setIproRipParInva.setDescription('Invalidate')
setIproRipParFlus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParFlus.setStatus('current')
if mibBuilder.loadTexts: setIproRipParFlus.setDescription('Flush')
setIproRipParUpdd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParUpdd.setStatus('current')
if mibBuilder.loadTexts: setIproRipParUpdd.setDescription('Upd-Delay')
setIproRipParMaxh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParMaxh.setStatus('current')
if mibBuilder.loadTexts: setIproRipParMaxh.setDescription('Max-Hopcount')
setIproRipParRout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproRipParRout.setStatus('current')
if mibBuilder.loadTexts: setIproRipParRout.setDescription('Routes-per-Frame')
setIpro1nn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9))
setIpro1nnTcpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnTcpagings.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTcpagings.setDescription('TCP-Aging-Seconds')
setIpro1nnUdpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnUdpagings.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnUdpagings.setDescription('UDP-Aging-Seconds')
setIpro1nnIcmpaging = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIcmpaging.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIcmpaging.setDescription('ICMP-Aging-Seconds')
setIpro1nnServicetaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4), )
if mibBuilder.loadTexts: setIpro1nnServicetaTable.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaTable.setDescription('Service-Table')
setIpro1nnServicetaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportf"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportt"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaProtoc"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaPeer"), (0, "LANCOM-1711-MIB", "setIpro1nnServicetaWanadd"))
if mibBuilder.loadTexts: setIpro1nnServicetaEntry.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaEntry.setDescription('entry in table')
setIpro1nnServicetaDportf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaDportf.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaDportf.setDescription('D-port-from')
setIpro1nnServicetaDportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaDportt.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaDportt.setDescription('D-port-to')
setIpro1nnServicetaProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tcp-plus-udp", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaProtoc.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaProtoc.setDescription('Protocol')
setIpro1nnServicetaPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaPeer.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaPeer.setDescription('Peer')
setIpro1nnServicetaWanadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaWanadd.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaWanadd.setDescription('WAN-Address')
setIpro1nnServicetaIntran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaIntran.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaIntran.setDescription('Intranet-Address')
setIpro1nnServicetaMappor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaMappor.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaMappor.setDescription('Map-Port')
setIpro1nnServicetaActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaActive.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaActive.setDescription('Active')
setIpro1nnServicetaCommen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnServicetaCommen.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnServicetaCommen.setDescription('Comment')
setIpro1nnTable1nnaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5), )
if mibBuilder.loadTexts: setIpro1nnTable1nnaTable.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaTable.setDescription('Table-1-N-NAT')
setIpro1nnTable1nnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnTable1nnaInt"))
if mibBuilder.loadTexts: setIpro1nnTable1nnaEntry.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaEntry.setDescription('entry in table')
setIpro1nnTable1nnaInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaInt.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaInt.setDescription('Intranet-Address')
setIpro1nnTable1nnaSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaSou.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaSou.setDescription('Source-Port')
setIpro1nnTable1nnaPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 17, 1))).clone(namedValues=NamedValues(("tcp", 6), ("udp", 17), ("icmp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaPro.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaPro.setDescription('Protocol')
setIpro1nnTable1nnaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaTim.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaTim.setDescription('Timeout')
setIpro1nnTable1nnaHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaHan.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaHan.setDescription('Handler')
setIpro1nnTable1nnaRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnTable1nnaRem.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnTable1nnaRem.setDescription('remote-Address')
setIpro1nnFragments = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("filter", 0), ("route", 1), ("reassemble", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnFragments.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnFragments.setDescription('Fragments')
setIpro1nnFragmenta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnFragmenta.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnFragmenta.setDescription('Fragment-Aging-Seconds')
setIpro1nnIpsecagin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIpsecagin.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsecagin.setDescription('IPSec-Aging-Seconds')
setIpro1nnIpsectablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9), )
if mibBuilder.loadTexts: setIpro1nnIpsectablTable.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablTable.setDescription('IPSec-Table')
setIpro1nnIpsectablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIpro1nnIpsectablRemotea"))
if mibBuilder.loadTexts: setIpro1nnIpsectablEntry.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablEntry.setDescription('entry in table')
setIpro1nnIpsectablRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotea.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotea.setDescription('remote-Address')
setIpro1nnIpsectablLocalad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalad.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalad.setDescription('local-Address')
setIpro1nnIpsectablRchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRchi.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablRchi.setDescription('rc-hi')
setIpro1nnIpsectablRclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRclo.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablRclo.setDescription('rc-lo')
setIpro1nnIpsectablLchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLchi.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablLchi.setDescription('lc-hi')
setIpro1nnIpsectablLclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLclo.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablLclo.setDescription('lc-lo')
setIpro1nnIpsectablRemotes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotes.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablRemotes.setDescription('remote-SPI')
setIpro1nnIpsectablLocalsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalsp.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablLocalsp.setDescription('local-SPI')
setIpro1nnIpsectablTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablTimeout.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablTimeout.setDescription('Timeout')
setIpro1nnIpsectablCo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablCo.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablCo.setDescription('CO')
setIpro1nnIpsectablNl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablNl.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablNl.setDescription('NL')
setIpro1nnIpsectablNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablNr.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablNr.setDescription('NR')
setIpro1nnIpsectablDp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablDp.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablDp.setDescription('DP')
setIpro1nnIpsectablFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIpro1nnIpsectablFlags.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIpsectablFlags.setDescription('Flags')
setIpro1nnIdspoofin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIpro1nnIdspoofin.setStatus('current')
if mibBuilder.loadTexts: setIpro1nnIdspoofin.setDescription('ID-Spoofing')
setIproFir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10))
setIproFirOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirOpera.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpera.setDescription('Operating')
setIproFirActioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4), )
if mibBuilder.loadTexts: setIproFirActioTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirActioTable.setDescription('Actions')
setIproFirActioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirActioNam"))
if mibBuilder.loadTexts: setIproFirActioEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirActioEntry.setDescription('entry in table')
setIproFirActioNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirActioNam.setStatus('current')
if mibBuilder.loadTexts: setIproFirActioNam.setDescription('Name')
setIproFirActioDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirActioDes.setStatus('current')
if mibBuilder.loadTexts: setIproFirActioDes.setDescription('Description')
setIproFirObjecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1), )
if mibBuilder.loadTexts: setIproFirObjecTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirObjecTable.setDescription('Objects')
setIproFirObjecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirObjecNam"))
if mibBuilder.loadTexts: setIproFirObjecEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirObjecEntry.setDescription('entry in table')
setIproFirObjecNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirObjecNam.setStatus('current')
if mibBuilder.loadTexts: setIproFirObjecNam.setDescription('Name')
setIproFirObjecDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirObjecDes.setStatus('current')
if mibBuilder.loadTexts: setIproFirObjecDes.setDescription('Description')
setIproFirRulesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2), )
if mibBuilder.loadTexts: setIproFirRulesTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesTable.setDescription('Rules')
setIproFirRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirRulesNam"))
if mibBuilder.loadTexts: setIproFirRulesEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesEntry.setDescription('entry in table')
setIproFirRulesNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesNam.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesNam.setDescription('Name')
setIproFirRulesPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesPro.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesPro.setDescription('Prot.')
setIproFirRulesSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesSou.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesSou.setDescription('Source')
setIproFirRulesDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesDes.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesDes.setDescription('Destination')
setIproFirRulesAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesAct.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesAct.setDescription('Action')
setIproFirRulesLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesLin.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesLin.setDescription('Linked')
setIproFirRulesPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesPri.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesPri.setDescription('Prio')
setIproFirRulesFir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesFir.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesFir.setDescription('Firewall-Rule')
setIproFirRulesVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesVpn.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesVpn.setDescription('VPN-Rule')
setIproFirRulesSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesSta.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesSta.setDescription('Stateful')
setIproFirRulesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesRtg.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesRtg.setDescription('Rtg-tag')
setIproFirRulesCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirRulesCom.setStatus('current')
if mibBuilder.loadTexts: setIproFirRulesCom.setDescription('Comment')
setIproFirFilteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3), )
if mibBuilder.loadTexts: setIproFirFilteTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteTable.setDescription('Filter-List')
setIproFirFilteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirFilteIdx"))
if mibBuilder.loadTexts: setIproFirFilteEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteEntry.setDescription('entry in table')
setIproFirFilteIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteIdx.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteIdx.setDescription('Idx.')
setIproFirFilteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteProt.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteProt.setDescription('Prot.')
setIproFirFilteSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrcm.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteSrcm.setDescription('Src-MAC')
setIproFirFilteSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrca.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteSrca.setDescription('Src-Address')
setIproFirFilteSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSrcn.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteSrcn.setDescription('Src-Netmask')
setIproFirFilteSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSst.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteSst.setDescription('S-St.')
setIproFirFilteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteSend.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteSend.setDescription('S-End')
setIproFirFilteDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDstm.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteDstm.setDescription('Dst-MAC')
setIproFirFilteDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDsta.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteDsta.setDescription('Dst-Address')
setIproFirFilteDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDstn.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteDstn.setDescription('Dst-Netmask')
setIproFirFilteDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDst.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteDst.setDescription('D-St.')
setIproFirFilteDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteDend.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteDend.setDescription('D-End')
setIproFirFilteActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteActi.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteActi.setDescription('Action')
setIproFirFilteLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteLink.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteLink.setDescription('Linked')
setIproFirFiltePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFiltePrio.setStatus('current')
if mibBuilder.loadTexts: setIproFirFiltePrio.setDescription('Prio')
setIproFirFilteRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirFilteRtgt.setStatus('current')
if mibBuilder.loadTexts: setIproFirFilteRtgt.setDescription('Rtg-tag')
setIproFirConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5), )
if mibBuilder.loadTexts: setIproFirConneTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneTable.setDescription('Connection-List')
setIproFirConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirConneSrca"), (0, "LANCOM-1711-MIB", "setIproFirConneDsta"), (0, "LANCOM-1711-MIB", "setIproFirConneProt"), (0, "LANCOM-1711-MIB", "setIproFirConneSrcp"), (0, "LANCOM-1711-MIB", "setIproFirConneDstp"))
if mibBuilder.loadTexts: setIproFirConneEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneEntry.setDescription('entry in table')
setIproFirConneSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrca.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneSrca.setDescription('Src-Address')
setIproFirConneDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDsta.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneDsta.setDescription('Dst-Address')
setIproFirConneProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneProt.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneProt.setDescription('Prot.')
setIproFirConneSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrcp.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneSrcp.setDescription('Src-Port')
setIproFirConneDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDstp.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneDstp.setDescription('Dst-Port')
setIproFirConneRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneRtgt.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneRtgt.setDescription('Rtg-tag')
setIproFirConneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneTime.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneTime.setDescription('Timeout')
setIproFirConneFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneFlag.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneFlag.setDescription('Flags')
setIproFirConneFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneFilt.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneFilt.setDescription('Filter-Rule')
setIproFirConneSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneSrcr.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneSrcr.setDescription('Src-Route')
setIproFirConneDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirConneDest.setStatus('current')
if mibBuilder.loadTexts: setIproFirConneDest.setDescription('Dest-Route')
setIproFirOpenpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19), )
if mibBuilder.loadTexts: setIproFirOpenpTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpTable.setDescription('Open-Port-List')
setIproFirOpenpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirOpenpSrca"), (0, "LANCOM-1711-MIB", "setIproFirOpenpDsta"), (0, "LANCOM-1711-MIB", "setIproFirOpenpProt"), (0, "LANCOM-1711-MIB", "setIproFirOpenpDstp"))
if mibBuilder.loadTexts: setIproFirOpenpEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpEntry.setDescription('entry in table')
setIproFirOpenpSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpSrca.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpSrca.setDescription('Src-Address')
setIproFirOpenpDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpDsta.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpDsta.setDescription('Dst-Address')
setIproFirOpenpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpProt.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpProt.setDescription('Prot.')
setIproFirOpenpDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpDstp.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpDstp.setDescription('Dst-Port')
setIproFirOpenpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpTime.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpTime.setDescription('Timeout')
setIproFirOpenpFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpFilt.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpFilt.setDescription('Filter-Rule')
setIproFirOpenpSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirOpenpSrcr.setStatus('current')
if mibBuilder.loadTexts: setIproFirOpenpSrcr.setDescription('Src-Route')
setIproFirHostbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6), )
if mibBuilder.loadTexts: setIproFirHostbTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirHostbTable.setDescription('Host-Block-List')
setIproFirHostbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirHostbSrc"))
if mibBuilder.loadTexts: setIproFirHostbEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirHostbEntry.setDescription('entry in table')
setIproFirHostbSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbSrc.setStatus('current')
if mibBuilder.loadTexts: setIproFirHostbSrc.setDescription('Src-Address')
setIproFirHostbTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbTim.setStatus('current')
if mibBuilder.loadTexts: setIproFirHostbTim.setDescription('Timeout')
setIproFirHostbFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirHostbFil.setStatus('current')
if mibBuilder.loadTexts: setIproFirHostbFil.setDescription('Filter-Rule')
setIproFirPortbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7), )
if mibBuilder.loadTexts: setIproFirPortbTable.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbTable.setDescription('Port-Block-List')
setIproFirPortbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproFirPortbDsta"))
if mibBuilder.loadTexts: setIproFirPortbEntry.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbEntry.setDescription('entry in table')
setIproFirPortbDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbDsta.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbDsta.setDescription('Dst-Address')
setIproFirPortbProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbProt.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbProt.setDescription('Prot.')
setIproFirPortbDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbDstp.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbDstp.setDescription('Dst-Port')
setIproFirPortbTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbTime.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbTime.setDescription('Timeout')
setIproFirPortbFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIproFirPortbFilt.setStatus('current')
if mibBuilder.loadTexts: setIproFirPortbFilt.setDescription('Filter-Rule')
setIproFirMaxha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirMaxha.setStatus('current')
if mibBuilder.loadTexts: setIproFirMaxha.setDescription('Max.-Half-Open-Conns.')
setIproFirDosac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirDosac.setStatus('current')
if mibBuilder.loadTexts: setIproFirDosac.setDescription('DoS-Action')
setIproFirPorts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirPorts.setStatus('current')
if mibBuilder.loadTexts: setIproFirPorts.setDescription('Port-Scan-Threshold')
setIproFirIdsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirIdsac.setStatus('current')
if mibBuilder.loadTexts: setIproFirIdsac.setDescription('IDS-Action')
setIproFirAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAdmin.setStatus('current')
if mibBuilder.loadTexts: setIproFirAdmin.setDescription('Admin.-Email')
setIproFirPingb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirPingb.setStatus('current')
if mibBuilder.loadTexts: setIproFirPingb.setDescription('Ping-Block')
setIproFirSteal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirSteal.setStatus('current')
if mibBuilder.loadTexts: setIproFirSteal.setDescription('Stealth-Mode')
setIproFirAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("closed", 0), ("stealth", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAuthp.setStatus('current')
if mibBuilder.loadTexts: setIproFirAuthp.setDescription('Auth-Port')
setIproFirDenys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirDenys.setStatus('current')
if mibBuilder.loadTexts: setIproFirDenys.setDescription('Deny-Session-Recover')
setIproFirAppli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20))
setIproFirAppliFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1))
setIproFirAppliFtpFtp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpFtp.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliFtpFtp.setDescription('FTP-Block')
setIproFirAppliFtpAct = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpAct.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliFtpAct.setDescription('Active-FTP-Block')
setIproFirAppliFtpMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpMin.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliFtpMin.setDescription('Min-Port')
setIproFirAppliFtpChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpChe.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliFtpChe.setDescription('Check-Host-IP')
setIproFirAppliFtpFxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliFtpFxp.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliFtpFxp.setDescription('FXP-Block')
setIproFirAppliIrc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2))
setIproFirAppliIrcIrc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcIrc.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliIrcIrc.setDescription('IRC-Block')
setIproFirAppliIrcDdc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcDdc.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliIrcDdc.setDescription('DDC-Block')
setIproFirAppliIrcMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcMin.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliIrcMin.setDescription('Min-Port')
setIproFirAppliIrcChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliIrcChe.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliIrcChe.setDescription('Check-Host-IP')
setIproFirAppliApp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproFirAppliApp.setStatus('current')
if mibBuilder.loadTexts: setIproFirAppliApp.setDescription('Appl.-Action')
setIproNnnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19), )
if mibBuilder.loadTexts: setIproNnnTable.setStatus('current')
if mibBuilder.loadTexts: setIproNnnTable.setDescription('N-N-NAT')
setIproNnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproNnnIdx"))
if mibBuilder.loadTexts: setIproNnnEntry.setStatus('current')
if mibBuilder.loadTexts: setIproNnnEntry.setDescription('entry in table')
setIproNnnIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnIdx.setStatus('current')
if mibBuilder.loadTexts: setIproNnnIdx.setDescription('Idx.')
setIproNnnSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnSrca.setStatus('current')
if mibBuilder.loadTexts: setIproNnnSrca.setDescription('Src-Address')
setIproNnnSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnSrcm.setStatus('current')
if mibBuilder.loadTexts: setIproNnnSrcm.setDescription('Src-Mask')
setIproNnnDsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnDsts.setStatus('current')
if mibBuilder.loadTexts: setIproNnnDsts.setDescription('Dst-Station')
setIproNnnMapp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproNnnMapp.setStatus('current')
if mibBuilder.loadTexts: setIproNnnMapp.setDescription('Mapped-Network')
setIproWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproWan.setStatus('current')
if mibBuilder.loadTexts: setIproWan.setDescription('WAN-Tag-Creation')
setIproTagTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23), )
if mibBuilder.loadTexts: setIproTagTable.setStatus('current')
if mibBuilder.loadTexts: setIproTagTable.setDescription('Tag-Table')
setIproTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setIproTagPee"))
if mibBuilder.loadTexts: setIproTagEntry.setStatus('current')
if mibBuilder.loadTexts: setIproTagEntry.setDescription('entry in table')
setIproTagPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagPee.setStatus('current')
if mibBuilder.loadTexts: setIproTagPee.setDescription('Peer')
setIproTagRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagRtg.setStatus('current')
if mibBuilder.loadTexts: setIproTagRtg.setDescription('Rtg-tag')
setIproTagSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagSta.setStatus('current')
if mibBuilder.loadTexts: setIproTagSta.setDescription('Start-WAN-Pool')
setIproTagEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIproTagEnd.setStatus('current')
if mibBuilder.loadTexts: setIproTagEnd.setDescription('End-WAN-Pool')
setSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9))
setSnmpSendtrap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpSendtrap.setStatus('current')
if mibBuilder.loadTexts: setSnmpSendtrap.setDescription('Send-Traps')
setSnmpIptrapsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2), )
if mibBuilder.loadTexts: setSnmpIptrapsTable.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsTable.setDescription('IP-Traps')
setSnmpIptrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSnmpIptrapsTra"))
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setDescription('entry in table')
setSnmpIptrapsTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsTra.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsTra.setDescription('Trap-IP')
setSnmpIptrapsLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setDescription('Loopback-Addr.')
setSnmpIptrapsVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsVer.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsVer.setDescription('Version')
setSnmpAdminist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpAdminist.setStatus('current')
if mibBuilder.loadTexts: setSnmpAdminist.setDescription('Administrator')
setSnmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpLocation.setStatus('current')
if mibBuilder.loadTexts: setSnmpLocation.setDescription('Location')
setSnmpRegister = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpRegister.setStatus('current')
if mibBuilder.loadTexts: setSnmpRegister.setDescription('Register-Monitor')
setSnmpDeletemo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpDeletemo.setStatus('current')
if mibBuilder.loadTexts: setSnmpDeletemo.setDescription('Delete-Monitor')
setSnmpMonitortTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7), )
if mibBuilder.loadTexts: setSnmpMonitortTable.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortTable.setDescription('Monitor-Table')
setSnmpMonitortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSnmpMonitortIpa"), (0, "LANCOM-1711-MIB", "setSnmpMonitortPor"))
if mibBuilder.loadTexts: setSnmpMonitortEntry.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortEntry.setDescription('entry in table')
setSnmpMonitortIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortIpa.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortIpa.setDescription('IP-Address')
setSnmpMonitortPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPor.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortPor.setDescription('Port')
setSnmpMonitortMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortMac.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortMac.setDescription('MAC-Address')
setSnmpMonitortVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortVla.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortVla.setDescription('VLAN-ID')
setSnmpMonitortTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortTim.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortTim.setDescription('Timeout')
setSnmpMonitortPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPee.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortPee.setDescription('Peer')
setSnmpMonitortLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLoo.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortLoo.setDescription('Loopback-Addr.')
setSnmpMonitortLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLan.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortLan.setDescription('LAN-Ifc')
setSnmpMonitortEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortEth.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortEth.setDescription('Ethernet-Port')
setSnmpPassword = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpPassword.setStatus('current')
if mibBuilder.loadTexts: setSnmpPassword.setDescription('Password-Required-for-SNMP-Read-Access')
setSnmpReadonly = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpReadonly.setStatus('current')
if mibBuilder.loadTexts: setSnmpReadonly.setDescription('Read-Only-Community')
setSnmpComment1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment1.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment1.setDescription('Comment-1')
setSnmpComment2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment2.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment2.setDescription('Comment-2')
setSnmpComment3 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment3.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment3.setDescription('Comment-3')
setSnmpComment4 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment4.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment4.setDescription('Comment-4')
setDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10))
setDhcpNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20), )
if mibBuilder.loadTexts: setDhcpNetTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetTable.setDescription('Network-list')
setDhcpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpNetNetworknam"))
if mibBuilder.loadTexts: setDhcpNetEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetEntry.setDescription('entry in table')
setDhcpNetNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetworknam.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNetworknam.setDescription('Network-name')
setDhcpNetStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetStartaddre.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetStartaddre.setDescription('Start-Address-Pool')
setDhcpNetEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetEndaddress.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetEndaddress.setDescription('End-Address-Pool')
setDhcpNetNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetmask.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNetmask.setDescription('Netmask')
setDhcpNetBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setDescription('Broadcast-Address')
setDhcpNetGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setDescription('Gateway-Address')
setDhcpNetDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setDescription('DNS-Default')
setDhcpNetDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setDescription('DNS-Backup')
setDhcpNetNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setDescription('NBNS-Default')
setDhcpNetNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setDescription('NBNS-Backup')
setDhcpNetOperating = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16, 4))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2), ("relay", 16), ("client", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetOperating.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetOperating.setDescription('Operating')
setDhcpNetBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setDescription('Broadcast-Bit')
setDhcpNetMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetMasterserv.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetMasterserv.setDescription('Master-Server')
setDhcpNetCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetCache.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetCache.setDescription('Cache')
setDhcpNetAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetAdaption.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetAdaption.setDescription('Adaption')
setDhcpPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18), )
if mibBuilder.loadTexts: setDhcpPorTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorTable.setDescription('Ports')
setDhcpPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpPorPor"))
if mibBuilder.loadTexts: setDhcpPorEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorEntry.setDescription('entry in table')
setDhcpPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpPorPor.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorPor.setDescription('Port')
setDhcpPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpPorEna.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorEna.setDescription('Enable-DHCP')
setDhcpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpMax.setStatus('current')
if mibBuilder.loadTexts: setDhcpMax.setDescription('Max.-Lease-Time-Minutes')
setDhcpDef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpDef.setStatus('current')
if mibBuilder.loadTexts: setDhcpDef.setDescription('Default-Lease-Time-Minutes')
setDhcpDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8), )
if mibBuilder.loadTexts: setDhcpDhcTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTable.setDescription('DHCP-Table')
setDhcpDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpDhcIpa"), (0, "LANCOM-1711-MIB", "setDhcpDhcNet"))
if mibBuilder.loadTexts: setDhcpDhcEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcEntry.setDescription('entry in table')
setDhcpDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcIpa.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcIpa.setDescription('IP-Address')
setDhcpDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcMac.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcMac.setDescription('MAC-Address')
setDhcpDhcTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTim.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTim.setDescription('Timeout')
setDhcpDhcHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcHos.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcHos.setDescription('Hostname')
setDhcpDhcTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 5), Bits().clone(namedValues=NamedValues(("new", 15), ("new", 14), ("dyn", 11), ("unkn", 13), ("stat", 12), ("bootp", 10), ("relay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTyp.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTyp.setDescription('Type')
setDhcpDhcLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcLan.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcLan.setDescription('LAN-Ifc')
setDhcpDhcEth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcEth.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcEth.setDescription('Ethernet-Port')
setDhcpDhcVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcVla.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcVla.setDescription('VLAN-ID')
setDhcpDhcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcNet.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcNet.setDescription('Network-name')
setDhcpHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9), )
if mibBuilder.loadTexts: setDhcpHosTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosTable.setDescription('Hosts')
setDhcpHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpHosMac"), (0, "LANCOM-1711-MIB", "setDhcpHosNet"))
if mibBuilder.loadTexts: setDhcpHosEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosEntry.setDescription('entry in table')
setDhcpHosMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosMac.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosMac.setDescription('MAC-Address')
setDhcpHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosNet.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosNet.setDescription('Network-name')
setDhcpHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIpa.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosIpa.setDescription('IP-Address')
setDhcpHosHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosHos.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosHos.setDescription('Hostname')
setDhcpHosIma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIma.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosIma.setDescription('Image-alias')
setDhcpAliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10), )
if mibBuilder.loadTexts: setDhcpAliTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliTable.setDescription('Alias-List')
setDhcpAliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpAliImagea"))
if mibBuilder.loadTexts: setDhcpAliEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliEntry.setDescription('entry in table')
setDhcpAliImagea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagea.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImagea.setDescription('Image-alias')
setDhcpAliImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImages.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImages.setDescription('Image-Server')
setDhcpAliImagef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagef.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImagef.setDescription('Image-file')
setDhcpAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21), )
if mibBuilder.loadTexts: setDhcpAddTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddTable.setDescription('Additional-Options')
setDhcpAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDhcpAddOptionn"), (0, "LANCOM-1711-MIB", "setDhcpAddNetwork"))
if mibBuilder.loadTexts: setDhcpAddEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddEntry.setDescription('entry in table')
setDhcpAddOptionn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionn.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddOptionn.setDescription('Option-Number')
setDhcpAddNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddNetwork.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddNetwork.setDescription('Network-name')
setDhcpAddOptiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 2))).clone(namedValues=NamedValues(("string", 0), ("integer32", 1), ("integer16", 3), ("integer8", 4), ("ip-address", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptiont.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddOptiont.setDescription('Option-Type')
setDhcpAddOptionv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionv.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddOptionv.setDescription('Option-Value')
setDhcpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpUse.setStatus('current')
if mibBuilder.loadTexts: setDhcpUse.setDescription('User-Class-Identifer')
setDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17))
setDnsOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsOper.setStatus('current')
if mibBuilder.loadTexts: setDnsOper.setDescription('Operating')
setDnsDoma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDoma.setStatus('current')
if mibBuilder.loadTexts: setDnsDoma.setDescription('Domain')
setDnsSubdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13), )
if mibBuilder.loadTexts: setDnsSubdTable.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdTable.setDescription('Sub-Domains')
setDnsSubdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsSubdNet"))
if mibBuilder.loadTexts: setDnsSubdEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdEntry.setDescription('entry in table')
setDnsSubdNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdNet.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdNet.setDescription('Network-name')
setDnsSubdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdSub.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdSub.setDescription('Sub-Domain')
setDnsReso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsReso.setStatus('current')
if mibBuilder.loadTexts: setDnsReso.setDescription('Resolve-Domain')
setDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDhcp.setStatus('current')
if mibBuilder.loadTexts: setDnsDhcp.setDescription('DHCP-Usage')
setDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsNetb.setStatus('current')
if mibBuilder.loadTexts: setDnsNetb.setDescription('NetBIOS-Usage')
setDnsDnslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5), )
if mibBuilder.loadTexts: setDnsDnslTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslTable.setDescription('DNS-List')
setDnsDnslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDnslHos"))
if mibBuilder.loadTexts: setDnsDnslEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslEntry.setDescription('entry in table')
setDnsDnslHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslHos.setDescription('Host-name')
setDnsDnslIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslIpa.setDescription('IP-Address')
setDnsFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6), )
if mibBuilder.loadTexts: setDnsFiltTable.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltTable.setDescription('Filter-List')
setDnsFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsFiltIdx"))
if mibBuilder.loadTexts: setDnsFiltEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltEntry.setDescription('entry in table')
setDnsFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIdx.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltIdx.setDescription('Idx.')
setDnsFiltDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltDom.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltDom.setDescription('Domain')
setDnsFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltIpa.setDescription('IP-Address')
setDnsFiltNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltNet.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltNet.setDescription('Netmask')
setDnsDyndTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8), )
if mibBuilder.loadTexts: setDnsDyndTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndTable.setDescription('Dyn.-DNS-List')
setDnsDyndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDyndHos"))
if mibBuilder.loadTexts: setDnsDyndEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndEntry.setDescription('entry in table')
setDnsDyndHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndHos.setDescription('Host-name')
setDnsDyndIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndIpa.setDescription('IP-Address')
setDnsDyndTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndTim.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndTim.setDescription('Timeout')
setDnsDnsdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9), )
if mibBuilder.loadTexts: setDnsDnsdTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdTable.setDescription('DNS-Destinations')
setDnsDnsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDnsdDom"))
if mibBuilder.loadTexts: setDnsDnsdEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdEntry.setDescription('entry in table')
setDnsDnsdDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDom.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdDom.setDescription('Domain-name')
setDnsDnsdDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDes.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdDes.setDescription('Destination')
setDnsLeas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsLeas.setStatus('current')
if mibBuilder.loadTexts: setDnsLeas.setDescription('Leasetime')
setDnsServTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10), )
if mibBuilder.loadTexts: setDnsServTable.setStatus('current')
if mibBuilder.loadTexts: setDnsServTable.setDescription('Service-Location-List')
setDnsServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsServSer"))
if mibBuilder.loadTexts: setDnsServEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsServEntry.setDescription('entry in table')
setDnsServSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServSer.setStatus('current')
if mibBuilder.loadTexts: setDnsServSer.setDescription('Service-Name')
setDnsServHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServHos.setStatus('current')
if mibBuilder.loadTexts: setDnsServHos.setDescription('Host-name')
setDnsServPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServPor.setStatus('current')
if mibBuilder.loadTexts: setDnsServPor.setDescription('Port')
setDnsDynaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11), )
if mibBuilder.loadTexts: setDnsDynaTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaTable.setDescription('Dynamic-SRV-List')
setDnsDynaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setDnsDynaSer"))
if mibBuilder.loadTexts: setDnsDynaEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaEntry.setDescription('entry in table')
setDnsDynaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaSer.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaSer.setDescription('Service-Name')
setDnsDynaHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaHos.setDescription('Host-name')
setDnsDynaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaPor.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaPor.setDescription('Port')
setNetb = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16))
setNetbOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbOpe.setStatus('current')
if mibBuilder.loadTexts: setNetbOpe.setDescription('Operating')
setNetbNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12), )
if mibBuilder.loadTexts: setNetbNetTable.setStatus('current')
if mibBuilder.loadTexts: setNetbNetTable.setDescription('Networks')
setNetbNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbNetNet"))
if mibBuilder.loadTexts: setNetbNetEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbNetEntry.setDescription('entry in table')
setNetbNetNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetNet.setStatus('current')
if mibBuilder.loadTexts: setNetbNetNet.setDescription('Network-name')
setNetbNetOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetOpe.setStatus('current')
if mibBuilder.loadTexts: setNetbNetOpe.setDescription('Operating')
setNetbNetNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbNetNtd.setStatus('current')
if mibBuilder.loadTexts: setNetbNetNtd.setDescription('NT-Domain')
setNetbSco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbSco.setStatus('current')
if mibBuilder.loadTexts: setNetbSco.setDescription('Scope-ID')
setNetbPeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4), )
if mibBuilder.loadTexts: setNetbPeeTable.setStatus('current')
if mibBuilder.loadTexts: setNetbPeeTable.setDescription('Peers')
setNetbPeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbPeeNam"))
if mibBuilder.loadTexts: setNetbPeeEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbPeeEntry.setDescription('entry in table')
setNetbPeeNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbPeeNam.setStatus('current')
if mibBuilder.loadTexts: setNetbPeeNam.setDescription('Name')
setNetbPeeTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbPeeTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbPeeTyp.setDescription('Type')
setNetbGroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5), )
if mibBuilder.loadTexts: setNetbGroTable.setStatus('current')
if mibBuilder.loadTexts: setNetbGroTable.setDescription('Group-List')
setNetbGroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbGroGro"), (0, "LANCOM-1711-MIB", "setNetbGroTyp"), (0, "LANCOM-1711-MIB", "setNetbGroIpa"), (0, "LANCOM-1711-MIB", "setNetbGroRtg"))
if mibBuilder.loadTexts: setNetbGroEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbGroEntry.setDescription('entry in table')
setNetbGroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroGro.setStatus('current')
if mibBuilder.loadTexts: setNetbGroGro.setDescription('Group/Domain')
setNetbGroTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbGroTyp.setDescription('Type')
setNetbGroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbGroIpa.setDescription('IP-Address')
setNetbGroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbGroRtg.setDescription('Rtg-tag')
setNetbGroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroPee.setStatus('current')
if mibBuilder.loadTexts: setNetbGroPee.setDescription('Peer')
setNetbGroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroNet.setStatus('current')
if mibBuilder.loadTexts: setNetbGroNet.setDescription('Network-name')
setNetbGroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroTim.setStatus('current')
if mibBuilder.loadTexts: setNetbGroTim.setDescription('Timeout')
setNetbGroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbGroFla.setStatus('current')
if mibBuilder.loadTexts: setNetbGroFla.setDescription('Flags')
setNetbHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6), )
if mibBuilder.loadTexts: setNetbHosTable.setStatus('current')
if mibBuilder.loadTexts: setNetbHosTable.setDescription('Host-List')
setNetbHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbHosNam"), (0, "LANCOM-1711-MIB", "setNetbHosTyp"), (0, "LANCOM-1711-MIB", "setNetbHosIpa"), (0, "LANCOM-1711-MIB", "setNetbHosRtg"))
if mibBuilder.loadTexts: setNetbHosEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbHosEntry.setDescription('entry in table')
setNetbHosNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosNam.setStatus('current')
if mibBuilder.loadTexts: setNetbHosNam.setDescription('Name')
setNetbHosTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbHosTyp.setDescription('Type')
setNetbHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbHosIpa.setDescription('IP-Address')
setNetbHosRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbHosRtg.setDescription('Rtg-tag')
setNetbHosPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosPee.setStatus('current')
if mibBuilder.loadTexts: setNetbHosPee.setDescription('Peer')
setNetbHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosNet.setStatus('current')
if mibBuilder.loadTexts: setNetbHosNet.setDescription('Network-name')
setNetbHosTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosTim.setStatus('current')
if mibBuilder.loadTexts: setNetbHosTim.setDescription('Timeout')
setNetbHosFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbHosFla.setStatus('current')
if mibBuilder.loadTexts: setNetbHosFla.setDescription('Flags')
setNetbSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7), )
if mibBuilder.loadTexts: setNetbSerTable.setStatus('current')
if mibBuilder.loadTexts: setNetbSerTable.setDescription('Server-List')
setNetbSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbSerHos"), (0, "LANCOM-1711-MIB", "setNetbSerGro"), (0, "LANCOM-1711-MIB", "setNetbSerIpa"), (0, "LANCOM-1711-MIB", "setNetbSerRtg"))
if mibBuilder.loadTexts: setNetbSerEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbSerEntry.setDescription('entry in table')
setNetbSerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerHos.setStatus('current')
if mibBuilder.loadTexts: setNetbSerHos.setDescription('Host')
setNetbSerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerGro.setStatus('current')
if mibBuilder.loadTexts: setNetbSerGro.setDescription('Group/Domain')
setNetbSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbSerIpa.setDescription('IP-Address')
setNetbSerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbSerRtg.setDescription('Rtg-tag')
setNetbSerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerOsv.setStatus('current')
if mibBuilder.loadTexts: setNetbSerOsv.setDescription('OS-Ver.')
setNetbSerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerSmb.setStatus('current')
if mibBuilder.loadTexts: setNetbSerSmb.setDescription('SMB-Ver.')
setNetbSerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerSer.setStatus('current')
if mibBuilder.loadTexts: setNetbSerSer.setDescription('Server-Typ')
setNetbSerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerPee.setStatus('current')
if mibBuilder.loadTexts: setNetbSerPee.setDescription('Peer')
setNetbSerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerNet.setStatus('current')
if mibBuilder.loadTexts: setNetbSerNet.setDescription('Network-name')
setNetbSerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerTim.setStatus('current')
if mibBuilder.loadTexts: setNetbSerTim.setDescription('Timeout')
setNetbSerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbSerFla.setStatus('current')
if mibBuilder.loadTexts: setNetbSerFla.setDescription('Flags')
setNetbBroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13), )
if mibBuilder.loadTexts: setNetbBroTable.setStatus('current')
if mibBuilder.loadTexts: setNetbBroTable.setDescription('Browser-List')
setNetbBroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNetbBroBro"), (0, "LANCOM-1711-MIB", "setNetbBroGro"), (0, "LANCOM-1711-MIB", "setNetbBroIpa"), (0, "LANCOM-1711-MIB", "setNetbBroRtg"))
if mibBuilder.loadTexts: setNetbBroEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbBroEntry.setDescription('entry in table')
setNetbBroBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroBro.setStatus('current')
if mibBuilder.loadTexts: setNetbBroBro.setDescription('Browser')
setNetbBroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroGro.setStatus('current')
if mibBuilder.loadTexts: setNetbBroGro.setDescription('Group/Domain')
setNetbBroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbBroIpa.setDescription('IP-Address')
setNetbBroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbBroRtg.setDescription('Rtg-tag')
setNetbBroOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroOsv.setStatus('current')
if mibBuilder.loadTexts: setNetbBroOsv.setDescription('OS-Ver.')
setNetbBroSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroSer.setStatus('current')
if mibBuilder.loadTexts: setNetbBroSer.setDescription('Server-Typ')
setNetbBroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroPee.setStatus('current')
if mibBuilder.loadTexts: setNetbBroPee.setDescription('Peer')
setNetbBroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroNet.setStatus('current')
if mibBuilder.loadTexts: setNetbBroNet.setDescription('Network-name')
setNetbBroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroTim.setStatus('current')
if mibBuilder.loadTexts: setNetbBroTim.setDescription('Timeout')
setNetbBroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbBroFla.setStatus('current')
if mibBuilder.loadTexts: setNetbBroFla.setDescription('Flags')
setNetbSup = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbSup.setStatus('current')
if mibBuilder.loadTexts: setNetbSup.setDescription('Support-Browsing')
setNetbWat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("spoof", 1), ("route", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbWat.setStatus('current')
if mibBuilder.loadTexts: setNetbWat.setDescription('Watchdogs')
setNetbUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pback", 0), ("trig", 1), ("time", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbUpd.setStatus('current')
if mibBuilder.loadTexts: setNetbUpd.setDescription('Update')
setNetbWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbWan.setStatus('current')
if mibBuilder.loadTexts: setNetbWan.setDescription('WAN-Update-Minutes')
setNetbLea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbLea.setStatus('current')
if mibBuilder.loadTexts: setNetbLea.setDescription('Leasetime')
setConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11))
setConfPasswor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfPasswor.setStatus('current')
if mibBuilder.loadTexts: setConfPasswor.setDescription('Password-Required-for-SNMP-Read-Access')
setConfAdminea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminea.setStatus('current')
if mibBuilder.loadTexts: setConfAdminea.setDescription('Admin.-EAZ-MSN')
setConfMaximum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfMaximum.setStatus('current')
if mibBuilder.loadTexts: setConfMaximum.setDescription('Maximum-Connections')
setConfConfiga = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfConfiga.setStatus('current')
if mibBuilder.loadTexts: setConfConfiga.setDescription('Config-Aging-Minutes')
setConfOutband = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfOutband.setStatus('current')
if mibBuilder.loadTexts: setConfOutband.setDescription('Outband-Aging-Minutes')
setConfLoginer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLoginer.setStatus('current')
if mibBuilder.loadTexts: setConfLoginer.setDescription('Login-Errors')
setConfLockmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLockmin.setStatus('current')
if mibBuilder.loadTexts: setConfLockmin.setDescription('Lock-Minutes')
setConfLanguag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("english", 1), ("deutsch", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLanguag.setStatus('current')
if mibBuilder.loadTexts: setConfLanguag.setDescription('Language')
setConfTftpcli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13))
setConfTftpcliConfigadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliConfigadd.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliConfigadd.setDescription('Config-Address')
setConfTftpcliConfigfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliConfigfil.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliConfigfil.setDescription('Config-Filename')
setConfTftpcliFirmwarea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliFirmwarea.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliFirmwarea.setDescription('Firmware-Address')
setConfTftpcliFirmwaref = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliFirmwaref.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliFirmwaref.setDescription('Firmware-Filename')
setConfTftpcliScriptadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliScriptadd.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliScriptadd.setDescription('Script-Address')
setConfTftpcliScriptfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliScriptfil.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliScriptfil.setDescription('Script-Filename')
setConfTftpcliBytesperh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTftpcliBytesperh.setStatus('current')
if mibBuilder.loadTexts: setConfTftpcliBytesperh.setDescription('Bytes-per-Hashmark')
setConfAccesstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15), )
if mibBuilder.loadTexts: setConfAccesstTable.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstTable.setDescription('Access-Table')
setConfAccesstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfAccesstIfc"))
if mibBuilder.loadTexts: setConfAccesstEntry.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstEntry.setDescription('entry in table')
setConfAccesstIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfAccesstIfc.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstIfc.setDescription('Ifc.')
setConfAccesstTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTelnet.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstTelnet.setDescription('Telnet')
setConfAccesstTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTftp.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstTftp.setDescription('TFTP')
setConfAccesstHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstHttp.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstHttp.setDescription('HTTP')
setConfAccesstSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstSnmp.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstSnmp.setDescription('SNMP')
setConfAccesstHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstHttps.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstHttps.setDescription('HTTPS')
setConfAccesstTelnets = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstTelnets.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstTelnets.setDescription('Telnet-SSL')
setConfAccesstSsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 4, 0))).clone(namedValues=NamedValues(("vpn", 16), ("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAccesstSsh.setStatus('current')
if mibBuilder.loadTexts: setConfAccesstSsh.setDescription('SSH')
setConfScreenh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfScreenh.setStatus('current')
if mibBuilder.loadTexts: setConfScreenh.setDescription('Screen-Height')
setConfFunctioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43), )
if mibBuilder.loadTexts: setConfFunctioTable.setStatus('current')
if mibBuilder.loadTexts: setConfFunctioTable.setDescription('Function-Keys')
setConfFunctioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfFunctioKey"))
if mibBuilder.loadTexts: setConfFunctioEntry.setStatus('current')
if mibBuilder.loadTexts: setConfFunctioEntry.setDescription('entry in table')
setConfFunctioKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("f1", 1), ("f2", 2), ("f3", 3), ("f4", 4), ("f5", 5), ("f6", 6), ("f7", 7), ("f8", 8), ("f9", 9), ("f10", 10), ("f11", 11), ("f12", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfFunctioKey.setStatus('current')
if mibBuilder.loadTexts: setConfFunctioKey.setDescription('Key')
setConfFunctioMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfFunctioMap.setStatus('current')
if mibBuilder.loadTexts: setConfFunctioMap.setDescription('Mapping')
setConfLl2m = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50))
setConfLl2mOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLl2mOpe.setStatus('current')
if mibBuilder.loadTexts: setConfLl2mOpe.setDescription('Operating')
setConfLl2mTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLl2mTim.setStatus('current')
if mibBuilder.loadTexts: setConfLl2mTim.setDescription('Time-Limit')
setConfCrashme = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrashme.setStatus('current')
if mibBuilder.loadTexts: setConfCrashme.setDescription('Crash-Message')
setConfAdminge = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("male", 1), ("female", 2), ("geek", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminge.setStatus('current')
if mibBuilder.loadTexts: setConfAdminge.setDescription('Admin-Gender')
setConfAsserta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("log-only", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAsserta.setStatus('current')
if mibBuilder.loadTexts: setConfAsserta.setDescription('Assert-Action')
setConfPrompt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfPrompt.setStatus('current')
if mibBuilder.loadTexts: setConfPrompt.setDescription('Prompt')
setConfLedtest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 255))).clone(namedValues=NamedValues(("off", 0), ("green", 2), ("red", 1), ("no-test", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfLedtest.setStatus('current')
if mibBuilder.loadTexts: setConfLedtest.setDescription('LED-Test')
setConfCrontabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20), )
if mibBuilder.loadTexts: setConfCrontabTable.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabTable.setDescription('Cron-Table')
setConfCrontabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfCrontabInde"))
if mibBuilder.loadTexts: setConfCrontabEntry.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabEntry.setDescription('entry in table')
setConfCrontabInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabInde.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabInde.setDescription('Index')
setConfCrontabActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabActi.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabActi.setDescription('Active')
setConfCrontabBase = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("real-time", 0), ("operation-time", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabBase.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabBase.setDescription('Base')
setConfCrontabVari = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabVari.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabVari.setDescription('Variation')
setConfCrontabMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabMinu.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabMinu.setDescription('Minute')
setConfCrontabHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabHour.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabHour.setDescription('Hour')
setConfCrontabDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabDayo.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabDayo.setDescription('DayOfWeek')
setConfCrontabDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabDay.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabDay.setDescription('Day')
setConfCrontabMont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabMont.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabMont.setDescription('Month')
setConfCrontabComm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabComm.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabComm.setDescription('Command')
setConfCrontabOwne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfCrontabOwne.setStatus('current')
if mibBuilder.loadTexts: setConfCrontabOwne.setDescription('Owner')
setConfAdminsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21), )
if mibBuilder.loadTexts: setConfAdminsTable.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsTable.setDescription('Admins')
setConfAdminsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfAdminsAdm"))
if mibBuilder.loadTexts: setConfAdminsEntry.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsEntry.setDescription('entry in table')
setConfAdminsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAdm.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsAdm.setDescription('Administrator')
setConfAdminsPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsPas.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsPas.setDescription('Password')
setConfAdminsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAct.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsAct.setDescription('Active')
setConfAdminsAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8388608, 8388864, 16777216, 16777472, -1))).clone(namedValues=NamedValues(("none", 0), ("admin-ro-limit", 8388608), ("admin-rw-limit", 8388864), ("admin-ro", 16777216), ("admin-rw", 16777472), ("supervisor", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsAcc.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsAcc.setDescription('Access-Rights')
setConfAdminsFun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 3), Bits().clone(namedValues=NamedValues(("basic-wizard", 31), ("security-wizard", 30), ("internet-wizard", 29), ("ras-wizard", 27), ("provider-selection", 28), ("lanlan-wizard", 26), ("time-setting", 25), ("device-search", 24), ("rollout-wizard", 18), ("dynamic-dns-wizard", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAdminsFun.setStatus('current')
if mibBuilder.loadTexts: setConfAdminsFun.setDescription('Function-Rights')
setConfPredefaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27), )
if mibBuilder.loadTexts: setConfPredefaTable.setStatus('current')
if mibBuilder.loadTexts: setConfPredefaTable.setDescription('Predef.-Admins')
setConfPredefaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfPredefaNam"))
if mibBuilder.loadTexts: setConfPredefaEntry.setStatus('current')
if mibBuilder.loadTexts: setConfPredefaEntry.setDescription('entry in table')
setConfPredefaNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfPredefaNam.setStatus('current')
if mibBuilder.loadTexts: setConfPredefaNam.setDescription('Name')
setConfLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 1), Integer32())
if mibBuilder.loadTexts: setConfLan.setStatus('current')
if mibBuilder.loadTexts: setConfLan.setDescription('LAN')
setConfWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 2), Integer32())
if mibBuilder.loadTexts: setConfWan.setStatus('current')
if mibBuilder.loadTexts: setConfWan.setDescription('WAN')
setConfTelnetp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTelnetp.setStatus('current')
if mibBuilder.loadTexts: setConfTelnetp.setDescription('Telnet-Port')
setConfTelnets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfTelnets.setStatus('current')
if mibBuilder.loadTexts: setConfTelnets.setDescription('Telnet-SSL-Port')
setConfResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignore", 0), ("boot-only", 1), ("reset-or-boot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfResetbu.setStatus('current')
if mibBuilder.loadTexts: setConfResetbu.setDescription('Reset-button')
setConfMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35))
setConfMonitorTracemask1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfMonitorTracemask1.setStatus('current')
if mibBuilder.loadTexts: setConfMonitorTracemask1.setDescription('Tracemask1')
setConfMonitorTracemask2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfMonitorTracemask2.setStatus('current')
if mibBuilder.loadTexts: setConfMonitorTracemask2.setDescription('Tracemask2')
setConfUpdatec = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30))
setConfUpdatecOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecOperati.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecOperati.setDescription('Operating')
setConfUpdatecServern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecServern.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecServern.setDescription('Server-Name')
setConfUpdatecServerp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecServerp.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecServerp.setDescription('Server-Port')
setConfUpdatecRespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRespons.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecRespons.setDescription('Response-Timeout')
setConfUpdatecRetryfa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRetryfa.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecRetryfa.setDescription('Retry-Failure')
setConfUpdatecRetryok = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfUpdatecRetryok.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecRetryok.setDescription('Retry-Ok')
setConfUpdatecLastfir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfUpdatecLastfir.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecLastfir.setDescription('Last-Firmware-Update')
setConfUpdatecLastcon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfUpdatecLastcon.setStatus('current')
if mibBuilder.loadTexts: setConfUpdatecLastcon.setDescription('Last-Config-Update')
setConfAntithe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31))
setConfAntitheEna = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheEna.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheEna.setDescription('Enabled')
setConfAntitheMet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic-call", 0), ("facility", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheMet.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheMet.setDescription('Method')
setConfAntitheIsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheIsd.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheIsd.setDescription('ISDN-Ifc')
setConfAntitheCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheCal.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheCal.setDescription('Called-Number')
setConfAntitheOut = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheOut.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheOut.setDescription('Outgoing-Calling-Number')
setConfAntitheChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfAntitheChe.setStatus('current')
if mibBuilder.loadTexts: setConfAntitheChe.setDescription('Checked-Calling-Number')
setConfSshport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfSshport.setStatus('current')
if mibBuilder.loadTexts: setConfSshport.setDescription('SSH-Port')
setConfSshauthTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26), )
if mibBuilder.loadTexts: setConfSshauthTable.setStatus('current')
if mibBuilder.loadTexts: setConfSshauthTable.setDescription('SSH-Authentication-Methods')
setConfSshauthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setConfSshauthIfc"))
if mibBuilder.loadTexts: setConfSshauthEntry.setStatus('current')
if mibBuilder.loadTexts: setConfSshauthEntry.setDescription('entry in table')
setConfSshauthIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfSshauthIfc.setStatus('current')
if mibBuilder.loadTexts: setConfSshauthIfc.setDescription('Ifc.')
setConfSshauthMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("public-key", 1), ("password", 2), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfSshauthMet.setStatus('current')
if mibBuilder.loadTexts: setConfSshauthMet.setDescription('Methods')
setLanc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13))
setLancAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1), )
if mibBuilder.loadTexts: setLancAccTable.setStatus('current')
if mibBuilder.loadTexts: setLancAccTable.setDescription('Access-List')
setLancAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancAccIpa"), (0, "LANCOM-1711-MIB", "setLancAccIpn"), (0, "LANCOM-1711-MIB", "setLancAccRtg"))
if mibBuilder.loadTexts: setLancAccEntry.setStatus('current')
if mibBuilder.loadTexts: setLancAccEntry.setDescription('entry in table')
setLancAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccIpa.setStatus('current')
if mibBuilder.loadTexts: setLancAccIpa.setDescription('IP-Address')
setLancAccIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccIpn.setStatus('current')
if mibBuilder.loadTexts: setLancAccIpn.setDescription('IP-Netmask')
setLancAccRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancAccRtg.setStatus('current')
if mibBuilder.loadTexts: setLancAccRtg.setDescription('Rtg-tag')
setLancUdp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancUdp.setStatus('current')
if mibBuilder.loadTexts: setLancUdp.setDescription('UDP-Port')
setLancIntTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6), )
if mibBuilder.loadTexts: setLancIntTable.setStatus('current')
if mibBuilder.loadTexts: setLancIntTable.setDescription('Interface-List')
setLancIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancIntIfc"))
if mibBuilder.loadTexts: setLancIntEntry.setStatus('current')
if mibBuilder.loadTexts: setLancIntEntry.setDescription('entry in table')
setLancIntIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLancIntIfc.setStatus('current')
if mibBuilder.loadTexts: setLancIntIfc.setDescription('Ifc')
setLancIntOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("dial-only", 2), ("dial-in-only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntOpe.setStatus('current')
if mibBuilder.loadTexts: setLancIntOpe.setDescription('Operating')
setLancIntMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntMax.setStatus('current')
if mibBuilder.loadTexts: setLancIntMax.setDescription('Max-Connections')
setLancIntEaz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntEaz.setStatus('current')
if mibBuilder.loadTexts: setLancIntEaz.setDescription('EAZ-MSN(s)')
setLancIntFor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancIntFor.setStatus('current')
if mibBuilder.loadTexts: setLancIntFor.setDescription('Force-Out-MSN')
setLancPriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7), )
if mibBuilder.loadTexts: setLancPriTable.setStatus('current')
if mibBuilder.loadTexts: setLancPriTable.setDescription('Priority-List')
setLancPriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLancPriIfc"))
if mibBuilder.loadTexts: setLancPriEntry.setStatus('current')
if mibBuilder.loadTexts: setLancPriEntry.setDescription('entry in table')
setLancPriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("s0-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLancPriIfc.setStatus('current')
if mibBuilder.loadTexts: setLancPriIfc.setDescription('Ifc')
setLancPriPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("p1", 0), ("p2", 1), ("p3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLancPriPri.setStatus('current')
if mibBuilder.loadTexts: setLancPriPri.setDescription('Prio-out')
setLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15))
setLcrRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrRou.setStatus('current')
if mibBuilder.loadTexts: setLcrRou.setDescription('Router-Usage')
setLcrLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrLan.setStatus('current')
if mibBuilder.loadTexts: setLcrLan.setDescription('Lancapi-Usage')
setLcrTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4), )
if mibBuilder.loadTexts: setLcrTimTable.setStatus('current')
if mibBuilder.loadTexts: setLcrTimTable.setDescription('Time-List')
setLcrTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLcrTimInd"))
if mibBuilder.loadTexts: setLcrTimEntry.setStatus('current')
if mibBuilder.loadTexts: setLcrTimEntry.setDescription('entry in table')
setLcrTimInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimInd.setStatus('current')
if mibBuilder.loadTexts: setLcrTimInd.setDescription('Index')
setLcrTimPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimPre.setStatus('current')
if mibBuilder.loadTexts: setLcrTimPre.setDescription('Prefix')
setLcrTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 3), Bits().clone(namedValues=NamedValues(("monday", 7), ("tuesday", 6), ("wednesday", 5), ("thursday", 4), ("friday", 3), ("saturday", 2), ("sunday", 1), ("holiday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimDay.setStatus('current')
if mibBuilder.loadTexts: setLcrTimDay.setDescription('Days')
setLcrTimSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSta.setStatus('current')
if mibBuilder.loadTexts: setLcrTimSta.setDescription('Start')
setLcrTimSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSto.setStatus('current')
if mibBuilder.loadTexts: setLcrTimSto.setDescription('Stop')
setLcrTimNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimNum.setStatus('current')
if mibBuilder.loadTexts: setLcrTimNum.setDescription('Number-List')
setLcrTimFal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimFal.setStatus('current')
if mibBuilder.loadTexts: setLcrTimFal.setDescription('Fallback')
setLcrHolTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5), )
if mibBuilder.loadTexts: setLcrHolTable.setStatus('current')
if mibBuilder.loadTexts: setLcrHolTable.setDescription('Holidays')
setLcrHolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setLcrHolInd"))
if mibBuilder.loadTexts: setLcrHolEntry.setStatus('current')
if mibBuilder.loadTexts: setLcrHolEntry.setDescription('entry in table')
setLcrHolInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolInd.setStatus('current')
if mibBuilder.loadTexts: setLcrHolInd.setDescription('Index')
setLcrHolDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolDat.setStatus('current')
if mibBuilder.loadTexts: setLcrHolDat.setDescription('Date')
setTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14))
setTimeFetch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("isdn", 1), ("ntp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeFetch.setStatus('current')
if mibBuilder.loadTexts: setTimeFetch.setDescription('Fetch-Method')
setTimeCurre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeCurre.setStatus('current')
if mibBuilder.loadTexts: setTimeCurre.setDescription('Current-Time')
setTimeTimec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTimec.setStatus('current')
if mibBuilder.loadTexts: setTimeTimec.setDescription('Time-Call-Number')
setTimeCalla = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeCalla.setStatus('current')
if mibBuilder.loadTexts: setTimeCalla.setDescription('Call-Attempts')
setTimeUtcin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeUtcin.setStatus('current')
if mibBuilder.loadTexts: setTimeUtcin.setDescription('UTC-in-Seconds')
setTimeTimez = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTimez.setStatus('current')
if mibBuilder.loadTexts: setTimeTimez.setDescription('Timezone')
setTimeDayli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDayli.setStatus('current')
if mibBuilder.loadTexts: setTimeDayli.setDescription('Daylight-saving-time')
setTimeDstclTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12), )
if mibBuilder.loadTexts: setTimeDstclTable.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclTable.setDescription('DST-clock-changes')
setTimeDstclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTimeDstclEve"))
if mibBuilder.loadTexts: setTimeDstclEntry.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclEntry.setDescription('entry in table')
setTimeDstclEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeDstclEve.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclEve.setDescription('Event')
setTimeDstclInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclInd.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclInd.setDescription('Index')
setTimeDstclDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclDay.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclDay.setDescription('Day')
setTimeDstclMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclMon.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclMon.setDescription('Month')
setTimeDstclHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclHou.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclHou.setDescription('Hour')
setTimeDstclMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclMin.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclMin.setDescription('Minute')
setTimeDstclTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstclTim.setStatus('current')
if mibBuilder.loadTexts: setTimeDstclTim.setDescription('Time-type')
setTimeGetti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeGetti.setStatus('current')
if mibBuilder.loadTexts: setTimeGetti.setDescription('Get-Time')
setVpn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19))
setVpnOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnOperating.setStatus('current')
if mibBuilder.loadTexts: setVpnOperating.setDescription('Operating')
setVpnNattoperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnNattoperati.setStatus('current')
if mibBuilder.loadTexts: setVpnNattoperati.setDescription('NAT-T-Operating')
setVpnSimplecertr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnSimplecertr.setStatus('current')
if mibBuilder.loadTexts: setVpnSimplecertr.setDescription('Simple-Cert-RAS-Operating')
setVpnAllowremote = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAllowremote.setStatus('current')
if mibBuilder.loadTexts: setVpnAllowremote.setDescription('Allow-Remote-Network-Selection')
setVpnEstablishsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("only-with-keepalive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnEstablishsa.setStatus('current')
if mibBuilder.loadTexts: setVpnEstablishsa.setDescription('Establish-SAs-Collectively')
setVpnVpnpeersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9), )
if mibBuilder.loadTexts: setVpnVpnpeersTable.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersTable.setDescription('VPN-Peers')
setVpnVpnpeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnVpnpeersPeer"))
if mibBuilder.loadTexts: setVpnVpnpeersEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersEntry.setDescription('entry in table')
setVpnVpnpeersPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersPeer.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersPeer.setDescription('Peer')
setVpnVpnpeersShti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersShti.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersShti.setDescription('SH-Time')
setVpnVpnpeersExtr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersExtr.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersExtr.setDescription('Extranet-Address')
setVpnVpnpeersRemo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRemo.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersRemo.setDescription('Remote-Gw')
setVpnVpnpeersRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRtgt.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersRtgt.setDescription('Rtg-tag')
setVpnVpnpeersLaye = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersLaye.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersLaye.setDescription('Layer')
setVpnVpnpeersDyna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 8, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("icmp", 4), ("udp", 8), ("b-channel", 1), ("d-channel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersDyna.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersDyna.setDescription('dynamic')
setVpnVpnpeersIkee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("main-mode", 0), ("aggressive-mode", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersIkee.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersIkee.setDescription('IKE-Exchange')
setVpnVpnpeersRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("manually", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersRule.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersRule.setDescription('Rule-creation')
setVpnVpnpeersDpdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersDpdi.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersDpdi.setDescription('DPD-Inact-Timeout')
setVpnVpnpeersIkec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("client", 1), ("server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersIkec.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersIkec.setDescription('IKE-CFG')
setVpnVpnpeersXaut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("client", 1), ("server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnVpnpeersXaut.setStatus('current')
if mibBuilder.loadTexts: setVpnVpnpeersXaut.setDescription('XAUTH')
setVpnAdditionalgTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12), )
if mibBuilder.loadTexts: setVpnAdditionalgTable.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgTable.setDescription('Additional-Gateways')
setVpnAdditionalgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnAdditionalgPeer"))
if mibBuilder.loadTexts: setVpnAdditionalgEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgEntry.setDescription('entry in table')
setVpnAdditionalgPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgPeer.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgPeer.setDescription('Peer')
setVpnAdditionalgRemotegateway1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway1.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway1.setDescription('Remote-Gateway-1')
setVpnAdditionalgRtgtag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag1.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag1.setDescription('Rtg-Tag-1')
setVpnAdditionalgRemotegateway2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway2.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway2.setDescription('Remote-Gateway-2')
setVpnAdditionalgRtgtag2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag2.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag2.setDescription('Rtg-Tag-2')
setVpnAdditionalgRemotegateway3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway3.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway3.setDescription('Remote-Gateway-3')
setVpnAdditionalgRtgtag3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag3.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag3.setDescription('Rtg-Tag-3')
setVpnAdditionalgRemotegateway4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway4.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway4.setDescription('Remote-Gateway-4')
setVpnAdditionalgRtgtag4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag4.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag4.setDescription('Rtg-Tag-4')
setVpnAdditionalgRemotegateway5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway5.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway5.setDescription('Remote-Gateway-5')
setVpnAdditionalgRtgtag5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag5.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag5.setDescription('Rtg-Tag-5')
setVpnAdditionalgRemotegateway6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway6.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway6.setDescription('Remote-Gateway-6')
setVpnAdditionalgRtgtag6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag6.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag6.setDescription('Rtg-Tag-6')
setVpnAdditionalgRemotegateway7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway7.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway7.setDescription('Remote-Gateway-7')
setVpnAdditionalgRtgtag7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag7.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag7.setDescription('Rtg-Tag-7')
setVpnAdditionalgRemotegateway8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway8.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway8.setDescription('Remote-Gateway-8')
setVpnAdditionalgRtgtag8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag8.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag8.setDescription('Rtg-Tag-8')
setVpnAdditionalgRemotegateway9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway9.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway9.setDescription('Remote-Gateway-9')
setVpnAdditionalgRtgtag9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag9.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag9.setDescription('Rtg-Tag-9')
setVpnAdditionalgRemotegateway10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway10.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway10.setDescription('Remote-Gateway-10')
setVpnAdditionalgRtgtag10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag10.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag10.setDescription('Rtg-Tag-10')
setVpnAdditionalgRemotegateway11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway11.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway11.setDescription('Remote-Gateway-11')
setVpnAdditionalgRtgtag11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag11.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag11.setDescription('Rtg-Tag-11')
setVpnAdditionalgRemotegateway12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway12.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway12.setDescription('Remote-Gateway-12')
setVpnAdditionalgRtgtag12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag12.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag12.setDescription('Rtg-Tag-12')
setVpnAdditionalgRemotegateway13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway13.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway13.setDescription('Remote-Gateway-13')
setVpnAdditionalgRtgtag13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag13.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag13.setDescription('Rtg-Tag-13')
setVpnAdditionalgRemotegateway14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway14.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway14.setDescription('Remote-Gateway-14')
setVpnAdditionalgRtgtag14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag14.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag14.setDescription('Rtg-Tag-14')
setVpnAdditionalgRemotegateway15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway15.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway15.setDescription('Remote-Gateway-15')
setVpnAdditionalgRtgtag15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag15.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag15.setDescription('Rtg-Tag-15')
setVpnAdditionalgRemotegateway16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway16.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRemotegateway16.setDescription('Remote-Gateway-16')
setVpnAdditionalgRtgtag16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag16.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgRtgtag16.setDescription('Rtg-Tag-16')
setVpnAdditionalgBeginwith = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("last-used", 0), ("first", 1), ("random", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAdditionalgBeginwith.setStatus('current')
if mibBuilder.loadTexts: setVpnAdditionalgBeginwith.setDescription('Begin-With')
setVpnLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7), )
if mibBuilder.loadTexts: setVpnLayerTable.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerTable.setDescription('Layer')
setVpnLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnLayerName"))
if mibBuilder.loadTexts: setVpnLayerEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerEntry.setDescription('entry in table')
setVpnLayerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerName.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerName.setDescription('Name')
setVpnLayerPfsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerPfsg.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerPfsg.setDescription('PFS-Grp')
setVpnLayerIkeg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkeg.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerIkeg.setDescription('IKE-Grp')
setVpnLayerIkep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkep.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerIkep.setDescription('IKE-Prop-List')
setVpnLayerIpse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIpse.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerIpse.setDescription('IPSEC-Prop-List')
setVpnLayerIkek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLayerIkek.setStatus('current')
if mibBuilder.loadTexts: setVpnLayerIkek.setDescription('IKE-Key')
setVpnProposals = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4))
setVpnProposalsIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11), )
if mibBuilder.loadTexts: setVpnProposalsIkeTable.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeTable.setDescription('IKE')
setVpnProposalsIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIkeName"))
if mibBuilder.loadTexts: setVpnProposalsIkeEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeEntry.setDescription('entry in table')
setVpnProposalsIkeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeName.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeName.setDescription('Name')
setVpnProposalsIkeIkecrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 3, 6, 5, 1, 42))).clone(namedValues=NamedValues(("aes-cbc", 7), ("blowfish-cbc", 3), ("cast128-cbc", 6), ("e3des-cbc", 5), ("des-cbc", 1), ("null", 42)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkecrypta.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeIkecrypta.setDescription('IKE-Crypt-Alg')
setVpnProposalsIkeIkecryptk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkecryptk.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeIkecryptk.setDescription('IKE-Crypt-Keylen')
setVpnProposalsIkeIkeauthal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("md5", 1), ("sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthal.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthal.setDescription('IKE-Auth-Alg')
setVpnProposalsIkeIkeauthmo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("preshared-key", 1), ("rsa-signature", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthmo.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeIkeauthmo.setDescription('IKE-Auth-Mode')
setVpnProposalsIkeLifetimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimes.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimes.setDescription('Lifetime-Sec')
setVpnProposalsIkeLifetimek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimek.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeLifetimek.setDescription('Lifetime-KB')
setVpnProposalsIpsecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12), )
if mibBuilder.loadTexts: setVpnProposalsIpsecTable.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecTable.setDescription('IPSEC')
setVpnProposalsIpsecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIpsecName"))
if mibBuilder.loadTexts: setVpnProposalsIpsecEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecEntry.setDescription('entry in table')
setVpnProposalsIpsecName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecName.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecName.setDescription('Name')
setVpnProposalsIpsecEncapsmod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 65001))).clone(namedValues=NamedValues(("tunnel", 1), ("transport", 2), ("mixed-lcos4", 65001)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEncapsmod.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecEncapsmod.setDescription('Encaps-Mode')
setVpnProposalsIpsecEspcrypta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 12, 7, 6, 3, 2, 11))).clone(namedValues=NamedValues(("none", 0), ("aes-cbc", 12), ("blowfish-cbc", 7), ("cast128-cbc", 6), ("e3des-cbc", 3), ("des-cbc", 2), ("null", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcrypta.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcrypta.setDescription('ESP-Crypt-Alg')
setVpnProposalsIpsecEspcryptk = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcryptk.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecEspcryptk.setDescription('ESP-Crypt-Keylen')
setVpnProposalsIpsecEspauthal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("hmac-md5", 1), ("hmac-sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecEspauthal.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecEspauthal.setDescription('ESP-Auth-Alg')
setVpnProposalsIpsecAhauthalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("hmac-md5", 1), ("hmac-sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecAhauthalg.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecAhauthalg.setDescription('AH-Auth-Alg')
setVpnProposalsIpsecIpcompalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("deflate", 2), ("lzs", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecIpcompalg.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecIpcompalg.setDescription('IPCOMP-Alg')
setVpnProposalsIpsecLifetimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimes.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimes.setDescription('Lifetime-Sec')
setVpnProposalsIpsecLifetimek = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimek.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecLifetimek.setDescription('Lifetime-KB')
setVpnProposalsIkeproTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9), )
if mibBuilder.loadTexts: setVpnProposalsIkeproTable.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproTable.setDescription('IKE-Proposal-Lists')
setVpnProposalsIkeproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIkeproIkeproposall"))
if mibBuilder.loadTexts: setVpnProposalsIkeproEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproEntry.setDescription('entry in table')
setVpnProposalsIkeproIkeproposall = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposall.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposall.setDescription('IKE-Proposal-Lists')
setVpnProposalsIkeproIkeproposal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal1.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal1.setDescription('IKE-Proposal-1')
setVpnProposalsIkeproIkeproposal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal2.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal2.setDescription('IKE-Proposal-2')
setVpnProposalsIkeproIkeproposal3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal3.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal3.setDescription('IKE-Proposal-3')
setVpnProposalsIkeproIkeproposal4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal4.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal4.setDescription('IKE-Proposal-4')
setVpnProposalsIkeproIkeproposal5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal5.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal5.setDescription('IKE-Proposal-5')
setVpnProposalsIkeproIkeproposal6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal6.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal6.setDescription('IKE-Proposal-6')
setVpnProposalsIkeproIkeproposal7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal7.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal7.setDescription('IKE-Proposal-7')
setVpnProposalsIkeproIkeproposal8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal8.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIkeproIkeproposal8.setDescription('IKE-Proposal-8')
setVpnProposalsIpsecpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10), )
if mibBuilder.loadTexts: setVpnProposalsIpsecpTable.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpTable.setDescription('IPSEC-Proposal-Lists')
setVpnProposalsIpsecpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnProposalsIpsecpIpsecproposall"))
if mibBuilder.loadTexts: setVpnProposalsIpsecpEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpEntry.setDescription('entry in table')
setVpnProposalsIpsecpIpsecproposall = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposall.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposall.setDescription('IPSEC-Proposal-Lists')
setVpnProposalsIpsecpIpsecproposal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal1.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal1.setDescription('IPSEC-Proposal-1')
setVpnProposalsIpsecpIpsecproposal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal2.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal2.setDescription('IPSEC-Proposal-2')
setVpnProposalsIpsecpIpsecproposal3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal3.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal3.setDescription('IPSEC-Proposal-3')
setVpnProposalsIpsecpIpsecproposal4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal4.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal4.setDescription('IPSEC-Proposal-4')
setVpnProposalsIpsecpIpsecproposal5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal5.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal5.setDescription('IPSEC-Proposal-5')
setVpnProposalsIpsecpIpsecproposal6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal6.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal6.setDescription('IPSEC-Proposal-6')
setVpnProposalsIpsecpIpsecproposal7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal7.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal7.setDescription('IPSEC-Proposal-7')
setVpnProposalsIpsecpIpsecproposal8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal8.setStatus('current')
if mibBuilder.loadTexts: setVpnProposalsIpsecpIpsecproposal8.setDescription('IPSEC-Proposal-8')
setVpnCertificate = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5))
setVpnCertificateIkeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3), )
if mibBuilder.loadTexts: setVpnCertificateIkeTable.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeTable.setDescription('IKE-Keys')
setVpnCertificateIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnCertificateIkeName"))
if mibBuilder.loadTexts: setVpnCertificateIkeEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeEntry.setDescription('entry in table')
setVpnCertificateIkeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeName.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeName.setDescription('Name')
setVpnCertificateIkeLocalidtyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 11))).clone(namedValues=NamedValues(("no-identity", 0), ("ip-address", 1), ("domain-name", 2), ("email-address", 3), ("distinguished-name", 9), ("key-id", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeLocalidtyp.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeLocalidtyp.setDescription('Local-ID-Type')
setVpnCertificateIkeLocalident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeLocalident.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeLocalident.setDescription('Local-Identity')
setVpnCertificateIkeRemoteidty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 11))).clone(namedValues=NamedValues(("no-identity", 0), ("ip-address", 1), ("domain-name", 2), ("email-address", 3), ("distinguished-name", 9), ("key-id", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteidty.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteidty.setDescription('Remote-ID-Type')
setVpnCertificateIkeRemoteiden = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteiden.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeRemoteiden.setDescription('Remote-Identity')
setVpnCertificateIkeSharedsec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsec.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsec.setDescription('Shared-Sec')
setVpnCertificateIkeSharedsecf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsecf.setStatus('current')
if mibBuilder.loadTexts: setVpnCertificateIkeSharedsecf.setDescription('Shared-Sec-File')
setVpnIsakmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3))
setVpnIsakmpTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4), )
if mibBuilder.loadTexts: setVpnIsakmpTimTable.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimTable.setDescription('Timer')
setVpnIsakmpTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVpnIsakmpTimIdx"))
if mibBuilder.loadTexts: setVpnIsakmpTimEntry.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimEntry.setDescription('entry in table')
setVpnIsakmpTimIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVpnIsakmpTimIdx.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimIdx.setDescription('Idx.')
setVpnIsakmpTimRetrlim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrlim.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimRetrlim.setDescription('Retr-Lim')
setVpnIsakmpTimRetrtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtim.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtim.setDescription('Retr-Tim')
setVpnIsakmpTimRetrtimu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimu.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimu.setDescription('Retr-Tim-Usec')
setVpnIsakmpTimRetrtimm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimm.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimRetrtimm.setDescription('Retr-Tim-Max')
setVpnIsakmpTimExptim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnIsakmpTimExptim.setStatus('current')
if mibBuilder.loadTexts: setVpnIsakmpTimExptim.setDescription('Exp-Tim')
setVpnMainmodepro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnMainmodepro.setStatus('current')
if mibBuilder.loadTexts: setVpnMainmodepro.setDescription('MainMode-Proposal-List-Default')
setVpnMainmodeike = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnMainmodeike.setStatus('current')
if mibBuilder.loadTexts: setVpnMainmodeike.setDescription('MainMode-IKE-Group-Default')
setVpnAggrmodepro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAggrmodepro.setStatus('current')
if mibBuilder.loadTexts: setVpnAggrmodepro.setDescription('AggrMode-Proposal-List-Default')
setVpnAggrmodeike = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnAggrmodeike.setStatus('current')
if mibBuilder.loadTexts: setVpnAggrmodeike.setDescription('AggrMode-IKE-Group-Default')
setVpnQuickmodepr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodepr.setStatus('current')
if mibBuilder.loadTexts: setVpnQuickmodepr.setDescription('QuickMode-Proposal-List-Default')
setVpnQuickmodepf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodepf.setStatus('current')
if mibBuilder.loadTexts: setVpnQuickmodepf.setDescription('QuickMode-PFS-Group-Default')
setVpnQuickmodesh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnQuickmodesh.setStatus('current')
if mibBuilder.loadTexts: setVpnQuickmodesh.setDescription('QuickMode-Shorthold-Time-Default')
setVpnLegacydynvp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVpnLegacydynvp.setStatus('current')
if mibBuilder.loadTexts: setVpnLegacydynvp.setDescription('legacy-dyn-VPN(LCOS5.0x)-support')
setHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21))
setHttpDoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpDoc.setStatus('current')
if mibBuilder.loadTexts: setHttpDoc.setDescription('Document-Root')
setHttpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpUse.setStatus('current')
if mibBuilder.loadTexts: setHttpUse.setDescription('Use-CSS')
setHttpFon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpFon.setStatus('current')
if mibBuilder.loadTexts: setHttpFon.setDescription('Font-Family')
setHttpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("nifty", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpErr.setStatus('current')
if mibBuilder.loadTexts: setHttpErr.setDescription('Error-Page-Style')
setHttpPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPor.setStatus('current')
if mibBuilder.loadTexts: setHttpPor.setDescription('Port')
setHttpSsl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSsl.setStatus('current')
if mibBuilder.loadTexts: setHttpSsl.setDescription('SSL-Port')
setHttpSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSes.setStatus('current')
if mibBuilder.loadTexts: setHttpSes.setDescription('Session-Timeout')
setHttpSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal-design", 0), ("design-for-small-resolutions", 1), ("design-with-high-contrast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSta.setStatus('current')
if mibBuilder.loadTexts: setHttpSta.setDescription('Standard-Design')
setHttpShoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14), )
if mibBuilder.loadTexts: setHttpShoTable.setStatus('current')
if mibBuilder.loadTexts: setHttpShoTable.setDescription('Show-device-information')
setHttpShoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpShoDev"))
if mibBuilder.loadTexts: setHttpShoEntry.setStatus('current')
if mibBuilder.loadTexts: setHttpShoEntry.setDescription('entry in table')
setHttpShoDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20))).clone(namedValues=NamedValues(("cpu", 1), ("memory", 2), ("ethernet-ports", 5), ("troughput-ethernet", 6), ("umts-modem-interface", 7), ("router", 8), ("firewall", 9), ("dhcp", 10), ("dns", 11), ("vpn", 12), ("isdn", 14), ("dsl-dslol", 15), ("time", 18), ("ip-addresses", 19), ("operating-time", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpShoDev.setStatus('current')
if mibBuilder.loadTexts: setHttpShoDev.setDescription('Device-Information')
setHttpShoPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpShoPos.setStatus('current')
if mibBuilder.loadTexts: setHttpShoPos.setDescription('Position')
setHttpHtt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("activated", 0), ("only-for-wan", 1), ("deactivated", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpHtt.setStatus('current')
if mibBuilder.loadTexts: setHttpHtt.setDescription('HTTP-Compression')
setHttpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpMax.setStatus('current')
if mibBuilder.loadTexts: setHttpMax.setDescription('Max-Tunnel-Connections')
setHttpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpTun.setStatus('current')
if mibBuilder.loadTexts: setHttpTun.setDescription('Tunnel-Idle-Timeout')
setHttpRol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20))
setHttpRolOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolOperating.setStatus('current')
if mibBuilder.loadTexts: setHttpRolOperating.setDescription('Operating')
setHttpRolTitle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolTitle.setStatus('current')
if mibBuilder.loadTexts: setHttpRolTitle.setDescription('Title')
setHttpRolVariablesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3), )
if mibBuilder.loadTexts: setHttpRolVariablesTable.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTable.setDescription('Variables')
setHttpRolVariablesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpRolVariablesInd"))
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setDescription('entry in table')
setHttpRolVariablesInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesInd.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesInd.setDescription('Index')
setHttpRolVariablesIde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesIde.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesIde.setDescription('Ident')
setHttpRolVariablesTit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTit.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTit.setDescription('Title')
setHttpRolVariablesTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("label", 0), ("integer", 1), ("string", 2), ("password", 3), ("checkmark", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setDescription('Type')
setHttpRolVariablesMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMin.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesMin.setDescription('Min-Value')
setHttpRolVariablesMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMax.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesMax.setDescription('Max-Value')
setHttpRolVariablesDef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesDef.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesDef.setDescription('Default-Value')
setHttpRolRenumberv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumberv.setStatus('current')
if mibBuilder.loadTexts: setHttpRolRenumberv.setDescription('Renumber-Variables')
setHttpRolActionsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4), )
if mibBuilder.loadTexts: setHttpRolActionsTable.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsTable.setDescription('Actions')
setHttpRolActionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setHttpRolActionsInd"))
if mibBuilder.loadTexts: setHttpRolActionsEntry.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsEntry.setDescription('entry in table')
setHttpRolActionsInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsInd.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsInd.setDescription('Index')
setHttpRolActionsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsAct.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsAct.setDescription('Action')
setHttpRolActionsDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsDes.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsDes.setDescription('Description')
setHttpRolRenumbera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumbera.setStatus('current')
if mibBuilder.loadTexts: setHttpRolRenumbera.setDescription('Renumber-Actions')
setHttpRolDisplayco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 7), Bits().clone(namedValues=NamedValues(("isdn", 30), ("vpn", 29), ("dsl", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolDisplayco.setStatus('current')
if mibBuilder.loadTexts: setHttpRolDisplayco.setDescription('Display-Connection-Status-for')
setSysl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22))
setSyslOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslOpe.setStatus('current')
if mibBuilder.loadTexts: setSyslOpe.setDescription('Operating')
setSyslSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2), )
if mibBuilder.loadTexts: setSyslSerTable.setStatus('current')
if mibBuilder.loadTexts: setSyslSerTable.setDescription('Server')
setSyslSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSyslSerIdx"))
if mibBuilder.loadTexts: setSyslSerEntry.setStatus('current')
if mibBuilder.loadTexts: setSyslSerEntry.setDescription('entry in table')
setSyslSerIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerIdx.setStatus('current')
if mibBuilder.loadTexts: setSyslSerIdx.setDescription('Idx.')
setSyslSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerIpa.setStatus('current')
if mibBuilder.loadTexts: setSyslSerIpa.setDescription('IP-Address')
setSyslSerSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerSou.setStatus('current')
if mibBuilder.loadTexts: setSyslSerSou.setDescription('Source')
setSyslSerLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerLev.setStatus('current')
if mibBuilder.loadTexts: setSyslSerLev.setDescription('Level')
setSyslSerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslSerLoo.setStatus('current')
if mibBuilder.loadTexts: setSyslSerLoo.setDescription('Loopback-Addr.')
setSyslFacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3), )
if mibBuilder.loadTexts: setSyslFacTable.setStatus('current')
if mibBuilder.loadTexts: setSyslFacTable.setDescription('Facility-Mapper')
setSyslFacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setSyslFacSou"))
if mibBuilder.loadTexts: setSyslFacEntry.setStatus('current')
if mibBuilder.loadTexts: setSyslFacEntry.setDescription('entry in table')
setSyslFacSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("system", 1), ("login", 2), ("systemtime", 4), ("console-login", 8), ("connections", 16), ("accounting", 32), ("administration", 64), ("router", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSyslFacSou.setStatus('current')
if mibBuilder.loadTexts: setSyslFacSou.setDescription('Source')
setSyslFacFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslFacFac.setStatus('current')
if mibBuilder.loadTexts: setSyslFacFac.setDescription('Facility')
setSyslPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslPor.setStatus('current')
if mibBuilder.loadTexts: setSyslPor.setDescription('Port')
setSyslMes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oldest-on-top", 0), ("newest-on-top", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSyslMes.setStatus('current')
if mibBuilder.loadTexts: setSyslMes.setDescription('Messages-Table-Order')
setInte = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23))
setInteModem = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40))
setInteModemRingcou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemRingcou.setStatus('current')
if mibBuilder.loadTexts: setInteModemRingcou.setDescription('Ring-Count')
setInteModemEchooff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEchooff.setStatus('current')
if mibBuilder.loadTexts: setInteModemEchooff.setDescription('Echo-Off-Command')
setInteModemResetco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemResetco.setStatus('current')
if mibBuilder.loadTexts: setInteModemResetco.setDescription('Reset-Command')
setInteModemInitcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitcom.setStatus('current')
if mibBuilder.loadTexts: setInteModemInitcom.setDescription('Init-Command')
setInteModemRequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemRequest.setStatus('current')
if mibBuilder.loadTexts: setInteModemRequest.setDescription('Request-ID')
setInteModemInitdia = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitdia.setStatus('current')
if mibBuilder.loadTexts: setInteModemInitdia.setDescription('Init.-Dial')
setInteModemDialcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemDialcom.setStatus('current')
if mibBuilder.loadTexts: setInteModemDialcom.setDescription('Dial-Command')
setInteModemInitans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemInitans.setStatus('current')
if mibBuilder.loadTexts: setInteModemInitans.setDescription('Init.-Answer')
setInteModemAnswerc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemAnswerc.setStatus('current')
if mibBuilder.loadTexts: setInteModemAnswerc.setDescription('Answer-Command')
setInteModemDisconn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemDisconn.setStatus('current')
if mibBuilder.loadTexts: setInteModemDisconn.setDescription('Disconnect-Command')
setInteModemEscapes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEscapes.setStatus('current')
if mibBuilder.loadTexts: setInteModemEscapes.setDescription('Escape-Sequence')
setInteModemEscapep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemEscapep.setStatus('current')
if mibBuilder.loadTexts: setInteModemEscapep.setDescription('Escape-Promt-Delay-(ms)')
setInteModemCycleti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemCycleti.setStatus('current')
if mibBuilder.loadTexts: setInteModemCycleti.setDescription('Cycletime-AT-Poll-(s)')
setInteModemAtpollc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemAtpollc.setStatus('current')
if mibBuilder.loadTexts: setInteModemAtpollc.setDescription('AT-Poll-Count')
setInteMobile = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41))
setInteMobileProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1), )
if mibBuilder.loadTexts: setInteMobileProTable.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProTable.setDescription('Profiles')
setInteMobileProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteMobileProProf"))
if mibBuilder.loadTexts: setInteMobileProEntry.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProEntry.setDescription('entry in table')
setInteMobileProProf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProProf.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProProf.setDescription('Profile')
setInteMobileProPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProPin.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProPin.setDescription('PIN')
setInteMobileProApn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProApn.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProApn.setDescription('APN')
setInteMobileProNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProNetw.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProNetw.setDescription('Network')
setInteMobileProSele = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("manual", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProSele.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProSele.setDescription('Select')
setInteMobileProMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("umts", 1), ("gprs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProMode.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProMode.setDescription('Mode')
setInteMobileProQosd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProQosd.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProQosd.setDescription('QoS-downstream-data-rate')
setInteMobileProQosu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileProQosu.setStatus('current')
if mibBuilder.loadTexts: setInteMobileProQosu.setDescription('QoS-upstream-data-rate')
setInteMobileCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ppp", 1), ("ppp-plus-ip", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileCon.setStatus('current')
if mibBuilder.loadTexts: setInteMobileCon.setDescription('Connect-Monitoring')
setInteMobileTri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileTri.setStatus('current')
if mibBuilder.loadTexts: setInteMobileTri.setDescription('Tries')
setInteMobileHis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileHis.setStatus('current')
if mibBuilder.loadTexts: setInteMobileHis.setDescription('History-Interval[Sec]')
setInteMobileSys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileSys.setStatus('current')
if mibBuilder.loadTexts: setInteMobileSys.setDescription('Syslog-enabled')
setInteMobileSca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileSca.setStatus('current')
if mibBuilder.loadTexts: setInteMobileSca.setDescription('Scan-Networks')
setInteMobileInp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteMobileInp.setStatus('current')
if mibBuilder.loadTexts: setInteMobileInp.setDescription('Input-PUK')
setInteEthernTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30), )
if mibBuilder.loadTexts: setInteEthernTable.setStatus('current')
if mibBuilder.loadTexts: setInteEthernTable.setDescription('Ethernet-Ports')
setInteEthernEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteEthernPor"))
if mibBuilder.loadTexts: setInteEthernEntry.setStatus('current')
if mibBuilder.loadTexts: setInteEthernEntry.setDescription('entry in table')
setInteEthernPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("wan", 1), ("eth-1", 2), ("eth-2", 3), ("eth-3", 4), ("eth-4", 5), ("unknown", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteEthernPor.setStatus('current')
if mibBuilder.loadTexts: setInteEthernPor.setDescription('Port')
setInteEthernAss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(512, 513, 514, 515, 0, 1, 2, 3, 65533, 65534, 65535))).clone(namedValues=NamedValues(("dsl-1", 512), ("dsl-2", 513), ("dsl-3", 514), ("dsl-4", 515), ("lan-1", 0), ("lan-2", 1), ("lan-3", 2), ("lan-4", 3), ("idle", 65533), ("monitor", 65534), ("power-down", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernAss.setStatus('current')
if mibBuilder.loadTexts: setInteEthernAss.setDescription('Assignment')
setInteEthernCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernCon.setStatus('current')
if mibBuilder.loadTexts: setInteEthernCon.setDescription('Connector')
setInteEthernMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("mdi", 1), ("mdix", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernMdi.setStatus('current')
if mibBuilder.loadTexts: setInteEthernMdi.setDescription('MDI-Mode')
setInteEthernPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteEthernPri.setStatus('current')
if mibBuilder.loadTexts: setInteEthernPri.setDescription('Private-Mode')
setInteDslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4), )
if mibBuilder.loadTexts: setInteDslTable.setStatus('current')
if mibBuilder.loadTexts: setInteDslTable.setDescription('DSL')
setInteDslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteDslIfc"))
if mibBuilder.loadTexts: setInteDslEntry.setStatus('current')
if mibBuilder.loadTexts: setInteDslEntry.setDescription('entry in table')
setInteDslIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteDslIfc.setStatus('current')
if mibBuilder.loadTexts: setInteDslIfc.setDescription('Ifc')
setInteDslOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("no", 0), ("yes", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslOpe.setStatus('current')
if mibBuilder.loadTexts: setInteDslOpe.setDescription('Operating')
setInteDslUps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslUps.setStatus('current')
if mibBuilder.loadTexts: setInteDslUps.setDescription('Upstream-Rate')
setInteDslExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslExt.setStatus('current')
if mibBuilder.loadTexts: setInteDslExt.setDescription('Ext.-Overhead')
setInteDslDow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteDslDow.setStatus('current')
if mibBuilder.loadTexts: setInteDslDow.setDescription('Downstream-Rate')
setInteDslTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteDslTyp.setStatus('current')
if mibBuilder.loadTexts: setInteDslTyp.setDescription('Type-of-interface')
setInteS0Table = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1), )
if mibBuilder.loadTexts: setInteS0Table.setStatus('current')
if mibBuilder.loadTexts: setInteS0Table.setDescription('S0')
setInteS0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteS0Ifc"))
if mibBuilder.loadTexts: setInteS0Entry.setStatus('current')
if mibBuilder.loadTexts: setInteS0Entry.setDescription('entry in table')
setInteS0Ifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteS0Ifc.setStatus('current')
if mibBuilder.loadTexts: setInteS0Ifc.setDescription('Ifc')
setInteS0Prot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 16, 255))).clone(namedValues=NamedValues(("no", 0), ("dss1", 1), ("e1tr6", 2), ("p2p-dss1", 4), ("grp0", 16), ("auto", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Prot.setStatus('current')
if mibBuilder.loadTexts: setInteS0Prot.setDescription('Protocol')
setInteS0Llbc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("b1", 1), ("b2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Llbc.setStatus('current')
if mibBuilder.loadTexts: setInteS0Llbc.setDescription('LL-B-chan.')
setInteS0Dial = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Dial.setStatus('current')
if mibBuilder.loadTexts: setInteS0Dial.setDescription('Dial-prefix')
setInteS0Maxi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0))).clone(namedValues=NamedValues(("zero", 2), ("one", 1), ("two", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Maxi.setStatus('current')
if mibBuilder.loadTexts: setInteS0Maxi.setDescription('Max-in-calls')
setInteS0Maxo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0))).clone(namedValues=NamedValues(("zero", 2), ("one", 1), ("two", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteS0Maxo.setStatus('current')
if mibBuilder.loadTexts: setInteS0Maxo.setDescription('Max-out-calls')
setInteS0Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteS0Type.setStatus('current')
if mibBuilder.loadTexts: setInteS0Type.setDescription('Type-of-interface')
setInteModemmTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7), )
if mibBuilder.loadTexts: setInteModemmTable.setStatus('current')
if mibBuilder.loadTexts: setInteModemmTable.setDescription('Modem-Mobile')
setInteModemmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setInteModemmIfc"))
if mibBuilder.loadTexts: setInteModemmEntry.setStatus('current')
if mibBuilder.loadTexts: setInteModemmEntry.setDescription('entry in table')
setInteModemmIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsl-1", 1), ("dsl-2", 2), ("dsl-3", 3), ("dsl-4", 4), ("s0-1", 5), ("ext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteModemmIfc.setStatus('current')
if mibBuilder.loadTexts: setInteModemmIfc.setDescription('Ifc')
setInteModemmOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("modem", 1), ("umts-gprs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmOpe.setStatus('current')
if mibBuilder.loadTexts: setInteModemmOpe.setDescription('Operating')
setInteModemmTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInteModemmTyp.setStatus('current')
if mibBuilder.loadTexts: setInteModemmTyp.setDescription('Type-of-interface')
setInteModemmDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmDat.setStatus('current')
if mibBuilder.loadTexts: setInteModemmDat.setDescription('Data-Rate')
setInteModemmPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInteModemmPro.setStatus('current')
if mibBuilder.loadTexts: setInteModemmPro.setDescription('Profile')
setRadi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25))
setRadiAutht = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiAutht.setStatus('current')
if mibBuilder.loadTexts: setRadiAutht.setDescription('Auth.-Timeout')
setRadiAuthr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiAuthr.setStatus('current')
if mibBuilder.loadTexts: setRadiAuthr.setDescription('Auth.-Retry')
setRadiBacku = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("cyclic", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiBacku.setStatus('current')
if mibBuilder.loadTexts: setRadiBacku.setDescription('Backup-Query-Strategy')
setNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26))
setNtpSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpSer.setStatus('current')
if mibBuilder.loadTexts: setNtpSer.setDescription('Server-Operating')
setNtpBcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBcm.setStatus('current')
if mibBuilder.loadTexts: setNtpBcm.setDescription('BC-Mode')
setNtpBci = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBci.setStatus('current')
if mibBuilder.loadTexts: setNtpBci.setDescription('BC-Interval')
setNtpRqi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqi.setStatus('current')
if mibBuilder.loadTexts: setNtpRqi.setDescription('RQ-Interval')
setNtpRqt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqt.setStatus('current')
if mibBuilder.loadTexts: setNtpRqt.setDescription('RQ-Tries')
setNtpRqaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11), )
if mibBuilder.loadTexts: setNtpRqaTable.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaTable.setDescription('RQ-Address')
setNtpRqaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setNtpRqaRqa"))
if mibBuilder.loadTexts: setNtpRqaEntry.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaEntry.setDescription('entry in table')
setNtpRqaRqa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaRqa.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaRqa.setDescription('RQ-Address')
setNtpRqaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaLoo.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaLoo.setDescription('Loopback-Addr.')
setMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27))
setMailSmtps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtps.setStatus('current')
if mibBuilder.loadTexts: setMailSmtps.setDescription('SMTP-Server')
setMailSmtpp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtpp.setStatus('current')
if mibBuilder.loadTexts: setMailSmtpp.setDescription('SMTP-Port')
setMailPop3s = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3s.setStatus('current')
if mibBuilder.loadTexts: setMailPop3s.setDescription('POP3-Server')
setMailPop3p = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3p.setStatus('current')
if mibBuilder.loadTexts: setMailPop3p.setDescription('POP3-Port')
setMailLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailLoopb.setStatus('current')
if mibBuilder.loadTexts: setMailLoopb.setDescription('Loopback-Addr.')
setMailUsern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailUsern.setStatus('current')
if mibBuilder.loadTexts: setMailUsern.setDescription('User-Name')
setMailPassw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPassw.setStatus('current')
if mibBuilder.loadTexts: setMailPassw.setDescription('Password')
setMailEmail = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailEmail.setStatus('current')
if mibBuilder.loadTexts: setMailEmail.setDescription('E-Mail-Sender')
setMailSenda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSenda.setStatus('current')
if mibBuilder.loadTexts: setMailSenda.setDescription('Send-Again-(min.)')
setMailHoldt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailHoldt.setStatus('current')
if mibBuilder.loadTexts: setMailHoldt.setDescription('Hold-Time-(hrs.)')
setMailBuffe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailBuffe.setStatus('current')
if mibBuilder.loadTexts: setMailBuffe.setDescription('Buffers')
setPppo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31))
setPppoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoOpe.setStatus('current')
if mibBuilder.loadTexts: setPppoOpe.setDescription('Operating')
setPppoNamTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2), )
if mibBuilder.loadTexts: setPppoNamTable.setStatus('current')
if mibBuilder.loadTexts: setPppoNamTable.setDescription('Name-List')
setPppoNamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPppoNamPee"))
if mibBuilder.loadTexts: setPppoNamEntry.setStatus('current')
if mibBuilder.loadTexts: setPppoNamEntry.setDescription('entry in table')
setPppoNamPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamPee.setStatus('current')
if mibBuilder.loadTexts: setPppoNamPee.setDescription('Peer')
setPppoNamSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamSht.setStatus('current')
if mibBuilder.loadTexts: setPppoNamSht.setDescription('SH-Time')
setPppoNamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoNamMac.setStatus('current')
if mibBuilder.loadTexts: setPppoNamMac.setDescription('MAC-Address')
setPppoSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoSer.setStatus('current')
if mibBuilder.loadTexts: setPppoSer.setDescription('Service')
setPppoSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoSes.setStatus('current')
if mibBuilder.loadTexts: setPppoSes.setDescription('Session-Limit')
setPppoPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5), )
if mibBuilder.loadTexts: setPppoPorTable.setStatus('current')
if mibBuilder.loadTexts: setPppoPorTable.setDescription('Ports')
setPppoPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPppoPorPor"))
if mibBuilder.loadTexts: setPppoPorEntry.setStatus('current')
if mibBuilder.loadTexts: setPppoPorEntry.setDescription('entry in table')
setPppoPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPppoPorPor.setStatus('current')
if mibBuilder.loadTexts: setPppoPorPor.setDescription('Port')
setPppoPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoPorEna.setStatus('current')
if mibBuilder.loadTexts: setPppoPorEna.setDescription('Enable-PPPoE')
setVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32))
setVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanOpe.setStatus('current')
if mibBuilder.loadTexts: setVlanOpe.setDescription('Operating')
setVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1), )
if mibBuilder.loadTexts: setVlanNetTable.setStatus('current')
if mibBuilder.loadTexts: setVlanNetTable.setDescription('Networks')
setVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVlanNetNam"))
if mibBuilder.loadTexts: setVlanNetEntry.setStatus('current')
if mibBuilder.loadTexts: setVlanNetEntry.setDescription('entry in table')
setVlanNetNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetNam.setStatus('current')
if mibBuilder.loadTexts: setVlanNetNam.setDescription('Name')
setVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetVla.setStatus('current')
if mibBuilder.loadTexts: setVlanNetVla.setDescription('VLAN-ID')
setVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetPor.setStatus('current')
if mibBuilder.loadTexts: setVlanNetPor.setDescription('Ports')
setVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanTag.setStatus('current')
if mibBuilder.loadTexts: setVlanTag.setDescription('Tag-Value')
setVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2), )
if mibBuilder.loadTexts: setVlanPorTable.setStatus('current')
if mibBuilder.loadTexts: setVlanPorTable.setDescription('Port-Table')
setVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setVlanPorPort"))
if mibBuilder.loadTexts: setVlanPorEntry.setStatus('current')
if mibBuilder.loadTexts: setVlanPorEntry.setDescription('entry in table')
setVlanPorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVlanPorPort.setStatus('current')
if mibBuilder.loadTexts: setVlanPorPort.setDescription('Port')
setVlanPorTaggi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorTaggi.setStatus('current')
if mibBuilder.loadTexts: setVlanPorTaggi.setDescription('Tagging-Mode')
setVlanPorAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorAllow.setStatus('current')
if mibBuilder.loadTexts: setVlanPorAllow.setDescription('Allow-All-VLANs')
setVlanPorPortv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorPortv.setStatus('current')
if mibBuilder.loadTexts: setVlanPorPortv.setDescription('Port-VLAN-Id')
setPrin = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34))
setPrinPriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1), )
if mibBuilder.loadTexts: setPrinPriTable.setStatus('current')
if mibBuilder.loadTexts: setPrinPriTable.setDescription('Printer')
setPrinPriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPrinPriPri"))
if mibBuilder.loadTexts: setPrinPriEntry.setStatus('current')
if mibBuilder.loadTexts: setPrinPriEntry.setDescription('entry in table')
setPrinPriPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriPri.setStatus('current')
if mibBuilder.loadTexts: setPrinPriPri.setDescription('Printer')
setPrinPriRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriRaw.setStatus('current')
if mibBuilder.loadTexts: setPrinPriRaw.setDescription('RawIp-Port')
setPrinPriLpd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriLpd.setStatus('current')
if mibBuilder.loadTexts: setPrinPriLpd.setDescription('LPD-Port')
setPrinPriAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriAct.setStatus('current')
if mibBuilder.loadTexts: setPrinPriAct.setDescription('Activ')
setPrinPriBid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriBid.setStatus('current')
if mibBuilder.loadTexts: setPrinPriBid.setDescription('Bidirectional')
setPrinPriRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinPriRes.setStatus('current')
if mibBuilder.loadTexts: setPrinPriRes.setDescription('Reset-on-Open')
setPrinAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2), )
if mibBuilder.loadTexts: setPrinAccTable.setStatus('current')
if mibBuilder.loadTexts: setPrinAccTable.setDescription('Access-List')
setPrinAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPrinAccIpa"), (0, "LANCOM-1711-MIB", "setPrinAccIpn"), (0, "LANCOM-1711-MIB", "setPrinAccRtg"))
if mibBuilder.loadTexts: setPrinAccEntry.setStatus('current')
if mibBuilder.loadTexts: setPrinAccEntry.setDescription('entry in table')
setPrinAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccIpa.setStatus('current')
if mibBuilder.loadTexts: setPrinAccIpa.setDescription('IP-Address')
setPrinAccIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccIpn.setStatus('current')
if mibBuilder.loadTexts: setPrinAccIpn.setDescription('IP-Netmask')
setPrinAccRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPrinAccRtg.setStatus('current')
if mibBuilder.loadTexts: setPrinAccRtg.setDescription('Rtg-tag')
setCert = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39))
setCertSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1))
setCertSceSce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceSce.setStatus('current')
if mibBuilder.loadTexts: setCertSceSce.setDescription('SCEP-Operating')
setCertSceRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceRet.setStatus('current')
if mibBuilder.loadTexts: setCertSceRet.setDescription('Retry-After-Error-Interval')
setCertSceChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceChe.setStatus('current')
if mibBuilder.loadTexts: setCertSceChe.setDescription('Check-Pending-Requests-Interval')
setCertSceDev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceDev.setStatus('current')
if mibBuilder.loadTexts: setCertSceDev.setDescription('Device-Certificate-Update-Before')
setCertSceCac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCac.setStatus('current')
if mibBuilder.loadTexts: setCertSceCac.setDescription('CA-Certificate-Update-Before')
setCertSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6), )
if mibBuilder.loadTexts: setCertSceCasTable.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasTable.setDescription('CAs')
setCertSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCertSceCasName"))
if mibBuilder.loadTexts: setCertSceCasEntry.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasEntry.setDescription('entry in table')
setCertSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasName.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasName.setDescription('Name')
setCertSceCasUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasUrl.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasUrl.setDescription('URL')
setCertSceCasDn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasDn.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasDn.setDescription('DN')
setCertSceCasEncalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("des", 0), ("e3des", 1), ("blowfish", 2), ("aes128", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasEncalg.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasEncalg.setDescription('Enc-Alg')
setCertSceCasIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasIdentifier.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasIdentifier.setDescription('Identifier')
setCertSceCasRaautoapprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasRaautoapprove.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasRaautoapprove.setDescription('RA-Autoapprove')
setCertSceCasCasignaturealg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCasignaturealg.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasCasignaturealg.setDescription('CA-Signature-Algorithm')
setCertSceCasCafingerprinta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sha1", 1), ("md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCafingerprinta.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasCafingerprinta.setDescription('CA-Fingerprint-Algorithm')
setCertSceCasCafingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasCafingerprint.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasCafingerprint.setDescription('CA-Fingerprint')
setCertSceCasApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 0))).clone(namedValues=NamedValues(("general", 2), ("vpn", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasApplication.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasApplication.setDescription('Application')
setCertSceCasLoopbackaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCasLoopbackaddr.setStatus('current')
if mibBuilder.loadTexts: setCertSceCasLoopbackaddr.setDescription('Loopback-Addr.')
setCertSceCerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7), )
if mibBuilder.loadTexts: setCertSceCerTable.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerTable.setDescription('Certificates')
setCertSceCerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCertSceCerName"))
if mibBuilder.loadTexts: setCertSceCerEntry.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerEntry.setDescription('entry in table')
setCertSceCerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerName.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerName.setDescription('Name')
setCertSceCerCadn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerCadn.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerCadn.setDescription('CADN')
setCertSceCerSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerSubject.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerSubject.setDescription('Subject')
setCertSceCerChalleng = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerChalleng.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerChalleng.setDescription('ChallengePwd')
setCertSceCerSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerSubjecta.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerSubjecta.setDescription('SubjectAltName')
setCertSceCerKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerKeyusage.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerKeyusage.setDescription('KeyUsage')
setCertSceCerExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerExtended.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerExtended.setDescription('Extended-KeyUsage')
setCertSceCerDevicece = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerDevicece.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerDevicece.setDescription('Device-Certificate-Keylength')
setCertSceCerApplicat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("vpn", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCerApplicat.setStatus('current')
if mibBuilder.loadTexts: setCertSceCerApplicat.setDescription('Application')
setCertSceRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceRei.setStatus('current')
if mibBuilder.loadTexts: setCertSceRei.setDescription('Reinit')
setCertSceUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceUpd.setStatus('current')
if mibBuilder.loadTexts: setCertSceUpd.setDescription('Update')
setCertSceCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertSceCle.setStatus('current')
if mibBuilder.loadTexts: setCertSceCle.setDescription('Clear-SCEP-Filesystem')
setCertCrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3))
setCertCrlCrl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlCrl.setStatus('current')
if mibBuilder.loadTexts: setCertCrlCrl.setDescription('CRL-Operating')
setCertCrlAlt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlAlt.setStatus('current')
if mibBuilder.loadTexts: setCertCrlAlt.setDescription('Alternative-URL')
setCertCrlUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("fallback", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlUse.setStatus('current')
if mibBuilder.loadTexts: setCertCrlUse.setDescription('Use-Alternative-URL')
setCertCrlUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlUpd.setStatus('current')
if mibBuilder.loadTexts: setCertCrlUpd.setDescription('Update-Before')
setCertCrlPre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlPre.setStatus('current')
if mibBuilder.loadTexts: setCertCrlPre.setDescription('Prefetch-Period')
setCertCrlVal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlVal.setStatus('current')
if mibBuilder.loadTexts: setCertCrlVal.setDescription('Validity-Exceedance')
setCertCrlRef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertCrlRef.setStatus('current')
if mibBuilder.loadTexts: setCertCrlRef.setDescription('Refresh-CRL-Now')
setComp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52))
setCompDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1), )
if mibBuilder.loadTexts: setCompDevTable.setStatus('current')
if mibBuilder.loadTexts: setCompDevTable.setDescription('Devices')
setCompDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompDevDev"))
if mibBuilder.loadTexts: setCompDevEntry.setStatus('current')
if mibBuilder.loadTexts: setCompDevEntry.setDescription('entry in table')
setCompDevDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompDevDev.setStatus('current')
if mibBuilder.loadTexts: setCompDevDev.setDescription('Device-Type')
setCompDevSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wan", 1), ("com-port-server", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompDevSer.setStatus('current')
if mibBuilder.loadTexts: setCompDevSer.setDescription('Service')
setCompWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3))
setCompWanDevTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1), )
if mibBuilder.loadTexts: setCompWanDevTable.setStatus('current')
if mibBuilder.loadTexts: setCompWanDevTable.setDescription('Devices')
setCompWanDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompWanDevDev"))
if mibBuilder.loadTexts: setCompWanDevEntry.setStatus('current')
if mibBuilder.loadTexts: setCompWanDevEntry.setDescription('entry in table')
setCompWanDevDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 17, 26, 39, 30, 31, 23, 33, 34, 35))).clone(namedValues=NamedValues(("outband-modem", 2), ("option-icon", 17), ("novatel-merlin-mc950d", 26), ("sierra-compass-885", 39), ("sierra-aircard-875u", 30), ("huawei-e172-e220-e870", 31), ("e4g-systems-uxs1", 23), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompWanDevDev.setStatus('current')
if mibBuilder.loadTexts: setCompWanDevDev.setDescription('Device-Type')
setCompWanDevOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompWanDevOpe.setStatus('current')
if mibBuilder.loadTexts: setCompWanDevOpe.setDescription('Operating')
setCompCom = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2))
setCompComOpeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1), )
if mibBuilder.loadTexts: setCompComOpeTable.setStatus('current')
if mibBuilder.loadTexts: setCompComOpeTable.setDescription('Operational')
setCompComOpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComOpeDev"), (0, "LANCOM-1711-MIB", "setCompComOpePor"))
if mibBuilder.loadTexts: setCompComOpeEntry.setStatus('current')
if mibBuilder.loadTexts: setCompComOpeEntry.setDescription('entry in table')
setCompComOpeDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpeDev.setStatus('current')
if mibBuilder.loadTexts: setCompComOpeDev.setDescription('Device-Type')
setCompComOpePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpePor.setStatus('current')
if mibBuilder.loadTexts: setCompComOpePor.setDescription('Port-Number')
setCompComOpeOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComOpeOpe.setStatus('current')
if mibBuilder.loadTexts: setCompComOpeOpe.setDescription('Operating')
setCompComComTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2), )
if mibBuilder.loadTexts: setCompComComTable.setStatus('current')
if mibBuilder.loadTexts: setCompComComTable.setDescription('COM-Port-Settings')
setCompComComEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComComDevice"), (0, "LANCOM-1711-MIB", "setCompComComPortnu"))
if mibBuilder.loadTexts: setCompComComEntry.setStatus('current')
if mibBuilder.loadTexts: setCompComComEntry.setDescription('entry in table')
setCompComComDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComDevice.setStatus('current')
if mibBuilder.loadTexts: setCompComComDevice.setDescription('Device-Type')
setCompComComPortnu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComPortnu.setStatus('current')
if mibBuilder.loadTexts: setCompComComPortnu.setDescription('Port-Number')
setCompComComBitrat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 125000, 230400))).clone(namedValues=NamedValues(("e110", 110), ("e300", 300), ("e600", 600), ("e1200", 1200), ("e2400", 2400), ("e4800", 4800), ("e9600", 9600), ("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200), ("e125000", 125000), ("e230400", 230400)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComBitrat.setStatus('current')
if mibBuilder.loadTexts: setCompComComBitrat.setDescription('Bit-Rate')
setCompComComDatabi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("e7", 7), ("e8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComDatabi.setStatus('current')
if mibBuilder.loadTexts: setCompComComDatabi.setDescription('Data-Bits')
setCompComComParity = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComParity.setStatus('current')
if mibBuilder.loadTexts: setCompComComParity.setDescription('Parity')
setCompComComStopbi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1", 1), ("e2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComStopbi.setStatus('current')
if mibBuilder.loadTexts: setCompComComStopbi.setDescription('Stop-Bits')
setCompComComHandsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rts-cts", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComHandsh.setStatus('current')
if mibBuilder.loadTexts: setCompComComHandsh.setDescription('Handshake')
setCompComComReadyc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dtr", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComReadyc.setStatus('current')
if mibBuilder.loadTexts: setCompComComReadyc.setDescription('Ready-Condition')
setCompComComReadyd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComComReadyd.setStatus('current')
if mibBuilder.loadTexts: setCompComComReadyd.setDescription('Ready-Data-Timeout')
setCompComNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3), )
if mibBuilder.loadTexts: setCompComNetTable.setStatus('current')
if mibBuilder.loadTexts: setCompComNetTable.setDescription('Network-Settings')
setCompComNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setCompComNetDevicety"), (0, "LANCOM-1711-MIB", "setCompComNetPortnumb"))
if mibBuilder.loadTexts: setCompComNetEntry.setStatus('current')
if mibBuilder.loadTexts: setCompComNetEntry.setDescription('entry in table')
setCompComNetDevicety = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 34, 35))).clone(namedValues=NamedValues(("outband", 1), ("belkin-f5u103", 33), ("prolific-2303", 34), ("ftdi-8u232am", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetDevicety.setStatus('current')
if mibBuilder.loadTexts: setCompComNetDevicety.setDescription('Device-Type')
setCompComNetPortnumb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetPortnumb.setStatus('current')
if mibBuilder.loadTexts: setCompComNetPortnumb.setDescription('Port-Number')
setCompComNetTcpmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("server", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetTcpmode.setStatus('current')
if mibBuilder.loadTexts: setCompComNetTcpmode.setDescription('TCP-Mode')
setCompComNetListenpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetListenpo.setStatus('current')
if mibBuilder.loadTexts: setCompComNetListenpo.setDescription('Listen-Port')
setCompComNetConnecth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetConnecth.setStatus('current')
if mibBuilder.loadTexts: setCompComNetConnecth.setDescription('Connect-Hostname')
setCompComNetConnectp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetConnectp.setStatus('current')
if mibBuilder.loadTexts: setCompComNetConnectp.setDescription('Connect-Port')
setCompComNetLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetLoopback.setStatus('current')
if mibBuilder.loadTexts: setCompComNetLoopback.setDescription('Loopback-Addr.')
setCompComNetRfc2217e = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetRfc2217e.setStatus('current')
if mibBuilder.loadTexts: setCompComNetRfc2217e.setDescription('RFC2217-Extensions')
setCompComNetNewlinec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crlf", 0), ("cr", 1), ("lf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCompComNetNewlinec.setStatus('current')
if mibBuilder.loadTexts: setCompComNetNewlinec.setDescription('Newline-Conversion')
setTaca = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54))
setTacaAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAuthentication.setStatus('current')
if mibBuilder.loadTexts: setTacaAuthentication.setDescription('Authentication')
setTacaAuthorisation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAuthorisation.setStatus('current')
if mibBuilder.loadTexts: setTacaAuthorisation.setDescription('Authorisation')
setTacaAccounting = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaAccounting.setStatus('current')
if mibBuilder.loadTexts: setTacaAccounting.setDescription('Accounting')
setTacaServerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9), )
if mibBuilder.loadTexts: setTacaServerTable.setStatus('current')
if mibBuilder.loadTexts: setTacaServerTable.setDescription('Server')
setTacaServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setTacaServerSer"))
if mibBuilder.loadTexts: setTacaServerEntry.setStatus('current')
if mibBuilder.loadTexts: setTacaServerEntry.setDescription('entry in table')
setTacaServerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerSer.setStatus('current')
if mibBuilder.loadTexts: setTacaServerSer.setDescription('Server-Address')
setTacaServerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerLoo.setStatus('current')
if mibBuilder.loadTexts: setTacaServerLoo.setDescription('Loopback-Address')
setTacaServerCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaServerCom.setStatus('current')
if mibBuilder.loadTexts: setTacaServerCom.setDescription('Compatibility Mode')
setTacaSharedsecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSharedsecret.setStatus('current')
if mibBuilder.loadTexts: setTacaSharedsecret.setDescription('Shared-Secret')
setTacaEncryption = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaEncryption.setStatus('current')
if mibBuilder.loadTexts: setTacaEncryption.setDescription('Encryption')
setTacaFallbacktolocalus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("allowed", 0), ("prohibited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaFallbacktolocalus.setStatus('current')
if mibBuilder.loadTexts: setTacaFallbacktolocalus.setDescription('Fallback-to-local-users')
setTacaSnmpgetrequestsau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("only-for-setup-tree", 0), ("all", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSnmpgetrequestsau.setStatus('current')
if mibBuilder.loadTexts: setTacaSnmpgetrequestsau.setDescription('SNMP-GET-Requests-Authorisation')
setTacaSnmpgetrequestsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("only-for-setup-tree", 0), ("all", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTacaSnmpgetrequestsac.setStatus('current')
if mibBuilder.loadTexts: setTacaSnmpgetrequestsac.setDescription('SNMP-GET-Requests-Accounting')
setPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36))
setPerfRttmonaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2), )
if mibBuilder.loadTexts: setPerfRttmonaTable.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaTable.setDescription('RttMonAdmin')
setPerfRttmonaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmonaInd"))
if mibBuilder.loadTexts: setPerfRttmonaEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaEntry.setDescription('entry in table')
setPerfRttmonaInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaInd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaInd.setDescription('Index')
setPerfRttmonaTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("jitter", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaTyp.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaTyp.setDescription('Type')
setPerfRttmonaFre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaFre.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaFre.setDescription('Frequency')
setPerfRttmonaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaTim.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaTim.setDescription('Timeout')
setPerfRttmonaSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("not-in-service", 2), ("not-ready", 3), ("create", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonaSta.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonaSta.setDescription('Status')
setPerfRttmoneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3), )
if mibBuilder.loadTexts: setPerfRttmoneTable.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneTable.setDescription('RttMonEchoAdmin')
setPerfRttmoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmoneIndex"))
if mibBuilder.loadTexts: setPerfRttmoneEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneEntry.setDescription('entry in table')
setPerfRttmoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmoneIndex.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneIndex.setDescription('Index')
setPerfRttmoneProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("echo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneProtocol.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneProtocol.setDescription('Protocol')
setPerfRttmoneDestinationa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneDestinationa.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneDestinationa.setDescription('Destination-Address')
setPerfRttmonePacketsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonePacketsize.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonePacketsize.setDescription('Packet-Size')
setPerfRttmoneDestinationp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneDestinationp.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneDestinationp.setDescription('Destination-Port')
setPerfRttmoneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmoneInterval.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmoneInterval.setDescription('Interval')
setPerfRttmonePacketcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfRttmonePacketcount.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonePacketcount.setDescription('Packet-Count')
setPerfRttmonsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4), )
if mibBuilder.loadTexts: setPerfRttmonsTable.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsTable.setDescription('RttMonStatistics')
setPerfRttmonsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setPerfRttmonsIndex"))
if mibBuilder.loadTexts: setPerfRttmonsEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsEntry.setDescription('entry in table')
setPerfRttmonsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsIndex.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsIndex.setDescription('Index')
setPerfRttmonsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsCompletions.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsCompletions.setDescription('Completions')
setPerfRttmonsRttcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttcount.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsRttcount.setDescription('RTT-Count')
setPerfRttmonsRttsum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttsum.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsRttsum.setDescription('RTT-Sum')
setPerfRttmonsRttmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttmin.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsRttmin.setDescription('RTT-Min')
setPerfRttmonsRttmax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsRttmax.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsRttmax.setDescription('RTT-Max')
setPerfRttmonsJitterminpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJitterminpossd.setDescription('Jitter-Min-Pos-SD')
setPerfRttmonsJittermaxpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittermaxpossd.setDescription('Jitter-Max-Pos-SD')
setPerfRttmonsJittercountposs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountposs.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittercountposs.setDescription('Jitter-Count-Pos-SD')
setPerfRttmonsJittersumpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittersumpossd.setDescription('Jitter-Sum-Pos-SD')
setPerfRttmonsJitterminposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminposds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJitterminposds.setDescription('Jitter-Min-Pos-DS')
setPerfRttmonsJittermaxposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxposds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittermaxposds.setDescription('Jitter-Max-Pos-DS')
setPerfRttmonsJittercountposd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountposd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittercountposd.setDescription('Jitter-Count-Pos-DS')
setPerfRttmonsJittersumposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumposds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittersumposds.setDescription('Jitter-Sum-Pos-DS')
setPerfRttmonsJitterminnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegsd.setDescription('Jitter-Min-Neg-SD')
setPerfRttmonsJittermaxnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegsd.setDescription('Jitter-Max-Neg-SD')
setPerfRttmonsJittercountnegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegs.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegs.setDescription('Jitter-Count-Neg-SD')
setPerfRttmonsJittersumnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegsd.setDescription('Jitter-Sum-Neg-SD')
setPerfRttmonsJitterminnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJitterminnegds.setDescription('Jitter-Min-Neg-DS')
setPerfRttmonsJittermaxnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittermaxnegds.setDescription('Jitter-Max-Neg-DS')
setPerfRttmonsJittercountnegd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittercountnegd.setDescription('Jitter-Count-Neg-DS')
setPerfRttmonsJittersumnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsJittersumnegds.setDescription('Jitter-Sum-Neg-DS')
setPerfRttmonsPacketlosssd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsPacketlosssd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsPacketlosssd.setDescription('Packet-Loss-SD')
setPerfRttmonsPacketlossds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsPacketlossds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsPacketlossds.setDescription('Packet-Loss-DS')
setPerfRttmonsAveragejitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejitter.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsAveragejitter.setDescription('Average-Jitter')
setPerfRttmonsAveragejittersd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejittersd.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsAveragejittersd.setDescription('Average-Jitter-SD')
setPerfRttmonsAveragejitterds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfRttmonsAveragejitterds.setStatus('current')
if mibBuilder.loadTexts: setPerfRttmonsAveragejitterds.setDescription('Average-Jitter-DS')
setEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35))
setEchoOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoOpe.setStatus('current')
if mibBuilder.loadTexts: setEchoOpe.setDescription('Operating')
setEchoAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2), )
if mibBuilder.loadTexts: setEchoAccTable.setStatus('current')
if mibBuilder.loadTexts: setEchoAccTable.setDescription('Access-Table')
setEchoAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "setEchoAccIpa"), (0, "LANCOM-1711-MIB", "setEchoAccNet"))
if mibBuilder.loadTexts: setEchoAccEntry.setStatus('current')
if mibBuilder.loadTexts: setEchoAccEntry.setDescription('entry in table')
setEchoAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccIpa.setStatus('current')
if mibBuilder.loadTexts: setEchoAccIpa.setDescription('IP-Address')
setEchoAccNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccNet.setStatus('current')
if mibBuilder.loadTexts: setEchoAccNet.setDescription('Netmask')
setEchoAccPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("tcp", 1), ("udp", 2), ("tcp-plus-udp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccPro.setStatus('current')
if mibBuilder.loadTexts: setEchoAccPro.setDescription('Protokoll')
setEchoAccAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccAct.setStatus('current')
if mibBuilder.loadTexts: setEchoAccAct.setDescription('Active')
setEchoAccCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoAccCom.setStatus('current')
if mibBuilder.loadTexts: setEchoAccCom.setDescription('Comment')
setEchoTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchoTcp.setStatus('current')
if mibBuilder.loadTexts: setEchoTcp.setDescription('TCP-Timeout')
firVerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1), )
if mibBuilder.loadTexts: firVerTable.setStatus('current')
if mibBuilder.loadTexts: firVerTable.setDescription('Version-Table')
firVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "firVerIfc"))
if mibBuilder.loadTexts: firVerEntry.setStatus('current')
if mibBuilder.loadTexts: firVerEntry.setDescription('entry in table')
firVerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ifc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerIfc.setStatus('current')
if mibBuilder.loadTexts: firVerIfc.setDescription('Ifc')
firVerMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerMod.setStatus('current')
if mibBuilder.loadTexts: firVerMod.setDescription('Module')
firVerVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerVer.setStatus('current')
if mibBuilder.loadTexts: firVerVer.setDescription('Version')
firVerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerSer.setStatus('current')
if mibBuilder.loadTexts: firVerSer.setDescription('Serial-number')
firTabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2), )
if mibBuilder.loadTexts: firTabTable.setStatus('current')
if mibBuilder.loadTexts: firTabTable.setDescription('Table-Firmsafe')
firTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1), ).setIndexNames((0, "LANCOM-1711-MIB", "firTabPos"))
if mibBuilder.loadTexts: firTabEntry.setStatus('current')
if mibBuilder.loadTexts: firTabEntry.setDescription('entry in table')
firTabPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabPos.setStatus('current')
if mibBuilder.loadTexts: firTabPos.setDescription('Position')
firTabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, 5, 4))).clone(namedValues=NamedValues(("loader", 2), ("active", 1), ("inactive", 0), ("minimal-plus-active", 5), ("minimal-plus-inactive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTabSta.setStatus('current')
if mibBuilder.loadTexts: firTabSta.setDescription('Status')
firTabVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabVer.setStatus('current')
if mibBuilder.loadTexts: firTabVer.setDescription('Version')
firTabDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabDat.setStatus('current')
if mibBuilder.loadTexts: firTabDat.setDescription('Date')
firTabSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabSiz.setStatus('current')
if mibBuilder.loadTexts: firTabSiz.setDescription('Size')
firTabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabInd.setStatus('current')
if mibBuilder.loadTexts: firTabInd.setDescription('Index')
firMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("immediate", 0), ("login", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firMod.setStatus('current')
if mibBuilder.loadTexts: firMod.setDescription('Mode-Firmsafe')
firTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTim.setStatus('current')
if mibBuilder.loadTexts: firTim.setDescription('Timeout-Firmsafe')
firFea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firFea.setStatus('current')
if mibBuilder.loadTexts: firFea.setDescription('Feature-Word')
othMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1))
othManCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManCon.setStatus('current')
if mibBuilder.loadTexts: othManCon.setDescription('Connect')
othManDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManDis.setStatus('current')
if mibBuilder.loadTexts: othManDis.setDescription('Disconnect')
othBoo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othBoo.setStatus('current')
if mibBuilder.loadTexts: othBoo.setDescription('Boot-System')
othCol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othCol.setStatus('current')
if mibBuilder.loadTexts: othCol.setDescription('Cold-Boot')
trapgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0))
trpStatChan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staWanConnectio"), ("LANCOM-1711-MIB", "staChanState"), ("LANCOM-1711-MIB", "staChanApp"), ("LANCOM-1711-MIB", "staChanMode"), ("LANCOM-1711-MIB", "staChanCause"), ("LANCOM-1711-MIB", "staChanNumbe"), ("LANCOM-1711-MIB", "staChanSubad"), ("LANCOM-1711-MIB", "staChanCharg"), ("LANCOM-1711-MIB", "staChanExtra"), ("LANCOM-1711-MIB", "staChanConnt"), ("LANCOM-1711-MIB", "staChanConns"), ("LANCOM-1711-MIB", "staChanIsdnd"), ("LANCOM-1711-MIB", "staChanPhcha"), ("LANCOM-1711-MIB", "staChanPptpc"), ("LANCOM-1711-MIB", "staChanVpnco"))
if mibBuilder.loadTexts: trpStatChan.setStatus('current')
if mibBuilder.loadTexts: trpStatChan.setDescription('StatChan')
trpFwUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpFwUplStart.setStatus('current')
if mibBuilder.loadTexts: trpFwUplStart.setDescription('FwUplStart')
trpUplSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplSucc.setStatus('current')
if mibBuilder.loadTexts: trpUplSucc.setDescription('UplSucc')
trpUplFailTo = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailTo.setStatus('current')
if mibBuilder.loadTexts: trpUplFailTo.setDescription('UplFailTo')
trpUplFailIncl = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailIncl.setStatus('current')
if mibBuilder.loadTexts: trpUplFailIncl.setDescription('UplFailIncl')
trpUplFailBadDev = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailBadDev.setStatus('current')
if mibBuilder.loadTexts: trpUplFailBadDev.setDescription('UplFailBadDev')
trpLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpLogin.setStatus('current')
if mibBuilder.loadTexts: trpLogin.setDescription('Login')
trpLogout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpLogout.setStatus('current')
if mibBuilder.loadTexts: trpLogout.setDescription('Logout')
trpCnfUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfUplStart.setStatus('current')
if mibBuilder.loadTexts: trpCnfUplStart.setDescription('CnfUplStart')
trpCnfDnlStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfDnlStart.setStatus('current')
if mibBuilder.loadTexts: trpCnfDnlStart.setDescription('CnfDnlStart')
trpCnfDnlSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"), ("LANCOM-1711-MIB", "staConfEventlogInfo1"), ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
if mibBuilder.loadTexts: trpCnfDnlSucc.setStatus('current')
if mibBuilder.loadTexts: trpCnfDnlSucc.setDescription('CnfDnlSucc')
trpIpFwFlt = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproLogtablSyst"), ("LANCOM-1711-MIB", "staIproLogtablSrca"), ("LANCOM-1711-MIB", "staIproLogtablDsta"), ("LANCOM-1711-MIB", "staIproLogtablProt"), ("LANCOM-1711-MIB", "staIproLogtablSrcp"), ("LANCOM-1711-MIB", "staIproLogtablDstp"), ("LANCOM-1711-MIB", "staIproLogtablFilt"), ("LANCOM-1711-MIB", "staIproLogtablLimi"), ("LANCOM-1711-MIB", "staIproLogtablThre"), ("LANCOM-1711-MIB", "staIproLogtablActi"))
if mibBuilder.loadTexts: trpIpFwFlt.setStatus('current')
if mibBuilder.loadTexts: trpIpFwFlt.setDescription('IpFwFlt')
trpVPNConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 27)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staVpnTunnel"), ("LANCOM-1711-MIB", "staVpnConnectPeer"), ("LANCOM-1711-MIB", "staVpnConnectState"), ("LANCOM-1711-MIB", "staVpnConnectLaster"), ("LANCOM-1711-MIB", "staVpnConnectMode"), ("LANCOM-1711-MIB", "staVpnConnectShtime"), ("LANCOM-1711-MIB", "staVpnConnectPhysco"), ("LANCOM-1711-MIB", "staVpnConnectB1dt"), ("LANCOM-1711-MIB", "staVpnConnectRemote"), ("LANCOM-1711-MIB", "staVpnConnectNatdet"), ("LANCOM-1711-MIB", "staVpnConnectCrypta"), ("LANCOM-1711-MIB", "staVpnConnectCryptl"), ("LANCOM-1711-MIB", "staVpnConnectHashal"), ("LANCOM-1711-MIB", "staVpnConnectHashle"), ("LANCOM-1711-MIB", "staVpnConnectHmacal"), ("LANCOM-1711-MIB", "staVpnConnectHmacle"), ("LANCOM-1711-MIB", "staVpnConnectCompra"), ("LANCOM-1711-MIB", "staVpnConnectClient"))
if mibBuilder.loadTexts: trpVPNConn.setStatus('current')
if mibBuilder.loadTexts: trpVPNConn.setDescription('VPNConn')
trpPptpConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staPptpTun"), ("LANCOM-1711-MIB", "staPptpConChann"), ("LANCOM-1711-MIB", "staPptpConState"), ("LANCOM-1711-MIB", "staPptpConMode"), ("LANCOM-1711-MIB", "staPptpConShtim"), ("LANCOM-1711-MIB", "staPptpConPhysc"), ("LANCOM-1711-MIB", "staPptpConPeera"), ("LANCOM-1711-MIB", "staPptpConIpadd"), ("LANCOM-1711-MIB", "staPptpConDnsde"), ("LANCOM-1711-MIB", "staPptpConNbnsd"), ("LANCOM-1711-MIB", "staPptpConLaste"), ("LANCOM-1711-MIB", "staPptpConDnsba"), ("LANCOM-1711-MIB", "staPptpConNbnsb"))
if mibBuilder.loadTexts: trpPptpConn.setStatus('current')
if mibBuilder.loadTexts: trpPptpConn.setDescription('PptpConn')
trpErrLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staConfEventlogSyste"), ("LANCOM-1711-MIB", "staConfEventlogEvent"), ("LANCOM-1711-MIB", "staConfEventlogAcces"), ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
if mibBuilder.loadTexts: trpErrLogin.setStatus('current')
if mibBuilder.loadTexts: trpErrLogin.setDescription('ErrLogin')
trpLdblConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 38)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproLoadbalConPee"), ("LANCOM-1711-MIB", "staIproLoadbalConBun"), ("LANCOM-1711-MIB", "staIproLoadbalConSta"))
if mibBuilder.loadTexts: trpLdblConn.setStatus('current')
if mibBuilder.loadTexts: trpLdblConn.setDescription('LdblConn')
trpPPPoESConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 39)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staPppoNum"), ("LANCOM-1711-MIB", "staPppoConCha"), ("LANCOM-1711-MIB", "staPppoConMac"), ("LANCOM-1711-MIB", "staPppoConSta"), ("LANCOM-1711-MIB", "staPppoConLas"), ("LANCOM-1711-MIB", "staPppoConSht"), ("LANCOM-1711-MIB", "staPppoConPee"))
if mibBuilder.loadTexts: trpPPPoESConn.setStatus('current')
if mibBuilder.loadTexts: trpPPPoESConn.setDescription('PPPoESConn')
trpVrrp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 41)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staIproVrrpEveSys"), ("LANCOM-1711-MIB", "staIproVrrpEveSrc"), ("LANCOM-1711-MIB", "staIproVrrpEveVri"), ("LANCOM-1711-MIB", "staIproVrrpEveEve"), ("LANCOM-1711-MIB", "staIproVrrpEveInf"))
if mibBuilder.loadTexts: trpVrrp.setStatus('current')
if mibBuilder.loadTexts: trpVrrp.setDescription('Vrrp')
trpHTTP_Tunnel_Open = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2000)).setLabel("trpHTTP-Tunnel-Open").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"), ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotea"), ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotep"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalho"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalpo"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIdletim"), ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalrt"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setStatus('current')
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setDescription('HTTP-Tunnel-Open')
trpHTTP_Tunnel_Close = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2001)).setLabel("trpHTTP-Tunnel-Close").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"), ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setStatus('current')
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setDescription('HTTP-Tunnel-Close')
trpLAN_Overtemp_Throttle = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5002)).setLabel("trpLAN-Overtemp-Throttle").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle.setStatus('current')
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle.setDescription('LAN-Overtemp-Throttle')
trpLAN_Overtemp_Throttle_End = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5003)).setLabel("trpLAN-Overtemp-Throttle-End").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_End.setStatus('current')
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_End.setDescription('LAN-Overtemp-Throttle-End')
trpLAN_Overtemp_Throttle_Recommend = NotificationType((1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5004)).setLabel("trpLAN-Overtemp-Throttle-Recommend").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-1711-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_Recommend.setStatus('current')
if mibBuilder.loadTexts: trpLAN_Overtemp_Throttle_Recommend.setDescription('LAN-Overtemp-Throttle-Recommend')
mibBuilder.exportSymbols("LANCOM-1711-MIB", staPppLcpRxerrors=staPppLcpRxerrors, staPppIpcRxterminater=staPppIpcRxterminater, setLancPriIfc=setLancPriIfc, staEtheCabletest=staEtheCabletest, setWanBackuppEntry=setWanBackuppEntry, setDhcpNetEndaddress=setDhcpNetEndaddress, staModeNetworklistNum=staModeNetworklistNum, setIproFirSteal=setIproFirSteal, staInfoB1d=staInfoB1d, setIproFir=setIproFir, staLanLanq=staLanLanq, staTcpiNetwIpa=staTcpiNetwIpa, staPppChaRxdis=staPppChaRxdis, staDhcpWanIpnet=staDhcpWanIpnet, staIproVrrpTx=staIproVrrpTx, setVpnMainmodeike=setVpnMainmodeike, staChanExtra=staChanExtra, setNetbGroEntry=setNetbGroEntry, setLcr=setLcr, staIproPortbloDstp=staIproPortbloDstp, setTcpiAliveBootty=setTcpiAliveBootty, setEchoAccAct=setEchoAccAct, staAccoAccConnt=staAccoAccConnt, setHttpDoc=setHttpDoc, staChar=staChar, staConfFeaturesExp=staConfFeaturesExp, setCertSceCerCadn=setCertSceCerCadn, staIproVrrpRx=staIproVrrpRx, staIproVrrpVirMas=staIproVrrpVirMas, staConnPass=staConnPass, staWanMtuPee=staWanMtuPee, staIsdnSigManErrJ=staIsdnSigManErrJ, staFileConNam=staFileConNam, staCompComComportsInt=staCompComComportsInt, setIproFirRulesDes=setIproFirRulesDes, setDhcpAddNetwork=setDhcpAddNetwork, setCharTotalun=setCharTotalun, setEchoAccCom=setEchoAccCom, staMailDis=staMailDis, setInteDslDow=setInteDslDow, setIproFirFilteSst=setIproFirFilteSst, staIproPortbloTable=staIproPortbloTable, setIproRipWanDftr=setIproRipWanDftr, staPppIpcRxcodereject=staPppIpcRxcodereject, staIproRipResp=staIproRipResp, staPppTxoLcpAcc=staPppTxoLcpAcc, staConfLl2mServ=staConfLl2mServ, staVlanNetVla=staVlanNetVla, setAccoCurTotal=setAccoCurTotal, setAccoLasPeer=setAccoLasPeer, setVpnQuickmodepf=setVpnQuickmodepf, staTcpiRadiAuthenticLastreque=staTcpiRadiAuthenticLastreque, staCertSceRasEntry=staCertSceRasEntry, setWanActiontPeer=setWanActiontPeer, setSnmpIptrapsLoo=setSnmpIptrapsLoo, setConfAccesstTelnet=setConfAccesstTelnet, staDhcpWanIpadd=staDhcpWanIpadd, setCompWanDevOpe=setCompWanDevOpe, staIproServiceKbytesrx=staIproServiceKbytesrx, setTimeDstclInd=setTimeDstclInd, setLanc=setLanc, setNetbBroOsv=setNetbBroOsv, staCertSceCasStatus=staCertSceCasStatus, staTcpiSysl=staTcpiSysl, setIpro1nnTcpagings=setIpro1nnTcpagings, staModeSupplyvoltages=staModeSupplyvoltages, staEtheCabletestrRxd=staEtheCabletestrRxd, setConfFunctioMap=setConfFunctioMap, setVlanTag=setVlanTag, setDhcpAliImagef=setDhcpAliImagef, staPppoDel=staPppoDel, staPppTxoLcpPfc=staPppTxoLcpPfc, staPppBacTxcallbackres=staPppBacTxcallbackres, staTcpiDnsHitlTim=staTcpiDnsHitlTim, staWanBytetransCtx=staWanBytetransCtx, staIproVrrpEveIdx=staIproVrrpEveIdx, setCompComNetDevicety=setCompComNetDevicety, staIproRipWildTable=staIproRipWildTable, setLcrHolTable=setLcrHolTable, setVpnLayerIkep=setVpnLayerIkep, staIproActiproDis=staIproActiproDis, setCertCrl=setCertCrl, setTacaSnmpgetrequestsac=setTacaSnmpgetrequestsac, staIproRipFiltEntry=staIproRipFiltEntry, setSyslSerEntry=setSyslSerEntry, staPpp=staPpp, staTcpiDhcpDhcptHos=staTcpiDhcpDhcptHos, setCertSceCerName=setCertSceCerName, staQueuIpqueue=staQueuIpqueue, setIpro1nnIpsectablRemotes=setIpro1nnIpsectablRemotes, staCompComConnectiClientd=staCompComConnectiClientd, staIproRipEntr=staIproRipEntr, staEtheCabletestrTable=staEtheCabletestrTable, setConfAntitheEna=setConfAntitheEna, setTcpiAccesEntry=setTcpiAccesEntry, staIproVrrpEveSrc=staIproVrrpEveSrc, setWanRoundroRou=setWanRoundroRou, setIproFirAppliIrcMin=setIproFirAppliIrcMin, staDslBytEntry=staDslBytEntry, staPppTxoLcpCal=staPppTxoLcpCal, staVpnConnectHashle=staVpnConnectHashle, staConfScanresuState=staConfScanresuState, staTcpiNetwRtg=staTcpiNetwRtg, staAccoCurEntry=staAccoCurEntry, staTcpiNetbGrouplNet=staTcpiNetbGrouplNet, setInteMobileProTable=setInteMobileProTable, setVpnProposalsIpsecLifetimes=setVpnProposalsIpsecLifetimes, staCertSceCasIsssnm=staCertSceCasIsssnm, setCharTimetabEntry=setCharTimetabEntry, setIproDefEntry=setIproDefEntry, staPppLcpRxconfigrequ=staPppLcpRxconfigrequ, staPppBacTxlinkdropreq=staPppBacTxlinkdropreq, staPppBacTxstatusindic=staPppBacTxstatusindic, staCallSys=staCallSys, setAccoAccTxkby=setAccoAccTxkby, staDslBytTxb=staDslBytTxb, setDhcpPorEntry=setDhcpPorEntry, setDhcpDhcEth=setDhcpDhcEth, setTimeCalla=setTimeCalla, setVpnAdditionalgRemotegateway6=setVpnAdditionalgRemotegateway6, staDhcpWanIfc=staDhcpWanIfc, staIsdn=staIsdn, setIproFirFilteProt=setIproFirFilteProt, staPppTxoIpcDnsba=staPppTxoIpcDnsba, staModeNetwork=staModeNetwork, staIproRipDynwMasq=staIproRipDynwMasq, setWanPollingTry=setWanPollingTry, setVpnProposalsIkeIkecryptk=setVpnProposalsIkeIkecryptk, setPerfRttmonaSta=setPerfRttmonaSta, staCallTable=staCallTable, setTacaAccounting=setTacaAccounting, staTcpiDhcpNetwoNetworknam=staTcpiDhcpNetwoNetworknam, staChanState=staChanState, setCharTablebuSpa=setCharTablebuSpa, staVpnIpcompSrcad=staVpnIpcompSrcad, setVpnProposalsIpsecpIpsecproposal6=setVpnProposalsIpsecpIpsecproposal6, setDhcpNetAdaption=setDhcpNetAdaption, setVpnProposals=setVpnProposals, setInte=setInte, setCompComComDatabi=setCompComComDatabi, staPppCcpTxconfigrequ=staPppCcpTxconfigrequ, setLancAccIpa=setLancAccIpa, staTcpiNetbLantx=staTcpiNetbLantx, staCompComBytecounNetworkr=staCompComBytecounNetworkr, setConfWan=setConfWan, staPptp=staPptp, setIproSta=setIproSta, staIproVrrpVirVir=staIproVrrpVirVir, staTcpiTcpLantxr=staTcpiTcpLantxr, staDslDel=staDslDel, setNetbNetTable=setNetbNetTable, staModeHistorySig=staModeHistorySig, setNetbHosNam=setNetbHosNam, staEthePortsTable=staEthePortsTable, setCompComNetPortnumb=setCompComNetPortnumb, staIsdnSigManErrL=staIsdnSigManErrL, setVpnAggrmodepro=setVpnAggrmodepro, staTcpiArpLane=staTcpiArpLane, setCharSparedi=setCharSparedi, setWanRadiusClippa=setWanRadiusClippa, firTabVer=firTabVer, setPerfRttmonsJittercountposd=setPerfRttmonsJittercountposd, staTcpiNetbHostliEntry=staTcpiNetbHostliEntry, setInteModemResetco=setInteModemResetco, staTcpiTftpLanrxw=staTcpiTftpLanrxw, setIproFirFilteIdx=setIproFirFilteIdx, setTimeCurre=setTimeCurre, staTcpiNetbServerEntry=staTcpiNetbServerEntry, staTcpiNetbServerHos=staTcpiNetbServerHos, staPptpAck=staPptpAck, staVpnIpcompIdx=staVpnIpcompIdx, staWanActionsActTim=staWanActionsActTim, staDhcpLanDnsba=staDhcpLanDnsba, setDhcpHosEntry=setDhcpHosEntry, setVlanPorAllow=setVlanPorAllow, trapgrp=trapgrp, setHttpRolVariablesTit=setHttpRolVariablesTit, setConfUpdatec=setConfUpdatec, setCompWan=setCompWan, staPppTxoLcpEntry=staPppTxoLcpEntry, setVpnVpnpeersRemo=setVpnVpnpeersRemo, setHttpSsl=setHttpSsl, staIproRipIpriDis=staIproRipIpriDis, setHttpUse=setHttpUse, setVpnIsakmpTimRetrtimu=setVpnIsakmpTimRetrtimu, staCharSpareun=staCharSpareun, setNetbBroEntry=setNetbBroEntry, setDns=setDns, staConnErro=staConnErro, setConfSshauthMet=setConfSshauthMet, staPptpCal=staPptpCal, staTimeIsdDelet=staTimeIsdDelet, setConfTftpcliScriptfil=setConfTftpcliScriptfil, setWanRadiusClipop=setWanRadiusClipop, staPppCcpRxresetreque=staPppCcpRxresetreque, staIproActiproMas=staIproActiproMas, setLcrTimDay=setLcrTimDay, staIsdnSigLayLapEntry=staIsdnSigLayLapEntry, setAccoCurTxkby=setAccoCurTxkby, staCompComComportsHan=staCompComComportsHan, staCharTimetabSparemin=staCharTimetabSparemin, setIproNnnTable=setIproNnnTable, staPppCcpRxcodereject=staPppCcpRxcodereject, setWanPptppeeTable=setWanPptppeeTable, setWanIplistMasqi=setWanIplistMasqi, staPppRxoIpcIpadd=staPppRxoIpcIpadd, setHttpRolOperating=setHttpRolOperating, setTcpiNetwoInt=setTcpiNetwoInt, staSnmpEveVen=staSnmpEveVen, staVpnIkeKbyte=staVpnIkeKbyte, setConfUpdatecOperati=setConfUpdatecOperati, setMailSmtpp=setMailSmtpp, staTimeSet=staTimeSet, setWanRadiusLoopba=setWanRadiusLoopba, setWanDialuppB1d=setWanDialuppB1d, staConfLl2mServRxp=staConfLl2mServRxp, setIproFirFilteTable=setIproFirFilteTable, setNetbWan=setNetbWan, staPppBacRxlinkdropreq=staPppBacRxlinkdropreq, staVpnConnectPhysco=staVpnConnectPhysco, setVpnAllowremote=setVpnAllowremote, setCharTimetabBudgetmi=setCharTimetabBudgetmi, staCompDevBus=staCompDevBus, setTcpiArptaEntry=setTcpiArptaEntry, setCertSceCle=setCertSceCle, setTcpi=setTcpi, staPppRxoLcpIfc=staPppRxoLcpIfc, staPppMlDeletev=staPppMlDeletev, setConfAccesstHttp=setConfAccesstHttp, staWanThroughpuEntry=staWanThroughpuEntry, setCompComNetRfc2217e=setCompComNetRfc2217e, setDnsSubdEntry=setDnsSubdEntry, staTcpiNetbWantx=staTcpiNetbWantx, staConfEventlogAcces=staConfEventlogAcces, staPppDel=staPppDel, setIproIprRtg=setIproIprRtg, staLayeL2op=staLayeL2op, staCallCap=staCallCap, staLanByteRxbyte=staLanByteRxbyte, staIproRipDynlPois=staIproRipDynlPois, setVpnIsakmpTimExptim=setVpnIsakmpTimExptim, setInteModemmDat=setInteModemmDat, staTcpiDhcpDhcptTable=staTcpiDhcpDhcptTable, staPppo=staPppo, setWanDslbroaAcn=setWanDslbroaAcn, setTacaServerLoo=setTacaServerLoo, staPptpTxp=staPptpTxp, staDhcpWanEntry=staDhcpWanEntry, staPppBacRxerrors=staPppBacRxerrors, setIproFirPortbDstp=setIproFirPortbDstp, staTcpiRadiAuthenticAccesscha=staTcpiRadiAuthenticAccesscha, staDslErrMultip=staDslErrMultip, staIproRipDynlRipa=staIproRipDynlRipa, staPppLcpRxdiscarded=staPppLcpRxdiscarded)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staIproServiceKbytesre=staIproServiceKbytesre, setIproLoaOpe=setIproLoaOpe, setInteDslEntry=setInteDslEntry, setIproFirConneDstp=setIproFirConneDstp, setVpnProposalsIpsecpIpsecproposal7=setVpnProposalsIpsecpIpsecproposal7, staTcpiNetbBrowseOsv=staTcpiNetbBrowseOsv, staLayeEntry=staLayeEntry, staConf=staConf, setCertSceCasDn=setCertSceCasDn, setVpnAdditionalgRtgtag14=setVpnAdditionalgRtgtag14, setTaca=setTaca, staCertCrlCrlTable=staCertCrlCrlTable, setWanDialuppTable=setWanDialuppTable, setConfTftpcliBytesperh=setConfTftpcliBytesperh, staLanInteEntry=staLanInteEntry, setTcpiLoopbNam=setTcpiLoopbNam, staTimeIsdConne=staTimeIsdConne, setIproFirPortbDsta=setIproFirPortbDsta, setIproFirFilteSrcn=setIproFirFilteSrcn, staUsbRei=staUsbRei, setInteEthernEntry=setInteEthernEntry, setWanMtulistMtu=setWanMtulistMtu, setVpnIsakmpTimRetrtimm=setVpnIsakmpTimRetrtimm, staIsdnSigManDinCha=staIsdnSigManDinCha, staWanMtuTable=staWanMtuTable, setDnsDyndHos=setDnsDyndHos, trpHTTP_Tunnel_Open=trpHTTP_Tunnel_Open, setVpnAdditionalgRtgtag6=setVpnAdditionalgRtgtag6, setMailHoldt=setMailHoldt, staIproLogtablDsta=staIproLogtablDsta, staPppoConTable=staPppoConTable, staIproLogtablIdx=staIproLogtablIdx, staPppLcpTxechoreques=staPppLcpTxechoreques, setInteS0Prot=setInteS0Prot, staModeNetworklistMod=staModeNetworklistMod, setWanManuald=setWanManuald, setIproVrrVrrPri=setIproVrrVrrPri, staDslErrRxcrce=staDslErrRxcrce, staTcpiDhcpNetwoGatewayadd=staTcpiDhcpNetwoGatewayadd, setIpro1nnIpsectablLclo=setIpro1nnIpsectablLclo, staIproVrrpErr=staIproVrrpErr, setIproRipIprPor=setIproRipIprPor, setDnsSubdNet=setDnsSubdNet, setWanPppEntry=setWanPppEntry, staWanWanqueuee=staWanWanqueuee, setWanRoundroPee=setWanRoundroPee, setIproTagEntry=setIproTagEntry, setDnsDyndEntry=setDnsDyndEntry, setSnmp=setSnmp, setWanRouteriMsn=setWanRouteriMsn, staIproRipLansRipt=staIproRipLansRipt, setWanActiontCondi=setWanActiontCondi, setIproFirConneEntry=setIproFirConneEntry, staQueuArpqueu=staQueuArpqueu, staPptpConNbnsb=staPptpConNbnsb, staTcpiSyslLasSou=staTcpiSyslLasSou, setWanPppKey=setWanPppKey, setAccoAccPeer=setAccoAccPeer, staTcpiNetbDelete=staTcpiNetbDelete, staIproRipVrrpNet=staIproRipVrrpNet, setIproVrrAdv=setIproVrrAdv, staCharTimetabIfc=staCharTimetabIfc, staFileConTable=staFileConTable, setAccoLasEntry=setAccoLasEntry, staPppoRxp=staPppoRxp, setNtpRqaLoo=setNtpRqaLoo, setTcpiNonlo=setTcpiNonlo, setIproVrrVrrTable=setIproVrrVrrTable, setPerfRttmonaFre=setPerfRttmonaFre, setWanLayerEnca=setWanLayerEnca, staCharTimetabEntry=staCharTimetabEntry, setIproRouL2l=setIproRouL2l, setHttpSes=setHttpSes, staIproRipLansDftr=staIproRipLansDftr, staIproOpenporTable=staIproOpenporTable, staPptpDro=staPptpDro, setVpnAdditionalgEntry=setVpnAdditionalgEntry, setAccoSav=setAccoSav, setDhcpDhcIpa=setDhcpDhcIpa, setCertSceCasLoopbackaddr=setCertSceCasLoopbackaddr, staPppChaTxres=staPppChaTxres, setConfCrontabTable=setConfCrontabTable, staIproRipWansGate=staIproRipWansGate, staCertSceCertsStatus=staCertSceCertsStatus, staPptpConDnsde=staPptpConDnsde, staTcpiRadiAuthenticTable=staTcpiRadiAuthenticTable, setVpnProposalsIpsecLifetimek=setVpnProposalsIpsecLifetimek, setConfCrontabInde=setConfCrontabInde, setIpro=setIpro, setIproNnnSrcm=setIproNnnSrcm, staTcpiNetb=staTcpiNetb, setDhcpDhcNet=setDhcpDhcNet, staPppCcpCompressione=staPppCcpCompressione, staTcpiTftpLanrxo=staTcpiTftpLanrxo, staLayeLay1=staLayeLay1, setIpro1nnIpsectablRchi=setIpro1nnIpsectablRchi, staIproQosRxreq=staIproQosRxreq, setSnmpComment4=setSnmpComment4, staPppLcpDeletevalues=staPppLcpDeletevalues, setVpnVpnpeersPeer=setVpnVpnpeersPeer, setPerfRttmonaInd=setPerfRttmonaInd, setDnsFiltEntry=setDnsFiltEntry, staPppPapRxsuc=staPppPapRxsuc, staCompComConnectiClients=staCompComConnectiClients, staIproRipIpriVla=staIproRipIpriVla, setIproRipLanRtgt=setIproRipLanRtgt, staQueuDnstxqu=staQueuDnstxqu, staCertSceCertsIssuer=staCertSceCertsIssuer, setIpro1nnServicetaMappor=setIpro1nnServicetaMappor, staPppoNum=staPppoNum, trpLogin=trpLogin, staIproLoadbalConPpt=staIproLoadbalConPpt, staTcpiRadiAccountinLastrequest=staTcpiRadiAccountinLastrequest, setWanIplistPeer=setWanIplistPeer, setIpro1nn=setIpro1nn, setWanActiontTable=setWanActiontTable, setIpro1nnServicetaProtoc=setIpro1nnServicetaProtoc, staLcrProSuc=staLcrProSuc, staIproWantype=staIproWantype, staVpnDeletev=staVpnDeletev, staTcpiTftpLantxa=staTcpiTftpLantxa, staPppLcpTxechoreply=staPppLcpTxechoreply, staTcpiTcpWancon=staTcpiTcpWancon, setHttpRolVariablesInd=setHttpRolVariablesInd, setVpnAdditionalgRemotegateway15=setVpnAdditionalgRemotegateway15, setNtpSer=setNtpSer, setPerfRttmonsAveragejitter=setPerfRttmonsAveragejitter, setPerfRttmonsJittermaxpossd=setPerfRttmonsJittermaxpossd, setNetbHosRtg=setNetbHosRtg, staWanErrorsIfc=staWanErrorsIfc, staLanErroIfc=staLanErroIfc, staPppRxoLcpTable=staPppRxoLcpTable, setIproRipFilEntry=setIproRipFilEntry, staIproConnectRtgt=staIproConnectRtgt, setWanPppAuthentreq=setWanPppAuthentreq, staModeSimidiccid=staModeSimidiccid, setTcpiNetwoEntry=setTcpiNetwoEntry, staCompComNetworksConnect=staCompComNetworksConnect, staTcpiSyslDel=staTcpiSyslDel, staPppRxoIpcNbnsd=staPppRxoIpcNbnsd, setIproFirOpenpSrcr=setIproFirOpenpSrcr, setIproIprCom=setIproIprCom, staTcpiDnsFilt=staTcpiDnsFilt, staLanLanh=staLanLanh, staTcpiNetbBrowseTable=staTcpiNetbBrowseTable, staDslErrTable=staDslErrTable, setVlanPorPortv=setVlanPorPortv, staChanPlci=staChanPlci, setIproRipParMaxh=setIproRipParMaxh, fir=fir, firTabPos=firTabPos, staCompComBytecounEntry=staCompComBytecounEntry, staPppTxoLcpAut=staPppTxoLcpAut, staTcpiNetwInt=staTcpiNetwInt, staDslPacEntry=staDslPacEntry, staIsdnSigManErrK=staIsdnSigManErrK, setIproIprAct=setIproIprAct, staIproRipWildRipa=staIproRipWildRipa, staIproPortbloFilt=staIproPortbloFilt, staQueu=staQueu, setWanActiontActiv=setWanActiontActiv, staLcrProTable=staLcrProTable, setIproFirConneSrcr=setIproFirConneSrcr, setNetbNetNtd=setNetbNetNtd, staTcpiTftpLantxo=staTcpiTftpLantxo, staIproRipDynwRfc2=staIproRipDynwRfc2, staCompComComportsBit=staCompComComportsBit, setPerfRttmonsJitterminnegds=setPerfRttmonsJitterminnegds, staIproHostbloEntry=staIproHostbloEntry, staIproRipDynwPois=staIproRipDynwPois, staDslPppTxdata=staDslPppTxdata, setIproRouRou=setIproRouRou, setNetbGroNet=setNetbGroNet, othManCon=othManCon, staPppChaTxcha=staPppChaTxcha, setIproRipFilNam=setIproRipFilNam, setWanDslbroaVla=setWanDslbroaVla, staLanErroTxcarr=staLanErroTxcarr, setIproIprTable=setIproIprTable, setIproRipLanTxfi=setIproRipLanTxfi, setWanDslbroaWan=setWanDslbroaWan, staIproRipDele=staIproRipDele, staTcpiIcmpLans=staTcpiIcmpLans, staCallCou=staCallCou, setIproRipWanRxfi=setIproRipWanRxfi, setIproRipFilFil=setIproRipFilFil, setVpnProposalsIpsecEspcryptk=setVpnProposalsIpsecEspcryptk, staAccoAccConne=staAccoAccConne, staCertSceRasIsssnm=staCertSceRasIsssnm, setDhcpAliTable=setDhcpAliTable, staCompComComporteTable=staCompComComporteTable, staTcpiTcpLancon=staTcpiTcpLancon, staIproRip=staIproRip, setSnmpMonitortTim=setSnmpMonitortTim, staPppCcpTxconfignak=staPppCcpTxconfignak, staVpnAhSofts=staVpnAhSofts, staLanErroRxtoos=staLanErroRxtoos, setIproFirOpenpEntry=setIproFirOpenpEntry, staTcpiRadiAccountinBadauthentica=staTcpiRadiAccountinBadauthentica, setSnmpMonitortEntry=setSnmpMonitortEntry, staPppCcpRxresetack=staPppCcpRxresetack, staTcpiDhcpNetwoDnsdefault=staTcpiDhcpNetwoDnsdefault, staTcpiNetbGrouplTyp=staTcpiNetbGrouplTyp, staWanPackettraEntry=staWanPackettraEntry, setInteModemEscapep=setInteModemEscapep, setTimeDstclDay=setTimeDstclDay, staPptpConNbnsd=staPptpConNbnsd, setVpnIsakmp=setVpnIsakmp, setCertSceCasUrl=setCertSceCasUrl, staTimeIsdInfor=staTimeIsdInfor, setMailLoopb=setMailLoopb, staDslPppRxbad=staDslPppRxbad, staVlanOpe=staVlanOpe, staTcpiDele=staTcpiDele, setIproFirAppli=setIproFirAppli, staModeSignaldbm=staModeSignaldbm, staCallIfc=staCallIfc, staConfScanresuVersi=staConfScanresuVersi, staTcpiDhcpNetwoDnsbackup=staTcpiDhcpNetwoDnsbackup, staTcpiRadiAuthenticMalformed=staTcpiRadiAuthenticMalformed, setPerfRttmonsRttmax=setPerfRttmonsRttmax, setPerfRttmoneInterval=setPerfRttmoneInterval, firVerSer=firVerSer, trpUplFailIncl=trpUplFailIncl, staPppIpcTxconfigack=staPppIpcTxconfigack, staCert=staCert, staIproQosFragm=staIproQosFragm, staPppoSes=staPppoSes, setConfAntitheChe=setConfAntitheChe, setIproFirAuthp=setIproFirAuthp, setDnsDynaHos=setDnsDynaHos, staAccoAccEntry=staAccoAccEntry, setWanScriptsScr=setWanScriptsScr, setVlanPorPort=setVlanPorPort, staChanPhcha=staChanPhcha, setDnsServEntry=setDnsServEntry, staWanBytetransIfc=staWanBytetransIfc, staTcpiSyslLasIdx=staTcpiSyslLasIdx, staLayeEnca=staLayeEnca, setLcrTimSta=setLcrTimSta, setWanPollingTable=setWanPollingTable, staPppPapRxfai=staPppPapRxfai, staVpnIkeTable=staVpnIkeTable, staCompDevUsbdriv=staCompDevUsbdriv, staTcpiDhcpNetwoAdaption=staTcpiDhcpNetwoAdaption, staHardSeri=staHardSeri, staAccoAccTable=staAccoAccTable, staWanWanqueuep=staWanWanqueuep, setConfAdminsAcc=setConfAdminsAcc, staTcpiTcp=staTcpiTcp, setConfMonitorTracemask1=setConfMonitorTracemask1, staConfLl2m=staConfLl2m, setVpnAdditionalgRtgtag10=setVpnAdditionalgRtgtag10, staVpnIkeSrcpo=staVpnIkeSrcpo)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staIproRipLansTxfi=staIproRipLansTxfi, setIproVrrOpe=setIproVrrOpe, staTcpiHttpAgentlTable=staTcpiHttpAgentlTable, staTcpiTcpWanche=staTcpiTcpWanche, staCompComBytecounNetworkt=staCompComBytecounNetworkt, staTcpiArpWant=staTcpiArpWant, setIpro1nnServicetaIntran=setIpro1nnServicetaIntran, setNetbSco=setNetbSco, setNetbBroTable=setNetbBroTable, setVpnIsakmpTimIdx=setVpnIsakmpTimIdx, staTcpiDnsHitlEntry=staTcpiDnsHitlEntry, staIproQosTxblo=staIproQosTxblo, staTcpiTftpWantxr=staTcpiTftpWantxr, staTcpiNetbWnodes=staTcpiNetbWnodes, staPptpConTable=staPptpConTable, staTcpiArpTablPee=staTcpiArpTablPee, staIproRipRx=staIproRipRx, setPppoNamPee=setPppoNamPee, staRemoTable=staRemoTable, staIproFilterlActi=staIproFilterlActi, staTcpiHttpDelete=staTcpiHttpDelete, setIpro1nnFragments=setIpro1nnFragments, staQueuWanheap=staQueuWanheap, staTcpiDhcpNetwoCache=staTcpiDhcpNetwoCache, setDnsDnsdTable=setDnsDnsdTable, staLanInteTable=staLanInteTable, staPppTxoIpcTable=staPppTxoIpcTable, staCompComComporteEntry=staCompComComporteEntry, staTcpiDhcpNetwoStartaddre=staTcpiDhcpNetwoStartaddre, staModeMode=staModeMode, setTcpiAccesTable=setTcpiAccesTable, setVpnVpnpeersIkee=setVpnVpnpeersIkee, setCharTablebuBud=setCharTablebuBud, setVpnProposalsIkeLifetimes=setVpnProposalsIkeLifetimes, setDnsLeas=setDnsLeas, staCertSceCasSha1fi=staCertSceCasSha1fi, staIproLogtablTable=staIproLogtablTable, setInteMobileProQosu=setInteMobileProQosu, staPppPppEntry=staPppPppEntry, staTimeDstTim=staTimeDstTim, staLcrProPro=staLcrProPro, setVpnIsakmpTimRetrtim=setVpnIsakmpTimRetrtim, staPppCcpRxterminatea=staPppCcpRxterminatea, staTcpiDhcpRxreq=staTcpiDhcpRxreq, staTcpiNetbGrouplEntry=staTcpiNetbGrouplEntry, staModeNetworklistTable=staModeNetworklistTable, setIproRipWanTable=setIproRipWanTable, staIproConnectFilt=staIproConnectFilt, setWanRadiusAuthpo=setWanRadiusAuthpo, setDhcpNetStartaddre=setDhcpNetStartaddre, staConnConn=staConnConn, staCertCrlCrlIsssnm=staCertCrlCrlIsssnm, setIproFirAppliFtpAct=setIproFirAppliFtpAct, setSnmpReadonly=setSnmpReadonly, setDhcpMax=setDhcpMax, setPerfRttmonsJittercountposs=setPerfRttmonsJittercountposs, staTimeDstMon=staTimeDstMon, staCertSceNumra=staCertSceNumra, staIproVrrpVirTable=staIproVrrpVirTable, staIproVrrpEveInf=staIproVrrpEveInf, staIproProtocoWan=staIproProtocoWan, staPppTxoIpcIpadd=staPppTxoIpcIpadd, staTcpiTcpLantx=staTcpiTcpLantx, staCharTablebuTable=staCharTablebuTable, setWanBackuppHea=setWanBackuppHea, setVpnOperating=setVpnOperating, staPppPap=staPppPap, setMailEmail=setMailEmail, setIpro1nnIpsectablLocalsp=setIpro1nnIpsectablLocalsp, staConfEventlogEntry=staConfEventlogEntry, setDhcpHosNet=setDhcpHosNet, staPppTxoIpcEntry=staPppTxoIpcEntry, staCertSceRasExpire=staCertSceRasExpire, staTcpiRadiAccountinAccountingreq=staTcpiRadiAccountinAccountingreq, setIproRipParRout=setIproRipParRout, setVpnAdditionalgRemotegateway1=setVpnAdditionalgRemotegateway1, setVpnCertificateIkeEntry=setVpnCertificateIkeEntry, staDhcpLanGatew=staDhcpLanGatew, setIproFirHostbTim=setIproFirHostbTim, setConfSshauthEntry=setConfSshauthEntry, staLanPackRxu=staLanPackRxu, staTcpiNetbTimeou=staTcpiNetbTimeou, setInteMobile=setInteMobile, staVlanPorTable=staVlanPorTable, setLcrHolInd=setLcrHolInd, setCharSpareun=setCharSpareun, setTcpiAccesIpn=setTcpiAccesIpn, staTcpiDhcpNetwoMasterserv=staTcpiDhcpNetwoMasterserv, staPppIpcTxterminatea=staPppIpcTxterminatea, setIproFirFilteDend=setIproFirFilteDend, setVlanPorTable=setVlanPorTable, setTacaServerTable=setTacaServerTable, staTcpiTftpWanrx=staTcpiTftpWanrx, setInteMobileCon=setInteMobileCon, setVpnVpnpeersDpdi=setVpnVpnpeersDpdi, staTcpiNetbNetworRtg=staTcpiNetbNetworRtg, staEtheCabletestrTxd=staEtheCabletestrTxd, staPppChaTxsuc=staPppChaTxsuc, setDhcpAddTable=setDhcpAddTable, staConfScanresuDevic=staConfScanresuDevic, staIsdnSigLayLapL2a=staIsdnSigLayLapL2a, staIproVrrpVirSta=staIproVrrpVirSta, setDnsFiltDom=setDnsFiltDom, setDnsDnsdDes=setDnsDnsdDes, setCompComNetEntry=setCompComNetEntry, firMod=firMod, setVpnProposalsIkeproTable=setVpnProposalsIkeproTable, staIproPortbloEntry=staIproPortbloEntry, staIproWandisc=staIproWandisc, setCertSceCasName=setCertSceCasName, staVpnAhPeer=staVpnAhPeer, setTcpiNetwoTable=setTcpiNetwoTable, setTcpiOpera=setTcpiOpera, staDhcpWanGatew=staDhcpWanGatew, staTcpiDhcpTxoff=staTcpiDhcpTxoff, staTcpiArpWanr=staTcpiArpWanr, setAccoCurTable=setAccoCurTable, setPerfRttmonsJittersumpossd=setPerfRttmonsJittersumpossd, setIproFirOpenpSrca=setIproFirOpenpSrca, setInteMobileProNetw=setInteMobileProNetw, setWanPppRights=setWanPppRights, staPppCcpRxconfigreje=staPppCcpRxconfigreje, setCompComComPortnu=setCompComComPortnu, setConf=setConf, setCertSceCerExtended=setCertSceCerExtended, staTcpiRadiAuthenticEntry=staTcpiRadiAuthenticEntry, setVpnProposalsIkeproIkeproposal7=setVpnProposalsIkeproIkeproposal7, setIproUsa=setIproUsa, setHttpRolVariablesMax=setHttpRolVariablesMax, staPppRxoIpcTable=staPppRxoIpcTable, staIproLanfilt=staIproLanfilt, staPppMlRxdisca=staPppMlRxdisca, staIproRipDynlTxfi=staIproRipDynlTxfi, staTcpiTftpLanrxa=staTcpiTftpLanrxa, staIsdnSigManErrI=staIsdnSigManErrI, staTcpiTcpDelete=staTcpiTcpDelete, staDslErrLateco=staDslErrLateco, setConfPredefaNam=setConfPredefaNam, staTcpiRadiAccountinAccountingret=staTcpiRadiAccountinAccountingret, staTcpiDhcpNetwoServerid=staTcpiDhcpNetwoServerid, staTcpiArpLanr=staTcpiArpLanr, setConfCrontabVari=setConfCrontabVari, staTcpiDhcpNetwoNetmask=staTcpiDhcpNetwoNetmask, staConfStartsca=staConfStartsca, setChar=setChar, staIproVrrpMacVir=staIproVrrpMacVir, staPppIpcRxdiscarded=staPppIpcRxdiscarded, staPppIpcTxterminater=staPppIpcTxterminater, setIproFirFilteRtgt=setIproFirFilteRtgt, staTcpiDhcpWantx=staTcpiDhcpWantx, staTcpiNetbLanrx=staTcpiNetbLanrx, setWanDialuppCal=setWanDialuppCal, staIproRipWildRxfi=staIproRipWildRxfi, setWanLayerWanl=setWanLayerWanl, setWan=setWan, setLcrTimPre=setLcrTimPre, staTcpiRadiAccountinTimeouts=staTcpiRadiAccountinTimeouts, staTcpiNetbGrouplRtg=staTcpiNetbGrouplRtg, staSnmpEveCou=staSnmpEveCou, staIproQosPmtus=staIproQosPmtus, setTacaSnmpgetrequestsau=setTacaSnmpgetrequestsau, setSnmpComment2=setSnmpComment2, staTcpiNetwNet=staTcpiNetwNet, staTcpiDhcpNetwoNbnsdefaul=staTcpiDhcpNetwoNbnsdefaul, staIproHostbloTim=staIproHostbloTim, staUsbDevDepth=staUsbDevDepth, staIproEstabliSou=staIproEstabliSou, setTcpiNetwoRtg=setTcpiNetwoRtg, setPrinAccRtg=setPrinAccRtg, setIproRipIprTim=setIproRipIprTim, staPppChaRxsuc=staPppChaRxsuc, setVpnCertificateIkeRemoteidty=setVpnCertificateIkeRemoteidty, setWanIplistNbnsb=setWanIplistNbnsb, staPppRxoLcpEntry=staPppRxoLcpEntry, staQueuDnsrxqu=staQueuDnsrxqu, staTcpiNetbHostliTable=staTcpiNetbHostliTable, staPppChaRxfai=staPppChaRxfai, staPppRxoIpcDnsde=staPppRxoIpcDnsde, staIproRipDynwPeer=staIproRipDynwPeer, staCharSpareda=staCharSpareda, staLanErroMultip=staLanErroMultip, staDslPppServic=staDslPppServic, staLcrNot=staLcrNot, setPerfRttmonsJittercountnegd=setPerfRttmonsJittercountnegd, setNetbNetNet=setNetbNetNet, staTcpiDhcpRxinf=staTcpiDhcpRxinf, staIproQosRxblo=staIproQosRxblo, setDnsFiltTable=setDnsFiltTable, staPppCcpTxresetreque=staPppCcpTxresetreque, staPppTxoIpcNbnsb=staPppTxoIpcNbnsb, staCompComBytecounSerialrx=staCompComBytecounSerialrx, setWanDslbroaEntry=setWanDslbroaEntry, staIproVrrpMacMac=staIproVrrpMacMac, setVpnProposalsIpsecpIpsecproposal3=setVpnProposalsIpsecpIpsecproposal3, setIproLoaBunEntry=setIproLoaBunEntry, staVpnAhMaxse=staVpnAhMaxse, firTabSta=firTabSta, setDhcpPorTable=setDhcpPorTable, staVpnIkePeer=staVpnIkePeer, staIproOpenporSrca=staIproOpenporSrca, staModeScannetworks=staModeScannetworks, staIproHoconnlTim=staIproHoconnlTim, staVpnEspHasha=staVpnEspHasha, staPppCbcRxres=staPppCbcRxres, setDhcpNetBroadcastb=setDhcpNetBroadcastb, setWanLayerEntry=setWanLayerEntry, staModeSupplyvoltagem=staModeSupplyvoltagem, staWanErrorsRxl3=staWanErrorsRxl3, staTcpiRadiAccountinRoundtriptime=staTcpiRadiAccountinRoundtriptime, setCompCom=setCompCom, setCharTimetabSparemin=setCharTimetabSparemin, trpUplSucc=trpUplSucc, staIproVrrpVirNet=staIproVrrpVirNet, setConfCrontabHour=setConfCrontabHour, staIproLoadbalConVpn=staIproLoadbalConVpn, staPppPppLcp=staPppPppLcp, staCertSceCertsExpsnmp=staCertSceCertsExpsnmp, setInteModemmEntry=setInteModemmEntry, staChanTable=staChanTable, staPppRxoIpcIfc=staPppRxoIpcIfc, staQueuDhcpser=staQueuDhcpser, staPppRxoLcpAcc=staPppRxoLcpAcc, staIproWanrx=staIproWanrx, staVpnIkesas=staVpnIkesas, setInteS0Dial=setInteS0Dial, setMailPassw=setMailPassw, staConfDeleteva=staConfDeleteva, staIproRipDynwDftr=staIproRipDynwDftr, setTimeDayli=setTimeDayli, staIproLannetw=staIproLannetw, setLancIntEaz=setLancIntEaz, staIproRipFiltTable=staIproRipFiltTable, setIpro1nnTable1nnaSou=setIpro1nnTable1nnaSou, setAccoCurConne=setAccoCurConne, setIpro1nnTable1nnaTim=setIpro1nnTable1nnaTim, setVpnVpnpeersShti=setVpnVpnpeersShti, setDhcpAddOptiont=setDhcpAddOptiont, staLcrProEntry=staLcrProEntry, staDslBytRxb=staDslBytRxb, setCompComNetTable=setCompComNetTable, staTcpiTftpLancon=staTcpiTftpLancon, trpLAN_Overtemp_Throttle_Recommend=trpLAN_Overtemp_Throttle_Recommend, staRemoCount=staRemoCount, firTabDat=firTabDat, staPppMlRxmrrue=staPppMlRxmrrue, staIproRipDynwGate=staIproRipDynwGate, staTcpiDnsErro=staTcpiDnsErro, setConfMonitorTracemask2=setConfMonitorTracemask2, staVpnEspAge=staVpnEspAge, setInteMobileInp=setInteMobileInp, staTcpiTcpWantxr=staTcpiTcpWantxr, setDhcpHosHos=setDhcpHosHos, staConfLl2mRxdi=staConfLl2mRxdi, setConfAccesstTelnets=setConfAccesstTelnets)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staIproHoconnlEntry=staIproHoconnlEntry, staWanErrorsRxl1=staWanErrorsRxl1, staIproFilter=staIproFilter, setWanPollingIpaddress1=setWanPollingIpaddress1, staIsdnSigManErrD=staIsdnSigManErrD, staVpnIkeEntry=staVpnIkeEntry, setAccoTimActi=setAccoTimActi, setCharDaysper=setCharDaysper, setIproFirAppliFtp=setIproFirAppliFtp, staChanChan=staChanChan, staTcpiHttpActiveRemotea=staTcpiHttpActiveRemotea, setVpnCertificateIkeSharedsecf=setVpnCertificateIkeSharedsecf, setInteModemDialcom=setInteModemDialcom, setEchoAccPro=setEchoAccPro, staConnEntry=staConnEntry, setIpro1nnUdpagings=setIpro1nnUdpagings, staTcpiDhcpNetwoBroadcastb=staTcpiDhcpNetwoBroadcastb, staChanMode=staChanMode, oth=oth, setIproFirAppliFtpFtp=setIproFirAppliFtpFtp, setVpnLayerName=setVpnLayerName, firTabSiz=firTabSiz, setWanRadius=setWanRadius, staHard=staHard, staVpnAhIdx=staVpnAhIdx, firVerMod=firVerMod, staIproRipWildPois=staIproRipWildPois, staPppTxoLcpTable=staPppTxoLcpTable, setIproVrrVrrVir=setIproVrrVrrVir, staDslPacTxu=staDslPacTxu, setIproFirAppliIrcIrc=setIproFirAppliIrcIrc, setNetbHosTim=setNetbHosTim, setTacaServerCom=setTacaServerCom, setIpro1nnTable1nnaPro=setIpro1nnTable1nnaPro, staIproRipWildTxfi=staIproRipWildTxfi, staIsdnFraS0B2f=staIsdnFraS0B2f, staCertSceCasKeyusa=staCertSceCasKeyusa, setPerfRttmonePacketsize=setPerfRttmonePacketsize, staIsdnSigLayLapTei=staIsdnSigLayLapTei, staConfLl2mServRxu=staConfLl2mServRxu, setWanBackuppAlt=setWanBackuppAlt, setConfLoginer=setConfLoginer, staIproRipLansTable=staIproRipLansTable, staDslErrRxalig=staDslErrRxalig, staTcpiTftpWanrxr=staTcpiTftpWanrxr, staIproFilterlLink=staIproFilterlLink, setCertSceCerSubjecta=setCertSceCerSubjecta, setIproRipWanRipa=setIproRipWanRipa, setTimeUtcin=setTimeUtcin, staTcpiArpTablCon=staTcpiArpTablCon, staVpnIkeMaxse=staVpnIkeMaxse, staPppCcpRxdiscarded=staPppCcpRxdiscarded, setEchoAccTable=setEchoAccTable, staPptpRxp=staPptpRxp, setIproLoaBunBundlepeer2=setIproLoaBunBundlepeer2, setHttpMax=setHttpMax, setWanIncominPee=setWanIncominPee, setHttpShoPos=setHttpShoPos, trpFwUplStart=trpFwUplStart, staTimeTim=staTimeTim, staCompDevEntry=staCompDevEntry, setPrinAccIpa=setPrinAccIpa, staPppCcpTxcodereject=staPppCcpTxcodereject, staIproConnectSrcp=staIproConnectSrcp, staTcpiRadiInvalidau=staTcpiRadiInvalidau, staDslErrEntry=staDslErrEntry, staCertSceCertsIdx=staCertSceCertsIdx, staTcpiDhcpLanrx=staTcpiDhcpLanrx, staCompComNetworksPortnum=staCompComNetworksPortnum, setWanRadiusPppope=setWanRadiusPppope, staPppCcpRxconfignak=staPppCcpRxconfignak, setIpro1nnTable1nnaTable=setIpro1nnTable1nnaTable, setIpro1nnIpsectablNr=setIpro1nnIpsectablNr, staCertCrlCrlIssuer=staCertCrlCrlIssuer, staChanPptpc=staChanPptpc, staCompComNetworksLasterr=staCompComNetworksLasterr, setIproFirConneSrca=setIproFirConneSrca, setPerfRttmonaTim=setPerfRttmonaTim, staIproVrrpMacTable=staIproVrrpMacTable, setIproTagPee=setIproTagPee, setVpnLegacydynvp=setVpnLegacydynvp, setIpro1nnIpsectablLocalad=setIpro1nnIpsectablLocalad, staIproVrrpDel=staIproVrrpDel, setIproRipWanRipt=setIproRipWanRipt, setPerfRttmonsJitterminposds=setPerfRttmonsJitterminposds, staTcpiHttpHttppr=staTcpiHttpHttppr, setInteModemInitdia=setInteModemInitdia, setIproVrrVrrRou=setIproVrrVrrRou, staDslErrTxdefe=staDslErrTxdefe, staTcpiNetbHosts=staTcpiNetbHosts, setHttpShoEntry=setHttpShoEntry, setSyslMes=setSyslMes, setPerfRttmonsJitterminnegsd=setPerfRttmonsJitterminnegsd, setCharTablebuTable=setCharTablebuTable, setEcho=setEcho, staConfAntithefWaiti=staConfAntithefWaiti, staAccoCurPeer=staAccoCurPeer, staTcpiNetbServerTim=staTcpiNetbServerTim, setSyslSerIdx=setSyslSerIdx, staPppTxoLcpMag=staPppTxoLcpMag, staIproConnectTable=staIproConnectTable, staLayeWanl=staLayeWanl, staIproPortbloTime=staIproPortbloTime, setTimeGetti=setTimeGetti, staIsdnSigManDinEntry=staIsdnSigManDinEntry, staCharTimetabMinutesp=staCharTimetabMinutesp, setVpnAdditionalgRtgtag5=setVpnAdditionalgRtgtag5, setTcpiNetwoIpn=setTcpiNetwoIpn, staIproConnectDest=staIproConnectDest, setSyslSerLoo=setSyslSerLoo, staVpnIkeDesta=staVpnIkeDesta, staTcpiNetbBrowseSer=staTcpiNetbBrowseSer, staIproLogtablSyst=staIproLogtablSyst, staIproQosRxres=staIproQosRxres, setDhcpHosMac=setDhcpHosMac, staTcpiNetwSrc=staTcpiNetwSrc, staTcpiRadiAuthenticPendingre=staTcpiRadiAuthenticPendingre, setIpro1nnIpsectablCo=setIpro1nnIpsectablCo, setVpnQuickmodepr=setVpnQuickmodepr, staTcpiArpTablEntry=staTcpiArpTablEntry, staIproRipIpriPor=staIproRipIpriPor, staModeHistoryNet=staModeHistoryNet, setIproRipParHold=setIproRipParHold, staTcpiNetbServerFla=staTcpiNetbServerFla, staIsdnLinS0Ope=staIsdnLinS0Ope, staCertSceRasExpsnm=staCertSceRasExpsnm, staCompComNetworksFullnam=staCompComNetworksFullnam, staIproLoadbalConSta=staIproLoadbalConSta, setVpnAdditionalgRemotegateway12=setVpnAdditionalgRemotegateway12, setCompDevEntry=setCompDevEntry, staPppLcpTxterminater=staPppLcpTxterminater, setLcrTimFal=setLcrTimFal, staPppoConPee=staPppoConPee, setSnmpMonitortEth=setSnmpMonitortEth, staCertSceCasIdx=staCertSceCasIdx, staDhcpWanTable=staDhcpWanTable, setIproFirConneRtgt=setIproFirConneRtgt, staIproRipWansRips=staIproRipWansRips, setIproNnnEntry=setIproNnnEntry, staModeDroppedtxpacke=staModeDroppedtxpacke, staIproWanttle=staIproWanttle, staDslPacTxm=staDslPacTxm, staConfScanresuEntry=staConfScanresuEntry, setConfFunctioTable=setConfFunctioTable, staTcpiNetbBrowseNet=staTcpiNetbBrowseNet, setTcpiNbnsd=setTcpiNbnsd, trpCnfUplStart=trpCnfUplStart, staTcpiIcmpWanc=staTcpiIcmpWanc, staPppPapDelet=staPppPapDelet, setInteMobileProPin=setInteMobileProPin, staIproRules=staIproRules, staTcpiTftpWantxe=staTcpiTftpWantxe, staTcpiRadiAuthenticAccessret=staTcpiRadiAuthenticAccessret, staUsbDevProducti=staUsbDevProducti, setPrin=setPrin, setCharAdditio=setCharAdditio, setNtpRqaTable=setNtpRqaTable, setDnsDyndIpa=setDnsDyndIpa, setDnsDynaEntry=setDnsDynaEntry, setCert=setCert, staChanSubad=staChanSubad, staCompDevService=staCompDevService, staPptpTun=staPptpTun, setPppoNamTable=setPppoNamTable, staRemoIfc=staRemoIfc, setIproVrr=setIproVrr, setVpnAdditionalgRemotegateway5=setVpnAdditionalgRemotegateway5, staDhcpLanIpnet=staDhcpLanIpnet, staInfoMod=staInfoMod, staPppCcpDeletevalues=staPppCcpDeletevalues, setIpro1nnTable1nnaRem=setIpro1nnTable1nnaRem, staConfAntithefLaste=staConfAntithefLaste, setPppoSer=setPppoSer, setCertSceCerTable=setCertSceCerTable, trpLogout=trpLogout, staIproQosTxreq=staIproQosTxreq, staPppBacTxstatusrespo=staPppBacTxstatusrespo, staTcpiRadiAuthenticDropped=staTcpiRadiAuthenticDropped, staCertCrlCrlDistri=staCertCrlCrlDistri, setTcpiIcmpo=setTcpiIcmpo, setConfAccesstSsh=setConfAccesstSsh, staSnmpEveEntry=staSnmpEveEntry, setWanMtulistEntry=setWanMtulistEntry, setIproFirObjecDes=setIproFirObjecDes, setHttp=setHttp, staPppLcpTxcodereject=staPppLcpTxcodereject, staConfAntithef=staConfAntithef, staCharTablebuBud=staCharTablebuBud, setIpro1nnTable1nnaEntry=setIpro1nnTable1nnaEntry, setTcpiAccesIpa=setTcpiAccesIpa, setIproVrrVrrCom=setIproVrrVrrCom, staPppCcp=staPppCcp, staConfAntithefSendi=staConfAntithefSendi, setCharTimetabMinutesa=setCharTimetabMinutesa, staPppPppTable=staPppPppTable, setDhcpNetOperating=setDhcpNetOperating, staIproRipLansRxfi=staIproRipLansRxfi, staWanThroughpuTable=staWanThroughpuTable, setSyslFacSou=setSyslFacSou, setVlanPorTaggi=setVlanPorTaggi, othCol=othCol, staTcpiIpLooperror=staTcpiIpLooperror, staIsdnSigManDinLay=staIsdnSigManDinLay, staPppCbcDelet=staPppCbcDelet, staCertSceRasIssued=staCertSceRasIssued, setCompComComParity=setCompComComParity, setVpnQuickmodesh=setVpnQuickmodesh, staPppoConSht=staPppoConSht, setIproFirPortbEntry=setIproFirPortbEntry, setTacaAuthentication=setTacaAuthentication, firVerIfc=firVerIfc, setIproDefSta=setIproDefSta, setIproRipIprIpa=setIproRipIprIpa, setSnmpMonitortLan=setSnmpMonitortLan, setConfCrontabEntry=setConfCrontabEntry, staEthePortsFlo=staEthePortsFlo, setInteS0Entry=setInteS0Entry, staTcpiIcmpLanc=staTcpiIcmpLanc, setCertSceCasCafingerprint=setCertSceCasCafingerprint, setAccoAccTable=setAccoAccTable, staWanErrorsEntry=staWanErrorsEntry, setIproDefDay=setIproDefDay, setConfLan=setConfLan, staLanErroStacke=staLanErroStacke, setInteMobileProMode=setInteMobileProMode, staIproRipFiltIdx=staIproRipFiltIdx, setVpnProposalsIpsecpEntry=setVpnProposalsIpsecpEntry, setLancIntEntry=setLancIntEntry, staTcpiNetbHostliTyp=staTcpiNetbHostliTyp, staAccoLasUsern=staAccoLasUsern, setInteModemEscapes=setInteModemEscapes, staCompComConnectiPortnum=staCompComConnectiPortnum, staDslPppTxpadr=staDslPppTxpadr, setCertSceChe=setCertSceChe, setNetbSerTim=setNetbSerTim, staDslPppRxpado=staDslPppRxpado, setAccoDis=setAccoDis, setInteModemmPro=setInteModemmPro, staPppRxoLcpAcf=staPppRxoLcpAcf, setAccoAccRxkby=setAccoAccRxkby, staTime=staTime, staTcpiHttpHttpau=staTcpiHttpHttpau, staLanPackRxm=staLanPackRxm, staTcpiNetbGrouplIpa=staTcpiNetbGrouplIpa, staTcpiRadiAccountinPort=staTcpiRadiAccountinPort, staLanErroRxtool=staLanErroRxtool, staCertSceRasSubjec=staCertSceRasSubjec, setIproFirAppliFtpChe=setIproFirAppliFtpChe, setLancIntTable=setLancIntTable, setIproFirRulesSta=setIproFirRulesSta, staVpnEspMode=staVpnEspMode, setIpro1nnIdspoofin=setIpro1nnIdspoofin, setPrinAccEntry=setPrinAccEntry, staPppCbcRxreq=staPppCbcRxreq)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staDslPacIfc=staDslPacIfc, setIproFirConneFilt=setIproFirConneFilt, setVlanNetVla=setVlanNetVla, staPppRxoLcpMag=staPppRxoLcpMag, staVpnIkeIniti=staVpnIkeIniti, setIproLoaBunPeer=setIproLoaBunPeer, setPppoPorTable=setPppoPorTable, staIproVrrpEveTable=staIproVrrpEveTable, staInfoTable=staInfoTable, staIproFilterlSrcn=staIproFilterlSrcn, staConfLl2mClieDel=staConfLl2mClieDel, setIpro1nnIpsectablRemotea=setIpro1nnIpsectablRemotea, setPerfRttmonaTyp=setPerfRttmonaTyp, setSnmpAdminist=setSnmpAdminist, setPerfRttmonsCompletions=setPerfRttmonsCompletions, setInteEthernCon=setInteEthernCon, staTcpiNetbBrowseEntry=staTcpiNetbBrowseEntry, staConfOutbandb=staConfOutbandb, staCompComComportsPar=staCompComComportsPar, staLayeLay3=staLayeLay3, staPppPppIfc=staPppPppIfc, staTcpiTftpLantx=staTcpiTftpLantx, setHttpRolVariablesDef=setHttpRolVariablesDef, staIproVrrpInt=staIproVrrpInt, setLancUdp=setLancUdp, setLancIntIfc=setLancIntIfc, setLancAccTable=setLancAccTable, setIproFirConneProt=setIproFirConneProt, staConfAntithefLasts=staConfAntithefLasts, setTimeDstclTable=setTimeDstclTable, staPppIpcRxconfignak=staPppIpcRxconfignak, setVlanNetTable=setVlanNetTable, staTimeDstEntry=staTimeDstEntry, staIproVrrpMacRou=staIproVrrpMacRou, setNetbHosTyp=setNetbHosTyp, staPppoConMac=staPppoConMac, setNetbSerGro=setNetbSerGro, staCompComComporteFra=staCompComComporteFra, setDhcpAliImagea=setDhcpAliImagea, staIproProtocoEntry=staIproProtocoEntry, staPppBacTxlinkdropres=staPppBacTxlinkdropres, setIproFirObjecNam=setIproFirObjecNam, staTcpiRadiInvalidac=staTcpiRadiInvalidac, staPppChaRxcha=staPppChaRxcha, setIproPro=setIproPro, staIproLandisc=staIproLandisc, staPppBac=staPppBac, staIproEstabliTim=staIproEstabliTim, setInteS0Table=setInteS0Table, setVlanPorEntry=setVlanPorEntry, staIsdnSigLayLapCha=staIsdnSigLayLapCha, staAccoDel=staAccoDel, staIproConnectDstp=staIproConnectDstp, staCharTotalun=staCharTotalun, setIproVrrVrrBpr=setIproVrrVrrBpr, setIproFirObjecEntry=setIproFirObjecEntry, staPppChaTxret=staPppChaTxret, staDslErrStacke=staDslErrStacke, setAccoAccMacad=setAccoAccMacad, setConfSshauthIfc=setConfSshauthIfc, firTabTable=firTabTable, setWanDialuppWan=setWanDialuppWan, setLcrTimEntry=setLcrTimEntry, staTcpiDhcpLantx=staTcpiDhcpLantx, setAccoCurRxkby=setAccoCurRxkby, setIproRipParFlus=setIproRipParFlus, setTcpiNbnsb=setTcpiNbnsb, staPppLcpTxconfigrequ=staPppLcpTxconfigrequ, staPppIpcRxterminatea=staPppIpcRxterminatea, staIproOpenporEntry=staIproOpenporEntry, setIproFirHostbEntry=setIproFirHostbEntry, staTcpiNetbServerPee=staTcpiNetbServerPee, staCertSceRasKeyusa=staCertSceRasKeyusa, setInteS0Maxo=setInteS0Maxo, staWanPackettraTable=staWanPackettraTable, setNetbBroFla=setNetbBroFla, setDhcpAddOptionn=setDhcpAddOptionn, setIproTagTable=setIproTagTable, setVpnAdditionalgRtgtag11=setVpnAdditionalgRtgtag11, setSnmpLocation=setSnmpLocation, staTcpiTftpLanrxb=staTcpiTftpLanrxb, staVpnConnectB1dt=staVpnConnectB1dt, setWanRadiusSecret=setWanRadiusSecret, setEchoAccEntry=setEchoAccEntry, staTcpiNetbWanrx=staTcpiNetbWanrx, staTcpiDhcpAssig=staTcpiDhcpAssig, setCompComComBitrat=setCompComComBitrat, setIproRouSyn=setIproRouSyn, staVpnConnectState=staVpnConnectState, staAccoLasPeer=staAccoLasPeer, setVlanNetEntry=setVlanNetEntry, setSnmpRegister=setSnmpRegister, setPerfRttmonsRttcount=setPerfRttmonsRttcount, staHardEthe=staHardEthe, staPppCbcRxdis=staPppCbcRxdis, setWanDialuppDia=setWanDialuppDia, setWanPppFail=setWanPppFail, setVlan=setVlan, setIproFirHostbFil=setIproFirHostbFil, setCompWanDevEntry=setCompWanDevEntry, setVpnAdditionalgRemotegateway8=setVpnAdditionalgRemotegateway8, setIproFirHostbSrc=setIproFirHostbSrc, staCompDevFullnam=staCompDevFullnam, staLanPackTxb=staLanPackTxb, setVpnNattoperati=setVpnNattoperati, staIproLoadbalOpe=staIproLoadbalOpe, staPppIpcRxconfigreje=staPppIpcRxconfigreje, staLanByteMaxthr=staLanByteMaxthr, staTcpiDnsDele=staTcpiDnsDele, staPppMlRxheade=staPppMlRxheade, setIproFirFiltePrio=setIproFirFiltePrio, staTcpi=staTcpi, setDhcpDhcTyp=setDhcpDhcTyp, staLanPackRxp=staLanPackRxp, staIproQosDowns=staIproQosDowns, staVpnIkeAge=staVpnIkeAge, staIproVrrpOpe=staIproVrrpOpe, setDhcpNetDnsdefault=setDhcpNetDnsdefault, staCompComDeleteva=staCompComDeleteva, staLanErroNicerr=staLanErroNicerr, staTcpiNetwIpn=staTcpiNetwIpn, staTcpiNetwTyp=staTcpiNetwTyp, staLanErroSingle=staLanErroSingle, staTacaAuthe=staTacaAuthe, setDhcpAliImages=setDhcpAliImages, setNetbHosFla=setNetbHosFla, setLcrRou=setLcrRou, staTcpiDnsDnsa=staTcpiDnsDnsa, staTcpiDnsLanr=staTcpiDnsLanr, staIsdnSigManErrC=staIsdnSigManErrC, staAccoAccTotal=staAccoAccTotal, setIpro1nnIpsectablFlags=setIpro1nnIpsectablFlags, setPppo=setPppo, staCompComComportePar=staCompComComportePar, staTcpiDhcpNetwoNbnsbackup=staTcpiDhcpNetwoNbnsbackup, staTcpiDhcpDhcptTyp=staTcpiDhcpDhcptTyp, staConfLl2mRxpa=staConfLl2mRxpa, staDslErrQueuee=staDslErrQueuee, setCharTablebuEntry=setCharTablebuEntry, setIproRipLanRxfi=setIproRipLanRxfi, setConfLl2mTim=setConfLl2mTim, setVpnAdditionalgRtgtag16=setVpnAdditionalgRtgtag16, staTcpiIpLanrx=staTcpiIpLanrx, staIproRipWildMasq=staIproRipWildMasq, staIproPortbloProt=staIproPortbloProt, staInfoIfc=staInfoIfc, staDslErrExcess=staDslErrExcess, setWanPollingIpaddress2=setWanPollingIpaddress2, staHardVpnh=staHardVpnh, setPrinAccIpn=setPrinAccIpn, staWanPackettraTxt=staWanPackettraTxt, setWanDslbroaTable=setWanDslbroaTable, staConfLl2mClie=staConfLl2mClie, staPppPppPha=staPppPppPha, staDslErrRxerro=staDslErrRxerro, setCompComNetConnecth=setCompComNetConnecth, staChanCharg=staChanCharg, staIproRipIpriIpn=staIproRipIpriIpn, staModeHistoryTim=staModeHistoryTim, staTcpiRadi=staTcpiRadi, staTcpiNetbServerSer=staTcpiNetbServerSer, setPerfRttmonsIndex=setPerfRttmonsIndex, staIsdnSigManErrF=staIsdnSigManErrF, setWanPppTable=setWanPppTable, staIproRipIpriTim=staIproRipIpriTim, staMode=staMode, setCharSpareds=setCharSpareds, staDhcp=staDhcp, staPppoConLas=staPppoConLas, staConfLl2mClieRxp=staConfLl2mClieRxp, setIproRipParUpdd=setIproRipParUpdd, setIproDefTable=setIproDefTable, staIproVrrpEveEve=staIproVrrpEveEve, setDhcpNetDnsbackup=setDhcpNetDnsbackup, setNetbHosIpa=setNetbHosIpa, setPerfRttmonsRttmin=setPerfRttmonsRttmin, staIproFilterlProt=staIproFilterlProt, staDslPppAcname=staDslPppAcname, staCompComConnectiServerg=staCompComConnectiServerg, setInteMobileProProf=setInteMobileProProf, setInteMobileProEntry=setInteMobileProEntry, setNetbGroRtg=setNetbGroRtg, staAcco=staAcco, staFileConEntry=staFileConEntry, staCertSceCertsName=staCertSceCertsName, staIsdnSigManErrG=staIsdnSigManErrG, staIproQosPeer=staIproQosPeer, staTcpiRadiAuthenticBadauthen=staTcpiRadiAuthenticBadauthen, setWanScriptsEntry=setWanScriptsEntry, setLancAccRtg=setLancAccRtg, setIproFirConneFlag=setIproFirConneFlag, staIproRipIpriGat=staIproRipIpriGat, staVpnAhTable=staVpnAhTable, staTcpiNetbServerTable=staTcpiNetbServerTable, setIproFirPortbProt=setIproFirPortbProt, staTcpiHttp=staTcpiHttp, setCertSceCerChalleng=setCertSceCerChalleng, staMail=staMail, staIproHoconnlNum=staIproHoconnlNum, staLayeTable=staLayeTable, setIproRipWanGate=setIproRipWanGate, firTabEntry=firTabEntry, staConfLl2mClieRxm=staConfLl2mClieRxm, setVpnProposalsIpsecAhauthalg=setVpnProposalsIpsecAhauthalg, setWanPppTerm=setWanPppTerm, staTcpiTcpWantx=staTcpiTcpWantx, staChanIsdnd=staChanIsdnd, staTcpiNetbHostliPee=staTcpiNetbHostliPee, setConfFunctioEntry=setConfFunctioEntry, staDslPppTxprot=staDslPppTxprot, staDele=staDele, staInfoEntry=staInfoEntry, staTaca=staTaca, setSyslSerTable=setSyslSerTable, staVpnIpcompHasha=staVpnIpcompHasha, staConfEventlogIdx=staConfEventlogIdx, staVpnConnectTable=staVpnConnectTable, setCertSceCasTable=setCertSceCasTable, staPppMl=staPppMl, staHardCpul=staHardCpul, staTcpiNetbHostliIpa=staTcpiNetbHostliIpa, setWanPollingTime=setWanPollingTime, staCertCrlCrlExpsnm=staCertCrlCrlExpsnm, setConfCrontabBase=setConfCrontabBase, staTcpiIpLantx=staTcpiIpLantx, staIsdnSigManDinS0a=staIsdnSigManDinS0a, setDhcpHosIpa=setDhcpHosIpa, staConfFeaturesFea=staConfFeaturesFea, staVpnIpcompKbyte=staVpnIpcompKbyte, setTcpiAccesRtg=setTcpiAccesRtg, setConfLanguag=setConfLanguag, trpLdblConn=trpLdblConn, staEthePortsPri=staEthePortsPri, staLanByteThroug=staLanByteThroug, staMailDel=staMailDel, staAccoLasMacad=staAccoLasMacad, setTacaServerSer=setTacaServerSer, setPppoNamEntry=setPppoNamEntry, staVpnEspMaxkb=staVpnEspMaxkb, staCompDevTable=staCompDevTable, setHttpRolDisplayco=setHttpRolDisplayco, setSnmpIptrapsTra=setSnmpIptrapsTra, staIproFilterlDsta=staIproFilterlDsta, staDslErrSingle=staDslErrSingle, staIproWannetw=staIproWannetw, setIproFirActioDes=setIproFirActioDes, staTcpiDhcpDhcptVla=staTcpiDhcpDhcptVla, setIproRipIprGat=setIproRipIprGat, staIproRipWansPois=staIproRipWansPois, setConfConfiga=setConfConfiga, setHttpRolVariablesMin=setHttpRolVariablesMin, setVpnAdditionalgPeer=setVpnAdditionalgPeer, staPppLcpRxterminatea=staPppLcpRxterminatea, staConfAntithefIncom=staConfAntithefIncom)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staUsbDevProduct=staUsbDevProduct, setDnsDhcp=setDnsDhcp, staConfOutbanda=staConfOutbanda, staVpnConnectRemote=staVpnConnectRemote, setTcpiArptaCon=setTcpiArptaCon, staTcpiRadiAuthenticPort=staTcpiRadiAuthenticPort, setVpnProposalsIkeproEntry=setVpnProposalsIkeproEntry, trpLAN_Overtemp_Throttle=trpLAN_Overtemp_Throttle, setSnmpComment1=setSnmpComment1, setIproFirAppliIrcChe=setIproFirAppliIrcChe, staPppPapTxfai=staPppPapTxfai, setDhcpNetNbnsdefaul=setDhcpNetNbnsdefaul, setVpnProposalsIpsecTable=setVpnProposalsIpsecTable, staTcpiNetbNetworNtd=staTcpiNetbNetworNtd, staTcpiNetbRegist=staTcpiNetbRegist, staAccoCurTotal=staAccoCurTotal, staTcpiDnsHitlDom=staTcpiDnsHitlDom, staPptpFlo=staPptpFlo, setWanRadiusAuthpr=setWanRadiusAuthpr, staHardTota=staHardTota, setDhcpNetNetworknam=setDhcpNetNetworknam, staHardCput=staHardCput, setIproFirRulesEntry=setIproFirRulesEntry, setNetbSerOsv=setNetbSerOsv, setCompComOpeDev=setCompComOpeDev, setHttpTun=setHttpTun, staVlanNetEntry=staVlanNetEntry, trpCnfDnlStart=trpCnfDnlStart, setInteModemmTyp=setInteModemmTyp, staTcpiDnsForw=staTcpiDnsForw, staPppLcpRxdiscardreq=staPppLcpRxdiscardreq, staTcpiNetbHostliNam=staTcpiNetbHostliNam, setRadiAuthr=setRadiAuthr, staIsdnSigManErrIfc=staIsdnSigManErrIfc, setDhcpDhcHos=setDhcpDhcHos, staPppoTxp=staPppoTxp, setConfCrontabDay=setConfCrontabDay, setWanIplistEntry=setWanIplistEntry, setVpnVpnpeersEntry=setVpnVpnpeersEntry, staIproL4error=staIproL4error, staIsdnSig=staIsdnSig, staCertSceRasTable=staCertSceRasTable, staIproRipLansVlan=staIproRipLansVlan, setIproRouIcm=setIproRouIcm, firFea=firFea, setDhcpNetEntry=setDhcpNetEntry, setPerfRttmoneDestinationp=setPerfRttmoneDestinationp, setConfTelnetp=setConfTelnetp, staPppRxoLcpMru=staPppRxoLcpMru, staCertSceCasIkecer=staCertSceCasIkecer, staCompComNetworksRemotep=staCompComNetworksRemotep, staIproProtocoTable=staIproProtocoTable, staCompComComportsDev=staCompComComportsDev, setCharBudgetu=setCharBudgetu, setConfTftpcli=setConfTftpcli, setDhcpHosTable=setDhcpHosTable, setVpnAdditionalgRemotegateway4=setVpnAdditionalgRemotegateway4, setComp=setComp, setCompComNetNewlinec=setCompComNetNewlinec, staIproLanrout=staIproLanrout, setWanRadiusProtoc=setWanRadiusProtoc, setCertSceCasRaautoapprove=setCertSceCasRaautoapprove, staVpnConnectHmacle=staVpnConnectHmacle, setVpnLayerPfsg=setVpnLayerPfsg, staTcpiIpLanfragmentationsf=staTcpiIpLanfragmentationsf, staDslIntEntry=staDslIntEntry, staIproLantx=staIproLantx, staVpnAhCrypt=staVpnAhCrypt, setPerfRttmonsJittercountnegs=setPerfRttmonsJittercountnegs, staConfScanresuName=staConfScanresuName, setVpnAdditionalgRtgtag7=setVpnAdditionalgRtgtag7, setVpnProposalsIkeproIkeproposal4=setVpnProposalsIkeproIkeproposal4, setCertSceCasCafingerprinta=setCertSceCasCafingerprinta, setConfUpdatecServerp=setConfUpdatecServerp, staIproDeletev=staIproDeletev, setTcpiAliveTestin=setTcpiAliveTestin, setVpnProposalsIkeIkeauthal=setVpnProposalsIkeIkeauthal, setVpnProposalsIpsecpTable=setVpnProposalsIpsecpTable, staPppRxo=staPppRxo, staDslBytTable=staDslBytTable, setHttpRolActionsAct=setHttpRolActionsAct, setCharTimetabMinutesp=setCharTimetabMinutesp, staPptpConChann=staPptpConChann, setConfAdminge=setConfAdminge, staModeState=staModeState, staConfScanresuCapip=staConfScanresuCapip, staDslBytIfc=staDslBytIfc, staTcpiDnsWant=staTcpiDnsWant, staIsdnLin=staIsdnLin, staTcpiArpDele=staTcpiArpDele, setInteModemmTable=setInteModemmTable, staIproRipDynlGate=staIproRipDynlGate, setPerfRttmonsPacketlosssd=setPerfRttmonsPacketlosssd, staCallCli=staCallCli, staIproConnectProt=staIproConnectProt, staIproWanfilt=staIproWanfilt, staPppPapTxsuc=staPppPapTxsuc, staPptpConDnsba=staPptpConDnsba, setIproRipWanRtgt=setIproRipWanRtgt, setInteModemRingcou=setInteModemRingcou, setConfPrompt=setConfPrompt, setVpnProposalsIkeEntry=setVpnProposalsIkeEntry, staIsdnLinS0Entry=staIsdnLinS0Entry, setVpnAdditionalgRemotegateway2=setVpnAdditionalgRemotegateway2, staChanEntry=staChanEntry, setPrinPriRes=setPrinPriRes, staDslIntLin=staDslIntLin, setVpnMainmodepro=setVpnMainmodepro, setConfAntitheIsd=setConfAntitheIsd, staPppCcpTxconfigreje=staPppCcpTxconfigreje, setIpro1nnIpsecagin=setIpro1nnIpsecagin, staAccoLasTxkby=staAccoLasTxkby, staTcpiTftpLanrxr=staTcpiTftpLanrxr, setIproRouL3l=setIproRouL3l, staTimeDstEve=staTimeDstEve, staDslPppRxpadt=staDslPppRxpadt, staLanInteQue=staLanInteQue, staModeRxtimeouts=staModeRxtimeouts, staPppIpcTxconfigrequ=staPppIpcTxconfigrequ, setIproIprPee=setIproIprPee, setWanLayerLay2=setWanLayerLay2, setIproRou=setIproRou, staLanPackTxp=staLanPackTxp, staIproRipIpriEntry=staIproRipIpriEntry, staTimeUtc=staTimeUtc, setIproFirAppliIrcDdc=setIproFirAppliIrcDdc, staLanByteTable=staLanByteTable, setVpnProposalsIpsecpIpsecproposall=setVpnProposalsIpsecpIpsecproposall, staQueuIcmpque=staQueuIcmpque, staCompComComportsPor=staCompComComportsPor, setNetbGroPee=setNetbGroPee, setLcrHolDat=setLcrHolDat, setHttpPor=setHttpPor, setNtpRqaEntry=setNtpRqaEntry, staCertSceCertsExpires=staCertSceCertsExpires, staComp=staComp, setIproWan=setIproWan, setIproFirActioTable=setIproFirActioTable, staIproOpenporDsta=staIproOpenporDsta, setNetbBroPee=setNetbBroPee, staCompComComporteDev=staCompComComporteDev, staTcpiRadiAuthenticUnknownty=staTcpiRadiAuthenticUnknownty, setVpnAdditionalgRemotegateway13=setVpnAdditionalgRemotegateway13, staPppRxoLcpCal=staPppRxoLcpCal, setCertCrlAlt=setCertCrlAlt, setNetbHosEntry=setNetbHosEntry, setNetbGroTim=setNetbGroTim, staVpnIkeCrypt=staVpnIkeCrypt, staVpnAhSpi=staVpnAhSpi, staConfLoginerr=staConfLoginerr, setInteEthernAss=setInteEthernAss, setCompComOpeEntry=setCompComOpeEntry, staUsbDevAddress=staUsbDevAddress, setConfAdminea=setConfAdminea, staCertSceCasExpsnm=staCertSceCasExpsnm, setInteDslTable=setInteDslTable, staIproHostbloSrc=staIproHostbloSrc, staIproLogtablThre=staIproLogtablThre, staHardMode=staHardMode, staVpnRules=staVpnRules, staIproHostbloTable=staIproHostbloTable, setCertCrlCrl=setCertCrlCrl, staTcpiDns=staTcpiDns, staIproRipDynlRxfi=staIproRipDynlRxfi, setHttpRolActionsDes=setHttpRolActionsDes, staIproLogtablSrcp=staIproLogtablSrcp, setWanDialuppB2d=setWanDialuppB2d, trpVPNConn=trpVPNConn, staPptpConEntry=staPptpConEntry, staLanPackTxm=staLanPackTxm, setCompComComEntry=setCompComComEntry, staLanDele=staLanDele, setWanPollingPeer=setWanPollingPeer, staAccoCurConnt=staAccoCurConnt, staWanActionsLocTable=staWanActionsLocTable, setPerf=setPerf, staAccoCurConne=staAccoCurConne, setIpro1nnIpsectablEntry=setIpro1nnIpsectablEntry, staChanNumbe=staChanNumbe, staIproRipWildRtgt=staIproRipWildRtgt, staQueuSnmpque=staQueuSnmpque, setPerfRttmonsAveragejittersd=setPerfRttmonsAveragejittersd, setConfPredefaEntry=setConfPredefaEntry, staTcpiNetwEntry=staTcpiNetwEntry, staTcpiDhcpDhcptNet=staTcpiDhcpDhcptNet, setVpnAdditionalgRtgtag1=setVpnAdditionalgRtgtag1, staTcpiIpLanfragmentationer=staTcpiIpLanfragmentationer, staIproEstabliTable=staIproEstabliTable, staUsbDevPower=staUsbDevPower, staConfEventlogTable=staConfEventlogTable, setTcpiLoopbEntry=setTcpiLoopbEntry, staLanErroRxalig=staLanErroRxalig, setNetbSerEntry=setNetbSerEntry, staTcpiTftpLantxd=staTcpiTftpLantxd, setMail=setMail, setEchoAccNet=setEchoAccNet, setWanActiontActio=setWanActiontActio, staSnmpEveTable=staSnmpEveTable, staCertSceNumca=staCertSceNumca, setDnsDnslTable=setDnsDnslTable, staPppMlRxfragm=staPppMlRxfragm, setCertSce=setCertSce, setNetbPeeNam=setNetbPeeNam, staIproLanttle=staIproLanttle, staEthePortsMdi=staEthePortsMdi, setVpnAdditionalgRtgtag12=setVpnAdditionalgRtgtag12, sta=sta, staVpnIpcompCrypt=staVpnIpcompCrypt, staModeHardwareresets=staModeHardwareresets, setCertSceRei=setCertSceRei, setConfAccesstEntry=setConfAccesstEntry, setIpro1nnServicetaEntry=setIpro1nnServicetaEntry, staTcpiSyslLasMes=staTcpiSyslLasMes, staVpnAhMaxkb=staVpnAhMaxkb, staIsdnSigLay=staIsdnSigLay, staCertSceCasIssued=staCertSceCasIssued, setIproVrrVrrEntry=setIproVrrVrrEntry, setLanMacadd=setLanMacadd, setTcpiAliveFailli=setTcpiAliveFailli, staLanPackTxu=staLanPackTxu, staTcpiHttpAgentlAge=staTcpiHttpAgentlAge, staIproRipDynlVlan=staIproRipDynlVlan, othMan=othMan, staVpnEspPeer=staVpnEspPeer, staCompComNetworksDevicet=staCompComNetworksDevicet, setNetbHosNet=setNetbHosNet, staTcpiTftpWanrxb=staTcpiTftpWanrxb, staTcpiArpTablIpa=staTcpiArpTablIpa, staCharTablebuIfc=staCharTablebuIfc, setVpnProposalsIkeproIkeproposal2=setVpnProposalsIkeproIkeproposal2, staTimeDstMin=staTimeDstMin, staIproActiproPee=staIproActiproPee, staTcpiRadiAccountinPendingreques=staTcpiRadiAccountinPendingreques, staIproEstabliDpo=staIproEstabliDpo, setLancIntFor=setLancIntFor, setCompDevDev=setCompDevDev, staDslPacRxm=staDslPacRxm, setPerfRttmoneDestinationa=setPerfRttmoneDestinationa, staIproConnectFlag=staIproConnectFlag, staLayeLay2=staLayeLay2, setConfTelnets=setConfTelnets, staTcpiNetwVla=staTcpiNetwVla, staVpnIpcompMode=staVpnIpcompMode, staIproVrrpVirPor=staIproVrrpVirPor, staPppLcpTxdiscardreq=staPppLcpTxdiscardreq, staTcpiTftpLantxr=staTcpiTftpLantxr, staIproRipDynwRxfi=staIproRipDynwRxfi, staIproActiproRtg=staIproActiproRtg, staTcpiHttpActiveLocalrt=staTcpiHttpActiveLocalrt, setInteS0Maxi=setInteS0Maxi, setWanPptppeePor=setWanPptppeePor, setInteMobileSca=setInteMobileSca, setIpro1nnIpsectablLchi=setIpro1nnIpsectablLchi, staPppLcpTxconfigack=staPppLcpTxconfigack)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setCertSceCac=setCertSceCac, setTcpiArptaPee=setTcpiArptaPee, setWanPollingLoopbackad=setWanPollingLoopbackad, setCertSceCerDevicece=setCertSceCerDevicece, staConfLoginloc=staConfLoginloc, staTcpiRadiAccountinTable=staTcpiRadiAccountinTable, staCompComComportsDat=staCompComComportsDat, setVpnProposalsIkeproIkeproposal1=setVpnProposalsIkeproIkeproposal1, setConfUpdatecLastfir=setConfUpdatecLastfir, staTcpiIp=staTcpiIp, setDhcpUse=setDhcpUse, setIproFirPortbFilt=setIproFirPortbFilt, trpStatChan=trpStatChan, staIproVrrpVirEntry=staIproVrrpVirEntry, setSnmpMonitortPee=setSnmpMonitortPee, setDnsServHos=setDnsServHos, staPppPppCcp=staPppPppCcp, staLanPackEntry=staLanPackEntry, staTcpiTftpWantxa=staTcpiTftpWantxa, setWanBackupd=setWanBackupd, staTcpiDhcpNetwoEntry=staTcpiDhcpNetwoEntry, staIproRipDynwRtgt=staIproRipDynwRtgt, setNtpBcm=setNtpBcm, staIproRipVrrpEntry=staIproRipVrrpEntry, staDslPppRxprot=staDslPppRxprot, setNetbBroBro=setNetbBroBro, staLayeL1pa=staLayeL1pa, setWanManualdDis=setWanManualdDis, staTcpiNetbServerOsv=staTcpiNetbServerOsv, staVpnConnectHmacal=staVpnConnectHmacal, staIsdnSigManErrN=staIsdnSigManErrN, staAccoTimEntry=staAccoTimEntry, setIpro1nnIcmpaging=setIpro1nnIcmpaging, staVpnIkeMaxkb=staVpnIkeMaxkb, staDhcpLanDnsde=staDhcpLanDnsde, staCompComConnectiServerr=staCompComConnectiServerr, staLanPackRxb=staLanPackRxb, staPppPapRxdis=staPppPapRxdis, staUsbDevSpeed=staUsbDevSpeed, staUsbDevBus=staUsbDevBus, staTcpiNetbBrowsePee=staTcpiNetbBrowsePee, staLanByteBytesm=staLanByteBytesm, staLanErroEntry=staLanErroEntry, staTcpiTftpWantxd=staTcpiTftpWantxd, staConfLl2mRxun=staConfLl2mRxun, staConfEventlogInfo2=staConfEventlogInfo2, staVpnIkeSoftk=staVpnIkeSoftk, setIproFirOpera=setIproFirOpera, setDhcpNetTable=setDhcpNetTable, staTcpiDhcpRxdec=staTcpiDhcpRxdec, staIproFilterlIdx=staIproFilterlIdx, setCertSceCerEntry=setCertSceCerEntry, setTcpiNetwoIpa=setTcpiNetwoIpa, staCompComConnectiDevicet=staCompComConnectiDevicet, staPppPppIpc=staPppPppIpc, setWanActiontLockt=setWanActiontLockt, setMailPop3p=setMailPop3p, staIproLanrx=staIproLanrx, setAccoLasTable=setAccoLasTable, setDhcpDef=setDhcpDef, staVpnIpcompSpi=staVpnIpcompSpi, setHttpRolVariablesIde=setHttpRolVariablesIde, staIproOpenporProt=staIproOpenporProt, staCertSceRasIdx=staCertSceRasIdx, setPerfRttmonsJittermaxposds=setPerfRttmonsJittermaxposds, staIproRipIpriRtg=staIproRipIpriRtg, staIproRipFiltNam=staIproRipFiltNam, setCertCrlRef=setCertCrlRef, staPppMlBundlec=staPppMlBundlec, setCharResetbu=setCharResetbu, setIproFirConneTime=setIproFirConneTime, setConfLl2m=setConfLl2m, setIproFirIdsac=setIproFirIdsac, staIproLogtablActi=staIproLogtablActi, setPppoNamSht=setPppoNamSht, setVpnAdditionalgBeginwith=setVpnAdditionalgBeginwith, setNtpRqaRqa=setNtpRqaRqa, setPrinAccTable=setPrinAccTable, staPppRxoIpcNbnsb=staPppRxoIpcNbnsb, staVpnIkeDstpo=staVpnIkeDstpo, setCertSceCasCasignaturealg=setCertSceCasCasignaturealg, staTcpiTftpLanrxd=staTcpiTftpLanrxd, staIproConnectSrcr=staIproConnectSrcr, setIproRip=setIproRip, setWanActiontEntry=setWanActiontEntry, staPppCbcTxres=staPppCbcTxres, setIproFirFilteSrcm=setIproFirFilteSrcm, staInfoSta=staInfoSta, staIproRipWildRipt=staIproRipWildRipt, staCompComConnectiTable=staCompComConnectiTable, setVpnProposalsIkeLifetimek=setVpnProposalsIkeLifetimek, setInteModemAnswerc=setInteModemAnswerc, staTcpiIcmpLanr=staTcpiIcmpLanr, setIproFirOpenpTime=setIproFirOpenpTime, staWanMtuMtu=staWanMtuMtu, staCertCrlCrlStatus=staCertCrlCrlStatus, staLanErroLateco=staLanErroLateco, staTacaAutho=staTacaAutho, staIsdnSigLayLapCon=staIsdnSigLayLapCon, staIproVrrpVirBac=staIproVrrpVirBac, staTcpiArpLant=staTcpiArpLant, setDhcpAddOptionv=setDhcpAddOptionv, staWanActionsLocEntry=staWanActionsLocEntry, setWanRouteriTable=setWanRouteriTable, staConfEventlogSyste=staConfEventlogSyste, setIproNnnMapp=setIproNnnMapp, setIproRipLanRipt=setIproRipLanRipt, setVpnProposalsIkeproIkeproposall=setVpnProposalsIkeproIkeproposall, staCertCrlCrlExpire=staCertCrlCrlExpire, staIsdnFraS0Sta=staIsdnFraS0Sta, setNetbSerPee=setNetbSerPee, staWanConnectio=staWanConnectio, setMailBuffe=setMailBuffe, staLanByteBytest=staLanByteBytest, staCertCrlCrlIssued=staCertCrlCrlIssued, setAccoTimEntry=setAccoTimEntry, staCertSceCertsIsssnmp=staCertSceCertsIsssnmp, setLan=setLan, setIproFirOpenpProt=setIproFirOpenpProt, setPppoPorPor=setPppoPorPor, staCompDevDevicet=staCompDevDevicet, setInteEthernPri=setInteEthernPri, setAccoTimDayo=setAccoTimDayo, setPerfRttmonsRttsum=setPerfRttmonsRttsum, staEthePortsLin=staEthePortsLin, setWanRoundroHea=setWanRoundroHea, staIproLanloca=staIproLanloca, staCompDevDevice=staCompDevDevice, staVpnIpcompPeer=staVpnIpcompPeer, setDhcpNetBroadcasta=setDhcpNetBroadcasta, staIsdnSigManDinTei=staIsdnSigManDinTei, staHardSwve=staHardSwve, setDnsNetb=setDnsNetb, setConfSshport=setConfSshport, setNtpBci=setNtpBci, setTcpiArptaMac=setTcpiArptaMac, staIproServiceService=staIproServiceService, staCompDevIndex=staCompDevIndex, setConfPredefaTable=setConfPredefaTable, setLancPriTable=setLancPriTable, staIproRipDynlRips=staIproRipDynlRips, staIproFilterlSrca=staIproFilterlSrca, staConfFeaturesEntry=staConfFeaturesEntry, staPppPppBac=staPppPppBac, setSnmpIptrapsEntry=setSnmpIptrapsEntry, setIproFirActioNam=setIproFirActioNam, setIproFirConneDsta=setIproFirConneDsta, staIproRipDynlEntry=staIproRipDynlEntry, staIproConnectTime=staIproConnectTime, setNetbWat=setNetbWat, staPppIpc=staPppIpc, staIproServiceEntry=staIproServiceEntry, staMailSen=staMailSen, staVlan=staVlan, staVlanPorEntry=staVlanPorEntry, setPppoNamMac=setPppoNamMac, setPerfRttmonsAveragejitterds=setPerfRttmonsAveragejitterds, staPppCcpRxconfigack=staPppCcpRxconfigack, staTcpiNetbPeersNam=staTcpiNetbPeersNam, staTimeSou=staTimeSou, staChanVpnco=staChanVpnco, staQueuLanheap=staQueuLanheap, staIsdnSigManErrM=staIsdnSigManErrM, setDnsServPor=setDnsServPor, setVpnProposalsIpsecpIpsecproposal1=setVpnProposalsIpsecpIpsecproposal1, setVpnProposalsIkeIkecrypta=setVpnProposalsIkeIkecrypta, staCharDeletev=staCharDeletev, setSysl=setSysl, staAccoTimSys=staAccoTimSys, setInteEthernMdi=setInteEthernMdi, staTcpiRadiAccountinDropped=staTcpiRadiAccountinDropped, staTcpiNetbHostliTim=staTcpiNetbHostliTim, staCompComBytecounFullname=staCompComBytecounFullname, setIpro1nnServicetaPeer=setIpro1nnServicetaPeer, setHttpHtt=setHttpHtt, setIproLoaBunBundlepeer1=setIproLoaBunBundlepeer1, setConfAsserta=setConfAsserta, setConfAccesstTftp=setConfAccesstTftp, setInteEthernPor=setInteEthernPor, setWanRoundroTable=setWanRoundroTable, staConfLl2mServRxm=staConfLl2mServRxm, staDslIntIfc=staDslIntIfc, setWanRouteriTyp=setWanRouteriTyp, setAccoTimDay=setAccoTimDay, staModeTemperaturesta=staModeTemperaturesta, staTcpiIpWanfragmentations=staTcpiIpWanfragmentations, PYSNMP_MODULE_ID=lancom_1711_plus, staIproLogtablFilt=staIproLogtablFilt, setVpnAdditionalgRemotegateway11=setVpnAdditionalgRemotegateway11, setWanPptppeeIpa=setWanPptppeeIpa, staPppRxoLcpAut=staPppRxoLcpAut, setCertSceSce=setCertSceSce, staEtheCabletestrRxs=staEtheCabletestrRxs, staTcpiDhcpTxack=staTcpiDhcpTxack, staHardBoar=staHardBoar, setWanIplistTable=setWanIplistTable, staIproServicePackettx=staIproServicePackettx, staVpnAhDesta=staVpnAhDesta, staDslErrRxtool=staDslErrRxtool, staIproVrrpVirPee=staIproVrrpVirPee, staIproLoadbalConTable=staIproLoadbalConTable, setConfCrashme=setConfCrashme, staWanBytetransCrx=staWanBytetransCrx, setIproFirRulesPro=setIproFirRulesPro, setWanScriptsPee=setWanScriptsPee, staModeHistoryTable=staModeHistoryTable, setIpro1nnFragmenta=setIpro1nnFragmenta, staIsdnSigManErrH=staIsdnSigManErrH, staCharSpareds=staCharSpareds, staMailCle=staMailCle, setHttpRolTitle=setHttpRolTitle, staLan=staLan, setVpnAdditionalgRtgtag2=setVpnAdditionalgRtgtag2, setCompComOpeTable=setCompComOpeTable, traps=traps, setDnsDnslIpa=setDnsDnslIpa, setConfResetbu=setConfResetbu, staTcpiDhcpNetwoLanifc=staTcpiDhcpNetwoLanifc, setIproFirRulesVpn=setIproFirRulesVpn, staCertSceNumce=staCertSceNumce, staTcpiIcmp=staTcpiIcmp, staPppLcpRxechoreques=staPppLcpRxechoreques, staModeTemperaturedeg=staModeTemperaturedeg, setPrinPriTable=setPrinPriTable, staCharRouterd=staCharRouterd, setConfCrontabMinu=setConfCrontabMinu, setIpro1nnIpsectablRclo=setIpro1nnIpsectablRclo, staPppCbc=staPppCbc, staTcpiHttpAgentlEntry=staTcpiHttpAgentlEntry, staConnIfc=staConnIfc, setSnmpMonitortTable=setSnmpMonitortTable, staIproVrrpMacEntry=staIproVrrpMacEntry, setHttpRolVariablesTable=setHttpRolVariablesTable, setAccoCurConnt=setAccoCurConnt, staCertSceCertsEntry=staCertSceCertsEntry, staCertSceCasExpire=staCertSceCasExpire, setEchoTcp=setEchoTcp, setCharTablebuIfc=setCharTablebuIfc, staAccoAccUsern=staAccoAccUsern, setAccoLasMacad=setAccoLasMacad, staPppCbcTxreq=staPppCbcTxreq, staWanBytetransEntry=staWanBytetransEntry, staTcpiNetbPeersBac=staTcpiNetbPeersBac, staConfLl2mDele=staConfLl2mDele, setTcpiArptaEth=setTcpiArptaEth, staTcpiArpTablLas=staTcpiArpTablLas, setIproRipIprRtg=setIproRipIprRtg, setVpnAdditionalgRemotegateway3=setVpnAdditionalgRemotegateway3, staDslPacTxb=staDslPacTxb, staVpnEspTable=staVpnEspTable, setIproFirRulesSou=setIproFirRulesSou, setInteModemEchooff=setInteModemEchooff, setNetbGroFla=setNetbGroFla, staCertSceCertsExtended=staCertSceCertsExtended)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staTcpiNetbPeersTable=staTcpiNetbPeersTable, staCharTimetabBudgetmi=staCharTimetabBudgetmi, setDnsDynaPor=setDnsDynaPor, staVpnConnectMode=staVpnConnectMode, staDhcpLanTable=staDhcpLanTable, setIproNnnDsts=setIproNnnDsts, staIproWantx=staIproWantx, staIproProtocoPro=staIproProtocoPro, staVlanNetTable=staVlanNetTable, staTcpiRadiAccountinIpaddress=staTcpiRadiAccountinIpaddress, staIproRipVrrpTable=staIproRipVrrpTable, staIproLoadbalConTcp=staIproLoadbalConTcp, setPerfRttmoneIndex=setPerfRttmoneIndex, setWanScriptsTable=setWanScriptsTable, setPerfRttmoneProtocol=setPerfRttmoneProtocol, setWanIncominEntry=setWanIncominEntry, setVlanNetNam=setVlanNetNam, staPppLcpTxterminatea=staPppLcpTxterminatea, setCharTimetabIfc=setCharTimetabIfc, setIproRipIprDis=setIproRipIprDis, setInteDslOpe=setInteDslOpe, staDslPacRxu=staDslPacRxu, setIproFirFilteActi=setIproFirFilteActi, staTcpiIpWanfragmentationsf=staTcpiIpWanfragmentationsf, setDnsFiltIdx=setDnsFiltIdx, setVpnProposalsIpsecEncapsmod=setVpnProposalsIpsecEncapsmod, setSnmpDeletemo=setSnmpDeletemo, trpUplFailBadDev=trpUplFailBadDev, staIproFilterlPrio=staIproFilterlPrio, setDhcpAddEntry=setDhcpAddEntry, setWanIplistIpadd=setWanIplistIpadd, staDslPpp=staDslPpp, setDhcpHosIma=setDhcpHosIma, setInteMobileSys=setInteMobileSys, setPppoOpe=setPppoOpe, staModePort=staModePort, setIproNnnIdx=setIproNnnIdx, staCharTimetabTable=staCharTimetabTable, staTcpiDhcpNetwoServerflag=staTcpiDhcpNetwoServerflag, setAccoLasUsern=setAccoLasUsern, staVpnEspMaxse=staVpnEspMaxse, firTabInd=firTabInd, staPptpConPeera=staPptpConPeera, staConfLl2mRxmu=staConfLl2mRxmu, staPptpConLaste=staPptpConLaste, staIproRipDynwRips=staIproRipDynwRips, setWanCallbac=setWanCallbac, staAccoLasTable=staAccoLasTable, staWanActionsLocInd=staWanActionsLocInd, setIproIprDis=setIproIprDis, staPppTxo=staPppTxo, setIproRipWanPeer=setIproRipWanPeer, setNetbBroTim=setNetbBroTim, staIproFilterlSst=staIproFilterlSst, staDhcpWanDomai=staDhcpWanDomai, trpVrrp=trpVrrp, setWanActiontCheck=setWanActiontCheck, staTcpiTftp=staTcpiTftp, staPppBacTxcallrespons=staPppBacTxcallrespons, staCertSceCertsTable=staCertSceCertsTable, staTcpiHttpHttpno=staTcpiHttpHttpno, staCertSceCasIssuer=staCertSceCasIssuer, setSnmpMonitortLoo=setSnmpMonitortLoo, setIproFirFilteSend=setIproFirFilteSend, setTacaAuthorisation=setTacaAuthorisation, staIproRipWansRfc2=staIproRipWansRfc2, staTimeIsdUnits=staTimeIsdUnits, staPppBacRxdiscarded=staPppBacRxdiscarded, staIproRipWansRxfi=staIproRipWansRxfi, staIproRipWansTxfi=staIproRipWansTxfi, staPppIpcRxconfigrequ=staPppIpcRxconfigrequ, staTcpiDnsHitlIpa=staTcpiDnsHitlIpa, staPppCbcRxack=staPppCbcRxack, staIproVrrpEveVri=staIproVrrpEveVri, setIproFirOpenpDsta=setIproFirOpenpDsta, staModeInputpuk=staModeInputpuk, staTimeDstTable=staTimeDstTable, setAccoTimMinu=setAccoTimMinu, setConfCrontabComm=setConfCrontabComm, setCertSceCasIdentifier=setCertSceCasIdentifier, staVpnConnectShtime=staVpnConnectShtime, staTcpiHttpHttpsa=staTcpiHttpHttpsa, setWanDslbroaSht=setWanDslbroaSht, setNtpRqi=setNtpRqi, staIproRipDynlRtgt=staIproRipDynlRtgt, staModeNetworklistSta=staModeNetworklistSta, setVpnEstablishsa=setVpnEstablishsa, staTcpiNetbGrouplPee=staTcpiNetbGrouplPee, setWanActiontHostn=setWanActiontHostn, setWanDslbroaSer=setWanDslbroaSer, setConfCrontabActi=setConfCrontabActi, staTcpiArpTablMac=staTcpiArpTablMac, setIproRipIprIpn=setIproRipIprIpn, staTcpiTcpWanrx=staTcpiTcpWanrx, staIproLogtablDstp=staIproLogtablDstp, setIproFirHostbTable=setIproFirHostbTable, staIproRipWansTable=staIproRipWansTable, setAccoCurEntry=setAccoCurEntry, setDhcpNetNbnsbackup=setDhcpNetNbnsbackup, setConfAntithe=setConfAntithe, staCharTablebuEntry=staCharTablebuEntry, staCertSceCasEntry=staCertSceCasEntry, staVpnIpcompDesta=staVpnIpcompDesta, staRemoRemot=staRemoRemot, staLanByteIfc=staLanByteIfc, staConfAntithefCalla=staConfAntithefCalla, staCertSceRasIssuer=staCertSceRasIssuer, setIproTagRtg=setIproTagRtg, staTcpiDnsWanr=staTcpiDnsWanr, staPppMlRxseqre=staPppMlRxseqre, setPrinPriBid=setPrinPriBid, staTcpiNetbConfli=staTcpiNetbConfli, staWanThroughpuRxsc=staWanThroughpuRxsc, staLanByteTxbyte=staLanByteTxbyte, staIproRipIpriIpa=staIproRipIpriIpa, staCompComComportsEntry=staCompComComportsEntry, firVerEntry=firVerEntry, staVpnIpcompMaxse=staVpnIpcompMaxse, staCurr=staCurr, setDnsDnslHos=setDnsDnslHos, setTcpiArptaLas=setTcpiArptaLas, staConfEventlogEvent=staConfEventlogEvent, staInfoB2d=staInfoB2d, staPppoConSta=staPppoConSta, setIproDefPee=setIproDefPee, staCharTablebuSpa=staCharTablebuSpa, staTcpiNetbPnodes=staTcpiNetbPnodes, staLcrProFai=staLcrProFai, setAccoLasRxkby=setAccoLasRxkby, setVpnProposalsIpsecpIpsecproposal5=setVpnProposalsIpsecpIpsecproposal5, setNetbBroNet=setNetbBroNet, staPptpTcp=staPptpTcp, staPppPapTxret=staPppPapTxret, staVpnConnectCompra=staVpnConnectCompra, setCompComOpePor=setCompComOpePor, setLcrTimTable=setLcrTimTable, staIproArperro=staIproArperro, staTcpiTftpLantxe=staTcpiTftpLantxe, setVpnLayerEntry=setVpnLayerEntry, staLanInteIfc=staLanInteIfc, setLanTracem=setLanTracem, staPppChaTxfai=staPppChaTxfai, setVpnVpnpeersDyna=setVpnVpnpeersDyna, staVpnAhMode=staVpnAhMode, staTcpiRadiAuthenticAccessacc=staTcpiRadiAuthenticAccessacc, staAccoLasConnt=staAccoLasConnt, setNetbSerHos=setNetbSerHos, setTimeTimez=setTimeTimez, setAccoTimTable=setAccoTimTable, staDslErrNicerr=staDslErrNicerr, staWanThroughpuIfc=staWanThroughpuIfc, setAccoCurMacad=setAccoCurMacad, staTcpiHttpActiveNumconn=staTcpiHttpActiveNumconn, staEthePortsPor=staEthePortsPor, setIproFirDosac=setIproFirDosac, setHttpShoTable=setHttpShoTable, setPppoPorEna=setPppoPorEna, setWanActiontOwner=setWanActiontOwner, staTcpiIpLanserviceerrors=staTcpiIpLanserviceerrors, staVpnConnectPeer=staVpnConnectPeer, staCharRouteru=staCharRouteru, staIproRipLansPois=staIproRipLansPois, staIproProtocoLan=staIproProtocoLan, staLanErroTxdefe=staLanErroTxdefe, staPppIpcTxcodereject=staPppIpcTxcodereject, staIproRipLansRips=staIproRipLansRips, setIproFirOpenpDstp=setIproFirOpenpDstp, staUsbDevDriver=staUsbDevDriver, setNetbBroGro=setNetbBroGro, setSnmpMonitortMac=setSnmpMonitortMac, staTcpiNetbBrowseBro=staTcpiNetbBrowseBro, staTcpiNetbServerIpa=staTcpiNetbServerIpa, setIproFirRulesTable=setIproFirRulesTable, setVpnProposalsIpsecEspauthal=setVpnProposalsIpsecEspauthal, setInteModemAtpollc=setInteModemAtpollc, setPerfRttmonsJittermaxnegds=setPerfRttmonsJittermaxnegds, setInteMobileProSele=setInteMobileProSele, setLcrTimInd=setLcrTimInd, staCertSceCertsKeyusage=staCertSceCertsKeyusage, staEtheCabletestrTxs=staEtheCabletestrTxs, setIproFirFilteEntry=setIproFirFilteEntry, staPppRxoLcpPfc=staPppRxoLcpPfc, staPppTxoLcpAcf=staPppTxoLcpAcf, staIproRipDynlTable=staIproRipDynlTable, staCharTimetabMinutesa=staCharTimetabMinutesa, setDhcp=setDhcp, setWanIplistNbnsd=setWanIplistNbnsd, setCertSceCasApplication=setCertSceCasApplication, setCertSceCerKeyusage=setCertSceCerKeyusage, staEtheCabletestrEntry=staEtheCabletestrEntry, setIproRipWanEntry=setIproRipWanEntry, setTimeDstclMin=setTimeDstclMin, setTimeDstclHou=setTimeDstclHou, setAccoLasConne=setAccoLasConne, staIproLoadbal=staIproLoadbal, staCompDevFirmwar=staCompDevFirmwar, setVlanNetPor=setVlanNetPor, staQueuTcpqueu=staQueuTcpqueu, staTcpiNetbNetworNet=staTcpiNetbNetworNet, staTcpiHttpHttpac=staTcpiHttpHttpac, staTcpiTcpLanrx=staTcpiTcpLanrx, setNetbGroTable=setNetbGroTable, setConfAntitheMet=setConfAntitheMet, setIproRipWanMasq=setIproRipWanMasq, staIproEstabliDes=staIproEstabliDes, staTcpiHttpActiveEntry=staTcpiHttpActiveEntry, staTcpiNetbHostliNet=staTcpiNetbHostliNet, staTcpiIcmpWans=staTcpiIcmpWans, setInteModemInitans=setInteModemInitans, setConfAccesstSnmp=setConfAccesstSnmp, staTcpiNetbServerGro=staTcpiNetbServerGro, setIproFirDenys=setIproFirDenys, staIproFilterlDstm=staIproFilterlDstm, staTcpiDhcpServe=staTcpiDhcpServe, staPptpConState=staPptpConState, staVpnEspSofts=staVpnEspSofts, staCompDevState=staCompDevState, staModeDatarate=staModeDatarate, setPrinPriLpd=setPrinPriLpd, staConfLl2mClieRxb=staConfLl2mClieRxb, setConfUpdatecRespons=setConfUpdatecRespons, staIsdnSigLayLapTable=staIsdnSigLayLapTable, staVpnConnectNatdet=staVpnConnectNatdet, setVpnVpnpeersTable=setVpnVpnpeersTable, setAccoDel=setAccoDel, staChanCause=staChanCause, staConfFeaturesTable=staConfFeaturesTable, setIproRipFilTable=setIproRipFilTable, setDnsSubdTable=setDnsSubdTable, staDhcpLanIfc=staDhcpLanIfc, staDslErrRxtoos=staDslErrRxtoos, setCompComComReadyd=setCompComComReadyd, setDhcpDhcEntry=setDhcpDhcEntry, staIsdnSigManErrO=staIsdnSigManErrO, setLanSpareh=setLanSpareh, staTcpiSyslLasEntry=staTcpiSyslLasEntry, staVpnIkeSrcad=staVpnIkeSrcad, setAccoSor=setAccoSor, setVpnIsakmpTimTable=setVpnIsakmpTimTable, staUsbDevParent=staUsbDevParent, staTcpiDhcpDisca=staTcpiDhcpDisca, staIproConnectSrca=staIproConnectSrca, setIproRipLanDftr=setIproRipLanDftr, setPerfRttmoneTable=setPerfRttmoneTable, setVpnProposalsIpsecEspcrypta=setVpnProposalsIpsecEspcrypta, setPrinPriEntry=setPrinPriEntry, setIpro1nnServicetaWanadd=setIpro1nnServicetaWanadd, staIproFilterlRtgt=staIproFilterlRtgt, setSnmpSendtrap=setSnmpSendtrap, staTcpiTftpWanrxo=staTcpiTftpWanrxo, staAccoCurMacad=staAccoCurMacad, setTcpiLoopbTable=setTcpiLoopbTable, trpCnfDnlSucc=trpCnfDnlSucc, setPerfRttmoneEntry=setPerfRttmoneEntry)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staCompComNetworksEntry=staCompComNetworksEntry, setCompComComHandsh=setCompComComHandsh, staTcpiSyslLasTable=staTcpiSyslLasTable, setIproSen=setIproSen, staTimeIsdInfoe=staTimeIsdInfoe, staIproQosTxfav=staIproQosTxfav, setIproRipLanTable=setIproRipLanTable, staSnmp=staSnmp, staPppChaDelet=staPppChaDelet, staWanPackettraTxr=staWanPackettraTxr, setVpnCertificateIkeLocalident=setVpnCertificateIkeLocalident, staIsdnSigManErrA=staIsdnSigManErrA, staDslPppRxpads=staDslPppRxpads, staPppCha=staPppCha, setNetbHosPee=setNetbHosPee, staIproQosIfc=staIproQosIfc, setIproRipIprPee=setIproRipIprPee, setCertSceCerSubject=setCertSceCerSubject, setIproVrrInt=setIproVrrInt, setIproRipWanPois=setIproRipWanPois, staCertCrl=staCertCrl, staIproLoadbalConBun=staIproLoadbalConBun, staTimeDay=staTimeDay, setPerfRttmonsPacketlossds=setPerfRttmonsPacketlossds, staTcpiRadiAccountinMalformedacco=staTcpiRadiAccountinMalformedacco, staModeHistoryReg=staModeHistoryReg, staIproRipWansRipa=staIproRipWansRipa, setName=setName, staTcpiTftpWanrxd=staTcpiTftpWanrxd, trpIpFwFlt=trpIpFwFlt, staWanWanheappa=staWanWanheappa, setPerfRttmonsTable=setPerfRttmonsTable, staVpnAhHasha=staVpnAhHasha, setDhcpDhcTim=setDhcpDhcTim, staIproActiproIpn=staIproActiproIpn, staWanErrorsRxl2=staWanErrorsRxl2, setVpnSimplecertr=setVpnSimplecertr, staAccoAccTxkby=staAccoAccTxkby, staCallEntry=staCallEntry, setDnsDoma=setDnsDoma, staVpnConnectClient=staVpnConnectClient, staDslPacTxp=staDslPacTxp, setDnsReso=setDnsReso, staTcpiTcpWanser=staTcpiTcpWanser, setCertCrlVal=setCertCrlVal, staWanActionsActEntry=staWanActionsActEntry, setHttpFon=setHttpFon, staIproEstabliSrc=staIproEstabliSrc, setInteDslExt=setInteDslExt, staTcpiDhcpNetwoTable=staTcpiDhcpNetwoTable, staVpnConnectHashal=staVpnConnectHashal, setIproFirConneTable=setIproFirConneTable, staIproRipDynwTable=staIproRipDynwTable, setDhcpDhcLan=setDhcpDhcLan, setWanPptppeePee=setWanPptppeePee, setIproFirRulesCom=setIproFirRulesCom, staLanByteEntry=staLanByteEntry, staIsdnSigMan=staIsdnSigMan, setVpnProposalsIkeproIkeproposal5=setVpnProposalsIkeproIkeproposal5, staTcpiTcpLanche=staTcpiTcpLanche, staTcpiNetbBrowseIpa=staTcpiNetbBrowseIpa, setAccoAccConne=setAccoAccConne, staPppTxoIpcNbnsd=staPppTxoIpcNbnsd, setConfMaximum=setConfMaximum, staTcpiNetwTable=staTcpiNetwTable, staLanPackIfc=staLanPackIfc, staPppChaRxres=staPppChaRxres, staTcpiIpWanchecksumerrors=staTcpiIpWanchecksumerrors, staPppPapRxreq=staPppPapRxreq, setIpro1nnServicetaActive=setIpro1nnServicetaActive, setWanIncominTable=setWanIncominTable, staIproActiproTable=staIproActiproTable, staPppBacRxlinkdropres=staPppBacRxlinkdropres, staIproRipDynlRipt=staIproRipDynlRipt, staIsdnSigManDinPro=staIsdnSigManDinPro, setHttpSta=setHttpSta, setInteModemmIfc=setInteModemmIfc, setNetbBroIpa=setNetbBroIpa, setPrinPriPri=setPrinPriPri, setIproRipR1m=setIproRipR1m, staIproLogtablLimi=staIproLogtablLimi, setInteModemCycleti=setInteModemCycleti, staIsdnDel=staIsdnDel, staLanErroTxerro=staLanErroTxerro, staPppLcpRxconfigack=staPppLcpRxconfigack, staTcpiIpWantx=staTcpiIpWantx, staTcpiNetbServerNet=staTcpiNetbServerNet, staTcpiIcmpLant=staTcpiIcmpLant, setConfCrontabMont=setConfCrontabMont, staLanErroExcess=staLanErroExcess, setLcrTimSto=setLcrTimSto, setIproRipLanProp=setIproRipLanProp, staCompComComportsFul=staCompComComportsFul, setNetbPeeTyp=setNetbPeeTyp, staIproRipVrrpRou=staIproRipVrrpRou, setWanBackuppPee=setWanBackuppPee, setTcpiNetwoTyp=setTcpiNetwoTyp, setSnmpComment3=setSnmpComment3, staCertSceDelet=staCertSceDelet, setLancIntOpe=setLancIntOpe, staDslErrCollis=staDslErrCollis, staPppoConCon=staPppoConCon, setSyslPor=setSyslPor, setVpnAdditionalgRtgtag3=setVpnAdditionalgRtgtag3, setDhcpDhcMac=setDhcpDhcMac, setWanPptppeeSht=setWanPptppeeSht, setNetbSerTable=setNetbSerTable, setIproRipWanRips=setIproRipWanRips, staIproRipWansMasq=staIproRipWansMasq, staConfLl2mRxbr=staConfLl2mRxbr, setLancAccEntry=setLancAccEntry, setHttpShoDev=setHttpShoDev, setNetbBroRtg=setNetbBroRtg, staDslPppRxdata=staDslPppRxdata, staEthePortsCon=staEthePortsCon, setCompWanDevDev=setCompWanDevDev, setVpnVpnpeersRule=setVpnVpnpeersRule, setRadi=setRadi, staPppCcpTxconfigack=staPppCcpTxconfigack, setTimeTimec=setTimeTimec, staWanBytetransTable=staWanBytetransTable, setDnsOper=setDnsOper, setEchoAccIpa=setEchoAccIpa, staTcpiNetbGrouplFla=staTcpiNetbGrouplFla, staTcpiHttpActiveLocalpo=staTcpiHttpActiveLocalpo, setVpnLayerIpse=setVpnLayerIpse, setInteS0Ifc=setInteS0Ifc, staIproRipWildDftr=staIproRipWildDftr, setConfAdminsAdm=setConfAdminsAdm, staTcpiDhcpMacco=staTcpiDhcpMacco, setCompDevSer=setCompDevSer, setIproEnd=setIproEnd, staFileConSiz=staFileConSiz, setHttpRolActionsEntry=setHttpRolActionsEntry, staWanDeleteval=staWanDeleteval, staTcpiNetbGrouplTim=staTcpiNetbGrouplTim, setAccoAccEntry=setAccoAccEntry, setTcpiArptaTable=setTcpiArptaTable, staTcpiNetbBrowseTim=staTcpiNetbBrowseTim, setDnsServTable=setDnsServTable, staTcpiNetbNetworEntry=staTcpiNetbNetworEntry, staPptpConShtim=staPptpConShtim, setSyslSerIpa=setSyslSerIpa, staIproActiproTyp=staIproActiproTyp, setWanPppUsername=setWanPppUsername, setTimeFetch=setTimeFetch, staLanErroRxcrce=staLanErroRxcrce, staTcpiTftpLanrx=staTcpiTftpLanrx, staTcpiHttpActiveIdletim=staTcpiHttpActiveIdletim, staIproRipWansPeer=staIproRipWansPeer, staDhcpLanDomai=staDhcpLanDomai, staIproFilterlDst=staIproFilterlDst, staIsdnSigManDinTable=staIsdnSigManDinTable, staUsbDevInterfac=staUsbDevInterfac, staIproFilterlSrcm=staIproFilterlSrcm, setDnsDynaTable=setDnsDynaTable, staTcpiHttpActiveLocalho=staTcpiHttpActiveLocalho, setCharRouteri=setCharRouteri, setHttpRol=setHttpRol, setConfUpdatecLastcon=setConfUpdatecLastcon, staTcpiNetbPeersTim=staTcpiNetbPeersTim, staPppoConCha=staPppoConCha, setWanDslbroaUse=setWanDslbroaUse, staPppCbcTxack=staPppCbcTxack, staPppPapTxreq=staPppPapTxreq, staDslPacRxb=staDslPacRxb, setWanRoundroEntry=setWanRoundroEntry, setPrinPriRaw=setPrinPriRaw, staPptpDel=staPptpDel, setAccoCurUsern=setAccoCurUsern, staTcpiNetbMnodes=staTcpiNetbMnodes, staConfAntithefState=staConfAntithefState, staIproOpenporDstp=staIproOpenporDstp, staCompComConnectiClientt=staCompComConnectiClientt, setIproRipLanRips=setIproRipLanRips, staVpnAhAge=staVpnAhAge, staVlanPorTag=staVlanPorTag, setWanActiontIndex=setWanActiontIndex, staIproRipDynwTxfi=staIproRipDynwTxfi, staQueuDhcpcli=staQueuDhcpcli, staTcpiNetbHostliFla=staTcpiNetbHostliFla, staUsbDevVendorid=staUsbDevVendorid, setVpnLayerIkek=setVpnLayerIkek, setConfSshauthTable=setConfSshauthTable, staVpnAhSoftk=staVpnAhSoftk, staLcrDel=staLcrDel, staPppBacRxcallbackreq=staPppBacRxcallbackreq, staTcpiIcmpWant=staTcpiIcmpWant, staIproConnectEntry=staIproConnectEntry, setTcpiDnsba=setTcpiDnsba, staWanPackettraTxn=staWanPackettraTxn, staIproEstabliEntry=staIproEstabliEntry, setCharDialupm=setCharDialupm, setIproFirFilteDst=setIproFirFilteDst, staConfScanresuHttps=staConfScanresuHttps, staPppLcpRxechoreply=staPppLcpRxechoreply, staQueuProthea=staQueuProthea, setConfLedtest=setConfLedtest, setVpnProposalsIkeTable=setVpnProposalsIkeTable, staMailBuf=staMailBuf, setDnsServSer=setDnsServSer, staAccoLasConne=staAccoLasConne, staRemoMode=staRemoMode, staIproRipIpriPee=staIproRipIpriPee, staIproRipDynlPort=staIproRipDynlPort, staIproRipWildRfc2=staIproRipWildRfc2, setCertSceCasEncalg=setCertSceCasEncalg, staTcpiIpWanrxdisconnect=staTcpiIpWanrxdisconnect, setIproTagEnd=setIproTagEnd, staAccoLasRxkby=staAccoLasRxkby, setInteModemInitcom=setInteModemInitcom, staLcrTot=staLcrTot, staIproServicePacketre=staIproServicePacketre, staIproFilterlDend=staIproFilterlDend, staVpnEspSpi=staVpnEspSpi, staTcpiDhcpDhcptEntry=staTcpiDhcpDhcptEntry, staIproRipTx=staIproRipTx, staTcpiNetbServerRtg=staTcpiNetbServerRtg, staCharSparedi=staCharSparedi, setIpro1nnTable1nnaInt=setIpro1nnTable1nnaInt, setCompComOpeOpe=setCompComOpeOpe, staCompComComporteFul=staCompComComporteFul, othBoo=othBoo, staVpnIpcompTable=staVpnIpcompTable, staTcpiRadiAuthenticTimeouts=staTcpiRadiAuthenticTimeouts, staModeNetworklistNet=staModeNetworklistNet, setConfScreenh=setConfScreenh, staPppoConEntry=staPppoConEntry, setSnmpIptrapsVer=setSnmpIptrapsVer, setWanPppConf=setWanPppConf, setIproRipParInva=setIproRipParInva, setWanRadiusServer=setWanRadiusServer, setConfCrontabOwne=setConfCrontabOwne, setInteModemRequest=setInteModemRequest, staTcpiDhcp=staTcpiDhcp, staConnChar=staConnChar, setLancPriPri=setLancPriPri, setVpnCertificateIkeName=setVpnCertificateIkeName, staTcpiTftpWanrxe=staTcpiTftpWanrxe, setPppoPorEntry=setPppoPorEntry, staChanConns=staChanConns, staEtheCabletestrIfc=staEtheCabletestrIfc, setCertSceCasEntry=setCertSceCasEntry, setWanRouteriEntry=setWanRouteriEntry, setVpnProposalsIpsecpIpsecproposal2=setVpnProposalsIpsecpIpsecproposal2, setWanLayerLay3=setWanLayerLay3, setWanPppTry=setWanPppTry, setIpro1nnIpsectablDp=setIpro1nnIpsectablDp, staPppTxoIpcIfc=staPppTxoIpcIfc, staDslPacRxp=staDslPacRxp, setVpnVpnpeersLaye=setVpnVpnpeersLaye, setCompComNetConnectp=setCompComNetConnectp, setVpnProposalsIpsecpIpsecproposal8=setVpnProposalsIpsecpIpsecproposal8, staVpnEspDesta=staVpnEspDesta)
mibBuilder.exportSymbols("LANCOM-1711-MIB", setSyslSerSou=setSyslSerSou, staTcpiNetbNetworInt=staTcpiNetbNetworInt, setHttpRolRenumberv=setHttpRolRenumberv, staCompComNetworksRemotea=staCompComNetworksRemotea, staPppCcpTxterminatea=staPppCcpTxterminatea, setVpnAdditionalgRtgtag4=setVpnAdditionalgRtgtag4, setMailUsern=setMailUsern, setPerfRttmonePacketcount=setPerfRttmonePacketcount, staTcpiIpWanrx=staTcpiIpWanrx, staLcrMis=staLcrMis, staRemoCharg=staRemoCharg, setTcpiDnsde=setTcpiDnsde, staConfLl2mRxma=staConfLl2mRxma, staDhcpWanNbnsd=staDhcpWanNbnsd, staVpnIpcompSofts=staVpnIpcompSofts, staCertSceCasSubjec=staCertSceCasSubjec, setIproRipLanRipa=setIproRipLanRipa, staCompComComportsTable=staCompComComportsTable, staTcpiHttpActiveIndex=staTcpiHttpActiveIndex, staPppLcpRxcodereject=staPppLcpRxcodereject, staVpnIpcompMaxkb=staVpnIpcompMaxkb, staWanWanqueuem=staWanWanqueuem, staIproOpenporTime=staIproOpenporTime, staIsdnFraS0B1f=staIsdnFraS0B1f, staIproRipFiltIpa=staIproRipFiltIpa, staTcpiDhcpDhcptEth=staTcpiDhcpDhcptEth, setIproFirActioEntry=setIproFirActioEntry, setWanRouteriIfc=setWanRouteriIfc, staHardCpuc=staHardCpuc, staCertSce=staCertSce, staIproRipDynwRipa=staIproRipDynwRipa, staPppMlRxseqlo=staPppMlRxseqlo, setIproFirAppliApp=setIproFirAppliApp, othManDis=othManDis, staIproRipErro=staIproRipErro, setTacaEncryption=setTacaEncryption, staIproRipVrrpRip=staIproRipVrrpRip, setTacaSharedsecret=setTacaSharedsecret, setTimeDstclMon=setTimeDstclMon, staTcpiNetbBrowseFla=staTcpiNetbBrowseFla, setNetbPeeEntry=setNetbPeeEntry, setTcpiAliveRetryc=setTcpiAliveRetryc, staIproFilterlEntry=staIproFilterlEntry, staTcpiDhcpDhcptMac=staTcpiDhcpDhcptMac, staTcpiTftpWanrxa=staTcpiTftpWanrxa, staEthePortsAss=staEthePortsAss, setConfUpdatecRetryfa=setConfUpdatecRetryfa, staConfWanactiv=staConfWanactiv, staQueuWanqueu=staQueuWanqueu, staVpnPeers=staVpnPeers, staDhcpWanNbnsb=staDhcpWanNbnsb, setVpnVpnpeersExtr=setVpnVpnpeersExtr, staLanErroRxerro=staLanErroRxerro, setWanPppAuthentres=setWanPppAuthentres, staUsbDevEntry=staUsbDevEntry, staPppLcpRxterminater=staPppLcpRxterminater, setIproFirRulesLin=setIproFirRulesLin, setInteS0Type=setInteS0Type, staTcpiNetbGrouplGro=staTcpiNetbGrouplGro, staDhcpWanDnsba=staDhcpWanDnsba, staVlanPorPor=staVlanPorPor, setIproVrrVrrPee=setIproVrrVrrPee, setIproFirOpenpFilt=setIproFirOpenpFilt, setInteModem=setInteModem, setIproFirFilteDstn=setIproFirFilteDstn, setIpro1nnIpsectablNl=setIpro1nnIpsectablNl, setMailPop3s=setMailPop3s, staIproVrrpVirBpr=staIproVrrpVirBpr, staTcpiNetbBrowseGro=staTcpiNetbBrowseGro, trpPptpConn=trpPptpConn, setConfAdminsEntry=setConfAdminsEntry, setMailSmtps=setMailSmtps, setPerfRttmonaEntry=setPerfRttmonaEntry, setSyslSerLev=setSyslSerLev, staHardFree=staHardFree, setNetbLea=setNetbLea, staTcpiNetbGroups=staTcpiNetbGroups, staPppTxoLcpIfc=staPppTxoLcpIfc, staTcpiNetbPeersEntry=staTcpiNetbPeersEntry, staModeOperating=staModeOperating, staPppBacDeletevalues=staPppBacDeletevalues, setNetbGroTyp=setNetbGroTyp, setTcpiLoopbRtg=setTcpiLoopbRtg, staIproRipWansRtgt=staIproRipWansRtgt, staPppLcpRxconfignak=staPppLcpRxconfignak, staVpn=staVpn, setLanTracel=setLanTracel, setCompComNetLoopback=setCompComNetLoopback, staIproServiceKbytestx=staIproServiceKbytestx, setIproFirConneDest=setIproFirConneDest, staIproQosUpstr=staIproQosUpstr, staConfLl2mServDel=staConfLl2mServDel, setIproFirRulesRtg=setIproFirRulesRtg, staPppLcpTxprotocolre=staPppLcpTxprotocolre, staConfWantotal=staConfWantotal, staLcrFou=staLcrFou, setWanProtect=setWanProtect, staConfLanactiv=staConfLanactiv, staIproRipFiltIpn=staIproRipFiltIpn, setIproFirAppliIrc=setIproFirAppliIrc, staTcpiNetbBrowseRtg=staTcpiNetbBrowseRtg, staCallBch=staCallBch, setNetbGroIpa=setNetbGroIpa, setVpnVpnpeersXaut=setVpnVpnpeersXaut, setAccoTimHour=setAccoTimHour, staTcpiDhcpDhcptIpa=staTcpiDhcpDhcptIpa, staWanActionsActAct=staWanActionsActAct, staIsdnSigManErrB=staIsdnSigManErrB, setTcpiNetwoVla=setTcpiNetwoVla, setCharRouteru=setCharRouteru, setVpnLayerTable=setVpnLayerTable, staTcpiIpWanfragmentationer=staTcpiIpWanfragmentationer, staTcpiSyslLasTim=staTcpiSyslLasTim, staCertSceCertsSubjecta=staCertSceCertsSubjecta, staTimeDstDay=staTimeDstDay, setWanDslbroaMac=setWanDslbroaMac, staIproActiproEntry=staIproActiproEntry, staModeHistoryMod=staModeHistoryMod, staConfScanresuHttpp=staConfScanresuHttpp, staDslErrTxcarr=staDslErrTxcarr, staAccoLasEntry=staAccoLasEntry, staDhcpLanEntry=staDhcpLanEntry, staWanMtuEntry=staWanMtuEntry, staPppRxoIpcDnsba=staPppRxoIpcDnsba, staPppLcpTxconfigreje=staPppLcpTxconfigreje, setIproOpe=setIproOpe, staIproLoadbalConPee=staIproLoadbalConPee, staEthe=staEthe, setIproIprMas=setIproIprMas, setVpnCertificateIkeRemoteiden=setVpnCertificateIkeRemoteiden, setCertSceCerApplicat=setCertSceCerApplicat, staWanErrorsTable=staWanErrorsTable, staCertSceRasStatus=staCertSceRasStatus, staVpnConnectCryptl=staVpnConnectCryptl, setHttpRolRenumbera=setHttpRolRenumbera, setWanRadiusOperat=setWanRadiusOperat, staCertSceCertsIssued=staCertSceCertsIssued, staConfLantotal=staConfLantotal, staDhcpLanDhcps=staDhcpLanDhcps, setWanMtulistTable=setWanMtulistTable, setTcpiNetwoNet=setTcpiNetwoNet, setIproFirRulesPri=setIproFirRulesPri, setInteDslTyp=setInteDslTyp, staIproVrrpVirPri=staIproVrrpVirPri, staIproRipRequ=staIproRipRequ, setCompComComDevice=setCompComComDevice, staTcpiDnsNetb=staTcpiDnsNetb, setIproRipIprEntry=setIproRipIprEntry, staDslIntTable=staDslIntTable, setDnsFiltNet=setDnsFiltNet, setDhcpNetGatewayadd=setDhcpNetGatewayadd, setLcrLan=setLcrLan, staWanWantxdisc=staWanWantxdisc, staIsdnFra=staIsdnFra, setIproRipLanEntry=setIproRipLanEntry, setPerfRttmonsJittermaxnegsd=setPerfRttmonsJittermaxnegsd, trpErrLogin=trpErrLogin, setWanIplistDnsde=setWanIplistDnsde, staIproEstabliPro=staIproEstabliPro, setWanRouteriAcc=setWanRouteriAcc, setIproFirFilteDsta=setIproFirFilteDsta, staEthePortsAut=staEthePortsAut, staCertCrlCrlEntry=staCertCrlCrlEntry, setDnsDyndTable=setDnsDyndTable, staIproServiceTable=staIproServiceTable, setTcpiAliveTarget=setTcpiAliveTarget, staCompComConnectiFullnam=staCompComConnectiFullnam, setNetbSerFla=setNetbSerFla, setConfTftpcliConfigfil=setConfTftpcliConfigfil, staPptpConGatew=staPptpConGatew, staPppCcpRxconfigrequ=staPppCcpRxconfigrequ, staDslPppTxpadi=staDslPppTxpadi, setAcco=setAcco, setConfAdminsFun=setConfAdminsFun, staPptpConMode=staPptpConMode, setVpnVpnpeersIkec=setVpnVpnpeersIkec, setSyslFacFac=setSyslFacFac, staCompComComportePor=staCompComComportePor, setRadiBacku=setRadiBacku, staTacaDelet=staTacaDelet, staLayeIfc=staLayeIfc, staAccoCurTxkby=staAccoCurTxkby, setNetbGroGro=setNetbGroGro, staDslErrIfc=staDslErrIfc, staVpnIpcomps=staVpnIpcomps, setWanLayerLay1=setWanLayerLay1, staCertSceRasName=staCertSceRasName, setVpnVpnpeersRtgt=setVpnVpnpeersRtgt, staTcpiNetbNetworVla=staTcpiNetbNetworVla, staIproLogtablSrca=staIproLogtablSrca, staIproVrrpDro=staIproVrrpDro, setVpnAdditionalgRemotegateway10=setVpnAdditionalgRemotegateway10, staTcpiDnsHitlTable=staTcpiDnsHitlTable, setVpnIsakmpTimRetrlim=setVpnIsakmpTimRetrlim, staTimeCur=staTimeCur, staModeModeminfo=staModeModeminfo, setDhcpDhcVla=setDhcpDhcVla, setLancIntMax=setLancIntMax, setAccoAccTotal=setAccoAccTotal, staConfLl2mClieRxu=staConfLl2mClieRxu, setIproRipIprVla=setIproRipIprVla, setVlanOpe=setVlanOpe, staIproPortbloDsta=staIproPortbloDsta, staIproQosEntry=staIproQosEntry, trpPPPoESConn=trpPPPoESConn, setWanRouteriYc=setWanRouteriYc, staIproQosTable=staIproQosTable, staConfEventlogInfo1=staConfEventlogInfo1, staTcpiArpTablTable=staTcpiArpTablTable, staTimeDstInd=staTimeDstInd, staTcpiRadiAuthenticAccessrej=staTcpiRadiAuthenticAccessrej, setVpnProposalsIkeproIkeproposal8=setVpnProposalsIkeproIkeproposal8, staDhcpWanDhcps=staDhcpWanDhcps, setIpro1nnIpsectablTable=setIpro1nnIpsectablTable, staPppRxoIpcEntry=staPppRxoIpcEntry, staTcpiNetbNetworTable=staTcpiNetbNetworTable, setConfPasswor=setConfPasswor, staIproLogtablProt=staIproLogtablProt, setConfTftpcliFirmwaref=setConfTftpcliFirmwaref, lancom_1711_plus=lancom_1711_plus, staPppTxoIpcDnsde=staPppTxoIpcDnsde, setAccoLasConnt=setAccoLasConnt, staCallDia=staCallDia, staIproVrrpEveSys=staIproVrrpEveSys, setConfCrontabDayo=setConfCrontabDayo, setConfAccesstHttps=setConfAccesstHttps, setSyslFacEntry=setSyslFacEntry, staVpnIpcompEntry=staVpnIpcompEntry, staQueuQueuepa=staQueuQueuepa, staCompComConnectiEntry=staCompComConnectiEntry, staModeConnectinfo=staModeConnectinfo, setDnsSubdSub=setDnsSubdSub, staQueuIprripq=staQueuIprripq, setCertCrlPre=setCertCrlPre, staIproConnectDsta=staIproConnectDsta, staUsbDevTable=staUsbDevTable, staIproRipIpriTable=staIproRipIpriTable, setInteDslUps=setInteDslUps, setWanPppTime=setWanPppTime, setInteModemmOpe=setInteModemmOpe, staWanPackettraTxu=staWanPackettraTxu, staPppoRxe=staPppoRxe, setInteDslIfc=setInteDslIfc, setPerfRttmonsJittersumnegds=setPerfRttmonsJittersumnegds, staTcpiTftpWantx=staTcpiTftpWantx, staIproActiproGat=staIproActiproGat, setDnsDnsdDom=setDnsDnsdDom, setVpnAdditionalgRtgtag15=setVpnAdditionalgRtgtag15, staIproEstabliCou=staIproEstabliCou, staPppBacRxcallbackres=staPppBacRxcallbackres, staTcpiNetbPeersTyp=staTcpiNetbPeersTyp, setWanPollingEntry=setWanPollingEntry, setIproFirFilteLink=setIproFirFilteLink, staIproRipLansEntry=staIproRipLansEntry)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staPptpConConnt=staPptpConConnt, setIproVrrRec=setIproVrrRec, setDnsDnslEntry=setDnsDnslEntry, setVpnProposalsIpsecIpcompalg=setVpnProposalsIpsecIpcompalg, staCertCrlNum=staCertCrlNum, staCertCrlCrlIdx=staCertCrlCrlIdx, set=set, staIproFilterlTable=staIproFilterlTable, setCompWanDevTable=setCompWanDevTable, setConfUpdatecRetryok=setConfUpdatecRetryok, staPptpEch=staPptpEch, setDhcpAliEntry=setDhcpAliEntry, setIproRipLanPois=setIproRipLanPois, staCertSceCasName=staCertSceCasName, setInteMobileProQosd=setInteMobileProQosd, setIproLoaBunBundlepeer4=setIproLoaBunBundlepeer4, setDnsFiltIpa=setDnsFiltIpa, setDhcpNetMasterserv=setDhcpNetMasterserv, setPerfRttmonsJittersumnegsd=setPerfRttmonsJittersumnegsd, staLanPackTable=staLanPackTable, staInfoPee=staInfoPee, staIsdnSigManErrEntry=staIsdnSigManErrEntry, staTcpiTftpWancon=staTcpiTftpWancon, setIproFirAppliFtpMin=setIproFirAppliFtpMin, setTimeDstclEntry=setTimeDstclEntry, setIproFirFilteDstm=setIproFirFilteDstm, staAccoAccRxkby=staAccoAccRxkby, setDhcpNetNetmask=setDhcpNetNetmask, setVpnCertificateIkeTable=setVpnCertificateIkeTable, staPppLcpRxconfigreje=staPppLcpRxconfigreje, staVpnAhEntry=staVpnAhEntry, setIproFirFilteSrca=setIproFirFilteSrca, setVpnAdditionalgTable=setVpnAdditionalgTable, setSnmpIptrapsTable=setSnmpIptrapsTable, setRadiAutht=setRadiAutht, staIproRipLansRipa=staIproRipLansRipa, staVpnIpcompAge=staVpnIpcompAge, setDhcpNetCache=setDhcpNetCache, setInteModemDisconn=setInteModemDisconn, staWanThroughpuRxsa=staWanThroughpuRxsa, staTcpiHttpActiveTable=staTcpiHttpActiveTable, staWanActionsLocRem=staWanActionsLocRem, staConfScanresuTable=staConfScanresuTable, setConfAccesstIfc=setConfAccesstIfc, staVpnEspKbyte=staVpnEspKbyte, setNetbOpe=setNetbOpe, setTcpiArpag=setTcpiArpag, staWanActionsActTable=staWanActionsActTable, setIproFirObjecTable=setIproFirObjecTable, setVpnProposalsIkeproIkeproposal6=setVpnProposalsIkeproIkeproposal6, staConnTable=staConnTable, staModeHistoryEntry=staModeHistoryEntry, setVpnAdditionalgRtgtag13=setVpnAdditionalgRtgtag13, staTcpiNetbRefres=staTcpiNetbRefres, setVpnAdditionalgRemotegateway16=setVpnAdditionalgRemotegateway16, staCompComNetworksTable=staCompComNetworksTable, setIproFirRulesAct=setIproFirRulesAct, staIproRipWildRips=staIproRipWildRips, staIproActiproIpa=staIproActiproIpa, staTcpiTftpLanrxe=staTcpiTftpLanrxe, setCompComComStopbi=setCompComComStopbi, setWanPptppeeEntry=setWanPptppeeEntry, setAccoLasTxkby=setAccoLasTxkby, staIproHoconnlDst=staIproHoconnlDst, setIproRipLanNetw=setIproRipLanNetw, staTcpiIpLanfragmentations=staTcpiIpLanfragmentations, staIproRipLansRtgt=staIproRipLansRtgt, setWanManualdCon=setWanManualdCon, staTcpiNetbHostliRtg=staTcpiNetbHostliRtg, staIproRipDisc=staIproRipDisc, setVpnAdditionalgRtgtag8=setVpnAdditionalgRtgtag8, staTcpiRadiAccountinUnknowntypes=staTcpiRadiAccountinUnknowntypes, staPppIpcRxconfigack=staPppIpcRxconfigack, setIproFirOpenpTable=setIproFirOpenpTable, setHttpRolVariablesTyp=setHttpRolVariablesTyp, setAccoTimInde=setAccoTimInde, setConfMonitor=setConfMonitor, setNetbNetEntry=setNetbNetEntry, staTcpiIcmpDele=staTcpiIcmpDele, staPppBacRxstatusindic=staPppBacRxstatusindic, staVpnAhsas=staVpnAhsas, staConfLl2mServRxd=staConfLl2mServRxd, setCompComComReadyc=setCompComComReadyc, staTcpiDhcpRxrel=staTcpiDhcpRxrel, setVpnCertificateIkeLocalidtyp=setVpnCertificateIkeLocalidtyp, setIproFirRulesNam=setIproFirRulesNam, staUsbDevVendor=staUsbDevVendor, staCertSceCasMd5fin=staCertSceCasMd5fin, staTcpiDhcpDelet=staTcpiDhcpDelet, staPppLcpRxprotocolre=staPppLcpRxprotocolre, setNetbSerIpa=setNetbSerIpa, staIproRipWildPeer=staIproRipWildPeer, staPppCcpTxterminater=staPppCcpTxterminater, staVpnAhSrcad=staVpnAhSrcad, staCompCom=staCompCom, setWanLayerL2op=setWanLayerL2op, setLancAccIpn=setLancAccIpn, setVpnAdditionalgRtgtag9=setVpnAdditionalgRtgtag9, staIproServicePacketrx=staIproServicePacketrx, setIproIprIpa=setIproIprIpa, staPppIpcTxconfignak=staPppIpcTxconfignak, setConfAntitheOut=setConfAntitheOut, staCompComBytecounDevicety=staCompComBytecounDevicety, setIproFirMaxha=setIproFirMaxha, staWanBytetransTxb=staWanBytetransTxb, setConfLl2mOpe=setConfLl2mOpe, staLanErroCollis=staLanErroCollis, setTacaFallbacktolocalus=setTacaFallbacktolocalus, staWanThroughpuTxsa=staWanThroughpuTxsa, staAccoLasTotal=staAccoLasTotal, staChanApp=staChanApp, staWanThroughpuTxsc=staWanThroughpuTxsc, setWanPppPeer=setWanPppPeer, setConfOutband=setConfOutband, staIproRipLansNetw=staIproRipLansNetw, setCompDevTable=setCompDevTable, staTcpiArpWane=staTcpiArpWane, staAccoAccPeer=staAccoAccPeer, setSnmpMonitortPor=setSnmpMonitortPor, setIproNnnSrca=setIproNnnSrca, setIproTagSta=setIproTagSta, staTcpiArpTablEth=staTcpiArpTablEth, staDhcpLanNbnsd=staDhcpLanNbnsd, staIproHostbloFil=staIproHostbloFil, staIsdnFraS0Table=staIsdnFraS0Table, staModePinstatus=staModePinstatus, setWanIncominDia=setWanIncominDia, staTcpiTftpWanrxw=staTcpiTftpWanrxw, firVerVer=firVerVer, staDslPacTable=staDslPacTable, staPppLcp=staPppLcp, setIproLoaBunTable=setIproLoaBunTable, trpLAN_Overtemp_Throttle_End=trpLAN_Overtemp_Throttle_End, setAccoAccConnt=setAccoAccConnt, setVpnCertificate=setVpnCertificate, staRemoConnt=staRemoConnt, staFile=staFile, staTcpiTcpLanser=staTcpiTcpLanser, setIproDefSto=setIproDefSto, setDnsDnsdEntry=setDnsDnsdEntry, trpUplFailTo=trpUplFailTo, setCertSceDev=setCertSceDev, setTcpiAlive=setTcpiAlive, staIproVrrpVirVla=staIproVrrpVirVla, setSnmpMonitortIpa=setSnmpMonitortIpa, setNetbHosTable=setNetbHosTable, setVpnAdditionalgRemotegateway9=setVpnAdditionalgRemotegateway9, setEchoOpe=setEchoOpe, staPppBacTxcallbackreq=staPppBacTxcallbackreq, setVpnProposalsIkeIkeauthmo=setVpnProposalsIkeIkeauthmo, staWanPackettraRx=staWanPackettraRx, setSyslOpe=setSyslOpe, staTcpiDhcpDhcptTim=staTcpiDhcpDhcptTim, setIproFirPingb=setIproFirPingb, staWanPackettraIfc=staWanPackettraIfc, staIproRipWansEntry=staIproRipWansEntry, setConfAdminsPas=setConfAdminsPas, setIpro1nnServicetaCommen=setIpro1nnServicetaCommen, setWanLayerTable=setWanLayerTable, staDslPppTxpadt=staDslPppTxpadt, staVpnEspsas=staVpnEspsas, setPrinPriAct=setPrinPriAct, staTcpiDhcpDhcptLan=staTcpiDhcpDhcptLan, setWanDslbroaDsl=setWanDslbroaDsl, setDnsDynaSer=setDnsDynaSer, firTim=firTim, staVpnEspEntry=staVpnEspEntry, staIproRipLansPort=staIproRipLansPort, staVpnIpcompSoftk=staVpnIpcompSoftk, staIproQosTxres=staIproQosTxres, setSyslFacTable=setSyslFacTable, setTimeDstclTim=setTimeDstclTim, staWan=staWan, staTcpiRadiAuthenticRoundtrip=staTcpiRadiAuthenticRoundtrip, setCertCrlUpd=setCertCrlUpd, setIpro1nnIpsectablTimeout=setIpro1nnIpsectablTimeout, setNetbSerSer=setNetbSerSer, staTcpiRadiAuthenticAccessreq=staTcpiRadiAuthenticAccessreq, setWanIplistGatew=setWanIplistGatew, setPerfRttmonsEntry=setPerfRttmonsEntry, staTcpiRadiAuthenticIpaddress=staTcpiRadiAuthenticIpaddress, setTacaServerEntry=setTacaServerEntry, staDhcpLanNbnsb=staDhcpLanNbnsb, setTcpiNetwoSrc=setTcpiNetwoSrc, setIproFirPortbTime=setIproFirPortbTime, staConnCont=staConnCont, staIproRipDynwRipt=staIproRipDynwRipt, staPppMlRxfrage=staPppMlRxfrage, setIproFirConneSrcp=setIproFirConneSrcp, staModeHistoryInd=staModeHistoryInd, setIpro1nnTable1nnaHan=setIpro1nnTable1nnaHan, setCharTablebuTot=setCharTablebuTot, setIproRipWanTxfi=setIproRipWanTxfi, trpHTTP_Tunnel_Close=trpHTTP_Tunnel_Close, setLancPriEntry=setLancPriEntry, staIproVrrpEveEntry=staIproVrrpEveEntry, staTcpiDhcpNetwoBroadcasta=staTcpiDhcpNetwoBroadcasta, staCompComComportsSto=staCompComComportsSto, setNtpRqt=setNtpRqt, staPptpConIpadd=staPptpConIpadd, staIproRipFiltTyp=staIproRipFiltTyp, staVpnConnectConnti=staVpnConnectConnti, staWanErrorsStac=staWanErrorsStac, setVpnIsakmpTimEntry=setVpnIsakmpTimEntry, setNetbSerSmb=setNetbSerSmb, setIproRipWanRfc2=setIproRipWanRfc2, setVpnProposalsIpsecpIpsecproposal4=setVpnProposalsIpsecpIpsecproposal4, staConfLl2mClieRxd=staConfLl2mClieRxd, setVpnAdditionalgRemotegateway14=setVpnAdditionalgRemotegateway14, staQueuTftpser=staQueuTftpser, staTimeIsd=staTimeIsd, setConfAdminsTable=setConfAdminsTable, setNetbUpd=setNetbUpd, setConfFunctioKey=setConfFunctioKey, setIproLoa=setIproLoa, staPppIpcTxconfigreje=staPppIpcTxconfigreje, staEthePortsEntry=staEthePortsEntry, staConfOutbandt=staConfOutbandt, setHttpRolActionsInd=setHttpRolActionsInd, staIsdnLinS0Ifc=staIsdnLinS0Ifc, setIproRipParUpda=setIproRipParUpda, staTcpiArpTablVla=staTcpiArpTablVla, staWanActions=staWanActions, setHttpErr=setHttpErr, staVlanNetPor=staVlanNetPor, staTcpiSyslLasLev=staTcpiSyslLasLev, setLcrTimNum=setLcrTimNum, staTcpiRadiAccountinAccountingres=staTcpiRadiAccountinAccountingres, setAccoLasTotal=setAccoLasTotal, setInteMobileProApn=setInteMobileProApn, staVpnConnectEntry=staVpnConnectEntry, setDhcpPorEna=setDhcpPorEna, setConfTftpcliConfigadd=setConfTftpcliConfigadd, setIproFirPorts=setIproFirPorts, setVpnProposalsIpsecEntry=setVpnProposalsIpsecEntry, staConnActi=staConnActi, setTime=setTime, setHttpRolActionsTable=setHttpRolActionsTable, staIproVrrp=staIproVrrp, staSnmpEveTra=staSnmpEveTra, setCertSceUpd=setCertSceUpd, staConfEventlogIpadd=staConfEventlogIpadd, setWanBackuppTable=setWanBackuppTable, staPppBacRxcallrequest=staPppBacRxcallrequest, staIproVrrpVirRou=staIproVrrpVirRou, setDnsDyndTim=setDnsDyndTim, staCertSceCertsSubject=staCertSceCertsSubject, staDslErrTxerro=staDslErrTxerro, setCharDslbroa=setCharDslbroa, staWanActionsActRes=staWanActionsActRes, staVpnEspCrypt=staVpnEspCrypt, staWanBytetransRxb=staWanBytetransRxb, setVpnProposalsIkeName=setVpnProposalsIkeName, staDhcpWanDnsde=staDhcpWanDnsde)
mibBuilder.exportSymbols("LANCOM-1711-MIB", staCompComNetworksLocalpo=staCompComNetworksLocalpo, setVpnProposalsIkeproIkeproposal3=setVpnProposalsIkeproIkeproposal3, staConfLl2mServRxb=staConfLl2mServRxb, setTcpiNetwoCom=setTcpiNetwoCom, staUsb=staUsb, staIproRipLansProp=staIproRipLansProp, staVpnEspSoftk=staVpnEspSoftk, setWanIplistDnsba=setWanIplistDnsba, staModeNetworklistEntry=staModeNetworklistEntry, setIproFirAppliFtpFxp=setIproFirAppliFtpFxp, setNetbSup=setNetbSup, setAccoCurPeer=setAccoCurPeer, staIproLoadbalConEntry=staIproLoadbalConEntry, setIproFirPortbTable=setIproFirPortbTable, staVpnEspSrcad=staVpnEspSrcad, staAccoCurTable=staAccoCurTable, staVpnConnectCrypta=staVpnConnectCrypta, staTcpiArp=staTcpiArp, setIproLoaBunBundlepeer3=setIproLoaBunBundlepeer3, setWanPollingIpaddress4=setWanPollingIpaddress4, staIproLogtablEntry=staIproLogtablEntry, staWanErrorsTxer=staWanErrorsTxer, staDhcpLanIpadd=staDhcpLanIpadd, staTcpiDnsDhcp=staTcpiDnsDhcp, setConfTftpcliScriptadd=setConfTftpcliScriptadd, staPppMlRxfrags=staPppMlRxfrags, setCharTimetabTable=setCharTimetabTable, staPppLcpTxconfignak=staPppLcpTxconfignak, staTimeDstHou=staTimeDstHou, setIproIprEntry=setIproIprEntry, setCharActivat=setCharActivat, staTcpiDhcpNetwoEndaddress=staTcpiDhcpNetwoEndaddress, staConfLoginrej=staConfLoginrej, setAccoOpe=setAccoOpe, staPppMlRxnotfr=staPppMlRxnotfr, staIproRipWildGate=staIproRipWildGate, setConfTftpcliFirmwarea=setConfTftpcliFirmwarea, staTcpiIpWanserviceerrors=staTcpiIpWanserviceerrors, staPppCcpTxresetack=staPppCcpTxresetack, setIpro1nnServicetaDportt=setIpro1nnServicetaDportt, staVpnEspIdx=staVpnEspIdx, staTcpiNetbBnodes=staTcpiNetbBnodes, staLcr=staLcr, staIsdnSigManErrE=staIsdnSigManErrE, setTcpiArptaVla=setTcpiArptaVla, setAccoAccUsern=setAccoAccUsern, staCertSceCasTable=staCertSceCasTable, setCertCrlUse=setCertCrlUse, setVpnAdditionalgRemotegateway7=setVpnAdditionalgRemotegateway7, staRemoEntry=staRemoEntry, staTcpiDhcpWanrx=staTcpiDhcpWanrx, staChanBus=staChanBus, setVpnProposalsIpsecName=setVpnProposalsIpsecName, setConfUpdatecServern=setConfUpdatecServern, staTcpiDhcpTxnak=staTcpiDhcpTxnak, setNtp=setNtp, setPerfRttmonsJittersumposds=setPerfRttmonsJittersumposds, setWanMtulistPee=setWanMtulistPee, setCharRouterd=setCharRouterd, setSnmpMonitortVla=setSnmpMonitortVla, setIproRipPar=setIproRipPar, staVpnAhKbyte=staVpnAhKbyte, staTcpiTftpWantxo=staTcpiTftpWantxo, setTcpiLoopbLoo=setTcpiLoopbLoo, staVpnIkeIkeau=staVpnIkeIkeau, staTcpiDhcpRxdis=staTcpiDhcpRxdis, setCompComNetListenpo=setCompComNetListenpo, staIproRipWildEntry=staIproRipWildEntry, setVpnCertificateIkeSharedsec=setVpnCertificateIkeSharedsec, staConfAntithefMetho=staConfAntithefMetho, setNetbSerNet=setNetbSerNet, staIproRipDynlDftr=staIproRipDynlDftr, staVpnIkeIdx=staVpnIkeIdx, staPppoDro=staPppoDro, staPppTxoLcpMru=staPppTxoLcpMru, setWanDialuppEntry=setWanDialuppEntry, staTcpiHttpAgentlAcc=staTcpiHttpAgentlAcc, staIsdnSigManErrTable=staIsdnSigManErrTable, setInteS0Llbc=setInteS0Llbc, setLcrHolEntry=setLcrHolEntry, staPptpConPhysc=staPptpConPhysc, setNetbPeeTable=setNetbPeeTable, staTcpiNetbGrouplTable=staTcpiNetbGrouplTable, setMailSenda=setMailSenda, setCompComNetTcpmode=setCompComNetTcpmode, staTcpiRadiAccountinEntry=staTcpiRadiAccountinEntry, setIproIprIpn=setIproIprIpn, setTcpiAliveRetryi=setTcpiAliveRetryi, staModeRegistration=staModeRegistration, setInteEthernTable=setInteEthernTable, staQueuIpurgen=staQueuIpurgen, staQueuArpquer=staQueuArpquer, setIproRipIprNet=setIproRipIprNet, staIsdnFraS0Entry=staIsdnFraS0Entry, staConfScanresuRtgta=staConfScanresuRtgta, staIproRipIpriNet=staIproRipIpriNet, setIproRipIprTable=setIproRipIprTable, setConfLockmin=setConfLockmin, staTcpiDnsLant=staTcpiDnsLant, staCompComBytecounTable=staCompComBytecounTable, setWanRouteriCli=setWanRouteriCli, setIproFirAdmin=setIproFirAdmin, setPerfRttmonaTable=setPerfRttmonaTable, staConfScanresuIpadd=staConfScanresuIpadd, staTcpiIcmpWanr=staTcpiIcmpWanr, setWanIplistIpnet=setWanIplistIpnet, setNetbBroSer=setNetbBroSer, setPppoSes=setPppoSes, staIproRipWansRipt=staIproRipWansRipt, staVpnIkeHasha=staVpnIkeHasha, staIproFilterlSend=staIproFilterlSend, setConfAdminsAct=setConfAdminsAct, staIproFilterlDstn=staIproFilterlDstn, staIproOpenporFilt=staIproOpenporFilt, staPppIpcDeletevalues=staPppIpcDeletevalues, staCompComConnectiClientr=staCompComConnectiClientr, staCharTablebuTot=staCharTablebuTot, staInfoDia=staInfoDia, setInteMobileTri=setInteMobileTri, staPppCcpRxterminater=staPppCcpRxterminater, staTcpiIpDeletevalues=staTcpiIpDeletevalues, setNetbSerRtg=setNetbSerRtg, staLanErroQueuee=staLanErroQueuee, staTcpiTftpDelete=staTcpiTftpDelete, staRemoConns=staRemoConns, staIsdnLinS0Table=staIsdnLinS0Table, setSnmpPassword=setSnmpPassword, staTcpiDhcpNetwoVlanid=staTcpiDhcpNetwoVlanid, staOper=staOper, setCompComComTable=setCompComComTable, staTcpiIpLanchecksumerrors=staTcpiIpLanchecksumerrors, staAccoTimTable=staAccoTimTable, setConfAccesstTable=setConfAccesstTable, setWanDslbroaPee=setWanDslbroaPee, setDhcpPorPor=setDhcpPorPor, setConfAntitheCal=setConfAntitheCal, setNetbNetOpe=setNetbNetOpe, setVpn=setVpn, setPerfRttmonsJitterminpossd=setPerfRttmonsJitterminpossd, setIproFirRulesFir=setIproFirRulesFir, setDhcpDhcTable=setDhcpDhcTable, setNetb=setNetb, staTcpiNetbReleas=staTcpiNetbReleas, staVpnConnectLaster=staVpnConnectLaster, setWanDialpre=setWanDialpre, setWanPollingIpaddress3=setWanPollingIpaddress3, setTimeDstclEve=setTimeDstclEve, staPppBacRxstatusrespo=staPppBacRxstatusrespo, staTcpiNetbServerSmb=staTcpiNetbServerSmb, setTcpiArptaIpa=setTcpiArptaIpa, staIproRipDynwEntry=staIproRipDynwEntry, staIsdnFraS0Ifc=staIsdnFraS0Ifc, staAccoCurUsern=staAccoCurUsern, setVpnLayerIkeg=setVpnLayerIkeg, setAccoTimType=setAccoTimType, setVpnAggrmodeike=setVpnAggrmodeike, staIpro=staIpro, setInteMobileHis=setInteMobileHis, staCompComBytecounPortnumb=staCompComBytecounPortnumb, setHttpRolVariablesEntry=setHttpRolVariablesEntry, setCertSceRet=setCertSceRet, setIproDefInd=setIproDefInd, setIpro1nnServicetaTable=setIpro1nnServicetaTable, staDslPppDelete=staDslPppDelete, staCompComBytecounSerialtx=staCompComBytecounSerialtx, firVerTable=firVerTable, staCharRouteri=staCharRouteri, staIproHoconnlTable=staIproHoconnlTable, staPppBacRxcallrespons=staPppBacRxcallrespons, staPppBacTxcallrequest=staPppBacTxcallrequest, staAccoAccMacad=staAccoAccMacad, staLanErroTable=staLanErroTable, staTcpiDnsHitlReq=staTcpiDnsHitlReq, staTcpiHttpActiveRemotep=staTcpiHttpActiveRemotep, staIproRipWansDftr=staIproRipWansDftr, staVpnIkeSofts=staVpnIkeSofts, staAccoCurRxkby=staAccoCurRxkby, staCompDevVendor=staCompDevVendor, setIpro1nnServicetaDportf=setIpro1nnServicetaDportf, staVpnTunnel=staVpnTunnel, staIproOpenporSrcr=staIproOpenporSrcr, staChanConnt=staChanConnt, setWanPptppeeRtg=setWanPptppeeRtg, staPptpRxe=staPptpRxe, staDsl=staDsl, setWanDialuppPee=setWanDialuppPee)
