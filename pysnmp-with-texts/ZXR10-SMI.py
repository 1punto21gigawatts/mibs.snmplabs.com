#
# PySNMP MIB module ZXR10-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-SMI
# Produced by pysmi-0.3.4 at Wed May  1 15:48:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, Bits, Counter64, Unsigned32, TimeTicks, ObjectIdentity, ModuleIdentity, Integer32, iso, enterprises, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Bits", "Counter64", "Unsigned32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Integer32", "iso", "enterprises", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
zte = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902))
zte.setRevisions(('2005-04-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: zte.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: zte.setLastUpdated('200504120000Z')
if mibBuilder.loadTexts: zte.setOrganization('ZTE Corporation')
if mibBuilder.loadTexts: zte.setContactInfo('ZTE Corporation Nanjing Institute of ZTE Corporation No.68 Zijinghua Rd. Yuhuatai District, Nanjing, China Tel: +86-25-52870000')
if mibBuilder.loadTexts: zte.setDescription('ZXROS SMI MIB')
zxr10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3))
if mibBuilder.loadTexts: zxr10.setStatus('current')
if mibBuilder.loadTexts: zxr10.setDescription('zxr10 is the root OBJECT IDENTIFIER for ZTE routers and switches pruducts')
zxr10TCP = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 68))
if mibBuilder.loadTexts: zxr10TCP.setStatus('current')
if mibBuilder.loadTexts: zxr10TCP.setDescription('ZXR10-TCP Project Object.')
zxr10protocol = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 101))
if mibBuilder.loadTexts: zxr10protocol.setStatus('current')
if mibBuilder.loadTexts: zxr10protocol.setDescription('Subtree beneath which protocol MIBS were built.')
zxr10interfaces = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 103))
if mibBuilder.loadTexts: zxr10interfaces.setStatus('current')
if mibBuilder.loadTexts: zxr10interfaces.setDescription('Subtree beneath which switches MIBS were built.')
zxr10L2vpn = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 104))
if mibBuilder.loadTexts: zxr10L2vpn.setStatus('current')
if mibBuilder.loadTexts: zxr10L2vpn.setDescription('Subtree beneath which switches MIBS were built.')
zxr10L3vpn = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 105))
if mibBuilder.loadTexts: zxr10L3vpn.setStatus('current')
if mibBuilder.loadTexts: zxr10L3vpn.setDescription('Subtree beneath which switches MIBS were built.')
alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 302))
if mibBuilder.loadTexts: alarm.setStatus('current')
if mibBuilder.loadTexts: alarm.setDescription('Subtree beneath which switches MIBS were built.')
zxr10MplsTe = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 315))
if mibBuilder.loadTexts: zxr10MplsTe.setStatus('current')
if mibBuilder.loadTexts: zxr10MplsTe.setDescription('Mpls Te Project Objects.')
zxr10MplsTeFrr = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 316))
if mibBuilder.loadTexts: zxr10MplsTeFrr.setStatus('current')
if mibBuilder.loadTexts: zxr10MplsTeFrr.setDescription('MPLS-TE FRR Project Object.')
zxr10MplsOam = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 317))
if mibBuilder.loadTexts: zxr10MplsOam.setStatus('current')
if mibBuilder.loadTexts: zxr10MplsOam.setDescription('MPLS OAM Project Object.')
mplsTeStaticLsp = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 320))
if mibBuilder.loadTexts: mplsTeStaticLsp.setStatus('current')
if mibBuilder.loadTexts: mplsTeStaticLsp.setDescription('MPLSTE STATIC LSP Project Object.')
zxr10RosngMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 6000))
if mibBuilder.loadTexts: zxr10RosngMIB.setStatus('current')
if mibBuilder.loadTexts: zxr10RosngMIB.setDescription('Subtree beneath which ROSNG MIBS were built.')
mibBuilder.exportSymbols("ZXR10-SMI", PYSNMP_MODULE_ID=zte, zxr10TCP=zxr10TCP, zte=zte, zxr10MplsTeFrr=zxr10MplsTeFrr, zxr10L2vpn=zxr10L2vpn, zxr10interfaces=zxr10interfaces, zxr10MplsTe=zxr10MplsTe, zxr10RosngMIB=zxr10RosngMIB, mplsTeStaticLsp=mplsTeStaticLsp, zxr10MplsOam=zxr10MplsOam, zxr10protocol=zxr10protocol, zxr10=zxr10, zxr10L3vpn=zxr10L3vpn, alarm=alarm)
