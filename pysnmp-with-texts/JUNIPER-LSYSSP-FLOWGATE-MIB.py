#
# PySNMP MIB module JUNIPER-LSYSSP-FLOWGATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-FLOWGATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:59:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
jnxLsysSpFlowgate, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowgate")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, Counter32, Counter64, ObjectIdentity, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ModuleIdentity, iso, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Counter32", "Counter64", "ObjectIdentity", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ModuleIdentity", "iso", "Unsigned32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxLsysSpFlowgateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setDescription('This module defines the flow-gate-specific MIB for Juniper Enterprise Logical-System (LSYS) security profiles. Juniper documentation is recommended as the reference. The LSYS security profile provides various static and dynamic resource management by observing resource quota limits. Security flow-gate resource is the focus in this MIB. ')
jnxLsysSpFlowgateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1))
jnxLsysSpFlowgateSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2))
jnxLsysSpFlowgateTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpFlowgateTable.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateTable.setDescription('LSYSPROFILE flow-gate objects for flow-gate resource consumption per LSYS.')
jnxLsysSpFlowgateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-FLOWGATE-MIB", "jnxLsysSpFlowgateLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowgateEntry.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateEntry.setDescription('An entry in flow-gate resource table.')
jnxLsysSpFlowgateLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpFlowgateLsysName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateLsysName.setDescription('The name of the logical system for which flow-gate resource information is retrieved. ')
jnxLsysSpFlowgateProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateProfileName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateProfileName.setDescription('The security profile name string for the LSYS.')
jnxLsysSpFlowgateUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsage.setDescription('The current resource usage count for the LSYS.')
jnxLsysSpFlowgateReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateReserved.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateReserved.setDescription('The reserved resource count for the LSYS.')
jnxLsysSpFlowgateMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaximum.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaximum.setDescription('The maximum allowed resource usage count for the LSYS.')
jnxLsysSpFlowgateUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsedAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsedAmount.setDescription('The flow-gate resource consumption over all LSYS.')
jnxLsysSpFlowgateMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaxQuota.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaxQuota.setDescription('The flow-gate resource maximum quota for the whole device for all LSYS.')
jnxLsysSpFlowgateAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateAvailableAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateAvailableAmount.setDescription('The flow-gate resource available in the whole device.')
jnxLsysSpFlowgateHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUsage.setDescription('The most amount of flow-gate resource consumed of a LSYS.')
jnxLsysSpFlowgateHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUser.setDescription('The LSYS name that consume the most flow-gate resource.')
jnxLsysSpFlowgateLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUsage.setDescription('The least amount of flow-gate resource consumed of a LSYS.')
jnxLsysSpFlowgateLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUser.setDescription('The LSYS name that consume the least flow-gate resource.')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWGATE-MIB", jnxLsysSpFlowgateUsage=jnxLsysSpFlowgateUsage, jnxLsysSpFlowgateEntry=jnxLsysSpFlowgateEntry, PYSNMP_MODULE_ID=jnxLsysSpFlowgateMIB, jnxLsysSpFlowgateHeaviestUsage=jnxLsysSpFlowgateHeaviestUsage, jnxLsysSpFlowgateLightestUser=jnxLsysSpFlowgateLightestUser, jnxLsysSpFlowgateHeaviestUser=jnxLsysSpFlowgateHeaviestUser, jnxLsysSpFlowgateTable=jnxLsysSpFlowgateTable, jnxLsysSpFlowgateLsysName=jnxLsysSpFlowgateLsysName, jnxLsysSpFlowgateReserved=jnxLsysSpFlowgateReserved, jnxLsysSpFlowgateProfileName=jnxLsysSpFlowgateProfileName, jnxLsysSpFlowgateObjects=jnxLsysSpFlowgateObjects, jnxLsysSpFlowgateMIB=jnxLsysSpFlowgateMIB, jnxLsysSpFlowgateSummary=jnxLsysSpFlowgateSummary, jnxLsysSpFlowgateMaximum=jnxLsysSpFlowgateMaximum, jnxLsysSpFlowgateMaxQuota=jnxLsysSpFlowgateMaxQuota, jnxLsysSpFlowgateAvailableAmount=jnxLsysSpFlowgateAvailableAmount, jnxLsysSpFlowgateUsedAmount=jnxLsysSpFlowgateUsedAmount, jnxLsysSpFlowgateLightestUsage=jnxLsysSpFlowgateLightestUsage)
