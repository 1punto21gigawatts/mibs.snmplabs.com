#
# PySNMP MIB module CISCO-SERVICE-CONTROL-ATTACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SERVICE-CONTROL-ATTACK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, iso, MibIdentifier, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Unsigned32, ObjectIdentity, TimeTicks, Bits, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "MibIdentifier", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Unsigned32", "ObjectIdentity", "TimeTicks", "Bits", "IpAddress", "NotificationType")
TimeInterval, TimeStamp, DisplayString, TextualConvention, TruthValue, AutonomousType = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TimeStamp", "DisplayString", "TextualConvention", "TruthValue", "AutonomousType")
ciscoServiceControlAttackMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 693))
ciscoServiceControlAttackMIB.setRevisions(('2013-08-16 00:00', '2009-05-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoServiceControlAttackMIB.setRevisionsDescriptions(('Updates to support traps for global attacks. For this 1. A new trap is introduced: cscaGlobalAttackFilterChange. 2. A new object is introduced: cscaGlobalAtackType to describe the type of global attack. 3. A 3 groups are introduced: a. cscaMIBNotificationGroupRev1, deprecating cscaMIBNotificationGroup. b. cscaFilterObjectGroupRev1, deprecating cscaFilterObjectGroup. c. cscaMIBNotifControlGroupRev1, deprecating cscaMIBNotifControlGroup 4. A new compliance is introduced: cscaMIBComplianceRev1, deprecating cscaMIBCompliance.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoServiceControlAttackMIB.setLastUpdated('201308160000Z')
if mibBuilder.loadTexts: ciscoServiceControlAttackMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoServiceControlAttackMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-excelsior-dev@cisco.com')
if mibBuilder.loadTexts: ciscoServiceControlAttackMIB.setDescription('This MIB provides data related to different types of attacks detected by a service control entity. A service control entity is a network device which monitors and controls traffic. The service control entity is used as a platform for different service control applications which may perform monitoring operations beyond packet counting and delve deeper into the contents of network traffic. It provides programmable stateful inspection of bidirectional traffic flows and maps these flows with user/subscriber ownership. An attack is a malicious network activity with certain traffic characteristics and which is targeted on a certain network entity. An attack can be identified by its type, direction, source address, destination address and ports. Once an attack is detected, an attack filter is activated based on the type of the attack and corresponding actions are taken in the monitored network - this is referred to as attack start. For example the attack filter can drop the attacking traffic. When the attack detector identifies that the attack characteristics are no longer exist, it ends the mitigation action - what is referred to as attack end. The attack mitigation action is also referred to as attack filtering in this MIB. The time duration of attack filtering between attack start to attack end along with the direction (upstream, downstream) is also maintained by the service control entity. Attack filtering can be applied from the subscriber side to the network side, in the upstream direction. The downstream attack filtering is done from the network side to the subscriber side. This MIB also defines notifications generated by the service control entity when an attack is detected on a monitored network.')
class CscaAttackType(TextualConvention, Integer32):
    description = 'A value which identifies the various attack types which may be detected by the service control entity.'
    status = 'current'
    displayHint = 'd'

ciscoServiceControlAttackMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 0))
ciscoServiceControlAttackMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 1))
ciscoServiceControlAttackMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 2))
cscaFilterMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1))
cscaTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2), )
if mibBuilder.loadTexts: cscaTypeTable.setStatus('current')
if mibBuilder.loadTexts: cscaTypeTable.setDescription('This table lists the aggregated statistics for each detected attack in a network controlled by a service control entity.')
cscaTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeIndex"))
if mibBuilder.loadTexts: cscaTypeEntry.setStatus('current')
if mibBuilder.loadTexts: cscaTypeEntry.setDescription('This entry contains information for an attack detected by the service control entity. The service control entity can report a number of attack types, the cscaTypeTable is created during the initialization of the service control entity and is valid while the service control entity is operational.')
cscaTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 1), CscaAttackType().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: cscaTypeIndex.setStatus('current')
if mibBuilder.loadTexts: cscaTypeIndex.setDescription('This object uniquely identifies the attack type.')
cscaTypeCurrentNumAttacks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 2), Gauge32()).setUnits('attacks').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeCurrentNumAttacks.setStatus('current')
if mibBuilder.loadTexts: cscaTypeCurrentNumAttacks.setDescription('This object indicates the current number of ongoing attacks of this type, that the service control entity has detected in the network.')
cscaTypeTotalNumAttacks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 3), Counter32()).setUnits('attacks').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeTotalNumAttacks.setStatus('current')
if mibBuilder.loadTexts: cscaTypeTotalNumAttacks.setDescription('This object indicates the total number of attacks of this type since the last discontinuity.')
cscaTypeTotalNumFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 4), Counter64()).setUnits('IP flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeTotalNumFlows.setStatus('current')
if mibBuilder.loadTexts: cscaTypeTotalNumFlows.setDescription('This object indicates the total number of IP flows on which this type of attack has been detected, since the last discontinuity.')
cscaTypeTotalNumSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeTotalNumSeconds.setStatus('current')
if mibBuilder.loadTexts: cscaTypeTotalNumSeconds.setDescription('This object indicates the accumulated duration in seconds belonging to this attack type, since the last discontinuity.')
cscaTypeOriginatedByNetworkSide = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeOriginatedByNetworkSide.setStatus('current')
if mibBuilder.loadTexts: cscaTypeOriginatedByNetworkSide.setDescription('This object indicates whether this attack type is originated from the Network side or from the Subscriber side.')
cscaTypeProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeProtocol.setStatus('current')
if mibBuilder.loadTexts: cscaTypeProtocol.setDescription('This enumerated object indicates the protocol type for this type of attack (TCP/UDP/ICMP/etc). The values for this object are: (1) TCP (2) UDP (3) ICMP (4) Other')
cscaTypeIsPortSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeIsPortSpecific.setStatus('current')
if mibBuilder.loadTexts: cscaTypeIsPortSpecific.setDescription('This object indicates whether the attack type is port-specific or not.')
cscaTypeIPsDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaTypeIPsDetected.setStatus('current')
if mibBuilder.loadTexts: cscaTypeIPsDetected.setDescription('This object indicates which IPs are detected in this type of attack. The enumerated values are: (1) Originating Side IP is detected. (2) Attacked Side IP is detected. (3) Both side IPs are detected.')
cscaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3), )
if mibBuilder.loadTexts: cscaInfoTable.setStatus('current')
if mibBuilder.loadTexts: cscaInfoTable.setDescription('This table lists information for attack mitigation, also referred to as attack filtering, done by a service control entity in the monitored network.')
cscaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cscaInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cscaInfoEntry.setDescription('This entry contains information about attack mitigation done by a physical service control entity, for attacks which it has detected.')
cscaInfoUpStreamAttackFilteringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3, 1, 1), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaInfoUpStreamAttackFilteringTime.setStatus('current')
if mibBuilder.loadTexts: cscaInfoUpStreamAttackFilteringTime.setDescription('This object indicates the cumulative time during which attacks in the up-stream direction were filtered.')
cscaInfoUpStreamLastAttackFilteringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaInfoUpStreamLastAttackFilteringTime.setStatus('current')
if mibBuilder.loadTexts: cscaInfoUpStreamLastAttackFilteringTime.setDescription('This object indicates the time since the previous attack in the upstream direction has ended. Attack end is reached when the service control entity attack detector identifies that the attack characteristics (like high flow rate) no longer exist, and the attack is suppressed in the up-stream traffic.')
cscaInfoDownStreamAttackFilteringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3, 1, 3), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaInfoDownStreamAttackFilteringTime.setStatus('current')
if mibBuilder.loadTexts: cscaInfoDownStreamAttackFilteringTime.setDescription('This object indicates the cumulative time during which attacks in the down-stream direction were filtered.')
cscaInfoDownStreamLastAttackFilteringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 3, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaInfoDownStreamLastAttackFilteringTime.setStatus('current')
if mibBuilder.loadTexts: cscaInfoDownStreamLastAttackFilteringTime.setDescription('This object indicates the time since the previous attack in the downstream direction has ended. Attack end is reached when the service control entity attack detector identifies that the attack characteristics (like high flow rate) no longer exist, and the attack is suppressed in the down-stream traffic.')
cscaType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 1), CscaAttackType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaType.setStatus('current')
if mibBuilder.loadTexts: cscaType.setDescription("This object indicates the type of an attack detected and reported by the service control entity. There are numerous attack types, based on the service control entity's definition. The service control entity monitors and mitigates a predefined set of attack type. The value of this object should be used as index to table cscaTypeTable in order to query for information regarding this attack type, such as its name and other statistics.")
cscaSourceAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaSourceAddressType.setStatus('current')
if mibBuilder.loadTexts: cscaSourceAddressType.setDescription('This object indicates the address type for cscaSourceAddress.')
cscaSourceAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaSourceAddress.setStatus('current')
if mibBuilder.loadTexts: cscaSourceAddress.setDescription('This object indicates the network address that is the source end point of this attack.')
cscaDestinationAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 4), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaDestinationAddressType.setStatus('current')
if mibBuilder.loadTexts: cscaDestinationAddressType.setDescription('This object indicates the address type for cscaDestinationAddress.')
cscaDestinationAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 5), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaDestinationAddress.setStatus('current')
if mibBuilder.loadTexts: cscaDestinationAddress.setDescription('This object indicates the network address that is the destination end point of this attack.')
cscaAttackedPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 6), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaAttackedPort.setStatus('current')
if mibBuilder.loadTexts: cscaAttackedPort.setDescription('This object indicates the port on which this attack occurs, if relevant for this type of attack.')
cscaFilterStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activated", 1), ("deactivated", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cscaFilterStatus.setStatus('current')
if mibBuilder.loadTexts: cscaFilterStatus.setDescription("This object indicates the status of the filter for this attack. The values for this object are '1' (activated) and '2' (de-activated).")
cscaNotifsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cscaNotifsEnabled.setStatus('current')
if mibBuilder.loadTexts: cscaNotifsEnabled.setDescription('This object specifies whether the system generates the cscaFilterChange notification.')
cscaLastDiscontinuityTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaLastDiscontinuityTimeStamp.setStatus('current')
if mibBuilder.loadTexts: cscaLastDiscontinuityTimeStamp.setDescription('This object indicates the value of sysUpTime when the last discontinuity occurred.')
cscaGlobalAttackType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("icmpAttack", 1), ("udpAttack", 2), ("udpFragmentAttack", 3), ("tcpSynAttack", 4), ("tcpRstAttack", 5), ("tcpFragmentAttack", 6), ("tcpNonSynAttack", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscaGlobalAttackType.setStatus('current')
if mibBuilder.loadTexts: cscaGlobalAttackType.setDescription('This object indicates the type of a global attack detected and reported by the service control entity. The list of the various global attack are: ICMP attack(1) UDP attack(2) UDP fragment attack(3) TCP SYN Attack(4) TCP RST Attack(5) TCP fragment Attack(6) TCP NON-SYN Attack(7)')
cscaGlobalAttackNotifsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 693, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cscaGlobalAttackNotifsEnabled.setStatus('current')
if mibBuilder.loadTexts: cscaGlobalAttackNotifsEnabled.setDescription("This object specifies whether the system generates the cscaGlobalAttackFilterChange notification. Setting this object value to 'true' will enable generation of cscaGlobalAttackFilterChange notification. Setting this object value to 'false' will disable generation of cscaGlobalAttackFilterChange notification.")
cscaFilterChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 693, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaAttackedPort"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterStatus"))
if mibBuilder.loadTexts: cscaFilterChange.setStatus('current')
if mibBuilder.loadTexts: cscaFilterChange.setDescription('The system generates this notification to indicate that the cscaFilterStatus of the attack filter for cscaType has changed due to the reason determined by cscaDescription. The system limits the generation of this notifications for the same cscaType to a five-second interval.')
cscaGlobalAttackFilterChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 693, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaGlobalAttackType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterStatus"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeOriginatedByNetworkSide"))
if mibBuilder.loadTexts: cscaGlobalAttackFilterChange.setStatus('current')
if mibBuilder.loadTexts: cscaGlobalAttackFilterChange.setDescription('The notification is generated when a start or end of a global attack is detected in the system. Below fields are sent with the trap: entPhysicalName indicates the name of the originating physical entity. cscaGlobalAttackType indicates the type of the global attack. cscaFilterStatus indicates whether the global attack is started or ended ie. the attack filter status is activated or deactivated. cscaTypeOriginatedByNetworkSide indicates the origin/source of the attack, whether it originated from network or subscriber side.')
cscaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 1))
cscaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2))
cscaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 1, 1)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBAttackTypeObjectGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBNotificationGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBAttackInfoObjectGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterObjectGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBNotifControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBCompliance = cscaMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cscaMIBCompliance.setDescription('The compliance statement for SNMP Agents which implement this MIB.')
cscaMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 1, 2)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBAttackTypeObjectGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBNotificationGroupRev1"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBAttackInfoObjectGroup"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterObjectGroupRev1"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaMIBNotifControlGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBComplianceRev1 = cscaMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: cscaMIBComplianceRev1.setDescription('The compliance statement for SNMP Agents which implement this generic filter (both Specific IP and global attack) MIB.')
cscaMIBAttackTypeObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 1)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeCurrentNumAttacks"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeTotalNumAttacks"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeTotalNumFlows"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeTotalNumSeconds"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeOriginatedByNetworkSide"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeProtocol"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeIsPortSpecific"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaTypeIPsDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBAttackTypeObjectGroup = cscaMIBAttackTypeObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cscaMIBAttackTypeObjectGroup.setDescription('A collection of objects which provides attack information.')
cscaMIBAttackInfoObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 2)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaInfoUpStreamAttackFilteringTime"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaInfoUpStreamLastAttackFilteringTime"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaInfoDownStreamAttackFilteringTime"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaInfoDownStreamLastAttackFilteringTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBAttackInfoObjectGroup = cscaMIBAttackInfoObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cscaMIBAttackInfoObjectGroup.setDescription('A collection of objects which provides attack filtering times for upstream and down stream attacks.')
cscaMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 3)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBNotificationGroup = cscaMIBNotificationGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cscaMIBNotificationGroup.setDescription('A collection of notification which provides status change information for attack filters. cscaMIBNotificationGroup object is superseded by cscaMIBNotificationGroupRev1.')
cscaFilterObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 4)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaAttackedPort"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterStatus"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaLastDiscontinuityTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaFilterObjectGroup = cscaFilterObjectGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cscaFilterObjectGroup.setDescription('A collection of objects which define each attack filter and its status. cscaFilterObjectGroup object is superseded by cscaFilterObjectGroupRev1.')
cscaMIBNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 5)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaNotifsEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBNotifControlGroup = cscaMIBNotifControlGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cscaMIBNotifControlGroup.setDescription('A collection of object(s) to control the enable/disable state of notification generation. cscaMIBNotifControlGroup object is superseded by cscaMIBNotifControlGroupRev1.')
cscaMIBNotificationGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 6)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterChange"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaGlobalAttackFilterChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBNotificationGroupRev1 = cscaMIBNotificationGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cscaMIBNotificationGroupRev1.setDescription('A collection of notification which provides status change information for both specific IP and global attack filters.')
cscaFilterObjectGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 7)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaSourceAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddressType"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaDestinationAddress"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaAttackedPort"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaFilterStatus"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaLastDiscontinuityTimeStamp"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaGlobalAttackType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaFilterObjectGroupRev1 = cscaFilterObjectGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cscaFilterObjectGroupRev1.setDescription('A collection of objects which define each attack filter and its status.')
cscaMIBNotifControlGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 693, 2, 2, 8)).setObjects(("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaNotifsEnabled"), ("CISCO-SERVICE-CONTROL-ATTACK-MIB", "cscaGlobalAttackNotifsEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscaMIBNotifControlGroupRev1 = cscaMIBNotifControlGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cscaMIBNotifControlGroupRev1.setDescription('A collection of object(s) to control the enable/disable state of notification generation.')
mibBuilder.exportSymbols("CISCO-SERVICE-CONTROL-ATTACK-MIB", cscaTypeOriginatedByNetworkSide=cscaTypeOriginatedByNetworkSide, cscaDestinationAddressType=cscaDestinationAddressType, cscaMIBAttackInfoObjectGroup=cscaMIBAttackInfoObjectGroup, cscaType=cscaType, cscaTypeIndex=cscaTypeIndex, cscaGlobalAttackNotifsEnabled=cscaGlobalAttackNotifsEnabled, cscaFilterStatus=cscaFilterStatus, cscaMIBNotificationGroup=cscaMIBNotificationGroup, cscaMIBGroups=cscaMIBGroups, cscaMIBCompliances=cscaMIBCompliances, cscaFilterObjectGroup=cscaFilterObjectGroup, cscaInfoDownStreamLastAttackFilteringTime=cscaInfoDownStreamLastAttackFilteringTime, cscaTypeCurrentNumAttacks=cscaTypeCurrentNumAttacks, cscaGlobalAttackFilterChange=cscaGlobalAttackFilterChange, cscaInfoDownStreamAttackFilteringTime=cscaInfoDownStreamAttackFilteringTime, cscaTypeIPsDetected=cscaTypeIPsDetected, cscaDestinationAddress=cscaDestinationAddress, cscaInfoUpStreamAttackFilteringTime=cscaInfoUpStreamAttackFilteringTime, cscaMIBComplianceRev1=cscaMIBComplianceRev1, cscaSourceAddressType=cscaSourceAddressType, cscaTypeTotalNumFlows=cscaTypeTotalNumFlows, CscaAttackType=CscaAttackType, cscaFilterObjectGroupRev1=cscaFilterObjectGroupRev1, ciscoServiceControlAttackMIBNotifs=ciscoServiceControlAttackMIBNotifs, cscaNotifsEnabled=cscaNotifsEnabled, PYSNMP_MODULE_ID=ciscoServiceControlAttackMIB, cscaTypeTable=cscaTypeTable, cscaLastDiscontinuityTimeStamp=cscaLastDiscontinuityTimeStamp, cscaMIBNotifControlGroupRev1=cscaMIBNotifControlGroupRev1, cscaTypeProtocol=cscaTypeProtocol, cscaTypeIsPortSpecific=cscaTypeIsPortSpecific, ciscoServiceControlAttackMIBConform=ciscoServiceControlAttackMIBConform, cscaTypeTotalNumSeconds=cscaTypeTotalNumSeconds, ciscoServiceControlAttackMIBObjects=ciscoServiceControlAttackMIBObjects, cscaGlobalAttackType=cscaGlobalAttackType, cscaInfoEntry=cscaInfoEntry, cscaInfoTable=cscaInfoTable, ciscoServiceControlAttackMIB=ciscoServiceControlAttackMIB, cscaTypeEntry=cscaTypeEntry, cscaSourceAddress=cscaSourceAddress, cscaTypeTotalNumAttacks=cscaTypeTotalNumAttacks, cscaMIBNotificationGroupRev1=cscaMIBNotificationGroupRev1, cscaInfoUpStreamLastAttackFilteringTime=cscaInfoUpStreamLastAttackFilteringTime, cscaFilterChange=cscaFilterChange, cscaMIBAttackTypeObjectGroup=cscaMIBAttackTypeObjectGroup, cscaMIBNotifControlGroup=cscaMIBNotifControlGroup, cscaFilterMIBObjects=cscaFilterMIBObjects, cscaAttackedPort=cscaAttackedPort, cscaMIBCompliance=cscaMIBCompliance)
