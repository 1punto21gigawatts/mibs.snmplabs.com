#
# PySNMP MIB module A3COM-HUAWEI-USER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-USER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:07:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, ObjectIdentity, MibIdentifier, Gauge32, IpAddress, Counter32, iso, NotificationType, ModuleIdentity, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibIdentifier", "Gauge32", "IpAddress", "Counter32", "iso", "NotificationType", "ModuleIdentity", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32")
DisplayString, DateAndTime, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "MacAddress", "TextualConvention", "RowStatus")
h3cUser = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12))
if mibBuilder.loadTexts: h3cUser.setLastUpdated('200304100000Z')
if mibBuilder.loadTexts: h3cUser.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: h3cUser.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: h3cUser.setDescription(' This MIB contains objects to Manage configuration and Monitor running state for userlog feature. ')
class DisplayString(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class ServiceType(TextualConvention, Integer32):
    description = 'enable (1) disable (2) '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

h3cUserObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1))
h3cUserInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1), )
if mibBuilder.loadTexts: h3cUserInfoTable.setStatus('current')
if mibBuilder.loadTexts: h3cUserInfoTable.setDescription(' Local User Info Table ')
h3cUserInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-USER-MIB", "h3cUserIndex"))
if mibBuilder.loadTexts: h3cUserInfoEntry.setStatus('current')
if mibBuilder.loadTexts: h3cUserInfoEntry.setDescription(' The entry of h3cUserInfoTable ')
h3cUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserName.setStatus('current')
if mibBuilder.loadTexts: h3cUserName.setDescription(' The name of local user, it must be unique. ')
h3cUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserPassword.setStatus('current')
if mibBuilder.loadTexts: h3cUserPassword.setDescription(' The password of local user, default is null. When read, h3cUserPassword always returns an Octet String of length zero. ')
h3cAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAuthMode.setStatus('current')
if mibBuilder.loadTexts: h3cAuthMode.setDescription(' The encrypting type of password: 0 : password simple, means password is clean text. 7 : password cipher, means password is encrypted text. default is 0. ')
h3cUserLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserLevel.setStatus('current')
if mibBuilder.loadTexts: h3cUserLevel.setDescription(' The privilege of local user the value range is from 0 to 3, and 0 is minimum, 3 is maximum. default is 0. ')
h3cUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("block", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserState.setStatus('current')
if mibBuilder.loadTexts: h3cUserState.setDescription(' The state of local user 0: active, means local user can execute any operations that he has privilege to do. 1: block, means local user can not execute any operations. default is active. ')
h3cUserInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserInfoRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cUserInfoRowStatus.setDescription(' The status of this conceptual row. Now only support CreateAndGo and Destroy and Active. ')
h3cUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483646)))
if mibBuilder.loadTexts: h3cUserIndex.setStatus('current')
if mibBuilder.loadTexts: h3cUserIndex.setDescription(' The index of local user ')
h3cUserAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2), )
if mibBuilder.loadTexts: h3cUserAttributeTable.setStatus('current')
if mibBuilder.loadTexts: h3cUserAttributeTable.setDescription(' Local User Attribute Table. if there are data in h3cUserInfoTable, this table should have the relevant data. this table only support query and modify, but not support create and delete operations. ')
h3cUserAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-USER-MIB", "h3cUserIndex"))
if mibBuilder.loadTexts: h3cUserAttributeEntry.setStatus('current')
if mibBuilder.loadTexts: h3cUserAttributeEntry.setDescription('The entry of h3cUserAttributeTable ')
h3cAccessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cAccessLimit.setStatus('current')
if mibBuilder.loadTexts: h3cAccessLimit.setDescription(' The maximum user number of current user who can access devices. default is 0, means no limit. ')
h3cIdleCut = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIdleCut.setStatus('current')
if mibBuilder.loadTexts: h3cIdleCut.setDescription(' Valid idle time out(second): 60..7200, default is 0, means disable idle time out. ')
h3cIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIPAddress.setStatus('current')
if mibBuilder.loadTexts: h3cIPAddress.setDescription(" Set local user's ip address. default is 0.0.0.0 ")
h3cNasIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNasIPAddress.setStatus('current')
if mibBuilder.loadTexts: h3cNasIPAddress.setDescription(" Set local user's ip address of network access server. default is 127.0.0.1, means local machine. ")
h3cSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSlotNum.setStatus('current')
if mibBuilder.loadTexts: h3cSlotNum.setDescription(" Set local user's slot. default is 0. ")
h3cSubSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSubSlotNum.setStatus('current')
if mibBuilder.loadTexts: h3cSubSlotNum.setDescription(" Set local user's sub-slot. default is 0. ")
h3cPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPortNum.setStatus('current')
if mibBuilder.loadTexts: h3cPortNum.setDescription(" Set local user's port number. 0 is an insignificant value for initial status. ")
h3cMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMacAddress.setStatus('current')
if mibBuilder.loadTexts: h3cMacAddress.setDescription(" Set local user's mac address. default is 0-0-0, means the local user do not bind any mac address. ")
h3cVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVlan.setStatus('current')
if mibBuilder.loadTexts: h3cVlan.setDescription(" Set local user's vlan id. the value range is from 0 to 4094. default is 0, means the local user is not in any vlan. ")
h3cFtpService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 10), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cFtpService.setStatus('current')
if mibBuilder.loadTexts: h3cFtpService.setDescription(' FTP service: enable Setting this object to the value enable has the effect of enabling the FTP service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the FTP service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cFtpDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cFtpDirectory.setStatus('current')
if mibBuilder.loadTexts: h3cFtpDirectory.setDescription(' Directory of FTP user. default is null, means if local user has the privilege of ftp service. ')
h3cLanAccessService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 12), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cLanAccessService.setStatus('current')
if mibBuilder.loadTexts: h3cLanAccessService.setDescription(' Lan Access service: enable Setting this object to the value enable has the effect of enabling the lan access service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the lan access service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cSshService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 13), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSshService.setStatus('current')
if mibBuilder.loadTexts: h3cSshService.setDescription(' SSH service: enable Setting this object to the value enable has the effect of enabling the SSH service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the SSH service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cTelnetService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 14), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTelnetService.setStatus('current')
if mibBuilder.loadTexts: h3cTelnetService.setDescription(' Telnet service: enable Setting this object to the value enable has the effect of enabling the TELNET service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the TELNET service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cTerminalService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 15), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTerminalService.setStatus('current')
if mibBuilder.loadTexts: h3cTerminalService.setDescription(' Terminal service: enable Setting this object to the value enable has the effect of enabling the terminal service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the terminal service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 16), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cExpirationDate.setStatus('current')
if mibBuilder.loadTexts: h3cExpirationDate.setDescription(" Expired date of user. The default value is 0-0-0,0:0:0.0, and means it doesn't expire for ever. ")
h3cUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cUserGroup.setStatus('current')
if mibBuilder.loadTexts: h3cUserGroup.setDescription(" The user group that user belongs to. Any user must belong to a user group. The default group is the 'system' group. The maximum length of the group name is 80. ")
h3cPortalService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 18), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPortalService.setStatus('current')
if mibBuilder.loadTexts: h3cPortalService.setDescription(' Portal service: enable Setting this object to the value enable has the effect of enabling the portal service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the portal service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cPPPService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 19), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPService.setStatus('current')
if mibBuilder.loadTexts: h3cPPPService.setDescription(' PPP service: enable Setting this object to the value enable has the effect of enabling the PPP service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the PPP service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cHttpService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 20), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cHttpService.setStatus('current')
if mibBuilder.loadTexts: h3cHttpService.setDescription(' Http service: enable Setting this object to the value enable has the effect of enabling the Web service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the Web service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cHttpsService = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 2, 1, 21), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cHttpsService.setStatus('current')
if mibBuilder.loadTexts: h3cHttpsService.setDescription(' Https service: enable Setting this object to the value enable has the effect of enabling the Web service for the corresponding entry in the h3cUserAttributeTable. disable Setting this object to the value disable has the effect of disabling the Web service for the corresponding entry in the h3cUserAttributeTable. The default value is disable. ')
h3cUserMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUserMaxNum.setStatus('current')
if mibBuilder.loadTexts: h3cUserMaxNum.setDescription(' This object contains the maximum number of local users. ')
h3cUserCurrNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUserCurrNum.setStatus('current')
if mibBuilder.loadTexts: h3cUserCurrNum.setDescription(' This object contains the current number of local users. ')
h3cUserIndexIndicator = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUserIndexIndicator.setStatus('current')
if mibBuilder.loadTexts: h3cUserIndexIndicator.setDescription(' This object contains an appropriate value to be used for h3cUserIndex when creating entries in the h3cUserInfoTable. The value 0 indicates that no unassigned entries are available. To obtain the h3cUserIndex value for a new entry, the manager issues a management protocol retrieval operation to obtain the current value of this object. After each retrieval, the agent should modify the value to the next unassigned index. After a manager retrieves a value the agent will determine through its local policy when this index value will be made available for reuse. ')
h3cUserRoleTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 6), )
if mibBuilder.loadTexts: h3cUserRoleTable.setStatus('current')
if mibBuilder.loadTexts: h3cUserRoleTable.setDescription(' Local User Role Table. If there is data in h3cUserInfoTable, this table should has the relevant data. ')
h3cUserRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-USER-MIB", "h3cUserIndex"), (0, "A3COM-HUAWEI-USER-MIB", "h3cUserRole"))
if mibBuilder.loadTexts: h3cUserRoleEntry.setStatus('current')
if mibBuilder.loadTexts: h3cUserRoleEntry.setDescription('The entry of h3cUserRoleTable.')
h3cUserRole = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: h3cUserRole.setStatus('current')
if mibBuilder.loadTexts: h3cUserRole.setDescription(" The user's role determines the user's privilege. The user must be authorized one role at least. The default user role for a local user created by a network-admin user is network-operator, and the default user role for a local user created by a vd-admin or level-15 user is vd-operator. ")
h3cUserRoleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserRoleStatus.setStatus('current')
if mibBuilder.loadTexts: h3cUserRoleStatus.setDescription(" This object is responsible for managing the creation, deletion and modification of rows, which support active status and CreateAndGo, Destroy operation. To create a new row, h3cUserIndex must be specified. The number of rows with same h3cUserIndex cann't be more than 64. If the the number of rows with a h3cUserIndex is 1, this row cann't be destroyed. ")
h3cUserGroupObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 2))
h3cUserGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 2, 1), )
if mibBuilder.loadTexts: h3cUserGroupInfoTable.setStatus('current')
if mibBuilder.loadTexts: h3cUserGroupInfoTable.setDescription(' User group information table. ')
h3cUserGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-USER-MIB", "h3cUserGroupName"))
if mibBuilder.loadTexts: h3cUserGroupInfoEntry.setStatus('current')
if mibBuilder.loadTexts: h3cUserGroupInfoEntry.setDescription(' The entry of h3cUserGroupInfoTable. ')
h3cUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: h3cUserGroupName.setStatus('current')
if mibBuilder.loadTexts: h3cUserGroupName.setDescription(' The index of user group. ')
h3cUserGroupInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 12, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cUserGroupInfoRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cUserGroupInfoRowStatus.setDescription(' The status of this conceptual row. Only support createAndGo, destroy and active. ')
mibBuilder.exportSymbols("A3COM-HUAWEI-USER-MIB", h3cSlotNum=h3cSlotNum, h3cSubSlotNum=h3cSubSlotNum, h3cUserInfoEntry=h3cUserInfoEntry, h3cExpirationDate=h3cExpirationDate, h3cUserGroupInfoRowStatus=h3cUserGroupInfoRowStatus, h3cAuthMode=h3cAuthMode, h3cPortNum=h3cPortNum, h3cUserRoleTable=h3cUserRoleTable, h3cTerminalService=h3cTerminalService, h3cHttpsService=h3cHttpsService, h3cVlan=h3cVlan, h3cUserRoleEntry=h3cUserRoleEntry, h3cMacAddress=h3cMacAddress, ServiceType=ServiceType, h3cNasIPAddress=h3cNasIPAddress, h3cFtpDirectory=h3cFtpDirectory, h3cUserIndexIndicator=h3cUserIndexIndicator, h3cTelnetService=h3cTelnetService, h3cUserInfoRowStatus=h3cUserInfoRowStatus, h3cUserIndex=h3cUserIndex, h3cHttpService=h3cHttpService, h3cUserAttributeEntry=h3cUserAttributeEntry, h3cUserName=h3cUserName, h3cFtpService=h3cFtpService, h3cUserRole=h3cUserRole, h3cAccessLimit=h3cAccessLimit, h3cUserRoleStatus=h3cUserRoleStatus, PYSNMP_MODULE_ID=h3cUser, h3cIPAddress=h3cIPAddress, h3cUserGroupObjects=h3cUserGroupObjects, h3cUser=h3cUser, h3cUserCurrNum=h3cUserCurrNum, h3cUserMaxNum=h3cUserMaxNum, h3cUserState=h3cUserState, h3cLanAccessService=h3cLanAccessService, h3cUserPassword=h3cUserPassword, h3cUserGroup=h3cUserGroup, h3cUserInfoTable=h3cUserInfoTable, h3cPortalService=h3cPortalService, h3cPPPService=h3cPPPService, h3cUserGroupInfoTable=h3cUserGroupInfoTable, h3cSshService=h3cSshService, h3cUserGroupInfoEntry=h3cUserGroupInfoEntry, h3cUserGroupName=h3cUserGroupName, h3cIdleCut=h3cIdleCut, h3cUserObjects=h3cUserObjects, h3cUserLevel=h3cUserLevel, DisplayString=DisplayString, h3cUserAttributeTable=h3cUserAttributeTable)
