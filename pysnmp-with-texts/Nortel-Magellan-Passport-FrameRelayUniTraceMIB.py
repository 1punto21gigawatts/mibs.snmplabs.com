#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayUniTraceMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayUniTraceMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:27:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
frUniIndex, frUni = mibBuilder.importSymbols("Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex", "frUni")
Unsigned32, StorageType, RowPointer, DisplayString, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "StorageType", "RowPointer", "DisplayString", "RowStatus")
NonReplicated, AsciiString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "AsciiString")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, Gauge32, Unsigned32, IpAddress, NotificationType, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ModuleIdentity, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "Gauge32", "Unsigned32", "IpAddress", "NotificationType", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ModuleIdentity", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayUniTraceMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105))
frUniTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7))
frUniTraceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1), )
if mibBuilder.loadTexts: frUniTraceRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceRowStatusTable.setDescription('This entry controls the addition and deletion of frUniTrace components.')
frUniTraceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceIndex"))
if mibBuilder.loadTexts: frUniTraceRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceRowStatusEntry.setDescription('A single entry in the table represents a single frUniTrace component.')
frUniTraceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceRowStatus.setDescription('This variable is used as the basis for SNMP naming of frUniTrace components. These components can be added and deleted.')
frUniTraceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
frUniTraceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceStorageType.setDescription('This variable represents the storage type value for the frUniTrace tables.')
frUniTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniTraceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceIndex.setDescription('This variable represents the index for the frUniTrace tables.')
frUniTraceOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10), )
if mibBuilder.loadTexts: frUniTraceOperationalTable.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceOperationalTable.setDescription('This group provides the operational attributes for the Trace component.')
frUniTraceOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceIndex"))
if mibBuilder.loadTexts: frUniTraceOperationalEntry.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceOperationalEntry.setDescription('An entry in the frUniTraceOperationalTable.')
frUniTraceReceiverName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceReceiverName.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceReceiverName.setDescription('This attribute should be set to the name of the desired trace receiver before starting a trace session. All available trace receivers are listed under the Trace Rcvr/<string> component. This attribute cannot be set while a trace is active.')
frUniTraceDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceDuration.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceDuration.setDescription('This attribute specifies the duration, in minutes, of a trace session. A value of 0 indicates unlimited duration in which case a trace session remains active until a stop command is issued. The default duration is 60 minutes. This attribute cannot be set while a trace is active.')
frUniTraceQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceQueueLimit.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceQueueLimit.setDescription('This attribute specifies the total number of bytes of traced data which may be queued for transmission to the trace receiver. When this limit is exceeded, incoming traced frames are discarded. This attribute can be set while a trace is active and takes effect immediately.')
frUniTraceSession = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceSession.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceSession.setDescription('This attribute is set automatically. It identifies the Trace Session component which is forwarding the trace data. This attribute is empty unless a trace is active.')
frUniTraceFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2))
frUniTraceFilterRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1), )
if mibBuilder.loadTexts: frUniTraceFilterRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterRowStatusTable.setDescription('This entry controls the addition and deletion of frUniTraceFilter components.')
frUniTraceFilterRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceFilterIndex"))
if mibBuilder.loadTexts: frUniTraceFilterRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterRowStatusEntry.setDescription('A single entry in the table represents a single frUniTraceFilter component.')
frUniTraceFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceFilterRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterRowStatus.setDescription('This variable is used as the basis for SNMP naming of frUniTraceFilter components. These components cannot be added nor deleted.')
frUniTraceFilterComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceFilterComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
frUniTraceFilterStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniTraceFilterStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterStorageType.setDescription('This variable represents the storage type value for the frUniTraceFilter tables.')
frUniTraceFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniTraceFilterIndex.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterIndex.setDescription('This variable represents the index for the frUniTraceFilter tables.')
frUniTraceFilterOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10), )
if mibBuilder.loadTexts: frUniTraceFilterOperationalTable.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterOperationalTable.setDescription('This group provides the operational attributes for the Frame Relay Trace Filter component.')
frUniTraceFilterOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniTraceMIB", "frUniTraceFilterIndex"))
if mibBuilder.loadTexts: frUniTraceFilterOperationalEntry.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterOperationalEntry.setDescription('An entry in the frUniTraceFilterOperationalTable.')
frUniTraceFilterTraceType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="e0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceFilterTraceType.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterTraceType.setDescription('This attribute specifies the level of filtering required for this trace session. A value of lmi indicates that Lmi frames are traced. A value of dlci indicates that frames from the Dlci specified by the tracedDlci attribute are traced. A value of badFrames indicates that bad received frames (overruns, CRC errors, aborts) are traced. The default is to trace all frames. This attribute can be set while a trace is active and takes effect immediately. Description of bits: lmi(0) dlci(1) badFrames(2)')
frUniTraceFilterTracedDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceFilterTracedDlci.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterTracedDlci.setDescription('This attribute specifies a particular Dlci to trace. A value of zero specifies that all Dlcis are to be traced. This attribute can be set while a trace is active and takes effect immediately.')
frUniTraceFilterDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="c0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceFilterDirection.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterDirection.setDescription('This attribute specifies the direction of the data to be traced as viewed by the service. The values can be egress, and/or ingress. An egress value indicates frames outbound from the service. An ingress value indicates frames inbound to the service. This attribute can be set while a trace is active and takes effect immediately. Description of bits: egress(0) ingress(1)')
frUniTraceFilterTracedLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 7, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniTraceFilterTracedLength.setStatus('mandatory')
if mibBuilder.loadTexts: frUniTraceFilterTracedLength.setDescription('This attribute specifies the maximum number of bytes to trace per frame starting from the byte following the frame flag. If the frame length is longer than the value specified by this attribute, then the traced frame is truncated. This attribute can be set while a trace is active and takes effect immediately.')
frameRelayUniTraceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 1))
frameRelayUniTraceGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 1, 4))
frameRelayUniTraceGroupBD01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 1, 4, 2))
frameRelayUniTraceGroupBD01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 1, 4, 2, 2))
frameRelayUniTraceCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 3))
frameRelayUniTraceCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 3, 4))
frameRelayUniTraceCapabilitiesBD01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 3, 4, 2))
frameRelayUniTraceCapabilitiesBD01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 105, 3, 4, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayUniTraceMIB", frUniTraceFilterOperationalTable=frUniTraceFilterOperationalTable, frameRelayUniTraceGroup=frameRelayUniTraceGroup, frameRelayUniTraceCapabilitiesBD01A=frameRelayUniTraceCapabilitiesBD01A, frUniTraceIndex=frUniTraceIndex, frUniTraceRowStatusTable=frUniTraceRowStatusTable, frUniTraceFilterTracedDlci=frUniTraceFilterTracedDlci, frameRelayUniTraceCapabilitiesBD=frameRelayUniTraceCapabilitiesBD, frUniTraceFilterComponentName=frUniTraceFilterComponentName, frUniTraceReceiverName=frUniTraceReceiverName, frUniTraceRowStatusEntry=frUniTraceRowStatusEntry, frameRelayUniTraceCapabilitiesBD01=frameRelayUniTraceCapabilitiesBD01, frUniTraceFilter=frUniTraceFilter, frUniTraceFilterStorageType=frUniTraceFilterStorageType, frUniTraceStorageType=frUniTraceStorageType, frUniTraceFilterRowStatusEntry=frUniTraceFilterRowStatusEntry, frameRelayUniTraceGroupBD01=frameRelayUniTraceGroupBD01, frUniTraceOperationalEntry=frUniTraceOperationalEntry, frUniTraceFilterRowStatusTable=frUniTraceFilterRowStatusTable, frUniTraceOperationalTable=frUniTraceOperationalTable, frameRelayUniTraceGroupBD01A=frameRelayUniTraceGroupBD01A, frUniTraceDuration=frUniTraceDuration, frUniTraceFilterTracedLength=frUniTraceFilterTracedLength, frUniTraceFilterTraceType=frUniTraceFilterTraceType, frameRelayUniTraceCapabilities=frameRelayUniTraceCapabilities, frUniTraceSession=frUniTraceSession, frameRelayUniTraceGroupBD=frameRelayUniTraceGroupBD, frUniTraceFilterIndex=frUniTraceFilterIndex, frameRelayUniTraceMIB=frameRelayUniTraceMIB, frUniTraceComponentName=frUniTraceComponentName, frUniTrace=frUniTrace, frUniTraceQueueLimit=frUniTraceQueueLimit, frUniTraceFilterRowStatus=frUniTraceFilterRowStatus, frUniTraceFilterOperationalEntry=frUniTraceFilterOperationalEntry, frUniTraceRowStatus=frUniTraceRowStatus, frUniTraceFilterDirection=frUniTraceFilterDirection)
