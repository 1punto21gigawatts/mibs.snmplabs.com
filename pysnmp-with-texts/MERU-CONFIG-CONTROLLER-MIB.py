#
# PySNMP MIB module MERU-CONFIG-CONTROLLER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MERU-CONFIG-CONTROLLER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:11:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
mwConfiguration, = mibBuilder.importSymbols("MERU-SMI", "mwConfiguration")
MwlVpnConnectivityStatus, MwlBonding, MwlEnableDisableOption, MwlOnOffSwitch, MwlRegionSettings, MwlAlarmState, MwlAvailabilityStatus, MwlControllerHwType, MwlOperationalState = mibBuilder.importSymbols("MERU-TC", "MwlVpnConnectivityStatus", "MwlBonding", "MwlEnableDisableOption", "MwlOnOffSwitch", "MwlRegionSettings", "MwlAlarmState", "MwlAvailabilityStatus", "MwlControllerHwType", "MwlOperationalState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, enterprises, MibIdentifier, iso, TimeTicks, Counter64, IpAddress, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "enterprises", "MibIdentifier", "iso", "TimeTicks", "Counter64", "IpAddress", "Bits", "ObjectIdentity")
DateAndTime, TimeStamp, TruthValue, TimeInterval, MacAddress, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeStamp", "TruthValue", "TimeInterval", "MacAddress", "TextualConvention", "RowStatus", "DisplayString")
mwConfigController = ModuleIdentity((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1))
if mibBuilder.loadTexts: mwConfigController.setLastUpdated('200506050000Z')
if mibBuilder.loadTexts: mwConfigController.setOrganization('Meru Networks')
if mibBuilder.loadTexts: mwConfigController.setContactInfo('support@merunetworks.com')
if mibBuilder.loadTexts: mwConfigController.setDescription('This MIB defines all the managed objects used to manage the Meru WLAN Controller Configuration infrastructure')
mwWncVars = MibIdentifier((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1))
mwSystemFileVars = MibIdentifier((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 3))
mwVpnServer = MibIdentifier((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10))
mwVpnClient = MibIdentifier((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 11))
mwWncVarsDescr = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsDescr.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsDescr.setDescription('This object describes Description')
mwWncVarsLocation = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsLocation.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsLocation.setDescription('This object describes Location')
mwWncVarsContact = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsContact.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsContact.setDescription('This object describes Contact')
mwWncVarsAutoApUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 4), MwlOnOffSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsAutoApUpgrade.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsAutoApUpgrade.setDescription('This object describes Automatic AP Upgrade')
mwWncVarsDhcpServer = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsDhcpServer.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsDhcpServer.setDescription('This object describes DHCP Server')
mwWncVarsStatPollingPeriod = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsStatPollingPeriod.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsStatPollingPeriod.setDescription('This object describes Statistics Polling Period (seconds)/0 disable Polling. The value must be either 0, or 5-65535')
mwWncVarsAuditPeriod = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsAuditPeriod.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsAuditPeriod.setDescription('This object describes Audit Polling Period (seconds)/0 disable Polling. The value must be either 0, or 5-65535')
mwWncVarsApInitScript = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsApInitScript.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsApInitScript.setDescription('This object describes Default AP Init Script')
mwWncVarsDhcpRelayPassThroughFlag = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 9), MwlOnOffSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsDhcpRelayPassThroughFlag.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsDhcpRelayPassThroughFlag.setDescription('This object describes DHCP Relay Passthrough')
mwWncVarsManagementFromWirelessClients = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 10), MwlOnOffSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsManagementFromWirelessClients.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsManagementFromWirelessClients.setDescription('This object describes Management by wireless stations')
mwWncVarsControllerIndex = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsControllerIndex.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsControllerIndex.setDescription('This object describes Controller Index. The value must be either 0, or 0-31')
mwWncVarsTopoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 12), MwlOnOffSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsTopoUpdate.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsTopoUpdate.setDescription('This object describes Topology Information Update')
mwWncVarsFastPath = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 14), MwlOnOffSwitch()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsFastPath.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsFastPath.setDescription('This object describes FastPath Mode')
mwWncVarsBonding = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 15), MwlBonding()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsBonding.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsBonding.setDescription('This object describes Bonding Mode')
mwWncVarsNodeId = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsNodeId.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsNodeId.setDescription('This object describes Controller ID')
mwWncVarsHostName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsHostName.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsHostName.setDescription('This object describes Host Name')
mwWncVarsUpTime = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsUpTime.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsUpTime.setDescription('This object describes Uptime')
mwWncVarsOperationalState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 21), MwlOperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsOperationalState.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsOperationalState.setDescription('This object describes Operational State')
mwWncVarsAvailabilityStatus = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 22), MwlAvailabilityStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsAvailabilityStatus.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsAvailabilityStatus.setDescription('This object describes Availability Status')
mwWncVarsAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 23), MwlAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsAlarmState.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsAlarmState.setDescription('This object describes Alarm State')
mwWncVarsVirtualIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 24), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsVirtualIpAddress.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsVirtualIpAddress.setDescription('This object describes Virtual IP Address')
mwWncVarsVirtualNetMask = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsVirtualNetMask.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsVirtualNetMask.setDescription('This object describes Virtual Netmask')
mwWncVarsDefaultGatewayAddr = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsDefaultGatewayAddr.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsDefaultGatewayAddr.setDescription('This object describes Default Gateway')
mwWncVarsSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsSoftwareVersion.setDescription('This object describes Software Version')
mwWncVarsSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsSerialNumber.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsSerialNumber.setDescription('This object describes Network Device Id')
mwWncVarsSystemId = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsSystemId.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsSystemId.setDescription('This object describes System Id')
mwWncVarsHardwareType = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 30), MwlControllerHwType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsHardwareType.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsHardwareType.setDescription('This object describes Controller Model')
mwWncVarsCountry = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsCountry.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsCountry.setDescription('This object describes Country Setting')
mwWncVarsManSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsManSerialNumber.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsManSerialNumber.setDescription('This object describes Manufacturing Serial #')
mwWncVarsStationAgingOutPeriod = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsStationAgingOutPeriod.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsStationAgingOutPeriod.setDescription('This object describes Station Aging Out Period(minutes). The value must be either 0, or 0-65535')
mwWncVarsRoamingDomainState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 34), MwlEnableDisableOption()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsRoamingDomainState.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsRoamingDomainState.setDescription('This object describes Roaming Domain State')
mwWncVarsAssocStationMaxIdlePeriod = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 36), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwWncVarsAssocStationMaxIdlePeriod.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsAssocStationMaxIdlePeriod.setDescription('This object describes Associated Station Max Idle Period')
mwWncVarsL3RoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 37), MwlOnOffSwitch()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsL3RoutingMode.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsL3RoutingMode.setDescription('This object describes Layer3 Routing Mode')
mwWncVarsRegion = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 1, 38), MwlRegionSettings()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwWncVarsRegion.setStatus('current')
if mibBuilder.loadTexts: mwWncVarsRegion.setDescription('This object describes Region Setting')
mwSystemFileVarspHostName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwSystemFileVarspHostName.setStatus('current')
if mibBuilder.loadTexts: mwSystemFileVarspHostName.setDescription('This object describes Host Name')
mwSystemFileVarspDnsDomainName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwSystemFileVarspDnsDomainName.setStatus('current')
if mibBuilder.loadTexts: mwSystemFileVarspDnsDomainName.setDescription('This object describes DNS Domain Name')
mwUdpBcastUpstreamTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 4), )
if mibBuilder.loadTexts: mwUdpBcastUpstreamTable.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamTable.setDescription('This object describes Upstream UDP Broadcast Port ')
mwUdpBcastUpstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 4, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwUdpBcastUpstreamTableIndex"))
if mibBuilder.loadTexts: mwUdpBcastUpstreamEntry.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamEntry.setDescription('This object describes Upstream UDP Broadcast Port ')
mwUdpBcastUpstreamTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: mwUdpBcastUpstreamTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamTableIndex.setDescription('The index value of the table ')
mwUdpBcastUpstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastUpstreamPort.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamPort.setDescription('This object describes UDP Port')
mwUdpBcastUpstreamRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastUpstreamRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamRowStatus.setDescription('This object is used to create and delete rows in the table')
mwUdpBcastDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 5), )
if mibBuilder.loadTexts: mwUdpBcastDownstreamTable.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamTable.setDescription('This object describes Downstream UDP Broadcast Port ')
mwUdpBcastDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 5, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwUdpBcastDownstreamTableIndex"))
if mibBuilder.loadTexts: mwUdpBcastDownstreamEntry.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamEntry.setDescription('This object describes Downstream UDP Broadcast Port ')
mwUdpBcastDownstreamTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: mwUdpBcastDownstreamTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamTableIndex.setDescription('The index value of the table ')
mwUdpBcastDownstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastDownstreamPort.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamPort.setDescription('This object describes UDP Port')
mwUdpBcastDownstreamRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastDownstreamRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamRowStatus.setDescription('This object is used to create and delete rows in the table')
mwDnsServerTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 6), )
if mibBuilder.loadTexts: mwDnsServerTable.setStatus('current')
if mibBuilder.loadTexts: mwDnsServerTable.setDescription('This object describes DNS Server Table ')
mwDnsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 6, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwDnsServerTableIndex"))
if mibBuilder.loadTexts: mwDnsServerEntry.setStatus('current')
if mibBuilder.loadTexts: mwDnsServerEntry.setDescription('This object describes DNS Server Table ')
mwDnsServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: mwDnsServerTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwDnsServerTableIndex.setDescription('The index value of the table ')
mwDnsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 6, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDnsServer.setStatus('current')
if mibBuilder.loadTexts: mwDnsServer.setDescription('This object describes DNS Server')
mwDnsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDnsServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwDnsServerRowStatus.setDescription('This object is used to create and delete rows in the table')
mwWncNetworkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7), )
if mibBuilder.loadTexts: mwWncNetworkConfigTable.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigTable.setDescription('This object describes Controller Network Configuration Parameters ')
mwWncNetworkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwWncNetworkConfigTableIndex"))
if mibBuilder.loadTexts: mwWncNetworkConfigEntry.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigEntry.setDescription('This object describes Controller Network Configuration Parameters ')
mwWncNetworkConfigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: mwWncNetworkConfigTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigTableIndex.setDescription('The index value of the table ')
mwWncNetworkConfigFastPath = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1, 2), MwlOnOffSwitch()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwWncNetworkConfigFastPath.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigFastPath.setDescription('This object describes Enabling data fastpath forwarding')
mwWncNetworkConfigBonding = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1, 3), MwlBonding()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwWncNetworkConfigBonding.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigBonding.setDescription('This object describes Bonding Mode')
mwWncNetworkConfigTenGigModule = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1, 4), MwlEnableDisableOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwWncNetworkConfigTenGigModule.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigTenGigModule.setDescription('This object describes Enabling 10 Gig module card')
mwWncNetworkConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwWncNetworkConfigRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwWncNetworkConfigRowStatus.setDescription('This object is used to create and delete rows in the table')
mwVirtualInterfaceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8), )
if mibBuilder.loadTexts: mwVirtualInterfaceProfileTable.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileTable.setDescription('This object describes Virtual Interface ')
mwVirtualInterfaceProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwVirtualInterfaceProfileTableIndex"))
if mibBuilder.loadTexts: mwVirtualInterfaceProfileEntry.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileEntry.setDescription('This object describes Virtual Interface ')
mwVirtualInterfaceProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: mwVirtualInterfaceProfileTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileTableIndex.setDescription('The index value of the table ')
mwVirtualInterfaceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileName.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileName.setDescription('This object describes Virtual Interface Profile Name')
mwVirtualInterfaceProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileId.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileId.setDescription('This object describes Id')
mwVirtualInterfaceProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 4), MwlEnableDisableOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileState.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileState.setDescription('This object describes Enable/Disable')
mwVirtualInterfaceProfileSubnetIp = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileSubnetIp.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileSubnetIp.setDescription('This object describes Subnet IP Address')
mwVirtualInterfaceProfileSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileSubnetMask.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileSubnetMask.setDescription('This object describes Subnet Mask')
mwVirtualInterfaceProfileGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileGatewayIp.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileGatewayIp.setDescription('This object describes Gateway IP Address')
mwVirtualInterfaceProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 8, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVirtualInterfaceProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwVirtualInterfaceProfileRowStatus.setDescription('This object is used to create and delete rows in the table')
mwDhcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9), )
if mibBuilder.loadTexts: mwDhcpServerTable.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerTable.setDescription('This object describes Internal DHCP server configuration ')
mwDhcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwDhcpServerTableIndex"))
if mibBuilder.loadTexts: mwDhcpServerEntry.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerEntry.setDescription('This object describes Internal DHCP server configuration ')
mwDhcpServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: mwDhcpServerTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerTableIndex.setDescription('The index value of the table ')
mwDhcpServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerName.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerName.setDescription('This object describes DHCP Server Pool Name')
mwDhcpServerVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerVlanName.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerVlanName.setDescription('This object describes VLAN Name')
mwDhcpServerVirtualInterfaceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerVirtualInterfaceProfileName.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerVirtualInterfaceProfileName.setDescription('This object describes Virtual Interface Profile Name')
mwDhcpServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 5), MwlEnableDisableOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerState.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerState.setDescription('This object describes State')
mwDhcpServerLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerLeaseTime.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerLeaseTime.setDescription('This object describes Lease Time (in Seconds)')
mwDhcpServerIpPoolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerIpPoolStart.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerIpPoolStart.setDescription('This object describes IP Pool start')
mwDhcpServerIpPoolEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerIpPoolEnd.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerIpPoolEnd.setDescription('This object describes IP Pool end')
mwDhcpServerDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerDomainName.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerDomainName.setDescription('This object describes Domain Name')
mwDhcpServerDnsServer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerDnsServer1.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerDnsServer1.setDescription('This object describes Primary DNS Server')
mwDhcpServerDnsServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerDnsServer2.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerDnsServer2.setDescription('This object describes Secondary DNS Server')
mwDhcpServerNetbiosServer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerNetbiosServer1.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerNetbiosServer1.setDescription('This object describes Primary Netbios Server')
mwDhcpServerNetbiosServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerNetbiosServer2.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerNetbiosServer2.setDescription('This object describes Secondary Netbios Server')
mwDhcpServerOption43 = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerOption43.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerOption43.setDescription('This object describes DHCP Option 43')
mwDhcpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 9, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwDhcpServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwDhcpServerRowStatus.setDescription('This object is used to create and delete rows in the table')
mwVpnServerState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 2), MwlEnableDisableOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerState.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerState.setDescription('This object describes Status')
mwVpnServerIp = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerIp.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerIp.setDescription('This object describes VPN Server IP')
mwVpnServerHostName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerHostName.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerHostName.setDescription('This object describes VPN Server Host Name')
mwVpnServerPort = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerPort.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerPort.setDescription('This object describes VPN Server Port')
mwVpnServerIpPool = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerIpPool.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerIpPool.setDescription('This object describes IP Pool')
mwVpnServerSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 10, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwVpnServerSubnetMask.setStatus('current')
if mibBuilder.loadTexts: mwVpnServerSubnetMask.setDescription('This object describes Netmask')
mwVpnClientState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 11, 2), MwlEnableDisableOption()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwVpnClientState.setStatus('current')
if mibBuilder.loadTexts: mwVpnClientState.setDescription('This object describes State')
mwVpnClientVpnServerIp = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 11, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwVpnClientVpnServerIp.setStatus('current')
if mibBuilder.loadTexts: mwVpnClientVpnServerIp.setDescription('This object describes VPN Server IP')
mwVpnClientVpnServerPort = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 11, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwVpnClientVpnServerPort.setStatus('current')
if mibBuilder.loadTexts: mwVpnClientVpnServerPort.setDescription('This object describes VPN Server Port')
mwVpnClientStatus = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 11, 5), MwlVpnConnectivityStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwVpnClientStatus.setStatus('current')
if mibBuilder.loadTexts: mwVpnClientStatus.setDescription('This object describes Connectivity Status')
mwUdpBcastUpstreamBridgedTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 12), )
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedTable.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedTable.setDescription('This object describes Upstream UDP Broadcast Port Bridged ')
mwUdpBcastUpstreamBridgedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 12, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwUdpBcastUpstreamBridgedTableIndex"))
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedEntry.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedEntry.setDescription('This object describes Upstream UDP Broadcast Port Bridged ')
mwUdpBcastUpstreamBridgedTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 12, 1, 1), Integer32())
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedTableIndex.setDescription('The index value of the table ')
mwUdpBcastUpstreamBridgedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 12, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedPort.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedPort.setDescription('This object describes UDP Port')
mwUdpBcastUpstreamBridgedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 12, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastUpstreamBridgedRowStatus.setDescription('This object is used to create and delete rows in the table')
mwUdpBcastDownstreamBridgedTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 13), )
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedTable.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedTable.setDescription('This object describes Downstream UDP Broadcast Port Bridged ')
mwUdpBcastDownstreamBridgedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 13, 1), ).setIndexNames((0, "MERU-CONFIG-CONTROLLER-MIB", "mwUdpBcastDownstreamBridgedTableIndex"))
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedEntry.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedEntry.setDescription('This object describes Downstream UDP Broadcast Port Bridged ')
mwUdpBcastDownstreamBridgedTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedTableIndex.setDescription('The index value of the table ')
mwUdpBcastDownstreamBridgedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 13, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedPort.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedPort.setDescription('This object describes UDP Port')
mwUdpBcastDownstreamBridgedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 1, 13, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwUdpBcastDownstreamBridgedRowStatus.setDescription('This object is used to create and delete rows in the table')
mibBuilder.exportSymbols("MERU-CONFIG-CONTROLLER-MIB", mwWncVars=mwWncVars, mwVirtualInterfaceProfileName=mwVirtualInterfaceProfileName, mwDhcpServerDnsServer2=mwDhcpServerDnsServer2, mwDhcpServerVlanName=mwDhcpServerVlanName, mwSystemFileVarspDnsDomainName=mwSystemFileVarspDnsDomainName, mwUdpBcastUpstreamEntry=mwUdpBcastUpstreamEntry, mwWncVarsStationAgingOutPeriod=mwWncVarsStationAgingOutPeriod, mwWncNetworkConfigFastPath=mwWncNetworkConfigFastPath, mwConfigController=mwConfigController, mwDhcpServerState=mwDhcpServerState, mwUdpBcastDownstreamBridgedPort=mwUdpBcastDownstreamBridgedPort, mwDnsServerRowStatus=mwDnsServerRowStatus, mwWncVarsOperationalState=mwWncVarsOperationalState, mwWncVarsDescr=mwWncVarsDescr, mwWncVarsAutoApUpgrade=mwWncVarsAutoApUpgrade, mwWncVarsRoamingDomainState=mwWncVarsRoamingDomainState, mwDhcpServerIpPoolStart=mwDhcpServerIpPoolStart, mwUdpBcastDownstreamBridgedTable=mwUdpBcastDownstreamBridgedTable, mwWncVarsBonding=mwWncVarsBonding, mwWncVarsApInitScript=mwWncVarsApInitScript, mwWncVarsManagementFromWirelessClients=mwWncVarsManagementFromWirelessClients, mwWncVarsNodeId=mwWncVarsNodeId, mwWncNetworkConfigTable=mwWncNetworkConfigTable, mwWncVarsHostName=mwWncVarsHostName, mwUdpBcastUpstreamBridgedPort=mwUdpBcastUpstreamBridgedPort, mwVirtualInterfaceProfileTable=mwVirtualInterfaceProfileTable, mwUdpBcastUpstreamBridgedTableIndex=mwUdpBcastUpstreamBridgedTableIndex, mwWncNetworkConfigBonding=mwWncNetworkConfigBonding, mwWncVarsAvailabilityStatus=mwWncVarsAvailabilityStatus, mwDhcpServerLeaseTime=mwDhcpServerLeaseTime, mwVpnClientVpnServerIp=mwVpnClientVpnServerIp, PYSNMP_MODULE_ID=mwConfigController, mwUdpBcastUpstreamRowStatus=mwUdpBcastUpstreamRowStatus, mwVirtualInterfaceProfileGatewayIp=mwVirtualInterfaceProfileGatewayIp, mwWncNetworkConfigEntry=mwWncNetworkConfigEntry, mwDhcpServerNetbiosServer2=mwDhcpServerNetbiosServer2, mwUdpBcastUpstreamBridgedTable=mwUdpBcastUpstreamBridgedTable, mwWncVarsTopoUpdate=mwWncVarsTopoUpdate, mwUdpBcastDownstreamTable=mwUdpBcastDownstreamTable, mwDhcpServerIpPoolEnd=mwDhcpServerIpPoolEnd, mwDnsServerTableIndex=mwDnsServerTableIndex, mwWncVarsFastPath=mwWncVarsFastPath, mwWncVarsManSerialNumber=mwWncVarsManSerialNumber, mwDhcpServerOption43=mwDhcpServerOption43, mwDnsServerEntry=mwDnsServerEntry, mwWncNetworkConfigRowStatus=mwWncNetworkConfigRowStatus, mwUdpBcastDownstreamEntry=mwUdpBcastDownstreamEntry, mwWncVarsCountry=mwWncVarsCountry, mwWncVarsAssocStationMaxIdlePeriod=mwWncVarsAssocStationMaxIdlePeriod, mwWncVarsAuditPeriod=mwWncVarsAuditPeriod, mwUdpBcastUpstreamTable=mwUdpBcastUpstreamTable, mwWncVarsContact=mwWncVarsContact, mwVpnServerHostName=mwVpnServerHostName, mwVirtualInterfaceProfileState=mwVirtualInterfaceProfileState, mwVpnClientVpnServerPort=mwVpnClientVpnServerPort, mwDhcpServerName=mwDhcpServerName, mwWncNetworkConfigTenGigModule=mwWncNetworkConfigTenGigModule, mwDnsServer=mwDnsServer, mwVpnClientStatus=mwVpnClientStatus, mwWncVarsSystemId=mwWncVarsSystemId, mwWncVarsDhcpRelayPassThroughFlag=mwWncVarsDhcpRelayPassThroughFlag, mwWncVarsDhcpServer=mwWncVarsDhcpServer, mwWncVarsAlarmState=mwWncVarsAlarmState, mwSystemFileVarspHostName=mwSystemFileVarspHostName, mwWncVarsVirtualIpAddress=mwWncVarsVirtualIpAddress, mwUdpBcastUpstreamBridgedEntry=mwUdpBcastUpstreamBridgedEntry, mwUdpBcastUpstreamBridgedRowStatus=mwUdpBcastUpstreamBridgedRowStatus, mwWncVarsLocation=mwWncVarsLocation, mwWncVarsSerialNumber=mwWncVarsSerialNumber, mwVpnClientState=mwVpnClientState, mwWncVarsDefaultGatewayAddr=mwWncVarsDefaultGatewayAddr, mwUdpBcastDownstreamPort=mwUdpBcastDownstreamPort, mwDhcpServerVirtualInterfaceProfileName=mwDhcpServerVirtualInterfaceProfileName, mwUdpBcastUpstreamPort=mwUdpBcastUpstreamPort, mwDhcpServerDomainName=mwDhcpServerDomainName, mwVpnServer=mwVpnServer, mwUdpBcastDownstreamRowStatus=mwUdpBcastDownstreamRowStatus, mwDhcpServerTable=mwDhcpServerTable, mwWncVarsHardwareType=mwWncVarsHardwareType, mwWncVarsL3RoutingMode=mwWncVarsL3RoutingMode, mwVirtualInterfaceProfileTableIndex=mwVirtualInterfaceProfileTableIndex, mwVirtualInterfaceProfileRowStatus=mwVirtualInterfaceProfileRowStatus, mwVpnServerPort=mwVpnServerPort, mwVpnServerIp=mwVpnServerIp, mwVpnServerIpPool=mwVpnServerIpPool, mwVpnServerState=mwVpnServerState, mwUdpBcastDownstreamBridgedRowStatus=mwUdpBcastDownstreamBridgedRowStatus, mwWncVarsRegion=mwWncVarsRegion, mwSystemFileVars=mwSystemFileVars, mwDhcpServerEntry=mwDhcpServerEntry, mwUdpBcastDownstreamBridgedTableIndex=mwUdpBcastDownstreamBridgedTableIndex, mwVpnServerSubnetMask=mwVpnServerSubnetMask, mwDhcpServerDnsServer1=mwDhcpServerDnsServer1, mwWncNetworkConfigTableIndex=mwWncNetworkConfigTableIndex, mwVirtualInterfaceProfileSubnetIp=mwVirtualInterfaceProfileSubnetIp, mwVirtualInterfaceProfileEntry=mwVirtualInterfaceProfileEntry, mwVirtualInterfaceProfileId=mwVirtualInterfaceProfileId, mwDhcpServerRowStatus=mwDhcpServerRowStatus, mwWncVarsVirtualNetMask=mwWncVarsVirtualNetMask, mwWncVarsStatPollingPeriod=mwWncVarsStatPollingPeriod, mwWncVarsControllerIndex=mwWncVarsControllerIndex, mwDhcpServerNetbiosServer1=mwDhcpServerNetbiosServer1, mwUdpBcastDownstreamBridgedEntry=mwUdpBcastDownstreamBridgedEntry, mwUdpBcastDownstreamTableIndex=mwUdpBcastDownstreamTableIndex, mwDhcpServerTableIndex=mwDhcpServerTableIndex, mwVpnClient=mwVpnClient, mwUdpBcastUpstreamTableIndex=mwUdpBcastUpstreamTableIndex, mwWncVarsUpTime=mwWncVarsUpTime, mwWncVarsSoftwareVersion=mwWncVarsSoftwareVersion, mwVirtualInterfaceProfileSubnetMask=mwVirtualInterfaceProfileSubnetMask, mwDnsServerTable=mwDnsServerTable)
