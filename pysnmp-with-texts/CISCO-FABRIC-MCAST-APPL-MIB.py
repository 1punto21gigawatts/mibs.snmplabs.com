#
# PySNMP MIB module CISCO-FABRIC-MCAST-APPL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FABRIC-MCAST-APPL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:57:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
CfmPoolIndex, = mibBuilder.importSymbols("CISCO-FABRIC-MCAST-MIB", "CfmPoolIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entLogicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entLogicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, Counter64, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, TimeTicks, NotificationType, Gauge32, ObjectIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Counter64", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "IpAddress", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoFabricMcastApplMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 256))
ciscoFabricMcastApplMIB.setRevisions(('2002-12-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setLastUpdated('200212180000Z')
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-fabric@cisco.com')
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setDescription('Fabric multicast resource MIB module. This MIB module is used for managing/tracking the fabric multicast resource application related information. Acronyms and terms: FGID - Fabric Multicast Group Identifier.')
ciscoFabricMcastApplMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 1))
cfmaAppl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1))
cfmaApplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1), )
if mibBuilder.loadTexts: cfmaApplTable.setStatus('current')
if mibBuilder.loadTexts: cfmaApplTable.setDescription('This table contains fabric multicast resource usage for a particular fabric multicast client application.')
cfmaApplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"), (0, "CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplId"))
if mibBuilder.loadTexts: cfmaApplEntry.setStatus('current')
if mibBuilder.loadTexts: cfmaApplEntry.setDescription('The information regarding a single application that uses fabric multicast resource in a logical router. An entry of this table is created when a fabric multicast client application is registered to fabric software for the use of fabric multicast resource from a logical router. A logical router is identified by the value of mib-2 in entLogicalType object of ENTITY-MIB. An entry of this table is deleted when a fabric multicast client application unregistered the use of fabric multicast resource.')
cfmaApplId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cfmaApplId.setStatus('current')
if mibBuilder.loadTexts: cfmaApplId.setDescription('An unique value, greater than zero, for each fabric client application that uses fabric multicast resource.')
cfmaApplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplName.setStatus('current')
if mibBuilder.loadTexts: cfmaApplName.setDescription('The name of this fabric multicast client application.')
cfmaApplInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 3), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmaApplInuseFgids.setDescription('The number of FGIDs that are currently in use by this application.')
cfmaApplHighWaterInuseFGIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 4), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplHighWaterInuseFGIDs.setStatus('current')
if mibBuilder.loadTexts: cfmaApplHighWaterInuseFGIDs.setDescription('The highest number of FGIDs that was in use by this application.')
cfmaApplPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 5), CfmPoolIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplPoolId.setStatus('current')
if mibBuilder.loadTexts: cfmaApplPoolId.setDescription('The fabric multicast resource pool id for the resource pool which is used by this application.')
cfmaMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 2))
cfmaMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 2, 0))
cfmaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3))
cfmaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 1))
cfmaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 2))
cfmaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 1, 1)).setObjects(("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmaMIBCompliance = cfmaMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cfmaMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-FABRIC-MCAST-APPL-MIB')
cfmaApplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 2, 1)).setObjects(("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplName"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplInuseFgids"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplHighWaterInuseFGIDs"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplPoolId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmaApplGroup = cfmaApplGroup.setStatus('current')
if mibBuilder.loadTexts: cfmaApplGroup.setDescription('A collection of objects providing information for the applications that use the fabric multicast resource.')
mibBuilder.exportSymbols("CISCO-FABRIC-MCAST-APPL-MIB", cfmaApplId=cfmaApplId, cfmaMIBConformance=cfmaMIBConformance, cfmaApplPoolId=cfmaApplPoolId, cfmaMIBGroups=cfmaMIBGroups, ciscoFabricMcastApplMIBObjects=ciscoFabricMcastApplMIBObjects, cfmaApplGroup=cfmaApplGroup, cfmaAppl=cfmaAppl, cfmaApplTable=cfmaApplTable, cfmaApplName=cfmaApplName, cfmaMIBNotifications=cfmaMIBNotifications, cfmaMIBCompliance=cfmaMIBCompliance, cfmaApplHighWaterInuseFGIDs=cfmaApplHighWaterInuseFGIDs, cfmaApplInuseFgids=cfmaApplInuseFgids, PYSNMP_MODULE_ID=ciscoFabricMcastApplMIB, cfmaMIBNotificationPrefix=cfmaMIBNotificationPrefix, cfmaApplEntry=cfmaApplEntry, cfmaMIBCompliances=cfmaMIBCompliances, ciscoFabricMcastApplMIB=ciscoFabricMcastApplMIB)
