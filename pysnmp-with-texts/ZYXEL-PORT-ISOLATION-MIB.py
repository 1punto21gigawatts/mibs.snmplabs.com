#
# PySNMP MIB module ZYXEL-PORT-ISOLATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-PORT-ISOLATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:51:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, TimeTicks, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Gauge32, ModuleIdentity, Integer32, NotificationType, IpAddress, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Gauge32", "ModuleIdentity", "Integer32", "NotificationType", "IpAddress", "iso", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelPortIsolation = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64))
if mibBuilder.loadTexts: zyxelPortIsolation.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelPortIsolation.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelPortIsolation.setContactInfo('')
if mibBuilder.loadTexts: zyxelPortIsolation.setDescription('The subtree for port isolation')
zyxelPortIsolationSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64, 1))
zyxelPortIsolationPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64, 1, 1), )
if mibBuilder.loadTexts: zyxelPortIsolationPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelPortIsolationPortTable.setDescription('The table contains port isolation configuration. ')
zyxelPortIsolationPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64, 1, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelPortIsolationPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelPortIsolationPortEntry.setDescription('An entry contains port isolation configuration. ')
zyPortIsolationPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64, 1, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyPortIsolationPortState.setStatus('current')
if mibBuilder.loadTexts: zyPortIsolationPortState.setDescription('Enable/Disable Port isolation on the port. Enable to allow this port to communicate only with the CPU management port and the ports on which the isolation feature is not enabled. ')
zyPortIsolationSmartIsolationState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 64, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyPortIsolationSmartIsolationState.setStatus('current')
if mibBuilder.loadTexts: zyPortIsolationSmartIsolationState.setDescription('Enable/Disable smart Port isolation on the switch. The designated port(s) then becomes the isolated port. Smart isolation allows you to prevent isolated ports on different switch from transmitting traffic to each other.')
mibBuilder.exportSymbols("ZYXEL-PORT-ISOLATION-MIB", zyxelPortIsolation=zyxelPortIsolation, PYSNMP_MODULE_ID=zyxelPortIsolation, zyxelPortIsolationSetup=zyxelPortIsolationSetup, zyxelPortIsolationPortEntry=zyxelPortIsolationPortEntry, zyxelPortIsolationPortTable=zyxelPortIsolationPortTable, zyPortIsolationSmartIsolationState=zyPortIsolationSmartIsolationState, zyPortIsolationPortState=zyPortIsolationPortState)
