#
# PySNMP MIB module HUAWEI-REDUNDANCY-POWER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-REDUNDANCY-POWER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mlsr, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "mlsr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, ModuleIdentity, Gauge32, Integer32, TimeTicks, Bits, Counter64, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Integer32", "TimeTicks", "Bits", "Counter64", "MibIdentifier", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
redundancyPower = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4))
if mibBuilder.loadTexts: redundancyPower.setLastUpdated('200112200000Z')
if mibBuilder.loadTexts: redundancyPower.setOrganization('Huawei Technologies Co., Ltd')
if mibBuilder.loadTexts: redundancyPower.setContactInfo('VRP Team Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei.com Zip:100085')
if mibBuilder.loadTexts: redundancyPower.setDescription(' ')
redundancyFan = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5))
redundancyPowerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 1), )
if mibBuilder.loadTexts: redundancyPowerTable.setStatus('current')
if mibBuilder.loadTexts: redundancyPowerTable.setDescription('The table describles the attributes of every power unit. ')
redundancyPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 1, 1), ).setIndexNames((0, "HUAWEI-REDUNDANCY-POWER-MIB", "redundancyPowerID"))
if mibBuilder.loadTexts: redundancyPowerEntry.setStatus('current')
if mibBuilder.loadTexts: redundancyPowerEntry.setDescription('Each entry contains the attributes associated with a single power unit entity.')
redundancyPowerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redundancyPowerID.setStatus('current')
if mibBuilder.loadTexts: redundancyPowerID.setDescription('The identify of power uinit. This is also the index of this table.')
redundancyPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("space", 1), ("normal", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redundancyPowerStatus.setStatus('current')
if mibBuilder.loadTexts: redundancyPowerStatus.setDescription("The status of every redundancy power unit. if power unit doesn't exists, take the value 'space'; if power unit is present and normal, take the value 'narmal' if power unit is present but fail, take the value 'fail'")
redundancyPowerPreviousStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("space", 1), ("normal", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redundancyPowerPreviousStatus.setStatus('current')
if mibBuilder.loadTexts: redundancyPowerPreviousStatus.setDescription('The last status of every redundancy power unit ')
redundancyFanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 1), )
if mibBuilder.loadTexts: redundancyFanTable.setStatus('current')
if mibBuilder.loadTexts: redundancyFanTable.setDescription('The table describles the attributes of every power unit. ')
redundancyFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 1, 1), ).setIndexNames((0, "HUAWEI-REDUNDANCY-POWER-MIB", "redundancyFanID"))
if mibBuilder.loadTexts: redundancyFanEntry.setStatus('current')
if mibBuilder.loadTexts: redundancyFanEntry.setDescription('Each entry contains the attributes associated with a single power unit entity.')
redundancyFanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redundancyFanID.setStatus('current')
if mibBuilder.loadTexts: redundancyFanID.setDescription('The identify of power uinit. This is also the index of this table.')
redundancyFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redundancyFanStatus.setStatus('current')
if mibBuilder.loadTexts: redundancyFanStatus.setDescription("The status of every redundancy power unit. if power unit doesn't exists, take the value 'space'; if power unit is present and normal, take the value 'narmal' if power unit is present but fail, take the value 'fail'")
powerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 2))
powerStatusChangedTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 4, 2, 1)).setObjects(("HUAWEI-REDUNDANCY-POWER-MIB", "redundancyPowerID"), ("HUAWEI-REDUNDANCY-POWER-MIB", "redundancyPowerStatus"), ("HUAWEI-REDUNDANCY-POWER-MIB", "redundancyPowerPreviousStatus"))
if mibBuilder.loadTexts: powerStatusChangedTrap.setStatus('current')
if mibBuilder.loadTexts: powerStatusChangedTrap.setDescription('This trap is generated when the satus of a power unit is changed.')
fanTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 2))
fanStatusChangedTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 5, 2, 1)).setObjects(("HUAWEI-REDUNDANCY-POWER-MIB", "redundancyFanID"), ("HUAWEI-REDUNDANCY-POWER-MIB", "redundancyFanStatus"))
if mibBuilder.loadTexts: fanStatusChangedTrap.setStatus('current')
if mibBuilder.loadTexts: fanStatusChangedTrap.setDescription('This trap is generated when the satus of a power unit is changed.')
mibBuilder.exportSymbols("HUAWEI-REDUNDANCY-POWER-MIB", redundancyFan=redundancyFan, redundancyPowerID=redundancyPowerID, powerTraps=powerTraps, redundancyPowerPreviousStatus=redundancyPowerPreviousStatus, redundancyFanEntry=redundancyFanEntry, powerStatusChangedTrap=powerStatusChangedTrap, redundancyPowerEntry=redundancyPowerEntry, redundancyPowerStatus=redundancyPowerStatus, redundancyPowerTable=redundancyPowerTable, redundancyFanID=redundancyFanID, fanStatusChangedTrap=fanStatusChangedTrap, redundancyPower=redundancyPower, redundancyFanTable=redundancyFanTable, fanTraps=fanTraps, PYSNMP_MODULE_ID=redundancyPower, redundancyFanStatus=redundancyFanStatus)
