#
# PySNMP MIB module CERENT-FC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CERENT-FC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
cerentModules, cerentGeneric, cerentRequirements = mibBuilder.importSymbols("CERENT-GLOBAL-REGISTRY", "cerentModules", "cerentGeneric", "cerentRequirements")
CerentPeriod, = mibBuilder.importSymbols("CERENT-TC", "CerentPeriod")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, ObjectIdentity, iso, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Counter64, Bits, Gauge32, ModuleIdentity, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "iso", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Counter64", "Bits", "Gauge32", "ModuleIdentity", "IpAddress", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cerentFcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3607, 1, 10, 100))
cerentFcMIB.setRevisions(('1903-02-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cerentFcMIB.setRevisionsDescriptions(('The initial revision of this MIB.',))
if mibBuilder.loadTexts: cerentFcMIB.setLastUpdated('0302110000Z')
if mibBuilder.loadTexts: cerentFcMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: cerentFcMIB.setContactInfo('support@Cisco.com Postal: Cisco Systems 1450 N. McDowell Blvd. Petaluma, CA 94954 Tel: +1-877-323-7368')
if mibBuilder.loadTexts: cerentFcMIB.setDescription('This MIB module defines the managed objects for performance monitoring of supported Fibre Channel interfaces.')
cerentFcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 2, 60))
cerentFc = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1))
cFcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1), )
if mibBuilder.loadTexts: cFcStatsTable.setStatus('current')
if mibBuilder.loadTexts: cFcStatsTable.setDescription('This table reports the current values of the Fibre channel stats on the supported interfaces.')
cFcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cFcStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cFcStatsEntry.setDescription('A collection of Fibre Channel statisctics on an interface.')
cFcStatsInvalidOrdSets = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInvalidOrdSets.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInvalidOrdSets.setDescription('This object gives the number of invalid ordered sets encountered on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInvalidOrdSetsHigh. SNMP v2c or v3 managers can directly use cFcStatsInvalidOrdSetsHC, which is a 64 bit counter.')
cFcStatsInvalidOrdSetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInvalidOrdSetsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInvalidOrdSetsHigh.setDescription('This object gives the higher word value the number of invalid ordered sets on the particular interface. If the value of cFcStatsInvalidOrdSets is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInvalidOrdSetsHC, which is a 64 bit counter.')
cFcStatsEncodingDispErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsEncodingDispErr.setStatus('current')
if mibBuilder.loadTexts: cFcStatsEncodingDispErr.setDescription('This object gives the number of encoding disparity errors encountered on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsEncodingDispErrHigh. SNMP v2c or v3 managers can directly use cFcStatsEncodingDispErrHC, which is a 64 bit counter.')
cFcStatsEncodingDispErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsEncodingDispErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsEncodingDispErrHigh.setDescription('This object gives the higher word value the number of encoding disparity errors on the particular interface. If the value of cFcStatsEncodingDispErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsEncodingDispErrHC, which is a 64 bit counter.')
cFcStatsInTotalErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInTotalErr.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInTotalErr.setDescription('This object gives the value of the total number of errors encountered on the particular interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInTotalErrHigh. SNMP v2c or v3 managers can directly use cFcStatsInTotalErrHC, which is a 64 bit counter.')
cFcStatsInTotalErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInTotalErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInTotalErrHigh.setDescription('This object gives the higher word value the total number of errors encountered on the particular interface. If the value of cFcStatsInTotalErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInTotalErrHC, which is a 64 bit counter.')
cFcStatsInFramesTrunc = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTrunc.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTrunc.setDescription('This object gives the value of the number of fibre channel truncated frames received on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInFramesTruncHigh. SNMP v2c or v3 managers can directly use cFcStatsInFramesTruncHC, which is a 64 bit counter.')
cFcStatsInFramesTruncHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTruncHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTruncHigh.setDescription('This object gives the higher word value the number of fibre channel truncated frames received on this interface. If the value of cFcStatsInFramesTrunc is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInFramesTruncHC, which is a 64 bit counter.')
cFcStatsInFramesTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTooLong.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTooLong.setDescription('This object gives the number of fibre channel frames received on this interface with a length greater than what was agreed to. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInFramesTooLongHigh. SNMP v2c or v3 managers can directly use cFcStatsInFramesTooLongHC, which is a 64 bit counter.')
cFcStatsInFramesTooLongHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTooLongHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTooLongHigh.setDescription('This object gives the higher word value the number of fibre channel frames received on this interface with a length greater than what was agreed to. If the value of cFcStatsInFramesTooLong is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInFramesTooLongHC, which is a 64 bit counter.')
cFcStatsInFramesBadCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesBadCRC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesBadCRC.setDescription('The counter associated with the number of frames received with invalid CRC, on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInFramesBadCRCHigh. SNMP v2c or v3 managers can directly use cFcStatsInFramesBadCRCHC, which is a 64 bit counter.')
cFcStatsInFramesBadCRCHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 120), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesBadCRCHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesBadCRCHigh.setDescription('This object gives the higher word value of the number of frames received with invalid CRC, on this interface. If the value of cFcStatsInFramesBadCRC is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInFramesBadCRCHigh, which is a 64 bit counter.')
cFcStatsInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 130), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFrames.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFrames.setDescription('The counter associated with the number of fibre channel frames received on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInFramesHigh. SNMP v2c or v3 managers can directly use cFcStatsInFramesHC, which is a 64 bit counter.')
cFcStatsInFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 140), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesHigh.setDescription('This object gives the higher word value the number of fibre channel frames received on this interface. If the value of cFcStatsInFrames is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInFramesHC, which is a 64 bit counter.')
cFcStatsInElements = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 150), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInElements.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInElements.setDescription('This object gives the value of the number of received bytes on the particular interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInElementsHigh. SNMP v2c or v3 managers can directly use cFcStatsInElementsHC, which is a 64 bit counter.')
cFcStatsInElementsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 160), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInElementsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInElementsHigh.setDescription('This object gives the higher word value the number of received bytes on the particular interface. If the value of cFcStatsInElements is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInElementsHC, which is a 64 bit counter.')
cFcStatsInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 170), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInDiscards.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInDiscards.setDescription('This object gives the value of the number of received frames on this interface that were discarded. This object only shows the lower word value of the counter.The high word value is given by cFcStatsInDiscardsHigh. SNMP v2c or v3 managers can directly use cFcStatsInDiscardsHC, which is a 64 bit counter.')
cFcStatsInDiscardsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 180), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInDiscardsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInDiscardsHigh.setDescription('This object gives the higher word value the number of received frames discarded on the particular interface. If the value of cFcStatsInDiscards is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsInDiscardsHC, which is a 64 bit counter.')
cFcStatsOutFramesBadCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 190), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRC.setDescription('This object gives the number of frames transmitted with invalid CRC, on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsOutFramesBadCRCHigh. SNMP v2c or v3 managers can directly use cFcStatsOutFramesBadCRCHC, which is a 64 bit counter.')
cFcStatsOutFramesBadCRCHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 200), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRCHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRCHigh.setDescription('This object gives the higher word value the number of frames transmitted with invalid CRC, on this interface. If the value of cFcStatsOutFramesBadCRC is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsOutFramesBadCRCHC, which is a 64 bit counter.')
cFcStatsOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 210), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFrames.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFrames.setDescription('This object gives the number of fibre channel frames transmitted on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsOutFramesHigh. SNMP v2c or v3 managers can directly use cFcStatsOutFramesHC, which is a 64 bit counter.')
cFcStatsOutFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 220), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFramesHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFramesHigh.setDescription('This object gives the higher word value of the number of fibre channel frames transmitted on this interface. If the value of cFcStatsOutFrames is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsOutFramesHC, which is a 64 bit counter.')
cFcStatsOutElements = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 230), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutElements.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutElements.setDescription('This object gives the value of the number of trasmitted bytes on the particular interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsOutElementsHigh. SNMP v2c or v3 managers can directly use cFcStatsOutElementsHC, which is a 64 bit counter.')
cFcStatsOutElementsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 240), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutElementsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutElementsHigh.setDescription('This object gives the higher word value the number of transmitted bytes on the particular interface. If the value of cFcStatsOutElements is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsOutElementsHC, which is a 64 bit counter.')
cFcStatsOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 250), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutDiscards.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutDiscards.setDescription('This object gives the number of transmitted frames on this interface that were discarded. This object only shows the lower word value of the counter.The high word value is given by cFcStatsOutDiscardsHigh. SNMP v2c or v3 managers can directly use cFcStatsOutDiscardsHC, which is a 64 bit counter.')
cFcStatsOutDiscardsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 260), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutDiscardsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutDiscardsHigh.setDescription('This object gives the higher word value of the number of transmitted frames on this interface that were discarded. If the value of cFcStatsOutDiscards is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsOutDiscardsHC, which is a 64 bit counter.')
cFcStatsLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 270), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsLinkResets.setStatus('current')
if mibBuilder.loadTexts: cFcStatsLinkResets.setDescription('This object gives the value of the number of link resets detected on this particular interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsLinkResetsHigh. SNMP v2c or v3 managers can directly use cFcStatsLinkResetsHC, which is a 64 bit counter.')
cFcStatsLinkResetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 280), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsLinkResetsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsLinkResetsHigh.setDescription('This object gives the higher word value the number of link resets detected on the particular interface. If the value of cFcStatsLinkResets is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsLinkResetsHC, which is a 64 bit counter.')
cFcStatsGfpInSBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 290), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBitErr.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBitErr.setDescription('This object gives the value of the number of single bit GFP errors received on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsGfpInSBitErrHigh. SNMP v2c or v3 managers can directly use cFcStatsGfpInSBitErrHC, which is a 64 bit counter.')
cFcStatsGfpInSBitErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 300), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBitErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBitErrHigh.setDescription('This object gives the higher word value the number of single bit GFP errors received on this interface. If the value of cFcStatsGfpInSBitErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsGfpInSBitErrHC, which is a 64 bit counter.')
cFcStatsGfpInMBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 310), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInMBitErr.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInMBitErr.setDescription('This object gives the value of the number of multi bit GFP errors received on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsGfpInMBitErrHigh. SNMP v2c or v3 managers can directly use cFcStatsGfpInMBitErrHC, which is a 64 bit counter.')
cFcStatsGfpInMBitErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 320), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInMBitErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInMBitErrHigh.setDescription('This object gives the higher word value the number of multi bit GFP errors received on this interface. If the value of cFcStatsGfpInMBitErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsGfpInMBitErrHC, which is a 64 bit counter.')
cFcStatsGfpInTypeInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 330), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalid.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalid.setDescription('This object gives the value of the number of GFP frames received on this interface with an invalid type. This object only shows the lower word value of the counter.The high word value is given by cFcStatsGfpInTypeInvalidHigh. SNMP v2c or v3 managers can directly use cFcStatsGfpInTypeInvalidHC, which is a 64 bit counter.')
cFcStatsGfpInTypeInvalidHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 340), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalidHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalidHigh.setDescription('This object gives the higher word value of the number of GFP frames received on this interface with an invalid type. If the value of cFcStatsGfpInTypeInvalid is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsGfpInTypeInvalidHC, which is a 64 bit counter.')
cFcStatsGfpInSBlkCRCErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 350), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErr.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErr.setDescription('This object gives the value of the number of GFP super block CRC errors received on this interface. This object only shows the lower word value of the counter.The high word value is given by cFcStatsGfpInSblkCRCErrHigh. SNMP v2c or v3 managers can directly use cFcStatsGfpInSblkCRCErrHC, which is a 64 bit counter.')
cFcStatsGfpInSBlkCRCErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 1, 1, 360), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErrHigh.setDescription('This object gives the higher word value the number of GFP super block CRC errors received on the particular interface. If the value of cFcStatsGfpInSblkCRCErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcStatsGfpInSblkCRCErrHC, which is a 64 bit counter.')
cFcStatsHCTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2), )
if mibBuilder.loadTexts: cFcStatsHCTable.setStatus('current')
if mibBuilder.loadTexts: cFcStatsHCTable.setDescription('This table reports GFP stats on supported Fibre Channel interfaces.')
cFcStatsHCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cFcStatsHCEntry.setStatus('current')
if mibBuilder.loadTexts: cFcStatsHCEntry.setDescription('A collection of Fibre channel statisctics on an interface. All the counters in this table are 64 bits counters and are useful only to SNMP v2 and v3 managers.')
cFcStatsInvalidOrdSetsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInvalidOrdSetsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInvalidOrdSetsHC.setDescription('The counter associated with the number of invalid ordered sets encountered on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsEncodingDispErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsEncodingDispErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsEncodingDispErrHC.setDescription('The counter associated with the number of encoding disparity errors encountered on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInTotalErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInTotalErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInTotalErrHC.setDescription('The counter associated with the total number of errors encountered on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInFramesTruncHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTruncHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTruncHC.setDescription('The counter associated with the number of fibre channel truncated frames received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInFramesTooLongHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesTooLongHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesTooLongHC.setDescription('The counter associated with the number of fibre channel frames received with a length greater than what was agreed to on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInFramesBadCRCHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesBadCRCHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesBadCRCHC.setDescription('The counter associated with the number of frames received with invalid CRC, on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInFramesHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInFramesHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInFramesHC.setDescription('The counter associated with the number of fibre channel frames received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInElementsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInElementsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInElementsHC.setDescription('The counter associated with the number of bytes received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsInDiscardsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsInDiscardsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsInDiscardsHC.setDescription('The counter associated with the number of received frames discarded on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsOutFramesBadCRCHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRCHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFramesBadCRCHC.setDescription('The counter associated with the number of transmitted frames with invalid CRC, on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsOutFramesHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutFramesHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutFramesHC.setDescription('The counter associated with the number of fibre channel frames transmitted on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsOutElementsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutElementsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutElementsHC.setDescription('The counter associated with the number of bytes transmitted on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsOutDiscardsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsOutDiscardsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsOutDiscardsHC.setDescription('The counter associated with the number of transmitted frames on this interface that were discarded. This is a High Capacity ( 64 bit ) counter.')
cFcStatsLinkResetsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsLinkResetsHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsLinkResetsHC.setDescription('The counter associated with the number of link resets detected on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsGfpInSBitErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBitErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBitErrHC.setDescription('The counter associated with the number of single bit GFP errors received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsGfpInMBitErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInMBitErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInMBitErrHC.setDescription('The counter associated with the number of multi bit GFP errors received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcStatsGfpInTypeInvalidHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalidHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInTypeInvalidHC.setDescription('The counter associated with the number of GFP frames received on this interface with an invalid type. This is a High Capacity ( 64 bit ) counter.')
cFcStatsGfpInSBlkCRCErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 2, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcStatsGfpInSBlkCRCErrHC.setDescription('The counter associated with the number of GFP super block CRC errors received on this interface. This is a High Capacity ( 64 bit ) counter.')
cFcHistTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3), )
if mibBuilder.loadTexts: cFcHistTable.setStatus('current')
if mibBuilder.loadTexts: cFcHistTable.setDescription('This table reports fibre channel stats on supported interfaces for previous intervals.')
cFcHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CERENT-FC-MIB", "cFcHistIntervalType"), (0, "CERENT-FC-MIB", "cFcHistIntervalNum"))
if mibBuilder.loadTexts: cFcHistEntry.setStatus('current')
if mibBuilder.loadTexts: cFcHistEntry.setDescription('A collection of Fibre Channel stats history on an interface.')
cFcHistIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 10), CerentPeriod())
if mibBuilder.loadTexts: cFcHistIntervalType.setStatus('current')
if mibBuilder.loadTexts: cFcHistIntervalType.setDescription('This object specifies the type of interval for which the data is being obtained.')
cFcHistIntervalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cFcHistIntervalNum.setStatus('current')
if mibBuilder.loadTexts: cFcHistIntervalNum.setDescription('This object gives the number of the particular interval for which the data is being obtained.')
cFcHistInvalidOrdSets = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInvalidOrdSets.setStatus('current')
if mibBuilder.loadTexts: cFcHistInvalidOrdSets.setDescription('This object gives the value of the number of invalid ordered sets on the particular interface during this sampling interval. This object only shows the lower word value of the counter. The high word value is given by cFcHistInvalidOrdSetsHigh. SNMP v2c or v3 managers can directly use cFcHistInvalidOrdSetsHC, which is a 64 bit counter.')
cFcHistInvalidOrdSetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInvalidOrdSetsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInvalidOrdSetsHigh.setDescription('This object gives the higher word value the number of invalid ordered sets on the particular interface during this sampling interval. If the value of cFcHistInvalidOrdSets is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInvalidOrdSetsHC, which is a 64 bit counter.')
cFcHistEncodingDispErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistEncodingDispErr.setStatus('current')
if mibBuilder.loadTexts: cFcHistEncodingDispErr.setDescription('This object gives the value of the number of encoding disparity errors on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistEncodingDispErrHigh. SNMP v2c or v3 managers can directly use cFcHistEncodingDispErrHC, which is a 64 bit counter.')
cFcHistEncodingDispErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistEncodingDispErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistEncodingDispErrHigh.setDescription('This object gives the higher word value the number of encoding disparity errors on the particular interface during this sampling interval. If the value of cFcHistEncodingDispErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistEncodingDispErrHC, which is a 64 bit counter.')
cFcHistInTotalErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInTotalErr.setStatus('current')
if mibBuilder.loadTexts: cFcHistInTotalErr.setDescription('This object gives the total number of errors encountered on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInTotalErrHigh. SNMP v2c or v3 managers can directly use cFcHistInTotalErrHC, which is a 64 bit counter.')
cFcHistInTotalErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInTotalErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInTotalErrHigh.setDescription('This object gives the higher word value of the total number of errors encountered on this interface during this sampling interval. If the value of cFcHistInTotalErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInTotalErrHC, which is a 64 bit counter.')
cFcHistInFramesTrunc = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTrunc.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTrunc.setDescription('This object gives the number of fibre channel truncated frames received on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInFramesTruncHigh. SNMP v2c or v3 managers can directly use cFcHistInFramesTruncHC, which is a 64 bit counter.')
cFcHistInFramesTruncHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTruncHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTruncHigh.setDescription('This object gives the higher word value the number of fibre channel truncated frames received on this interface during this sampling interval. If the value of cFcHistInFramesTrunc is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInFramesTruncHC, which is a 64 bit counter.')
cFcHistInFramesTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTooLong.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTooLong.setDescription('This object gives the value of the number of fibre channel frames received on this interface during this sampling interval with a length greater than what was agreed to. This object only shows the lower word value of the counter.The high word value is given by cFcHistInFramesTooLongHigh. SNMP v2c or v3 managers can directly use cFcHistInFramesTooLongHC, which is a 64 bit counter.')
cFcHistInFramesTooLongHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 120), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTooLongHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTooLongHigh.setDescription('This object gives the higher word value the number of fibre channel frames received on this interface during this sampling interval with a length greater than what was agreed to. If the value of cFcHistInFramesTooLong is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInFramesTooLongHC, which is a 64 bit counter.')
cFcHistInFramesBadCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 130), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesBadCRC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesBadCRC.setDescription('This object gives the value of the number of frames received with invalid CRC, on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInFramesBadCRCHigh. SNMP v2c or v3 managers can directly use cFcHistInFramesBadCRCHC, which is a 64 bit counter.')
cFcHistInFramesBadCRCHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 140), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesBadCRCHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesBadCRCHigh.setDescription('This object gives the higher word value the number of frames received with invalid CRC, on this interface during this sampling interval. If the value of cFcHistInFramesBadCRC is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInFramesBadCRCHigh, which is a 64 bit counter.')
cFcHistInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 150), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFrames.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFrames.setDescription('This object gives the value of the number of fibre channel frames received on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInFramesHigh. SNMP v2c or v3 managers can directly use cFcHistInFramesHC, which is a 64 bit counter.')
cFcHistInFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 160), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesHigh.setDescription('This object gives the higher word value the number of fibre channel frames received on this interface during this sampling interval. If the value of cFcHistInFrames is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInFramesHC, which is a 64 bit counter.')
cFcHistInElements = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 170), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInElements.setStatus('current')
if mibBuilder.loadTexts: cFcHistInElements.setDescription('This object gives the value of the number of received bytes on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInElementsHigh. SNMP v2c or v3 managers can directly use cFcHistInElementsHC, which is a 64 bit counter.')
cFcHistInElementsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 180), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInElementsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInElementsHigh.setDescription('This object gives the higher word value the number of received bytes on the particular interface during this sampling interval. If the value of cFcHistInElements is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInElementsHC, which is a 64 bit counter.')
cFcHistInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 190), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInDiscards.setStatus('current')
if mibBuilder.loadTexts: cFcHistInDiscards.setDescription('This object gives the the number of received frames discarded on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistInDiscardsHigh. SNMP v2c or v3 managers can directly use cFcHistInDiscardsHC, which is a 64 bit counter.')
cFcHistInDiscardsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 200), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInDiscardsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistInDiscardsHigh.setDescription('This object gives the higher word value of the number of received frames discarded on this interface during this sampling interval. If the value of cFcHistInDiscards is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistInDiscardsHC, which is a 64 bit counter.')
cFcHistOutFramesBadCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 210), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFramesBadCRC.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFramesBadCRC.setDescription('This object gives the the number of frames transmitted with invalid CRC, on this interface, during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistOutFramesBadCRCHigh. SNMP v2c or v3 managers can directly use cFcHistOutFramesBadCRCHC, which is a 64 bit counter.')
cFcHistOutFramesBadCRCHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 220), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFramesBadCRCHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFramesBadCRCHigh.setDescription('This object gives the higher word value the number of frames transmitted with invalid CRC, on this interface, during this sampling interval. If the value of cFcHistOutFramesBadCRC is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistOutFramesBadCRCHC, which is a 64 bit counter.')
cFcHistOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 230), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFrames.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFrames.setDescription('This object gives the value of the number of frames transmitted on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistOutFramesHigh. SNMP v2c or v3 managers can directly use cFcHistOutFramesHC, which is a 64 bit counter.')
cFcHistOutFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 240), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFramesHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFramesHigh.setDescription('This object gives the higher word value the number of frames transmitted on the particular interface during this sampling interval. If the value of cFcHistOutFrames is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistOutFramesHC, which is a 64 bit counter.')
cFcHistOutElements = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 250), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutElements.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutElements.setDescription('This object gives the value of the number of trasmitted bytes on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistOutElementsHigh. SNMP v2c or v3 managers can directly use cFcHistOutElementsHC, which is a 64 bit counter.')
cFcHistOutElementsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 260), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutElementsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutElementsHigh.setDescription('This object gives the higher word value of the number of transmitted bytes on the particular interface during this sampling interval. If the value of cFcHistOutElements is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistOutElementsHC, which is a 64 bit counter.')
cFcHistOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 270), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutDiscards.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutDiscards.setDescription('This object gives the number of transmitted frames discarded on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistOutDiscardsHigh. SNMP v2c or v3 managers can directly use cFcHistOutDiscardsHC, which is a 64 bit counter.')
cFcHistOutDiscardsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 280), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutDiscardsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutDiscardsHigh.setDescription('This object gives the higher word value the number of transmitted frames discarded on this interface during this sampling interval. If the value of cFcHistOutDiscards is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistOutDiscardsHC, which is a 64 bit counter.')
cFcHistLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 290), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistLinkResets.setStatus('current')
if mibBuilder.loadTexts: cFcHistLinkResets.setDescription('This object gives the value of the number of link resets detected on the particular interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistLinkResetsHigh. SNMP v2c or v3 managers can directly use cFcHistLinkResetsHC, which is a 64 bit counter.')
cFcHistLinkResetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 300), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistLinkResetsHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistLinkResetsHigh.setDescription('This object gives the higher word value the number of link resets detected on the particular interface during this interval. If the value of cFcHistLinkResets is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistLinkResetsHC, which is a 64 bit counter.')
cFcHistGfpInSBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 310), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBitErr.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBitErr.setDescription('This object gives the number of single bit GFP errors received on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistGfpInSBitErrHigh. SNMP v2c or v3 managers can directly use cFcHistGfpInSBitErrHC, which is a 64 bit counter.')
cFcHistGfpInSBitErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 320), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBitErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBitErrHigh.setDescription('This object gives the higher word value of the number of single bit GFP errors received on this interface during this sampling interval. If the value of cFcHistGfpInSBitErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistGfpInSBitErrHC, which is a 64 bit counter.')
cFcHistGfpInMBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 330), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInMBitErr.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInMBitErr.setDescription('This object gives the number of multi bit GFP errors received on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistGfpInMBitErrHigh. SNMP v2c or v3 managers can directly use cFcHistGfpInMBitErrHC, which is a 64 bit counter.')
cFcHistGfpInMBitErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 340), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInMBitErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInMBitErrHigh.setDescription('This object gives the higher word value the number of multi bit GFP errors received on this interface during this sampling interval. If the value of cFcHistGfpInMBitErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistGfpInMBitErrHC, which is a 64 bit counter.')
cFcHistGfpInTypeInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 350), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalid.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalid.setDescription('This object gives the value of the number of received GFP frames with an invalid type on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistGfpInTypeInvalidHigh. SNMP v2c or v3 managers can directly use cFcHistGfpInTypeInvalidHC, which is a 64 bit counter.')
cFcHistGfpInTypeInvalidHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 360), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalidHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalidHigh.setDescription('This object gives the higher word value of the number of received GFP frames with an invalid type on this interface, during this sampling interval. If the value of cFcHistGfpInTypeInvalid is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistGfpInTypeInvalidHC, which is a 64 bit counter.')
cFcHistGfpInSBlkCRCErr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 370), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErr.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErr.setDescription('This object gives the value of the number of super block CRC GFP errors received on this interface during this sampling interval. This object only shows the lower word value of the counter.The high word value is given by cFcHistGfpInSblkCRCErrHigh. SNMP v2c or v3 managers can directly use cFcHistGfpInSBlkCRCErrHC, which is a 64 bit counter.')
cFcHistGfpInSBlkCRCErrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 3, 1, 380), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErrHigh.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErrHigh.setDescription('This object gives the higher word value the number of super block CRC GFP errors received on this interface during this sampling interval. If the value of cFcHistGfpInSblkCRCErr is greater than 4,294,967,295, the higher word value will be stored in this object. SNMP v2c or v3 managers can directly use cFcHistGfpInSBlkCRCErrHC, which is a 64 bit counter.')
cFcHistHCTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4), )
if mibBuilder.loadTexts: cFcHistHCTable.setStatus('current')
if mibBuilder.loadTexts: cFcHistHCTable.setDescription('This table reports history of fibre channel stats on supported Fibre Channel interfaces.')
cFcHistHCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CERENT-FC-MIB", "cFcHistIntervalType"), (0, "CERENT-FC-MIB", "cFcHistIntervalNum"))
if mibBuilder.loadTexts: cFcHistHCEntry.setStatus('current')
if mibBuilder.loadTexts: cFcHistHCEntry.setDescription('A collection of history of Fibre channel statisctics on an interface. All the counters in this table are 64 bits counters and are useful only to SNMP v2 and v3 managers.')
cFcHistInvalidOrdSetsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInvalidOrdSetsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInvalidOrdSetsHC.setDescription('The counter associated with the number of invalid ordered sets encountered on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistEncodingDispErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistEncodingDispErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistEncodingDispErrHC.setDescription('The counter associated with the number of encoding disparity errors encountered on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInTotalErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInTotalErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInTotalErrHC.setDescription('The counter associated with the total number of errors encountered on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInFramesTruncHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTruncHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTruncHC.setDescription('The counter associated with the number of fibre channel truncated frames received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInFramesTooLongHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesTooLongHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesTooLongHC.setDescription('The counter associated with the number of fibre channel frames received on this interface during this sampling interval, with a length greater than what was agreed to. This is a High Capacity ( 64 bit ) counter.')
cFcHistInFramesBadCRCHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesBadCRCHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesBadCRCHC.setDescription('The counter associated with the number of frames received with an invalid CRC, on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInFramesHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInFramesHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInFramesHC.setDescription('The counter associated with the number of frames received on this interface, during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInElementsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInElementsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInElementsHC.setDescription('The counter associated with the number of bytes received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistInDiscardsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistInDiscardsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistInDiscardsHC.setDescription('The counter associated with the number of received frames discarded on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistOutFramesBadCRCHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFramesBadCRCHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFramesBadCRCHC.setDescription('The counter associated with the number of frames transmitted with an invalid CRC, on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistOutFramesHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutFramesHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutFramesHC.setDescription('The counter associated with the number of fibre channel frames transmitted on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistOutElementsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutElementsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutElementsHC.setDescription('The counter associated with the number of bytes received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistOutDiscardsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistOutDiscardsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistOutDiscardsHC.setDescription('The counter associated with the number of transmitted frames discarded on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistLinkResetsHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistLinkResetsHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistLinkResetsHC.setDescription('The counter associated with the number of link resets detected on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistGfpInSBitErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBitErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBitErrHC.setDescription('The counter associated with the number of single bit GFP errors received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistGfpInMBitErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInMBitErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInMBitErrHC.setDescription('The counter associated with the number of multi bit GFP errors received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistGfpInTypeInvalidHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalidHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInTypeInvalidHC.setDescription('The counter associated with the number of GFP frames with invalid type received on this interface, during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcHistGfpInSBlkCRCErrHC = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 4, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErrHC.setStatus('current')
if mibBuilder.loadTexts: cFcHistGfpInSBlkCRCErrHC.setDescription('The counter associated with the number of GFP super block CRC errors received on this interface during this sampling interval. This is a High Capacity ( 64 bit ) counter.')
cFcAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5), )
if mibBuilder.loadTexts: cFcAlarmTable.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmTable.setDescription('A list of cFcAlarm entries.')
cFcAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1), ).setIndexNames((0, "CERENT-FC-MIB", "cFcAlarmIndex"))
if mibBuilder.loadTexts: cFcAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmEntry.setDescription('A list of parameters that set up a periodic checking for cFcAlarm conditions.')
cFcAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cFcAlarmIndex.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmIndex.setDescription('An index that uniquely identifies an entry in the cFcAlarm table. Each such entry defines a diagnostic sample at a particular interval for an object on the device.')
cFcAlarmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmInterval.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmInterval.setDescription('The interval in seconds over which the data is sampled and compared with the rising and falling thresholds. When setting this variable, care should be taken in the case of deltaValue sampling - the interval should be set short enough that the sampled variable is very unlikely to increase or decrease by more than 2^31 - 1 during a single sampling interval.')
cFcAlarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 30), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmVariable.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmVariable.setDescription('The object identifier of the particular variable to be sampled.')
cFcAlarmSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmSampleType.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmSampleType.setDescription('The method of sampling the selected variable and calculating the value to be compared against the thresholds. If the value of this object is absoluteValue(1), the value of the selected variable will be compared directly with the thresholds at the end of the sampling interval. If the value of this object is deltaValue(2), the value of the selected variable at the last sample will be subtracted from the current value, and the difference compared with the thresholds.')
cFcAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcAlarmValue.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmValue.setDescription('The value of the statistic during the last sampling period. For example, if the sample type is deltaValue, this value will be the difference between the samples at the beginning and end of the period. If the sample type is absoluteValue, this value will be the sampled value at the end of the period. This is the value that is compared with the rising and falling thresholds. This object only shows the lower word value. The high word value is given by cFcAlarmValueHigh. The value during the current sampling period is not made available until the period is completed and will remain available until the next period completes.')
cFcAlarmValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cFcAlarmValueHigh.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmValueHigh.setDescription('The higher word value of the statistic during the last sampling period. If the value of cFcAlarmValue is greater than 4,294,967,295, the higher word value will be stored in this object.')
cFcAlarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingcFcAlarm", 1), ("fallingcFcAlarm", 2), ("risingOrFallingcFcAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmStartupAlarm.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmStartupAlarm.setDescription('The cFcAlarm that may be sent when this entry is set to valid. If the first sample after this entry becomes valid is greater than or equal to the risingThreshold and cFcAlarmStartupAlarm is equal to risingcFcAlarm(1) or risingOrFallingAlarm(3), then a single rising cFcAlarm will be generated. If the sample after this entry becomes valid is less than or equal to the fallingThreshold and cFcAlarmStartupAlarm is equal to fallingAlarm(2) or risingOrFallingcFcAlarm(3), then a single falling alarm will be generated.')
cFcAlarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 80), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmRisingThreshold.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmRisingThreshold.setDescription('A threshold for the sampled statistic. When the current sampled value is greater than or equal to this threshold, and the value at the last sampling interval was less than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is greater than or equal to this threshold and the associated cFcAlarmStartupAlarm is equal to risingcFcAlarm(1) or risingOrFallingAlarm(3). After a rising event is generated, another such event will not be generated until the sampled value falls below this threshold and reaches the cFcAlarmFallingThreshold. This object can only be used to set the lower word value of the threshold. If the threshold to be set is greater than 4,294,967,295 then cFcAlarmRisingThresholdHigh should be used to set the upper word value of the threshold.')
cFcAlarmRisingThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 90), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmRisingThresholdHigh.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmRisingThresholdHigh.setDescription('The upper word value of the rising threshold for the sampled statistic. If the value of threshold to be set in cFcAlarmRisingThreshold is greater than 4,294,967,295, then this object should be used to set the upper word value of the threshold.')
cFcAlarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmFallingThreshold.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmFallingThreshold.setDescription('A threshold for the sampled statistic. When the current sampled value is less than or equal to this threshold, and the value at the last sampling interval was greater than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is less than or equal to this threshold and the associated cFcAlarmStartupAlarm is equal to fallingcFcAlarm(2) or risingOrFallingAlarm(3). After a falling event is generated, another such event will not be generated until the sampled value rises above this threshold and reaches the cFcAlarmRisingThreshold. This object can only be used to set the lower word value of the threshold. If the threshold to be set is greater than 4,294,967,295, then cFcAlarmFallingThresholdHigh should be used to set the upper word value of the threshold.')
cFcAlarmFallingThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 110), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmFallingThresholdHigh.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmFallingThresholdHigh.setDescription('The upper word value of the falling threshold for the sampled statistic. If the value of threshold to be set in cFcAlarmFallingThreshold is greater than 4,294,967,295, then this object should be used to set the upper word value of the threshold.')
cFcAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 60, 1, 5, 1, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cFcAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: cFcAlarmStatus.setDescription('The status of this cFcAlarm entry.')
cerentFcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 40))
cerentFcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 40, 1))
cerentFcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2))
cerentFcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3607, 5, 40, 1, 1)).setObjects(("CERENT-FC-MIB", "cerentFcStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcMIBCompliance = cerentFcMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cerentFcMIBCompliance.setDescription('The compliance statement for platforms that monitor the Fibre channel interfaces with respect to error counters, for the physical layer.')
cerentFcStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2, 1)).setObjects(("CERENT-FC-MIB", "cFcStatsInvalidOrdSets"), ("CERENT-FC-MIB", "cFcStatsInvalidOrdSetsHigh"), ("CERENT-FC-MIB", "cFcStatsEncodingDispErr"), ("CERENT-FC-MIB", "cFcStatsEncodingDispErrHigh"), ("CERENT-FC-MIB", "cFcStatsInTotalErr"), ("CERENT-FC-MIB", "cFcStatsInTotalErrHigh"), ("CERENT-FC-MIB", "cFcStatsInFramesTrunc"), ("CERENT-FC-MIB", "cFcStatsInFramesTruncHigh"), ("CERENT-FC-MIB", "cFcStatsInFramesTooLong"), ("CERENT-FC-MIB", "cFcStatsInFramesTooLongHigh"), ("CERENT-FC-MIB", "cFcStatsInFramesBadCRC"), ("CERENT-FC-MIB", "cFcStatsInFramesBadCRCHigh"), ("CERENT-FC-MIB", "cFcStatsInFrames"), ("CERENT-FC-MIB", "cFcStatsInFramesHigh"), ("CERENT-FC-MIB", "cFcStatsInElements"), ("CERENT-FC-MIB", "cFcStatsInElementsHigh"), ("CERENT-FC-MIB", "cFcStatsInDiscards"), ("CERENT-FC-MIB", "cFcStatsInDiscardsHigh"), ("CERENT-FC-MIB", "cFcStatsOutFramesBadCRC"), ("CERENT-FC-MIB", "cFcStatsOutFramesBadCRCHigh"), ("CERENT-FC-MIB", "cFcStatsOutFrames"), ("CERENT-FC-MIB", "cFcStatsOutFramesHigh"), ("CERENT-FC-MIB", "cFcStatsOutElements"), ("CERENT-FC-MIB", "cFcStatsOutElementsHigh"), ("CERENT-FC-MIB", "cFcStatsOutDiscards"), ("CERENT-FC-MIB", "cFcStatsOutDiscardsHigh"), ("CERENT-FC-MIB", "cFcStatsLinkResets"), ("CERENT-FC-MIB", "cFcStatsLinkResetsHigh"), ("CERENT-FC-MIB", "cFcStatsGfpInSBitErr"), ("CERENT-FC-MIB", "cFcStatsGfpInSBitErrHigh"), ("CERENT-FC-MIB", "cFcStatsGfpInMBitErr"), ("CERENT-FC-MIB", "cFcStatsGfpInMBitErrHigh"), ("CERENT-FC-MIB", "cFcStatsGfpInTypeInvalid"), ("CERENT-FC-MIB", "cFcStatsGfpInTypeInvalidHigh"), ("CERENT-FC-MIB", "cFcStatsGfpInSBlkCRCErr"), ("CERENT-FC-MIB", "cFcStatsGfpInSBlkCRCErrHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcStatsGroup = cerentFcStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cerentFcStatsGroup.setDescription('The collection of objects to give stats related to the performance of an fibre channel interface.')
cerentFcHistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2, 2)).setObjects(("CERENT-FC-MIB", "cFcHistInvalidOrdSets"), ("CERENT-FC-MIB", "cFcHistInvalidOrdSetsHigh"), ("CERENT-FC-MIB", "cFcHistEncodingDispErr"), ("CERENT-FC-MIB", "cFcHistEncodingDispErrHigh"), ("CERENT-FC-MIB", "cFcHistInTotalErr"), ("CERENT-FC-MIB", "cFcHistInTotalErrHigh"), ("CERENT-FC-MIB", "cFcHistInFramesTrunc"), ("CERENT-FC-MIB", "cFcHistInFramesTruncHigh"), ("CERENT-FC-MIB", "cFcHistInFramesTooLong"), ("CERENT-FC-MIB", "cFcHistInFramesTooLongHigh"), ("CERENT-FC-MIB", "cFcHistInFramesBadCRC"), ("CERENT-FC-MIB", "cFcHistInFramesBadCRCHigh"), ("CERENT-FC-MIB", "cFcHistInFrames"), ("CERENT-FC-MIB", "cFcHistInFramesHigh"), ("CERENT-FC-MIB", "cFcHistInElements"), ("CERENT-FC-MIB", "cFcHistInElementsHigh"), ("CERENT-FC-MIB", "cFcHistInDiscards"), ("CERENT-FC-MIB", "cFcHistInDiscardsHigh"), ("CERENT-FC-MIB", "cFcHistOutFramesBadCRC"), ("CERENT-FC-MIB", "cFcHistOutFramesBadCRCHigh"), ("CERENT-FC-MIB", "cFcHistOutFrames"), ("CERENT-FC-MIB", "cFcHistOutFramesHigh"), ("CERENT-FC-MIB", "cFcHistOutElements"), ("CERENT-FC-MIB", "cFcHistOutElementsHigh"), ("CERENT-FC-MIB", "cFcHistOutDiscards"), ("CERENT-FC-MIB", "cFcHistOutDiscardsHigh"), ("CERENT-FC-MIB", "cFcHistLinkResets"), ("CERENT-FC-MIB", "cFcHistLinkResetsHigh"), ("CERENT-FC-MIB", "cFcHistGfpInSBitErr"), ("CERENT-FC-MIB", "cFcHistGfpInSBitErrHigh"), ("CERENT-FC-MIB", "cFcHistGfpInMBitErr"), ("CERENT-FC-MIB", "cFcHistGfpInMBitErrHigh"), ("CERENT-FC-MIB", "cFcHistGfpInTypeInvalid"), ("CERENT-FC-MIB", "cFcHistGfpInTypeInvalidHigh"), ("CERENT-FC-MIB", "cFcHistGfpInSBlkCRCErr"), ("CERENT-FC-MIB", "cFcHistGfpInSBlkCRCErrHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcHistGroup = cerentFcHistGroup.setStatus('current')
if mibBuilder.loadTexts: cerentFcHistGroup.setDescription('The collection of objects to give previous stats related to the performance of an fibre channel interface.')
cerentFcStatsHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2, 3)).setObjects(("CERENT-FC-MIB", "cFcStatsInvalidOrdSetsHC"), ("CERENT-FC-MIB", "cFcStatsEncodingDispErrHC"), ("CERENT-FC-MIB", "cFcStatsInTotalErrHC"), ("CERENT-FC-MIB", "cFcStatsInFramesTruncHC"), ("CERENT-FC-MIB", "cFcStatsInFramesTooLongHC"), ("CERENT-FC-MIB", "cFcStatsInFramesBadCRCHC"), ("CERENT-FC-MIB", "cFcStatsInFramesHC"), ("CERENT-FC-MIB", "cFcStatsInElementsHC"), ("CERENT-FC-MIB", "cFcStatsInDiscardsHC"), ("CERENT-FC-MIB", "cFcStatsOutFramesBadCRCHC"), ("CERENT-FC-MIB", "cFcStatsOutFramesHC"), ("CERENT-FC-MIB", "cFcStatsOutElementsHC"), ("CERENT-FC-MIB", "cFcStatsOutDiscardsHC"), ("CERENT-FC-MIB", "cFcStatsLinkResetsHC"), ("CERENT-FC-MIB", "cFcStatsGfpInSBitErrHC"), ("CERENT-FC-MIB", "cFcStatsGfpInMBitErrHC"), ("CERENT-FC-MIB", "cFcStatsGfpInTypeInvalidHC"), ("CERENT-FC-MIB", "cFcStatsGfpInSBlkCRCErrHC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcStatsHCGroup = cerentFcStatsHCGroup.setStatus('current')
if mibBuilder.loadTexts: cerentFcStatsHCGroup.setDescription('The collection of 64 bit objects to give stats related to the performance of an fibre channel interface.')
cerentFcHistHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2, 4)).setObjects(("CERENT-FC-MIB", "cFcHistInvalidOrdSetsHC"), ("CERENT-FC-MIB", "cFcHistEncodingDispErrHC"), ("CERENT-FC-MIB", "cFcHistInTotalErrHC"), ("CERENT-FC-MIB", "cFcHistInFramesTruncHC"), ("CERENT-FC-MIB", "cFcHistInFramesTooLongHC"), ("CERENT-FC-MIB", "cFcHistInFramesBadCRCHC"), ("CERENT-FC-MIB", "cFcHistInFramesHC"), ("CERENT-FC-MIB", "cFcHistInElementsHC"), ("CERENT-FC-MIB", "cFcHistInDiscardsHC"), ("CERENT-FC-MIB", "cFcHistOutFramesBadCRCHC"), ("CERENT-FC-MIB", "cFcHistOutFramesHC"), ("CERENT-FC-MIB", "cFcHistOutElementsHC"), ("CERENT-FC-MIB", "cFcHistOutDiscardsHC"), ("CERENT-FC-MIB", "cFcHistLinkResetsHC"), ("CERENT-FC-MIB", "cFcHistGfpInSBitErrHC"), ("CERENT-FC-MIB", "cFcHistGfpInMBitErrHC"), ("CERENT-FC-MIB", "cFcHistGfpInTypeInvalidHC"), ("CERENT-FC-MIB", "cFcHistGfpInSBlkCRCErrHC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcHistHCGroup = cerentFcHistHCGroup.setStatus('current')
if mibBuilder.loadTexts: cerentFcHistHCGroup.setDescription('The collection of 64 bit objects to give previous stats related to the performance of an fibre channel interface.')
cerentFcAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 40, 2, 5)).setObjects(("CERENT-FC-MIB", "cFcAlarmInterval"), ("CERENT-FC-MIB", "cFcAlarmVariable"), ("CERENT-FC-MIB", "cFcAlarmSampleType"), ("CERENT-FC-MIB", "cFcAlarmValue"), ("CERENT-FC-MIB", "cFcAlarmValueHigh"), ("CERENT-FC-MIB", "cFcAlarmStartupAlarm"), ("CERENT-FC-MIB", "cFcAlarmRisingThreshold"), ("CERENT-FC-MIB", "cFcAlarmRisingThresholdHigh"), ("CERENT-FC-MIB", "cFcAlarmFallingThreshold"), ("CERENT-FC-MIB", "cFcAlarmFallingThresholdHigh"), ("CERENT-FC-MIB", "cFcAlarmStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentFcAlarmGroup = cerentFcAlarmGroup.setStatus('current')
if mibBuilder.loadTexts: cerentFcAlarmGroup.setDescription('The collection of alarm thresholds configured on fibre channel interfaces.')
mibBuilder.exportSymbols("CERENT-FC-MIB", cFcStatsGfpInSBitErrHC=cFcStatsGfpInSBitErrHC, cFcHistLinkResetsHigh=cFcHistLinkResetsHigh, cFcStatsOutFramesHC=cFcStatsOutFramesHC, cFcStatsOutFramesBadCRCHigh=cFcStatsOutFramesBadCRCHigh, cFcHistGfpInSBlkCRCErrHigh=cFcHistGfpInSBlkCRCErrHigh, cFcStatsInvalidOrdSetsHigh=cFcStatsInvalidOrdSetsHigh, cFcHistOutFramesBadCRCHC=cFcHistOutFramesBadCRCHC, cFcHistEncodingDispErrHC=cFcHistEncodingDispErrHC, cFcHistInFramesHC=cFcHistInFramesHC, cFcStatsEncodingDispErrHigh=cFcStatsEncodingDispErrHigh, cFcHistEntry=cFcHistEntry, cFcHistGfpInSBlkCRCErr=cFcHistGfpInSBlkCRCErr, cFcStatsInElementsHC=cFcStatsInElementsHC, cFcHistInFramesBadCRC=cFcHistInFramesBadCRC, cFcStatsInFramesTruncHC=cFcStatsInFramesTruncHC, cFcStatsInFramesTooLongHigh=cFcStatsInFramesTooLongHigh, cFcStatsEncodingDispErr=cFcStatsEncodingDispErr, cFcHistTable=cFcHistTable, cFcStatsGfpInSBitErrHigh=cFcStatsGfpInSBitErrHigh, cFcStatsInFrames=cFcStatsInFrames, cFcStatsOutFramesBadCRC=cFcStatsOutFramesBadCRC, cFcStatsGfpInMBitErrHC=cFcStatsGfpInMBitErrHC, cerentFcMIBCompliance=cerentFcMIBCompliance, cFcStatsInFramesBadCRCHigh=cFcStatsInFramesBadCRCHigh, cFcHistGfpInSBitErrHC=cFcHistGfpInSBitErrHC, cFcHistInFrames=cFcHistInFrames, cFcStatsInTotalErrHigh=cFcStatsInTotalErrHigh, cFcHistGfpInTypeInvalidHC=cFcHistGfpInTypeInvalidHC, cFcAlarmSampleType=cFcAlarmSampleType, cFcStatsHCTable=cFcStatsHCTable, cFcStatsOutDiscardsHigh=cFcStatsOutDiscardsHigh, cFcStatsInFramesHigh=cFcStatsInFramesHigh, cFcHistInTotalErrHC=cFcHistInTotalErrHC, cFcStatsInFramesTrunc=cFcStatsInFramesTrunc, cFcStatsInFramesBadCRCHC=cFcStatsInFramesBadCRCHC, cFcHistInFramesTruncHigh=cFcHistInFramesTruncHigh, cerentFc=cerentFc, cFcStatsInTotalErr=cFcStatsInTotalErr, cFcHistLinkResetsHC=cFcHistLinkResetsHC, cFcStatsLinkResets=cFcStatsLinkResets, cFcHistInFramesBadCRCHigh=cFcHistInFramesBadCRCHigh, cFcHistInFramesHigh=cFcHistInFramesHigh, cerentFcMIB=cerentFcMIB, cFcStatsOutElementsHigh=cFcStatsOutElementsHigh, cFcStatsInFramesHC=cFcStatsInFramesHC, cFcHistInFramesTruncHC=cFcHistInFramesTruncHC, cFcHistOutElementsHC=cFcHistOutElementsHC, cFcStatsOutElements=cFcStatsOutElements, cFcHistGfpInSBitErr=cFcHistGfpInSBitErr, cFcAlarmStartupAlarm=cFcAlarmStartupAlarm, cerentFcMIBGroups=cerentFcMIBGroups, cFcHistInvalidOrdSetsHigh=cFcHistInvalidOrdSetsHigh, cFcHistInFramesTrunc=cFcHistInFramesTrunc, cFcStatsInDiscardsHigh=cFcStatsInDiscardsHigh, cFcHistOutFramesBadCRCHigh=cFcHistOutFramesBadCRCHigh, cFcHistOutElements=cFcHistOutElements, cFcStatsInTotalErrHC=cFcStatsInTotalErrHC, cFcAlarmTable=cFcAlarmTable, cFcHistEncodingDispErr=cFcHistEncodingDispErr, cFcStatsGfpInMBitErrHigh=cFcStatsGfpInMBitErrHigh, cFcHistOutFramesBadCRC=cFcHistOutFramesBadCRC, cFcHistInTotalErrHigh=cFcHistInTotalErrHigh, cFcHistOutElementsHigh=cFcHistOutElementsHigh, cFcStatsInDiscards=cFcStatsInDiscards, cFcStatsOutFramesHigh=cFcStatsOutFramesHigh, cFcStatsLinkResetsHC=cFcStatsLinkResetsHC, cFcHistOutDiscardsHigh=cFcHistOutDiscardsHigh, cFcAlarmValueHigh=cFcAlarmValueHigh, cFcStatsGfpInTypeInvalidHigh=cFcStatsGfpInTypeInvalidHigh, cFcHistInDiscards=cFcHistInDiscards, cFcHistOutDiscards=cFcHistOutDiscards, cFcHistInTotalErr=cFcHistInTotalErr, cFcAlarmValue=cFcAlarmValue, cFcStatsGfpInSBlkCRCErrHigh=cFcStatsGfpInSBlkCRCErrHigh, cFcStatsInFramesTruncHigh=cFcStatsInFramesTruncHigh, cFcStatsInFramesTooLongHC=cFcStatsInFramesTooLongHC, cFcHistOutFramesHigh=cFcHistOutFramesHigh, cFcAlarmRisingThreshold=cFcAlarmRisingThreshold, cFcStatsHCEntry=cFcStatsHCEntry, cFcStatsGfpInMBitErr=cFcStatsGfpInMBitErr, cFcHistIntervalType=cFcHistIntervalType, cFcHistInFramesTooLongHigh=cFcHistInFramesTooLongHigh, cFcHistLinkResets=cFcHistLinkResets, cFcStatsGfpInSBitErr=cFcStatsGfpInSBitErr, cFcHistInvalidOrdSets=cFcHistInvalidOrdSets, cerentFcMIBObjects=cerentFcMIBObjects, PYSNMP_MODULE_ID=cerentFcMIB, cFcStatsInFramesBadCRC=cFcStatsInFramesBadCRC, cFcHistIntervalNum=cFcHistIntervalNum, cFcHistInFramesTooLongHC=cFcHistInFramesTooLongHC, cFcHistInFramesBadCRCHC=cFcHistInFramesBadCRCHC, cFcHistHCEntry=cFcHistHCEntry, cFcStatsInElements=cFcStatsInElements, cFcHistGfpInMBitErrHigh=cFcHistGfpInMBitErrHigh, cerentFcStatsGroup=cerentFcStatsGroup, cFcStatsOutDiscards=cFcStatsOutDiscards, cerentFcHistGroup=cerentFcHistGroup, cFcHistInElements=cFcHistInElements, cerentFcStatsHCGroup=cerentFcStatsHCGroup, cFcHistGfpInMBitErr=cFcHistGfpInMBitErr, cFcHistInElementsHC=cFcHistInElementsHC, cFcStatsLinkResetsHigh=cFcStatsLinkResetsHigh, cFcHistOutFramesHC=cFcHistOutFramesHC, cFcStatsInvalidOrdSetsHC=cFcStatsInvalidOrdSetsHC, cFcStatsGfpInTypeInvalid=cFcStatsGfpInTypeInvalid, cFcAlarmVariable=cFcAlarmVariable, cFcHistGfpInTypeInvalidHigh=cFcHistGfpInTypeInvalidHigh, cerentFcAlarmGroup=cerentFcAlarmGroup, cerentFcMIBConformance=cerentFcMIBConformance, cFcHistInFramesTooLong=cFcHistInFramesTooLong, cFcHistGfpInTypeInvalid=cFcHistGfpInTypeInvalid, cFcHistGfpInSBlkCRCErrHC=cFcHistGfpInSBlkCRCErrHC, cFcAlarmEntry=cFcAlarmEntry, cFcStatsOutDiscardsHC=cFcStatsOutDiscardsHC, cFcAlarmFallingThresholdHigh=cFcAlarmFallingThresholdHigh, cFcHistEncodingDispErrHigh=cFcHistEncodingDispErrHigh, cFcAlarmRisingThresholdHigh=cFcAlarmRisingThresholdHigh, cFcHistOutFrames=cFcHistOutFrames, cFcAlarmFallingThreshold=cFcAlarmFallingThreshold, cerentFcHistHCGroup=cerentFcHistHCGroup, cFcHistInElementsHigh=cFcHistInElementsHigh, cFcStatsOutFrames=cFcStatsOutFrames, cFcStatsGfpInTypeInvalidHC=cFcStatsGfpInTypeInvalidHC, cFcAlarmStatus=cFcAlarmStatus, cFcHistHCTable=cFcHistHCTable, cFcAlarmIndex=cFcAlarmIndex, cerentFcMIBCompliances=cerentFcMIBCompliances, cFcStatsOutElementsHC=cFcStatsOutElementsHC, cFcHistInDiscardsHC=cFcHistInDiscardsHC, cFcStatsInvalidOrdSets=cFcStatsInvalidOrdSets, cFcStatsInDiscardsHC=cFcStatsInDiscardsHC, cFcHistGfpInSBitErrHigh=cFcHistGfpInSBitErrHigh, cFcStatsTable=cFcStatsTable, cFcAlarmInterval=cFcAlarmInterval, cFcHistInDiscardsHigh=cFcHistInDiscardsHigh, cFcHistGfpInMBitErrHC=cFcHistGfpInMBitErrHC, cFcStatsEntry=cFcStatsEntry, cFcHistOutDiscardsHC=cFcHistOutDiscardsHC, cFcStatsGfpInSBlkCRCErr=cFcStatsGfpInSBlkCRCErr, cFcStatsGfpInSBlkCRCErrHC=cFcStatsGfpInSBlkCRCErrHC, cFcHistInvalidOrdSetsHC=cFcHistInvalidOrdSetsHC, cFcStatsInFramesTooLong=cFcStatsInFramesTooLong, cFcStatsEncodingDispErrHC=cFcStatsEncodingDispErrHC, cFcStatsOutFramesBadCRCHC=cFcStatsOutFramesBadCRCHC, cFcStatsInElementsHigh=cFcStatsInElementsHigh)
