#
# PySNMP MIB module LLDP-EXT-DOT3-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LLDP-EXT-DOT3-V2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:08:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifGeneralInformationGroup, = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup")
lldpV2RemLocalIfIndex, lldpV2PortConfigEntry, lldpV2LocPortIfIndex, lldpV2RemLocalDestMACAddress, lldpV2RemIndex, lldpV2Extensions, lldpV2RemTimeMark = mibBuilder.importSymbols("LLDP-V2-MIB", "lldpV2RemLocalIfIndex", "lldpV2PortConfigEntry", "lldpV2LocPortIfIndex", "lldpV2RemLocalDestMACAddress", "lldpV2RemIndex", "lldpV2Extensions", "lldpV2RemTimeMark")
LldpV2PowerPortClass, = mibBuilder.importSymbols("LLDP-V2-TC-MIB", "LldpV2PowerPortClass")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ObjectIdentity, ModuleIdentity, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, IpAddress, Counter64, iso, Integer32, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "IpAddress", "Counter64", "iso", "Integer32", "Bits", "Gauge32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
lldpV2Xdot3MIB = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623))
lldpV2Xdot3MIB.setRevisions(('2009-06-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lldpV2Xdot3MIB.setRevisionsDescriptions(('Published as part of IEEE Std 802.1AB-2009 revision. This revision incorporated changes to the MIB to support the use of LLDP with multiple destination MAC addresses, and to deprecate the Link Aggregation TLV (now moved to the 802.1 extension MIB).',))
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setLastUpdated('200906080000Z')
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setContactInfo('WG-URL: http://grouper.ieee.org/groups/802/1/index.html WG-EMail: STDS-802-1-L@LISTSERV.IEEE.ORG Contact: Tony Jeffree Postal: 11a Poplar Grove Sale Cheshire M33 3AX UK Tel: +44-161-973-4278 E-mail: tony@jeffree.co.uk')
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setDescription("The LLDP Management Information Base extension module for IEEE 802.3 organizationally defined discovery information. In order to assure the uniqueness of the LLDP-MIB, lldpV2Xdot3MIB is branched from lldpV2Extensions using OUI value as the node. An OUI/'company_id' is a 24 bit globally unique assigned number referenced by various standards. Unless otherwise indicated, the references in this MIB module are to IEEE 802.1AB-2009. Copyright (C) IEEE (2009). This version of this MIB module is published as Annex F.6.5 of IEEE Std 802.1AB-2009; see the standard itself for full legal notices.")
lldpV2Xdot3Objects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1))
lldpV2Xdot3Config = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1))
lldpV2Xdot3LocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2))
lldpV2Xdot3RemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3))
lldpV2Xdot3PortConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTable.setDescription('A table that controls selection of LLDP TLVs to be transmitted on individual ports.')
lldpV2Xdot3PortConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3PortConfigEntry"))
lldpV2Xdot3PortConfigEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigEntry.setDescription('LLDP configuration information that controls the transmission of IEEE 802.3 organizationally defined TLVs on LLDP transmission capable ports. This configuration object augments the lldpV2PortConfigEntry of the LLDP-MIB, therefore it is only present along with the port configuration defined by the associated lldpV2PortConfigEntry entry. Each active lldpV2Xdot3PortConfigEntry is restored from non-volatile storage (along with the corresponding lldpV2PortConfigEntry) after a re-initialization of the management system.')
lldpV2Xdot3PortConfigTLVsTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("macPhyConfigStatus", 0), ("powerViaMDI", 1), ("unused", 2), ("maxFrameSize", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTLVsTxEnable.setReference('9.1.2.1')
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTLVsTxEnable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTLVsTxEnable.setDescription("The lldpV2Xdot3PortConfigTLVsTxEnable, defined as a bitmap, includes the IEEE 802.3 organizationally defined set of LLDP TLVs whose transmission is allowed on the local LLDP agent by the network management. Each bit in the bitmap corresponds to an IEEE 802.3 subtype associated with a specific IEEE 802.3 optional TLV. The bit 0 is not used since there is no corresponding subtype. The bit 'macPhyConfigStatus(0)' indicates that LLDP agent should transmit 'MAC/PHY configuration/status TLV'. The bit 'powerViaMDI(1)' indicates that LLDP agent should transmit 'Power via MDI TLV'. The bit 'unused(2)' is no longer used; this was used for the 'Link Aggregation TLV' in the previous version. The bit 'maxFrameSize(3)' indicates that LLDP agent should transmit 'Maximum-frame-size TLV'. The default value for lldpV2Xdot3PortConfigTLVsTxEnable object is an empty set, which means no enumerated values are set. The value of this object is restored from non-volatile storage after a re-initialization of the management system.")
lldpV2Xdot3LocPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3LocPortTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortTable.setDescription('This table contains one row per port of Ethernet port information (as a part of the LLDP 802.3 organizational extension) on the local system known to this agent.')
lldpV2Xdot3LocPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocPortEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortEntry.setDescription('Information about a particular port component.')
lldpV2Xdot3LocPortAutoNegSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegSupported.setReference('F.2.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegSupported.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegSupported.setDescription('The truth value used to indicate whether the given port (associated with the local system) supports Auto-negotiation.')
lldpV2Xdot3LocPortAutoNegEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegEnabled.setReference('F.2.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegEnabled.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegEnabled.setDescription('The truth value used to indicate whether port Auto-negotiation is enabled on the given port associated with the local system.')
lldpV2Xdot3LocPortAutoNegAdvertisedCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegAdvertisedCap.setReference('F.2.2')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegAdvertisedCap.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegAdvertisedCap.setDescription('This object contains the value (bitmap) of the ifMauAutoNegCapAdvertisedBits object (defined in IETF RFC 3636) which is associated with the given port on the local system.')
lldpV2Xdot3LocPortOperMauType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortOperMauType.setReference('F.2.3')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortOperMauType.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPortOperMauType.setDescription('An integer value that indicates the operational MAU type of the given port on the local system. This object contains the integer value derived from the list position of the corresponding dot3MauType as listed in IETF RFC 4836 (or subsequent revisions) and is equal to the last number in the respective dot3MauType OID. For example, if the ifMauType object is dot3MauType1000BaseTHD which corresponds to {dot3MauType 29}, the numerical value of this field is 29. For MAU types not listed in RFC 4836 (or subsequent revisions), the value of this field shall be set to zero.')
lldpV2Xdot3LocPowerTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2), )
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerTable.setDescription('This table contains one row per port of power ethernet information (as a part of the LLDP 802.3 organizational extension) on the local system known to this agent.')
lldpV2Xdot3LocPowerEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerEntry.setDescription('Information about a particular port component.')
lldpV2Xdot3LocPowerPortClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 1), LldpV2PowerPortClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPortClass.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPortClass.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPortClass.setDescription('The value that identifies the port Class of the given port associated with the local system.')
lldpV2Xdot3LocPowerMDISupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDISupported.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDISupported.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDISupported.setDescription('The truth value used to indicate whether the MDI power is supported on the given port associated with the local system.')
lldpV2Xdot3LocPowerMDIEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDIEnabled.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDIEnabled.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDIEnabled.setDescription('The truth value used to identify whether MDI power is enabled on the given port associated with the local system.')
lldpV2Xdot3LocPowerPairControlable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairControlable.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairControlable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairControlable.setDescription('The truth value is derived from the value of pethPsePortPowerPairsControlAbility object (defined in IETF RFC 3621) and is used to indicate whether the pair selection can be controlled on the given port associated with the local system.')
lldpV2Xdot3LocPowerPairs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairs.setReference('F.3.2')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairs.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairs.setDescription('This object contains the value of the pethPsePortPowerPairs object (defined in IETF RFC 3621) which is associated with the given port on the local system.')
lldpV2Xdot3LocPowerClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerClass.setReference('F.3.3')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerClass.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerClass.setDescription('This object contains the value of the pethPsePortPowerClassifications object (defined in IETF RFC 3621) which is associated with the given port on the local system.')
lldpV2Xdot3LocMaxFrameSizeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3), )
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeTable.setDescription('This table contains one row per port of maximum frame size information (as a part of the LLDP 802.3 organizational extension) on the local system known to this agent.')
lldpV2Xdot3LocMaxFrameSizeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeEntry.setDescription('Maximum Frame Size information about a particular port component.')
lldpV2Xdot3LocMaxFrameSize = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSize.setReference('F.4.1')
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSize.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSize.setDescription('An integer value indicating the maximum supported frame size in octets on the given port of the local system.')
lldpV2Xdot3RemPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3RemPortTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortTable.setDescription('This table contains Ethernet port information (as a part of the LLDP 802.3 organizational extension) of the remote system.')
lldpV2Xdot3RemPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemPortEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortEntry.setDescription('Information about a particular physical network connection.')
lldpV2Xdot3RemPortAutoNegSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegSupported.setReference('F.2.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegSupported.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegSupported.setDescription('The truth value used to indicate whether the given port (associated with remote system) supports Auto-negotiation.')
lldpV2Xdot3RemPortAutoNegEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegEnabled.setReference('F.2.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegEnabled.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegEnabled.setDescription('The truth value used to indicate whether port Auto-negotiation is enabled on the given port associated with the remote system.')
lldpV2Xdot3RemPortAutoNegAdvertisedCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegAdvertisedCap.setReference('F.2.2')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegAdvertisedCap.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegAdvertisedCap.setDescription('This object contains the value (bitmap) of the ifMauAutoNegCapAdvertisedBits object (defined in IETF RFC 3636) which is associated with the given port on the remote system.')
lldpV2Xdot3RemPortOperMauType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortOperMauType.setReference('F.2.3')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortOperMauType.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPortOperMauType.setDescription('An integer value that indicates the operational MAU type of the sending device. This object contains the integer value derived from the list position of the corresponding dot3MauType as listed in in IETF RFC 4836 (or subsequent revisions) and is equal to the last number in the respective dot3MauType OID. For example, if the ifMauType object is dot3MauType1000BaseTHD which corresponds to {dot3MauType 29}, the numerical value of this field is 29. For MAU types not listed in RFC 4836 (or subsequent revisions), the value of this field shall be set to zero.')
lldpV2Xdot3RemPowerTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2), )
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerTable.setDescription('This table contains Ethernet power information (as a part of the LLDP 802.3 organizational extension) of the remote system.')
lldpV2Xdot3RemPowerEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerEntry.setDescription('Information about a particular physical network connection.')
lldpV2Xdot3RemPowerPortClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 1), LldpV2PowerPortClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPortClass.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPortClass.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPortClass.setDescription('The value that identifies the port Class of the given port associated with the remote system.')
lldpV2Xdot3RemPowerMDISupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDISupported.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDISupported.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDISupported.setDescription('The truth value used to indicate whether the MDI power is supported on the given port associated with the remote system.')
lldpV2Xdot3RemPowerMDIEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDIEnabled.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDIEnabled.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDIEnabled.setDescription('The truth value used to identify whether MDI power is enabled on the given port associated with the remote system.')
lldpV2Xdot3RemPowerPairControlable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairControlable.setReference('F.3.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairControlable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairControlable.setDescription('The truth value is derived from the value of pethPsePortPowerPairsControlAbility object (defined in IETF RFC 3621) and is used to indicate whether the pair selection can be controlled on the given port associated with the remote system.')
lldpV2Xdot3RemPowerPairs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairs.setReference('F.3.2')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairs.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairs.setDescription('This object contains the value of the pethPsePortPowerPairs object (defined in IETF RFC 3621) which is associated with the given port on the remote system.')
lldpV2Xdot3RemPowerClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerClass.setReference('F.3.3')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerClass.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerClass.setDescription('This object contains the value of the pethPsePortPowerClassifications object (defined in IETF RFC 3621) which is associated with the given port on the remote system.')
lldpV2Xdot3RemMaxFrameSizeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3), )
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeTable.setDescription('This table contains one row per port/destination address pair of maximum frame size information (as a part of the LLDP IEEE 802.3 organizational extension) of the remote system.')
lldpV2Xdot3RemMaxFrameSizeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeEntry.setDescription('Maximum Frame Size information about a particular port component.')
lldpV2Xdot3RemMaxFrameSize = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSize.setReference('F.4.1')
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSize.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSize.setDescription('An integer value indicating the maximum supported frame size in octets on the port component associated with the remote system.')
lldpV2Xdot3Conformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2))
lldpV2Xdot3Compliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1))
lldpV2Xdot3Groups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2))
lldpV2Xdot3TxRxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 1)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3ConfigGroup"), ("LLDP-EXT-DOT3-V2-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3TxRxCompliance = lldpV2Xdot3TxRxCompliance.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3TxRxCompliance.setDescription('A compliance statement for SNMP entities that implement the LLDP 802.3 organizational extension MIB. This group is mandatory for all agents that implement the LLDP 802.3 organizational extension in TX and/or RX mode. This version defines compliance requirements for V2 of the LLDP MIB.')
lldpV2Xdot3TxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 2)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3TxCompliance = lldpV2Xdot3TxCompliance.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3TxCompliance.setDescription('The compliance statement for SNMP entities which implement the LLDP 802.3 organizational extension MIB. This group is mandatory for agents which implement the LLDP 802.3 organizational extension in the TX mode. This version defines compliance requirements for V2 of the LLDP MIB.')
lldpV2Xdot3RxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 3)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3RxCompliance = lldpV2Xdot3RxCompliance.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RxCompliance.setDescription('The compliance statement for SNMP entities which implement the LLDP 802.3 organizational extension MIB. This group is mandatory for agents which implement the LLDP 802.3 organizational extension in the RX mode. This version defines compliance requirements for V2 of the LLDP MIB.')
lldpV2Xdot3ConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 1)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3PortConfigTLVsTxEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3ConfigGroup = lldpV2Xdot3ConfigGroup.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3ConfigGroup.setDescription('The collection of objects which are used to configure the LLDP 802.3 organizational extension implementation behavior. ')
lldpV2Xdot3LocSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 2)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegSupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegAdvertisedCap"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortOperMauType"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPortClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerMDISupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerMDIEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPairControlable"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPairs"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocMaxFrameSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3LocSysGroup = lldpV2Xdot3LocSysGroup.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3LocSysGroup.setDescription('The collection of objects which are used to represent LLDP 802.3 organizational extension Local Device Information. ')
lldpV2Xdot3RemSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 3)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegSupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegAdvertisedCap"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortOperMauType"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPortClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerMDISupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerMDIEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPairControlable"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPairs"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemMaxFrameSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3RemSysGroup = lldpV2Xdot3RemSysGroup.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot3RemSysGroup.setDescription('The collection of objects which are used to represent LLDP 802.3 organizational extension Local Device Information. ')
mibBuilder.exportSymbols("LLDP-EXT-DOT3-V2-MIB", lldpV2Xdot3RemPowerTable=lldpV2Xdot3RemPowerTable, lldpV2Xdot3LocPowerPairControlable=lldpV2Xdot3LocPowerPairControlable, lldpV2Xdot3Objects=lldpV2Xdot3Objects, lldpV2Xdot3PortConfigTable=lldpV2Xdot3PortConfigTable, lldpV2Xdot3RemPortAutoNegEnabled=lldpV2Xdot3RemPortAutoNegEnabled, lldpV2Xdot3RemPortOperMauType=lldpV2Xdot3RemPortOperMauType, lldpV2Xdot3LocPowerTable=lldpV2Xdot3LocPowerTable, lldpV2Xdot3RemPortAutoNegSupported=lldpV2Xdot3RemPortAutoNegSupported, lldpV2Xdot3RemPowerPairs=lldpV2Xdot3RemPowerPairs, lldpV2Xdot3Config=lldpV2Xdot3Config, lldpV2Xdot3RemoteData=lldpV2Xdot3RemoteData, lldpV2Xdot3MIB=lldpV2Xdot3MIB, lldpV2Xdot3RxCompliance=lldpV2Xdot3RxCompliance, lldpV2Xdot3PortConfigEntry=lldpV2Xdot3PortConfigEntry, lldpV2Xdot3PortConfigTLVsTxEnable=lldpV2Xdot3PortConfigTLVsTxEnable, lldpV2Xdot3RemPortEntry=lldpV2Xdot3RemPortEntry, lldpV2Xdot3LocPowerPairs=lldpV2Xdot3LocPowerPairs, lldpV2Xdot3LocPowerMDIEnabled=lldpV2Xdot3LocPowerMDIEnabled, lldpV2Xdot3RemSysGroup=lldpV2Xdot3RemSysGroup, lldpV2Xdot3LocPortAutoNegSupported=lldpV2Xdot3LocPortAutoNegSupported, lldpV2Xdot3RemPowerMDISupported=lldpV2Xdot3RemPowerMDISupported, lldpV2Xdot3RemPowerClass=lldpV2Xdot3RemPowerClass, lldpV2Xdot3LocMaxFrameSizeTable=lldpV2Xdot3LocMaxFrameSizeTable, lldpV2Xdot3LocPortTable=lldpV2Xdot3LocPortTable, lldpV2Xdot3LocPowerEntry=lldpV2Xdot3LocPowerEntry, lldpV2Xdot3RemPowerPortClass=lldpV2Xdot3RemPowerPortClass, lldpV2Xdot3LocSysGroup=lldpV2Xdot3LocSysGroup, lldpV2Xdot3RemPowerPairControlable=lldpV2Xdot3RemPowerPairControlable, lldpV2Xdot3LocPortAutoNegEnabled=lldpV2Xdot3LocPortAutoNegEnabled, lldpV2Xdot3Conformance=lldpV2Xdot3Conformance, lldpV2Xdot3RemPowerMDIEnabled=lldpV2Xdot3RemPowerMDIEnabled, lldpV2Xdot3ConfigGroup=lldpV2Xdot3ConfigGroup, PYSNMP_MODULE_ID=lldpV2Xdot3MIB, lldpV2Xdot3RemMaxFrameSizeEntry=lldpV2Xdot3RemMaxFrameSizeEntry, lldpV2Xdot3LocPortOperMauType=lldpV2Xdot3LocPortOperMauType, lldpV2Xdot3LocalData=lldpV2Xdot3LocalData, lldpV2Xdot3LocMaxFrameSizeEntry=lldpV2Xdot3LocMaxFrameSizeEntry, lldpV2Xdot3TxCompliance=lldpV2Xdot3TxCompliance, lldpV2Xdot3RemPortTable=lldpV2Xdot3RemPortTable, lldpV2Xdot3LocPowerMDISupported=lldpV2Xdot3LocPowerMDISupported, lldpV2Xdot3RemMaxFrameSizeTable=lldpV2Xdot3RemMaxFrameSizeTable, lldpV2Xdot3RemPortAutoNegAdvertisedCap=lldpV2Xdot3RemPortAutoNegAdvertisedCap, lldpV2Xdot3RemMaxFrameSize=lldpV2Xdot3RemMaxFrameSize, lldpV2Xdot3Compliances=lldpV2Xdot3Compliances, lldpV2Xdot3LocPortEntry=lldpV2Xdot3LocPortEntry, lldpV2Xdot3TxRxCompliance=lldpV2Xdot3TxRxCompliance, lldpV2Xdot3LocMaxFrameSize=lldpV2Xdot3LocMaxFrameSize, lldpV2Xdot3LocPortAutoNegAdvertisedCap=lldpV2Xdot3LocPortAutoNegAdvertisedCap, lldpV2Xdot3Groups=lldpV2Xdot3Groups, lldpV2Xdot3LocPowerClass=lldpV2Xdot3LocPowerClass, lldpV2Xdot3RemPowerEntry=lldpV2Xdot3RemPowerEntry, lldpV2Xdot3LocPowerPortClass=lldpV2Xdot3LocPowerPortClass)
