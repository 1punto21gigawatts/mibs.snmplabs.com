#
# PySNMP MIB module AVICI-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-SERVER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:32:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
aviciSysTrapDescr, = mibBuilder.importSymbols("AVICI-SYSTEM-MIB", "aviciSysTrapDescr")
AviciSlotType, AviciHighAvailabilityType, AviciBayType = mibBuilder.importSymbols("AVICI-TC", "AviciSlotType", "AviciHighAvailabilityType", "AviciBayType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, IpAddress, Gauge32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Unsigned32, Integer32, TimeTicks, MibIdentifier, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "Gauge32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Unsigned32", "Integer32", "TimeTicks", "MibIdentifier", "Counter64", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aviciServerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 9))
aviciServerMIB.setRevisions(('0012-07-15 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aviciServerMIB.setRevisionsDescriptions(('Created MIB module.',))
if mibBuilder.loadTexts: aviciServerMIB.setLastUpdated('001207151500Z')
if mibBuilder.loadTexts: aviciServerMIB.setOrganization('Avici Systems, Inc.')
if mibBuilder.loadTexts: aviciServerMIB.setContactInfo(' Avici Systems, Inc. 101 Billerica Avenue North Billerica, MA 01862-1256 (978) 964-2000 (978) 964-2100 (fax) snmp@avici.com')
if mibBuilder.loadTexts: aviciServerMIB.setDescription('This MIB module specifies those managed objects that monitor and control a route server.')
aviciServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1))
aviciServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 2))
aviciServerNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3))
aviciServerNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0))
aviciServerHeartbeatType = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 9, 2, 1), AviciHighAvailabilityType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: aviciServerHeartbeatType.setStatus('current')
if mibBuilder.loadTexts: aviciServerHeartbeatType.setDescription('The type of server heartbeat.')
aviciServerTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1), )
if mibBuilder.loadTexts: aviciServerTable.setStatus('current')
if mibBuilder.loadTexts: aviciServerTable.setDescription('A list of servers, including primary and backup. ')
aviciServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1), ).setIndexNames((0, "AVICI-SERVER-MIB", "aviciServerIndex"))
if mibBuilder.loadTexts: aviciServerEntry.setStatus('current')
if mibBuilder.loadTexts: aviciServerEntry.setDescription('An entry containing information about a control server.')
aviciServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerIndex.setStatus('current')
if mibBuilder.loadTexts: aviciServerIndex.setDescription('The index number of the server.')
aviciServerBay = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 2), AviciBayType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerBay.setStatus('current')
if mibBuilder.loadTexts: aviciServerBay.setDescription('The bay containing this server.')
aviciServerSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 3), AviciSlotType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerSlot.setStatus('current')
if mibBuilder.loadTexts: aviciServerSlot.setDescription('The slot containing this server.')
aviciServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 4), AviciHighAvailabilityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerState.setStatus('current')
if mibBuilder.loadTexts: aviciServerState.setDescription('The current high availability state of the server.')
aviciServerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("upper", 1), ("lower", 2), ("full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerDomain.setStatus('current')
if mibBuilder.loadTexts: aviciServerDomain.setDescription('The domain of this server. The server can control the upper or lower half of a split bay or it can control one or more full bays.')
aviciServerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3), ("misconfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciServerOperStatus.setStatus('current')
if mibBuilder.loadTexts: aviciServerOperStatus.setDescription('The current operational state of the server.')
aviciServerUp = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0, 1)).setObjects(("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SERVER-MIB", "aviciServerState"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerUp.setStatus('current')
if mibBuilder.loadTexts: aviciServerUp.setDescription('This notification is sent when a route server changes state to up.')
aviciServerDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0, 2)).setObjects(("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SERVER-MIB", "aviciServerState"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerDown.setStatus('current')
if mibBuilder.loadTexts: aviciServerDown.setDescription('This notification is sent when a route server detects that a peer server has transitioned down. If only one route server is present, this notification will not be sent.')
aviciServerHeartbeatUp = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0, 3)).setObjects(("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SERVER-MIB", "aviciServerHeartbeatType"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerHeartbeatUp.setStatus('current')
if mibBuilder.loadTexts: aviciServerHeartbeatUp.setDescription('This notification is sent when the server heartbeat transitions to up.')
aviciServerHeartbeatDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0, 4)).setObjects(("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SERVER-MIB", "aviciServerHeartbeatType"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerHeartbeatDown.setStatus('current')
if mibBuilder.loadTexts: aviciServerHeartbeatDown.setDescription('This notification is sent when the server heartbeat transitions to down.')
aviciServerMisconfigured = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 9, 3, 0, 5)).setObjects(("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciServerMisconfigured.setStatus('current')
if mibBuilder.loadTexts: aviciServerMisconfigured.setDescription('This notification indicates that a route server is misconfigured and must have its configuration manually corrected.')
aviciServerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4))
aviciServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4, 1))
aviciServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4, 2))
aviciServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4, 1, 1)).setObjects(("AVICI-SERVER-MIB", "aviciServerGeneralGroup"), ("AVICI-SERVER-MIB", "aviciServerNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciServerMIBCompliance = aviciServerMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: aviciServerMIBCompliance.setDescription('The compliance statement for the aviciServer.')
aviciServerGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4, 2, 1)).setObjects(("AVICI-SERVER-MIB", "aviciServerHeartbeatType"), ("AVICI-SERVER-MIB", "aviciServerIndex"), ("AVICI-SERVER-MIB", "aviciServerBay"), ("AVICI-SERVER-MIB", "aviciServerSlot"), ("AVICI-SERVER-MIB", "aviciServerState"), ("AVICI-SERVER-MIB", "aviciServerDomain"), ("AVICI-SERVER-MIB", "aviciServerOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciServerGeneralGroup = aviciServerGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: aviciServerGeneralGroup.setDescription('Objects for the server.')
aviciServerNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2474, 1, 9, 4, 2, 2)).setObjects(("AVICI-SERVER-MIB", "aviciServerUp"), ("AVICI-SERVER-MIB", "aviciServerDown"), ("AVICI-SERVER-MIB", "aviciServerHeartbeatUp"), ("AVICI-SERVER-MIB", "aviciServerHeartbeatDown"), ("AVICI-SERVER-MIB", "aviciServerMisconfigured"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciServerNotificationGroup = aviciServerNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: aviciServerNotificationGroup.setDescription('Notifications for servers.')
mibBuilder.exportSymbols("AVICI-SERVER-MIB", aviciServerMIB=aviciServerMIB, aviciServerObjects=aviciServerObjects, aviciServerTable=aviciServerTable, aviciServerHeartbeatUp=aviciServerHeartbeatUp, aviciServerIndex=aviciServerIndex, aviciServerNotificationGroup=aviciServerNotificationGroup, aviciServerGeneralGroup=aviciServerGeneralGroup, aviciServerNotifications=aviciServerNotifications, aviciServerDomain=aviciServerDomain, aviciServerUp=aviciServerUp, aviciServerBay=aviciServerBay, aviciServerEntry=aviciServerEntry, aviciServerMIBConformance=aviciServerMIBConformance, aviciServerMIBCompliance=aviciServerMIBCompliance, aviciServerState=aviciServerState, aviciServerSlot=aviciServerSlot, aviciServerMisconfigured=aviciServerMisconfigured, aviciServerMIBCompliances=aviciServerMIBCompliances, aviciServerOperStatus=aviciServerOperStatus, aviciServerHeartbeatDown=aviciServerHeartbeatDown, PYSNMP_MODULE_ID=aviciServerMIB, aviciServerMIBGroups=aviciServerMIBGroups, aviciServerDown=aviciServerDown, aviciServerNotificationPrefix=aviciServerNotificationPrefix, aviciServerGroup=aviciServerGroup, aviciServerHeartbeatType=aviciServerHeartbeatType)
