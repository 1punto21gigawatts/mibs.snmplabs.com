#
# PySNMP MIB module ALCATEL-IND1-APP-FINGERPRINT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-APP-FINGERPRINT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1AppFingerPrintMIB, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1AppFingerPrintMIB")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, Integer32, MibIdentifier, Counter64, NotificationType, TimeTicks, Gauge32, ModuleIdentity, ObjectIdentity, Bits, Unsigned32, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "MibIdentifier", "Counter64", "NotificationType", "TimeTicks", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Bits", "Unsigned32", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
MacAddress, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TextualConvention")
alcatelIND1AppFPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1))
alcatelIND1AppFPMIB.setRevisions(('2013-01-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alcatelIND1AppFPMIB.setRevisionsDescriptions(('The latest version of this MIB Module.',))
if mibBuilder.loadTexts: alcatelIND1AppFPMIB.setLastUpdated('201209110000Z')
if mibBuilder.loadTexts: alcatelIND1AppFPMIB.setOrganization('Alcatel-Lucent')
if mibBuilder.loadTexts: alcatelIND1AppFPMIB.setContactInfo('Please consult with Customer Service to ensure the most appropriate version of this document is used with the products in question: Alcatel-Lucent, Enterprise Solutions Division (Formerly Alcatel Internetworking, Incorporated) 26801 West Agoura Road Agoura Hills, CA 91301-5122 United States Of America Telephone: North America +1 800 995 2696 Latin America +1 877 919 9526 Europe +31 23 556 0100 Asia +65 394 7933 All Other +1 818 878 4507 Electronic Mail: support@ind.alcatel.com World Wide Web: http://alcatel-lucent.com/wps/portal/enterprise File Transfer Protocol: ftp://ftp.ind.alcatel.com/pub/products/mibs')
if mibBuilder.loadTexts: alcatelIND1AppFPMIB.setDescription('This module describes an authoritative enterprise-specific Simple Network Management Protocol (SNMP) Management Information Base (MIB): Fingerprint Application for OS10K Product Line. The right to make changes in specification and other information contained in this document without prior notice is reserved. No liability shall be assumed for any incidental, indirect, special, or consequential damages whatsoever arising from or related to this document or the information contained herein. Vendors, end-users, and other interested parties are granted non-exclusive license to use this specification in connection with management of the products for which it is intended to be used. Copyright (C) 2013 Alcatel-Lucent ALL RIGHTS RESERVED WORLDWIDE')
alcatelIND1AppFPMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1))
if mibBuilder.loadTexts: alcatelIND1AppFPMIBObjects.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AppFPMIBObjects.setDescription(' Alcatel-Lucent Application Fingerprint/ Application signature Subsystem Managed Objects. MIB to characterrize application using thier defined finger print and /or signature.')
alaAppFPMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 0))
alaAppFPGlobalMIBConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 1))
alaAppFPMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2))
alaAppFPGlobalAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAppFPGlobalAdminState.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGlobalAdminState.setDescription(' Alcatel-Lucent App Fingerprint Config mode.')
alaAppFPGlobalSignatureFile = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAppFPGlobalSignatureFile.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGlobalSignatureFile.setDescription(' Alcatel-Lucent App Fingerprint Signature Filename.')
alaAppFPGlobalReloadSignatureFile = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reload", 1))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAppFPGlobalReloadSignatureFile.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGlobalReloadSignatureFile.setDescription(' Alcatel-Lucent App Fingerprint Signature filename to reload.')
alaAppFPGlobalTrapConfig = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAppFPGlobalTrapConfig.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGlobalTrapConfig.setDescription(' Alcatel-Lucent App Fingerprint Trap Config mode.')
alaAppFPPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaAppFPPortTable.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPortTable.setDescription('This table contains one row for each port.')
alaAppFPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPPort"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGroupNameOrPolicyList"))
if mibBuilder.loadTexts: alaAppFPPortEntry.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPortEntry.setDescription('Information about the App Fingerprint Port Mode. Port modes are as defined below ')
alaAppFPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaAppFPPort.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPort.setDescription('The ifIndex component of this instance.')
alaAppFPGroupNameOrPolicyList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: alaAppFPGroupNameOrPolicyList.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGroupNameOrPolicyList.setDescription("App Group name or QoS Policy List name associated with the alaAppFPPort. If the alaAppFPPortOperationMode is unp(3), this should be set to 'UNP'. The 0 length string is allowed only in SNMP SET destroy operation. It is used when all the assigned groups for that port are wished to deleted. This feature is provided for user firendly support. SNMP Get with 0 length string will be rejected")
alaAppFPPortOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("monitoring", 1), ("qos", 2), ("unp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAppFPPortOperationMode.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPortOperationMode.setDescription("It indicates the operation mode of the app-fingerprint feature running on the port. If the operation mode is set to unp(3), the alaAppFPGroupNameOrPolicyList value should be 'UNP'.")
alaAppFPPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPPortStatus.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPortStatus.setDescription('It indicates that the Group Name or Policy List Name associated with the port is valid or invalid. If it is invalid, then the specified Group Name or Policy List Name is inactive at the moment.')
alaAppFPPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAppFPPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: alaAppFPPortRowStatus.setDescription(' ')
alaAppFPAppNameTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 2), )
if mibBuilder.loadTexts: alaAppFPAppNameTable.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppNameTable.setDescription('This table contains one row for each App signature.')
alaAppFPAppNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPAppName"))
if mibBuilder.loadTexts: alaAppFPAppNameEntry.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppNameEntry.setDescription('Information about the App Name and its Signature. ')
alaAppFPAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPAppName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppName.setDescription(' ')
alaAppFPAppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPAppDescription.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppDescription.setDescription(' ')
alaAppFPAppSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPAppSignature.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppSignature.setDescription(' ')
alaAppFPDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3), )
if mibBuilder.loadTexts: alaAppFPDatabaseTable.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDatabaseTable.setDescription('This table contains one row for each multi-tuple classifier.')
alaAppFPDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbPort"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbAppGroupName"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbAppName"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcMacAddr"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbVlanId"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcIpAddrType"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcIpAddr"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcPort"))
if mibBuilder.loadTexts: alaAppFPDatabaseEntry.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDatabaseEntry.setDescription('Information about the App Info database as gathered from monitoring each configured port. ')
alaAppFPDbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaAppFPDbPort.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbPort.setDescription(' ')
alaAppFPDbAppGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPDbAppGroupName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbAppGroupName.setDescription(' ')
alaAppFPDbAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPDbAppName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbAppName.setDescription(' ')
alaAppFPDbSrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 4), MacAddress())
if mibBuilder.loadTexts: alaAppFPDbSrcMacAddr.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbSrcMacAddr.setDescription(' ')
alaAppFPDbVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 5), Unsigned32())
if mibBuilder.loadTexts: alaAppFPDbVlanId.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbVlanId.setDescription(' ')
alaAppFPDbSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 6), InetAddressType())
if mibBuilder.loadTexts: alaAppFPDbSrcIpAddrType.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbSrcIpAddrType.setDescription(' ')
alaAppFPDbSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 7), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: alaAppFPDbSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbSrcIpAddr.setDescription(' ')
alaAppFPDbSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 8), InetPortNumber())
if mibBuilder.loadTexts: alaAppFPDbSrcPort.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbSrcPort.setDescription(' ')
alaAppFPDbDstIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPDbDstIpAddrType.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbDstIpAddrType.setDescription(' ')
alaAppFPDbDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPDbDstIpAddr.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbDstIpAddr.setDescription(' ')
alaAppFPDbDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 11), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPDbDstPort.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbDstPort.setDescription(' ')
alaAppFPDbDstMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 3, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPDbDstMacAddr.setStatus('current')
if mibBuilder.loadTexts: alaAppFPDbDstMacAddr.setDescription(' ')
alaAppFPAppGrpNameTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 4), )
if mibBuilder.loadTexts: alaAppFPAppGrpNameTable.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppGrpNameTable.setDescription('This table contains one row for group name and description. ')
appFPAppGrpNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPAppGroupName"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGrpAppName"))
if mibBuilder.loadTexts: appFPAppGrpNameEntry.setStatus('current')
if mibBuilder.loadTexts: appFPAppGrpNameEntry.setDescription('Information about the App Name. ')
alaAppFPAppGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPAppGroupName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPAppGroupName.setDescription(' ')
alaAppFPGrpAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPGrpAppName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPGrpAppName.setDescription(' ')
alaAppFPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5), )
if mibBuilder.loadTexts: alaAppFPStatsTable.setStatus('current')
if mibBuilder.loadTexts: alaAppFPStatsTable.setDescription('This table contains total captured packets for all multi-tuple classifiers.')
alaAppFPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPStatsPort"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPStatsGroupName"), (0, "ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPStatsAppName"))
if mibBuilder.loadTexts: alaAppFPStatsEntry.setStatus('current')
if mibBuilder.loadTexts: alaAppFPStatsEntry.setDescription('Information about the App Info database for all packets captured. ')
alaAppFPStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaAppFPStatsPort.setStatus('current')
if mibBuilder.loadTexts: alaAppFPStatsPort.setDescription(' ')
alaAppFPStatsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPStatsGroupName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPStatsGroupName.setDescription(' ')
alaAppFPStatsAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24)))
if mibBuilder.loadTexts: alaAppFPStatsAppName.setStatus('current')
if mibBuilder.loadTexts: alaAppFPStatsAppName.setDescription(' ')
alaAppFPTotalMatchedLast1Hour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPTotalMatchedLast1Hour.setStatus('current')
if mibBuilder.loadTexts: alaAppFPTotalMatchedLast1Hour.setDescription(' ')
alaAppFPTotalMatchedLast1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAppFPTotalMatchedLast1Day.setStatus('current')
if mibBuilder.loadTexts: alaAppFPTotalMatchedLast1Day.setDescription(' ')
appFPSignatureMatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 1, 0, 1)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPPort"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbAppGroupName"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbAppName"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcMacAddr"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbVlanId"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcIpAddrType"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcIpAddr"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbSrcPort"))
if mibBuilder.loadTexts: appFPSignatureMatchTrap.setStatus('current')
if mibBuilder.loadTexts: appFPSignatureMatchTrap.setDescription('A Software Trouble report is sent by whatever application encountering a problem during its execution and would want to make the user aware of problem for maintenance purpose. ')
alcatelIND1AppFPMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2))
if mibBuilder.loadTexts: alcatelIND1AppFPMIBConformance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AppFPMIBConformance.setDescription(' Alcatel-Lucent Fingerprint Subsystem Conformance Information.')
alcatelIND1AppFPMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1AppFPMIBGroups.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AppFPMIBGroups.setDescription('Branch For ALU Fingerprint MIB Subsystem Units Of Conformance.')
alcatelIND1AppFPMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1AppFPMIBCompliances.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AppFPMIBCompliances.setDescription('Branch For ALU Fingerprint MIB Subsystem Compliance Statements.')
alaAppFPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 2, 1)).setObjects()

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPMIBCompliance = alaAppFPMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alaAppFPMIBCompliance.setDescription('Compliance statement for App Fingerprint.')
alaAppFPModuleConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGlobalAdminState"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGlobalReloadSignatureFile"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGlobalSignatureFile"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGlobalTrapConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPModuleConfigGroup = alaAppFPModuleConfigGroup.setStatus('current')
if mibBuilder.loadTexts: alaAppFPModuleConfigGroup.setDescription('App Fingerprint Control Modules Group.')
alaAppFPModulePortModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPAppDescription"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPAppSignature"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPPortOperationMode"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPPortStatus"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPModulePortModeGroup = alaAppFPModulePortModeGroup.setStatus('current')
if mibBuilder.loadTexts: alaAppFPModulePortModeGroup.setDescription('App Fingerprint Control Modules Group.')
alaAppFPModulePortDBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbDstIpAddrType"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbDstIpAddr"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbDstPort"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPDbDstMacAddr"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPGrpAppName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPModulePortDBGroup = alaAppFPModulePortDBGroup.setStatus('current')
if mibBuilder.loadTexts: alaAppFPModulePortDBGroup.setDescription('App Fingerprint Control Modules Group.')
alaAppFPModulePortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPTotalMatchedLast1Hour"), ("ALCATEL-IND1-APP-FINGERPRINT-MIB", "alaAppFPTotalMatchedLast1Day"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPModulePortStatsGroup = alaAppFPModulePortStatsGroup.setStatus('current')
if mibBuilder.loadTexts: alaAppFPModulePortStatsGroup.setDescription('App Fingerprint Control Modules Group.')
alaAppFPNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 73, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-APP-FINGERPRINT-MIB", "appFPSignatureMatchTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAppFPNotificationsGroup = alaAppFPNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: alaAppFPNotificationsGroup.setDescription('Collection of Notifications for management of App Fingerprint.')
mibBuilder.exportSymbols("ALCATEL-IND1-APP-FINGERPRINT-MIB", alaAppFPDbDstIpAddrType=alaAppFPDbDstIpAddrType, alaAppFPAppNameEntry=alaAppFPAppNameEntry, alaAppFPTotalMatchedLast1Day=alaAppFPTotalMatchedLast1Day, alaAppFPMIBObjects=alaAppFPMIBObjects, alaAppFPAppGroupName=alaAppFPAppGroupName, alaAppFPDbVlanId=alaAppFPDbVlanId, alaAppFPPort=alaAppFPPort, alaAppFPAppSignature=alaAppFPAppSignature, alaAppFPDatabaseEntry=alaAppFPDatabaseEntry, alaAppFPAppDescription=alaAppFPAppDescription, alaAppFPDbSrcPort=alaAppFPDbSrcPort, alaAppFPDatabaseTable=alaAppFPDatabaseTable, alaAppFPMIBNotifications=alaAppFPMIBNotifications, alaAppFPStatsTable=alaAppFPStatsTable, alaAppFPDbSrcIpAddrType=alaAppFPDbSrcIpAddrType, alaAppFPDbPort=alaAppFPDbPort, appFPAppGrpNameEntry=appFPAppGrpNameEntry, alcatelIND1AppFPMIBGroups=alcatelIND1AppFPMIBGroups, alaAppFPDbDstPort=alaAppFPDbDstPort, alaAppFPModuleConfigGroup=alaAppFPModuleConfigGroup, alaAppFPPortOperationMode=alaAppFPPortOperationMode, alaAppFPGrpAppName=alaAppFPGrpAppName, alaAppFPPortStatus=alaAppFPPortStatus, alaAppFPModulePortModeGroup=alaAppFPModulePortModeGroup, alaAppFPDbDstMacAddr=alaAppFPDbDstMacAddr, alaAppFPPortRowStatus=alaAppFPPortRowStatus, alaAppFPPortEntry=alaAppFPPortEntry, alaAppFPMIBCompliance=alaAppFPMIBCompliance, appFPSignatureMatchTrap=appFPSignatureMatchTrap, alaAppFPModulePortStatsGroup=alaAppFPModulePortStatsGroup, alaAppFPAppNameTable=alaAppFPAppNameTable, alcatelIND1AppFPMIBObjects=alcatelIND1AppFPMIBObjects, alaAppFPStatsEntry=alaAppFPStatsEntry, alaAppFPDbDstIpAddr=alaAppFPDbDstIpAddr, alaAppFPGlobalSignatureFile=alaAppFPGlobalSignatureFile, alaAppFPNotificationsGroup=alaAppFPNotificationsGroup, alcatelIND1AppFPMIB=alcatelIND1AppFPMIB, alaAppFPGlobalReloadSignatureFile=alaAppFPGlobalReloadSignatureFile, alaAppFPModulePortDBGroup=alaAppFPModulePortDBGroup, alaAppFPGlobalAdminState=alaAppFPGlobalAdminState, alaAppFPTotalMatchedLast1Hour=alaAppFPTotalMatchedLast1Hour, alaAppFPStatsAppName=alaAppFPStatsAppName, alaAppFPPortTable=alaAppFPPortTable, alaAppFPDbSrcIpAddr=alaAppFPDbSrcIpAddr, alaAppFPGlobalMIBConfigObjects=alaAppFPGlobalMIBConfigObjects, alcatelIND1AppFPMIBConformance=alcatelIND1AppFPMIBConformance, alaAppFPDbAppGroupName=alaAppFPDbAppGroupName, alaAppFPDbAppName=alaAppFPDbAppName, alaAppFPGroupNameOrPolicyList=alaAppFPGroupNameOrPolicyList, alaAppFPAppName=alaAppFPAppName, alaAppFPDbSrcMacAddr=alaAppFPDbSrcMacAddr, alaAppFPAppGrpNameTable=alaAppFPAppGrpNameTable, alaAppFPGlobalTrapConfig=alaAppFPGlobalTrapConfig, alaAppFPStatsPort=alaAppFPStatsPort, alaAppFPStatsGroupName=alaAppFPStatsGroupName, alcatelIND1AppFPMIBCompliances=alcatelIND1AppFPMIBCompliances, PYSNMP_MODULE_ID=alcatelIND1AppFPMIB)
