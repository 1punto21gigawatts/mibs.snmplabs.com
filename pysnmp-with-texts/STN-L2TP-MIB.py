#
# PySNMP MIB module STN-L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-L2TP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:11:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
l2tp, = mibBuilder.importSymbols("L2TP-MIB", "l2tp")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, Counter32, Integer32, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Bits, NotificationType, Counter64, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Counter32", "Integer32", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Bits", "NotificationType", "Counter64", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
StnDomainMapType, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-TC", "StnDomainMapType")
stnL2tp = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 95, 10))
if mibBuilder.loadTexts: stnL2tp.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnL2tp.setOrganization('Spring Tide Networks, Inc.')
if mibBuilder.loadTexts: stnL2tp.setContactInfo(' Spring Tide Networks, Inc. Customer Service Postal: 3 Clock Tower Place Maynard, MA 01754 Tel: 1 888-786-4357 Email: stncs@springtidenet.com ')
if mibBuilder.loadTexts: stnL2tp.setDescription('The MIB module that describes managed objects of general use by the Layer 2 Transport Protocol.')
stnL2tpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 1))
stnL2tpMibConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 2))
stnL2tpTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 3))
stnL2tpDomainMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10), )
if mibBuilder.loadTexts: stnL2tpDomainMapTable.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapTable.setDescription('This table provides a mapping between L2TP Domain identifiers and hostnames or IP-ATM information')
stnL2tpDomainMapTableEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1), ).setIndexNames((0, "STN-L2TP-MIB", "stnL2tpDomainMapIdentifier"))
if mibBuilder.loadTexts: stnL2tpDomainMapTableEntry.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapTableEntry.setDescription('An entry within the STN L2TP Map Table.')
stnL2tpDomainMapIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 1), DisplayString())
if mibBuilder.loadTexts: stnL2tpDomainMapIdentifier.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapIdentifier.setDescription('L2TP Domain Identifier.')
stnL2tpDomainMapHostName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapHostName.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapHostName.setDescription('The hostname that maps to the L2TP Domain Identifier.')
stnL2tpDomainMapType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 3), StnDomainMapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapType.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapType.setDescription('Identifiers whether the L2TP Domain maps to an IP subnet or an ATM circuit.')
stnL2tpDomainMapTypeInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapTypeInfo.setStatus('current')
if mibBuilder.loadTexts: stnL2tpDomainMapTypeInfo.setDescription('Provides either IP or ATM specific display info.')
mibBuilder.exportSymbols("STN-L2TP-MIB", stnL2tpObjects=stnL2tpObjects, stnL2tp=stnL2tp, PYSNMP_MODULE_ID=stnL2tp, stnL2tpTraps=stnL2tpTraps, stnL2tpMibConformance=stnL2tpMibConformance, stnL2tpDomainMapTableEntry=stnL2tpDomainMapTableEntry, stnL2tpDomainMapHostName=stnL2tpDomainMapHostName, stnL2tpDomainMapTypeInfo=stnL2tpDomainMapTypeInfo, stnL2tpDomainMapType=stnL2tpDomainMapType, stnL2tpDomainMapIdentifier=stnL2tpDomainMapIdentifier, stnL2tpDomainMapTable=stnL2tpDomainMapTable)
