#
# PySNMP MIB module G9981-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G9981-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:17:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
HCPerfCurrentCount, HCPerfInvalidIntervals, HCPerfTimeElapsed, HCPerfIntervalCount, HCPerfValidIntervals = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfCurrentCount", "HCPerfInvalidIntervals", "HCPerfTimeElapsed", "HCPerfIntervalCount", "HCPerfValidIntervals")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, Counter64, mib_2, iso, Integer32, Bits, IpAddress, NotificationType, Unsigned32, ObjectIdentity, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Counter64", "mib-2", "iso", "Integer32", "Bits", "IpAddress", "NotificationType", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
g9981MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 208))
g9981MIB.setRevisions(('2013-02-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: g9981MIB.setRevisionsDescriptions(('Initial version, published as RFC 6768.',))
if mibBuilder.loadTexts: g9981MIB.setLastUpdated('201302200000Z')
if mibBuilder.loadTexts: g9981MIB.setOrganization('IETF ADSL MIB Working Group')
if mibBuilder.loadTexts: g9981MIB.setContactInfo('WG charter: http://datatracker.ietf.org/wg/adslmib/charter/ Mailing Lists: General Discussion: adslmib@ietf.org To Subscribe: adslmib-request@ietf.org In Body: subscribe your_email_address Chair: Menachem Dodge Postal: ECI Telecom, Ltd. 30 Hasivim St., Petach-Tikva 4951169 Israel Phone: +972-3-926-8421 EMail: menachemdodge1@gmail.com Editor: Edward Beili Postal: Actelis Networks, Inc. 25 Bazel St., P.O.B. 10173 Petach-Tikva 49103 Israel Phone: +972-3-924-3491 EMail: edward.beili@actelis.com')
if mibBuilder.loadTexts: g9981MIB.setDescription("The objects in this MIB module are used to manage the multi-pair bonded xDSL interfaces using ATM inverse multiplexing, as defined in ITU-T Recommendation G.998.1 (G.Bond/ATM). This MIB module MUST be used in conjunction with the GBOND-MIB module, common to all G.Bond technologies. The following references are used throughout this MIB module: [G.998.1] refers to: ITU-T Recommendation G.998.1: 'ATM-based multi-pair bonding', January 2005. [TR-159] refers to: Broadband Forum Technical Report: 'Management Framework for xDSL Bonding', December 2008. Naming Conventions: ATM - Asynchronous Transfer Mode BCE - Bonding Channel Entity BTU - Bonding Terminating Unit CO - Central Office CPE - Customer Premises Equipment GBS - Generic Bonding Sub-layer GBS-C - Generic Bonding Sub-layer, CO side GBS-R - Generic Bonding Sub-layer, RT (or CPE) side PM - Performance Monitoring RT - Remote Terminal SNR - Signal to Noise Ratio SES - Severely Errored Seconds UAS - Unavailable Seconds Copyright (c) 2013 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).")
g9981Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1))
g9981Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2))
g9981Port = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1))
class MilliSeconds(TextualConvention, Unsigned32):
    description = 'Represents time unit value in milliseconds.'
    status = 'current'
    displayHint = 'd'

g9981PortNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1, 0))
g9981UpDiffDelayToleranceExceeded = NotificationType((1, 3, 6, 1, 2, 1, 208, 1, 1, 0, 1)).setObjects(("G9981-MIB", "g9981PortConfUpDiffDelayTolerance"), ("G9981-MIB", "g9981PortStatMaxUpDiffDelay"))
if mibBuilder.loadTexts: g9981UpDiffDelayToleranceExceeded.setStatus('current')
if mibBuilder.loadTexts: g9981UpDiffDelayToleranceExceeded.setDescription("This notification indicates that the maximum upstream differential delay has exceeded the max upstream differential delay threshold, specified by g9981PortConfUpDiffDelayTolerance. This notification MAY be sent for the GBS-C ports while the port is 'up', on the crossing event in both directions: from normal (diff. delay is above the threshold) to low (diff. delay equals the threshold or is below it) and from low to normal. This notification is not applicable to the GBS-R ports. Generation of this notification is controlled by the g9981PortConfDiffDelayToleranceExceededEnable attribute. This object maps to the TR-159 notification nIMAUpDiffDelayToleranceExceeded.")
if mibBuilder.loadTexts: g9981UpDiffDelayToleranceExceeded.setReference('[TR-159], Section 5.5.2.8')
g9981DnDiffDelayToleranceExceeded = NotificationType((1, 3, 6, 1, 2, 1, 208, 1, 1, 0, 2)).setObjects(("G9981-MIB", "g9981PortConfDnDiffDelayTolerance"), ("G9981-MIB", "g9981PortStatMaxDnDiffDelay"))
if mibBuilder.loadTexts: g9981DnDiffDelayToleranceExceeded.setStatus('current')
if mibBuilder.loadTexts: g9981DnDiffDelayToleranceExceeded.setDescription("This notification indicates that the maximum downstream differential delay has exceeded the max downstream differential delay threshold, specified by g9981PortConfDnDiffDelayTolerance. This notification MAY be sent for the GBS-C ports while the port is 'up', on the crossing event in both directions: from normal (diff. delay is above the threshold) to low (diff. delay equals the threshold or is below it) and from low to normal. This notification is not applicable to the GBS-R ports. Generation of this notification is controlled by the g9981PortConfDiffDelayToleranceExceededEnable attribute. This object maps to the TR-159 notification nIMADownDiffDelayToleranceExceeded.")
if mibBuilder.loadTexts: g9981DnDiffDelayToleranceExceeded.setReference('[TR-159], Section 5.5.2.9')
g9981PortConfTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 1), )
if mibBuilder.loadTexts: g9981PortConfTable.setStatus('current')
if mibBuilder.loadTexts: g9981PortConfTable.setDescription('Table for configuration of G.Bond/ATM ports. Entries in this table MUST be maintained in a persistent manner.')
g9981PortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortConfEntry.setStatus('current')
if mibBuilder.loadTexts: g9981PortConfEntry.setDescription('An entry in the G.Bond/ATM Port Configuration table. Each entry represents a G.Bond/ATM port indexed by the ifIndex. Additional configuration parameters are available via the gBondPortConfEntry of the GBOND-MIB. Note that a G.Bond/ATM port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.')
g9981PortConfUpDiffDelayTolerance = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 1), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfUpDiffDelayTolerance.setReference('[TR-159], Section 5.5.2.5; [G.998.1], Section 11.4.1 (6)')
if mibBuilder.loadTexts: g9981PortConfUpDiffDelayTolerance.setStatus('current')
if mibBuilder.loadTexts: g9981PortConfUpDiffDelayTolerance.setDescription('A maximum tolerated upstream differential delay (among the member BCEs) of a G.Bond/ATM port, expressed in ms. This object is read-write for the GBS-C ports. It is irrelevant for the GBS-R ports -- an attempt to read or change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue). This object maps to the TR-159 attribute aIMAUpDiffDelayTolerance.')
g9981PortConfDnDiffDelayTolerance = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 2), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfDnDiffDelayTolerance.setReference('[TR-159], Section 5.5.2.6; [G.998.1], Section 11.4.1 (6)')
if mibBuilder.loadTexts: g9981PortConfDnDiffDelayTolerance.setStatus('current')
if mibBuilder.loadTexts: g9981PortConfDnDiffDelayTolerance.setDescription('A maximum tolerated downstream differential delay (among the member BCEs) of a G.Bond/ATM port, expressed in ms. This object is read-write for the GBS-C ports. It is irrelevant for the GBS-R ports -- an attempt to read or change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue). This object maps to the TR-159 attribute aIMADownDiffDelayTolerance.')
g9981PortConfDiffDelayToleranceExceededEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfDiffDelayToleranceExceededEnable.setReference('[TR-159], Section 5.5.5.7')
if mibBuilder.loadTexts: g9981PortConfDiffDelayToleranceExceededEnable.setStatus('current')
if mibBuilder.loadTexts: g9981PortConfDiffDelayToleranceExceededEnable.setDescription('Indicates whether g9981UpDiffDelayToleranceExceeded and g9981DnDiffDelayToleranceExceeded notifications should be generated for G.Bond/ATM port. A value of true(1) indicates that the notifications are enabled. A value of false(2) indicates that the notifications are disabled. This object is read-write for the GBS-C. It is irrelevant for the GBS-R ports -- an attempt to read or change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue). This object maps to the TR-159 attribute aIMADiffDelayToleranceExceededEnable.')
g9981PortStatTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 2), )
if mibBuilder.loadTexts: g9981PortStatTable.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatTable.setDescription('This table provides overall status information of G.Bond/ATM ports, complementing the generic status information from the ifTable of the IF-MIB and the gBondFltStatus of the GBOND-MIB. Additional status information about connected BCEs is available from the relevant line MIBs. This table contains live data from the equipment. As such, it is NOT persistent.')
g9981PortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortStatEntry.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatEntry.setDescription('An entry in the G.Bond/ATM Port Status table. Each entry represents a G.Bond/ATM port indexed by the ifIndex. Note that a GBS port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.')
g9981PortStatRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 1), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatRxLostCells.setReference('[TR-159], Section 5.5.2.1; [G.998.1], Section 11.4.2 (4)')
if mibBuilder.loadTexts: g9981PortStatRxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatRxLostCells.setDescription('The number of lost ATM cells detected by the G.Bond/ATM port in the receive direction (e.g., upstream direction for a GBS-C port). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime as defined in the IF-MIB. This object maps to the TR-159 attribute aIMARxLostCells.')
g9981PortStatTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatTxLostCells.setReference('[TR-159], Section 5.5.2.2; [G.998.1], Section 11.4.2 (4)')
if mibBuilder.loadTexts: g9981PortStatTxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatTxLostCells.setDescription('The number of lost ATM cells detected by the peer G.Bond/ATM port in the receive direction, i.e., downstream direction for a GBS-C port. This object is irrelevant for the GBS-R ports -- an attempt to read it MUST be rejected (in the case of SNMP, with the error inconsistentValue). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime as defined in the IF-MIB. This object maps to the TR-159 attribute aIMAPeerRxLostCells.')
g9981PortStatMaxUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 3), Unsigned32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatMaxUpDiffDelay.setReference('[TR-159], Section 5.5.2.3')
if mibBuilder.loadTexts: g9981PortStatMaxUpDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatMaxUpDiffDelay.setDescription('Current maximum upstream differential delay between all operational BCEs in the G.Bond/ATM bonding group, measured in units of 0.1 ms. This object is read-only for the GBS-C ports. It is irrelevant for the GBS-R ports -- an attempt to read this object MUST be rejected (in the case of SNMP, with the error inconsistentValue). This object maps to the TR-159 attribute aIMAMaxUpDiffDelay.')
g9981PortStatMaxDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 4), Unsigned32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatMaxDnDiffDelay.setReference('[TR-159], Section 5.5.2.4')
if mibBuilder.loadTexts: g9981PortStatMaxDnDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortStatMaxDnDiffDelay.setDescription('Current maximum downstream differential delay between all operational BCEs in the G.Bond/ATM bonding group, measured in units of 0.1 ms. This object is read-only for the GBS-C ports. It is irrelevant for the GBS-R ports -- an attempt to read this object MUST be rejected (in the case of SNMP, with the error inconsistentValue). This object maps to the TR-159 attribute aIMAMaxDownDiffDelay.')
g9981PM = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1, 3))
g9981PortPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1), )
if mibBuilder.loadTexts: g9981PortPmCurTable.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCurTable.setDescription('This table contains current Performance Monitoring information for a G.Bond/ATM port. This table contains live data from the equipment and as such is NOT persistent.')
g9981PortPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortPmCurEntry.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCurEntry.setDescription('An entry in the G.Bond/ATM Port PM table. Each entry represents a G.Bond/ATM port indexed by the ifIndex.')
g9981PortPmCur15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 1), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinValidIntervals.setReference('[TR-159], Section 5.5.1.32')
if mibBuilder.loadTexts: g9981PortPmCur15MinValidIntervals.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinValidIntervals.setDescription('A read-only number of 15-minute intervals for which the performance data was collected. The value of this object will be 96 or the maximum number of 15-minute history intervals collected by the implementation, unless the measurement was (re)started recently, in which case the value will be the number of complete 15-minute intervals for which there are at least some data. In certain cases, it is possible that some intervals are unavailable. In this case, this object reports the maximum interval number for which data is available. This object partially maps to the TR-159 attribute aGroupPerf15MinValidIntervals.')
g9981PortPmCur15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 2), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinInvalidIntervals.setReference('[TR-159], Section 5.5.1.33')
if mibBuilder.loadTexts: g9981PortPmCur15MinInvalidIntervals.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinInvalidIntervals.setDescription('A read-only number of 15-minute intervals for which the performance data was not always available. The value will typically be zero, except in cases where the data for some intervals are not available. This object partially maps to the TR-159 attribute aGroupPerf15MinInvalidIntervals.')
g9981PortPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 3), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinTimeElapsed.setReference('[TR-159], Section 5.5.1.34')
if mibBuilder.loadTexts: g9981PortPmCur15MinTimeElapsed.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinTimeElapsed.setDescription('A read-only count of seconds that have elapsed since the beginning of the current 15-minute performance interval. This object partially maps to the TR-159 attribute aGroupPerfCurr15MinTimeElapsed.')
g9981PortPmCur15MinRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 4), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinRxLostCells.setReference('[TR-159], Section 5.5.2.1')
if mibBuilder.loadTexts: g9981PortPmCur15MinRxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinRxLostCells.setDescription('A read-only count of lost ATM cells detected by a G.Bond/ATM port (e.g., the GBS-C) in the receive direction, during the current 15-minute performance history interval. Note that the total number of lost ATM cells is indicated by the g9981PortStatRxLostCells object. This object is inhibited during Severely Errored Seconds (SES) or Unavailable Seconds (UAS).')
g9981PortPmCur15MinTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 5), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinTxLostCells.setReference('[TR-159], Section 5.5.2.2')
if mibBuilder.loadTexts: g9981PortPmCur15MinTxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinTxLostCells.setDescription('A read-only count of lost ATM cells detected by the peer G.Bond/ATM port (e.g., by the GBS-R for the GBS-C) during the current 15-minute performance history interval. Note that the total number of lost ATM cells is indicated by the g9981PortStatTxLostCells object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPmCur15MinUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 6), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinUpDiffDelay.setReference('[TR-159], Section 5.5.2.3')
if mibBuilder.loadTexts: g9981PortPmCur15MinUpDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinUpDiffDelay.setDescription('A read-only value specifying the maximum upstream differential delay between all operational BCEs in the GBS-C, measured in units of 0.1 ms, during the current 15-minute performance interval. Note that the current max upstream differential delay is indicated by the g9981PortStatMaxUpDiffDelay object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPmCur15MinDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 7), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinDnDiffDelay.setReference('[TR-159], Section 5.5.2.4')
if mibBuilder.loadTexts: g9981PortPmCur15MinDnDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur15MinDnDiffDelay.setDescription('A read-only value specifying the maximum downstream differential delay between all operational BCEs in the GBS-C (as perceived by the GBS-R), measured in units of 0.1 ms, during the current 15-minute performance history interval. Note that the current max downstream differential delay is indicated by the g9981PortStatMaxDnDiffDelay object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPmCur1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayValidIntervals.setReference('[TR-159], Section 5.5.1.45')
if mibBuilder.loadTexts: g9981PortPmCur1DayValidIntervals.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayValidIntervals.setDescription('A read-only number of 1-day intervals for which data was collected. The value of this object will be 7 or the maximum number of 1-day history intervals collected by the implementation, unless the measurement was (re)started recently, in which case the value will be the number of complete 1-day intervals for which there are at least some data. In certain cases, it is possible that some intervals are unavailable. In this case, this object reports the maximum interval number for which data is available.')
g9981PortPmCur1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayInvalidIntervals.setReference('[TR-159], Section 5.5.1.46')
if mibBuilder.loadTexts: g9981PortPmCur1DayInvalidIntervals.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayInvalidIntervals.setDescription('A read-only number of 1-day intervals for which data was not always available. The value will typically be zero, except in cases where the data for some intervals are not available.')
g9981PortPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 10), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayTimeElapsed.setReference('[TR-159], Section 5.5.1.47')
if mibBuilder.loadTexts: g9981PortPmCur1DayTimeElapsed.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayTimeElapsed.setDescription('A read-only count of seconds that have elapsed since the beginning of the current 1-day performance interval.')
g9981PortPmCur1DayRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 11), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayRxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayRxLostCells.setDescription('A read-only count of lost ATM cells detected by the G.Bond/ATM port (e.g., the GBS-C) during the current 1-day performance interval. This object is inhibited during Severely Errored Seconds (SES) and Unavailable Seconds (UAS).')
g9981PortPmCur1DayTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 12), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayTxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayTxLostCells.setDescription('A read-only count of lost ATM cells detected by the peer G.Bond/ATM port (e.g., by the GBS-R for the GBS-C) during the current 1-day performance history interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPmCur1DayUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 13), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayUpDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayUpDiffDelay.setDescription('A read-only value specifying the maximum upstream differential delay between all operational BCEs in the GBS-C, measured in units of 0.1 ms, during the current 1-day performance interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPmCur1DayDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 14), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayDnDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPmCur1DayDnDiffDelay.setDescription('A read-only value specifying the maximum downstream differential delay between all operational BCEs in the GBS-C, measured in units of 0.1 ms, during the current 1-day performance interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2), )
if mibBuilder.loadTexts: g9981PortPm15MinTable.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinTable.setDescription('This table contains historical 15-minute buckets of Performance Monitoring information for a G.Bond/ATM port (a row for each 15-minute interval, up to 96 intervals). Entries in this table MUST be maintained in a persistent manner.')
g9981PortPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9981-MIB", "g9981PortPm15MinIntervalIndex"))
if mibBuilder.loadTexts: g9981PortPm15MinEntry.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinEntry.setDescription('An entry in the G.Bond/ATM Port historical 15-minute PM table. Each entry represents Performance Monitoring data for a G.Bond/ATM port, indexed by the ifIndex, collected during a particular 15-minute interval, indexed by the g9981PortPm15MinIntervalIndex.')
g9981PortPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: g9981PortPm15MinIntervalIndex.setReference('[TR-159], Section 5.5.1.57')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalIndex.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalIndex.setDescription('Performance data interval number. 1 is the most recent previous interval; interval 96 is 24 hours ago. Intervals 2..96 are OPTIONAL. This object partially maps to the TR-159 attribute aGroupPerf15MinIntervalNumber.')
g9981PortPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalMoniTime.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalMoniTime.setDescription('A read-only count of seconds over which the performance data was actually monitored. This value will be the same as the interval duration (900 seconds), except in a situation where performance data could not be collected for any reason.')
g9981PortPm15MinIntervalRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 3), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalRxLostCells.setReference('[TR-159], Section 5.5.2.1')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalRxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalRxLostCells.setDescription('A read-only count of lost ATM cells detected by a G.Bond/ATM port (e.g., the GBS-C) in the receive direction, during the 15-minute performance history interval. Note that the total number of lost ATM cells is indicated by the g9981PortStatRxLostCells object. This object is inhibited during Severely Errored Seconds (SES) or Unavailable Seconds (UAS).')
g9981PortPm15MinIntervalTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 4), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalTxLostCells.setReference('[TR-159], Section 5.5.2.2')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalTxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalTxLostCells.setDescription('A read-only count of lost ATM cells detected by the peer G.Bond/ATM port (e.g., by the GBS-R for the GBS-C) during the 15-minute performance history interval. Note that the total number of lost ATM cells is indicated by the g9981PortStatTxLostCells object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm15MinIntervalUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 5), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalUpDiffDelay.setReference('[TR-159], Section 5.5.2.3')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalUpDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalUpDiffDelay.setDescription('A read-only value specifying the maximum upstream differential delay between all operational BCEs in the GBS, measured in units of 0.1 ms, during the 15-minute performance history interval. Note that the current max upstream differential delay is indicated by the g9981PortStatMaxUpDiffDelay object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm15MinIntervalDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 6), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalDnDiffDelay.setReference('[TR-159], Section 5.5.2.4')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalDnDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalDnDiffDelay.setDescription('A read-only value specifying the maximum downstream differential delay between all operational BCEs in the GBS, as perceived by its peer port, measured in units of 0.1 ms, during the 15-minute performance history interval. Note that the current max downstream differential delay is indicated by the g9981PortStatMaxDnDiffDelay object. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalValid.setReference('[TR-159], Section 5.5.1.58')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalValid.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm15MinIntervalValid.setDescription('A read-only object indicating whether or not this history bucket contains valid data. A valid bucket is reported as true(1) and an invalid bucket as false(2). If this history bucket is invalid, the BTU MUST NOT produce notifications based upon the value of the counters in this bucket. Note that an implementation may decide not to store invalid history buckets in its database. In such a case, this object is not required, as only valid history buckets are available while invalid history buckets are simply not in the database. This object partially maps to the TR-159 attribute aGroupPerf15MinIntervalValid.')
g9981PortPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3), )
if mibBuilder.loadTexts: g9981PortPm1DayTable.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayTable.setDescription('This table contains historical 1-day buckets of Performance Monitoring information for a G.Bond/ATM port (a row for each 1-day interval, up to 7 intervals). Entries in this table MUST be maintained in a persistent manner.')
g9981PortPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9981-MIB", "g9981PortPm1DayIntervalIndex"))
if mibBuilder.loadTexts: g9981PortPm1DayEntry.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayEntry.setDescription('An entry in the G.Bond/ATM Port historical 1-day PM table. Each entry represents Performance Monitoring data for such a port, indexed by the ifIndex, collected during a particular 1-day interval, indexed by the g9981PortPm1DayIntervalIndex.')
g9981PortPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: g9981PortPm1DayIntervalIndex.setReference('[TR-159], Section 5.5.1.62')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalIndex.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalIndex.setDescription('Performance data interval number. 1 is the most recent previous interval; interval 7 is 24 hours ago. Intervals 2..7 are OPTIONAL. This object partially maps to the TR-159 attribute aGroupPerf1DayIntervalNumber.')
g9981PortPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalMoniTime.setReference('[TR-159], Section 5.5.1.64')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalMoniTime.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalMoniTime.setDescription('A count of seconds over which the performance data was actually monitored. This value will be the same as the interval duration (86400 seconds), except in a situation where performance data could not be collected for any reason. This object partially maps to the TR-159 attribute aGroupPerf1DayIntervalMoniSecs.')
g9981PortPm1DayIntervalRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 3), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalRxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalRxLostCells.setDescription('A count of lost ATM cells detected by the G.Bond/ATM port (e.g., the GBS-C) during the 1-day performance history interval. This object is inhibited during Severely Errored Seconds (SES) and Unavailable Seconds (UAS).')
g9981PortPm1DayIntervalTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 4), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalTxLostCells.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalTxLostCells.setDescription('A count of lost ATM cells detected by the peer G.Bond/ATM port (e.g., by the GBS-R for the GBS-C) during the 1-day performance history interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm1DayIntervalUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 5), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalUpDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalUpDiffDelay.setDescription('A read-only value specifying the maximum upstream differential delay between all operational BCEs in the GBS-C, measured in units of 0.1 ms, during the 1-day performance history interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm1DayIntervalDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 6), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalDnDiffDelay.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalDnDiffDelay.setDescription('A read-only value specifying the maximum downstream differential delay between all operational BCEs in the GBS-C, measured in units of 0.1 ms, during the 1-day performance history interval. This object is inhibited during Unavailable Seconds (UAS).')
g9981PortPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalValid.setReference('[TR-159], Section 5.5.1.63')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalValid.setStatus('current')
if mibBuilder.loadTexts: g9981PortPm1DayIntervalValid.setDescription('A read-only object indicating whether or not this history bucket contains valid data. A valid bucket is reported as true(1) and an invalid bucket as false(2). If this history bucket is invalid, the BTU MUST NOT produce notifications based upon the value of the counters in this bucket. Note that an implementation may decide not to store invalid history buckets in its database. In such a case, this object is not required, as only valid history buckets are available while invalid history buckets are simply not in the database. This object partially maps to the TR-159 attribute aGroupPerf1DayIntervalValid.')
g9981Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2, 1))
g9981Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2, 2))
g9981BasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 1)).setObjects(("G9981-MIB", "g9981PortStatRxLostCells"), ("G9981-MIB", "g9981PortStatTxLostCells"), ("G9981-MIB", "g9981PortStatMaxUpDiffDelay"), ("G9981-MIB", "g9981PortStatMaxDnDiffDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981BasicGroup = g9981BasicGroup.setStatus('current')
if mibBuilder.loadTexts: g9981BasicGroup.setDescription('A collection of objects representing management information for a G.Bond/ATM port.')
g9981AlarmConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 2)).setObjects(("G9981-MIB", "g9981PortConfUpDiffDelayTolerance"), ("G9981-MIB", "g9981PortConfDnDiffDelayTolerance"), ("G9981-MIB", "g9981PortConfDiffDelayToleranceExceededEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981AlarmConfGroup = g9981AlarmConfGroup.setStatus('current')
if mibBuilder.loadTexts: g9981AlarmConfGroup.setDescription('A collection of objects required for configuration of alarm thresholds and notifications in G.Bond/ATM ports.')
g9981NotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 3)).setObjects(("G9981-MIB", "g9981UpDiffDelayToleranceExceeded"), ("G9981-MIB", "g9981DnDiffDelayToleranceExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981NotificationGroup = g9981NotificationGroup.setStatus('current')
if mibBuilder.loadTexts: g9981NotificationGroup.setDescription('This group supports notifications of significant conditions associated with G.Bond/ATM ports.')
g9981PerfCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 4)).setObjects(("G9981-MIB", "g9981PortPmCur15MinValidIntervals"), ("G9981-MIB", "g9981PortPmCur15MinInvalidIntervals"), ("G9981-MIB", "g9981PortPmCur15MinTimeElapsed"), ("G9981-MIB", "g9981PortPmCur15MinRxLostCells"), ("G9981-MIB", "g9981PortPmCur15MinTxLostCells"), ("G9981-MIB", "g9981PortPmCur15MinUpDiffDelay"), ("G9981-MIB", "g9981PortPmCur15MinDnDiffDelay"), ("G9981-MIB", "g9981PortPmCur1DayValidIntervals"), ("G9981-MIB", "g9981PortPmCur1DayInvalidIntervals"), ("G9981-MIB", "g9981PortPmCur1DayTimeElapsed"), ("G9981-MIB", "g9981PortPmCur1DayRxLostCells"), ("G9981-MIB", "g9981PortPmCur1DayTxLostCells"), ("G9981-MIB", "g9981PortPmCur1DayUpDiffDelay"), ("G9981-MIB", "g9981PortPmCur1DayDnDiffDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981PerfCurrGroup = g9981PerfCurrGroup.setStatus('current')
if mibBuilder.loadTexts: g9981PerfCurrGroup.setDescription('A collection of objects supporting OPTIONAL current Performance Monitoring information for G.Bond/ATM ports.')
g9981Perf15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 5)).setObjects(("G9981-MIB", "g9981PortPm15MinIntervalMoniTime"), ("G9981-MIB", "g9981PortPm15MinIntervalRxLostCells"), ("G9981-MIB", "g9981PortPm15MinIntervalTxLostCells"), ("G9981-MIB", "g9981PortPm15MinIntervalUpDiffDelay"), ("G9981-MIB", "g9981PortPm15MinIntervalDnDiffDelay"), ("G9981-MIB", "g9981PortPm15MinIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Perf15MinGroup = g9981Perf15MinGroup.setStatus('current')
if mibBuilder.loadTexts: g9981Perf15MinGroup.setDescription('A collection of objects supporting OPTIONAL historical Performance Monitoring information for G.Bond/ATM ports, during previous 15-minute intervals.')
g9981Perf1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 6)).setObjects(("G9981-MIB", "g9981PortPm1DayIntervalMoniTime"), ("G9981-MIB", "g9981PortPm1DayIntervalRxLostCells"), ("G9981-MIB", "g9981PortPm1DayIntervalTxLostCells"), ("G9981-MIB", "g9981PortPm1DayIntervalUpDiffDelay"), ("G9981-MIB", "g9981PortPm1DayIntervalDnDiffDelay"), ("G9981-MIB", "g9981PortPm1DayIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Perf1DayGroup = g9981Perf1DayGroup.setStatus('current')
if mibBuilder.loadTexts: g9981Perf1DayGroup.setDescription('A collection of objects supporting OPTIONAL historical Performance Monitoring information for G.Bond/ATM ports, during previous 1-day intervals.')
g9981Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 208, 2, 2, 1)).setObjects(("G9981-MIB", "g9981BasicGroup"), ("G9981-MIB", "g9981AlarmConfGroup"), ("G9981-MIB", "g9981NotificationGroup"), ("G9981-MIB", "g9981PerfCurrGroup"), ("G9981-MIB", "g9981Perf15MinGroup"), ("G9981-MIB", "g9981Perf1DayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Compliance = g9981Compliance.setStatus('current')
if mibBuilder.loadTexts: g9981Compliance.setDescription('The compliance statement for G.Bond/ATM interfaces. Compliance with the following external compliance statements is REQUIRED: MIB Module Compliance Statement ---------- -------------------- IF-MIB ifCompliance3 GBOND-MIB gBondCompliance')
mibBuilder.exportSymbols("G9981-MIB", g9981PortStatEntry=g9981PortStatEntry, g9981PortPmCurTable=g9981PortPmCurTable, g9981PortPmCur15MinTxLostCells=g9981PortPmCur15MinTxLostCells, MilliSeconds=MilliSeconds, g9981PortPm1DayIntervalIndex=g9981PortPm1DayIntervalIndex, g9981PortPmCur1DayInvalidIntervals=g9981PortPmCur1DayInvalidIntervals, g9981PortPmCur1DayTimeElapsed=g9981PortPmCur1DayTimeElapsed, PYSNMP_MODULE_ID=g9981MIB, g9981PortPmCurEntry=g9981PortPmCurEntry, g9981Compliances=g9981Compliances, g9981PortPm15MinIntervalUpDiffDelay=g9981PortPm15MinIntervalUpDiffDelay, g9981PortPm15MinTable=g9981PortPm15MinTable, g9981PortPm15MinIntervalIndex=g9981PortPm15MinIntervalIndex, g9981PortPmCur15MinValidIntervals=g9981PortPmCur15MinValidIntervals, g9981Perf1DayGroup=g9981Perf1DayGroup, g9981PortPm15MinIntervalValid=g9981PortPm15MinIntervalValid, g9981Objects=g9981Objects, g9981PortPmCur15MinUpDiffDelay=g9981PortPmCur15MinUpDiffDelay, g9981PortPm15MinIntervalTxLostCells=g9981PortPm15MinIntervalTxLostCells, g9981PortPm1DayEntry=g9981PortPm1DayEntry, g9981Compliance=g9981Compliance, g9981PortPmCur15MinDnDiffDelay=g9981PortPmCur15MinDnDiffDelay, g9981PortStatRxLostCells=g9981PortStatRxLostCells, g9981PortPm15MinEntry=g9981PortPm15MinEntry, g9981MIB=g9981MIB, g9981PortConfEntry=g9981PortConfEntry, g9981PortPmCur1DayUpDiffDelay=g9981PortPmCur1DayUpDiffDelay, g9981PortPm1DayIntervalMoniTime=g9981PortPm1DayIntervalMoniTime, g9981BasicGroup=g9981BasicGroup, g9981PortPm1DayIntervalDnDiffDelay=g9981PortPm1DayIntervalDnDiffDelay, g9981NotificationGroup=g9981NotificationGroup, g9981Perf15MinGroup=g9981Perf15MinGroup, g9981PortPm1DayTable=g9981PortPm1DayTable, g9981PortPmCur15MinRxLostCells=g9981PortPmCur15MinRxLostCells, g9981PM=g9981PM, g9981PortPmCur1DayDnDiffDelay=g9981PortPmCur1DayDnDiffDelay, g9981PortStatTable=g9981PortStatTable, g9981PortStatMaxUpDiffDelay=g9981PortStatMaxUpDiffDelay, g9981PortPm1DayIntervalTxLostCells=g9981PortPm1DayIntervalTxLostCells, g9981PortPm15MinIntervalDnDiffDelay=g9981PortPm15MinIntervalDnDiffDelay, g9981PortPmCur15MinInvalidIntervals=g9981PortPmCur15MinInvalidIntervals, g9981PortPmCur15MinTimeElapsed=g9981PortPmCur15MinTimeElapsed, g9981PortPm1DayIntervalUpDiffDelay=g9981PortPm1DayIntervalUpDiffDelay, g9981Conformance=g9981Conformance, g9981PortPm1DayIntervalRxLostCells=g9981PortPm1DayIntervalRxLostCells, g9981PortConfDiffDelayToleranceExceededEnable=g9981PortConfDiffDelayToleranceExceededEnable, g9981PortConfTable=g9981PortConfTable, g9981PortStatMaxDnDiffDelay=g9981PortStatMaxDnDiffDelay, g9981Groups=g9981Groups, g9981PortPmCur1DayValidIntervals=g9981PortPmCur1DayValidIntervals, g9981PortPmCur1DayRxLostCells=g9981PortPmCur1DayRxLostCells, g9981AlarmConfGroup=g9981AlarmConfGroup, g9981PerfCurrGroup=g9981PerfCurrGroup, g9981Port=g9981Port, g9981PortConfDnDiffDelayTolerance=g9981PortConfDnDiffDelayTolerance, g9981PortNotifications=g9981PortNotifications, g9981PortPm15MinIntervalMoniTime=g9981PortPm15MinIntervalMoniTime, g9981UpDiffDelayToleranceExceeded=g9981UpDiffDelayToleranceExceeded, g9981PortPm1DayIntervalValid=g9981PortPm1DayIntervalValid, g9981PortPmCur1DayTxLostCells=g9981PortPmCur1DayTxLostCells, g9981PortConfUpDiffDelayTolerance=g9981PortConfUpDiffDelayTolerance, g9981PortStatTxLostCells=g9981PortStatTxLostCells, g9981DnDiffDelayToleranceExceeded=g9981DnDiffDelayToleranceExceeded, g9981PortPm15MinIntervalRxLostCells=g9981PortPm15MinIntervalRxLostCells)
