#
# PySNMP MIB module CISCO-BITS-CLOCK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BITS-CLOCK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:51:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, entPhysicalDescr = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "entPhysicalDescr")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, IpAddress, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Integer32, iso, Gauge32, Counter32, NotificationType, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Integer32", "iso", "Gauge32", "Counter32", "NotificationType", "TimeTicks", "MibIdentifier")
TruthValue, TimeStamp, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention")
ciscoBitsClockMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 459))
ciscoBitsClockMIB.setRevisions(('2005-01-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoBitsClockMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoBitsClockMIB.setLastUpdated('200501210000Z')
if mibBuilder.loadTexts: ciscoBitsClockMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoBitsClockMIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoBitsClockMIB.setDescription('This MIB provides information on Building Integrated Timing Supply(BITS) clocking sources and modes of operations. It is used to generate notifications to indicate when clocking sources change roles or become unavailable. GR-1233CORE sections 8.1.2 Major Alarms and 8.1.3 Critical Alarms')
ciscoBitsClockMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 459, 0))
ciscoBitsClockMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 459, 1))
ciscoBitsClockMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 459, 2))
cBitsClkSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1), )
if mibBuilder.loadTexts: cBitsClkSourceTable.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceTable.setDescription('This table contains one row per clock source and is a sparse augmentation of the entPhysicalTable. This table provides additional information for each entry of the entPhysicalTable that acts as clock source.')
cBitsClkSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cBitsClkSourceEntry.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceEntry.setDescription('Information about a particular clock source.')
cBitsClkSourceRoleAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("tertiary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBitsClkSourceRoleAdmin.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceRoleAdmin.setDescription('Indicates the role of this clock source as defined by system administrator. ')
cBitsClkSourceRoleCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unavailable", 0), ("primary", 1), ("secondary", 2), ("tertiary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBitsClkSourceRoleCurrent.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceRoleCurrent.setDescription("The current role of BITS clock source. Also, indicates when clock source is unavailable. The 'unavailable' value indicates that the external source of clock signal has failed and indicates that this entry can not serve as clock source.")
cBitsClkSourceTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 3), TimeStamp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBitsClkSourceTimestamp.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceTimestamp.setDescription('Timestamp used it indicate when this clock source entered the current role defined by cBitsClkSourceRoleCurrent object')
cBitsClkSourceActiveSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cBitsClkSourceActiveSeconds.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceActiveSeconds.setDescription('The total number of seconds that this clock source was active and able to serve role as specified as cBitsClkSourceRoleCurrent object.')
cBitsClkSourceInactiveSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cBitsClkSourceInactiveSeconds.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceInactiveSeconds.setDescription('The total number of seconds that this clock source was inactive and unable to serve role as specified as cBitsClkSourceRoleCurrent object.')
cBitsClkSourceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBitsClkSourceDescription.setStatus('current')
if mibBuilder.loadTexts: cBitsClkSourceDescription.setDescription('This will provide description in addition to entPhysicalDescr or ifDescr(if available) for the clock source.')
cBitsClkNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 459, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBitsClkNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cBitsClkNotifEnabled.setDescription("The BITS clocking notification truth value. 'true' Indicates that all notification contained within this MIB are to be generated. 'false' Indicates that all notification contained within this MIB are disabled.")
ciscoBitsClockSource = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 459, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalDescr"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceDescription"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceRoleAdmin"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceRoleCurrent"))
if mibBuilder.loadTexts: ciscoBitsClockSource.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockSource.setDescription('Indicates the clock source has switch roles as clock source as indicated by cBitsClkSourceRoleCurrent')
ciscoBitsClockFreerun = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 459, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: ciscoBitsClockFreerun.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockFreerun.setDescription('An external clock source is unavailable. The internal clock will operate in freerun mode using appropiate local oscillator. Therefore, it does not provide synchronous clocking. This is the least stable of all operating modes.')
ciscoBitsClockHoldover = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 459, 0, 3)).setObjects(("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: ciscoBitsClockHoldover.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockHoldover.setDescription('An external clock source is unavailable. The internal clock will operate in holdover mode. The network clock module has stored information about the incoming clock signal, it can faithfully reproduce the lost signal while in holdover mode until a switchover to another clock source occurs.')
ciscoBitsClockMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 459, 2, 1))
ciscoBitsClockMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 459, 2, 2))
ciscoBitsClockMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 459, 2, 1, 1)).setObjects(("CISCO-BITS-CLOCK-MIB", "ciscoBitsClockSourceGroup"), ("CISCO-BITS-CLOCK-MIB", "ciscoBitsClockNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBitsClockMIBCompliance = ciscoBitsClockMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-BITS-CLOCK-MIB.my MIB')
ciscoBitsClockSourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 459, 2, 2, 1)).setObjects(("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceRoleAdmin"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceRoleCurrent"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceTimestamp"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceActiveSeconds"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceInactiveSeconds"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkSourceDescription"), ("CISCO-BITS-CLOCK-MIB", "cBitsClkNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBitsClockSourceGroup = ciscoBitsClockSourceGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockSourceGroup.setDescription('BITS Clock Source Object Group')
ciscoBitsClockNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 459, 2, 2, 2)).setObjects(("CISCO-BITS-CLOCK-MIB", "ciscoBitsClockSource"), ("CISCO-BITS-CLOCK-MIB", "ciscoBitsClockFreerun"), ("CISCO-BITS-CLOCK-MIB", "ciscoBitsClockHoldover"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBitsClockNotifGroup = ciscoBitsClockNotifGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoBitsClockNotifGroup.setDescription('BITS Clock Source Notifications Group')
mibBuilder.exportSymbols("CISCO-BITS-CLOCK-MIB", cBitsClkSourceTable=cBitsClkSourceTable, ciscoBitsClockMIBCompliances=ciscoBitsClockMIBCompliances, cBitsClkSourceEntry=cBitsClkSourceEntry, ciscoBitsClockSourceGroup=ciscoBitsClockSourceGroup, cBitsClkSourceInactiveSeconds=cBitsClkSourceInactiveSeconds, PYSNMP_MODULE_ID=ciscoBitsClockMIB, ciscoBitsClockMIBGroups=ciscoBitsClockMIBGroups, ciscoBitsClockMIBNotifs=ciscoBitsClockMIBNotifs, cBitsClkSourceTimestamp=cBitsClkSourceTimestamp, cBitsClkNotifEnabled=cBitsClkNotifEnabled, ciscoBitsClockSource=ciscoBitsClockSource, cBitsClkSourceRoleAdmin=cBitsClkSourceRoleAdmin, ciscoBitsClockMIBObjects=ciscoBitsClockMIBObjects, ciscoBitsClockFreerun=ciscoBitsClockFreerun, ciscoBitsClockHoldover=ciscoBitsClockHoldover, cBitsClkSourceRoleCurrent=cBitsClkSourceRoleCurrent, ciscoBitsClockMIBCompliance=ciscoBitsClockMIBCompliance, cBitsClkSourceActiveSeconds=cBitsClkSourceActiveSeconds, ciscoBitsClockNotifGroup=ciscoBitsClockNotifGroup, cBitsClkSourceDescription=cBitsClkSourceDescription, ciscoBitsClockMIB=ciscoBitsClockMIB, ciscoBitsClockMIBConform=ciscoBitsClockMIBConform)
