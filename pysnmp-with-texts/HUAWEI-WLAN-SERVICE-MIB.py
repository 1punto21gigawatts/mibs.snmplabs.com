#
# PySNMP MIB module HUAWEI-WLAN-SERVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-WLAN-SERVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hwWlan, = mibBuilder.importSymbols("HUAWEI-WLAN-MIB", "hwWlan")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, Unsigned32, Counter64, Gauge32, ObjectIdentity, Bits, ModuleIdentity, iso, NotificationType, MibIdentifier, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "Counter64", "Gauge32", "ObjectIdentity", "Bits", "ModuleIdentity", "iso", "NotificationType", "MibIdentifier", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
MacAddress, RowStatus, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime")
hwWlanServiceManagement = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4))
hwWlanServiceManagement.setRevisions(('2015-09-25 09:38', '2015-06-18 20:25', '2015-01-20 20:25', '2014-12-16 15:25', '2014-11-29 15:25', '2014-08-30 15:25', '2014-08-22 15:25', '2014-08-08 15:25', '2014-07-17 15:25', '2014-06-08 15:25', '2014-04-21 14:05', '2014-03-22 14:05', '2013-12-11 14:09', '2013-10-23 14:09', '2010-06-01 10:00', '2010-08-13 10:00', '2010-09-02 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwWlanServiceManagement.setRevisionsDescriptions(('V1.13 modifiy the range of hwMeshProfileUrgentHandoverLowRateThreshold node.', 'V1.12 modifiy hwNeighborApLocationIDList,hwMacBridgeChannelID,hwBridgeLinkChannelID.', 'V1.11 modifiy hwBridgeProfileBridgeName and hwMeshProfileMeshID nodes in mesh profile and bridge profile.', 'V1.10 add fwa node in mesh profile.', 'V1.09 modify the range of hwMeshProfileUrgentHandoverLowRateThreshold node.', 'V1.08 add location ID nodes.', 'V1.07 add mesh profile nodes and statistic nodes.', 'V1.06 add hwL3RoamInStationCount and hwL3RoamOutStationCount nodes.', 'V1.05 Mesh Link number change.', 'Wlan service management.', ' V1.04 add new nodes for hwStationTable.', ' V1.03 add new nodes for hwEssManagementTable,hwStationTable and hwAcStatistics.', ' V1.02, modify both hwStaStatOperMode and hwMeshProfileMaxLinkNum', ' V1.01, Add for v2r5', ' V1.00, The first Draft.', ' V1.02, Add enum value unknown(-1) in hwWlanServiceEssForwardMode of hwEssManagementTable.', ' V1.03, Add leaf nodes named hwWlanServiceVapBssid in hwVapManagementTable.',))
if mibBuilder.loadTexts: hwWlanServiceManagement.setLastUpdated('201509250938Z')
if mibBuilder.loadTexts: hwWlanServiceManagement.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwWlanServiceManagement.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwWlanServiceManagement.setDescription('V1.14 add hwWlanServiceVapFrequency.')
hwEssManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1), )
if mibBuilder.loadTexts: hwEssManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwEssManagementTable.setDescription('Ess management table.')
hwEssManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssName"))
if mibBuilder.loadTexts: hwEssManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwEssManagementEntry.setDescription('Ess management entry.')
hwWlanServiceEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwWlanServiceEssName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssName.setDescription('Ess name, the key of the ess management table.')
hwWlanServiceEssSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssSsid.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSsid.setDescription("Ess's ssid, a string name of ess.")
hwWlanServiceEssHideSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssHideSsid.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssHideSsid.setDescription('The switch whether the ess hide its ssid or not, when sent a beacon frame. Enable means hidden, and disable means not hidden.')
hwWlanServiceEssUserIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssUserIsolate.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssUserIsolate.setDescription('The switch whether the users of the ess are isolated or not. Enable means isolated, disable means not isolated.')
hwWlanServiceEssType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("service", 1), ("apManagement", 2), ("acManagement", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssType.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssType.setDescription('The ess type. service means the ess is used for service, ap-management means the ess is used for managing ap, ac-management means the ess is used for managing ac.')
hwWlanServiceEssTrafficProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssTrafficProfileName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssTrafficProfileName.setDescription('The traffic profile name that the ess bind.')
hwWlanServiceEssSecurityProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssSecurityProfileName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSecurityProfileName.setDescription('The security profile name that the ess bind.')
hwWlanServiceEssMaxUserNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssMaxUserNumber.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssMaxUserNumber.setDescription('The maximum number of users the ess can burden.')
hwWlanServiceEssAssociationTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssAssociationTimeOut.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssAssociationTimeOut.setDescription("The user's association aging time.")
hwWlanServiceEssIgmpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("proxy", 1), ("snooping", 2), ("off", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceEssIgmpMode.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssIgmpMode.setDescription('The igmp mode of the ess, proxy means the ess will act igmp proxy function, snooping means the ess will act igmp snooping function, off means the ess will do nothing.')
hwWlanServiceEssRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssRowStatus.setDescription('The row status of ess management table.')
hwWlanServiceEssForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("directForward", 1), ("tunnel", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssForwardMode.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssForwardMode.setDescription('Set ess based forward mode.')
hwWlanServiceEssNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssNum.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssNum.setDescription('The wlan-ess interface that the ess bind.The value of default wlan-ess interface num is 0xffffffff')
hwWlanServiceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceVlan.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVlan.setDescription('The service-vlan that the AP used.The value of default service-vlan is 1')
hwWlanServiceEssDhcpSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDhcpSnooping.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDhcpSnooping.setDescription('Description.')
hwWlanServiceEssServiceVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssServiceVlanEnable.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssServiceVlanEnable.setDescription('Description: This node is not supported now.')
hwWlanServiceEssIPSGEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssIPSGEnable.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssIPSGEnable.setDescription('Description.')
hwWlanServiceEssDhcpTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDhcpTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDhcpTrustPort.setDescription('Description.')
hwWlanServiceEssDaiSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDaiSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDaiSwitch.setDescription('Description.')
hwWlanServiceEssArpThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssArpThreshold.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssArpThreshold.setDescription('Description.')
hwWlanServiceEssTunnelProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssTunnelProtocol.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssTunnelProtocol.setDescription('Set tunnel protocol. Use bit for protocol configuration, each bit for a protocol: 1 -- configed, 0 -- be not configed. For example, EAP(0000 0001),DHCP(0000 0010),HTTP(0000 0100),WAPI(0000 1000), MDNS(0001 0000).Now it just can be set with HTTP, EAP, MDNS or their combination.')
hwWlanServiceEssStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceEssStatus.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssStatus.setDescription('Description.')
hwWlanServiceEssOfflineManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssOfflineManagement.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssOfflineManagement.setDescription('Description.')
hwWlanServiceEssBlacklistProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssBlacklistProfileName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssBlacklistProfileName.setDescription('Description.')
hwWlanServiceEssWhitelistProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssWhitelistProfileName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssWhitelistProfileName.setDescription('Description.')
hwWlanServiceEssStaAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", -1), ("disable", 1), ("blacklistProfile", 2), ("whitelistProfile", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssStaAccessMode.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssStaAccessMode.setDescription('Description.')
hwWlanServiceEssDhcpOption82InsertSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDhcpOption82InsertSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDhcpOption82InsertSwitch.setDescription('Description.')
hwWlanServiceEssDhcpOption82RemoteIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("apMac", 1), ("apMacSsid", 2))).clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDhcpOption82RemoteIdFormat.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDhcpOption82RemoteIdFormat.setDescription('Description.')
hwWlanServiceEssDhcpSnoopingOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssDhcpSnoopingOption.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssDhcpSnoopingOption.setDescription('related cmd: dhcp snooping option <option-id> undo dhcp snooping option <option-id> undo dhcp snooping all Valid option id range is [1, 254]. bit0 and bit 255 are reserved.')
hwWlanServiceEssBroadCastPps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssBroadCastPps.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssBroadCastPps.setDescription('Description.')
hwWlanServiceEssMultiCastPps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssMultiCastPps.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssMultiCastPps.setDescription('Description.')
hwWlanServiceEssUniCastPps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssUniCastPps.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssUniCastPps.setDescription('Description.')
hwWlanServiceEssBroadCastSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssBroadCastSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssBroadCastSwitch.setDescription('Description.')
hwWlanServiceEssMultiCastSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssMultiCastSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssMultiCastSwitch.setDescription('Description.')
hwWlanServiceEssUniCastSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssUniCastSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssUniCastSwitch.setDescription('Description.')
hwWlanServiceEssSaclNameInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameInbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameInbound.setDescription('Description.')
hwWlanServiceEssSaclNameOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameOutbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameOutbound.setDescription('Description.')
hwWlanServiceEssSaclNumInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumInbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumInbound.setDescription('The Sacl number range is 3000 to 3031, or 6000 to 6031.')
hwWlanServiceEssSaclNumOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumOutbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumOutbound.setDescription('The Sacl number range is 3000 to 3031, or 6000 to 6031.')
hwWlanServiceEssSaclSwtichInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichInbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichInbound.setDescription('Description.')
hwWlanServiceEssSaclSwtichOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichOutbound.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichOutbound.setDescription('Description.')
hwWlanServiceEssServiceModeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssServiceModeSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssServiceModeSwitch.setDescription('Description.')
hwWlanServiceEssAutoOffEssAdminSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssAdminSwitch.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssAdminSwitch.setDescription('Description.')
hwWlanServiceEssAutoOffEssStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssStartTime.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssStartTime.setDescription('Description.')
hwWlanServiceEssAutoOffEssEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssEndTime.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssAutoOffEssEndTime.setDescription('Description.')
hwWlanServiceEssNdSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssNdSnooping.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssNdSnooping.setDescription('Description.')
hwWlanServiceEssSaclNameInboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 47), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameInboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameInboundIPv6.setDescription('Description.')
hwWlanServiceEssSaclNameOutboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 48), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameOutboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNameOutboundIPv6.setDescription('Description.')
hwWlanServiceEssSaclNumInboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumInboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumInboundIPv6.setDescription('Description.')
hwWlanServiceEssSaclNumOutboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 50), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumOutboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclNumOutboundIPv6.setDescription('Description.')
hwWlanServiceEssSaclSwtichInboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichInboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichInboundIPv6.setDescription('Description.')
hwWlanServiceEssSaclSwtichOutboundIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichOutboundIPv6.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssSaclSwtichOutboundIPv6.setDescription('Description.')
hwWlanServiceEssNdTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssNdTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssNdTrustPort.setDescription('Description.')
hwWlanServiceEssMldSnoopingEable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssMldSnoopingEable.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssMldSnoopingEable.setDescription('Description.')
hwWlanServiceEssIPSGEnableRejectAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssIPSGEnableRejectAssoc.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssIPSGEnableRejectAssoc.setDescription('Description.')
hwWlanServiceEssLearnClientIpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssLearnClientIpEnable.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssLearnClientIpEnable.setDescription('Description.')
hwWlanServiceEssHomeAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ap", 1), ("ac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssHomeAgent.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssHomeAgent.setDescription('Description.')
hwWlanServiceEssVlanMobilityGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceEssVlanMobilityGroup.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceEssVlanMobilityGroup.setDescription('Description.')
hwVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2), )
if mibBuilder.loadTexts: hwVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwVapManagementTable.setDescription('Visual ap management table.')
hwVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapEssName"))
if mibBuilder.loadTexts: hwVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwVapManagementEntry.setDescription('Visual ap management entry.')
hwWlanServiceVapApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwWlanServiceVapApIndex.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapApIndex.setDescription('The ap index.')
hwWlanServiceVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hwWlanServiceVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapRadioIndex.setDescription('The radio index.')
hwWlanServiceVapEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwWlanServiceVapEssName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapEssName.setDescription('The ess name.')
hwWlanServiceVapWlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapWlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapWlanIndex.setDescription('The wlan index.')
hwWlanServiceVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapRowStatus.setDescription('The row status of visual ap management table.')
hwWlanServiceVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapBssid.setDescription('BSSID is the MAC address of VAP in the 802.11 net. ')
hwWlanServiceVapSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapSSID.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapSSID.setDescription('Description.')
hwWlanServiceVapVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapVlan.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapVlan.setDescription('Description.')
hwWlanServiceVapFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapFrequency.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapFrequency.setDescription('WLAN Vap Frquency')
hwServiceBatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3), )
if mibBuilder.loadTexts: hwServiceBatchTable.setStatus('current')
if mibBuilder.loadTexts: hwServiceBatchTable.setDescription('The service batch table.')
hwServiceBatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchApType"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchRadioIndex"))
if mibBuilder.loadTexts: hwServiceBatchEntry.setStatus('current')
if mibBuilder.loadTexts: hwServiceBatchEntry.setDescription('The service batch entry.')
hwWlanServiceBatchApType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwWlanServiceBatchApType.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchApType.setDescription('The ap type.')
hwWlanServiceBatchRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: hwWlanServiceBatchRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchRadioIndex.setDescription('The radio index.')
hwWlanServiceBatchRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceBatchRadioProfileName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchRadioProfileName.setDescription('The radio profile name.')
hwWlanServiceBatchEssNameNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceBatchEssNameNumber.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssNameNumber.setDescription('The ess name number.')
hwWlanServiceBatchEssNameList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwWlanServiceBatchEssNameList.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssNameList.setDescription("The ess name list, each ess name is divided by '?'.")
hwWlanServiceBatchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceBatchRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchRowStatus.setDescription('The row status.')
hwCapwapConfigManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 4), )
if mibBuilder.loadTexts: hwCapwapConfigManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwCapwapConfigManagementTable.setDescription('The capwap configuration management table.')
hwCapwapConfigManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 4, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceCapwapConfigApIndex"))
if mibBuilder.loadTexts: hwCapwapConfigManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwCapwapConfigManagementEntry.setDescription('The capwap configuration management entry.')
hwWlanServiceCapwapConfigApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hwWlanServiceCapwapConfigApIndex.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceCapwapConfigApIndex.setDescription('The capwap configuration ap index.')
hwWlanServiceCapwapConfigCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceCapwapConfigCommit.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceCapwapConfigCommit.setDescription("The switch whether send the ap's configuration to ap device.")
hwStationTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5), )
if mibBuilder.loadTexts: hwStationTable.setStatus('current')
if mibBuilder.loadTexts: hwStationTable.setDescription('Station info table')
hwStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaMac"))
if mibBuilder.loadTexts: hwStationEntry.setStatus('current')
if mibBuilder.loadTexts: hwStationEntry.setDescription('Specifies each station info entry.')
hwWlanServiceStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwWlanServiceStaMac.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaMac.setDescription('Station mac address.')
hwWlanServiceStaApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaApId.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaApId.setDescription('Station association AP id.')
hwWlanServiceStaRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaRadioId.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaRadioId.setDescription('Station association radio id.')
hwWlanServiceStaEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaEssName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaEssName.setDescription('Station association ESS name.')
hwWlanServiceStaSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaSsid.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaSsid.setDescription('Station association SSID.')
hwWlanServiceStaOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaOnlineTime.setDescription('Station online time.')
hwWlanServiceStaSnrUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 7), Integer32()).setUnits('0.01 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaSnrUs.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaSnrUs.setDescription("AP can't support it. The upstream SNR(ratio between the received signal power and received noise power). A special value of 0x7FFFFFFF (2147483647) indicates the SNR is out of range to be represented. A special value of 0x7FFFFFFE (2147483646) indicates the SNR measurement is currently unavailable.")
hwWlanServiceStaRxPowerUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 8), Integer32()).setUnits('0.01 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceStaRxPowerUs.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceStaRxPowerUs.setDescription('The upstream aggregate receive power. A special value of 0x7FFFFFFF (2147483647) indicates the receive power is out of range to be represented. A special value of 0x7FFFFFFE (2147483646) indicates the receive power measurement is currently unavailable.')
hwStaWirelessStatTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatTxPkts.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatTxPkts.setDescription('Count of sent wireless packets to the station since associated.')
hwStaWirelessStatRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatRxPkts.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatRxPkts.setDescription('Count of received wireless packets from the station since associated.')
hwStaWirelessStatTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatTxBytes.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatTxBytes.setDescription('Count of sent bytes to the station since associated.')
hwStaWirelessStatRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatRxBytes.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatRxBytes.setDescription('Count of received bytes from the station since associated.')
hwStaWirelessStatTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 13), Integer32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatTxRate.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatTxRate.setDescription('Wireless data rate sent to the station.')
hwStaWirelessStatRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 14), Integer32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatRxRate.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatRxRate.setDescription('Wireless data rate received from the station.')
hwStaAccessChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAccessChannel.setStatus('current')
if mibBuilder.loadTexts: hwStaAccessChannel.setDescription('Description.')
hwStaIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaIp.setStatus('current')
if mibBuilder.loadTexts: hwStaIp.setDescription('Description.')
hwStaRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 17), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRssi.setStatus('current')
if mibBuilder.loadTexts: hwStaRssi.setDescription('Description.')
hwStaNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaNoise.setStatus('current')
if mibBuilder.loadTexts: hwStaNoise.setDescription('Description.')
hwStaVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaVlan.setStatus('current')
if mibBuilder.loadTexts: hwStaVlan.setDescription('Description.')
hwStaRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRecvDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwStaRecvDropFrames.setDescription('Description.')
hwStaSendDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaSendDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwStaSendDropFrames.setDescription('Description.')
hwStaRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRecvErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwStaRecvErrorFrames.setDescription('Description.')
hwStaSendErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaSendErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwStaSendErrorFrames.setDescription('Description.')
hwStaReSendFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaReSendFrames.setStatus('current')
if mibBuilder.loadTexts: hwStaReSendFrames.setDescription('Description.')
hwStaReSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaReSendBytes.setStatus('current')
if mibBuilder.loadTexts: hwStaReSendBytes.setDescription('Description.')
hwStaUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaUsername.setStatus('current')
if mibBuilder.loadTexts: hwStaUsername.setDescription('Description.')
hwStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaStatus.setDescription('Description.')
hwStaWirelessStatRxBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatRxBytes64Bits.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatRxBytes64Bits.setDescription('Description.')
hwStaWirelessStatTxBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatTxBytes64Bits.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatTxBytes64Bits.setDescription('Description.')
hwStaGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 30), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaGateway.setStatus('current')
if mibBuilder.loadTexts: hwStaGateway.setDescription('Description.')
hwStaAuthenMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAuthenMethod.setStatus('current')
if mibBuilder.loadTexts: hwStaAuthenMethod.setDescription('Description.')
hwStaEncryptMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaEncryptMethod.setStatus('current')
if mibBuilder.loadTexts: hwStaEncryptMethod.setDescription('Description.')
hwStaBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 33), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaBSSID.setStatus('current')
if mibBuilder.loadTexts: hwStaBSSID.setDescription('Description.')
hwStaQosMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wmm", 1), ("null", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaQosMode.setStatus('current')
if mibBuilder.loadTexts: hwStaQosMode.setDescription('Description.')
hwStaHtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("ht40", 1), ("ht20", 2), ("vht80", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaHtMode.setStatus('current')
if mibBuilder.loadTexts: hwStaHtMode.setDescription('Description.')
hwStaMcsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaMcsVal.setStatus('current')
if mibBuilder.loadTexts: hwStaMcsVal.setDescription('Description.')
hwStaShortGIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonsupport", 1), ("support", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaShortGIStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaShortGIStatus.setDescription('Description.')
hwStaRoamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRoamStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaRoamStatus.setDescription('Description.')
hwStaStatOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("clearstatistic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaStatOperMode.setStatus('current')
if mibBuilder.loadTexts: hwStaStatOperMode.setDescription('Description.')
hwStaWirelessStatTxPkts64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatTxPkts64Bits.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatTxPkts64Bits.setDescription('Description.')
hwStaWirelessStatRxPkts64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWirelessStatRxPkts64Bits.setStatus('current')
if mibBuilder.loadTexts: hwStaWirelessStatRxPkts64Bits.setDescription('Description.')
hwStaRfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRfMode.setStatus('current')
if mibBuilder.loadTexts: hwStaRfMode.setDescription('1(11b) 2(11g) 3(11n) 4(11a) 5(11ac) 0(unknown).')
hwStaIpV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 43), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaIpV6.setStatus('current')
if mibBuilder.loadTexts: hwStaIpV6.setDescription('Description.')
hwStaAssociateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 44), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAssociateTime.setStatus('current')
if mibBuilder.loadTexts: hwStaAssociateTime.setDescription('Description.')
hwStaAccessTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 45), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAccessTime.setStatus('current')
if mibBuilder.loadTexts: hwStaAccessTime.setDescription('Description.')
hwStaAccessOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 46), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAccessOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwStaAccessOnlineTime.setDescription('Description.')
hwStaLinkRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 47), Integer32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaLinkRxRate.setStatus('current')
if mibBuilder.loadTexts: hwStaLinkRxRate.setDescription('It means actual business rate when the equipment has packets from station to AP. It means actual negotiated connection rate when the equioment has no packets.')
hwStaLinkTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 48), Integer32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaLinkTxRate.setStatus('current')
if mibBuilder.loadTexts: hwStaLinkTxRate.setDescription('It means actual business rate when the equipment has packets from AP to station. It means actual negotiated connection rate when the equioment has no packets.')
hwStaActualBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaActualBandwidth.setStatus('current')
if mibBuilder.loadTexts: hwStaActualBandwidth.setDescription('It means actual bandwidth, include all of both the sent rate and the received rate.')
hwStaPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaPackets.setStatus('current')
if mibBuilder.loadTexts: hwStaPackets.setDescription('It means all of both the sent frames and the received frames.')
hwStaChannelUtilRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaChannelUtilRate.setStatus('current')
if mibBuilder.loadTexts: hwStaChannelUtilRate.setDescription('It means the rate of channel utilization.')
hwStaChannelBusyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaChannelBusyRate.setStatus('current')
if mibBuilder.loadTexts: hwStaChannelBusyRate.setDescription('It means the rate of busy channel.')
hwStaChannelFreeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaChannelFreeRate.setStatus('current')
if mibBuilder.loadTexts: hwStaChannelFreeRate.setDescription('It means the rate of free channel.')
hwStaChannelInterfRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 5, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaChannelInterfRate.setStatus('current')
if mibBuilder.loadTexts: hwStaChannelInterfRate.setDescription('It means the rate of channel interference.')
hwVapStationListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6), )
if mibBuilder.loadTexts: hwVapStationListTable.setStatus('current')
if mibBuilder.loadTexts: hwVapStationListTable.setDescription('Station list in VAP.')
hwVapStationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaApId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaRadioId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaEssName"))
if mibBuilder.loadTexts: hwVapStationListEntry.setStatus('current')
if mibBuilder.loadTexts: hwVapStationListEntry.setDescription('VAP station list entry.')
hwWlanServiceVapStaApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hwWlanServiceVapStaApId.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaApId.setDescription('Ap ID.')
hwWlanServiceVapStaRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: hwWlanServiceVapStaRadioId.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaRadioId.setDescription('Radio ID.')
hwWlanServiceVapStaEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 3), OctetString())
if mibBuilder.loadTexts: hwWlanServiceVapStaEssName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaEssName.setDescription('ESS name.')
hwWlanServiceVapStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapStaNum.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaNum.setDescription('Station number in this VAP.')
hwWlanServiceVapStaMacList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapStaMacList.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaMacList.setDescription('Station MAC list in this VAP. String length is (hwWlanServiceVapStaNum * 6).')
hwWlanServiceVapAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapAssociatedStationCount.setDescription('Counts of STA associated or reassociated successful in vap.')
hwWlanServiceVapCurOnlineStaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapCurOnlineStaCount.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapCurOnlineStaCount.setDescription('Current online STA count based on portal Authentication success.')
hwWlanServiceVapStaAssocAndReAssocReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapStaAssocAndReAssocReqCount.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaAssocAndReAssocReqCount.setDescription('Count of station association and reassociation request base on VAP with index of AP id.')
hwWlanServiceVapStaOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceVapStaOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceVapStaOnlineTime.setDescription('Sum of station online time based on vap.')
hwWlanServiceBatchEssInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7))
hwWlanServiceBatchEssStartNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceBatchEssStartNumber.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssStartNumber.setDescription("The ess start number in batch operation. This node is used with node hwWlanServiceBatchEssNumber, for example, hwWlanServiceBatchEssStartNumber is set to one, and hwWlanServiceBatchEssNumber is set to three, then get the node hwWlanServiceBatchReturnEssNumber,hwWlanServiceBatchEssName, hwWlanServiceBatchEssSsid, that means start from the first ess, get three ess's name and ssid list. if it dose not exist three esses, the hwWlanServiceBatchReturnEssNumber will be the real ess number, otherwise, it is equal to hwWlanServiceBatchEssNumber.")
hwWlanServiceBatchEssNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWlanServiceBatchEssNumber.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssNumber.setDescription("The ess number that want to get in batch operation.This node is used with node hwWlanServiceBatchEssStartNumber, for example, hwWlanServiceBatchEssStartNumber is set to one, and hwWlanServiceBatchEssNumber is set to three, then get the node hwWlanServiceBatchReturnEssNumber,hwWlanServiceBatchEssName, and hwWlanServiceBatchEssSsid, that means start from the first ess, get three ess's name and ssid list. if it dose not exist three esses, the hwWlanServiceBatchReturnEssNumber will be the real ess number, otherwise, it is equal to hwWlanServiceBatchEssNumber.")
hwWlanServiceBatchReturnEssNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceBatchReturnEssNumber.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchReturnEssNumber.setDescription('The ess number get in batch operation.')
hwWlanServiceBatchEssName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceBatchEssName.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssName.setDescription("The names of esses which are determined by node hwWlanServiceBatchEssStartNumber and node hwWlanServiceBatchEssNumber. each ess name is divided by '?'.")
hwWlanServiceBatchEssSsid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 7, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWlanServiceBatchEssSsid.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssSsid.setDescription("Get the ssids of esses which are determined in node hwWlanServiceEssBatchIndex. each ssid is divided by '?'.")
hwCapwapConfigCommitAll = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCapwapConfigCommitAll.setStatus('current')
if mibBuilder.loadTexts: hwCapwapConfigCommitAll.setDescription("The switch whether send the all ap's configuration to ap device.")
hwApAssocStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9), )
if mibBuilder.loadTexts: hwApAssocStatTable.setStatus('current')
if mibBuilder.loadTexts: hwApAssocStatTable.setDescription('The table hwApAssocStatTable contains station association, reassociation and disassociation statistics.')
hwApAssocStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwApAssocStatApId"))
if mibBuilder.loadTexts: hwApAssocStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwApAssocStatEntry.setDescription('The table hwApAssocStatTable contains station association, reassociation and disassociation statistics.')
hwApAssocStatApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApAssocStatApId.setStatus('current')
if mibBuilder.loadTexts: hwApAssocStatApId.setDescription('Ap ID.')
hwTotalOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 2), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwTotalOnlineTime.setDescription('Stations total online time, the stations are that which have associated to this AP.')
hwTotalAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTotalAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwTotalAssociatedStationCount.setDescription('Count of success association and reassociation request base on AP id.')
hwCurrAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCurrAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwCurrAssociatedStationCount.setDescription('Count of stations that are associating to this AP.')
hwAssociationRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociationRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwAssociationRequestCount.setDescription('Count of association request.')
hwAssociationRejectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociationRejectCount.setStatus('current')
if mibBuilder.loadTexts: hwAssociationRejectCount.setDescription('Count of reject association request.')
hwAssociationFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociationFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwAssociationFailedCount.setDescription('Count of failed association request.')
hwReAssociationRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReAssociationRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwReAssociationRequestCount.setDescription('Count of reassociation request.')
hwReAssociationRejectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReAssociationRejectCount.setStatus('current')
if mibBuilder.loadTexts: hwReAssociationRejectCount.setDescription('Count of reject reassociation request.')
hwReAssociationFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReAssociationFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwReAssociationFailedCount.setDescription('Count of failed reassociation request.')
hwDisAssocOfUserNotifiedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisAssocOfUserNotifiedCount.setStatus('current')
if mibBuilder.loadTexts: hwDisAssocOfUserNotifiedCount.setDescription('Count of disassociations because of users notified.')
hwDisAssocOfStaRoamCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisAssocOfStaRoamCount.setStatus('current')
if mibBuilder.loadTexts: hwDisAssocOfStaRoamCount.setDescription('Count of disassociations because of users roam.')
hwDisAssocOfStaAgeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisAssocOfStaAgeCount.setStatus('current')
if mibBuilder.loadTexts: hwDisAssocOfStaAgeCount.setDescription('Count of disassociations because of users left without notification.')
hwDisAssocOfApUnableHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisAssocOfApUnableHandleCount.setStatus('current')
if mibBuilder.loadTexts: hwDisAssocOfApUnableHandleCount.setDescription('Count of disassociations because of AP is unable to handle all currently associated stations.')
hwDisAssocOfOtherReasonsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDisAssocOfOtherReasonsCount.setStatus('current')
if mibBuilder.loadTexts: hwDisAssocOfOtherReasonsCount.setDescription('Count of disassociations because of other reasons.')
hwAssocRequestCntByResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssocRequestCntByResource.setStatus('current')
if mibBuilder.loadTexts: hwAssocRequestCntByResource.setDescription('Description.')
hwStaExceptionalOfflineCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaExceptionalOfflineCnt.setStatus('current')
if mibBuilder.loadTexts: hwStaExceptionalOfflineCnt.setDescription('Description.')
hwReAssociationSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwReAssociationSuccessCount.setStatus('current')
if mibBuilder.loadTexts: hwReAssociationSuccessCount.setDescription('Description.')
hwBSSNotSupportAssocFailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBSSNotSupportAssocFailCount.setStatus('current')
if mibBuilder.loadTexts: hwBSSNotSupportAssocFailCount.setDescription('Description.')
hwStaAccessRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAccessRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAccessRequestCount.setDescription('Description.')
hwStaAccessRequestFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAccessRequestFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAccessRequestFailedCount.setDescription('Description.')
hwStaAuthenRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAuthenRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAuthenRequestCount.setDescription('Description.')
hwStaAuthenRequestFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAuthenRequestFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAuthenRequestFailedCount.setDescription('Description.')
hwRefusedStaNumByResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRefusedStaNumByResource.setStatus('current')
if mibBuilder.loadTexts: hwRefusedStaNumByResource.setDescription('Description.')
hwStaAssocAndReAssocRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAssocAndReAssocRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAssocAndReAssocRequestCount.setDescription('Count of station association and reassociation request base on AP id.')
hwStaAuthenRequestSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAuthenRequestSuccessCount.setStatus('current')
if mibBuilder.loadTexts: hwStaAuthenRequestSuccessCount.setDescription('Count of hwStaAuthenRequestSuccessCount base on Portal authentification successful.')
hwL3RoamInStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL3RoamInStationCount.setStatus('current')
if mibBuilder.loadTexts: hwL3RoamInStationCount.setDescription('It means count of station roamed to the AP for L3, not include roaming between different service sets for one AP.')
hwL3RoamOutStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 9, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL3RoamOutStationCount.setStatus('current')
if mibBuilder.loadTexts: hwL3RoamOutStationCount.setDescription('It means count of station roamed from the AP for L3, not include roaming between different service sets for one AP.')
hwVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10), )
if mibBuilder.loadTexts: hwVlanMappingTable.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingTable.setDescription('The table hwVlanMappingTable contains the VLAN mapping relations based ESS.')
hwVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingEssName"))
if mibBuilder.loadTexts: hwVlanMappingEntry.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingEntry.setDescription('The table hwVlanMappingTable contains the VLAN mapping relations based ESS.')
hwVlanMappingEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwVlanMappingEssName.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingEssName.setDescription('ESS name.')
hwVlanMappingEssVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("essMode", 1), ("regionMode", 2), ("apMode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingEssVlanMode.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingEssVlanMode.setDescription('VLAN mode.')
hwVlanMappingEssVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingEssVlanId.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingEssVlanId.setDescription('VLAN ID of the ESS when VLAN mode is ess-mode.')
hwVlanMappingVlanList0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList0.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList0.setDescription("VLAN ID list of the ap or region when VLAN mode is region-mode or ap-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList1.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList1.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList2.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList2.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList3.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList3.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList4.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList4.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList5.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList5.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList6.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList6.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwVlanMappingVlanList7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanMappingVlanList7.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingVlanList7.setDescription("VLAN ID list of the ap or region when VLAN mode is ap-mode or region-mode, its' max length is 512*2bytes,per two bytes represent the corresponding VLAN ID.")
hwGlobalStaMacWhiteListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 11), )
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListTable.setStatus('current')
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListTable.setDescription('Description.')
hwGlobalStaMacWhiteListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 11, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaMacWhiteListMacAddr"))
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListEntry.setStatus('current')
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListEntry.setDescription('Description.')
hwStaMacWhiteListMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwStaMacWhiteListMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwStaMacWhiteListMacAddr.setDescription('Description.')
hwGlobalStaMacWhiteListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListRowStatus.setDescription('Description.')
hwStaMacBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 12), )
if mibBuilder.loadTexts: hwStaMacBlackListTable.setStatus('current')
if mibBuilder.loadTexts: hwStaMacBlackListTable.setDescription('The table hwStaMacBlackListTable contains the black list of station Mac addresses.')
hwStaMacBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 12, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaMacBlackListMacAddr"))
if mibBuilder.loadTexts: hwStaMacBlackListEntry.setStatus('current')
if mibBuilder.loadTexts: hwStaMacBlackListEntry.setDescription('Station black list entry.')
hwStaMacBlackListMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 12, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwStaMacBlackListMacAddr.setStatus('current')
if mibBuilder.loadTexts: hwStaMacBlackListMacAddr.setDescription('Station MAC address that will be added to or deleted from the black list.')
hwStaMacBlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 12, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaMacBlackListRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaMacBlackListRowStatus.setDescription('The row status of hwStaMacBlackListTable.')
hwApStaAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 13), )
if mibBuilder.loadTexts: hwApStaAccessControlTable.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlTable.setDescription('Description.')
hwApStaAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 13, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwApStaAccessControlApId"))
if mibBuilder.loadTexts: hwApStaAccessControlEntry.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlEntry.setDescription('Description.')
hwApStaAccessControlApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApStaAccessControlApId.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlApId.setDescription('Description.')
hwApStaAccessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 13, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApStaAccessControlMode.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlMode.setDescription('Description.')
hwApStaAccessControlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaAccessControlRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlRowStatus.setDescription('Description.')
hwAcStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14))
hwAcReassocSuccessTimes = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcReassocSuccessTimes.setStatus('current')
if mibBuilder.loadTexts: hwAcReassocSuccessTimes.setDescription("At present,the function doesn't support.")
hwApPerformanceStatTimerLen = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPerformanceStatTimerLen.setStatus('current')
if mibBuilder.loadTexts: hwApPerformanceStatTimerLen.setDescription('Description.')
hwRtCollectOnoff = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRtCollectOnoff.setStatus('current')
if mibBuilder.loadTexts: hwRtCollectOnoff.setDescription('Description.')
hwApNormalCollectCycle = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApNormalCollectCycle.setStatus('current')
if mibBuilder.loadTexts: hwApNormalCollectCycle.setDescription('Description.')
hwApRtCollectCycle = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRtCollectCycle.setStatus('current')
if mibBuilder.loadTexts: hwApRtCollectCycle.setDescription('Description.')
hwAcCurAssocStaNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcCurAssocStaNum.setStatus('current')
if mibBuilder.loadTexts: hwAcCurAssocStaNum.setDescription('hwAcCurAssocStaNum of STA associated or reassociated successful in AC.')
hwAcCurAuthSuccessStaNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcCurAuthSuccessStaNum.setStatus('current')
if mibBuilder.loadTexts: hwAcCurAuthSuccessStaNum.setDescription('Description.')
hwAcCurJointApNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcCurJointApNum.setStatus('current')
if mibBuilder.loadTexts: hwAcCurJointApNum.setDescription('Description.')
hwAcCurAssoc24gStaNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcCurAssoc24gStaNum.setStatus('current')
if mibBuilder.loadTexts: hwAcCurAssoc24gStaNum.setDescription('Description.')
hwAcCurAssoc5gStaNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 14, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcCurAssoc5gStaNum.setStatus('current')
if mibBuilder.loadTexts: hwAcCurAssoc5gStaNum.setDescription('Description.')
hwMacVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15), )
if mibBuilder.loadTexts: hwMacVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwMacVapManagementTable.setDescription('Description.')
hwMacVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapEssName"))
if mibBuilder.loadTexts: hwMacVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacVapManagementEntry.setDescription('Description.')
hwMacWlanServiceVapApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacWlanServiceVapApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapApMac.setDescription('Description.')
hwMacWlanServiceVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacWlanServiceVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapRadioIndex.setDescription('Description.')
hwMacWlanServiceVapEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMacWlanServiceVapEssName.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapEssName.setDescription('Description.')
hwMacWlanServiceVapWlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapWlanIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapWlanIndex.setDescription('Description.')
hwMacWlanServiceVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapBssid.setDescription('Description.')
hwMacWlanServiceVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacWlanServiceVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapRowStatus.setDescription('Description.')
hwMacWlanServiceVapSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapSSID.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapSSID.setDescription('Description.')
hwMacWlanServiceVapVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapVlan.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapVlan.setDescription('Description.')
hwMacCapwapConfigManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 16), )
if mibBuilder.loadTexts: hwMacCapwapConfigManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwMacCapwapConfigManagementTable.setDescription('Description.')
hwMacCapwapConfigManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 16, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceCapwapConfigApMac"))
if mibBuilder.loadTexts: hwMacCapwapConfigManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacCapwapConfigManagementEntry.setDescription('Description.')
hwMacWlanServiceCapwapConfigApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 16, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacWlanServiceCapwapConfigApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceCapwapConfigApMac.setDescription('Description.')
hwMacWlanServiceCapwapConfigCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 16, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacWlanServiceCapwapConfigCommit.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceCapwapConfigCommit.setDescription('Description.')
hwMacVapStationListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17), )
if mibBuilder.loadTexts: hwMacVapStationListTable.setStatus('current')
if mibBuilder.loadTexts: hwMacVapStationListTable.setDescription('Description.')
hwMacVapStationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaRadioId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaEssName"))
if mibBuilder.loadTexts: hwMacVapStationListEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacVapStationListEntry.setDescription('Description.')
hwMacWlanServiceVapStaApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacWlanServiceVapStaApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaApMac.setDescription('Description.')
hwMacWlanServiceVapStaRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacWlanServiceVapStaRadioId.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaRadioId.setDescription('Description.')
hwMacWlanServiceVapStaEssName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 3), OctetString())
if mibBuilder.loadTexts: hwMacWlanServiceVapStaEssName.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaEssName.setDescription('Description.')
hwMacWlanServiceVapStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapStaNum.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaNum.setDescription('Description.')
hwMacWlanServiceVapStaMacList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapStaMacList.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaMacList.setDescription('Description.')
hwMacWlanServiceVapAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapAssociatedStationCount.setDescription('Counts of STA associated or reassociated successful in vap.')
hwMacWlanServiceVapCurOnlineStaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapCurOnlineStaCount.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapCurOnlineStaCount.setDescription('Current online STA count based on portal Authentication success.')
hwMacWlanServiceVapStaAssocAndReAssocReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapStaAssocAndReAssocReqCount.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaAssocAndReAssocReqCount.setDescription('Count of station association and reassociation request base on VAP with index of AP MAC.')
hwMacWlanServiceVapStaOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 17, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacWlanServiceVapStaOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwMacWlanServiceVapStaOnlineTime.setDescription('Sum of station online time based on vap.')
hwMacApAssocStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18), )
if mibBuilder.loadTexts: hwMacApAssocStatTable.setStatus('current')
if mibBuilder.loadTexts: hwMacApAssocStatTable.setDescription('Description.')
hwMacApAssocStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacApAssocStatApMac"))
if mibBuilder.loadTexts: hwMacApAssocStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacApAssocStatEntry.setDescription('Description.')
hwMacApAssocStatApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacApAssocStatApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacApAssocStatApMac.setDescription('Description.')
hwMacTotalOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacTotalOnlineTime.setStatus('current')
if mibBuilder.loadTexts: hwMacTotalOnlineTime.setDescription('Description.')
hwMacTotalAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacTotalAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwMacTotalAssociatedStationCount.setDescription('Description.')
hwMacCurrAssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacCurrAssociatedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwMacCurrAssociatedStationCount.setDescription('Description.')
hwMacAssociationRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAssociationRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwMacAssociationRequestCount.setDescription('Description.')
hwMacAssociationRejectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAssociationRejectCount.setStatus('current')
if mibBuilder.loadTexts: hwMacAssociationRejectCount.setDescription('Description.')
hwMacAssociationFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAssociationFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacAssociationFailedCount.setDescription('Description.')
hwMacReAssociationRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacReAssociationRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwMacReAssociationRequestCount.setDescription('Description.')
hwMacReAssociationRejectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacReAssociationRejectCount.setStatus('current')
if mibBuilder.loadTexts: hwMacReAssociationRejectCount.setDescription('Description.')
hwMacReAssociationFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacReAssociationFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacReAssociationFailedCount.setDescription('Description.')
hwMacDisAssocOfUserNotifiedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDisAssocOfUserNotifiedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacDisAssocOfUserNotifiedCount.setDescription('Description.')
hwMacDisAssocOfStaRoamCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDisAssocOfStaRoamCount.setStatus('current')
if mibBuilder.loadTexts: hwMacDisAssocOfStaRoamCount.setDescription('Description.')
hwMacDisAssocOfStaAgeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDisAssocOfStaAgeCount.setStatus('current')
if mibBuilder.loadTexts: hwMacDisAssocOfStaAgeCount.setDescription('Description.')
hwMacDisAssocOfApUnableHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDisAssocOfApUnableHandleCount.setStatus('current')
if mibBuilder.loadTexts: hwMacDisAssocOfApUnableHandleCount.setDescription('Description.')
hwMacDisAssocOfOtherReasonsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDisAssocOfOtherReasonsCount.setStatus('current')
if mibBuilder.loadTexts: hwMacDisAssocOfOtherReasonsCount.setDescription('Description.')
hwMacAssocRequestCntByResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAssocRequestCntByResource.setStatus('current')
if mibBuilder.loadTexts: hwMacAssocRequestCntByResource.setDescription('Description.')
hwMacStaExceptionalOfflineCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaExceptionalOfflineCnt.setStatus('current')
if mibBuilder.loadTexts: hwMacStaExceptionalOfflineCnt.setDescription('Description.')
hwMacReAssociationSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacReAssociationSuccessCount.setStatus('current')
if mibBuilder.loadTexts: hwMacReAssociationSuccessCount.setDescription('Description.')
hwMacBSSNotSupportAssocFailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBSSNotSupportAssocFailCount.setStatus('current')
if mibBuilder.loadTexts: hwMacBSSNotSupportAssocFailCount.setDescription('Description.')
hwMacStaAccessRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAccessRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAccessRequestCount.setDescription('Description.')
hwMacStaAccessRequestFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAccessRequestFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAccessRequestFailedCount.setDescription('Description.')
hwMacStaAuthenRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAuthenRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAuthenRequestCount.setDescription('Description.')
hwMacStaAuthenRequestFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAuthenRequestFailedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAuthenRequestFailedCount.setDescription('Description.')
hwMacRefusedStaNumByResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRefusedStaNumByResource.setStatus('current')
if mibBuilder.loadTexts: hwMacRefusedStaNumByResource.setDescription('Description.')
hwMacStaAssocAndReAssocRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAssocAndReAssocRequestCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAssocAndReAssocRequestCount.setDescription('Count of station association and reassociation request base on AP MAC.')
hwMacStaAuthenRequestSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaAuthenRequestSuccessCount.setStatus('current')
if mibBuilder.loadTexts: hwMacStaAuthenRequestSuccessCount.setDescription('Count of hwMacStaAuthenRequestSuccessCount base on Portal authentification successful.')
hwMacL3RoamInStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacL3RoamInStationCount.setStatus('current')
if mibBuilder.loadTexts: hwMacL3RoamInStationCount.setDescription('It means count of station roamed to the AP for L3, not include roaming between different service sets for one AP.')
hwMacL3RoamOutStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 18, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacL3RoamOutStationCount.setStatus('current')
if mibBuilder.loadTexts: hwMacL3RoamOutStationCount.setDescription('It means count of station roamed from the AP for L3, not include roaming between different service sets for one AP.')
hwVapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 19), )
if mibBuilder.loadTexts: hwVapConfigTable.setStatus('current')
if mibBuilder.loadTexts: hwVapConfigTable.setDescription('This Table is invalid!')
hwVapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 19, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaRadioId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaEssName"))
if mibBuilder.loadTexts: hwVapConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hwVapConfigEntry.setDescription('Description.')
hwVapOptValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVapOptValue.setStatus('current')
if mibBuilder.loadTexts: hwVapOptValue.setDescription('The value only can be seted as 0 or 1,0 means switch disable and 1 means switch enable.')
hwSsidStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20), )
if mibBuilder.loadTexts: hwSsidStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticTable.setDescription('Description.')
hwSsidStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwSsidStatisticApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwSsidStatisticRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwSsidStatisticEssSsid"))
if mibBuilder.loadTexts: hwSsidStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticEntry.setDescription('Description.')
hwSsidStatisticApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: hwSsidStatisticApIndex.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticApIndex.setDescription('Description.')
hwSsidStatisticRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 2), Integer32())
if mibBuilder.loadTexts: hwSsidStatisticRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticRadioIndex.setDescription('Description.')
hwSsidStatisticEssSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 3), OctetString())
if mibBuilder.loadTexts: hwSsidStatisticEssSsid.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticEssSsid.setDescription('Description.')
hwSsidAirportRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportRecvBytes.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportRecvBytes.setDescription('Description.')
hwSsidAirportRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportRecvErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportRecvErrorFrames.setDescription('Description.')
hwSsidAirportRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportRecvFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportRecvFrames.setDescription('Description.')
hwSsidAirportRecvUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportRecvUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportRecvUnicastFrames.setDescription('Description.')
hwSsidAirportRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportRecvDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportRecvDropFrames.setDescription('Description.')
hwSsidAirportTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportTransmitBytes.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportTransmitBytes.setDescription('Description.')
hwSsidAirportTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportTransmitErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportTransmitErrorFrames.setDescription('Description.')
hwSsidAirportTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportTransmitFrames.setDescription('Description.')
hwSsidAirportTransmitUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportTransmitUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportTransmitUnicastFrames.setDescription('Description.')
hwSsidAirportTransmitDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportTransmitDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportTransmitDropFrames.setDescription('Description.')
hwSsidAirportDownReTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportDownReTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportDownReTransmitFrames.setDescription('Description.')
hwSsidCurrentStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidCurrentStaNum.setStatus('current')
if mibBuilder.loadTexts: hwSsidCurrentStaNum.setDescription('Description.')
hwSsidAirportNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportNoise.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportNoise.setDescription('Description.')
hwSsidAirportSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 20, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSsidAirportSNR.setStatus('current')
if mibBuilder.loadTexts: hwSsidAirportSNR.setDescription('Description.')
hwMacSsidStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21), )
if mibBuilder.loadTexts: hwMacSsidStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticTable.setDescription('Description.')
hwMacSsidStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidStatisticApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidStatisticRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidStatisticEssSsid"))
if mibBuilder.loadTexts: hwMacSsidStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticEntry.setDescription('Description.')
hwMacSsidStatisticApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacSsidStatisticApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticApMac.setDescription('Description.')
hwMacSsidStatisticRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacSsidStatisticRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticRadioIndex.setDescription('Description.')
hwMacSsidStatisticEssSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 3), OctetString())
if mibBuilder.loadTexts: hwMacSsidStatisticEssSsid.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticEssSsid.setDescription('Description.')
hwMacSsidAirportRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportRecvBytes.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportRecvBytes.setDescription('Description.')
hwMacSsidAirportRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportRecvErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportRecvErrorFrames.setDescription('Description.')
hwMacSsidAirportRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportRecvFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportRecvFrames.setDescription('Description.')
hwMacSsidAirportRecvUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportRecvUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportRecvUnicastFrames.setDescription('Description.')
hwMacSsidAirportRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportRecvDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportRecvDropFrames.setDescription('Description.')
hwMacSsidAirportTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportTransmitBytes.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportTransmitBytes.setDescription('Description.')
hwMacSsidAirportTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportTransmitErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportTransmitErrorFrames.setDescription('Description.')
hwMacSsidAirportTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportTransmitFrames.setDescription('Description.')
hwMacSsidAirportTransmitUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportTransmitUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportTransmitUnicastFrames.setDescription('Description.')
hwMacSsidAirportTransmitDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportTransmitDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportTransmitDropFrames.setDescription('Description.')
hwMacSsidAirportDownReTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportDownReTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportDownReTransmitFrames.setDescription('Description.')
hwMacSsidCurrentStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidCurrentStaNum.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidCurrentStaNum.setDescription('Description.')
hwMacSsidAirportNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportNoise.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportNoise.setDescription('Description.')
hwMacSsidAirportSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 21, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSsidAirportSNR.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidAirportSNR.setDescription('Description.')
hwMacApStaAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 22), )
if mibBuilder.loadTexts: hwMacApStaAccessControlTable.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlTable.setDescription('Description.')
hwMacApStaAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 22, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaAccessControlApMac"))
if mibBuilder.loadTexts: hwMacApStaAccessControlEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlEntry.setDescription('Description.')
hwMacApStaAccessControlApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 22, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacApStaAccessControlApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlApMac.setDescription('Description.')
hwMacApStaAccessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 22, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApStaAccessControlMode.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlMode.setDescription('Description.')
hwMacApStaAccessControlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 22, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApStaAccessControlRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlRowStatus.setDescription('Description.')
hwApStaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23), )
if mibBuilder.loadTexts: hwApStaInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwApStaInfoTable.setDescription('Description.')
hwApStaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaApId"))
if mibBuilder.loadTexts: hwApStaInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwApStaInfoEntry.setDescription('Description.')
hwStaMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaMAC.setStatus('current')
if mibBuilder.loadTexts: hwStaMAC.setDescription('Description.')
hwStaIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaIPAddress.setStatus('current')
if mibBuilder.loadTexts: hwStaIPAddress.setDescription('Description.')
hwStaWMMAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWMMAttr.setStatus('current')
if mibBuilder.loadTexts: hwStaWMMAttr.setDescription('Description.')
hwStaRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRadioMode.setStatus('current')
if mibBuilder.loadTexts: hwStaRadioMode.setDescription('Description.')
hwStaRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaRadioChannel.setStatus('current')
if mibBuilder.loadTexts: hwStaRadioChannel.setDescription('Description.')
hwAPTxRates = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPTxRates.setStatus('current')
if mibBuilder.loadTexts: hwAPTxRates.setDescription('Description.')
hwStaPowerSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaPowerSaveMode.setStatus('current')
if mibBuilder.loadTexts: hwStaPowerSaveMode.setDescription('Description.')
hwStaVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaVlanId.setStatus('current')
if mibBuilder.loadTexts: hwStaVlanId.setDescription('Description.')
hwStaSSIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaSSIDName.setStatus('current')
if mibBuilder.loadTexts: hwStaSSIDName.setDescription('Description.')
hwApStaTxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaTxPacket.setStatus('current')
if mibBuilder.loadTexts: hwApStaTxPacket.setDescription('Description.')
hwApStaRxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaRxPacket.setStatus('current')
if mibBuilder.loadTexts: hwApStaRxPacket.setDescription('Description.')
hwApStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaStatus.setStatus('current')
if mibBuilder.loadTexts: hwApStaStatus.setDescription('Description.')
hwApStaBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaBssid.setStatus('current')
if mibBuilder.loadTexts: hwApStaBssid.setDescription('Description.')
hwApStaRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaRssi.setStatus('current')
if mibBuilder.loadTexts: hwApStaRssi.setDescription('Description.')
hwApStaSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 23, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaSnr.setStatus('current')
if mibBuilder.loadTexts: hwApStaSnr.setDescription('Description.')
hwMacApStaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24), )
if mibBuilder.loadTexts: hwMacApStaInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaInfoTable.setDescription('Description.')
hwMacApStaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaApMac"))
if mibBuilder.loadTexts: hwMacApStaInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaInfoEntry.setDescription('Description.')
hwMacStaMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaMAC.setStatus('current')
if mibBuilder.loadTexts: hwMacStaMAC.setDescription('Description.')
hwMacStaIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaIPAddress.setStatus('current')
if mibBuilder.loadTexts: hwMacStaIPAddress.setDescription('Description.')
hwMacStaWMMAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaWMMAttr.setStatus('current')
if mibBuilder.loadTexts: hwMacStaWMMAttr.setDescription('Description.')
hwMacStaRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaRadioMode.setStatus('current')
if mibBuilder.loadTexts: hwMacStaRadioMode.setDescription('Description.')
hwMacStaRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaRadioChannel.setStatus('current')
if mibBuilder.loadTexts: hwMacStaRadioChannel.setDescription('Description.')
hwMacAPTxRates = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPTxRates.setStatus('current')
if mibBuilder.loadTexts: hwMacAPTxRates.setDescription('Description.')
hwMacStaPowerSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaPowerSaveMode.setStatus('current')
if mibBuilder.loadTexts: hwMacStaPowerSaveMode.setDescription('Description.')
hwMacStaVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaVlanId.setStatus('current')
if mibBuilder.loadTexts: hwMacStaVlanId.setDescription('Description.')
hwMacStaSSIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacStaSSIDName.setStatus('current')
if mibBuilder.loadTexts: hwMacStaSSIDName.setDescription('Description.')
hwMacApStaTxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaTxPacket.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaTxPacket.setDescription('Description.')
hwMacApStaRxPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaRxPacket.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaRxPacket.setDescription('Description.')
hwMacApStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaStatus.setDescription('Description.')
hwMacApStaBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaBssid.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaBssid.setDescription('Description.')
hwMacApStaRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaRssi.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaRssi.setDescription('Description.')
hwMacApStaSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 24, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApStaSnr.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaSnr.setDescription('Description.')
hwInterACRoamingInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 25))
hwInterACRoamingInSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 25, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwInterACRoamingInSuccCnt.setStatus('current')
if mibBuilder.loadTexts: hwInterACRoamingInSuccCnt.setDescription('Description.')
hwInterACRoamingOutSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 25, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwInterACRoamingOutSuccCnt.setStatus('current')
if mibBuilder.loadTexts: hwInterACRoamingOutSuccCnt.setDescription('Description.')
hwRadioStaListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26), )
if mibBuilder.loadTexts: hwRadioStaListTable.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaListTable.setDescription('Description.')
hwRadioStaListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaApId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaRadioId"))
if mibBuilder.loadTexts: hwRadioStaListEntry.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaListEntry.setDescription('Description.')
hwRadioStaApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwRadioStaApId.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaApId.setDescription('Description.')
hwRadioStaRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwRadioStaRadioId.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaRadioId.setDescription('Description.')
hwRadioStaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRadioStaNumber.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaNumber.setDescription('Description.')
hwRadioStaMacList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRadioStaMacList.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaMacList.setDescription('Description.')
hwRadioStaTotalAssociatedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRadioStaTotalAssociatedCount.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaTotalAssociatedCount.setDescription('Description.')
hwRadioStaAccessReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 26, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRadioStaAccessReqCount.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaAccessReqCount.setDescription('Description.')
hwMacRadioStaListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27), )
if mibBuilder.loadTexts: hwMacRadioStaListTable.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaListTable.setDescription('Description.')
hwMacRadioStaListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaRadioId"))
if mibBuilder.loadTexts: hwMacRadioStaListEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaListEntry.setDescription('Description.')
hwMacRadioStaApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacRadioStaApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaApMac.setDescription('Description.')
hwMacRadioStaRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwMacRadioStaRadioId.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaRadioId.setDescription('Description.')
hwMacRadioStaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRadioStaNumber.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaNumber.setDescription('Description.')
hwMacRadioStaMacList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRadioStaMacList.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaMacList.setDescription('Description.')
hwMacRadioStaTotalAssociatedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRadioStaTotalAssociatedCount.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaTotalAssociatedCount.setDescription('Description.')
hwMacRadioStaAccessReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 27, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRadioStaAccessReqCount.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaAccessReqCount.setDescription('Description.')
hwBridgeProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28), )
if mibBuilder.loadTexts: hwBridgeProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileTable.setDescription('Description.')
hwBridgeProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileName"))
if mibBuilder.loadTexts: hwBridgeProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileEntry.setDescription('Description.')
hwBridgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwBridgeProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileName.setDescription('Description.')
hwBridgeProfileBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBridgeProfileBridgeName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileBridgeName.setDescription('Description.')
hwBridgeProfileSecurityProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBridgeProfileSecurityProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileSecurityProfileName.setDescription('Description.')
hwBridgeProfileVlanTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeProfileVlanTagged.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileVlanTagged.setDescription('Description.')
hwBridgeProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileRowStatus.setDescription('Description.')
hwBridgeProfileDhcpTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeProfileDhcpTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileDhcpTrustPort.setDescription('Description.')
hwBridgeProfileNdTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 28, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeProfileNdTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileNdTrustPort.setDescription('Description.')
hwBridgeVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29), )
if mibBuilder.loadTexts: hwBridgeVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapManagementTable.setDescription('Description.')
hwBridgeVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapBridgeProfileName"))
if mibBuilder.loadTexts: hwBridgeVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapManagementEntry.setDescription('Description.')
hwBridgeVapApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1, 1), Integer32())
if mibBuilder.loadTexts: hwBridgeVapApIndex.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapApIndex.setDescription('Description.')
hwBridgeVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1, 2), Integer32())
if mibBuilder.loadTexts: hwBridgeVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapRadioIndex.setDescription('Description.')
hwBridgeVapBridgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwBridgeVapBridgeProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapBridgeProfileName.setDescription('Description.')
hwBridgeVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapRowStatus.setDescription('Description.')
hwBridgeVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 29, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapBssid.setDescription('Description.')
hwMacBridgeVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30), )
if mibBuilder.loadTexts: hwMacBridgeVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapManagementTable.setDescription('Description.')
hwMacBridgeVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapBridgeProfileName"))
if mibBuilder.loadTexts: hwMacBridgeVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapManagementEntry.setDescription('Description.')
hwMacBridgeVapApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacBridgeVapApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapApMac.setDescription('Description.')
hwMacBridgeVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacBridgeVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapRadioIndex.setDescription('Description.')
hwMacBridgeVapBridgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMacBridgeVapBridgeProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapBridgeProfileName.setDescription('Description.')
hwMacBridgeVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacBridgeVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapRowStatus.setDescription('Description.')
hwMacBridgeVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 30, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapBssid.setDescription('Description.')
hwBridgeLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31), )
if mibBuilder.loadTexts: hwBridgeLinkTable.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkTable.setDescription('Description.')
hwBridgeLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkIndex"))
if mibBuilder.loadTexts: hwBridgeLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkEntry.setDescription('Description.')
hwBridgeLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 1), Integer32())
if mibBuilder.loadTexts: hwBridgeLinkIndex.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkIndex.setDescription('Description.')
hwBridgeLinkWlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkWlanID.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkWlanID.setDescription('Description.')
hwBridgeLinkBridgeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkBridgeType.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkBridgeType.setDescription('Description.')
hwBridgeLinkBridgeSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkBridgeSubType.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkBridgeSubType.setDescription('Description.')
hwBridgeLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkPeerMac.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkPeerMac.setDescription('Description.')
hwBridgeLinkBridgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkBridgeProfileName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkBridgeProfileName.setDescription('Description.')
hwBridgeLinkStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkStpMode.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkStpMode.setDescription('Description.')
hwBridgeLinkInstanceIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkInstanceIdList.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkInstanceIdList.setDescription('Description.')
hwBridgeLinkInstanceStateList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkInstanceStateList.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkInstanceStateList.setDescription('Description.')
hwBridgeLinkApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkApMac.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkApMac.setDescription('It means local ap mac.')
hwBridgeLinkBridgeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("middle", 1), ("root", 2), ("leaf", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkBridgeMode.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkBridgeMode.setDescription('It means bridge mode for local AP.')
hwBridgeLinkCoverageDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkCoverageDistance.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkCoverageDistance.setDescription('It means coverage distance for loacal ap.')
hwBridgeLinkPeerAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkPeerAPID.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkPeerAPID.setDescription('It means peer AP ID.')
hwBridgeLinkPeerAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("idle", 1), ("autoFind", 2), ("typeNotMatch", 3), ("verMismatch", 4), ("fault", 5), ("config", 6), ("commitFailed", 7), ("download", 8), ("standby", 9), ("normal", 10), ("committing", 11), ("configFailed", 12), ("invalid", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkPeerAPStatus.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkPeerAPStatus.setDescription('It means peer AP status.')
hwBridgeLinkMaxRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkMaxRssi.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkMaxRssi.setDescription('It means max rssi.')
hwBridgeLinkRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkRssi.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkRssi.setDescription('It means current rssi.')
hwBridgeLinkPeerApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkPeerApMac.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkPeerApMac.setDescription('It means peer AP mac.')
hwBridgeLinkChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 31, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBridgeLinkChannelID.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkChannelID.setDescription('It means the current channel id.')
hwMacBridgeLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32), )
if mibBuilder.loadTexts: hwMacBridgeLinkTable.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkTable.setDescription('It means bridge link table.')
hwMacBridgeLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkIndex"))
if mibBuilder.loadTexts: hwMacBridgeLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkEntry.setDescription('Description.')
hwMacBridgeLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacBridgeLinkIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkIndex.setDescription('It means bridge link index.')
hwMacBridgeLinkWlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkWlanID.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkWlanID.setDescription('It means bridge link wlan id.')
hwMacBridgeLinkBridgeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeType.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeType.setDescription('It means bridge link type.')
hwMacBridgeLinkBridgeSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeSubType.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeSubType.setDescription('It means bridge link subtype.')
hwMacBridgeLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkPeerMac.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkPeerMac.setDescription('It means peer bssid.')
hwMacBridgeLinkBridgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeProfileName.setDescription('It means bridge profile name.')
hwMacBridgeLinkStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkStpMode.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkStpMode.setDescription('It means stp mode.')
hwMacBridgeLinkInstanceIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkInstanceIdList.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkInstanceIdList.setDescription('Description.')
hwMacBridgeLinkInstanceStateList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkInstanceStateList.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkInstanceStateList.setDescription('Description.')
hwMacBridgeLinkApID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkApID.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkApID.setDescription('It means AP ID.')
hwMacBridgeLinkBridgeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("middle", 1), ("root", 2), ("leaf", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeMode.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkBridgeMode.setDescription('It means bridge mode for local AP.')
hwMacBridgeLinkCoverageDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkCoverageDistance.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkCoverageDistance.setDescription('It means coverage distance for local AP.')
hwMacBridgeLinkPeerAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkPeerAPID.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkPeerAPID.setDescription('It means peer AP ID.')
hwMacBridgeLinkPeerAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("idle", 1), ("autoFind", 2), ("typeNotMatch", 3), ("verMismatch", 4), ("fault", 5), ("config", 6), ("commitFailed", 7), ("download", 8), ("standby", 9), ("normal", 10), ("committing", 11), ("configFailed", 12), ("invalid", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkPeerAPStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkPeerAPStatus.setDescription('It means peer AP status.')
hwMacBridgeLinkMaxRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkMaxRssi.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkMaxRssi.setDescription('It means max rssi.')
hwMacBridgeLinkRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkRssi.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkRssi.setDescription('It means rssi.')
hwMacBridgeLinkPeerApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeLinkPeerApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkPeerApMac.setDescription('It means peer AP mac.')
hwMacBridgeChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 32, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBridgeChannelID.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeChannelID.setDescription('It means the current channel id.')
hwBridgeWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 33), )
if mibBuilder.loadTexts: hwBridgeWhitelistTable.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistTable.setDescription('Description.')
hwBridgeWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 33, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwBridgeWhitelistName"))
if mibBuilder.loadTexts: hwBridgeWhitelistEntry.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistEntry.setDescription('Description.')
hwBridgeWhitelistName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 33, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwBridgeWhitelistName.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistName.setDescription('Description.')
hwBridgeWhitelistPeerList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 33, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 89))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBridgeWhitelistPeerList.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistPeerList.setDescription('Description.')
hwBridgeWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 33, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBridgeWhitelistRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistRowStatus.setDescription('Description.')
hwWirelessSsidStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34), )
if mibBuilder.loadTexts: hwWirelessSsidStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidStatisticTable.setDescription('Description.')
hwWirelessSsidStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidStatisticEssSsid"))
if mibBuilder.loadTexts: hwWirelessSsidStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidStatisticEntry.setDescription('Description.')
hwWirelessSsidStatisticEssSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 1), OctetString())
if mibBuilder.loadTexts: hwWirelessSsidStatisticEssSsid.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidStatisticEssSsid.setDescription('Description.')
hwWirelessSsidAirportTransmitUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitUnicastFrames.setDescription('Description.')
hwWirelessSsidAirportTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitFrames.setDescription('Description.')
hwWirelessSsidAirportTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitErrorFrames.setDescription('Description.')
hwWirelessSsidAirportDownReTransmitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportDownReTransmitFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportDownReTransmitFrames.setDescription('Description.')
hwWirelessSsidAirportTransmitDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitDropFrames.setDescription('Description.')
hwWirelessSsidAirportTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitBytes.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportTransmitBytes.setDescription('Description.')
hwWirelessSsidAirportRecvUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvUnicastFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvUnicastFrames.setDescription('Description.')
hwWirelessSsidAirportRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvFrames.setDescription('Description.')
hwWirelessSsidAirportRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvErrorFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvErrorFrames.setDescription('Description.')
hwWirelessSsidAirportRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvDropFrames.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvDropFrames.setDescription('Description.')
hwWirelessSsidAirportRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvBytes.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidAirportRecvBytes.setDescription('Description.')
hwWirelessSsidTotalAssociatedSuccessStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidTotalAssociatedSuccessStationCount.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidTotalAssociatedSuccessStationCount.setDescription('Description.')
hwWirelessSsidCurAssocStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidCurAssocStationCount.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidCurAssocStationCount.setDescription('Description.')
hwWirelessSsidTotalAssociatedFailedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 34, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWirelessSsidTotalAssociatedFailedStationCount.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidTotalAssociatedFailedStationCount.setDescription('Description.')
hwStaBlacklistProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35), )
if mibBuilder.loadTexts: hwStaBlacklistProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileTable.setDescription('Description.')
hwStaBlacklistProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileName"))
if mibBuilder.loadTexts: hwStaBlacklistProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileEntry.setDescription('Description.')
hwStaBlacklistProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwStaBlacklistProfileName.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileName.setDescription('Description.')
hwStaBlacklistProfileStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaBlacklistProfileStaMac.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileStaMac.setDescription('Description.')
hwStaBlacklistProfileOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaBlacklistProfileOper.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileOper.setDescription('Delete station mac: 1 Add station mac: 2')
hwStaBlacklistProfileStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaBlacklistProfileStaNum.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileStaNum.setDescription('Description.')
hwStaBlacklistProfileStaList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaBlacklistProfileStaList.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileStaList.setDescription('Description.')
hwStaBlacklistProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 35, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaBlacklistProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileRowStatus.setDescription('Description.')
hwStaWhitelistProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36), )
if mibBuilder.loadTexts: hwStaWhitelistProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileTable.setDescription('Description.')
hwStaWhitelistProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileName"))
if mibBuilder.loadTexts: hwStaWhitelistProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileEntry.setDescription('Description.')
hwStaWhitelistProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwStaWhitelistProfileName.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileName.setDescription('Description.')
hwStaWhitelistProfileStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaWhitelistProfileStaMac.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileStaMac.setDescription('Description.')
hwStaWhitelistProfileOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaWhitelistProfileOper.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileOper.setDescription('Delete station mac: 1 Add station mac: 2')
hwStaWhitelistProfileStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWhitelistProfileStaNum.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileStaNum.setDescription('Description.')
hwStaWhitelistProfileStaList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaWhitelistProfileStaList.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileStaList.setDescription('Description.')
hwStaWhitelistProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 36, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStaWhitelistProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileRowStatus.setDescription('Description.')
hwMeshProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37), )
if mibBuilder.loadTexts: hwMeshProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileTable.setDescription('Description.')
hwMeshProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileName"))
if mibBuilder.loadTexts: hwMeshProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileEntry.setDescription('Description.')
hwMeshProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMeshProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileName.setDescription('Description.')
hwMeshProfileSecurityProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMeshProfileSecurityProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileSecurityProfileName.setDescription('Description.')
hwMeshProfileMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMeshProfileMeshID.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileMeshID.setDescription('Description.')
hwMeshProfileMaxLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileMaxLinkNum.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileMaxLinkNum.setDescription('Description.')
hwMeshProfileRssiThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -20)).clone(-75)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileRssiThreshold.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileRssiThreshold.setDescription('It means the rssi threshold when the mesh links build or hold.')
hwMeshProfileReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(30)).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileReportInterval.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileReportInterval.setDescription('Description.')
hwMeshProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileRowStatus.setDescription('Description.')
hwMeshProfileDhcpTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileDhcpTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileDhcpTrustPort.setDescription('Description.')
hwMeshProfileNdTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileNdTrustPort.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileNdTrustPort.setDescription('Description.')
hwMeshProfileQuickHoSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileQuickHoSwitch.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileQuickHoSwitch.setDescription('It means quick handover switch.')
hwMeshProfileLinkHoThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 70)).clone(10)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileLinkHoThreshold.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileLinkHoThreshold.setDescription('It means handover switch when the rssi reach threshold, it happens.')
hwMeshProfileLinkHoldPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 60000)).clone(4000)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileLinkHoldPeriod.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileLinkHoldPeriod.setDescription('It means link hold period.')
hwMeshProfileLinkLinkSaturationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, 0)).clone(-20)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileLinkLinkSaturationThreshold.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileLinkLinkSaturationThreshold.setDescription('It means the rssi link saturation threshold.')
hwMeshProfileLinkProbePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 6000)).clone(100)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileLinkProbePeriod.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileLinkProbePeriod.setDescription('It means link probe period.')
hwMeshProfileFwaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileFwaMode.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileFwaMode.setDescription('Description.')
hwMeshProfileFwaEdcaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileFwaEdcaMode.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileFwaEdcaMode.setDescription('The AP automatically adjusts EDCA parameters based on the number of NPEs or uses the EDCA parameters configured in the WMM profile.')
hwMeshProfileQuickHandoverMinRssiThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -20)).clone(-60)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileQuickHandoverMinRssiThreshold.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileQuickHandoverMinRssiThreshold.setDescription('It means mini rssi threshold of active links.')
hwMeshProfileLocationBasedHandoverAlgorithmSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileLocationBasedHandoverAlgorithmSwitch.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileLocationBasedHandoverAlgorithmSwitch.setDescription('It means handover algorithm switch based on location.')
hwMeshProfileMovingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("backward", 2), ("undetermined", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileMovingDirection.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileMovingDirection.setDescription('It means moving direction.')
hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime.setDescription('It means handover algorithm p-n criteria observe time.')
hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime.setDescription('It means handover algorithm p-n criteria qualify time.')
hwMeshProfileUrgentHandoverLowRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1300)).clone(10)).setUnits('Mbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverLowRateThreshold.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverLowRateThreshold.setDescription('It means rate threshold of the low rate urgent handover.')
hwMeshProfileUrgentHandoverLowRatePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(2000)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverLowRatePeriod.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverLowRatePeriod.setDescription('It means urgent handover low rate period.')
hwMeshProfileUrgentHandoverPunishmentPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(2000)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverPunishmentPeriod.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverPunishmentPeriod.setDescription('It means urgent handover punishment period.')
hwMeshProfileUrgentHandoverPunishmentRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 37, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(10)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverPunishmentRssi.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileUrgentHandoverPunishmentRssi.setDescription('It means urgent handover punishment severity.')
hwMeshVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38), )
if mibBuilder.loadTexts: hwMeshVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapManagementTable.setDescription('Description.')
hwMeshVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapMeshProfileName"))
if mibBuilder.loadTexts: hwMeshVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapManagementEntry.setDescription('Description.')
hwMeshVapApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMeshVapApIndex.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapApIndex.setDescription('Description.')
hwMeshVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMeshVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapRadioIndex.setDescription('Description.')
hwMeshVapMeshProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMeshVapMeshProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapMeshProfileName.setDescription('Description.')
hwMeshVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMeshVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapRowStatus.setDescription('Description.')
hwMeshVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 38, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapBssid.setDescription('Description.')
hwMacMeshVapManagementTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39), )
if mibBuilder.loadTexts: hwMacMeshVapManagementTable.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapManagementTable.setDescription('Description.')
hwMacMeshVapManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapMeshProfileName"))
if mibBuilder.loadTexts: hwMacMeshVapManagementEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapManagementEntry.setDescription('Description.')
hwMacMeshVapApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacMeshVapApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapApMac.setDescription('Description.')
hwMacMeshVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacMeshVapRadioIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapRadioIndex.setDescription('Description.')
hwMacMeshVapMeshProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMacMeshVapMeshProfileName.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapMeshProfileName.setDescription('Description.')
hwMacMeshVapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacMeshVapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapRowStatus.setDescription('Description.')
hwMacMeshVapBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 39, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshVapBssid.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapBssid.setDescription('Description.')
hwMeshLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40), )
if mibBuilder.loadTexts: hwMeshLinkTable.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkTable.setDescription('Description.')
hwMeshLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapApIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkIndex"))
if mibBuilder.loadTexts: hwMeshLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkEntry.setDescription('Description.')
hwMeshLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMeshLinkIndex.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkIndex.setDescription('Description.')
hwMeshLinkWlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkWlanID.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkWlanID.setDescription('Description.')
hwMeshLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkPeerMac.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkPeerMac.setDescription('Description.')
hwMeshLinkChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkChannelID.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkChannelID.setDescription('Description.')
hwMeshLinkRssiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkRssiValue.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkRssiValue.setDescription('Description.')
hwMeshLinkApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkApMac.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkApMac.setDescription('It means AP mac.')
hwMeshLinkMeshRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("meshNode", 1), ("meshPortal", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkMeshRole.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkMeshRole.setDescription('It means mesh role.')
hwMeshLinkCoverageDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkCoverageDistance.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkCoverageDistance.setDescription('It means coverage distance.')
hwMeshLinkPeerAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkPeerAPID.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkPeerAPID.setDescription('It means peer AP ID.')
hwMeshLinkPeerAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("idle", 1), ("autoFind", 2), ("typeNotMatch", 3), ("verMismatch", 4), ("fault", 5), ("config", 6), ("commitFailed", 7), ("download", 8), ("standby", 9), ("normal", 10), ("committing", 11), ("configFailed", 12), ("invalid", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkPeerAPStatus.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkPeerAPStatus.setDescription('It means peer AP status.')
hwMeshLinkMaxRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkMaxRssi.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkMaxRssi.setDescription('It means max rssi.')
hwMeshLinkPeerApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 40, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMeshLinkPeerApMac.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkPeerApMac.setDescription('It means peer ap mac.')
hwMacMeshLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41), )
if mibBuilder.loadTexts: hwMacMeshLinkTable.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkTable.setDescription('Description.')
hwMacMeshLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapApMac"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapRadioIndex"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkIndex"))
if mibBuilder.loadTexts: hwMacMeshLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkEntry.setDescription('Description.')
hwMacMeshLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacMeshLinkIndex.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkIndex.setDescription('Description.')
hwMacMeshLinkWlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkWlanID.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkWlanID.setDescription('Description.')
hwMacMeshLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkPeerMac.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkPeerMac.setDescription('Description.')
hwMacMeshLinkChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkChannelID.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkChannelID.setDescription('Description.')
hwMacMeshLinkRssiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkRssiValue.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkRssiValue.setDescription('Description.')
hwMacMeshLinkApID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkApID.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkApID.setDescription('It means AP ID.')
hwMacMeshLinkMeshRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("meshNode", 1), ("meshPortal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkMeshRole.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkMeshRole.setDescription('It means mesh role.')
hwMacMeshLinkCoverageDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkCoverageDistance.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkCoverageDistance.setDescription('It means coverage distance.')
hwMacMeshLinkPeerAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkPeerAPID.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkPeerAPID.setDescription('It means peer AP ID.')
hwMacMeshLinkPeerAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("idle", 1), ("autoFind", 2), ("typeNotMatch", 3), ("verMismatch", 4), ("fault", 5), ("config", 6), ("commitFailed", 7), ("download", 8), ("standby", 9), ("normal", 10), ("committing", 11), ("configFailed", 12), ("invalid", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkPeerAPStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkPeerAPStatus.setDescription('It means peer AP status.')
hwMacMeshLinkMaxRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkMaxRssi.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkMaxRssi.setDescription('It means max rssi.')
hwMacMeshLinkPeerApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 41, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacMeshLinkPeerApMac.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkPeerApMac.setDescription('It means peer AP mac.')
hwMeshWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 42), )
if mibBuilder.loadTexts: hwMeshWhitelistTable.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistTable.setDescription('Description.')
hwMeshWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 42, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwMeshWhitelistName"))
if mibBuilder.loadTexts: hwMeshWhitelistEntry.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistEntry.setDescription('Description.')
hwMeshWhitelistName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 42, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMeshWhitelistName.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistName.setDescription('Description.')
hwMeshWhitelistPeerList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 42, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8193))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMeshWhitelistPeerList.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistPeerList.setDescription('Description.')
hwMeshWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 42, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMeshWhitelistRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistRowStatus.setDescription('Description.')
hwWlanServiceManagementObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43))
hwLbsTagDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1), )
if mibBuilder.loadTexts: hwLbsTagDevTable.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevTable.setDescription('Tag device management')
hwLbsTagDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevApID"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevMac"))
if mibBuilder.loadTexts: hwLbsTagDevEntry.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevEntry.setDescription('Description.')
hwLbsTagDevApID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwLbsTagDevApID.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevApID.setDescription('Description.')
hwLbsTagDevMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: hwLbsTagDevMac.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevMac.setDescription('Description.')
hwLbsTagDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLbsTagDevType.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevType.setDescription('Tag Type: 1 - AeroScout, 2 - Ekahau')
hwLbsTagDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLbsTagDevChannel.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevChannel.setDescription('Description.')
hwLbsTagDevRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLbsTagDevRssi.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevRssi.setDescription('Description.')
hwProxyTrackSideEquipTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2), )
if mibBuilder.loadTexts: hwProxyTrackSideEquipTable.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipTable.setDescription('the table means proxy track side equipment info.')
hwProxyTrackSideEquipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwProxyTrackSideEquipIndex"))
if mibBuilder.loadTexts: hwProxyTrackSideEquipEntry.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipEntry.setDescription('Description.')
hwProxyTrackSideEquipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwProxyTrackSideEquipIndex.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipIndex.setDescription('It means proxy track side equipment index.')
hwProxyTrackSideEquipMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwProxyTrackSideEquipMac.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipMac.setDescription('It means the mac address of proxy track side equipment.')
hwProxyTrackSideEquipVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwProxyTrackSideEquipVlanID.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipVlanID.setDescription('It means the vlan id of proxy track side equipment.')
hwProxyTrackSideEquipRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwProxyTrackSideEquipRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipRowStatus.setDescription('It means row status of the table.')
hwProxyOnBoardEquipTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3), )
if mibBuilder.loadTexts: hwProxyOnBoardEquipTable.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipTable.setDescription('It means proxy on-board equipment table.')
hwProxyOnBoardEquipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwProxyOnBoardEquipIndex"))
if mibBuilder.loadTexts: hwProxyOnBoardEquipEntry.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipEntry.setDescription('It means proxy on-board equipment entry.')
hwProxyOnBoardEquipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwProxyOnBoardEquipIndex.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipIndex.setDescription('It means proxy on-board equipment index.')
hwProxyOnBoardEquipMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwProxyOnBoardEquipMac.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipMac.setDescription('It means mac address of proxy on-board equipment.')
hwProxyOnBoardEquipVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwProxyOnBoardEquipVlanID.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipVlanID.setDescription('It means vlan id of the proxy on-board equipment.')
hwProxyOnBoardEquipRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwProxyOnBoardEquipRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipRowStatus.setDescription('It means row status of table.')
hwHandoverTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4), )
if mibBuilder.loadTexts: hwHandoverTraceTable.setStatus('current')
if mibBuilder.loadTexts: hwHandoverTraceTable.setDescription('It means handover trace table of mesh.')
hwHandoverTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwHandoverTraceIndex"))
if mibBuilder.loadTexts: hwHandoverTraceEntry.setStatus('current')
if mibBuilder.loadTexts: hwHandoverTraceEntry.setDescription('Description.')
hwHandoverTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hwHandoverTraceIndex.setStatus('current')
if mibBuilder.loadTexts: hwHandoverTraceIndex.setDescription('It means handover trace index.')
hwHandoverTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverTimeStamp.setStatus('current')
if mibBuilder.loadTexts: hwHandoverTimeStamp.setDescription('It means the time stamp of handover trace.')
hwHandoverFromApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverFromApMac.setStatus('current')
if mibBuilder.loadTexts: hwHandoverFromApMac.setDescription('It means the mac address of source AP for handover trace.')
hwHandoverFromApRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverFromApRssi.setStatus('current')
if mibBuilder.loadTexts: hwHandoverFromApRssi.setDescription('It means the rssi of source AP for handover trace.')
hwHandoverToApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverToApMac.setStatus('current')
if mibBuilder.loadTexts: hwHandoverToApMac.setDescription('It means the mac address of destination AP for handover trace.')
hwHandoverToApRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverToApRssi.setStatus('current')
if mibBuilder.loadTexts: hwHandoverToApRssi.setDescription('It means the rssi of destination AP for handover trace.')
hwHandoverFromApLocationID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverFromApLocationID.setStatus('current')
if mibBuilder.loadTexts: hwHandoverFromApLocationID.setDescription('It means the location ID of sourse ap.')
hwHandoverToApLocationID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwHandoverToApLocationID.setStatus('current')
if mibBuilder.loadTexts: hwHandoverToApLocationID.setDescription('It means the location ID of destination ap.')
hwNeighborApTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5), )
if mibBuilder.loadTexts: hwNeighborApTable.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApTable.setDescription('Description.')
hwNeighborApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApLocalApId"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApLocalRadioId"))
if mibBuilder.loadTexts: hwNeighborApEntry.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApEntry.setDescription('Description.')
hwNeighborApLocalApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hwNeighborApLocalApId.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApLocalApId.setDescription('It means the local ap id.')
hwNeighborApLocalRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: hwNeighborApLocalRadioId.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApLocalRadioId.setDescription('It means the local radio id.')
hwNeighborApLocalApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApLocalApMac.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApLocalApMac.setDescription('It means the local ap mac address.')
hwNeighborApIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1280))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApIdList.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApIdList.setDescription('It means the list of all of neighbor ap id.')
hwNeighborApMacList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3840))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApMacList.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApMacList.setDescription('It means the list of all of ap mac.')
hwNeighborApRssiList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1280))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApRssiList.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApRssiList.setDescription('It means the list of all of ap rssi.')
hwNeighborApUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApUpdateTime.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApUpdateTime.setDescription('It means the list of all of ap update time.')
hwNeighborApLocalLocationID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApLocalLocationID.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApLocalLocationID.setDescription('It means the local ap location ID.')
hwNeighborApLocationIDList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1550))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNeighborApLocationIDList.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApLocationIDList.setDescription('It means the list of neighbor ap location ID based on radio.')
hwStaOnlineFailTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6), )
if mibBuilder.loadTexts: hwStaOnlineFailTable.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailTable.setDescription('Description.')
hwStaOnlineFailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1), ).setIndexNames((0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaOnlineFailMacAddress"), (0, "HUAWEI-WLAN-SERVICE-MIB", "hwStaOnlineFailReasonIndex"))
if mibBuilder.loadTexts: hwStaOnlineFailEntry.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailEntry.setDescription('Description.')
hwStaOnlineFailMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwStaOnlineFailMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailMacAddress.setDescription('Description.')
hwStaOnlineFailReasonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: hwStaOnlineFailReasonIndex.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailReasonIndex.setDescription('Description.')
hwStaOnlineFailApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaOnlineFailApId.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailApId.setDescription('Description.')
hwStaOnlineFailRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaOnlineFailRadioId.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailRadioId.setDescription('Description.')
hwStaOnlineFailWlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaOnlineFailWlanId.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailWlanId.setDescription('Description.')
hwStaOnlineFailLastFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaOnlineFailLastFailTime.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailLastFailTime.setDescription('Description.')
hwStaOnlineFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaOnlineFailReason.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailReason.setDescription('Description.')
hwStaOnlineFailRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 6, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaOnlineFailRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwStaOnlineFailRowStatus.setDescription('Description.')
hwStaOnlineFailTableInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 7))
hwStaResetAllOnlineFailTableReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 43, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaResetAllOnlineFailTableReason.setStatus('current')
if mibBuilder.loadTexts: hwStaResetAllOnlineFailTableReason.setDescription('Description.')
hwWlanServiceManagementConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44))
hwWlanServiceManagementCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 1))
hwWlanServiceManagementCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 1, 1)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwEssManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwServiceBatchGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwCapwapConfigManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStationGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVapStationListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssInfoGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApAssocStatGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwGlobalStaMacWhiteListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaMacBlackListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaAccessControlGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcStatisticsGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacCapwapConfigManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacVapStationListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApAssocStatGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVapConfigGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidStatisticGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidStatisticGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaAccessControlGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaInfoGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaInfoGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwInterACRoamingInfoGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaListGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeWhitelistGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidStatisticGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshWhitelistGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceManagementGroup"), ("HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanServiceManagementCompliance = hwWlanServiceManagementCompliance.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceManagementCompliance.setDescription('Description.')
hwWlanServiceManagementObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2))
hwEssManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 1)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSsid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssHideSsid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssUserIsolate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssTrafficProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSecurityProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssMaxUserNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssAssociationTimeOut"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssIgmpMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssRowStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssForwardMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVlan"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDhcpSnooping"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssServiceVlanEnable"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssIPSGEnable"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDhcpTrustPort"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDaiSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssArpThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssTunnelProtocol"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssOfflineManagement"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssBlacklistProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssWhitelistProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssStaAccessMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDhcpOption82InsertSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDhcpOption82RemoteIdFormat"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssDhcpSnoopingOption"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssBroadCastPps"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssMultiCastPps"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssUniCastPps"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssBroadCastSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssMultiCastSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssUniCastSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNameInbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNameOutbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNumInbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNumOutbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclSwtichInbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclSwtichOutbound"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssServiceModeSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssAutoOffEssAdminSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssAutoOffEssStartTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssAutoOffEssEndTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssNdSnooping"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNameInboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNameOutboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNumInboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclNumOutboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclSwtichInboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssSaclSwtichOutboundIPv6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssNdTrustPort"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssMldSnoopingEable"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssIPSGEnableRejectAssoc"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssLearnClientIpEnable"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssHomeAgent"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceEssVlanMobilityGroup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEssManagementGroup = hwEssManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwEssManagementGroup.setDescription('Description.')
hwVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 2)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapWlanIndex"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapRowStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapBssid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapSSID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapVlan"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapFrequency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVapManagementGroup = hwVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwVapManagementGroup.setDescription('Description.')
hwServiceBatchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 3)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchRadioProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssNameNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssNameList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwServiceBatchGroup = hwServiceBatchGroup.setStatus('current')
if mibBuilder.loadTexts: hwServiceBatchGroup.setDescription('Description.')
hwCapwapConfigManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 4)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceCapwapConfigCommit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCapwapConfigManagementGroup = hwCapwapConfigManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwCapwapConfigManagementGroup.setDescription('Description.')
hwStationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 5)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaApId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaRadioId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaEssName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaSsid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaOnlineTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaSnrUs"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaRxPowerUs"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxPkts"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatRxPkts"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatRxBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatRxRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaIp"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaNoise"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaVlan"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRecvDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaSendDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRecvErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaSendErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaReSendFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaReSendBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaUsername"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatRxBytes64Bits"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxBytes64Bits"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaGateway"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAuthenMethod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaEncryptMethod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBSSID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaQosMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaHtMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaMcsVal"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaShortGIStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRoamStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaStatOperMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxPkts64Bits"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatRxPkts64Bits"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRfMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaIpV6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAssociateTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessOnlineTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaLinkRxRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaLinkTxRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaActualBandwidth"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaPackets"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaChannelUtilRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaChannelBusyRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaChannelFreeRate"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaChannelInterfRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStationGroup = hwStationGroup.setStatus('current')
if mibBuilder.loadTexts: hwStationGroup.setDescription('Description.')
hwVapStationListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 6)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaMacList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapCurOnlineStaCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaAssocAndReAssocReqCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceVapStaOnlineTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVapStationListGroup = hwVapStationListGroup.setStatus('current')
if mibBuilder.loadTexts: hwVapStationListGroup.setDescription('Description.')
hwWlanServiceBatchEssInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 7)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssStartNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchReturnEssNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceBatchEssSsid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanServiceBatchEssInfoGroup = hwWlanServiceBatchEssInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceBatchEssInfoGroup.setDescription('Description.')
hwApAssocStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 8)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwTotalOnlineTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwTotalAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwCurrAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAssociationRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAssociationRejectCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAssociationFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwReAssociationRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwReAssociationRejectCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwReAssociationFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwDisAssocOfUserNotifiedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwDisAssocOfStaRoamCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwDisAssocOfStaAgeCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwDisAssocOfApUnableHandleCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwDisAssocOfOtherReasonsCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAssocRequestCntByResource"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaExceptionalOfflineCnt"), ("HUAWEI-WLAN-SERVICE-MIB", "hwReAssociationSuccessCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBSSNotSupportAssocFailCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessRequestFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAuthenRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAuthenRequestFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRefusedStaNumByResource"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAssocAndReAssocRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAuthenRequestSuccessCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwL3RoamInStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwL3RoamOutStationCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApAssocStatGroup = hwApAssocStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwApAssocStatGroup.setDescription('Description.')
hwVlanMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 9)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingEssVlanMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingEssVlanId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList0"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList1"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList2"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList3"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList4"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList5"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList6"), ("HUAWEI-WLAN-SERVICE-MIB", "hwVlanMappingVlanList7"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVlanMappingGroup = hwVlanMappingGroup.setStatus('current')
if mibBuilder.loadTexts: hwVlanMappingGroup.setDescription('Description.')
hwGlobalStaMacWhiteListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 10)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwGlobalStaMacWhiteListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGlobalStaMacWhiteListGroup = hwGlobalStaMacWhiteListGroup.setStatus('current')
if mibBuilder.loadTexts: hwGlobalStaMacWhiteListGroup.setDescription('Description.')
hwStaMacBlackListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 11)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwStaMacBlackListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaMacBlackListGroup = hwStaMacBlackListGroup.setStatus('current')
if mibBuilder.loadTexts: hwStaMacBlackListGroup.setDescription('Description.')
hwApStaAccessControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 12)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwApStaAccessControlMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaAccessControlRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApStaAccessControlGroup = hwApStaAccessControlGroup.setStatus('current')
if mibBuilder.loadTexts: hwApStaAccessControlGroup.setDescription('Description.')
hwAcStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 13)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwAcReassocSuccessTimes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApPerformanceStatTimerLen"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRtCollectOnoff"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApNormalCollectCycle"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApRtCollectCycle"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcCurAssocStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcCurAuthSuccessStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcCurJointApNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcCurAssoc24gStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAcCurAssoc5gStaNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAcStatisticsGroup = hwAcStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwAcStatisticsGroup.setDescription('Description.')
hwMacVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 14)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapWlanIndex"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapBssid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapRowStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapSSID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacVapManagementGroup = hwMacVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacVapManagementGroup.setDescription('Description.')
hwMacCapwapConfigManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 15)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceCapwapConfigCommit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacCapwapConfigManagementGroup = hwMacCapwapConfigManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacCapwapConfigManagementGroup.setDescription('Description.')
hwMacVapStationListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 16)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaMacList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapCurOnlineStaCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaAssocAndReAssocReqCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacWlanServiceVapStaOnlineTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacVapStationListGroup = hwMacVapStationListGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacVapStationListGroup.setDescription('Description.')
hwMacApAssocStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 17)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacTotalOnlineTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacTotalAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacCurrAssociatedStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacAssociationRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacAssociationRejectCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacAssociationFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacReAssociationRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacReAssociationRejectCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacReAssociationFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacDisAssocOfUserNotifiedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacDisAssocOfStaRoamCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacDisAssocOfStaAgeCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacDisAssocOfApUnableHandleCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacDisAssocOfOtherReasonsCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacAssocRequestCntByResource"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaExceptionalOfflineCnt"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacReAssociationSuccessCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBSSNotSupportAssocFailCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAccessRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAccessRequestFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAuthenRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAuthenRequestFailedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacRefusedStaNumByResource"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAssocAndReAssocRequestCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaAuthenRequestSuccessCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwL3RoamInStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwL3RoamOutStationCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacApAssocStatGroup = hwMacApAssocStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacApAssocStatGroup.setDescription('Description.')
hwVapConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 18)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwVapOptValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVapConfigGroup = hwVapConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hwVapConfigGroup.setDescription('Description.')
hwSsidStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 19)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportRecvBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportRecvErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportRecvFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportRecvUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportRecvDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportTransmitBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportTransmitErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportTransmitUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportTransmitDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportDownReTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidCurrentStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportNoise"), ("HUAWEI-WLAN-SERVICE-MIB", "hwSsidAirportSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSsidStatisticGroup = hwSsidStatisticGroup.setStatus('current')
if mibBuilder.loadTexts: hwSsidStatisticGroup.setDescription('Description.')
hwMacSsidStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 20)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportRecvBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportRecvErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportRecvFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportRecvUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportRecvDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportTransmitBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportTransmitErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportTransmitUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportTransmitDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportDownReTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidCurrentStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportNoise"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacSsidAirportSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacSsidStatisticGroup = hwMacSsidStatisticGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacSsidStatisticGroup.setDescription('Description.')
hwMacApStaAccessControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 21)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaAccessControlMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaAccessControlRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacApStaAccessControlGroup = hwMacApStaAccessControlGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaAccessControlGroup.setDescription('Description.')
hwApStaInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 22)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwStaMAC"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaIPAddress"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWMMAttr"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRadioMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRadioChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwAPTxRates"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaPowerSaveMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaVlanId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaSSIDName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaTxPacket"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaRxPacket"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaBssid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwApStaSnr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApStaInfoGroup = hwApStaInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwApStaInfoGroup.setDescription('Description.')
hwMacApStaInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 23)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaMAC"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaIPAddress"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaWMMAttr"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaRadioMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaRadioChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacAPTxRates"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaPowerSaveMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaVlanId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacStaSSIDName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaTxPacket"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaRxPacket"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaBssid"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacApStaSnr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacApStaInfoGroup = hwMacApStaInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacApStaInfoGroup.setDescription('Description.')
hwInterACRoamingInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 24)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwInterACRoamingInSuccCnt"), ("HUAWEI-WLAN-SERVICE-MIB", "hwInterACRoamingOutSuccCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwInterACRoamingInfoGroup = hwInterACRoamingInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwInterACRoamingInfoGroup.setDescription('Description.')
hwRadioStaListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 25)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaMacList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaTotalAssociatedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwRadioStaAccessReqCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRadioStaListGroup = hwRadioStaListGroup.setStatus('current')
if mibBuilder.loadTexts: hwRadioStaListGroup.setDescription('Description.')
hwMacRadioStaListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 26)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaNumber"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaMacList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaTotalAssociatedCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacRadioStaAccessReqCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacRadioStaListGroup = hwMacRadioStaListGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacRadioStaListGroup.setDescription('Description.')
hwBridgeProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 27)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileBridgeName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileSecurityProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileVlanTagged"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileRowStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileDhcpTrustPort"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeProfileNdTrustPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBridgeProfileGroup = hwBridgeProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwBridgeProfileGroup.setDescription('Description.')
hwBridgeVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 28)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeVapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBridgeVapManagementGroup = hwBridgeVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwBridgeVapManagementGroup.setDescription('Description.')
hwMacBridgeVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 29)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeVapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacBridgeVapManagementGroup = hwMacBridgeVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeVapManagementGroup.setDescription('Description.')
hwBridgeLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 30)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkWlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkBridgeType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkBridgeSubType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkPeerMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkBridgeProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkStpMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkInstanceIdList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkInstanceStateList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkBridgeMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkCoverageDistance"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkPeerAPID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkPeerAPStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkMaxRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkPeerApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeLinkChannelID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBridgeLinkGroup = hwBridgeLinkGroup.setStatus('current')
if mibBuilder.loadTexts: hwBridgeLinkGroup.setDescription('Description.')
hwMacBridgeLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 31)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkWlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkBridgeType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkBridgeSubType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkPeerMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkBridgeProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkStpMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkInstanceIdList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkInstanceStateList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkApID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkBridgeMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkCoverageDistance"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkPeerAPID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkPeerAPStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkMaxRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeLinkPeerApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacBridgeChannelID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacBridgeLinkGroup = hwMacBridgeLinkGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacBridgeLinkGroup.setDescription('Description.')
hwBridgeWhitelistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 32)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeWhitelistPeerList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwBridgeWhitelistRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBridgeWhitelistGroup = hwBridgeWhitelistGroup.setStatus('current')
if mibBuilder.loadTexts: hwBridgeWhitelistGroup.setDescription('Description.')
hwWirelessSsidStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 33)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportTransmitUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportTransmitErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportDownReTransmitFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportTransmitDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportTransmitBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportRecvUnicastFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportRecvFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportRecvErrorFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportRecvDropFrames"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidAirportRecvBytes"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidTotalAssociatedSuccessStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidCurAssocStationCount"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWirelessSsidTotalAssociatedFailedStationCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWirelessSsidStatisticGroup = hwWirelessSsidStatisticGroup.setStatus('current')
if mibBuilder.loadTexts: hwWirelessSsidStatisticGroup.setDescription('Description.')
hwStaBlacklistProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 34)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileStaMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileOper"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileStaList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaBlacklistProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaBlacklistProfileGroup = hwStaBlacklistProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwStaBlacklistProfileGroup.setDescription('Description.')
hwStaWhitelistProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 35)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileStaMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileOper"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileStaNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileStaList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaWhitelistProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaWhitelistProfileGroup = hwStaWhitelistProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwStaWhitelistProfileGroup.setDescription('Description.')
hwMeshProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 36)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileSecurityProfileName"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileMeshID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileMaxLinkNum"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileRssiThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileReportInterval"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileRowStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileDhcpTrustPort"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileNdTrustPort"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileQuickHoSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileLinkHoThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileLinkHoldPeriod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileLinkLinkSaturationThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileLinkProbePeriod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileFwaMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileFwaEdcaMode"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileQuickHandoverMinRssiThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileLocationBasedHandoverAlgorithmSwitch"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileMovingDirection"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileUrgentHandoverLowRateThreshold"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileUrgentHandoverLowRatePeriod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileUrgentHandoverPunishmentPeriod"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshProfileUrgentHandoverPunishmentRssi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMeshProfileGroup = hwMeshProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwMeshProfileGroup.setDescription('Description.')
hwMeshVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 37)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMeshVapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMeshVapManagementGroup = hwMeshVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwMeshVapManagementGroup.setDescription('Description.')
hwMacMeshVapManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 38)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshVapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacMeshVapManagementGroup = hwMacMeshVapManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshVapManagementGroup.setDescription('Description.')
hwMeshLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 39)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkWlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkPeerMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkChannelID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkRssiValue"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkMeshRole"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkCoverageDistance"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkPeerAPStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkMaxRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshLinkPeerApMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMeshLinkGroup = hwMeshLinkGroup.setStatus('current')
if mibBuilder.loadTexts: hwMeshLinkGroup.setDescription('Description.')
hwMacMeshLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 40)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkWlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkPeerMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkChannelID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkRssiValue"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkApID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkMeshRole"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkCoverageDistance"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkPeerAPID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkPeerAPStatus"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkMaxRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMacMeshLinkPeerApMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacMeshLinkGroup = hwMacMeshLinkGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacMeshLinkGroup.setDescription('Description.')
hwMeshWhitelistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 41)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwMeshWhitelistPeerList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwMeshWhitelistRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMeshWhitelistGroup = hwMeshWhitelistGroup.setStatus('current')
if mibBuilder.loadTexts: hwMeshWhitelistGroup.setDescription('Description.')
hwWlanServiceManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 42)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwCapwapConfigCommitAll"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanServiceManagementGroup = hwWlanServiceManagementGroup.setStatus('current')
if mibBuilder.loadTexts: hwWlanServiceManagementGroup.setDescription('Description.')
hwLbsTagDevGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 43)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevType"), ("HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwLbsTagDevRssi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLbsTagDevGroup = hwLbsTagDevGroup.setStatus('current')
if mibBuilder.loadTexts: hwLbsTagDevGroup.setDescription('Description.')
hwProxyTrackSideEquipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 44)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwProxyTrackSideEquipMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwProxyTrackSideEquipVlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwProxyTrackSideEquipRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwProxyTrackSideEquipGroup = hwProxyTrackSideEquipGroup.setStatus('current')
if mibBuilder.loadTexts: hwProxyTrackSideEquipGroup.setDescription('Description.')
hwProxyOnBoardEquipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 45)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwProxyOnBoardEquipMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwProxyOnBoardEquipVlanID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwProxyOnBoardEquipRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwProxyOnBoardEquipGroup = hwProxyOnBoardEquipGroup.setStatus('current')
if mibBuilder.loadTexts: hwProxyOnBoardEquipGroup.setDescription('Description.')
hwHandoverTraceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 46)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverTimeStamp"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverFromApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverFromApRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverToApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverToApRssi"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverFromApLocationID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwHandoverToApLocationID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwHandoverTraceGroup = hwHandoverTraceGroup.setStatus('current')
if mibBuilder.loadTexts: hwHandoverTraceGroup.setDescription('Description.')
hwNeighborApGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 4, 44, 2, 47)).setObjects(("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApLocalApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApIdList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApMacList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApRssiList"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApUpdateTime"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApLocalLocationID"), ("HUAWEI-WLAN-SERVICE-MIB", "hwNeighborApLocationIDList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwNeighborApGroup = hwNeighborApGroup.setStatus('current')
if mibBuilder.loadTexts: hwNeighborApGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-WLAN-SERVICE-MIB", hwMeshProfileRssiThreshold=hwMeshProfileRssiThreshold, hwStaIPAddress=hwStaIPAddress, hwWlanServiceVapApIndex=hwWlanServiceVapApIndex, hwMacWlanServiceVapStaMacList=hwMacWlanServiceVapStaMacList, hwMacVapManagementTable=hwMacVapManagementTable, hwVapConfigGroup=hwVapConfigGroup, hwWlanServiceStaSsid=hwWlanServiceStaSsid, hwMacBridgeVapRadioIndex=hwMacBridgeVapRadioIndex, hwApStaAccessControlGroup=hwApStaAccessControlGroup, hwWlanServiceVapStaRadioId=hwWlanServiceVapStaRadioId, hwWirelessSsidStatisticTable=hwWirelessSsidStatisticTable, hwHandoverTraceEntry=hwHandoverTraceEntry, hwWirelessSsidStatisticGroup=hwWirelessSsidStatisticGroup, hwMacBridgeLinkPeerApMac=hwMacBridgeLinkPeerApMac, hwMacStaExceptionalOfflineCnt=hwMacStaExceptionalOfflineCnt, hwStaSendErrorFrames=hwStaSendErrorFrames, hwMeshLinkMaxRssi=hwMeshLinkMaxRssi, hwWirelessSsidAirportRecvBytes=hwWirelessSsidAirportRecvBytes, hwMacAPTxRates=hwMacAPTxRates, hwMacBridgeLinkEntry=hwMacBridgeLinkEntry, hwWlanServiceEssNum=hwWlanServiceEssNum, hwRadioStaListEntry=hwRadioStaListEntry, hwMacRadioStaListGroup=hwMacRadioStaListGroup, hwMacCapwapConfigManagementTable=hwMacCapwapConfigManagementTable, hwStaRecvErrorFrames=hwStaRecvErrorFrames, hwApStaTxPacket=hwApStaTxPacket, hwBridgeVapApIndex=hwBridgeVapApIndex, hwProxyTrackSideEquipRowStatus=hwProxyTrackSideEquipRowStatus, hwWlanServiceBatchEssStartNumber=hwWlanServiceBatchEssStartNumber, hwBridgeLinkBridgeMode=hwBridgeLinkBridgeMode, hwLbsTagDevGroup=hwLbsTagDevGroup, hwWlanServiceEssWhitelistProfileName=hwWlanServiceEssWhitelistProfileName, hwStaRadioChannel=hwStaRadioChannel, hwAcCurAuthSuccessStaNum=hwAcCurAuthSuccessStaNum, hwMeshProfileSecurityProfileName=hwMeshProfileSecurityProfileName, hwWlanServiceEssUniCastPps=hwWlanServiceEssUniCastPps, hwReAssociationSuccessCount=hwReAssociationSuccessCount, hwBridgeVapManagementEntry=hwBridgeVapManagementEntry, hwMacDisAssocOfApUnableHandleCount=hwMacDisAssocOfApUnableHandleCount, hwMeshProfileQuickHandoverMinRssiThreshold=hwMeshProfileQuickHandoverMinRssiThreshold, hwHandoverTimeStamp=hwHandoverTimeStamp, hwStaOnlineFailMacAddress=hwStaOnlineFailMacAddress, hwInterACRoamingInSuccCnt=hwInterACRoamingInSuccCnt, hwMeshLinkCoverageDistance=hwMeshLinkCoverageDistance, hwProxyTrackSideEquipTable=hwProxyTrackSideEquipTable, hwWlanServiceEssStatus=hwWlanServiceEssStatus, hwWlanServiceEssMultiCastPps=hwWlanServiceEssMultiCastPps, hwMacWlanServiceVapStaNum=hwMacWlanServiceVapStaNum, hwMeshProfileMeshID=hwMeshProfileMeshID, hwWlanServiceEssDhcpSnooping=hwWlanServiceEssDhcpSnooping, hwWlanServiceVapStaNum=hwWlanServiceVapStaNum, hwCurrAssociatedStationCount=hwCurrAssociatedStationCount, hwWlanServiceEssSaclNameOutboundIPv6=hwWlanServiceEssSaclNameOutboundIPv6, hwMacWlanServiceVapApMac=hwMacWlanServiceVapApMac, hwBridgeWhitelistName=hwBridgeWhitelistName, hwApStaRxPacket=hwApStaRxPacket, hwWlanServiceStaMac=hwWlanServiceStaMac, hwWlanServiceEssType=hwWlanServiceEssType, hwSsidAirportSNR=hwSsidAirportSNR, hwMacSsidAirportNoise=hwMacSsidAirportNoise, hwMacSsidStatisticRadioIndex=hwMacSsidStatisticRadioIndex, hwStaBlacklistProfileEntry=hwStaBlacklistProfileEntry, hwStaLinkRxRate=hwStaLinkRxRate, hwMeshProfileName=hwMeshProfileName, hwDisAssocOfApUnableHandleCount=hwDisAssocOfApUnableHandleCount, hwAcStatistics=hwAcStatistics, hwBridgeWhitelistEntry=hwBridgeWhitelistEntry, hwWirelessSsidAirportRecvDropFrames=hwWirelessSsidAirportRecvDropFrames, hwMacMeshLinkRssiValue=hwMacMeshLinkRssiValue, hwStaBlacklistProfileName=hwStaBlacklistProfileName, hwRadioStaMacList=hwRadioStaMacList, hwMacMeshLinkPeerAPID=hwMacMeshLinkPeerAPID, hwMacWlanServiceVapBssid=hwMacWlanServiceVapBssid, hwMacMeshVapMeshProfileName=hwMacMeshVapMeshProfileName, hwMacWlanServiceVapRadioIndex=hwMacWlanServiceVapRadioIndex, hwMacMeshLinkApID=hwMacMeshLinkApID, hwMeshProfileRowStatus=hwMeshProfileRowStatus, hwVlanMappingVlanList0=hwVlanMappingVlanList0, hwWlanServiceStaSnrUs=hwWlanServiceStaSnrUs, hwBridgeWhitelistPeerList=hwBridgeWhitelistPeerList, hwWlanServiceEssUserIsolate=hwWlanServiceEssUserIsolate, hwMacBridgeLinkIndex=hwMacBridgeLinkIndex, hwSsidAirportTransmitBytes=hwSsidAirportTransmitBytes, hwStaWirelessStatTxBytes64Bits=hwStaWirelessStatTxBytes64Bits, hwStaExceptionalOfflineCnt=hwStaExceptionalOfflineCnt, hwApAssocStatTable=hwApAssocStatTable, hwStaMcsVal=hwStaMcsVal, hwApStaInfoTable=hwApStaInfoTable, hwMacApAssocStatEntry=hwMacApAssocStatEntry, hwVlanMappingEssName=hwVlanMappingEssName, hwMeshProfileLinkHoThreshold=hwMeshProfileLinkHoThreshold, hwMacCapwapConfigManagementGroup=hwMacCapwapConfigManagementGroup, hwLbsTagDevTable=hwLbsTagDevTable, hwStaMacBlackListRowStatus=hwStaMacBlackListRowStatus, hwProxyOnBoardEquipTable=hwProxyOnBoardEquipTable, hwWlanServiceEssTrafficProfileName=hwWlanServiceEssTrafficProfileName, hwMeshWhitelistEntry=hwMeshWhitelistEntry, hwAssocRequestCntByResource=hwAssocRequestCntByResource, hwStaBlacklistProfileStaNum=hwStaBlacklistProfileStaNum, hwSsidAirportRecvUnicastFrames=hwSsidAirportRecvUnicastFrames, hwWlanServiceEssTunnelProtocol=hwWlanServiceEssTunnelProtocol, hwMacWlanServiceCapwapConfigCommit=hwMacWlanServiceCapwapConfigCommit, hwMacStaAuthenRequestSuccessCount=hwMacStaAuthenRequestSuccessCount, hwStaWhitelistProfileTable=hwStaWhitelistProfileTable, hwHandoverToApLocationID=hwHandoverToApLocationID, hwBridgeVapRadioIndex=hwBridgeVapRadioIndex, hwBridgeWhitelistRowStatus=hwBridgeWhitelistRowStatus, hwStaAccessChannel=hwStaAccessChannel, hwWlanServiceEssArpThreshold=hwWlanServiceEssArpThreshold, hwWlanServiceVapStaMacList=hwWlanServiceVapStaMacList, hwStaOnlineFailReason=hwStaOnlineFailReason, hwStaOnlineFailReasonIndex=hwStaOnlineFailReasonIndex, hwMacSsidStatisticApMac=hwMacSsidStatisticApMac, hwMacApStaStatus=hwMacApStaStatus, hwMacRadioStaListEntry=hwMacRadioStaListEntry, hwBridgeProfileSecurityProfileName=hwBridgeProfileSecurityProfileName, hwL3RoamOutStationCount=hwL3RoamOutStationCount, hwWlanServiceVapStaAssocAndReAssocReqCount=hwWlanServiceVapStaAssocAndReAssocReqCount, hwStaSendDropFrames=hwStaSendDropFrames, hwNeighborApEntry=hwNeighborApEntry, hwAcCurAssoc5gStaNum=hwAcCurAssoc5gStaNum, hwStaChannelFreeRate=hwStaChannelFreeRate, hwStaPowerSaveMode=hwStaPowerSaveMode, hwInterACRoamingInfo=hwInterACRoamingInfo, hwBridgeLinkBridgeType=hwBridgeLinkBridgeType, hwMacStaPowerSaveMode=hwMacStaPowerSaveMode, hwNeighborApLocalApId=hwNeighborApLocalApId, hwMacBridgeLinkTable=hwMacBridgeLinkTable, hwDisAssocOfStaRoamCount=hwDisAssocOfStaRoamCount, hwAPTxRates=hwAPTxRates, hwMacMeshLinkWlanID=hwMacMeshLinkWlanID, hwWlanServiceEssIPSGEnable=hwWlanServiceEssIPSGEnable, hwEssManagementEntry=hwEssManagementEntry, hwWlanServiceEssBroadCastPps=hwWlanServiceEssBroadCastPps, hwMeshProfileNdTrustPort=hwMeshProfileNdTrustPort, hwStaOnlineFailWlanId=hwStaOnlineFailWlanId, hwTotalOnlineTime=hwTotalOnlineTime, hwMacBridgeLinkBridgeProfileName=hwMacBridgeLinkBridgeProfileName, hwMeshVapBssid=hwMeshVapBssid, hwWirelessSsidAirportTransmitUnicastFrames=hwWirelessSsidAirportTransmitUnicastFrames, hwWlanServiceBatchEssName=hwWlanServiceBatchEssName, hwMacWlanServiceVapCurOnlineStaCount=hwMacWlanServiceVapCurOnlineStaCount, PYSNMP_MODULE_ID=hwWlanServiceManagement, hwWlanServiceEssName=hwWlanServiceEssName, hwSsidAirportTransmitDropFrames=hwSsidAirportTransmitDropFrames, hwWlanServiceBatchEssNameList=hwWlanServiceBatchEssNameList, hwWlanServiceVapEssName=hwWlanServiceVapEssName, hwWirelessSsidAirportTransmitFrames=hwWirelessSsidAirportTransmitFrames, hwWlanServiceManagementGroup=hwWlanServiceManagementGroup, hwMacStaWMMAttr=hwMacStaWMMAttr, hwStaStatus=hwStaStatus, hwMeshVapManagementTable=hwMeshVapManagementTable, hwAcStatisticsGroup=hwAcStatisticsGroup, hwApAssocStatEntry=hwApAssocStatEntry, hwSsidAirportRecvDropFrames=hwSsidAirportRecvDropFrames, hwVapStationListGroup=hwVapStationListGroup, hwMacCapwapConfigManagementEntry=hwMacCapwapConfigManagementEntry, hwApStaStatus=hwApStaStatus, hwMacApStaInfoGroup=hwMacApStaInfoGroup, hwWirelessSsidAirportTransmitErrorFrames=hwWirelessSsidAirportTransmitErrorFrames, hwWlanServiceBatchEssSsid=hwWlanServiceBatchEssSsid, hwMacRadioStaListTable=hwMacRadioStaListTable, hwWlanServiceEssMaxUserNumber=hwWlanServiceEssMaxUserNumber, hwStaWirelessStatRxPkts64Bits=hwStaWirelessStatRxPkts64Bits, hwVlanMappingVlanList3=hwVlanMappingVlanList3, hwMeshLinkChannelID=hwMeshLinkChannelID, hwStaBlacklistProfileOper=hwStaBlacklistProfileOper, hwMacVapStationListTable=hwMacVapStationListTable, hwWirelessSsidStatisticEntry=hwWirelessSsidStatisticEntry, hwProxyOnBoardEquipEntry=hwProxyOnBoardEquipEntry, hwMacReAssociationRequestCount=hwMacReAssociationRequestCount, hwMeshLinkGroup=hwMeshLinkGroup, hwStaOnlineFailRadioId=hwStaOnlineFailRadioId, hwMacApStaAccessControlEntry=hwMacApStaAccessControlEntry, hwWlanServiceEssOfflineManagement=hwWlanServiceEssOfflineManagement, hwRadioStaTotalAssociatedCount=hwRadioStaTotalAssociatedCount, hwWlanServiceEssSaclSwtichInbound=hwWlanServiceEssSaclSwtichInbound, hwMacApStaAccessControlRowStatus=hwMacApStaAccessControlRowStatus, hwMacStaAuthenRequestCount=hwMacStaAuthenRequestCount, hwMacBridgeLinkPeerAPStatus=hwMacBridgeLinkPeerAPStatus, hwStaMAC=hwStaMAC, hwAcCurAssocStaNum=hwAcCurAssocStaNum, hwBridgeVapManagementTable=hwBridgeVapManagementTable, hwSsidAirportTransmitUnicastFrames=hwSsidAirportTransmitUnicastFrames, hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime=hwMeshProfileHandoverAlgorithmPNCriteriaQualifyTime, hwWlanServiceManagementCompliances=hwWlanServiceManagementCompliances, hwMacSsidAirportSNR=hwMacSsidAirportSNR, hwWlanServiceBatchReturnEssNumber=hwWlanServiceBatchReturnEssNumber, hwMacApStaAccessControlTable=hwMacApStaAccessControlTable, hwMacApStaTxPacket=hwMacApStaTxPacket, hwWirelessSsidAirportRecvUnicastFrames=hwWirelessSsidAirportRecvUnicastFrames, hwWlanServiceManagementCompliance=hwWlanServiceManagementCompliance, hwMacRadioStaNumber=hwMacRadioStaNumber, hwBridgeLinkEntry=hwBridgeLinkEntry, hwWlanServiceEssDhcpSnoopingOption=hwWlanServiceEssDhcpSnoopingOption, hwWlanServiceCapwapConfigCommit=hwWlanServiceCapwapConfigCommit, hwMacAssociationRequestCount=hwMacAssociationRequestCount, hwMacCurrAssociatedStationCount=hwMacCurrAssociatedStationCount, hwStaWhitelistProfileEntry=hwStaWhitelistProfileEntry, hwBridgeLinkPeerApMac=hwBridgeLinkPeerApMac, hwStaWhitelistProfileOper=hwStaWhitelistProfileOper, hwStaVlanId=hwStaVlanId, hwVlanMappingVlanList7=hwVlanMappingVlanList7, hwLbsTagDevRssi=hwLbsTagDevRssi, hwMacMeshLinkCoverageDistance=hwMacMeshLinkCoverageDistance, hwMeshLinkEntry=hwMeshLinkEntry, hwMacBridgeVapBssid=hwMacBridgeVapBssid, hwWirelessSsidAirportRecvFrames=hwWirelessSsidAirportRecvFrames, hwWlanServiceEssServiceVlanEnable=hwWlanServiceEssServiceVlanEnable, hwStaRssi=hwStaRssi, hwBridgeLinkChannelID=hwBridgeLinkChannelID, hwWlanServiceEssSaclSwtichOutbound=hwWlanServiceEssSaclSwtichOutbound, hwVapStationListEntry=hwVapStationListEntry, hwBridgeLinkStpMode=hwBridgeLinkStpMode, hwVlanMappingGroup=hwVlanMappingGroup, hwMacMeshLinkTable=hwMacMeshLinkTable, hwMeshLinkMeshRole=hwMeshLinkMeshRole, hwMacWlanServiceVapStaApMac=hwMacWlanServiceVapStaApMac, hwMacBridgeVapManagementTable=hwMacBridgeVapManagementTable, hwStaOnlineFailEntry=hwStaOnlineFailEntry, hwRefusedStaNumByResource=hwRefusedStaNumByResource, hwSsidStatisticEntry=hwSsidStatisticEntry, hwSsidStatisticRadioIndex=hwSsidStatisticRadioIndex, hwLbsTagDevType=hwLbsTagDevType, hwStaBSSID=hwStaBSSID, hwProxyOnBoardEquipMac=hwProxyOnBoardEquipMac, hwHandoverToApRssi=hwHandoverToApRssi, hwHandoverFromApRssi=hwHandoverFromApRssi, hwWlanServiceEssSsid=hwWlanServiceEssSsid, hwMacApStaRssi=hwMacApStaRssi, hwMeshProfileUrgentHandoverLowRateThreshold=hwMeshProfileUrgentHandoverLowRateThreshold, hwWlanServiceVapCurOnlineStaCount=hwWlanServiceVapCurOnlineStaCount, hwWlanServiceEssForwardMode=hwWlanServiceEssForwardMode, hwVapManagementEntry=hwVapManagementEntry, hwMacStaMAC=hwMacStaMAC, hwCapwapConfigManagementTable=hwCapwapConfigManagementTable, hwMacVapStationListGroup=hwMacVapStationListGroup, hwProxyTrackSideEquipMac=hwProxyTrackSideEquipMac, hwStaWMMAttr=hwStaWMMAttr, hwApStaRssi=hwApStaRssi, hwMacMeshVapManagementEntry=hwMacMeshVapManagementEntry, hwStaUsername=hwStaUsername, hwWlanServiceEssNdSnooping=hwWlanServiceEssNdSnooping, hwMacStaSSIDName=hwMacStaSSIDName, hwMacDisAssocOfUserNotifiedCount=hwMacDisAssocOfUserNotifiedCount, hwWlanServiceStaRadioId=hwWlanServiceStaRadioId, hwSsidAirportNoise=hwSsidAirportNoise, hwNeighborApGroup=hwNeighborApGroup, hwMacDisAssocOfStaAgeCount=hwMacDisAssocOfStaAgeCount, hwMacMeshVapManagementGroup=hwMacMeshVapManagementGroup, hwStaIp=hwStaIp, hwMacSsidAirportDownReTransmitFrames=hwMacSsidAirportDownReTransmitFrames, hwMacApStaAccessControlGroup=hwMacApStaAccessControlGroup, hwStaOnlineFailTableInfo=hwStaOnlineFailTableInfo)
mibBuilder.exportSymbols("HUAWEI-WLAN-SERVICE-MIB", hwBridgeWhitelistGroup=hwBridgeWhitelistGroup, hwMacL3RoamInStationCount=hwMacL3RoamInStationCount, hwApStaBssid=hwApStaBssid, hwMeshProfileMaxLinkNum=hwMeshProfileMaxLinkNum, hwHandoverTraceIndex=hwHandoverTraceIndex, hwApPerformanceStatTimerLen=hwApPerformanceStatTimerLen, hwMacWlanServiceVapStaEssName=hwMacWlanServiceVapStaEssName, hwSsidCurrentStaNum=hwSsidCurrentStaNum, hwHandoverFromApLocationID=hwHandoverFromApLocationID, hwWlanServiceVapRadioIndex=hwWlanServiceVapRadioIndex, hwL3RoamInStationCount=hwL3RoamInStationCount, hwBridgeProfileNdTrustPort=hwBridgeProfileNdTrustPort, hwGlobalStaMacWhiteListGroup=hwGlobalStaMacWhiteListGroup, hwWlanServiceEssAutoOffEssAdminSwitch=hwWlanServiceEssAutoOffEssAdminSwitch, hwMeshVapManagementGroup=hwMeshVapManagementGroup, hwMacBridgeLinkBridgeSubType=hwMacBridgeLinkBridgeSubType, hwMacSsidAirportRecvDropFrames=hwMacSsidAirportRecvDropFrames, hwStaAuthenRequestSuccessCount=hwStaAuthenRequestSuccessCount, hwWlanServiceVapVlan=hwWlanServiceVapVlan, hwMacBridgeLinkMaxRssi=hwMacBridgeLinkMaxRssi, hwBridgeLinkInstanceStateList=hwBridgeLinkInstanceStateList, hwBridgeProfileTable=hwBridgeProfileTable, hwMacSsidStatisticTable=hwMacSsidStatisticTable, hwProxyTrackSideEquipVlanID=hwProxyTrackSideEquipVlanID, hwStaQosMode=hwStaQosMode, hwStaWhitelistProfileName=hwStaWhitelistProfileName, hwStaAssocAndReAssocRequestCount=hwStaAssocAndReAssocRequestCount, hwBridgeProfileDhcpTrustPort=hwBridgeProfileDhcpTrustPort, hwMacSsidAirportTransmitUnicastFrames=hwMacSsidAirportTransmitUnicastFrames, hwApRtCollectCycle=hwApRtCollectCycle, hwEssManagementGroup=hwEssManagementGroup, hwMacWlanServiceVapVlan=hwMacWlanServiceVapVlan, hwMacSsidAirportTransmitBytes=hwMacSsidAirportTransmitBytes, hwMeshLinkApMac=hwMeshLinkApMac, hwRadioStaListTable=hwRadioStaListTable, hwLbsTagDevApID=hwLbsTagDevApID, hwWirelessSsidAirportRecvErrorFrames=hwWirelessSsidAirportRecvErrorFrames, hwApAssocStatGroup=hwApAssocStatGroup, hwVapConfigTable=hwVapConfigTable, hwMacApStaInfoEntry=hwMacApStaInfoEntry, hwWlanServiceEssDaiSwitch=hwWlanServiceEssDaiSwitch, hwMacMeshLinkMaxRssi=hwMacMeshLinkMaxRssi, hwWlanServiceVapWlanIndex=hwWlanServiceVapWlanIndex, hwStaWhitelistProfileStaMac=hwStaWhitelistProfileStaMac, hwVapConfigEntry=hwVapConfigEntry, hwRtCollectOnoff=hwRtCollectOnoff, hwWlanServiceStaApId=hwWlanServiceStaApId, hwMacStaAccessRequestCount=hwMacStaAccessRequestCount, hwBridgeLinkApMac=hwBridgeLinkApMac, hwStaWirelessStatTxRate=hwStaWirelessStatTxRate, hwWirelessSsidAirportTransmitBytes=hwWirelessSsidAirportTransmitBytes, hwNeighborApTable=hwNeighborApTable, hwWirelessSsidTotalAssociatedSuccessStationCount=hwWirelessSsidTotalAssociatedSuccessStationCount, hwBridgeLinkBridgeProfileName=hwBridgeLinkBridgeProfileName, hwAcCurAssoc24gStaNum=hwAcCurAssoc24gStaNum, hwWlanServiceEssIPSGEnableRejectAssoc=hwWlanServiceEssIPSGEnableRejectAssoc, hwMacReAssociationFailedCount=hwMacReAssociationFailedCount, hwStaAccessTime=hwStaAccessTime, hwVapOptValue=hwVapOptValue, hwGlobalStaMacWhiteListEntry=hwGlobalStaMacWhiteListEntry, hwWlanServiceVapStaOnlineTime=hwWlanServiceVapStaOnlineTime, hwWlanServiceEssHomeAgent=hwWlanServiceEssHomeAgent, hwMacApStaAccessControlMode=hwMacApStaAccessControlMode, hwLbsTagDevChannel=hwLbsTagDevChannel, hwWlanServiceStaRxPowerUs=hwWlanServiceStaRxPowerUs, hwVlanMappingEssVlanMode=hwVlanMappingEssVlanMode, hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime=hwMeshProfileHandoverAlgorithmPNCriteriaObserveTime, hwNeighborApIdList=hwNeighborApIdList, hwServiceBatchTable=hwServiceBatchTable, hwWlanServiceBatchRadioIndex=hwWlanServiceBatchRadioIndex, hwMacRadioStaApMac=hwMacRadioStaApMac, hwWlanServiceVapFrequency=hwWlanServiceVapFrequency, hwMacRadioStaTotalAssociatedCount=hwMacRadioStaTotalAssociatedCount, hwMacSsidStatisticEntry=hwMacSsidStatisticEntry, hwStaBlacklistProfileRowStatus=hwStaBlacklistProfileRowStatus, hwMacMeshLinkPeerAPStatus=hwMacMeshLinkPeerAPStatus, hwWlanServiceEssSaclNameInboundIPv6=hwWlanServiceEssSaclNameInboundIPv6, hwWlanServiceManagement=hwWlanServiceManagement, hwMeshProfileLinkLinkSaturationThreshold=hwMeshProfileLinkLinkSaturationThreshold, hwSsidStatisticApIndex=hwSsidStatisticApIndex, hwStaOnlineFailRowStatus=hwStaOnlineFailRowStatus, hwAssociationFailedCount=hwAssociationFailedCount, hwStaAccessRequestFailedCount=hwStaAccessRequestFailedCount, hwStaWirelessStatTxPkts64Bits=hwStaWirelessStatTxPkts64Bits, hwStaWirelessStatRxRate=hwStaWirelessStatRxRate, hwBridgeLinkTable=hwBridgeLinkTable, hwMacRadioStaAccessReqCount=hwMacRadioStaAccessReqCount, hwMeshVapApIndex=hwMeshVapApIndex, hwMacBridgeLinkStpMode=hwMacBridgeLinkStpMode, hwApStaAccessControlRowStatus=hwApStaAccessControlRowStatus, hwMacBridgeLinkRssi=hwMacBridgeLinkRssi, hwMacBridgeLinkApID=hwMacBridgeLinkApID, hwWlanServiceBatchRadioProfileName=hwWlanServiceBatchRadioProfileName, hwMacApStaBssid=hwMacApStaBssid, hwWirelessSsidAirportDownReTransmitFrames=hwWirelessSsidAirportDownReTransmitFrames, hwStaActualBandwidth=hwStaActualBandwidth, hwBridgeProfileName=hwBridgeProfileName, hwMeshVapRowStatus=hwMeshVapRowStatus, hwMacMeshLinkMeshRole=hwMacMeshLinkMeshRole, hwMeshWhitelistTable=hwMeshWhitelistTable, hwWlanServiceEssVlanMobilityGroup=hwWlanServiceEssVlanMobilityGroup, hwDisAssocOfStaAgeCount=hwDisAssocOfStaAgeCount, hwVlanMappingEntry=hwVlanMappingEntry, hwNeighborApUpdateTime=hwNeighborApUpdateTime, hwMacStaRadioMode=hwMacStaRadioMode, hwSsidStatisticGroup=hwSsidStatisticGroup, hwStaShortGIStatus=hwStaShortGIStatus, hwStaRoamStatus=hwStaRoamStatus, hwMacRadioStaMacList=hwMacRadioStaMacList, hwStaWirelessStatRxBytes=hwStaWirelessStatRxBytes, hwMacBridgeLinkCoverageDistance=hwMacBridgeLinkCoverageDistance, hwMacMeshVapRowStatus=hwMacMeshVapRowStatus, hwBridgeProfileRowStatus=hwBridgeProfileRowStatus, hwStaReSendFrames=hwStaReSendFrames, hwEssManagementTable=hwEssManagementTable, hwSsidStatisticEssSsid=hwSsidStatisticEssSsid, hwStaWhitelistProfileGroup=hwStaWhitelistProfileGroup, hwMacVapManagementEntry=hwMacVapManagementEntry, hwApStaInfoGroup=hwApStaInfoGroup, hwGlobalStaMacWhiteListRowStatus=hwGlobalStaMacWhiteListRowStatus, hwBridgeLinkGroup=hwBridgeLinkGroup, hwWlanServiceBatchEssInfo=hwWlanServiceBatchEssInfo, hwHandoverFromApMac=hwHandoverFromApMac, hwMacMeshLinkEntry=hwMacMeshLinkEntry, hwHandoverTraceGroup=hwHandoverTraceGroup, hwVlanMappingVlanList5=hwVlanMappingVlanList5, hwNeighborApLocationIDList=hwNeighborApLocationIDList, hwStaWirelessStatRxPkts=hwStaWirelessStatRxPkts, hwMacMeshLinkChannelID=hwMacMeshLinkChannelID, hwMeshLinkIndex=hwMeshLinkIndex, hwMeshProfileGroup=hwMeshProfileGroup, hwBridgeProfileGroup=hwBridgeProfileGroup, hwProxyTrackSideEquipGroup=hwProxyTrackSideEquipGroup, hwStaOnlineFailLastFailTime=hwStaOnlineFailLastFailTime, hwWirelessSsidCurAssocStationCount=hwWirelessSsidCurAssocStationCount, hwWlanServiceEssBlacklistProfileName=hwWlanServiceEssBlacklistProfileName, hwWlanServiceEssAutoOffEssEndTime=hwWlanServiceEssAutoOffEssEndTime, hwAcReassocSuccessTimes=hwAcReassocSuccessTimes, hwMacWlanServiceVapWlanIndex=hwMacWlanServiceVapWlanIndex, hwDisAssocOfOtherReasonsCount=hwDisAssocOfOtherReasonsCount, hwMacSsidAirportTransmitDropFrames=hwMacSsidAirportTransmitDropFrames, hwReAssociationFailedCount=hwReAssociationFailedCount, hwStaMacBlackListEntry=hwStaMacBlackListEntry, hwBridgeWhitelistTable=hwBridgeWhitelistTable, hwMeshVapMeshProfileName=hwMeshVapMeshProfileName, hwMacStaVlanId=hwMacStaVlanId, hwMacAssociationFailedCount=hwMacAssociationFailedCount, hwMeshLinkPeerAPStatus=hwMeshLinkPeerAPStatus, hwMacWlanServiceVapStaOnlineTime=hwMacWlanServiceVapStaOnlineTime, hwWlanServiceEssRowStatus=hwWlanServiceEssRowStatus, hwProxyOnBoardEquipGroup=hwProxyOnBoardEquipGroup, hwWlanServiceEssAssociationTimeOut=hwWlanServiceEssAssociationTimeOut, hwMeshLinkPeerAPID=hwMeshLinkPeerAPID, hwMacWlanServiceVapStaRadioId=hwMacWlanServiceVapStaRadioId, hwStaBlacklistProfileStaMac=hwStaBlacklistProfileStaMac, hwMacSsidAirportTransmitFrames=hwMacSsidAirportTransmitFrames, hwBridgeLinkWlanID=hwBridgeLinkWlanID, hwVapStationListTable=hwVapStationListTable, hwLbsTagDevEntry=hwLbsTagDevEntry, hwMeshLinkWlanID=hwMeshLinkWlanID, hwWlanServiceBatchEssNameNumber=hwWlanServiceBatchEssNameNumber, hwBridgeLinkMaxRssi=hwBridgeLinkMaxRssi, hwMeshProfileMovingDirection=hwMeshProfileMovingDirection, hwWlanServiceEssDhcpTrustPort=hwWlanServiceEssDhcpTrustPort, hwWlanServiceEssDhcpOption82RemoteIdFormat=hwWlanServiceEssDhcpOption82RemoteIdFormat, hwVlanMappingVlanList6=hwVlanMappingVlanList6, hwStaVlan=hwStaVlan, hwMacStaAuthenRequestFailedCount=hwMacStaAuthenRequestFailedCount, hwMacWlanServiceVapRowStatus=hwMacWlanServiceVapRowStatus, hwWlanServiceManagementObjectGroups=hwWlanServiceManagementObjectGroups, hwVapManagementGroup=hwVapManagementGroup, hwVlanMappingVlanList1=hwVlanMappingVlanList1, hwStaBlacklistProfileGroup=hwStaBlacklistProfileGroup, hwWlanServiceManagementConformance=hwWlanServiceManagementConformance, hwStaMacBlackListGroup=hwStaMacBlackListGroup, hwMacSsidAirportRecvErrorFrames=hwMacSsidAirportRecvErrorFrames, hwSsidAirportTransmitErrorFrames=hwSsidAirportTransmitErrorFrames, hwBridgeProfileVlanTagged=hwBridgeProfileVlanTagged, hwBridgeProfileBridgeName=hwBridgeProfileBridgeName, hwRadioStaNumber=hwRadioStaNumber, hwWlanServiceEssServiceModeSwitch=hwWlanServiceEssServiceModeSwitch, hwMeshLinkRssiValue=hwMeshLinkRssiValue, hwBridgeLinkBridgeSubType=hwBridgeLinkBridgeSubType, hwMeshLinkTable=hwMeshLinkTable, hwWirelessSsidAirportTransmitDropFrames=hwWirelessSsidAirportTransmitDropFrames, hwMeshProfileQuickHoSwitch=hwMeshProfileQuickHoSwitch, hwMeshLinkPeerMac=hwMeshLinkPeerMac, hwMacBridgeLinkWlanID=hwMacBridgeLinkWlanID, hwStaWirelessStatTxPkts=hwStaWirelessStatTxPkts, hwMacSsidAirportRecvBytes=hwMacSsidAirportRecvBytes, hwStaSSIDName=hwStaSSIDName, hwStaOnlineFailApId=hwStaOnlineFailApId, hwSsidStatisticTable=hwSsidStatisticTable, hwMeshWhitelistPeerList=hwMeshWhitelistPeerList, hwWlanServiceEssSaclSwtichOutboundIPv6=hwWlanServiceEssSaclSwtichOutboundIPv6, hwWlanServiceBatchEssNumber=hwWlanServiceBatchEssNumber, hwMeshWhitelistRowStatus=hwMeshWhitelistRowStatus, hwNeighborApMacList=hwNeighborApMacList, hwMacMeshLinkIndex=hwMacMeshLinkIndex, hwWlanServiceEssSaclSwtichInboundIPv6=hwWlanServiceEssSaclSwtichInboundIPv6, hwMacSsidAirportRecvUnicastFrames=hwMacSsidAirportRecvUnicastFrames, hwBridgeVapRowStatus=hwBridgeVapRowStatus, hwWlanServiceEssSecurityProfileName=hwWlanServiceEssSecurityProfileName, hwStaGateway=hwStaGateway, hwStaChannelUtilRate=hwStaChannelUtilRate, hwMeshProfileFwaMode=hwMeshProfileFwaMode, hwMacSsidStatisticGroup=hwMacSsidStatisticGroup, hwStationEntry=hwStationEntry, hwDisAssocOfUserNotifiedCount=hwDisAssocOfUserNotifiedCount, hwStaRfMode=hwStaRfMode, hwStaAccessRequestCount=hwStaAccessRequestCount, hwMacApStaSnr=hwMacApStaSnr, hwMacWlanServiceVapStaAssocAndReAssocReqCount=hwMacWlanServiceVapStaAssocAndReAssocReqCount, hwWlanServiceEssStaAccessMode=hwWlanServiceEssStaAccessMode, hwStaMacBlackListTable=hwStaMacBlackListTable, hwMacReAssociationRejectCount=hwMacReAssociationRejectCount, hwMacAssocRequestCntByResource=hwMacAssocRequestCntByResource, hwStaPackets=hwStaPackets, hwReAssociationRequestCount=hwReAssociationRequestCount, hwAcCurJointApNum=hwAcCurJointApNum, hwCapwapConfigCommitAll=hwCapwapConfigCommitAll, hwInterACRoamingInfoGroup=hwInterACRoamingInfoGroup, hwMacStaAccessRequestFailedCount=hwMacStaAccessRequestFailedCount, hwBridgeLinkIndex=hwBridgeLinkIndex, hwBSSNotSupportAssocFailCount=hwBSSNotSupportAssocFailCount, hwWlanServiceEssMultiCastSwitch=hwWlanServiceEssMultiCastSwitch, hwStaWhitelistProfileStaList=hwStaWhitelistProfileStaList, hwWlanServiceVapRowStatus=hwWlanServiceVapRowStatus, hwStaBlacklistProfileStaList=hwStaBlacklistProfileStaList, hwStaStatOperMode=hwStaStatOperMode, hwMacVapManagementGroup=hwMacVapManagementGroup, hwInterACRoamingOutSuccCnt=hwInterACRoamingOutSuccCnt, hwStaNoise=hwStaNoise, hwMacRefusedStaNumByResource=hwMacRefusedStaNumByResource, hwApStaSnr=hwApStaSnr, hwMacStaAssocAndReAssocRequestCount=hwMacStaAssocAndReAssocRequestCount, hwWlanServiceEssHideSsid=hwWlanServiceEssHideSsid, hwMeshProfileLinkProbePeriod=hwMeshProfileLinkProbePeriod, hwMeshProfileTable=hwMeshProfileTable, hwMacStaIPAddress=hwMacStaIPAddress, hwMacVapStationListEntry=hwMacVapStationListEntry, hwStaAuthenRequestFailedCount=hwStaAuthenRequestFailedCount, hwMacApAssocStatApMac=hwMacApAssocStatApMac, hwMeshProfileUrgentHandoverPunishmentRssi=hwMeshProfileUrgentHandoverPunishmentRssi, hwMacBridgeVapApMac=hwMacBridgeVapApMac, hwMacApAssocStatTable=hwMacApAssocStatTable, hwMacApAssocStatGroup=hwMacApAssocStatGroup, hwSsidAirportDownReTransmitFrames=hwSsidAirportDownReTransmitFrames, hwTotalAssociatedStationCount=hwTotalAssociatedStationCount, hwWlanServiceEssSaclNameOutbound=hwWlanServiceEssSaclNameOutbound, hwStaAuthenRequestCount=hwStaAuthenRequestCount, hwStaLinkTxRate=hwStaLinkTxRate, hwApStaInfoEntry=hwApStaInfoEntry, hwWlanServiceEssSaclNumInbound=hwWlanServiceEssSaclNumInbound)
mibBuilder.exportSymbols("HUAWEI-WLAN-SERVICE-MIB", hwBridgeVapBssid=hwBridgeVapBssid, hwStaBlacklistProfileTable=hwStaBlacklistProfileTable, hwMeshVapManagementEntry=hwMeshVapManagementEntry, hwMacBridgeLinkBridgeMode=hwMacBridgeLinkBridgeMode, hwWlanServiceStaEssName=hwWlanServiceStaEssName, hwServiceBatchEntry=hwServiceBatchEntry, hwLbsTagDevMac=hwLbsTagDevMac, hwStaRecvDropFrames=hwStaRecvDropFrames, hwMacStaRadioChannel=hwMacStaRadioChannel, hwMacReAssociationSuccessCount=hwMacReAssociationSuccessCount, hwStaChannelInterfRate=hwStaChannelInterfRate, hwStaIpV6=hwStaIpV6, hwMacAssociationRejectCount=hwMacAssociationRejectCount, hwMacMeshLinkGroup=hwMacMeshLinkGroup, hwStationGroup=hwStationGroup, hwMacMeshVapBssid=hwMacMeshVapBssid, hwMacSsidCurrentStaNum=hwMacSsidCurrentStaNum, hwApStaAccessControlEntry=hwApStaAccessControlEntry, hwMacMeshLinkPeerMac=hwMacMeshLinkPeerMac, hwVapManagementTable=hwVapManagementTable, hwApStaAccessControlApId=hwApStaAccessControlApId, hwSsidAirportRecvBytes=hwSsidAirportRecvBytes, hwRadioStaApId=hwRadioStaApId, hwWlanServiceManagementObject=hwWlanServiceManagementObject, hwStaWhitelistProfileStaNum=hwStaWhitelistProfileStaNum, hwSsidAirportTransmitFrames=hwSsidAirportTransmitFrames, hwStaOnlineFailTable=hwStaOnlineFailTable, hwWlanServiceEssSaclNumOutbound=hwWlanServiceEssSaclNumOutbound, hwWlanServiceEssDhcpOption82InsertSwitch=hwWlanServiceEssDhcpOption82InsertSwitch, hwMacDisAssocOfOtherReasonsCount=hwMacDisAssocOfOtherReasonsCount, hwRadioStaRadioId=hwRadioStaRadioId, hwMacBridgeVapBridgeProfileName=hwMacBridgeVapBridgeProfileName, hwMacTotalOnlineTime=hwMacTotalOnlineTime, hwWirelessSsidStatisticEssSsid=hwWirelessSsidStatisticEssSsid, hwMeshProfileLocationBasedHandoverAlgorithmSwitch=hwMeshProfileLocationBasedHandoverAlgorithmSwitch, hwWlanServiceVapStaEssName=hwWlanServiceVapStaEssName, hwWlanServiceEssSaclNameInbound=hwWlanServiceEssSaclNameInbound, hwMeshVapRadioIndex=hwMeshVapRadioIndex, hwMacTotalAssociatedStationCount=hwMacTotalAssociatedStationCount, hwMacBridgeVapManagementEntry=hwMacBridgeVapManagementEntry, hwWlanServiceVlan=hwWlanServiceVlan, hwCapwapConfigManagementGroup=hwCapwapConfigManagementGroup, hwStaWhitelistProfileRowStatus=hwStaWhitelistProfileRowStatus, hwMacSsidStatisticEssSsid=hwMacSsidStatisticEssSsid, hwWlanServiceEssAutoOffEssStartTime=hwWlanServiceEssAutoOffEssStartTime, hwMeshProfileFwaEdcaMode=hwMeshProfileFwaEdcaMode, hwMeshProfileDhcpTrustPort=hwMeshProfileDhcpTrustPort, hwMacSsidAirportTransmitErrorFrames=hwMacSsidAirportTransmitErrorFrames, hwMacBridgeLinkInstanceIdList=hwMacBridgeLinkInstanceIdList, hwStaWirelessStatTxBytes=hwStaWirelessStatTxBytes, hwMacBridgeLinkGroup=hwMacBridgeLinkGroup, hwStaWirelessStatRxBytes64Bits=hwStaWirelessStatRxBytes64Bits, hwWlanServiceEssUniCastSwitch=hwWlanServiceEssUniCastSwitch, hwProxyOnBoardEquipVlanID=hwProxyOnBoardEquipVlanID, hwNeighborApLocalApMac=hwNeighborApLocalApMac, hwAssociationRequestCount=hwAssociationRequestCount, hwMacMeshVapRadioIndex=hwMacMeshVapRadioIndex, hwProxyOnBoardEquipIndex=hwProxyOnBoardEquipIndex, hwReAssociationRejectCount=hwReAssociationRejectCount, hwNeighborApLocalLocationID=hwNeighborApLocalLocationID, hwMacMeshLinkPeerApMac=hwMacMeshLinkPeerApMac, hwVlanMappingVlanList2=hwVlanMappingVlanList2, hwMacBridgeChannelID=hwMacBridgeChannelID, hwBridgeLinkCoverageDistance=hwBridgeLinkCoverageDistance, hwNeighborApRssiList=hwNeighborApRssiList, hwWlanServiceEssSaclNumOutboundIPv6=hwWlanServiceEssSaclNumOutboundIPv6, hwMeshWhitelistName=hwMeshWhitelistName, hwWlanServiceCapwapConfigApIndex=hwWlanServiceCapwapConfigApIndex, hwServiceBatchGroup=hwServiceBatchGroup, hwCapwapConfigManagementEntry=hwCapwapConfigManagementEntry, hwWlanServiceVapBssid=hwWlanServiceVapBssid, hwStaEncryptMethod=hwStaEncryptMethod, hwWlanServiceEssLearnClientIpEnable=hwWlanServiceEssLearnClientIpEnable, hwStaMacBlackListMacAddr=hwStaMacBlackListMacAddr, hwWlanServiceVapSSID=hwWlanServiceVapSSID, hwStaMacWhiteListMacAddr=hwStaMacWhiteListMacAddr, hwMeshProfileEntry=hwMeshProfileEntry, hwMeshWhitelistGroup=hwMeshWhitelistGroup, hwBridgeVapBridgeProfileName=hwBridgeVapBridgeProfileName, hwMacBSSNotSupportAssocFailCount=hwMacBSSNotSupportAssocFailCount, hwBridgeVapManagementGroup=hwBridgeVapManagementGroup, hwWlanServiceStaOnlineTime=hwWlanServiceStaOnlineTime, hwBridgeLinkPeerMac=hwBridgeLinkPeerMac, hwBridgeLinkPeerAPStatus=hwBridgeLinkPeerAPStatus, hwMacApStaRxPacket=hwMacApStaRxPacket, hwStaReSendBytes=hwStaReSendBytes, hwMeshProfileUrgentHandoverLowRatePeriod=hwMeshProfileUrgentHandoverLowRatePeriod, hwMacMeshVapManagementTable=hwMacMeshVapManagementTable, hwSsidAirportRecvErrorFrames=hwSsidAirportRecvErrorFrames, hwStaHtMode=hwStaHtMode, hwNeighborApLocalRadioId=hwNeighborApLocalRadioId, hwWirelessSsidTotalAssociatedFailedStationCount=hwWirelessSsidTotalAssociatedFailedStationCount, hwWlanServiceVapStaApId=hwWlanServiceVapStaApId, hwBridgeLinkRssi=hwBridgeLinkRssi, hwMacWlanServiceCapwapConfigApMac=hwMacWlanServiceCapwapConfigApMac, hwMacSsidAirportRecvFrames=hwMacSsidAirportRecvFrames, hwStaChannelBusyRate=hwStaChannelBusyRate, hwStationTable=hwStationTable, hwApStaAccessControlTable=hwApStaAccessControlTable, hwRadioStaListGroup=hwRadioStaListGroup, hwApAssocStatApId=hwApAssocStatApId, hwProxyTrackSideEquipIndex=hwProxyTrackSideEquipIndex, hwMacBridgeVapManagementGroup=hwMacBridgeVapManagementGroup, hwWlanServiceBatchEssInfoGroup=hwWlanServiceBatchEssInfoGroup, hwMeshLinkPeerApMac=hwMeshLinkPeerApMac, hwWlanServiceEssNdTrustPort=hwWlanServiceEssNdTrustPort, hwMacRadioStaRadioId=hwMacRadioStaRadioId, hwMacApStaInfoTable=hwMacApStaInfoTable, hwStaRadioMode=hwStaRadioMode, hwMacL3RoamOutStationCount=hwMacL3RoamOutStationCount, hwAssociationRejectCount=hwAssociationRejectCount, hwStaAccessOnlineTime=hwStaAccessOnlineTime, hwMacDisAssocOfStaRoamCount=hwMacDisAssocOfStaRoamCount, hwMacBridgeLinkPeerMac=hwMacBridgeLinkPeerMac, hwMeshProfileReportInterval=hwMeshProfileReportInterval, hwBridgeLinkInstanceIdList=hwBridgeLinkInstanceIdList, hwMacBridgeLinkPeerAPID=hwMacBridgeLinkPeerAPID, hwGlobalStaMacWhiteListTable=hwGlobalStaMacWhiteListTable, hwStaAuthenMethod=hwStaAuthenMethod, hwRadioStaAccessReqCount=hwRadioStaAccessReqCount, hwSsidAirportRecvFrames=hwSsidAirportRecvFrames, hwMacWlanServiceVapEssName=hwMacWlanServiceVapEssName, hwApStaAccessControlMode=hwApStaAccessControlMode, hwMacApStaAccessControlApMac=hwMacApStaAccessControlApMac, hwMeshProfileUrgentHandoverPunishmentPeriod=hwMeshProfileUrgentHandoverPunishmentPeriod, hwWlanServiceBatchApType=hwWlanServiceBatchApType, hwMacBridgeLinkBridgeType=hwMacBridgeLinkBridgeType, hwWlanServiceEssBroadCastSwitch=hwWlanServiceEssBroadCastSwitch, hwBridgeProfileEntry=hwBridgeProfileEntry, hwWlanServiceVapAssociatedStationCount=hwWlanServiceVapAssociatedStationCount, hwVlanMappingTable=hwVlanMappingTable, hwVlanMappingVlanList4=hwVlanMappingVlanList4, hwStaResetAllOnlineFailTableReason=hwStaResetAllOnlineFailTableReason, hwWlanServiceEssSaclNumInboundIPv6=hwWlanServiceEssSaclNumInboundIPv6, hwMeshProfileLinkHoldPeriod=hwMeshProfileLinkHoldPeriod, hwStaAssociateTime=hwStaAssociateTime, hwMacWlanServiceVapSSID=hwMacWlanServiceVapSSID, hwProxyTrackSideEquipEntry=hwProxyTrackSideEquipEntry, hwBridgeLinkPeerAPID=hwBridgeLinkPeerAPID, hwVlanMappingEssVlanId=hwVlanMappingEssVlanId, hwMacMeshVapApMac=hwMacMeshVapApMac, hwHandoverToApMac=hwHandoverToApMac, hwMacBridgeVapRowStatus=hwMacBridgeVapRowStatus, hwWlanServiceEssMldSnoopingEable=hwWlanServiceEssMldSnoopingEable, hwApNormalCollectCycle=hwApNormalCollectCycle, hwMacWlanServiceVapAssociatedStationCount=hwMacWlanServiceVapAssociatedStationCount, hwWlanServiceBatchRowStatus=hwWlanServiceBatchRowStatus, hwWlanServiceEssIgmpMode=hwWlanServiceEssIgmpMode, hwProxyOnBoardEquipRowStatus=hwProxyOnBoardEquipRowStatus, hwHandoverTraceTable=hwHandoverTraceTable, hwMacBridgeLinkInstanceStateList=hwMacBridgeLinkInstanceStateList)
