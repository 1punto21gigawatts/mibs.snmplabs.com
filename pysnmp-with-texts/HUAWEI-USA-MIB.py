#
# PySNMP MIB module HUAWEI-USA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-USA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, TimeTicks, iso, Gauge32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, NotificationType, ModuleIdentity, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "TimeTicks", "iso", "Gauge32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "NotificationType", "ModuleIdentity", "Bits", "Integer32")
TextualConvention, DisplayString, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "MacAddress")
hwUSA = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20))
hwUSA.setRevisions(('2010-08-11 16:00', '2010-09-11 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwUSA.setRevisionsDescriptions(('V1.00, initial version.', 'V1.01, initial version.',))
if mibBuilder.loadTexts: hwUSA.setLastUpdated('201008111600Z')
if mibBuilder.loadTexts: hwUSA.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwUSA.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwUSA.setDescription('Please provide the descritpion.')
hwUSAObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1))
hwUSAConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 1), )
if mibBuilder.loadTexts: hwUSAConfigTable.setStatus('current')
if mibBuilder.loadTexts: hwUSAConfigTable.setDescription('The table describes USA configuration.')
hwUSAConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 1, 1), ).setIndexNames((0, "HUAWEI-USA-MIB", "hwUSAPortIndex"))
if mibBuilder.loadTexts: hwUSAConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hwUSAConfigEntry.setDescription('Description.')
hwUSAPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUSAPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwUSAPortIndex.setDescription('USC Portindex.')
hwUSAInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUSAInterfaceName.setStatus('current')
if mibBuilder.loadTexts: hwUSAInterfaceName.setDescription('The URL of portal.')
hwAuthenAccessPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 1, 1, 3), EnabledStatus().clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthenAccessPoint.setStatus('current')
if mibBuilder.loadTexts: hwAuthenAccessPoint.setDescription('authentication access-point. disable:2 , enable:1 ')
hwAssociateUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2), )
if mibBuilder.loadTexts: hwAssociateUserTable.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserTable.setDescription('The table describes USA configuration.')
hwAssociateUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1), ).setIndexNames((0, "HUAWEI-USA-MIB", "hwAssociateUserIndex"))
if mibBuilder.loadTexts: hwAssociateUserEntry.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserEntry.setDescription('Associate table of users')
hwAssociateUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociateUserIndex.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserIndex.setDescription('hwAssociateUserIndex')
hwAssociateUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociateUserMac.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserMac.setDescription('AssociateUser mac.')
hwAssociateUserIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociateUserIp.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserIp.setDescription('AssociateUser ip.')
hwAssociateUserStates = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("associated", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociateUserStates.setStatus('current')
if mibBuilder.loadTexts: hwAssociateUserStates.setDescription('AssociateUser status : 0 - IDLE, 1 - ASSOCIATED, 2 - UP')
hwAssociateType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("arp", 0), ("dot1x", 1), ("dhcp", 2), ("http", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAssociateType.setStatus('current')
if mibBuilder.loadTexts: hwAssociateType.setDescription('AssociateUser type : 0 -arp,1 - dot1x, 2 - dhcp, 3 - http')
hwUserDetectInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserDetectInterval.setStatus('current')
if mibBuilder.loadTexts: hwUserDetectInterval.setDescription('The Global user detect interval.default : 15')
hwUserDetectRetry = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserDetectRetry.setStatus('current')
if mibBuilder.loadTexts: hwUserDetectRetry.setDescription('The Global detect retry times.default : 3')
hwUserSyncInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserSyncInterval.setStatus('current')
if mibBuilder.loadTexts: hwUserSyncInterval.setDescription('The Global user sync interval.default : 60')
hwGlobalLinkDownOffline = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalLinkDownOffline.setStatus('current')
if mibBuilder.loadTexts: hwGlobalLinkDownOffline.setDescription('The Global port link-down offline.default : 0')
hwGlobalControlDownOffline = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalControlDownOffline.setStatus('current')
if mibBuilder.loadTexts: hwGlobalControlDownOffline.setDescription('The Global port control-down offline.default : 0')
hwAuthenSpeedLimitMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthenSpeedLimitMaxNum.setStatus('current')
if mibBuilder.loadTexts: hwAuthenSpeedLimitMaxNum.setDescription('The Global authentication speed limit max-num.default : 60')
hwAuthenSpeedLimitInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 20, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAuthenSpeedLimitInterval.setStatus('current')
if mibBuilder.loadTexts: hwAuthenSpeedLimitInterval.setDescription('The Global authentication limit interval.default : 30')
mibBuilder.exportSymbols("HUAWEI-USA-MIB", hwUSAInterfaceName=hwUSAInterfaceName, hwAuthenAccessPoint=hwAuthenAccessPoint, hwAssociateUserIp=hwAssociateUserIp, hwUserDetectRetry=hwUserDetectRetry, hwAssociateUserIndex=hwAssociateUserIndex, hwUSAObjects=hwUSAObjects, hwAuthenSpeedLimitInterval=hwAuthenSpeedLimitInterval, hwAssociateUserStates=hwAssociateUserStates, hwAssociateUserEntry=hwAssociateUserEntry, hwUserDetectInterval=hwUserDetectInterval, hwUSAPortIndex=hwUSAPortIndex, hwGlobalLinkDownOffline=hwGlobalLinkDownOffline, hwAssociateUserTable=hwAssociateUserTable, hwGlobalControlDownOffline=hwGlobalControlDownOffline, hwUSAConfigEntry=hwUSAConfigEntry, PYSNMP_MODULE_ID=hwUSA, hwUserSyncInterval=hwUserSyncInterval, hwAuthenSpeedLimitMaxNum=hwAuthenSpeedLimitMaxNum, hwAssociateUserMac=hwAssociateUserMac, hwUSA=hwUSA, hwUSAConfigTable=hwUSAConfigTable, hwAssociateType=hwAssociateType)
