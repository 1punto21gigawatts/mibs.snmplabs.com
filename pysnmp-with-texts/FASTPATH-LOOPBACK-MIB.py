#
# PySNMP MIB module FASTPATH-LOOPBACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-LOOPBACK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:12:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
fastPath, = mibBuilder.importSymbols("BROADCOM-REF-MIB", "fastPath")
InetAddressIPv4, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, mib_2, Gauge32, Counter64, NotificationType, TimeTicks, Integer32, ModuleIdentity, Unsigned32, ObjectIdentity, Bits, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mib-2", "Gauge32", "Counter64", "NotificationType", "TimeTicks", "Integer32", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "Bits", "iso", "Counter32")
DisplayString, RowStatus, TextualConvention, TruthValue, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue", "PhysAddress")
fastPathLoopback = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22))
fastPathLoopback.setRevisions(('2007-05-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathLoopback.setRevisionsDescriptions(('Broadcom branding related changes.',))
if mibBuilder.loadTexts: fastPathLoopback.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: fastPathLoopback.setOrganization('Broadcom Corporation')
if mibBuilder.loadTexts: fastPathLoopback.setContactInfo(' Customer Support Postal: Broadcom Corporation 100, Perimeter Park Drive Morrisville, NC 27560 Tel: +1 919 865 2700')
if mibBuilder.loadTexts: fastPathLoopback.setDescription('The Broadcom Private MIB for FastPath Loopback')
agentLoopbackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1))
agentLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1), )
if mibBuilder.loadTexts: agentLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackTable.setDescription('A summary table of the Loopback instances')
agentLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1), ).setIndexNames((0, "FASTPATH-LOOPBACK-MIB", "agentLoopbackID"))
if mibBuilder.loadTexts: agentLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackEntry.setDescription('')
agentLoopbackID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentLoopbackID.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackID.setDescription('The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoopbackIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIfIndex.setDescription('This is external interface associated with inetrnal interface of loopback. The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1, 3), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPAddress.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPAddress.setDescription('The IP Address configured for the respective loopback')
agentLoopbackIPSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1, 4), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setDescription('The Subnet mask configured for the respective loopback')
agentLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 22, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackStatus.setDescription('Status of this instance. The rows can be added/deleted in the table by setting createAndGo/destroy respectively active(1) - this loopback instance is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
mibBuilder.exportSymbols("FASTPATH-LOOPBACK-MIB", agentLoopbackStatus=agentLoopbackStatus, agentLoopbackEntry=agentLoopbackEntry, agentLoopbackIPAddress=agentLoopbackIPAddress, agentLoopbackGroup=agentLoopbackGroup, fastPathLoopback=fastPathLoopback, agentLoopbackID=agentLoopbackID, agentLoopbackTable=agentLoopbackTable, agentLoopbackIfIndex=agentLoopbackIfIndex, agentLoopbackIPSubnet=agentLoopbackIPSubnet, PYSNMP_MODULE_ID=fastPathLoopback)
