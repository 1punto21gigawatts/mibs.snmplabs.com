#
# PySNMP MIB module CISCO-ITP-GSCCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-GSCCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
cgspInstNetwork, cgspCLLICode, cgspEventSequenceNumber = mibBuilder.importSymbols("CISCO-ITP-GSP-MIB", "cgspInstNetwork", "cgspCLLICode", "cgspEventSequenceNumber")
CItpTcPointCode, CItpTcNetworkName, CItpTcGtaLongAddr, CItpTcGtaLongDisplay, CItpTcURL, CItpTcGtaLongDisplayLen, CItpTcTableLoadStatus, CItpTcSubSystemNumber, CItpTcNAI, CItpTcDisplayPC, CItpTcNumberingPlan, CItpTcXuaName, CItpTcTranslationType = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcPointCode", "CItpTcNetworkName", "CItpTcGtaLongAddr", "CItpTcGtaLongDisplay", "CItpTcURL", "CItpTcGtaLongDisplayLen", "CItpTcTableLoadStatus", "CItpTcSubSystemNumber", "CItpTcNAI", "CItpTcDisplayPC", "CItpTcNumberingPlan", "CItpTcXuaName", "CItpTcTranslationType")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Counter32, Gauge32, IpAddress, MibIdentifier, Counter64, ObjectIdentity, Unsigned32, TimeTicks, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Counter32", "Gauge32", "IpAddress", "MibIdentifier", "Counter64", "ObjectIdentity", "Unsigned32", "TimeTicks", "iso", "NotificationType")
TruthValue, RowStatus, TimeStamp, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TimeStamp", "DisplayString", "TextualConvention")
ciscoGsccpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 335))
ciscoGsccpMIB.setRevisions(('2009-11-08 00:00', '2009-05-25 00:00', '2008-11-24 00:00', '2005-11-10 00:00', '2004-12-22 00:00', '2004-11-16 00:00', '2004-04-30 00:00', '2003-09-30 00:00', '2003-08-21 00:00', '2003-03-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoGsccpMIB.setRevisionsDescriptions(('Following additional objects are added. cgsccpGttSelTable object: cgsccpGttNextSelName,cgsccpGttNextSelRefed', 'Added wrr(6) into CgsccpGttMultInd for GTT weighted loadshare', 'Following additional objects are added. cgsccpInstTable objects: cgsccpInstReassUnsup, cgsccpInstReassFail cgsccpInstSegUnsup, cgsccpInstSegFail. CgsccpGttMapTable objects: cgsccpGttMapCongLvl1, cgsccpGttMapCongLvl2, cgsccpGttMapCongLvl3, cgsccpGttMapSSPRcvd, cgsccpGttMapSSARcvd. CgsccpGttErrorsTable objects: cgsccpGttErrorsReassUnsupported, cgsccpGttErrorsReassFailure, cgsccpGttErrorsSegUnsupported, cgsccpGttErrorsSegFailure. cgsccpSSNTable objects: cgsccpSSNNumProhibits, cgsccpSSNClassNumAllows cgsccpSSNClassTable objects: cgsccpSSNClassUDTMsgsSent, cgsccpSSNClassUDTMsgsRcvd, cgsccpSSNClassXUDTMsgsSent, cgsccpSSNClassXUDTMsgsRcvd, cgsccpSSNClassLUDTMsgsSent, cgsccpSSNClassLUDTMsgsRcvd. Notification objects: ciscoGsccpSegReassUnsup, ciscoGsccpSOGReceived, ciscoGsccpRmtCongestion, ciscoGsccpLocalSsStateChange.', 'Clarify description for CgsccpGttQOS textual convention and ciscoGsccpGttErrors object. Added cgsccpGttTranslatePhysicalIndex object to the cgsccpGttTranslateTable. Change default value cgsccpGttSelQOS and cgsccpGttGtaQOS objects to 255.', 'New cgsccpGttPref2EncodingScheme object to allow customer to specify encoding scheme when performing internation translation.', 'New ciscoGsccpGttErrors notification to indicate global title translation errors. The following objects were added to support new notification. cgsccpGttErrorPeriod, cgsccpGttErrorRecoveryCount, cgsccpInstErrorIndicator, cgsccpGttTransErrorsNotifEnabled, cgsccpGttErrorsSelectorNotFound, cgsccpGttErrorsIncorrectFormat, cgsccpGttErrorsGtaNotFound, cgsccpGttErrorsHopViolation, cgsccpGttErrorsMapNotFound, cgsccpGttErrorsUnequipedSS, cgsccpGttErrorsSccpUnavailable, cgsccpGttErrorsDpcUnavailable, cgsccpGttErrorsSsUnavailable, cgsccpGttErrorsDpcCongested, cgsccpGttErrorsSsCongested, cgsccpGttErrorsRouteFailure, cgsccpGttErrorsSccpUnqualified', "Deprecated table cgsccpGttAppGrTable and added cgsccpGttAppGr2Table. Also added 'cgpa' enumeration to CgsccpGttMultInd textual-convention.", 'Changes to allow cross instance Global title translation. Added following objects: cgsccpGttAppGrNetwork cgsccpGttGtaNetwork', 'Changes to allow GTT prefix conversion to be specified per instance. Added the following table: cgsccpGttPref2Table Deprecated the following table: cgsccpGttPrefTable', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoGsccpMIB.setLastUpdated('201003050000Z')
if mibBuilder.loadTexts: ciscoGsccpMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoGsccpMIB.setContactInfo('Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoGsccpMIB.setDescription('The MIB for signalling Connection Control Part(SCCP) messages transported over Signalling System No. 7 (SS7) Network via Cisco IP Transfer Point. This MIB provides information specified in ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network. The Cisco IP Transfer Point (ITP) is a hardware and software solution that transports SS7 traffic using IP. Each ITP node provides function similar to SS7 Signalling point. The relevant ITU documents describing this technology is the ITU Q series, including ITU Q.700: Introduction to CCITT Signalling System No. 7 and ITU Q.701 Functional description of the message transfer part (MTP) of Signalling System No. 7. The IETF Working Group Signalling Transport (SIGTRAN) has defined MTP3 User Adaptation (M3UA) and SCCP User Adaptation (SUA) protocols. The drafts can be found at: http://www.ietf.org/html.charters/sigtran-charter.html This MIB consists of the following tables: Instance Table Concerned Point Code List Table Mated Application (MAP) Table Global Title Translation (GTT) Selector Table Global Title Address (GTA) Table Application Group Table Prefix Conversion Table Translation Entries Table Global Title Errors Table Abbreviations: CDPA - Called Party Address CGPA - Calling Party Address CLLI - Common Language Location Codes CR - Connection Request message CREF - Connection Refusal message DPC - Destination Point Code ERR - Error message GTA - Global Title Address GTI - Global Title Indicator GTT - Global Title Translation LUDT - long unitdata message LUDTS - long unitdata service message M2PA - MTP2 Peer-to-Peer Adaptation Layer M3UA - MTP3-User Adaptation MAP - Mated Application Table MSU - Message Signal Unit MTP - Message Transport Protocol MTP2 - Layer 2 of Message Transport Protocol MTP3 - Layer 3 of Message Transport Protocol NAI - Nature of Address Indicator NP - Numbering Plan OPC - Originating Point Code PC - Point Code RTN - Route Table Name RSR - Reset Request message SCCP - Signalling Connection Control Part SCTP - Stream Transmission Protocol(RFC 2960) SI - Signalling Indicator SP - Signalling Point SLC - Signalling Link Code SLS - Signalling Link Selector SSN - Subsystem Number SUA - SCCP-User Adaptation TFR - Transfer Restricted messages TT - Title Translation UDT - unitdata message UDTS - unitdata service message XUDT - extended unitdata message XUDTS - extended unitdata service message')
ciscoGsccpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 0))
ciscoGsccpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1))
ciscoGsccpMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 2))
cgsccpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1))
cgsccpInst = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2))
cgsccpGttConPc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3))
cgsccpGttMap = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4))
cgsccpGttSel = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5))
cgsccpGttGta = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6))
cgsccpGttAppGr = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7))
cgsccpGttPref = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8))
cgsccpGttTranslate = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9))
cgsccpGttPref2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10))
cgsccpGttAppGr2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11))
cgsccpGttErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12))
cgsccpSSN = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13))
cgsccpClassSsn = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14))
cgsccpNotificationsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 15))
class CgsccpConPcListName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Concerned Point Code list name.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CgsccpGttSelName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Selector.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CgsccpGttAppName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Application Group.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CgsccpGttPrefName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Prefix Conversion table. This name is supported as octet string containing administrative information in human-readable form. The use of control codes should be avoided. The use of newline should be avoided. The use of leading or trailing white space should be avoided.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CgsccpGttDisplaySS(TextualConvention, OctetString):
    description = 'The subsystem number in display format.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 3)

class CgsccpGttAppCost(TextualConvention, Unsigned32):
    description = 'The cost associated with an entry in SCCP GTT Application Group.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 8)

class CgsccpGttAppType(TextualConvention, Integer32):
    description = "The list of application types in Application Group 'pc' : The application type is a point code. 'pcssn' : The application type is a point code and subsystem number (SSN). 'as' : The application type is an M3UA or SUA Application Server (AS)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pc", 1), ("pcssn", 2), ("as", 3))

class CgsccpGttMapType(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated Application type 'primary' : The mated application is primary 'backup' : The mated application is backup."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("primary", 1), ("backup", 2))

class CgsccpGttGtaResType(TextualConvention, Integer32):
    description = "The list of SCCP GTT Result Type 'pc' : The GTA translates to a point code. 'pcssn' : The GTA translates to a point code and optional SSN 'app' : The GTA translates to a GTT Application Group. 'as' : The GTA translates to an M3UA or SUA Application Server (AS) name."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("pc", 1), ("pcssn", 2), ("app", 3), ("as", 4))

class CgsccpGttRoutingInd(TextualConvention, Integer32):
    description = "The SCCP GTT Routing Indicator 'ri2gt' : Set RI to GT 'ri2ssn' : Set RI to SSN 'ssnRI2ssn' : Replace SSN and set RI to GT 'ssnRI2gt' : Replace SSN and set RI to SSN 'replTT' : Replace the TT 'riNotAppl' : RI is not applicable 'riUndef' : RI is undefined."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("ri2gt", 1), ("ri2ssn", 2), ("ssnRI2gt", 3), ("ssnRI2ssn", 4), ("replTT", 5), ("riNotAppl", 6), ("riUndef", 7))

class CgsccpGttMapPcStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App point code status 'allowed' : The mated application is allowed 'prohibited' : The mated application is prohibited."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("allowed", 1), ("prohibited", 2))

class CgsccpGttMapSsStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App subsystem status 'allowed' : The mated application is allowed 'prohibited' : The mated application is prohibited."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("allowed", 1), ("prohibited", 2))

class CgsccpGttMultInd(TextualConvention, Integer32):
    description = "The list of SCCP GTT Multiplicity Indicator 'solitary' : The application is solitary 'shared' : The application is shared 'dominant' : The application is dominant 'cost' : The application uses cost 'cgpa' : The application is shared and uses calling party address and weighting factor. 'wrr' : The application is shared and uses weighting factor"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("solitary", 1), ("shared", 2), ("dominant", 3), ("cost", 4), ("cgpa", 5), ("wrr", 6))

class CgsccpGttMapCongStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App congestion status 'NotCong' : The point code not congested 'CongLevel1' : The congestion level 1 'CongLevel2' : The congestion level 2 'CongLevel3' : The congestion level 3."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notCong", 1), ("congLevel1", 2), ("congLevel2", 3), ("congLevel3", 4))

class CgsccpGttTransType(TextualConvention, Unsigned32):
    description = 'The SCCP GTT Translation Type (TT).'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class CgsccpGttQOS(TextualConvention, Unsigned32):
    description = "The SCCP GTT Quality of Service (QOS). The '255' value indicates that QOS is not configured."
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class CgsccpGttGlobalTitleInd(TextualConvention, Unsigned32):
    reference = 'The Global Title Indicator is defined in the International Telecommunication Union standard Q.713: Specifications of Signalling System No. 7 - Signalling Connection Control Part (SCCP) section 3.4.1 Address Indicator.'
    description = 'The SCCP GTT Global Title Indicator (GTI). The following values are generally used: No global title included (0), For ITU, GT includes NAI only (1), For ANSI, GT includes TT, NP and encoding scheme (1), GT includes only TT (2), GT includes TT, NP and encoding scheme (3), GT includes TT, NP, encoding scheme, NAI (4), Maximum GTI (15), Invalid GTI (253), Wild GTI (254).'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class CgsccpClass(TextualConvention, Integer32):
    description = "The SCCP class of service involved 'class0' : class 0 of SCCP 'class1' : class 1 of SCCP 'class2' : class 2 of SCCP 'class3' : class 3 of SCCP 'class4' : class 4 of SCCP"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5))

cgsccpGttTranslateSample = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttTranslateSample.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateSample.setDescription('The length of the sample interval used to collect number of maximum Global Title Translations per second.')
cgsccpGttTranslatePeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttTranslatePeriod.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslatePeriod.setDescription('The length of the period used to collect the maximum Global Title Translations rate. Samples are calculated for the time period specified by the cgsccpGttTranslateSample object.')
cgsccpGttMapStateNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttMapStateNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapStateNotifEnabled.setDescription("The Map state notification truth value. 'true' Indicates that the ciscoGsccpGttMapStateChange notification is to be generated when the state changes. That is, the notification generation is enabled. 'false' Indicates that the ciscoGsccpGttMapStateChange notification generation is disabled.")
cgsccpGttLoadTableNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttLoadTableNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttLoadTableNotifEnabled.setDescription("The GTT load table notification truth value. 'true' Indicates that the ciscoGsccpGttLoadTable notification is to be generated when the a configuration is loaded. That is, the notification generation is enabled. 'false' Indicates that the ciscoGsccpGttLoadTable notification generation is disabled.")
cgsccpGttTransErrorsNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttTransErrorsNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTransErrorsNotifEnabled.setDescription("The global title translation errors notification truth value as follows. 'true' Indicates that the ciscoGsccpGttErrors notification is to be generated when the a configuration is loaded. That is, the notification generation is enabled. 'false' Indicates that the ciscoGsccpGttErrors notification generation is disabled.")
cgsccpGttErrorPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttErrorPeriod.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorPeriod.setDescription('The length of the sample window used to collect global title translations errors.')
cgsccpGttErrorRecoveryCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('windows').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsccpGttErrorRecoveryCount.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorRecoveryCount.setDescription('The number contiguous sample windows that have to be error free before the ciscoGsccpGttErrors notifications will be generated indicating end of global title translation errors condition.')
cgsccpInstTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1), )
if mibBuilder.loadTexts: cgsccpInstTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstTable.setDescription('SCCP information per instance of signalling point.')
cgsccpInstTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"))
if mibBuilder.loadTexts: cgsccpInstTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstTableEntry.setDescription('Global Title information per instance of signalling point.')
cgsccpInstTotalMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstTotalMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9. ANSI GR-82-CORE 6.4.3 Translation Type Measurements item 1.')
if mibBuilder.loadTexts: cgsccpInstTotalMsgs.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstTotalMsgs.setDescription('This counter is incremented every time a message is handled from a local or remote subsystem(Q752/9.3).')
cgsccpInstLocalMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLocalMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstLocalMsgs.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLocalMsgs.setDescription('This counter is incremented every time a message is handled from a local subsystem(Q752/9.4).')
cgsccpInstTotalGttMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstTotalGttMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9. ANSI GR-82-CORE 6.4.2 System Total Measurements Item 7.')
if mibBuilder.loadTexts: cgsccpInstTotalGttMsgs.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstTotalGttMsgs.setDescription('This counter is incremented every time a message requiring global title translation (Q752/9.5) is handled.')
cgsccpInstUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstUDTMsgsSent.setDescription('This counter is incremented every time a unitdata (UDT) message is sent (Q752/9 bis.1).')
cgsccpInstUDTSMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsSent.setDescription('This counter is incremented every time a unitdata service (UDTS) message is sent (Q752/9 bis.2).')
cgsccpInstUDTSMsgsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsAttempted.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsAttempted.setDescription('This counter is incremented every time a unitdata service (UDTS) message attempted, but may or may not be sent. The actual number of unitdata service (UDTS) message sent is reflected in the cgsccpInstUDTSMsgsSent object.')
cgsccpInstUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstUDTMsgsRcvd.setDescription('This counter is incremented every time a unitdata (UDT) message is received (Q752/9 bis.3).')
cgsccpInstUDTSMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstUDTSMsgsRcvd.setDescription('This counter is incremented every time a unitdata service (UDTS) message is received (Q752/9 bis.4).')
cgsccpInstXUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsSent.setDescription('This counter is incremented every time an extended unitdata (XUDT) message is sent (Q752/9 bis.13).')
cgsccpInstXUDTSMsgsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsAttempted.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsAttempted.setDescription('This counter is incremented every time an extended unitdata service (XUDTS) message attempted, but may or may not be sent. The actual number of extended unitdata service (UDTS) message sent is reflected in the cgsccpInstXUDTMsgsSent object.')
cgsccpInstXUDTSMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsSent.setDescription('This counter is incremented every time an extended unitdata service (XUDTS) message is sent (Q752/9 bis.14).')
cgsccpInstXUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstXUDTMsgsRcvd.setDescription('This counter is incremented every time a extended unitdata (XUDT) message is received (Q752/9 bis.15).')
cgsccpInstXUDTSMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstXUDTSMsgsRcvd.setDescription('This counter is incremented every time a extended unitdata service (XUDTS) message is received (Q752/9 bis.16).')
cgsccpInstLUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsSent.setDescription('This counter is incremented every time a long unitdata (LUDT) message is sent (Q752/9 bis.17).')
cgsccpInstLUDTSMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsSent.setDescription('This counter is incremented every time a long unitdata (LUDT) service message is sent (Q752/9 bis.18).')
cgsccpInstLUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLUDTMsgsRcvd.setDescription('This counter is incremented every time a long unitdata (LUDT) message is received (Q752/9 bis.19).')
cgsccpInstLUDTSMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLUDTSMsgsRcvd.setDescription('This counter is incremented every time a long unitdata (LUDT) service message is received (Q752/9 bis.20).')
cgsccpInstCrToMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstCrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstCrToMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstCrToMtp.setDescription('This counter is incremented every time a Connection Request(CR) messages sent to MTP. This count include ISDN-UP with embedded CRs (Q752/9 bis.5).')
cgsccpInstCrefToMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstCrefToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstCrefToMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstCrefToMtp.setDescription('This counter is incremented every time a Connection Refusal (CREF) message is sent to MTP (Q752/9 bis.6).')
cgsccpInstCrFromMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstCrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstCrFromMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstCrFromMtp.setDescription('This counter is incremented every time a Connection Request messages received from MTP. This count includes ISDN- UP with embedded CRs (Q752/9 bis.7).')
cgsccpInstCrefFromMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstCrefFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstCrefFromMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstCrefFromMtp.setDescription('This counter is incremented every time a Connection Refusal (CREF) message is received from MTP (Q752/9 bis.8).')
cgsccpInstRsrToMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstRsrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstRsrToMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstRsrToMtp.setDescription('This counter is incremented every time a Reset Request (RSR) message is sent to MTP (Q752/9 bis.9).')
cgsccpInstRsrFromMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstRsrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstRsrFromMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstRsrFromMtp.setDescription('This counter is incremented every time a Reset Request (RSR) message is received from MTP (Q752/9 bis.10).')
cgsccpInstErrToMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 24), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstErrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstErrToMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstErrToMtp.setDescription('This counter is incremented every time a Error Message (ERR) message is sent to MTP (Q752/9 bis.11).')
cgsccpInstErrFromMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 25), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstErrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpInstErrFromMtp.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstErrFromMtp.setDescription('This counter is incremented every time a Error Message (ERR) message is received from MTP (Q752/9 bis.12).')
cgsccpInstQ752T7E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 26), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstQ752T7E1.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 1. ANSI GR-82-CORE 6.4.2 System Total Measurements Item 8.')
if mibBuilder.loadTexts: cgsccpInstQ752T7E1.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstQ752T7E1.setDescription('This counter is incremented every time a translation was requested for a combination of Translation Type, Numbering Plan and Nature of Address for which no translation exists in the signalling point. This occurs when no selector is available for the combination of parameters provided in the MSU.')
cgsccpInstInvalidGttFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 27), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstInvalidGttFormat.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 8. ANSI GR-82-CORE 6.4.2 System Total Measurements Item 9.')
if mibBuilder.loadTexts: cgsccpInstInvalidGttFormat.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstInvalidGttFormat.setDescription('This counter is incremented every time an invalid Global Title format is found while performing the global title translation. This counter provides information related to the Q752 table 7 entry 8 measurement indicating syntax error detected in MSU')
cgsccpInstQ752T7E13 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 28), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstQ752T7E13.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 13')
if mibBuilder.loadTexts: cgsccpInstQ752T7E13.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstQ752T7E13.setDescription('This counter is incremented every time a hop count violation is found in the MSU.')
cgsccpInstMapNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 29), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstMapNotFound.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstMapNotFound.setDescription('This counter is incremented every time a global title translation is successful to a certain PC/SSN but it was not found in the GTT Mated Application table.')
cgsccpInstQ752T7E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 30), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstQ752T7E7.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 13')
if mibBuilder.loadTexts: cgsccpInstQ752T7E7.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstQ752T7E7.setDescription('This counter is incremented every time a global title translation could not be performed due to an unequipped subsystem (SS).')
cgsccpInstGttConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 31), CItpTcTableLoadStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstGttConfigStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstGttConfigStatus.setDescription('The status of the current load or status from the prior load operation.')
cgsccpInstConfigTS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 32), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstConfigTS.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstConfigTS.setDescription('The value of sysUpTime at the time of the last creation or deletion or modification of an entry in the cgsccpGttConPcTable, cgsccpGttMapTable, cgsccpGttSelTable, cgsccpGttGtaTable, cgsccpGttAppGr2Table, or cgsccpGttPref2Table. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the these tables.')
cgsccpInstGttConfigTS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 33), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstGttConfigTS.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstGttConfigTS.setDescription('The value of sysUpTime at the time of the last load of the GTT table using file format.')
cgsccpInstLastURL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 34), CItpTcURL()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstLastURL.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstLastURL.setDescription('The URL used to load GTT tables.')
cgsccpInstConPcTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 35), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstConPcTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstConPcTableEntries.setDescription('The number of entries in the cgsccpGttConPcTable Table for this instance. Or in other words, the number concerned point-code entries for this signalling point.')
cgsccpInstMapTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 36), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstMapTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstMapTableEntries.setDescription('The number of entries in the cgsccpGttMapTable Table for this instance. Or in other words, the number of GTT Mated Application entries for this signalling point.')
cgsccpInstGtaTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 37), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstGtaTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstGtaTableEntries.setDescription('The number of entries in the cgsccpGttGtaTable Table for this instance. Or in other words, the number of GTT Global Title Address Table entries for this signalling point.')
cgsccpInstSelTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 38), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstSelTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstSelTableEntries.setDescription('The number of entries in the cgsccpGttSelTable Table for this instance. Or in other words, the number of GTT Selector Table entries for this signalling point.')
cgsccpInstAppGrTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 39), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstAppGrTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstAppGrTableEntries.setDescription('The number of entries in the cgsccpGttAppGrTable Table for this instance. Or in other words, the number of GTT Application Group Table entries for this signalling point.')
cgsccpInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 40), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpInstRowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpInstTable following the RowStatus textual convention.')
cgsccpInstPrefTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 41), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstPrefTableEntries.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstPrefTableEntries.setDescription('The number of entries in the cgsccpGttPref2Table Table for this instance. Or in other words, the number of GTT prefix conversion table entries for this signalling point.')
cgsccpInstQ752Unqualified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 42), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstQ752Unqualified.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstQ752Unqualified.setDescription('This counter is incremented every time a global title translation is unsuccessful and the error type not covered by other specific error types.')
cgsccpInstErrorIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 43), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstErrorIndicator.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstErrorIndicator.setDescription('This object indicates whether global title translation errors have occurred in last interval specified by the cgsccpGttErrorPeriod object.')
cgsccpInstReassUnsup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstReassUnsup.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstReassUnsup.setDescription('This counter is incremented every time a SCCP message is dropped due to an unsupported reassembly feature at this instance.')
cgsccpInstReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstReassFail.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstReassFail.setDescription('This counter is incremented every time a SCCP message is dropped due to a reassembly failure at this instance.')
cgsccpInstSegUnsup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstSegUnsup.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstSegUnsup.setDescription('This counter is incremented every time a SCCP message is dropped due to an unsupported segmentation feature at this instance.')
cgsccpInstSegFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 2, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpInstSegFail.setStatus('current')
if mibBuilder.loadTexts: cgsccpInstSegFail.setDescription('This counter is incremented every time a SCCP message is dropped due to a segmentation failure at this instance.')
cgsccpGttConPcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3, 1), )
if mibBuilder.loadTexts: cgsccpGttConPcTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttConPcTable.setDescription('A table of concerned point codes.')
cgsccpGttConPcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttConPcListName"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttConPointCode"))
if mibBuilder.loadTexts: cgsccpGttConPcTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttConPcTableEntry.setDescription('A list of concerned point codes.')
cgsccpGttConPcListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3, 1, 1, 1), CgsccpConPcListName())
if mibBuilder.loadTexts: cgsccpGttConPcListName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttConPcListName.setDescription('The name of the Concerned Point Code list.')
cgsccpGttConPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3, 1, 1, 2), CItpTcPointCode())
if mibBuilder.loadTexts: cgsccpGttConPointCode.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttConPointCode.setDescription('The concerned point code for SCCP GTT.')
cgsccpGttConPcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttConPcRowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttConPcRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttConPcTable following the RowStatus textual convention.')
cgsccpGttAppGrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1), )
if mibBuilder.loadTexts: cgsccpGttAppGrTable.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrTable.setDescription('A table of SCCP GTT Application Group Table entries.')
cgsccpGttAppGrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrName"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrCost"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrEntNum"))
if mibBuilder.loadTexts: cgsccpGttAppGrTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrTableEntry.setDescription('A list of SCCP GTT Application Group attributes.')
cgsccpGttAppGrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 1), CgsccpGttAppName())
if mibBuilder.loadTexts: cgsccpGttAppGrName.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrName.setDescription('The GTT Application Group name.')
cgsccpGttAppGrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 2), CgsccpGttAppCost())
if mibBuilder.loadTexts: cgsccpGttAppGrCost.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrCost.setDescription('The cost for the item in the GTT Application Group.')
cgsccpGttAppGrEntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cgsccpGttAppGrEntNum.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrEntNum.setDescription('The entry number used to identify each application group entry that have the same cost.')
cgsccpGttAppGrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 4), CgsccpGttAppType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrType.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrType.setDescription('The type of the item in the GTT Application Group.')
cgsccpGttAppGrPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 5), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrPc.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrPc.setDescription("The point code specified by the item in the GTT Application Group. When the cgsccpGttAppGrType object has 'pc' or pcssn' values this object is required when entry is created. Otherwise, this value does not apply and can default to zero.")
cgsccpGttAppGrSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 6), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrSsn.setDescription("The subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGrType is 'pcssn'. Otherwise it is zero.")
cgsccpGttAppGrRi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 7), CgsccpGttRoutingInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrRi.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrRi.setDescription('The routing indicator (RI) specified by the item in the GTT Application Group.')
cgsccpGttAppGrMult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 8), CgsccpGttMultInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrMult.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrMult.setDescription('The multiplicity of the GTT Application Group.')
cgsccpGttAppGrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttAppGrRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrRefCount.setDescription('The number of global title addresses referring to this application group.')
cgsccpGttAppGrAsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 10), CItpTcXuaName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrAsName.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrAsName.setDescription("The Application Server (AS) name specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGrType is 'as'. Otherwise it is a zero length string.")
cgsccpGttAppGrNewSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 11), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrNewSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrNewSsn.setDescription("The new subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGrType is 'as'. Otherwise it is zero.")
cgsccpGttAppGrNumUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttAppGrNumUsed.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrNumUsed.setDescription('The number of times this item in the GTT Application Group is used successfully.')
cgsccpGttAppGrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttAppGrTable following the RowStatus textual convention.')
cgsccpGttAppGrNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 7, 1, 1, 14), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGrNetwork.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttAppGrNetwork.setDescription('The processing of global title translation may result in a packet being transferred from one network to another. This object specifies the target network.')
cgsccpGttMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1), )
if mibBuilder.loadTexts: cgsccpGttMapTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapTable.setDescription('A table of SCCP GTT Mated Application (MAP) entries.')
cgsccpGttMapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttMapPc"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSsn"))
if mibBuilder.loadTexts: cgsccpGttMapTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapTableEntry.setDescription('A list of SCCP GTT MAP attributes.')
cgsccpGttMapPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 1), CItpTcPointCode())
if mibBuilder.loadTexts: cgsccpGttMapPc.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapPc.setDescription('The point code for GTT MAP entry.')
cgsccpGttMapSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 2), CItpTcSubSystemNumber())
if mibBuilder.loadTexts: cgsccpGttMapSsn.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapSsn.setDescription('The subsystem number (SSN) for GTT MAP entry.')
cgsccpGttMapDisplayPC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 3), CItpTcDisplayPC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapDisplayPC.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapDisplayPC.setDescription('The MAP point code in display format.')
cgsccpGttMapDisplaySS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 4), CgsccpGttDisplaySS()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapDisplaySS.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapDisplaySS.setDescription('The MAP subsystem number in display format.')
cgsccpGttMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 5), CgsccpGttMapType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapType.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapType.setDescription('The GTT MAP subsystem type.')
cgsccpGttMapPcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 6), CgsccpGttMapPcStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapPcStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapPcStatus.setDescription('The GTT MAP point code status.')
cgsccpGttMapSsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 7), CgsccpGttMapSsStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapSsStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapSsStatus.setDescription('The GTT MAP subsystem status.')
cgsccpGttMapMultInd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 8), CgsccpGttMultInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapMultInd.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapMultInd.setDescription('The GTT mated application multiplicity indicator.')
cgsccpGttMapBackupPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 9), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapBackupPc.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapBackupPc.setDescription('The backup point code for the mated Application. The special value of zero indicates that no backup point code has been specified.')
cgsccpGttMapBackupSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 10), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapBackupSsn.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapBackupSsn.setDescription('The backup subsystem number for the mated Application. The special value of zero indicates that no backup subsystem number has been specified.')
cgsccpGttMapConPcList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 11), CgsccpConPcListName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapConPcList.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapConPcList.setDescription('The concerned point code list for the mated Application. The null string indicates that no concerned point code list has been specified.')
cgsccpGttMapReRouteOnCong = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapReRouteOnCong.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapReRouteOnCong.setDescription("The GTT Mated App re-route on congestion truth value. 'true' Re-routing on congestion is enabled. 'false' Re-routing on congestion is disabled.")
cgsccpGttMapAdjacent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapAdjacent.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapAdjacent.setDescription("The GTT Mated App Point Code adjacent truth value. 'true' Indicates that MAP PC is adjacent. 'false' Indicates that MAP PC is not adjacent.")
cgsccpGttMapLastSsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapLastSsUsed.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapLastSsUsed.setDescription("The GTT MAP last subsystem used truth value. 'true' It is the last used subsystem. 'false' It is not the last used subsystem.")
cgsccpGttMapUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 15), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapUsed.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapUsed.setDescription('This counter is incremented every time a message is routed by the GTT Mated Application.')
cgsccpGttMapAltUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 16), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapAltUsed.setReference('ANSI GR-82-CORE 6.4.2 System Total Measurements Item 12.')
if mibBuilder.loadTexts: cgsccpGttMapAltUsed.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapAltUsed.setDescription('This counter is incremented every time a message is re-routed on congestion by the GTT Mated Application.')
cgsccpGttMapSccpUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 17), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapSccpUnavail.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapSccpUnavail.setDescription('This counter is incremented every time a SCCP is unavailable at the GTT Mated Application.')
cgsccpGttMapQ752T7E3Fail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 18), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E3Fail.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 3')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E3Fail.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E3Fail.setDescription('This counter is incremented every time a the MTP3 layer failed at the GTT Mated Application.')
cgsccpGttMapQ752T7E3Un = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 19), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E3Un.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E3Un.setDescription('This counter is incremented every time a point code is unavailable at the GTT Mated Application.')
cgsccpGttMapQ752T7E4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 20), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E4.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 4')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E4.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E4.setDescription('This counter is incremented every time a point code is congested at the GTT Mated Application.')
cgsccpGttMapQ752T7E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 21), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E5.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 5')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E5.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E5.setDescription('This counter is incremented every time a subsystem is unavailable at the GTT Mated Application.')
cgsccpGttMapQ752T7E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 22), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E6.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 6')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E6.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapQ752T7E6.setDescription('This counter is incremented every time a subsystem is congested at the GTT Mated Application.')
cgsccpGttMapRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 23), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapRefCount.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapRefCount.setDescription('The number of global title addresses referring to this MAP entry.')
cgsccpGttMapCongStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 24), CgsccpGttMapCongStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapCongStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapCongStatus.setDescription('The status of congestion level for this MAP point code.')
cgsccpGttMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttMapRowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttMapTable following the RowStatus textual convention.')
cgsccpGttMapCongLvl1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapCongLvl1.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapCongLvl1.setDescription('This counter is incremented every time a congestion of level 1 is experienced by the remote Signalling point corresponding to this MAP entry.')
cgsccpGttMapCongLvl2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapCongLvl2.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapCongLvl2.setDescription('This counter is incremented every time a congestion of level 2 is experienced by the remote Signalling point corresponding to this MAP entry.')
cgsccpGttMapCongLvl3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapCongLvl3.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapCongLvl3.setDescription('This counter is incremented every time a congestion of level 3 is experienced by the remote Signalling point corresponding to this MAP entry.')
cgsccpGttMapSSPRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapSSPRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapSSPRcvd.setDescription('This counter is incremented every time a subsystem prohibited message is received from the remote Signalling point corresponding to this MAP entry.')
cgsccpGttMapSSARcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 4, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttMapSSARcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttMapSSARcvd.setDescription('This counter is incremented every time a subsystem allowed message is received from the remote Signalling point corresponding to this MAP entry.')
cgsccpGttSelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1), )
if mibBuilder.loadTexts: cgsccpGttSelTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelTable.setDescription('A table of SCCP GTT Selector entries.')
cgsccpGttSelTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelTT"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelNAI"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelNP"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelGTI"))
if mibBuilder.loadTexts: cgsccpGttSelTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelTableEntry.setDescription('A list of SCCP GTT Selector attributes.')
cgsccpGttSelTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 1), CgsccpGttTransType())
if mibBuilder.loadTexts: cgsccpGttSelTT.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelTT.setDescription('Translation Type (TT) for this GTT Selector.')
cgsccpGttSelNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 2), CItpTcNAI())
if mibBuilder.loadTexts: cgsccpGttSelNAI.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelNAI.setDescription('Nature of Address Indicator (NAI) for GTT Selector.')
cgsccpGttSelNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 3), CItpTcNumberingPlan())
if mibBuilder.loadTexts: cgsccpGttSelNP.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelNP.setDescription('Numbering Plan (NP) for this GTT Selector.')
cgsccpGttSelGTI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 4), CgsccpGttGlobalTitleInd())
if mibBuilder.loadTexts: cgsccpGttSelGTI.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelGTI.setDescription('Global Title Indicator (GTI) for this GTT Selector.')
cgsccpGttSelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 5), CgsccpGttSelName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttSelName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelName.setDescription('The name of the GTT selector.')
cgsccpGttSelNumPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttSelNumPerf.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelNumPerf.setDescription('This counter is incremented every time a global title translations is performed using this GTT Selector.')
cgsccpGttQ752T7E2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttQ752T7E2.setReference('Q752 - Monitoring and measurements for SS7 Network table 7 entry 2. ANSI GR-82-CORE 6.4.2 System Total Measurements Item 10.')
if mibBuilder.loadTexts: cgsccpGttQ752T7E2.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttQ752T7E2.setDescription('This counter is incremented every time a global title title translations was required and a selector was not found.')
cgsccpGttSelQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 8), CgsccpGttQOS().clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttSelQOS.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelQOS.setDescription('The SCCP GTT Selector specifies the QOS.')
cgsccpGttSelRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttSelRefCount.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelRefCount.setDescription('The number of entries in the global title addresses that belong to this selector.')
cgsccpGttSelPrePrefConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 10), CgsccpGttPrefName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttSelPrePrefConv.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelPrePrefConv.setDescription("The Prefix Conversion Table is used to convert GTA digits. This object specifies that the conversion occurs 'before' global title translation. The null string indicates that a prefix conversion table has not been specified.")
cgsccpGttSelPostPrefConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 11), CgsccpGttPrefName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttSelPostPrefConv.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelPostPrefConv.setDescription("The Post Prefix Conversion Table is used to convert GTA digits. This object specifies that the conversion occurs 'after' global title translation. The null string indicates that a post conversion table has not been specified.")
cgsccpGttSelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttSelRowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttSelRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttSelTable following the RowStatus textual convention.')
cgsccpGttNextSelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 13), CgsccpGttSelName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttNextSelName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttNextSelName.setDescription('The name of GTT next selector table.')
cgsccpGttNextSelRefed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 5, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttNextSelRefed.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttNextSelRefed.setDescription('The counter that table was referenced.')
cgsccpGttGtaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1), )
if mibBuilder.loadTexts: cgsccpGttGtaTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaTable.setDescription('A table of SCCP Global Title Address entries.')
cgsccpGttGtaTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelTT"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelNAI"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelNP"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttSelGTI"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAddr"))
if mibBuilder.loadTexts: cgsccpGttGtaTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaTableEntry.setDescription('A list of SCCP Global Title Address attributes.')
cgsccpGttGtaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 1), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgsccpGttGtaAddr.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaAddr.setDescription('The Global Title Address is 8 octets of the Called Party Address (CDPA).')
cgsccpGttGtaSelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 2), CgsccpGttSelName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaSelName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaSelName.setDescription('The Global Title Address selector name from cgsccpGttSelTable.')
cgsccpGttGtaResType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 3), CgsccpGttGtaResType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaResType.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaResType.setDescription('The SCCP Global Title Translation result type.')
cgsccpGttGtaResPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 4), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaResPc.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaResPc.setDescription("When the GTA translates to a point code, it has a valid point code and cgsccpGttGtaResType is 'pc'. Otherwise it is zero.")
cgsccpGttGtaResMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 5), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaResMap.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaResMap.setDescription("When the GTA translates to a point code and an optional SSN, it has a valid point code and cgsccpGttGtaResType is 'pcssn'. Otherwise it is zero.")
cgsccpGttGtaResAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 6), CgsccpGttAppName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaResAppGroup.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaResAppGroup.setDescription("When the GTA translates to an application group, it has a valid application group name and cgsccpGttGtaResType is 'app'. The null string indicates that an application group has not been specified.")
cgsccpGttGtaTTorSSN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 7), CItpTcTranslationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaTTorSSN.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaTTorSSN.setDescription("When this object is 'tt', the object cgsccpGttGtaTTorSSNvalue specifies the SCCP GTT Translation Type (TT). When this object is 'ssn', the object cgsccpGttGtaTTorSSNvalue specifies the SCCP SubSystem Number (SSN).")
cgsccpGttGtaTTorSSNvalue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaTTorSSNvalue.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaTTorSSNvalue.setDescription("This object specifies SCCP GTT Translation Type (TT) value when cgsccpGttGtaTTorSSN is 'tt'. It specifies SCCP SubSystem Number (SSN) value when cgsccpGttGtaTTorSSN is 'ssn'. A zero value specifies that the TT or the SSN is not applicable for this GTA entry.")
cgsccpGttGtaRoutingInd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 9), CgsccpGttRoutingInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaRoutingInd.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaRoutingInd.setDescription("The SCCP GTT GTA specifies the routing indicator. When cgsccpGttGtaResType is 'pc' or 'pcssn', this object has a valid routing indicator. When cgsccpGttGtaResType is 'app' or 'as', the routing indicator is not applicable.")
cgsccpGttGtaQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 10), CgsccpGttQOS().clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaQOS.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaQOS.setDescription('The SCCP GTT GTA specifies the QOS.')
cgsccpGttGtaAddrDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 11), CItpTcGtaLongDisplay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttGtaAddrDisp.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaAddrDisp.setDescription('The ASCII display string of Global Title Address up to 64 hex digits of the Called Party Address (CDPA). A zero length string specifies a default GTA value for the selector.')
cgsccpGttGtaAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 12), CItpTcGtaLongDisplayLen()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttGtaAddrLen.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaAddrLen.setDescription('The number of hex digits in the Global Title Address of the Called Party Address (CDPA). For a default GTA, the address length is zero.')
cgsccpGttGtaAsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 13), CItpTcXuaName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaAsName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaAsName.setDescription("The Application Server (AS) name specified by the GTA. It is valid only when cgsccpGttGtaResType is 'as'. Otherwise it is a zero length string. The null string indicates that a application server name has not been specified.")
cgsccpGttGtaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaRowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttGtaTable following the RowStatus textual convention.')
cgsccpGttGtaNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 6, 1, 1, 15), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttGtaNetwork.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttGtaNetwork.setDescription('The processing of global title translation may result in a packet being transferred from one network to another. This object specifies the target network.')
cgsccpGttPrefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1), )
if mibBuilder.loadTexts: cgsccpGttPrefTable.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefTable.setDescription('A table of SCCP GTT Prefix Conversion Table entries. When a packet with GTA is received, it may need global title translation depending on Translation Type (TT), Numbering Plan (NP), Network Address Indicator (NAI) and Global Title Indicator (GTI) present in the packet. To perform the translation a selector (cgsccpGttSelTable) corresponding to TT, NP, NAI and GTI is used. The selector also specifies prefix conversion of the GTA before (pre) performing the global title translation or after (post) performing the global title translation. A selector can specify any or both (pre and post) prefix conversion tables. The prefix conversion involves matching of GTA digits in the cgsccpGttPrefInAddr and then replacing those digits with the digits in cgsccpGttPrefOutAddr.')
cgsccpGttPrefTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefName"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefInAddr"))
if mibBuilder.loadTexts: cgsccpGttPrefTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefTableEntry.setDescription('A list of SCCP GTT Prefix Conversion attributes.')
cgsccpGttPrefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 1), CgsccpGttPrefName())
if mibBuilder.loadTexts: cgsccpGttPrefName.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefName.setDescription('The GTT Prefix Conversion table name.')
cgsccpGttPrefInAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 2), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgsccpGttPrefInAddr.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefInAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in this object, then the prefix conversion is performed.')
cgsccpGttPrefOutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 3), CItpTcGtaLongAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefOutAddr.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefOutAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in cgsccpGttPrefInAddr then this object is used in the prefix conversion.')
cgsccpGttPrefTblNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 4), CItpTcNAI().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefTblNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefTblNAI.setDescription('Nature of Address Indicator (NAI) for the Prefix Conversion Table.')
cgsccpGttPrefTblNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 5), CItpTcNumberingPlan().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefTblNP.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefTblNP.setDescription('Numbering Plan (NP) for the Prefix Conversion Table.')
cgsccpGttPrefItemNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 6), CItpTcNAI().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefItemNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefItemNAI.setDescription('Nature of Address Indicator (NAI) for the current item in this Prefix Conversion Table.')
cgsccpGttPrefItemNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 7), CItpTcNumberingPlan().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefItemNP.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefItemNP.setDescription('Numbering Plan (NP) for the current item in this Prefix Conversion Table.')
cgsccpGttPrefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 8, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPrefRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cgsccpGttPrefRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttPrefTable following the RowStatus textual convention.')
cgsccpGttTranslateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1), )
if mibBuilder.loadTexts: cgsccpGttTranslateTable.setReference('ANSI GR-82-CORE 6.4.5 Processor Measurements Item 2.')
if mibBuilder.loadTexts: cgsccpGttTranslateTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateTable.setDescription('The translate table contains a history of the number of global title packets that were translated on the various processors enabled for this function. The ability to translate GTT is critical to many SS7 functions. This table provides peak utilization to allow planning of maximum load on SS7 network.')
cgsccpGttTranslateTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateSlot"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateEntry"))
if mibBuilder.loadTexts: cgsccpGttTranslateTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateTableEntry.setDescription('A list of global title translate statistics.')
cgsccpGttTranslateSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: cgsccpGttTranslateSlot.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateSlot.setDescription('The slot number containing the CPU that is performing Global Title translation.')
cgsccpGttTranslateEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: cgsccpGttTranslateEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateEntry.setDescription('The entry number. Each entry represents a period of time as specified by the cgsccpGttTranslatePeriod object. The entries are ordered from old to new.')
cgsccpGttTranslateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttTranslateRate.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateRate.setDescription('During each interval the rate of global title translations is calculated every second. This object is the highest rate of global title translation encountered in the interval specified by the cgsccpGttTranslatePeriod object.')
cgsccpGttTranslateTS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttTranslateTS.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslateTS.setDescription('This timestamp indicates when time period ended for this sample.')
cgsccpGttTranslatePhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 9, 1, 1, 5), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttTranslatePhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttTranslatePhysicalIndex.setDescription('The entPhysicalIndex of the physical entity for which the statistics in this entry are maintained. The physical entity can be a CPU chip, a group of CPUs, a CPU card etc. The exact type of this entity is described by its entPhysicalVendorType value. If the CPU statistics in this entry correspond to more than one physical entity (or to no physical entity), or if the entPhysicalTable is not supported on the SNMP agent, the value of this object must be zero.')
cgsccpGttPref2Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1), )
if mibBuilder.loadTexts: cgsccpGttPref2Table.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2Table.setDescription('A table of SCCP GTT Prefix Conversion Table entries. This table replaces the cgsccpGttPrefTable tables and allow prefix conversion to be specified per instance. When a packet with GTA is received, it may need global title translation depending on Translation Type (TT), Numbering Plan (NP), Network Address Indicator (NAI) and Global Title Indicator (GTI) present in the packet. To perform the translation a selector (cgsccpGttSelTable) corresponding to TT, NP, NAI and GTI is used. The selector also specifies prefix conversion of the GTA before (pre) performing the global title translation or after (post) performing the global title translation. A selector can specify any or both (pre and post) prefix conversion tables. The prefix conversion involves matching of GTA digits in the cgsccpGttPref2InAddr and then replacing those digits with the digits in cgsccpGttPref2OutAddr.')
cgsccpGttPref2TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2Name"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2InAddr"))
if mibBuilder.loadTexts: cgsccpGttPref2TableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2TableEntry.setDescription('A list of SCCP GTT Prefix Conversion attributes.')
cgsccpGttPref2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 1), CgsccpGttPrefName())
if mibBuilder.loadTexts: cgsccpGttPref2Name.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2Name.setDescription('The GTT Prefix Conversion table name.')
cgsccpGttPref2InAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 2), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgsccpGttPref2InAddr.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2InAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in this object, then the prefix conversion is performed.')
cgsccpGttPref2OutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 3), CItpTcGtaLongAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2OutAddr.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2OutAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in cgsccpGttPref2InAddr then this object is used in the prefix conversion.')
cgsccpGttPref2TblNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 4), CItpTcNAI().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2TblNAI.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2TblNAI.setDescription('Nature of Address Indicator (NAI) for the Prefix Conversion Table.')
cgsccpGttPref2TblNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 5), CItpTcNumberingPlan().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2TblNP.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2TblNP.setDescription('Numbering Plan (NP) for the Prefix Conversion Table.')
cgsccpGttPref2ItemNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 6), CItpTcNAI().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2ItemNAI.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2ItemNAI.setDescription('Nature of Address Indicator (NAI) for the current item in this Prefix Conversion Table.')
cgsccpGttPref2ItemNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 7), CItpTcNumberingPlan().clone(253)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2ItemNP.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2ItemNP.setDescription('Numbering Plan (NP) for the current item in this Prefix Conversion Table.')
cgsccpGttPref2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2RowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2RowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttPref2Table following the RowStatus textual convention.')
cgsccpGttPref2EncodingScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("bcdOdd", 1), ("bcdEven", 2), ("national", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttPref2EncodingScheme.setReference('E.164 and E.214 address formats and Q.713')
if mibBuilder.loadTexts: cgsccpGttPref2EncodingScheme.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttPref2EncodingScheme.setDescription('The encoding scheme to be used for output GTT address as follows. unknown - encoding scheme is not specified at the address level. bcdOdd - Use BCD odd encoding scheme. bcdEven - Use BCD even encoding scheme. national - national specific.')
cgsccpGttAppGr2Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1), )
if mibBuilder.loadTexts: cgsccpGttAppGr2Table.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Table.setDescription('A table of SCCP GTT Application Group Table entries.')
cgsccpGttAppGr2TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Name"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2EntNum"))
if mibBuilder.loadTexts: cgsccpGttAppGr2TableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2TableEntry.setDescription('A list of SCCP GTT Application Group attributes.')
cgsccpGttAppGr2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 1), CgsccpGttAppName())
if mibBuilder.loadTexts: cgsccpGttAppGr2Name.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Name.setDescription('The GTT Application Group name.')
cgsccpGttAppGr2EntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cgsccpGttAppGr2EntNum.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2EntNum.setDescription('The entry number is an arbitrary number. It is used to identify each application group entry.')
cgsccpGttAppGr2Mult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 3), CgsccpGttMultInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Mult.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Mult.setDescription('The multiplicity of the GTT Application Group.')
cgsccpGttAppGr2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 4), CgsccpGttAppType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Type.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Type.setDescription('The type of the item in the GTT Application Group.')
cgsccpGttAppGr2Cost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 5), CgsccpGttAppCost()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Cost.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Cost.setDescription("The cost for the item in the GTT Application Group. When the cgsccpGttAppGr2Mult object has 'cost' value, this object is required when entry is created. Otherwise, this value does not apply.")
cgsccpGttAppGr2Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Weight.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Weight.setDescription("The weighting factor used for the item in the GTT Application Group. When the cgsccpGttAppGr2Mult object has 'cgpa' value, this object is required when entry is created. Otherwise, this value does not apply and can default zero.")
cgsccpGttAppGr2Pc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 7), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Pc.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Pc.setDescription("The point code specified by the item in the GTT Application Group. When the cgsccpGttAppGr2Type object has 'pc' or pcssn' values this object is required when entry is created. Otherwise, this value does not apply and can default to zero.")
cgsccpGttAppGr2Ssn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 8), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Ssn.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Ssn.setDescription("The subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGr2Type is 'pcssn'. Otherwise it is zero.")
cgsccpGttAppGr2Ri = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 9), CgsccpGttRoutingInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Ri.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Ri.setDescription('The routing indicator (RI) specified by the item in the GTT Application Group.')
cgsccpGttAppGr2RefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttAppGr2RefCount.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2RefCount.setDescription('The number of global title addresses referring to this application group.')
cgsccpGttAppGr2AsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 11), CItpTcXuaName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2AsName.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2AsName.setDescription("The Application Server (AS) name specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGr2Type is 'as'. Otherwise it is a zero length string.")
cgsccpGttAppGr2NewSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 12), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2NewSsn.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2NewSsn.setDescription("The new subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cgsccpGttAppGr2Type is 'as'. Otherwise it is zero.")
cgsccpGttAppGr2NumUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpGttAppGr2NumUsed.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2NumUsed.setDescription('The number of times this item in the GTT Application Group is used successfully.')
cgsccpGttAppGr2Network = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 14), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2Network.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2Network.setDescription('The processing of global title translation may result in a packet being transferred from one network to another. This object specifies the target network.')
cgsccpGttAppGr2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 11, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsccpGttAppGr2RowStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttAppGr2RowStatus.setDescription('The object is used by a management station to create or delete the row entry in cgsccpGttAppGr2Table following the RowStatus textual convention.')
cgsccpGttErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1), )
if mibBuilder.loadTexts: cgsccpGttErrorsTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsTable.setDescription('This table is used to indicate errors in global title translation and will be used to provide information for ciscoGsccpGttErrors notification.')
cgsccpGttErrorsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"))
if mibBuilder.loadTexts: cgsccpGttErrorsTableEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsTableEntry.setDescription('All objects in this table are derived from other objects in this MIB. At the end of each interval the values of these objects will be updated with number of errors that occurred during last interval. The length of the interval is defined by the cgsccpGttErrorPeriod object.')
cgsccpGttErrorsSelectorNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 1), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSelectorNotFound.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSelectorNotFound.setDescription('This counter is incremented every time a translation was requested for a combination of Translation Type, Numbering Plan and Nature of Address for which no translation exists in the signalling point. This occurs when no selector is available for the combination of parameters provided in the MSU. This counter is derived from cgsccpInstQ752T7E1 object.')
cgsccpGttErrorsIncorrectFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 2), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsIncorrectFormat.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsIncorrectFormat.setDescription('This counter is incremented every time an invalid Global Title format is found while performing the global title translation. This counter is derived from cgsccpInstInvalidGttFormat object.')
cgsccpGttErrorsGtaNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 3), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsGtaNotFound.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsGtaNotFound.setDescription('This counter is incremented every time a global title title translations was required and a selector was not found. This counter is derived from cgsccpGttQ752T7E2 object.')
cgsccpGttErrorsHopViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 4), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsHopViolation.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsHopViolation.setDescription('This counter is incremented every time a hop count violation is found in the MSU. This counter is derived from cgsccpInstQ752T7E13 object.')
cgsccpGttErrorsMapNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 5), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsMapNotFound.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsMapNotFound.setDescription('This counter is incremented every time a global title translation is successful to a certain PC/SSN but it was not found in the GTT Mated Application table. This counter is derived from cgsccpInstMapNotFound object.')
cgsccpGttErrorsUnequipedSS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 6), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsUnequipedSS.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsUnequipedSS.setDescription('This counter is incremented every time a global title translation could not be performed due to an unequipped subsystem (SS). This counter is derived from cgsccpInstQ752T7E7 object.')
cgsccpGttErrorsSccpUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 7), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSccpUnavailable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSccpUnavailable.setDescription('This counter is incremented every time a SCCP is unavailable at the GTT Mated Application. This counter is derived from cgsccpGttMapSccpUnavail object.')
cgsccpGttErrorsDpcUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 8), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsDpcUnavailable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsDpcUnavailable.setDescription('This counter is incremented every time a point code is unavailable at the GTT Mated Application. This counter is derived from cgsccpGttMapQ752T7E3Un object.')
cgsccpGttErrorsSsUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 9), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSsUnavailable.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSsUnavailable.setDescription('This counter is incremented every time a subsystem is unavailable at the GTT Mated Application. This counter is derived from cgsccpGttMapQ752T7E5 object.')
cgsccpGttErrorsDpcCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 10), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsDpcCongested.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsDpcCongested.setDescription('This counter is incremented every time a point code is congested at the GTT Mated Application. This counter is derived from cgsccpGttMapQ752T7E4 object.')
cgsccpGttErrorsSsCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 11), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSsCongested.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSsCongested.setDescription('This counter is incremented every time a subsystem is congested at the GTT Mated Application. This counter is derived from cgsccpGttMapQ752T7E6 object.')
cgsccpGttErrorsRouteFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 12), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsRouteFailure.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsRouteFailure.setDescription('This counter is incremented every time a the MTP3 layer failed at the GTT Mated Application. This counter is derived from cgsccpGttMapQ752T7E3Fail object.')
cgsccpGttErrorsSccpUnqualified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 13), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSccpUnqualified.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSccpUnqualified.setDescription('This counter is incremented every time a global title translation is unsuccessful and the error type not covered by other specific error types. This counter is derived from cgsccpInstQ752Unqualified object.')
cgsccpGttErrorsReassUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 14), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsReassUnsupported.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsReassUnsupported.setDescription('This counter is incremented every time when the incoming SCCP message needs to be dropped due to the unsupported reassembly feature. This counter is derived from cgsccpInstReassUnsup object.')
cgsccpGttErrorsReassFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 15), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsReassFailure.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsReassFailure.setDescription('This counter is incremented every time when the incoming SCCP message needs to be dropped due to the reassembly failure. This counter is derived from cgsccpInstReassFail object.')
cgsccpGttErrorsSegUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 16), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSegUnsupported.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSegUnsupported.setDescription('This counter is incremented every time when either SCCP message from a remote node or local SCCP stack needs to be dropped due to the unsupported segmentation feature. This counter is derived from cgsccpInstSegUnsup object.')
cgsccpGttErrorsSegFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 12, 1, 1, 17), Gauge32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpGttErrorsSegFailure.setStatus('current')
if mibBuilder.loadTexts: cgsccpGttErrorsSegFailure.setDescription('This counter is incremented every time when either SCCP message from a remote node or local SCCP stack needs to be dropped due to the segmentation failure. This counter is derived from cgsccpInstSegFail object.')
cgsccpSSNTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13, 1), )
if mibBuilder.loadTexts: cgsccpSSNTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNTable.setDescription('The SSN table provides a breakdown of SCCP measurements at local subsystem level.')
cgsccpSSNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpSsn"))
if mibBuilder.loadTexts: cgsccpSSNEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNEntry.setDescription('Each table entry represents a specific local subsystem number(SSN).')
cgsccpSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13, 1, 1, 1), CItpTcSubSystemNumber())
if mibBuilder.loadTexts: cgsccpSsn.setStatus('current')
if mibBuilder.loadTexts: cgsccpSsn.setDescription('The SCCP subsystem number.')
cgsccpSSNNumProhibits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13, 1, 1, 2), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNNumProhibits.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 8.')
if mibBuilder.loadTexts: cgsccpSSNNumProhibits.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNNumProhibits.setDescription('This counter is incremented every time this local subsystem transitions to prohibit state at this instance (Q752/8.9).')
cgsccpSSNNumAllows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 13, 1, 1, 3), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNNumAllows.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 8.')
if mibBuilder.loadTexts: cgsccpSSNNumAllows.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNNumAllows.setDescription('This counter is incremented every time this local subsystem transitions to allowed state at this instance (Q752/8.10).')
cgsccpSSNClassTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1), )
if mibBuilder.loadTexts: cgsccpSSNClassTable.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassTable.setDescription('The SSN Class table contains information about the number of UDT, XUDT, LUDT messages originated and terminated for a specific SSN and class. This provides the granularity of information required by Q752 elements 9.6 and 9.7')
cgsccpSSNClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpSsn"), (0, "CISCO-ITP-GSCCP-MIB", "cgsccpClassIdx"))
if mibBuilder.loadTexts: cgsccpSSNClassEntry.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassEntry.setDescription('Each table entry represents a specific class and subsystem number(SSN).')
cgsccpClassIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 1), CgsccpClass())
if mibBuilder.loadTexts: cgsccpClassIdx.setStatus('current')
if mibBuilder.loadTexts: cgsccpClassIdx.setDescription('The SCCP Class index.')
cgsccpSSNClassUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsSent.setDescription('This counter is incremented every time a unitdata (UDT) message is sent for this SCCP class and SSN(Q752/9.6).')
cgsccpSSNClassUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassUDTMsgsRcvd.setDescription('This counter is incremented every time a unitdata (UDT) message is received for this SCCP class and SSN(Q752/9.7).')
cgsccpSSNClassXUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsSent.setDescription('This counter is incremented every time an extended unitdata (XUDT) message is sent for this SCCP class and SSN (Q752/9.6).')
cgsccpSSNClassXUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassXUDTMsgsRcvd.setDescription('This counter is incremented every time an extended unitdata (XUDT) message is received for this SCCP class and SSN (Q752/9.7).')
cgsccpSSNClassLUDTMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsSent.setDescription('This counter is incremented every time a long unitdata (LUDT) message is sent for this SCCP class and SSN (Q752/9.6).')
cgsccpSSNClassLUDTMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 14, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsRcvd.setStatus('current')
if mibBuilder.loadTexts: cgsccpSSNClassLUDTMsgsRcvd.setDescription('This counter is incremented every time a long unitdata (LUDT) message is received for this SCCP class and SSN (Q752/9.7).')
cgsccpLocalDisplaySS = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 15, 1), Unsigned32()).setUnits('seconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpLocalDisplaySS.setStatus('current')
if mibBuilder.loadTexts: cgsccpLocalDisplaySS.setDescription('Local subsystem in display format.')
cgsccpLocalSsStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 335, 1, 15, 2), CgsccpGttMapSsStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsccpLocalSsStatus.setStatus('current')
if mibBuilder.loadTexts: cgsccpLocalSsStatus.setDescription('Local subsystem status.')
ciscoGsccpGttMapStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 1)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplayPC"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplaySS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSsStatus"))
if mibBuilder.loadTexts: ciscoGsccpGttMapStateChange.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttMapStateChange.setDescription('The notification generated when a mated application subsystem changes to a new state. The value of cgsccpGttMapSsStatus indicates the new state for the subsystem.')
ciscoGsccpGttLoadTable = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 2)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGttConfigStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLastURL"))
if mibBuilder.loadTexts: ciscoGsccpGttLoadTable.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttLoadTable.setDescription('This notification is generated whenever a load operation is started or completes.')
ciscoGsccpGttErrors = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 3)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrorIndicator"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSelectorNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsIncorrectFormat"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsGtaNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsHopViolation"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsMapNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsUnequipedSS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSccpUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsDpcUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSsUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsDpcCongested"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSsCongested"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsRouteFailure"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSccpUnqualified"))
if mibBuilder.loadTexts: ciscoGsccpGttErrors.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttErrors.setDescription('This notification is generated whenever any global title error is encountered in last interval specified by the cgsccpGttErrorPeriod and the cgsccpInstErrorIndicator will be set to true. The notification will also be generated when errors have abated. The notification is generated after the number of recovery intervals as specified by the cgsccpGttErrorRecoveryCount object has passed without any global title errors.')
ciscoGsccpSegReassUnsup = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 4)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrorIndicator"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsReassUnsupported"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsReassFailure"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSegUnsupported"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSegFailure"))
if mibBuilder.loadTexts: ciscoGsccpSegReassUnsup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpSegReassUnsup.setDescription('This notification is generated initially when a SCCP message is dropped due to a segmentation or reassembly unsupported or failure errors in last interval specified by the cgsccpGttErrorPeriod and the cgsccpInstErrorIndicator will be set to true. The notification will also be generated after the number of recovery intervals as specified by the cgsccpGttErrorRecoveryCount object has passed without any segmentation or reassembly unsupported errors.')
ciscoGsccpSOGReceived = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 5)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplayPC"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplaySS"))
if mibBuilder.loadTexts: ciscoGsccpSOGReceived.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpSOGReceived.setDescription('This notification is generated initially when a Subsystem Out-of-Service Grant is sent in response to a Subsystem Out-of-Service Request message. The affected PC and affected SSN are provided with this notification.')
ciscoGsccpRmtCongestion = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 6)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplayPC"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl1"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl2"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl3"))
if mibBuilder.loadTexts: ciscoGsccpRmtCongestion.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpRmtCongestion.setDescription('This notification is generated initially when congestion is experienced in the remote SCCP component for the first time in last interval specified by the cgsccpGttErrorPeriod. The notification is generated after the number of recovery intervals as specified by the cgsccpGttErrorRecoveryCount object has passed without any congestion errors and total number of local congestion observed for different congestion levels at the end of the interval along with the latest known congestion status for that remote signalling point will be provided.')
ciscoGsccpLocalSsStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 335, 0, 7)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSCCP-MIB", "cgsccpLocalDisplaySS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpLocalSsStatus"))
if mibBuilder.loadTexts: ciscoGsccpLocalSsStateChange.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpLocalSsStateChange.setDescription('The notification generated when a local application subsystem changes to a new state. The subsystem number and the latest subsystem state will be provided in this notification.')
ciscoGsccpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1))
ciscoGsccpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2))
ciscoGsccpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 1)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBCompliance = ciscoGsccpMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 2)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev1 = ciscoGsccpMIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev1.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 3)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev2 = ciscoGsccpMIBComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev2.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 4)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev3 = ciscoGsccpMIBComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev3.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 5)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev3"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev4 = ciscoGsccpMIBComplianceRev4.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev4.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 6)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev3"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev5 = ciscoGsccpMIBComplianceRev5.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev5.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 7)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev3"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSsnGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSsnClassGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsInfoGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev6 = ciscoGsccpMIBComplianceRev6.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev6.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB')
ciscoGsccpMIBComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 1, 8)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttConPcGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupRev1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttGtaGroupRev2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttAppGroupRev3"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttPrefGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGlobalEntryGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpInstTableEntryGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrorsGroupSup1"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSsnGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSsnClassGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsInfoGroup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpNotificationsGroupSup2"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttSelGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpMIBComplianceRev7 = ciscoGsccpMIBComplianceRev7.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpMIBComplianceRev7.setDescription('The compliance statement for entities which implement the CISCO-ITP-GSCCP-MIB.my MIB.')
ciscoGsccpGlobalEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 1)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateSample"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslatePeriod"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateRate"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapStateNotifEnabled"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttLoadTableNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGlobalEntryGroup = ciscoGsccpGlobalEntryGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpGlobalEntryGroup.setDescription('Gateway SCCP Scalar objects.')
ciscoGsccpInstTableEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 2)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpInstTotalMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLocalMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstTotalGttMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsAttempted"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsAttempted"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrefToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrefFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRsrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRsrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E1"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstInvalidGttFormat"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E13"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstMapNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E7"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGttConfigStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstConfigTS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGttConfigTS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLastURL"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstConPcTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstMapTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGtaTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstSelTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstAppGrTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpInstTableEntryGroup = ciscoGsccpInstTableEntryGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpInstTableEntryGroup.setDescription('SCCP main objects.')
ciscoGsccpGttConPcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 3)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttConPcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttConPcGroup = ciscoGsccpGttConPcGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttConPcGroup.setDescription('SCCP Concerned Point Code objects.')
ciscoGsccpGttAppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 4)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrType"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrPc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRi"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrMult"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRefCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrAsName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrNewSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrNumUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttAppGroup = ciscoGsccpGttAppGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpGttAppGroup.setDescription('SCCP GTT Application Group objects.')
ciscoGsccpGttMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 5)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplayPC"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapDisplaySS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapType"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapPcStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSsStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapMultInd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapBackupPc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapBackupSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapConPcList"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapReRouteOnCong"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapAdjacent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapLastSsUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapAltUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSccpUnavail"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapQ752T7E3Fail"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapQ752T7E3Un"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapQ752T7E4"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapQ752T7E5"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapQ752T7E6"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapRefCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttMapGroup = ciscoGsccpGttMapGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttMapGroup.setDescription('SCCP GTT Mated Application objects.')
ciscoGsccpGttSelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 6)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelNumPerf"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttQ752T7E2"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelQOS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelRefCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelPrePrefConv"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelPostPrefConv"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttSelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttSelGroup = ciscoGsccpGttSelGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttSelGroup.setDescription('SCCP GTT Selector objects.')
ciscoGsccpGttGtaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 7)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaSelName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResType"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResPc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResMap"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResAppGroup"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaTTorSSN"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaTTorSSNvalue"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaRoutingInd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaQOS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAddrDisp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAddrLen"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAsName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttGtaGroup = ciscoGsccpGttGtaGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpGttGtaGroup.setDescription('SCCP GTT Global Title Address objects.')
ciscoGsccpGttPrefGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 8)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefOutAddr"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefTblNAI"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefTblNP"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefItemNAI"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefItemNP"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPrefRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttPrefGroup = ciscoGsccpGttPrefGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpGttPrefGroup.setDescription('SCCP GTT Prefix Conversion Table objects.')
ciscoGsccpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 9)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttMapStateChange"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttLoadTable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpNotificationsGroup = ciscoGsccpNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpNotificationsGroup.setDescription('SCCP notification objects.')
ciscoGsccpGttPrefGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 10)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2OutAddr"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2TblNAI"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2TblNP"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2ItemNAI"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2ItemNP"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttPrefGroupRev1 = ciscoGsccpGttPrefGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttPrefGroupRev1.setDescription('SCCP GTT Prefix Conversion Table objects.')
ciscoGsccpInstTableEntryGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 11)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpInstTotalMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLocalMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstTotalGttMsgs"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsAttempted"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsAttempted"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstXUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTSMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLUDTSMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrefToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstCrefFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRsrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRsrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrToMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrFromMtp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E1"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstInvalidGttFormat"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E13"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstMapNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752T7E7"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGttConfigStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstConfigTS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGttConfigTS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstLastURL"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstConPcTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstMapTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstGtaTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstSelTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstAppGrTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstRowStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstPrefTableEntries"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstQ752Unqualified"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpInstTableEntryGroupRev1 = ciscoGsccpInstTableEntryGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpInstTableEntryGroupRev1.setDescription('SCCP main objects.')
ciscoGsccpGlobalEntryGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 12)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateSample"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslatePeriod"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateRate"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapStateNotifEnabled"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttLoadTableNotifEnabled"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslateTS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGlobalEntryGroupRev1 = ciscoGsccpGlobalEntryGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGlobalEntryGroupRev1.setDescription('Gateway SCCP Scalar objects.')
ciscoGsccpGttAppGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 13)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrType"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrPc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRi"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrMult"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRefCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrAsName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrNewSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrNumUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrRowStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGrNetwork"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttAppGroupRev2 = ciscoGsccpGttAppGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGsccpGttAppGroupRev2.setDescription('SCCP GTT Application Group objects.')
ciscoGsccpGttGtaGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 14)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaSelName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResType"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResPc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResMap"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaResAppGroup"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaTTorSSN"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaTTorSSNvalue"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaRoutingInd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaQOS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAddrDisp"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAddrLen"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaAsName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaRowStatus"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttGtaNetwork"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttGtaGroupRev2 = ciscoGsccpGttGtaGroupRev2.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttGtaGroupRev2.setDescription('SCCP GTT Global Title Address objects.')
ciscoGsccpGttAppGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 15)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Mult"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Type"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Cost"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Weight"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Pc"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Ssn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Ri"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2RefCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2AsName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2NewSsn"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2NumUsed"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2Network"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttAppGr2RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttAppGroupRev3 = ciscoGsccpGttAppGroupRev3.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttAppGroupRev3.setDescription('SCCP GTT Application Group objects.')
ciscoGsccpNotificationsGroupSup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 16)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpGttErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpNotificationsGroupSup1 = ciscoGsccpNotificationsGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpNotificationsGroupSup1.setDescription('SCCP Error notification objects.')
ciscoGsccpGttErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 17)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorPeriod"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorRecoveryCount"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstErrorIndicator"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttTransErrorsNotifEnabled"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSelectorNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsIncorrectFormat"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsGtaNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsHopViolation"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsMapNotFound"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsUnequipedSS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSccpUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsDpcUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSsUnavailable"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsDpcCongested"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSsCongested"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsRouteFailure"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSccpUnqualified"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttErrorsGroup = ciscoGsccpGttErrorsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttErrorsGroup.setDescription('SCCP GTT Application Group objects.')
ciscoGsccpGttPrefGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 18)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttPref2EncodingScheme"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttPrefGroupSup1 = ciscoGsccpGttPrefGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttPrefGroupSup1.setDescription('SCCP GTT additional prefix conversion objects.')
ciscoGsccpGlobalEntryGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 19)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttTranslatePhysicalIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGlobalEntryGroupSup1 = ciscoGsccpGlobalEntryGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGlobalEntryGroupSup1.setDescription('SCCP translation physical index.')
ciscoGsccpInstTableEntryGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 20)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpInstReassUnsup"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstReassFail"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstSegUnsup"), ("CISCO-ITP-GSCCP-MIB", "cgsccpInstSegFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpInstTableEntryGroupSup1 = ciscoGsccpInstTableEntryGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpInstTableEntryGroupSup1.setDescription('SCCP Instance table additional objects.')
ciscoGsccpGttMapGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 21)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl1"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl2"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapCongLvl3"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSSPRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttMapSSARcvd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttMapGroupSup1 = ciscoGsccpGttMapGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttMapGroupSup1.setDescription('SCCP GTT Mated Application additional objects.')
ciscoGsccpGttErrorsGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 22)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsReassUnsupported"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsReassFailure"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSegUnsupported"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttErrorsSegFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttErrorsGroupSup1 = ciscoGsccpGttErrorsGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttErrorsGroupSup1.setDescription('SCCP GTT additional error objects.')
ciscoGsccpGttSsnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 23)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpSSNNumProhibits"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNNumAllows"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttSsnGroup = ciscoGsccpGttSsnGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttSsnGroup.setDescription('SCCP SSN measurement objects.')
ciscoGsccpGttSsnClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 24)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassXUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassXUDTMsgsRcvd"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassLUDTMsgsSent"), ("CISCO-ITP-GSCCP-MIB", "cgsccpSSNClassLUDTMsgsRcvd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttSsnClassGroup = ciscoGsccpGttSsnClassGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttSsnClassGroup.setDescription('SCCP SSN Class measurement objects.')
ciscoGsccpNotificationsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 25)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpLocalDisplaySS"), ("CISCO-ITP-GSCCP-MIB", "cgsccpLocalSsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpNotificationsInfoGroup = ciscoGsccpNotificationsInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpNotificationsInfoGroup.setDescription('SCCP notification information objects.')
ciscoGsccpNotificationsGroupSup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 26)).setObjects(("CISCO-ITP-GSCCP-MIB", "ciscoGsccpSegReassUnsup"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpSOGReceived"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpRmtCongestion"), ("CISCO-ITP-GSCCP-MIB", "ciscoGsccpLocalSsStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpNotificationsGroupSup2 = ciscoGsccpNotificationsGroupSup2.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpNotificationsGroupSup2.setDescription('SCCP additional notification objects.')
ciscoGsccpGttSelGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 335, 2, 2, 27)).setObjects(("CISCO-ITP-GSCCP-MIB", "cgsccpGttNextSelName"), ("CISCO-ITP-GSCCP-MIB", "cgsccpGttNextSelRefed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGsccpGttSelGroupSup1 = ciscoGsccpGttSelGroupSup1.setStatus('current')
if mibBuilder.loadTexts: ciscoGsccpGttSelGroupSup1.setDescription('SCCP GTT selector table additional objects.')
mibBuilder.exportSymbols("CISCO-ITP-GSCCP-MIB", ciscoGsccpMIBComplianceRev5=ciscoGsccpMIBComplianceRev5, cgsccpGttMapPc=cgsccpGttMapPc, cgsccpGttPrefRowStatus=cgsccpGttPrefRowStatus, cgsccpInstQ752T7E7=cgsccpInstQ752T7E7, cgsccpGttPref2ItemNP=cgsccpGttPref2ItemNP, cgsccpGttAppGrNumUsed=cgsccpGttAppGrNumUsed, ciscoGsccpSOGReceived=ciscoGsccpSOGReceived, cgsccpLocalDisplaySS=cgsccpLocalDisplaySS, cgsccpGttErrorsSsUnavailable=cgsccpGttErrorsSsUnavailable, cgsccpGttGtaTable=cgsccpGttGtaTable, cgsccpGttAppGrEntNum=cgsccpGttAppGrEntNum, cgsccpGttMapAdjacent=cgsccpGttMapAdjacent, cgsccpGttMapSSARcvd=cgsccpGttMapSSARcvd, CgsccpGttAppCost=CgsccpGttAppCost, cgsccpGttMapSSPRcvd=cgsccpGttMapSSPRcvd, ciscoGsccpInstTableEntryGroupSup1=ciscoGsccpInstTableEntryGroupSup1, cgsccpInstConPcTableEntries=cgsccpInstConPcTableEntries, cgsccpGttConPcTableEntry=cgsccpGttConPcTableEntry, CgsccpGttMultInd=CgsccpGttMultInd, cgsccpGttTranslateTable=cgsccpGttTranslateTable, CgsccpGttMapPcStatus=CgsccpGttMapPcStatus, ciscoGsccpMIBNotifs=ciscoGsccpMIBNotifs, cgsccpInst=cgsccpInst, cgsccpGttGtaAsName=cgsccpGttGtaAsName, cgsccpGttMapDisplaySS=cgsccpGttMapDisplaySS, ciscoGsccpGttMapGroup=ciscoGsccpGttMapGroup, ciscoGsccpGlobalEntryGroupRev1=ciscoGsccpGlobalEntryGroupRev1, cgsccpGttAppGrType=cgsccpGttAppGrType, ciscoGsccpGttGtaGroupRev2=ciscoGsccpGttGtaGroupRev2, cgsccpGttErrorsSegUnsupported=cgsccpGttErrorsSegUnsupported, cgsccpGttGtaResMap=cgsccpGttGtaResMap, cgsccpGttMapBackupSsn=cgsccpGttMapBackupSsn, cgsccpGttGtaRoutingInd=cgsccpGttGtaRoutingInd, cgsccpGttPref2OutAddr=cgsccpGttPref2OutAddr, cgsccpSSNClassXUDTMsgsSent=cgsccpSSNClassXUDTMsgsSent, cgsccpClassIdx=cgsccpClassIdx, cgsccpGttMapQ752T7E5=cgsccpGttMapQ752T7E5, cgsccpGttSelRefCount=cgsccpGttSelRefCount, cgsccpInstMapTableEntries=cgsccpInstMapTableEntries, ciscoGsccpNotificationsGroupSup1=ciscoGsccpNotificationsGroupSup1, cgsccpInstSelTableEntries=cgsccpInstSelTableEntries, cgsccpInstXUDTMsgsSent=cgsccpInstXUDTMsgsSent, cgsccpGttConPcTable=cgsccpGttConPcTable, cgsccpGttPref2Name=cgsccpGttPref2Name, cgsccpInstUDTMsgsSent=cgsccpInstUDTMsgsSent, cgsccpGttAppGr2Network=cgsccpGttAppGr2Network, cgsccpGttLoadTableNotifEnabled=cgsccpGttLoadTableNotifEnabled, ciscoGsccpGttLoadTable=ciscoGsccpGttLoadTable, ciscoGsccpGttAppGroupRev3=ciscoGsccpGttAppGroupRev3, cgsccpGttAppGr2NumUsed=cgsccpGttAppGr2NumUsed, cgsccpSSNClassUDTMsgsSent=cgsccpSSNClassUDTMsgsSent, cgsccpGttPref2InAddr=cgsccpGttPref2InAddr, cgsccpGttConPointCode=cgsccpGttConPointCode, cgsccpGttTranslateRate=cgsccpGttTranslateRate, ciscoGsccpGlobalEntryGroup=ciscoGsccpGlobalEntryGroup, ciscoGsccpGttAppGroup=ciscoGsccpGttAppGroup, cgsccpGttAppGrSsn=cgsccpGttAppGrSsn, cgsccpGttSelNumPerf=cgsccpGttSelNumPerf, cgsccpGttErrors=cgsccpGttErrors, cgsccpGttPrefName=cgsccpGttPrefName, cgsccpGttPref2RowStatus=cgsccpGttPref2RowStatus, cgsccpGttAppGr2EntNum=cgsccpGttAppGr2EntNum, CgsccpGttGtaResType=CgsccpGttGtaResType, cgsccpGttErrorsSelectorNotFound=cgsccpGttErrorsSelectorNotFound, cgsccpSSNClassXUDTMsgsRcvd=cgsccpSSNClassXUDTMsgsRcvd, ciscoGsccpMIBComplianceRev1=ciscoGsccpMIBComplianceRev1, ciscoGsccpGttSelGroup=ciscoGsccpGttSelGroup, cgsccpGttAppGrRefCount=cgsccpGttAppGrRefCount, ciscoGsccpGttPrefGroup=ciscoGsccpGttPrefGroup, ciscoGsccpMIBComplianceRev6=ciscoGsccpMIBComplianceRev6, cgsccpGttNextSelRefed=cgsccpGttNextSelRefed, cgsccpInstConfigTS=cgsccpInstConfigTS, cgsccpGttTranslateEntry=cgsccpGttTranslateEntry, ciscoGsccpGttConPcGroup=ciscoGsccpGttConPcGroup, cgsccpGttAppGr2TableEntry=cgsccpGttAppGr2TableEntry, cgsccpGttErrorsRouteFailure=cgsccpGttErrorsRouteFailure, cgsccpGttMapBackupPc=cgsccpGttMapBackupPc, cgsccpGttSelRowStatus=cgsccpGttSelRowStatus, cgsccpGttAppGrPc=cgsccpGttAppGrPc, cgsccpGttMapType=cgsccpGttMapType, cgsccpGttErrorsHopViolation=cgsccpGttErrorsHopViolation, cgsccpInstPrefTableEntries=cgsccpInstPrefTableEntries, cgsccpLocalSsStatus=cgsccpLocalSsStatus, cgsccpGttSel=cgsccpGttSel, cgsccpGttErrorsSegFailure=cgsccpGttErrorsSegFailure, cgsccpInstLastURL=cgsccpInstLastURL, cgsccpInstErrorIndicator=cgsccpInstErrorIndicator, cgsccpGttGtaNetwork=cgsccpGttGtaNetwork, cgsccpGttPrefTableEntry=cgsccpGttPrefTableEntry, cgsccpNotificationsInfo=cgsccpNotificationsInfo, cgsccpGttGtaResPc=cgsccpGttGtaResPc, cgsccpGttErrorsReassUnsupported=cgsccpGttErrorsReassUnsupported, cgsccpGttErrorsTable=cgsccpGttErrorsTable, cgsccpSSNNumAllows=cgsccpSSNNumAllows, cgsccpGttAppGrRi=cgsccpGttAppGrRi, cgsccpGttMapQ752T7E3Fail=cgsccpGttMapQ752T7E3Fail, cgsccpGttGtaResType=cgsccpGttGtaResType, cgsccpGttAppGr2Name=cgsccpGttAppGr2Name, cgsccpGttAppGrNetwork=cgsccpGttAppGrNetwork, cgsccpGttMapPcStatus=cgsccpGttMapPcStatus, cgsccpInstReassUnsup=cgsccpInstReassUnsup, cgsccpGttPref2ItemNAI=cgsccpGttPref2ItemNAI, cgsccpSsn=cgsccpSsn, ciscoGsccpGttPrefGroupSup1=ciscoGsccpGttPrefGroupSup1, cgsccpGttAppGrCost=cgsccpGttAppGrCost, cgsccpGttConPc=cgsccpGttConPc, cgsccpGttSelTableEntry=cgsccpGttSelTableEntry, cgsccpGttPrefItemNP=cgsccpGttPrefItemNP, cgsccpGttAppGr2Pc=cgsccpGttAppGr2Pc, cgsccpGttNextSelName=cgsccpGttNextSelName, cgsccpClassSsn=cgsccpClassSsn, cgsccpGttMapCongLvl1=cgsccpGttMapCongLvl1, cgsccpGttMapCongLvl2=cgsccpGttMapCongLvl2, CgsccpGttTransType=CgsccpGttTransType, cgsccpGttAppGr=cgsccpGttAppGr, cgsccpInstLUDTMsgsRcvd=cgsccpInstLUDTMsgsRcvd, cgsccpGttMap=cgsccpGttMap, cgsccpInstTableEntry=cgsccpInstTableEntry, ciscoGsccpGttAppGroupRev2=ciscoGsccpGttAppGroupRev2, cgsccpGttGtaAddrDisp=cgsccpGttGtaAddrDisp, cgsccpGttMapQ752T7E3Un=cgsccpGttMapQ752T7E3Un, cgsccpInstXUDTSMsgsAttempted=cgsccpInstXUDTSMsgsAttempted, cgsccpGttTranslateSlot=cgsccpGttTranslateSlot, cgsccpGttAppGr2Cost=cgsccpGttAppGr2Cost, cgsccpGttPref2TblNP=cgsccpGttPref2TblNP, CgsccpGttSelName=CgsccpGttSelName, cgsccpGttPrefTable=cgsccpGttPrefTable, cgsccpGttGtaAddr=cgsccpGttGtaAddr, cgsccpGttAppGr2Ri=cgsccpGttAppGr2Ri, ciscoGsccpGttMapGroupSup1=ciscoGsccpGttMapGroupSup1, cgsccpInstSegUnsup=cgsccpInstSegUnsup, ciscoGsccpLocalSsStateChange=ciscoGsccpLocalSsStateChange, CgsccpGttAppType=CgsccpGttAppType, cgsccpInstTotalGttMsgs=cgsccpInstTotalGttMsgs, ciscoGsccpRmtCongestion=ciscoGsccpRmtCongestion, cgsccpInstErrFromMtp=cgsccpInstErrFromMtp, cgsccpInstUDTSMsgsSent=cgsccpInstUDTSMsgsSent, cgsccpGttErrorsMapNotFound=cgsccpGttErrorsMapNotFound, cgsccpInstQ752Unqualified=cgsccpInstQ752Unqualified, ciscoGsccpGttMapStateChange=ciscoGsccpGttMapStateChange, cgsccpGttSelGTI=cgsccpGttSelGTI, cgsccpInstLUDTSMsgsSent=cgsccpInstLUDTSMsgsSent, cgsccpGttMapReRouteOnCong=cgsccpGttMapReRouteOnCong, cgsccpGttErrorsSccpUnavailable=cgsccpGttErrorsSccpUnavailable, ciscoGsccpMIBComplianceRev2=ciscoGsccpMIBComplianceRev2, cgsccpGttGtaTTorSSNvalue=cgsccpGttGtaTTorSSNvalue, CgsccpGttRoutingInd=CgsccpGttRoutingInd, cgsccpGttPrefTblNAI=cgsccpGttPrefTblNAI, cgsccpInstXUDTMsgsRcvd=cgsccpInstXUDTMsgsRcvd, cgsccpGttMapTableEntry=cgsccpGttMapTableEntry, cgsccpGttMapSsStatus=cgsccpGttMapSsStatus, CgsccpGttDisplaySS=CgsccpGttDisplaySS, ciscoGsccpMIBConform=ciscoGsccpMIBConform, CgsccpGttMapCongStatus=CgsccpGttMapCongStatus, cgsccpGttMapMultInd=cgsccpGttMapMultInd, cgsccpSSNNumProhibits=cgsccpSSNNumProhibits, cgsccpGttPref2EncodingScheme=cgsccpGttPref2EncodingScheme, ciscoGsccpNotificationsGroup=ciscoGsccpNotificationsGroup, cgsccpGttAppGrName=cgsccpGttAppGrName, cgsccpGttSelPrePrefConv=cgsccpGttSelPrePrefConv, cgsccpInstUDTSMsgsRcvd=cgsccpInstUDTSMsgsRcvd, cgsccpGttAppGr2Type=cgsccpGttAppGr2Type, cgsccpGttSelQOS=cgsccpGttSelQOS, cgsccpGttSelTT=cgsccpGttSelTT, cgsccpGttMapRowStatus=cgsccpGttMapRowStatus, cgsccpSSNTable=cgsccpSSNTable, CgsccpGttAppName=CgsccpGttAppName, cgsccpGttConPcListName=cgsccpGttConPcListName, cgsccpInstUDTMsgsRcvd=cgsccpInstUDTMsgsRcvd, cgsccpInstGttConfigStatus=cgsccpInstGttConfigStatus, ciscoGsccpMIBObjects=ciscoGsccpMIBObjects, cgsccpInstGttConfigTS=cgsccpInstGttConfigTS, cgsccpGttPref2TblNAI=cgsccpGttPref2TblNAI, cgsccpSSNClassUDTMsgsRcvd=cgsccpSSNClassUDTMsgsRcvd, cgsccpInstReassFail=cgsccpInstReassFail, cgsccpInstRowStatus=cgsccpInstRowStatus, cgsccpGttGtaResAppGroup=cgsccpGttGtaResAppGroup, cgsccpInstXUDTSMsgsSent=cgsccpInstXUDTSMsgsSent, cgsccpGttMapSccpUnavail=cgsccpGttMapSccpUnavail, cgsccpGttPrefItemNAI=cgsccpGttPrefItemNAI, cgsccpInstQ752T7E13=cgsccpInstQ752T7E13, cgsccpGttErrorsTableEntry=cgsccpGttErrorsTableEntry, cgsccpGttSelName=cgsccpGttSelName, cgsccpGttAppGrAsName=cgsccpGttAppGrAsName, CgsccpGttMapSsStatus=CgsccpGttMapSsStatus, cgsccpSSNClassLUDTMsgsSent=cgsccpSSNClassLUDTMsgsSent, cgsccpGttGtaRowStatus=cgsccpGttGtaRowStatus, ciscoGsccpMIB=ciscoGsccpMIB, cgsccpGttAppGr2Ssn=cgsccpGttAppGr2Ssn, PYSNMP_MODULE_ID=ciscoGsccpMIB, cgsccpGttGta=cgsccpGttGta, cgsccpGttAppGr2=cgsccpGttAppGr2, cgsccpInstTable=cgsccpInstTable, cgsccpGttMapTable=cgsccpGttMapTable, cgsccpGttMapQ752T7E6=cgsccpGttMapQ752T7E6, cgsccpGttGtaSelName=cgsccpGttGtaSelName, cgsccpGttTranslateTableEntry=cgsccpGttTranslateTableEntry, ciscoGsccpInstTableEntryGroup=ciscoGsccpInstTableEntryGroup, cgsccpGttPref2=cgsccpGttPref2, cgsccpGttTranslate=cgsccpGttTranslate, cgsccpGttPref2TableEntry=cgsccpGttPref2TableEntry, cgsccpInstInvalidGttFormat=cgsccpInstInvalidGttFormat, cgsccpGttAppGrTableEntry=cgsccpGttAppGrTableEntry, cgsccpGttErrorPeriod=cgsccpGttErrorPeriod, cgsccpGttAppGr2Table=cgsccpGttAppGr2Table, cgsccpGttErrorsGtaNotFound=cgsccpGttErrorsGtaNotFound, ciscoGsccpMIBComplianceRev4=ciscoGsccpMIBComplianceRev4, ciscoGsccpInstTableEntryGroupRev1=ciscoGsccpInstTableEntryGroupRev1, CgsccpGttGlobalTitleInd=CgsccpGttGlobalTitleInd, CgsccpGttPrefName=CgsccpGttPrefName, cgsccpInstLUDTMsgsSent=cgsccpInstLUDTMsgsSent, cgsccpInstGtaTableEntries=cgsccpInstGtaTableEntries, cgsccpInstErrToMtp=cgsccpInstErrToMtp, cgsccpGttErrorsReassFailure=cgsccpGttErrorsReassFailure, cgsccpGttMapRefCount=cgsccpGttMapRefCount, ciscoGsccpGttErrors=ciscoGsccpGttErrors, ciscoGsccpMIBGroups=ciscoGsccpMIBGroups, ciscoGsccpGttSsnClassGroup=ciscoGsccpGttSsnClassGroup, ciscoGsccpNotificationsGroupSup2=ciscoGsccpNotificationsGroupSup2, cgsccpGttQ752T7E2=cgsccpGttQ752T7E2, ciscoGsccpGttSelGroupSup1=ciscoGsccpGttSelGroupSup1, cgsccpInstCrefFromMtp=cgsccpInstCrefFromMtp, cgsccpGttGtaQOS=cgsccpGttGtaQOS, cgsccpSSNClassTable=cgsccpSSNClassTable, cgsccpSSNClassEntry=cgsccpSSNClassEntry, cgsccpSSN=cgsccpSSN, CgsccpGttQOS=CgsccpGttQOS, cgsccpGttGtaTableEntry=cgsccpGttGtaTableEntry, cgsccpGttAppGr2Weight=cgsccpGttAppGr2Weight, cgsccpInstCrToMtp=cgsccpInstCrToMtp, ciscoGsccpGttErrorsGroupSup1=ciscoGsccpGttErrorsGroupSup1, cgsccpInstRsrFromMtp=cgsccpInstRsrFromMtp, cgsccpGttErrorsUnequipedSS=cgsccpGttErrorsUnequipedSS, cgsccpGttSelPostPrefConv=cgsccpGttSelPostPrefConv, ciscoGsccpMIBCompliances=ciscoGsccpMIBCompliances, cgsccpGttPref=cgsccpGttPref, cgsccpGttMapLastSsUsed=cgsccpGttMapLastSsUsed, cgsccpGttMapCongStatus=cgsccpGttMapCongStatus, cgsccpGttErrorsSccpUnqualified=cgsccpGttErrorsSccpUnqualified, ciscoGsccpMIBComplianceRev7=ciscoGsccpMIBComplianceRev7, cgsccpGttMapConPcList=cgsccpGttMapConPcList, cgsccpGttErrorsSsCongested=cgsccpGttErrorsSsCongested, ciscoGsccpGttPrefGroupRev1=ciscoGsccpGttPrefGroupRev1, cgsccpGttErrorsDpcCongested=cgsccpGttErrorsDpcCongested, cgsccpGttTranslateSample=cgsccpGttTranslateSample, cgsccpGttMapStateNotifEnabled=cgsccpGttMapStateNotifEnabled, cgsccpGttAppGr2RowStatus=cgsccpGttAppGr2RowStatus, cgsccpGttAppGr2AsName=cgsccpGttAppGr2AsName, ciscoGsccpGttGtaGroup=ciscoGsccpGttGtaGroup, cgsccpGttAppGrTable=cgsccpGttAppGrTable, ciscoGsccpMIBComplianceRev3=ciscoGsccpMIBComplianceRev3, cgsccpGttMapUsed=cgsccpGttMapUsed, cgsccpGttSelTable=cgsccpGttSelTable, ciscoGsccpGttSsnGroup=ciscoGsccpGttSsnGroup)
mibBuilder.exportSymbols("CISCO-ITP-GSCCP-MIB", cgsccpGttErrorRecoveryCount=cgsccpGttErrorRecoveryCount, cgsccpGttAppGr2RefCount=cgsccpGttAppGr2RefCount, cgsccpGttPrefOutAddr=cgsccpGttPrefOutAddr, ciscoGsccpMIBCompliance=ciscoGsccpMIBCompliance, cgsccpGttSelNAI=cgsccpGttSelNAI, cgsccpSSNEntry=cgsccpSSNEntry, ciscoGsccpGlobalEntryGroupSup1=ciscoGsccpGlobalEntryGroupSup1, cgsccpGttAppGr2NewSsn=cgsccpGttAppGr2NewSsn, cgsccpGttAppGrNewSsn=cgsccpGttAppGrNewSsn, cgsccpGttSelNP=cgsccpGttSelNP, cgsccpInstMapNotFound=cgsccpInstMapNotFound, cgsccpGttMapCongLvl3=cgsccpGttMapCongLvl3, CgsccpConPcListName=CgsccpConPcListName, cgsccpGttMapAltUsed=cgsccpGttMapAltUsed, cgsccpGttTranslatePeriod=cgsccpGttTranslatePeriod, cgsccpInstAppGrTableEntries=cgsccpInstAppGrTableEntries, cgsccpGttAppGrRowStatus=cgsccpGttAppGrRowStatus, ciscoGsccpGttErrorsGroup=ciscoGsccpGttErrorsGroup, cgsccpInstLUDTSMsgsRcvd=cgsccpInstLUDTSMsgsRcvd, cgsccpGttMapSsn=cgsccpGttMapSsn, cgsccpGttMapQ752T7E4=cgsccpGttMapQ752T7E4, cgsccpInstCrFromMtp=cgsccpInstCrFromMtp, CgsccpClass=CgsccpClass, cgsccpGttAppGrMult=cgsccpGttAppGrMult, cgsccpInstXUDTSMsgsRcvd=cgsccpInstXUDTSMsgsRcvd, cgsccpInstTotalMsgs=cgsccpInstTotalMsgs, cgsccpInstLocalMsgs=cgsccpInstLocalMsgs, cgsccpGttMapDisplayPC=cgsccpGttMapDisplayPC, cgsccpGttGtaTTorSSN=cgsccpGttGtaTTorSSN, cgsccpGttTranslateTS=cgsccpGttTranslateTS, cgsccpGttTranslatePhysicalIndex=cgsccpGttTranslatePhysicalIndex, cgsccpGttTransErrorsNotifEnabled=cgsccpGttTransErrorsNotifEnabled, cgsccpInstRsrToMtp=cgsccpInstRsrToMtp, cgsccpInstQ752T7E1=cgsccpInstQ752T7E1, cgsccpGttPref2Table=cgsccpGttPref2Table, cgsccpGttGtaAddrLen=cgsccpGttGtaAddrLen, cgsccpSSNClassLUDTMsgsRcvd=cgsccpSSNClassLUDTMsgsRcvd, CgsccpGttMapType=CgsccpGttMapType, cgsccpGttPrefTblNP=cgsccpGttPrefTblNP, cgsccpScalars=cgsccpScalars, cgsccpGttPrefInAddr=cgsccpGttPrefInAddr, cgsccpGttErrorsIncorrectFormat=cgsccpGttErrorsIncorrectFormat, cgsccpInstSegFail=cgsccpInstSegFail, cgsccpGttAppGr2Mult=cgsccpGttAppGr2Mult, cgsccpInstCrefToMtp=cgsccpInstCrefToMtp, cgsccpGttConPcRowStatus=cgsccpGttConPcRowStatus, cgsccpGttErrorsDpcUnavailable=cgsccpGttErrorsDpcUnavailable, ciscoGsccpSegReassUnsup=ciscoGsccpSegReassUnsup, cgsccpInstUDTSMsgsAttempted=cgsccpInstUDTSMsgsAttempted, ciscoGsccpNotificationsInfoGroup=ciscoGsccpNotificationsInfoGroup)
