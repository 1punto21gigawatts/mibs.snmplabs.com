#
# PySNMP MIB module CIENA-CES-PM (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-PM
# Produced by pysmi-0.3.4 at Wed May  1 11:49:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
cienaGlobalSeverity, cienaGlobalMacAddress = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalSeverity", "cienaGlobalMacAddress")
cienaCesNotifications, cienaCesStatistics = mibBuilder.importSymbols("CIENA-SMI", "cienaCesNotifications", "cienaCesStatistics")
CienaGlobalState, CienaStatsClear = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState", "CienaStatsClear")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Gauge32, Bits, NotificationType, Counter64, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, ObjectIdentity, Unsigned32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "Bits", "NotificationType", "Counter64", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "IpAddress", "iso")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
cienaCesPmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1))
cienaCesPmMib.setRevisions(('2016-09-14 00:00', '2016-05-27 00:00', '2016-04-08 00:00', '2016-03-08 00:00', '2016-02-24 00:00', '2015-12-18 00:00', '2015-11-30 00:00', '2015-08-14 00:00', '2015-01-19 00:00', '2014-03-19 00:00', '2013-09-17 00:00', '2013-08-08 00:00', '2013-05-15 00:00', '2013-03-28 00:00', '2012-03-29 00:00', '2012-03-28 00:00', '2012-02-20 00:00', '2011-10-26 00:00', '2011-06-20 00:00', '2011-03-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cienaCesPmMib.setRevisionsDescriptions(('The following tables have been expanded with additional statitistics added to the ExtendedTxRxProfile: cienaCesPmExtendedTxRxHistoryBinTable, cienaCesPmExtendedTxRxCurrBinTable, cienaCesPmExtendedTxRxCurr24HBinTable, cienaCesPmExtendedTxRxHist24HBinTable, cienaCesPmExtendedTxRxStatisticsBinTable, cienaCesPmExtendedTxRxTotalStatisticsBinTable The stats that were added: RxUcastPkts, RxInErrorPkts, 1519To2047OctsPkts, 2048To4095OctsPkts, 4096To9216OctsPkts, TxUcastPkts, Tx64OctsPkts, Tx65To127OctsPkts, Tx128To255OctsPkts, Tx256To511OctsPkts, Tx512To1023OctsPkts, Tx1024To1518OctsPkts, Tx1519To2047OctsPkts, Tx2048To4095OctsPkts, Tx4096To9216OctsPkts,TxDeferPkts, LinkUp, LinkDown, LinkFlap The cienaCesPmExtendedTxRxAllTimeBinTable was also made obsolete.', 'Defined cienaCesPmBasicTxStats branch to support the BasicTx PM Profile statistics. Defined cienaCesPmThreshold and all corresponding objects that fall beneath its OID for support of PM Threshold Crossing Alerts (TCA) features. Defined cienaCesPmMIBNotifications to contain PM NOTIFICATION-TYPE macros, along with trap definitions supporting the PM TCA features. Defined the following TEXTUAL-CONVENTIONs as part of PM TCA feature support: PmTcaUnsigned64, PmTcaConfigStatus, PmTcaUnits, PmTcaAlertState, PmTcaWatermarkType, PmTcaScheme, PmTcaThresholdType, PmTcaIntProfCfgAttrs, PmStatBitmap, PmTimeDate. Added tpRsvpIngressCorout(20) enumeration to PmInterfaceType. Removed the range restrictions of cienaCesPmInstanceNextIndex and cienaCesPmInstanceIndex objects. Clarified the DESCRIPTION clauses of objects cienaCesPmInstanceNextIndex, cienaCesPmInstanceInterfaceId, cienaCesPmInstanceInterfaceId2, cienaCesPmInstanceRowStatus. Updated cienaCesPmInstanceInterfaceId2 object to read-create, allowing support for row creations to specify secondary interface id for instances where single interface id is not sufficient to uniquely identify an interface.', 'Added ETSI stats for the follwing profile types: tdmOcnPortStats', 'Added the following new profile types: tdmOcnPortStats tdmDs3PortStats', 'Added the following tables, and all objects defined within: cienaCesPmTdmDS3PortTotalStatisticsBinTable cienaCesPmTdmDS3PortStatisticsBinTable cienaCesPmTdmDS3PortHist24HBinTable cienaCesPmTdmDS3PortCurr24HBinTable cienaCesPmTdmDS3PortCurrBinTable cienaCesPmTdmDS3PortHistoryBinTable', 'Added the following objects: cienaCesPmTdmPwHistoryBinTxPkt cienaCesPmTdmPwHistoryBinEsp cienaCesPmTdmPwHistoryBinSesp cienaCesPmTdmPwHistoryBinUasp cienaCesPmTdmPwHistoryBinCvp cienaCesPmTdmPwHistoryBinFcp cienaCesPmTdmPwHistoryBinAsp cienaCesPmTdmPwHistoryBinTtp cienaCesPmTdmPwCurrBinTxPkt cienaCesPmTdmPwCurrBinEsp cienaCesPmTdmPwCurrBinSesp cienaCesPmTdmPwCurrBinUasp cienaCesPmTdmPwCurrBinCvp cienaCesPmTdmPwCurrBinFcp cienaCesPmTdmPwCurrBinAsp cienaCesPmTdmPwCurrBinTtp cienaCesPmTdmPwCurr24HBinTxPkt cienaCesPmTdmPwCurr24HBinEsp cienaCesPmTdmPwCurr24HBinSesp cienaCesPmTdmPwCurr24HBinUasp cienaCesPmTdmPwCurr24HBinCvp cienaCesPmTdmPwCurr24HBinFcp cienaCesPmTdmPwCurr24HBinAsp cienaCesPmTdmPwCurr24HBinTtp cienaCesPmTdmPwHist24HBinTxPkt cienaCesPmTdmPwHist24HBinEsp cienaCesPmTdmPwHist24HBinSesp cienaCesPmTdmPwHist24HBinUasp cienaCesPmTdmPwHist24HBinCvp cienaCesPmTdmPwHist24HBinFcp cienaCesPmTdmPwHist24HBinAsp cienaCesPmTdmPwHist24HBinTtp cienaCesPmTdmPwStatisticsBinTxPkt cienaCesPmTdmPwStatisticsBinEsp cienaCesPmTdmPwStatisticsBinSesp cienaCesPmTdmPwStatisticsBinUasp cienaCesPmTdmPwStatisticsBinCvp cienaCesPmTdmPwStatisticsBinFcp cienaCesPmTdmPwStatisticsBinAsp cienaCesPmTdmPwStatisticsBinTtp cienaCesPmTdmPwTotalStatisticsBinTxPkt cienaCesPmTdmPwTotalStatisticsBinEsp cienaCesPmTdmPwTotalStatisticsBinSesp cienaCesPmTdmPwTotalStatisticsBinUasp cienaCesPmTdmPwTotalStatisticsBinCvp cienaCesPmTdmPwTotalStatisticsBinFcp cienaCesPmTdmPwTotalStatisticsBinAsp cienaCesPmTdmPwTotalStatisticsBinTtp Added the following tables, and all objects defined within: cienaCesPmTdmOCnPortTotalStatisticsBinTable cienaCesPmTdmOCnPortStatisticsBinTable cienaCesPmTdmOCnPortHist24HBinTable cienaCesPmTdmOCnPortCurr24HBinTable cienaCesPmTdmOCnPortCurrBinTable cienaCesPmTdmOCnPortHistoryBinTable', 'Renamed tdmT1PortStats to tdmAnsiPortStats(11), and renamed tdmE1PortStats to tdmEtsiPortStats(12), in PmProfileType.', 'Defined nodes: cienaCesPmInstanceIndexXref and cienaCesPmInstanceIndexXrefAuto. Defined cienaCesPmInstanceIndexXrefAutoTable.', 'Added ptp(17), otu(18), and odu(19) enumerations to PmInterfaceType. Added basicPtp(15), basicOtu(16), and basicOdu(17) to PmProfileType. Defined PmProfileFieldMapBasicPtp,PmProfileFieldMapBasicOtu,PmProfileFieldMapBasicOdu. Defined PmInteger32Milli and PmCounter64Atto. Defined cienaCesPmBasicPtpStats and all corresponding objects that fall beneath its OID. Defined cienaCesPmBasicOtuStats and all corresponding objects that fall beneath its OID. Defined cienaCesPmBasicOduStats and all corresponding objects that fall beneath its OID.', 'Added tpStaticTransitUnidir(15) and tpStaticTransitCorout(16) enumerations to PmInterfaceType. Added basictxrxBiDir(14) enumeration to PmProfileType. Defined cienaCesPmBasicTxRxBiDirStats and all corresponding objects that fall beneath its OID.', 'Added cienaCesPmInstanceHistoryClear.', 'Added the following objects: cienaCesPmExtendedTxRxHist24HBinEndTime cienaCesPmExtendedTxRxHist24HBinClearTime cienaCesPmBasicTxRxHist24HBinEndTime cienaCesPmBasicTxRxHist24HBinClearTime cienaCesPmIGMPHist24HBinClearTime cienaCesPmAccessHist24HBinEndTime cienaCesPmAccessHist24HBinClearTime cienaCesPmFloodContainerHist24HBinEndTime cienaCesPmFloodContainerHist24HBinClearTime cienaCesPmBasicRxHist24HBinEndTime cienaCesPmBasicRxHist24HBinClearTime cienaCesPmQueueGroupHist24HBinEndTime cienaCesPmQueueGroupHist24HBinClearTime cienaCesPmEgressQueueHist24HBinEndTime cienaCesPmEgressQueueHist24HBinClearTime Added the following tables, and all objects defined within: cienaCesPmExtendedTxRxStatisticsBinTable cienaCesPmExtendedTxRxTotalStatisticsBinTable cienaCesPmBasicTxRxStatisticsBinTable cienaCesPmBasicTxRxTotalStatisticsBinTable cienaCesPmIGMPStatisticsBinTable cienaCesPmIGMPTotalStatisticsBinTable cienaCesPmAccessStatisticsBinTable cienaCesPmAccessTotalStatisticsBinTable cienaCesPmFloodContainerStatisticsBinTable cienaCesPmFloodContainerTotalStatisticsBinTable cienaCesPmBasicRxStatisticsBinTable cienaCesPmBasicRxTotalStatisticsBinTable cienaCesPmQueueGroupStatisticsBinTable cienaCesPmQueueGroupTotalStatisticsBinTable cienaCesPmEgressQueueStatisticsBinTable cienaCesPmEgressQueueTotalStatisticsBinTable Changed STATUS clause to deprecated for the following tables, and all objects defined within: cienaCesPmExtendedTxRxAllTimeBinTable cienaCesPmBasicTxRxAllTimeBinTable cienaCesPmIGMPAllTimeBinTable cienaCesPmAccessAllTimeBinTable cienaCesPmFloodContainerAllTimeBinTable cienaCesPmBasicRxAllTimeBinTable cienaCesPmQueueGroupAllTimeBinTable cienaCesPmEgressQueueAllTimeBinTable', 'Added enumeration overflow(7) to PmBinState. Modified cienaCesPmInstanceBinCount to accept 0 bins. Added cienaCesPmInstanceInterfaceOperState.', 'Added object: cienaCesPmInstanceConfigurationMode. Added object: cienaCesPmInstanceAlignment. Added enumeration idf(6) to PmBinState. Added tdmPort(13), tdmVc(14) to PmInterfaceType. Added tdmT1PortStats(11), tdmE1PortStats(12), tdmPwStats(13), to PmProfileType. Changed the MAX-ACCESS clause of cienaCesPmInstanceType from read-only to read-create. Defined cienaCesPmTdmT1PortStats and all corresponding objects that fall beneath its OID. Defined cienaCesPmTdmE1PortStats and all corresponding objects that fall beneath its OID. Defined cienaCesPmTdmPwStats and all corresponding objects that fall beneath its OID.', 'Added the new RxLOutRangePkts counter to all applicable tables', "Changed the behavior of cienaCesPmInstanceStartTime, cienaCesPmInstanceStartDate, cienaCesPmInstanceEndTime and cienaCesPmInstanceEndDate. If only the start date is set, the start time is set to the first second on that day, i.e., 00:00:00. If only the end date is set, the end time is set to the last second of that day, i.e., 23:59:59. Previously, a time or date not set by one of these OIDs would be set to the current time or date. End dates set in the past are now rejected. They were previously accepted. When read, dates and times are in UTC or local time, depending on the system 'timestamp' setting. They were previously in UTC. The trailing newline has been removed from the date/time string. A trailing Z is added to indicate UTC.", 'Changed the type of cienaCesPmInstanceStartTimeValue and cienaCesPmInstanceEndTimeValue from TimeTicks to Integer32. The values had previously been treated as Integer32. Changed the DEFVAL of cienaCesPmInstanceCollectionTimeFormat from utc to none. The actual default value used previously was none.', 'Added new types in PmInterfaceType and PmProfileType. Added a new object cienaCesPmInstanceDynamic in cienaCesPmInstanceTable.', 'Added cienaCesPmEgressQueueStats and cienaCesPmQueueGroupStats.', 'Added cienaCesPmPersistenceInterval and cienaCesPmPersistenceStorage',))
if mibBuilder.loadTexts: cienaCesPmMib.setLastUpdated('201609140000Z')
if mibBuilder.loadTexts: cienaCesPmMib.setOrganization('Ciena Corp.')
if mibBuilder.loadTexts: cienaCesPmMib.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: cienaCesPmMib.setDescription('This module defines the performance monitor statistics objects.')
cienaCesPmGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 1))
cienaCesPmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2))
cienaCesPmInstance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2))
cienaCesPmStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3))
cienaCesPmExtendedTxRxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1))
cienaCesPmBasicTxRxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2))
cienaCesPmIgmpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3))
cienaCesPmAccessStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4))
cienaCesPmFloodContainerStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5))
cienaCesPmBasicRxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6))
cienaCesPmEgressQueueStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7))
cienaCesPmQueueGroupStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8))
cienaCesPmTdmT1PortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9))
cienaCesPmTdmE1PortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10))
cienaCesPmTdmPwStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11))
cienaCesPmBasicTxRxBiDirStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12))
cienaCesPmBasicPtpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13))
cienaCesPmBasicOtuStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14))
cienaCesPmBasicOduStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15))
cienaCesPmTdmOCnPortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16))
cienaCesPmTdmDS3PortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17))
cienaCesPmBasicTxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18))
cienaCesPmInstanceIndexXref = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 4))
cienaCesPmInstanceIndexXrefAuto = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 4, 1))
cienaCesPmThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3))
cienaCesPmIntervalProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1))
cienaCesPmInstanceThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2))
cienaCesPmInstanceAdjustmentTca = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3))
cienaCesPmInstanceAlertTca = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4))
cienaCesPmMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 40))
cienaCesPmMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 40, 0))
class PmConfigurationMode(TextualConvention, Integer32):
    description = 'Configuration mode of the PM.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("auto", 1), ("user", 2))

class PmAlignment(TextualConvention, Integer32):
    description = 'Alignment value of the PM.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("startTime", 1), ("localClock", 2))

class PmInstanceType(TextualConvention, Integer32):
    description = 'Instance type of the PM.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("proactive", 1), ("ondemand", 2))

class PmBinState(TextualConvention, Integer32):
    description = 'State of the PM Bin.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("notValid", 1), ("valid", 2), ("partial", 3), ("timeChange", 4), ("cleared", 5), ("idf", 6), ("overflow", 7))

class PmInterfaceType(TextualConvention, Integer32):
    description = 'Interface type of the PM instance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 99))
    namedValues = NamedValues(("port", 1), ("subport", 2), ("pbttransit", 3), ("pbtservice", 4), ("datasource", 5), ("igmpvs", 6), ("accessflow", 7), ("mplsVc", 8), ("qosflow", 9), ("queueGroupInstance", 10), ("lineModule", 11), ("mplsTransitLsp", 12), ("tdmPort", 13), ("tdmVc", 14), ("tpStaticTransitUnidir", 15), ("tpStaticTransitCorout", 16), ("ptp", 17), ("otu", 18), ("odu", 19), ("tpRsvpIngressCorout", 20), ("unknown", 99))

class PmProfileType(TextualConvention, Integer32):
    description = 'Profile type of the PM instance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 99))
    namedValues = NamedValues(("basictxrx", 1), ("extendedtxrx", 2), ("basiccounter", 3), ("accessstats", 4), ("igmpvsstats", 5), ("floodcontainer", 6), ("basicrx", 7), ("queueGroupStats", 8), ("egressQueueStats", 9), ("basictx", 10), ("tdmAnsiPortStats", 11), ("tdmEtsiPortStats", 12), ("tdmPwStats", 13), ("basictxrxBiDir", 14), ("basicPtp", 15), ("basicOtu", 16), ("basicOdu", 17), ("tdmOcnPortStats", 18), ("tdmDs3PortStats", 19), ("unknown", 99))

class PmProfileFieldMapBasicPtp(TextualConvention, Bits):
    description = 'Provides a bitmap where each bit represents a field defined within the PM Profile. This may be used within a table to define an object that may highlight a particular characteristic about each field defined within the PM Profile. Each bit should correspond to a particular field within the PM Profile and, as such, correspond to a particular object within the same table row with matching ordering and naming conventions as specified by the field names, as defined below.'
    status = 'current'
    namedValues = NamedValues(("oprOch", 0), ("oprnOch", 1), ("oprMinOch", 2), ("oprMaxOch", 3), ("oprAvgOch", 4), ("optOch", 5), ("optMinOch", 6), ("optMaxOch", 7), ("optAvgOch", 8), ("oprOts", 9), ("oprnOts", 10), ("oprMinOts", 11), ("oprMaxOts", 12), ("oprAvgOts", 13), ("dgdAvgOch", 14), ("dgdMaxOch", 15))

class PmProfileFieldMapBasicOtu(TextualConvention, Bits):
    description = 'Provides a bitmap where each bit represents a field defined within the PM Profile. This may be used within a table to define an object that may highlight a particular characteristic about each field defined within the PM Profile. Each bit should correspond to a particular field within the PM Profile and, as such, correspond to a particular object within the same table row with matching ordering and naming conventions as specified by the field names, as defined below.'
    status = 'current'
    namedValues = NamedValues(("cvOtu", 0), ("esOtu", 1), ("sesOtu", 2), ("sefsOtu", 3), ("fecOtu", 4), ("hccsOtu", 5), ("prfBerOtu", 6), ("prfBerMaxOtu", 7), ("pfBerEOtu", 8), ("qMinOtu", 9), ("qMaxOtu", 10), ("qAvgOtu", 11), ("qStdevOtu", 12), ("uncFecBlkOtu", 13))

class PmProfileFieldMapBasicOdu(TextualConvention, Bits):
    description = 'Provides a bitmap where each bit represents a field defined within the PM Profile. This may be used within a table to define an object that may highlight a particular characteristic about each field defined within the PM Profile. Each bit should correspond to a particular field within the PM Profile and, as such, correspond to a particular object within the same table row with matching ordering and naming conventions as specified by the field names, as defined below.'
    status = 'current'
    namedValues = NamedValues(("cvOdu", 0), ("esOdu", 1), ("sesOdu", 2), ("uasOdu", 3), ("fcOdu", 4))

class PmInteger32Milli(TextualConvention, Integer32):
    description = 'A value using Integer32 to represent a decimal number in units of thousandths. To derive the decimal equivalent of an object with this SYNTAX, divide the Integer32 value by 1000.'
    status = 'current'

class PmCounter64Atto(TextualConvention, Counter64):
    description = 'A value using Counter64 to represent a decimal number in units of quintillionths. To derive the decimal equivalent of an object with this SYNTAX, divide the Counter64 value by 1000000000000000000.'
    status = 'current'

class PmTcaUnsigned64(TextualConvention, Counter64):
    description = 'A value using Counter64 to represent a decimal number for use by the PM TCA feature for purposes of representing values for TCA related data fields such as basis, boundary and watermark data.'
    status = 'current'

class PmTcaConfigStatus(TextualConvention, Integer32):
    description = 'This object represents the status of configuration of a PM Threshold Crossing Alert (TCA) feature. For features which require multiple optional attributes, this status may indicate when such attributes are not configured in a way to enable such feature. Objects using this textual convention should indicate the feature it represents and the necessary attributes for its configuration.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unspecified", 1), ("notSupported", 2), ("noProfile", 3), ("notConfigured", 4), ("partiallyConfigured", 5), ("configured", 6))

class PmTcaUnits(TextualConvention, Integer32):
    description = 'The way in which data is intrepreted, handled, and represented by the PM Threshold Crossing Alert (TCA) feature.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unspecified", 1), ("bitsPerSecond", 2))

class PmTcaAlertState(TextualConvention, Integer32):
    description = 'Value used by state driven PM TCA features to incidate the current or historical alert state of a PM instance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unspecified", 1), ("normal", 2), ("alert", 3))

class PmTcaWatermarkType(TextualConvention, Integer32):
    description = 'Value used by objects to indicate an accompanying watermark object type. The DESCRIPTION clause of objects using this textual convention should indicate the accompanying watermark object to which this type applies. A value of high indicates the watermark represents a high watermark, representing the highest value during a specified interval.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unspecified", 1), ("high", 2))

class PmTcaScheme(TextualConvention, Integer32):
    description = 'Value used to define the way in which statistics are used by the PM TCA features. A value of inclusiveOr is used to indicate that any single statistic which matches the criteria used by the feature will be used. For high watermark determination, this means that for a given sample interval, the highest single applicable statistic will be used to set a new high watermark value and all other applicable statistics are ignored.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unspecified", 1), ("inclusiveOr", 2))

class PmTcaThresholdType(TextualConvention, Integer32):
    description = 'Value used to describe configuration related to PM TCA thresholds. Objects using this textual convention should specify in their DESCRIPTION clause the corresponding object to which this type applies, thereby defining how its value should be intrepreted.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unspecified", 1), ("absoluteValue", 2), ("percentage", 3))

class PmTcaIntProfCfgAttrs(TextualConvention, Bits):
    description = 'Bitmap representing configuration attributes associated with an interval profile used by the PM TCA features. This is intended to represent attributes which may be modified after an interval profile has been created. For this reason, attributes which may not be modified are not included in this textual convention.'
    status = 'current'
    namedValues = NamedValues(("adjustmentInterval", 0), ("adjustmentThreshold", 1), ("adjustmentThresholdPercentage", 2), ("overflowThreshold", 3), ("overflowThresholdPercentage", 4), ("overflowCount", 5), ("underflowThreshold", 6), ("underflowThresholdPercentage", 7), ("underflowCount", 8), ("alertInterval", 9), ("alertThresholdPercentage", 10))

class PmStatBitmap(TextualConvention, Bits):
    description = "Objects of this type represent a group of zero or more statistics applicable to the data model as described in such object's DESCRIPTION clause. An object may use this textual convention to represent a set of statistics for a particular PM profile, depending on the profile associated with the data set used by the object. The bitmap represents sub-identifier values for a particular bin type branch underneath a particular pm profile branch in the cienaCesPmStatistics branch. The DESCRIPTION clause of an object using this textual convention should indicate the way in which the appropriate PM profile branch is identified, and the particular bin type branch to which the data applies. For example, an object using this textual convention returns a value with single bit set at statisticSubIdentifier9(9). The object is discovered to be associated with a PM instance with an accompanying value of 'basictxrx' for its cienaCesPmInstanceProfileType object. The DESCRIPTION clause of the object with this textual convention indicates that the object value is applicable to statistics in the Current Bin of the PM profile. The provided information means that the applicable cienaCesPmStatistics branch is cienaCesPmBasicTxRxStats. Within the cienaCesPmBasicTxRxStats branch, the branch for the Current Bin, cienaCesPmBasicTxRxCurrBinTable, should be used. Within the cienaCesPmBasicTxRxCurrBinTable is the listing of objects defined in cienaCesPmBasicTxRxCurrBinEntry. The object value statisticSubIdentifier9(9) would then apply to the row with object sub-identifier value of 9. In this case the statistic is cienaCesPmBasicTxRxCurrBinRxDroppedBytes at OID ending with the sub-identifier value of 9."
    status = 'current'
    namedValues = NamedValues(("statisticSubIdentifier0", 0), ("statisticSubIdentifier1", 1), ("statisticSubIdentifier2", 2), ("statisticSubIdentifier3", 3), ("statisticSubIdentifier4", 4), ("statisticSubIdentifier5", 5), ("statisticSubIdentifier6", 6), ("statisticSubIdentifier7", 7), ("statisticSubIdentifier8", 8), ("statisticSubIdentifier9", 9), ("statisticSubIdentifier10", 10), ("statisticSubIdentifier11", 11), ("statisticSubIdentifier12", 12), ("statisticSubIdentifier13", 13), ("statisticSubIdentifier14", 14), ("statisticSubIdentifier15", 15), ("statisticSubIdentifier16", 16), ("statisticSubIdentifier17", 17), ("statisticSubIdentifier18", 18), ("statisticSubIdentifier19", 19), ("statisticSubIdentifier20", 20), ("statisticSubIdentifier21", 21), ("statisticSubIdentifier22", 22), ("statisticSubIdentifier23", 23), ("statisticSubIdentifier24", 24), ("statisticSubIdentifier25", 25), ("statisticSubIdentifier26", 26), ("statisticSubIdentifier27", 27), ("statisticSubIdentifier28", 28), ("statisticSubIdentifier29", 29), ("statisticSubIdentifier30", 30), ("statisticSubIdentifier31", 31), ("statisticSubIdentifier32", 32), ("statisticSubIdentifier33", 33), ("statisticSubIdentifier34", 34), ("statisticSubIdentifier35", 35), ("statisticSubIdentifier36", 36), ("statisticSubIdentifier37", 37), ("statisticSubIdentifier38", 38), ("statisticSubIdentifier39", 39), ("statisticSubIdentifier40", 40), ("statisticSubIdentifier41", 41), ("statisticSubIdentifier42", 42), ("statisticSubIdentifier43", 43), ("statisticSubIdentifier44", 44), ("statisticSubIdentifier45", 45), ("statisticSubIdentifier46", 46), ("statisticSubIdentifier47", 47), ("statisticSubIdentifier48", 48), ("statisticSubIdentifier49", 49), ("statisticSubIdentifier50", 50))

class PmTimeDate(TextualConvention, OctetString):
    description = "String representing time and date of a specified event. Value will be reported in local time or UTC as determined by the system 'timestamp' setting, formatted as 'Wed Jun 30 21:49:03 2016'. A trailing 'Z' indicates UTC. When there is no time value to report, objects using this textual convention may return a string of characters describing condition in a way that is applicable to the data being represented by the object."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

cienaCesPmGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 1, 1), CienaGlobalState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesPmGlobalState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmGlobalState.setDescription('This object allows the user to globally configure the PM administrative state. This object must be enabled in order for a PM instance to be operationally enabled.')
cienaCesPmPersistenceInterval = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesPmPersistenceInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmPersistenceInterval.setDescription('This object allows the user to globally configure the PM persistence interval.')
cienaCesPmPersistenceStorage = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalUsb", 1), ("onBoard", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesPmPersistenceStorage.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmPersistenceStorage.setDescription('This object allows the user to globally configure the PM persistence storage.')
cienaCesPmInstanceNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceNextIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceNextIndex.setDescription('This object contains an unused value for cienaCesPmInstanceIndex, or a zero to indicate that none exist. When creating a PM instance entry in the cienaCesPmInstanceTable, the cienaCesPmNextAvailablePmInstanceIndex value may be used for cienaCesPmInstanceIndex in the new table entry.')
cienaCesPmInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1), )
if mibBuilder.loadTexts: cienaCesPmInstanceTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceTable.setDescription('The (conceptual) table listing the configuration parameters for the PM instance table. To create an entry in this table, cienaCesPmPmProfileType, cienaCesPmInterfaceType, cienaCesPmInterfaceId and cienaCesPmInstanceName must be specified and cienaCesPmInstanceRowStatus must be set to createAndGo.')
cienaCesPmInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmInstanceEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceEntry.setDescription('An entry (conceptual row) in the cienaCesPmInstanceTable.')
cienaCesPmInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cienaCesPmInstanceIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceIndex.setDescription('A unique identifier for the PM instance entry.')
cienaCesPmInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceName.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceName.setDescription('Name for the PM instance.')
cienaCesPmInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 3), PmInstanceType().clone('ondemand')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceType.setDescription('Type for the PM instance.')
cienaCesPmInstanceInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 4), PmInterfaceType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceType.setDescription('Interface type associated with the PM instance.')
cienaCesPmInstanceInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceId.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceId.setDescription('Interface ID associated with the PM instance uniquely identifying the interface associated with the PM instance. The value of this object depends on the interface type and may be encoded to suit. For example, when the cienaCesPmInstanceInterfaceType is of type port(1) the value of this object refers to a port identifier (PGID). For some interface types, the value of this object is not sufficient to uniquely identify an interface. In such cases, the cienaCesPmInstanceInterfaceId2 object is used to provide further resolution for uniquely identifying the interface. For such interfaces, the value of this object and the cienaCesPmInstanceInterfaceId2 object may be normalized during row creation as evident by subsequent get of this object and the cienaCesPmInstanceInterfaceId2 object.')
cienaCesPmInstanceInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceName.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceName.setDescription('Interface name associated with the PM instance.')
cienaCesPmInstanceProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 7), PmProfileType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceProfileType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceProfileType.setDescription('Profile type of the PM instance statistics.')
cienaCesPmInstanceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceStartTime.setDescription("When set, specifies the collection start time for the PM instance in the local time zone. The input time format is hh:mm or hh:mm:ss. If not set, but cienaCesPmInstanceStartDate is set, the time defaults to 00:00:00. When read, indicates the collection start date and time for the PM instance in local time or UTC, as determined by the system 'timestamp' setting, formatted as 'Wed Jun 30 21:49:08 1993'. A trailing 'Z' indicates UTC.")
cienaCesPmInstanceStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceStartDate.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceStartDate.setDescription("When set, specifies the collection start date for the PM instance in the local time zone. The input date format is [yy]yy-mm-dd or mm-dd. If the year is omitted, the current year is used. When read, indicates the collection start date and time for the PM instance in local time or UTC, as determined by the system 'timestamp' setting, formatted as 'Wed Jun 30 21:49:08 1993'. A trailing 'Z' indicates UTC.")
cienaCesPmInstanceEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceEndTime.setDescription("When set, specifies the collection end time for the PM instance in the local time zone. The input time format is hh:mm or hh:mm:ss. If not set, but cienaCesPmInstanceEndDate is set, the time defaults to 23:59:59. When read, indicates the collection end date and time for the PM instance in local time or UTC, as determined by the system 'timestamp' setting, formatted as 'Wed Jun 30 21:49:08 1993'. A trailing 'Z' indicates UTC.")
cienaCesPmInstanceEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceEndDate.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceEndDate.setDescription("When set, specifies the collection end date for the PM instance in the local time zone. The input date format is [yy]yy-mm-dd or mm-dd. If the year is omitted, the current year is used. When read, indicates the collection end date and time for the PM instance in local time or UTC, as determined by the system 'timestamp' setting, formatted as 'Wed Jun 30 21:49:08 1993'. A trailing 'Z' indicates UTC.")
cienaCesPmInstanceBinCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceBinCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceBinCount.setDescription('Represents the number of history bins for the PM instance. A value of 0 indicates that there are no history bins other than the 24hrHistoryBin. The current and current24Hr bins are not included in this bin count and still exist as well.')
cienaCesPmInstanceBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("minutes-1", 1), ("minutes-5", 2), ("minutes-10", 3), ("minutes-15", 4), ("minutes-30", 5), ("minutes-60", 6), ("hours-24", 7))).clone('minutes-15')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceBinDuration.setDescription('Represents the bin duration for the PM instance.')
cienaCesPmInstanceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 14), CienaGlobalState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceAdminState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAdminState.setDescription('Administrative state of the PM instance.')
cienaCesPmInstanceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 15), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceOperState.setDescription('Operational state for the PM instance.')
cienaCesPmInstanceCollectionTimeFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("utc", 1), ("relative-to-now", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceCollectionTimeFormat.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceCollectionTimeFormat.setDescription('This object allows the user to choose the reference time of PM instance collection start and end times. The value none(0) sets the start time to now and the end time to none, ignoring any time values specified by the user. The value utc(1) sets the start and end time value references to the Unix Epoch, January 1, 1970, 00:00:00 UTC. The value relative-to-now(2) sets the start and end time value references to now. The default value is none(0). This object returns a value of none(0) on GET.')
cienaCesPmInstanceStartTimeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceStartTimeValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceStartTimeValue.setDescription('This object specifies the collection start time of the PM instance in seconds from the reference time specified by the value of the cienaCesPmInstanceCollectionTimeFormat object. If the collection time format is set to utc(1), then this object specifies the start time value in the Unix Epoch, starting January 1, 1970, 00:00:00 UTC. If the cienaCesPmInstanceCollectionTimeFormat is set to relative-to-now(2), this object specifies the start time in seconds from now. If the cienaCesPmInstanceCollectionTimeFormat object has a value of none(0), the value of this object is ignored and the start time is set to now. This object returns a value of 0 on GET. The start date/time for the PM instance is displayed using the cienaCesPmInstanceStartDate/cienaCesPmInstanceStartTime objects.')
cienaCesPmInstanceEndTimeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceEndTimeValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceEndTimeValue.setDescription('This object specifies the collection end time of the PM instance in seconds from the reference time specified by the value of the cienaCesPmInstanceCollectionTimeFormat object. If the collection time format is set to utc(1), then this object specifies the end time value relative to the Unix Epoch, January 1, 1970, 00:00:00 UTC. If the cienaCesPmInstanceCollectionTimeFormat is set to relative-to-now(2), this object specifies the end time in seconds from now. If the value of the cienaCesPmInstanceCollectionTimeFormat object is none(0), the value of this object is ignored and no specific collection end time is specified. This object returns a value of 0 on GET. The end date/time for the PM instance is displayed using the cienaCesPmInstanceEndDate/cienaCesPmInstanceEndTime objects.')
cienaCesPmInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceRowStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceRowStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, set this object to 'createAndGo'. To delete a row in this table, set this object to 'destroy'. When creating a row in this table, the index object cienaCesPmInstanceIndex must specify a valid, unused index or specify value zero which will cause the new row to be created at the next available index. Prior to creating the new row, the cienaCesPmInstanceNextIndex object may be referenced to fetch the next available index.")
cienaCesPmInstanceClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 20), CienaStatsClear()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceClear.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceClear.setDescription('Clears the current counts for the bins associated with given instance.')
cienaCesPmInstanceInterfaceId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 21), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceId2.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceId2.setDescription('InterfaceId2 in the PM instance acts as a secondary identifying index in cases where the cienaCesPmInstanceInterfaceId object cannot uniquely identify the interface associated with the PM instance. For interfaces which do not utilize this secondary object, the value of this object is zero and unused during new row creation. For interfaces which utilize this secondary object, the value of this object is specific to the interface type. During new row creation, the value of this object may be used along with the cienaCesPmInstanceInterfaceId object value to uniquely identify the interface, and such usage may result in the normalization of the values for this object and the cienaCesPmInstanceInterface object, as evident by subsequent get of this object and the cienaCesPmInstanceInterfaceId object.')
cienaCesPmInstanceDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceDynamic.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceDynamic.setDescription('Dynamic PM instances are not created via CLI or SNMP.')
cienaCesPmInstanceConfigurationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 23), PmConfigurationMode().clone('user')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceConfigurationMode.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceConfigurationMode.setDescription('Configuration mode for the PM instance.')
cienaCesPmInstanceAlignment = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 24), PmAlignment().clone('localClock')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceAlignment.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAlignment.setDescription('Alignment value for the PM instance.')
cienaCesPmInstanceInterfaceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 25), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceInterfaceOperState.setDescription('Operational state for the attached interface monitored by the PM instance.')
cienaCesPmInstanceHistoryClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 2, 1, 1, 26), CienaStatsClear()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceHistoryClear.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceHistoryClear.setDescription('Setting this object to clear(1) will clear the History and 24HrHistory bins associated with the given instance.')
cienaCesPmExtendedTxRxHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTable.setDescription('The (conceptual) read-only table listing the extended TxRx profile statistics.')
cienaCesPmExtendedTxRxHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmExtendedTxRxHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxHistoryBinTable. This table lists the stats for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmExtendedTxRxHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinIndex.setDescription('Bin Number associated with the ExtendedTxRxHistoryBin entry.')
cienaCesPmExtendedTxRxHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmExtendedTxRxHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmExtendedTxRxHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmExtendedTxRxHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmExtendedTxRxHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinState.setDescription('State of the bin.')
cienaCesPmExtendedTxRxHistoryBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBytes.setDescription('The number of bytes received by this port.')
cienaCesPmExtendedTxRxHistoryBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxPkts.setDescription('The number of packets received by this port.')
cienaCesPmExtendedTxRxHistoryBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this port.')
cienaCesPmExtendedTxRxHistoryBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxMcastPkts.setDescription('The total number of multicast packets received for the given port.')
cienaCesPmExtendedTxRxHistoryBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBcastPkts.setDescription('The number of broadcast packets received by this port.')
cienaCesPmExtendedTxRxHistoryBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHistoryBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHistoryBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxHistoryBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxHistoryBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBytes.setDescription('The number of octets transmitted on this port.')
cienaCesPmExtendedTxRxHistoryBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxTBytes.setDescription('The total number of octets transmitted on this port.')
cienaCesPmExtendedTxRxHistoryBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxPkts.setDescription('The total number of packets transmitted on this port.')
cienaCesPmExtendedTxRxHistoryBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on the port.')
cienaCesPmExtendedTxRxHistoryBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxMcastPkts.setDescription('The number of multicast packets transmitted on the port.')
cienaCesPmExtendedTxRxHistoryBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxGiantPkts.setDescription('The number of too big packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxCollPkts.setDescription('The number of collision packets transmitted on a port.')
cienaCesPmExtendedTxRxHistoryBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinDropEvents.setDescription('The number of packet drop events on a port.')
cienaCesPmExtendedTxRxHistoryBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinInDiscards.setDescription('The number of packet discards on a port.')
cienaCesPmExtendedTxRxHistoryBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxPausePkts.setDescription('The pause packets transmitted on the port.')
cienaCesPmExtendedTxRxHistoryBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxPausePkts.setDescription('The pause packets received on the port.')
cienaCesPmExtendedTxRxHistoryBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxBytesPerSec.setDescription('The number of bytes received per second on this port.')
cienaCesPmExtendedTxRxHistoryBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxFramesPerSec.setDescription('The number of frames received per second on this port.')
cienaCesPmExtendedTxRxHistoryBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this port.')
cienaCesPmExtendedTxRxHistoryBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this port.')
cienaCesPmExtendedTxRxHistoryBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHistoryBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxHistoryBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxHistoryBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxHistoryBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHistoryBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxHistoryBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxHistoryBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxHistoryBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 1, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHistoryBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmExtendedTxRxCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTable.setDescription('The (conceptual) read-only table listing the extended TxRx profile statistics.')
cienaCesPmExtendedTxRxCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmExtendedTxRxCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinStartTime.setDescription('Collection start time for this PM instance.')
cienaCesPmExtendedTxRxCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinClearedTime.setDescription('Cleared time of current statistics for this PM instance.')
cienaCesPmExtendedTxRxCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinDuration.setDescription('Duration to collect current statistics for this PM instance.')
cienaCesPmExtendedTxRxCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinState.setDescription('State of the current statistics.')
cienaCesPmExtendedTxRxCurrBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxCurrBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxCurrBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxCurrBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxMcastPkts.setDescription('The total number of multicast packets received by this PM instance.')
cienaCesPmExtendedTxRxCurrBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxCurrBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurrBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurrBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxCurrBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxCurrBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBytes.setDescription('The number of octets transmitted on this port.')
cienaCesPmExtendedTxRxCurrBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxTBytes.setDescription('The total number of octets transmitted on this port.')
cienaCesPmExtendedTxRxCurrBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxPkts.setDescription('The total number of packets transmitted on this port.')
cienaCesPmExtendedTxRxCurrBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on the port.')
cienaCesPmExtendedTxRxCurrBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxMcastPkts.setDescription('The number of multicast packets transmitted on the port.')
cienaCesPmExtendedTxRxCurrBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxGiantPkts.setDescription('The number of too big packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxLateCollPkts.setDescription('The number of collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxCollPkts.setDescription('The number of collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurrBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxCurrBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinInDiscards.setDescription('The number of packet discard events on this PM instance.')
cienaCesPmExtendedTxRxCurrBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxPausePkts.setDescription('The pause packets transmitted on the port.')
cienaCesPmExtendedTxRxCurrBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxPausePkts.setDescription('The pause packets received on the port.')
cienaCesPmExtendedTxRxCurrBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxBytesPerSec.setDescription('The number of bytes received per second on this port.')
cienaCesPmExtendedTxRxCurrBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxFramesPerSec.setDescription('The number of frames received per second on this port.')
cienaCesPmExtendedTxRxCurrBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this port.')
cienaCesPmExtendedTxRxCurrBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this port.')
cienaCesPmExtendedTxRxCurrBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurrBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxCurrBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxCurrBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxCurrBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurrBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxCurrBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxCurrBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxCurrBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 2, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurrBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmExtendedTxRxCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTable.setDescription('The (conceptual) read-only table listing the extended TxRx profile statistics.')
cienaCesPmExtendedTxRxCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxCurr24HBinTable. This table lists the statistics for the current 24 hours.')
cienaCesPmExtendedTxRxCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinStartTime.setDescription('Collection start time for the current 24 hour statistics for this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinEndTime.setDescription('Collection end time for the current 24 hour statistics for this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinClearedTime.setDescription('Cleared time of current 24 hour statistics for this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinDuration.setDescription('Duration of the current 24 hour statistics collection for this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinState.setDescription('State of the current 24 hour statistics for this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxMcastPkts.setDescription('The total number of multicast packets received by this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurr24HBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurr24HBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxCurr24HBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxCurr24HBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBytes.setDescription('The number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxTBytes.setDescription('The total number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxPkts.setDescription('The total number of packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxMcastPkts.setDescription('The number of multicast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxGiantPkts.setDescription('The number of too big packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxCollPkts.setDescription('The number of collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinInDiscards.setDescription('The number of packet discard events on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxPausePkts.setDescription('The pause packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxPausePkts.setDescription('The pause packets received on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxCurr24HBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxCurr24HBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxCurr24HBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxCurr24HBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxCurr24HBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxCurr24HBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxCurr24HBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxCurr24HBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxCurr24HBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 3, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxCurr24HBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmExtendedTxRxHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTable.setDescription('The (conceptual) read-only table listing the extended TxRx profile statistics.')
cienaCesPmExtendedTxRxHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxHist24HBinTable. This table lists the statistics for the history 24 hour bins.')
cienaCesPmExtendedTxRxHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmExtendedTxRxHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmExtendedTxRxHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinState.setDescription('State of the bin.')
cienaCesPmExtendedTxRxHist24HBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxMcastPkts.setDescription('The total number of multicast packets received for the given PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxHist24HBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHist24HBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHist24HBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxHist24HBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxHist24HBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBytes.setDescription('The number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxTBytes.setDescription('The total number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxPkts.setDescription('The total number of packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxMcastPkts.setDescription('The number of multicast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxGiantPkts.setDescription('The number of too big packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxCollPkts.setDescription('The number of collision packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinInDiscards.setDescription('The number of packet discards on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxPausePkts.setDescription('The pause packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxPausePkts.setDescription('The pause packets received on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxHist24HBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmExtendedTxRxHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmExtendedTxRxHist24HBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxHist24HBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxHist24HBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxHist24HBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxHist24HBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxHist24HBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxHist24HBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxHist24HBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 4, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxHist24HBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmExtendedTxRxAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTable.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTable.setDescription('The (conceptual) read-only table listing the extended TxRx profile statistics.')
cienaCesPmExtendedTxRxAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinEntry.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxAllTimeBinTable. This table lists the stats for the All Time bin of the PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBytes.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxCrcErrorPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxMcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxMcastPkts.setDescription('The total number of multicast packets received for the given PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinUndersizePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxAllTimeBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinOversizePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxAllTimeBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinFragmentsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxAllTimeBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinJabbersPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxAllTimeBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin64OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin65To127OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin128To255OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin256To511OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin512To1023OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin1024To1518OctsPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxAllTimeBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBytes.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBytes.setDescription('The number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxTBytes.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxTBytes.setDescription('The total number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxPkts.setDescription('The total number of packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxMcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxMcastPkts.setDescription('The number of multicast packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxExDeferPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxGiantPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxGiantPkts.setDescription('The number of too big packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxUnderRunPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxCrcErrorPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLCheckErrorPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLOutRangePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLateCollPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxExCollPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxSingleCollPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxCollPkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxCollPkts.setDescription('The number of collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxAllTimeBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinDropEvents.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinInDiscards.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinInDiscards.setDescription('The number of packet discards on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxPausePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxPausePkts.setDescription('The pause packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxPausePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxPausePkts.setDescription('The pause packets received on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBytesPerSec.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxFramesPerSec.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBytesPerSec.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxFramesPerSec.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxAllTimeBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 5, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxLOutRangePkts.setStatus('obsolete')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxAllTimeBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmExtendedTxRxStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmExtendedTxRxStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmExtendedTxRxStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmExtendedTxRxStatsBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxMcastPkts.setDescription('The total number of multicast packets received for the given PM instance.')
cienaCesPmExtendedTxRxStatsBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxStatsBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxStatsBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxStatsBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxStatsBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxStatsBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBytes.setDescription('The number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxTBytes.setDescription('The total number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxPkts.setDescription('The total number of packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxMcastPkts.setDescription('The number of multicast packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxGiantPkts.setDescription('The number of too big packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxCollPkts.setDescription('The number of collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxStatsBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxStatsBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinInDiscards.setDescription('The number of packet discards on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxPausePkts.setDescription('The pause packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxPausePkts.setDescription('The pause packets received on this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxStatsBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxStatsBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxStatsBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxStatsBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxStatsBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxStatsBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxStatsBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxStatsBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxStatsBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 6, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxStatsBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmExtendedTxRxTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7), )
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmExtendedTxRxTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmExtendedTxRxTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmExtendedTxRxTotalStatsBinRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBytes.setDescription('The number of bytes received by this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxPkts.setDescription('The number of packets received by this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxCrcErrorPkts.setDescription('The number of packets received with CRC errors by this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxMcastPkts.setDescription('The total number of multicast packets received for the given PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBcastPkts.setDescription('The number of broadcast packets received by this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinUndersizePkts.setDescription('The total number of packets received that were less than 64 octets long (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxTotalStatsBinOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinOversizePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinOversizePkts.setDescription('The total number of packets received that were longer than 1518 octets but less than or equal to the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxTotalStatsBinFragmentsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinFragmentsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinFragmentsPkts.setDescription('The total number of packets received that were less than 64 octets in length (excluding framing bits but including FCS octets) and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxTotalStatsBinJabbersPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinJabbersPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinJabbersPkts.setDescription('The total number of packets received that were longer than 1518 octets (excluding framing bits, but including FCS octets), and had either a bad Frame Check Sequence (FCS) with an integral number of octets (FCS Error) or a bad FCS with a non-integral number of octets (Alignment Error).')
cienaCesPmExtendedTxRxTotalStatsBin64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin64OctsPkts.setDescription('The total number of packets (including bad packets) received that were 64 octets in length (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin65To127OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin128To255OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin256To511OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin512To1023OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBytes.setDescription('The number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxTBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxTBytes.setDescription('The total number of octets transmitted on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxPkts.setDescription('The total number of packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBcastPkts.setDescription('The number of broadcast packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxMcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxMcastPkts.setDescription('The number of multicast packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxExDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxExDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxExDeferPkts.setDescription('The number of excessive defer packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxGiantPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxGiantPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxGiantPkts.setDescription('The number of too big packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxUnderRunPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxUnderRunPkts.setDescription('The number of underrun packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxCrcErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxCrcErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxCrcErrorPkts.setDescription('The number of CRC error packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxLCheckErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLCheckErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLCheckErrorPkts.setDescription('The number of length check error packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLOutRangePkts.setDescription('The number of out of range packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxLateCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLateCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxLateCollPkts.setDescription('The number of late collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxExCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxExCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxExCollPkts.setDescription('The number of excessive collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxSingleCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxSingleCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxSingleCollPkts.setDescription('The number of single collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinTxCollPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxCollPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxCollPkts.setDescription('The number of collision packets transmitted on the interface.')
cienaCesPmExtendedTxRxTotalStatsBinDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinDropEvents.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinDropEvents.setDescription('The number of packet drop events on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinInDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinInDiscards.setDescription('The number of packet discards on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxPausePkts.setDescription('The pause packets transmitted on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxPausePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxPausePkts.setDescription('The pause packets received on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmExtendedTxRxTotalStatsBinRxLOutRangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxLOutRangePkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxLOutRangePkts.setDescription('The total number of packets received that were longer than the MTU (excluding framing bits, but including FCS octets) and were otherwise well formed.')
cienaCesPmExtendedTxRxTotalStatsBinRxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxUcastPkts.setDescription('The number of unicast packets received on the port.')
cienaCesPmExtendedTxRxTotalStatsBinRxInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxInErrorPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinRxInErrorPkts.setDescription('The number of in error packets received on the port.')
cienaCesPmExtendedTxRxTotalStatsBin1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBin4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBin4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) received that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTxUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxUcastPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxUcastPkts.setDescription('The number of unicast packets transmitted on the port.')
cienaCesPmExtendedTxRxTotalStatsBinTx64OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx64OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx64OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 64 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx65To127OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx65To127OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx65To127OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 65 and 127 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx128To255OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx128To255OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx128To255OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 128 and 255 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx256To511OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx256To511OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx256To511OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 256 and 511 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx512To1023OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx512To1023OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx512To1023OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 512 and 1023 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx1024To1518OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx1024To1518OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx1024To1518OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1024 and 1518 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx1519To2047OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx1519To2047OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx1519To2047OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 1519 and 2047 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx2048To4095OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx2048To4095OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx2048To4095OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 2048 and 4095 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTx4096To9216OctsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx4096To9216OctsPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTx4096To9216OctsPkts.setDescription('The total number of packets (including bad packets) transmitted that were between 4096 and 9216 octets in length inclusive (excluding framing bits but including FCS octets).')
cienaCesPmExtendedTxRxTotalStatsBinTxDeferPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxDeferPkts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinTxDeferPkts.setDescription('The number of defer packets transmitted on the port.')
cienaCesPmExtendedTxRxTotalStatsBinLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkUp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkUp.setDescription('The number of link up events on the port.')
cienaCesPmExtendedTxRxTotalStatsBinLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkDown.setDescription('The number of link down events on the port.')
cienaCesPmExtendedTxRxTotalStatsBinLinkFlap = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 1, 7, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkFlap.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmExtendedTxRxTotalStatsBinLinkFlap.setDescription('The number of link flap events on the port.')
cienaCesPmBasicTxRxHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxRxHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicTxRxHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicTxRxHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinIndex.setDescription('Bin number associated with the PmBasicTxRxHistoryBin entry.')
cienaCesPmBasicTxRxHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxRxHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicTxRxHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxRxHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxHistoryBinRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxHistoryBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxHistoryBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxHistoryBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxHistoryBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxHistoryBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHistoryBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxRxCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicTxRxCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxRxCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxRxCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxCurrBinRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxCurrBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxCurrBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxCurrBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxCurrBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxCurrBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurrBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTable.setDescription('The (conceptual) read-only Table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxRxCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicTxRxCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmBasicTxRxCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxRxCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxRxCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxCurr24HBinRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxCurr24HBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxCurr24HBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxRxHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicTxRxHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxRxHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxHist24HBinBasicTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinBasicTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxRxHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 4, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxRxAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxRxAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxYellowBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxYellowFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxBytesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxFramesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxBytesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxAllTimeBinBasicTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxFramesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxAllTimeBinBasicTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicTxRxStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxRxStatsBinRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxStatsBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxStatsBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxStatsBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicTxRxTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxTotalStatsBinRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxTotalStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 2, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxTotalStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmIGMPHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1), )
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmIGMPHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmIGMPHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIndex.setDescription('Bin number associated with the PmIGMPHistoryBin entry.')
cienaCesPmIGMPHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmIGMPHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmIGMPHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmIGMPHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinState.setDescription('State of the bin.')
cienaCesPmIGMPHistoryBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPHistoryBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPHistoryBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPHistoryBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPHistoryBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPHistoryBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPHistoryBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPHistoryBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPHistoryBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPHistoryBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPHistoryBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2), )
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmIGMPCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmIGMPCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmIGMPCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinState.setDescription('State of the bin.')
cienaCesPmIGMPCurrBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPCurrBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPCurrBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total query discarded because of no server logical interfaces.')
cienaCesPmIGMPCurrBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPCurrBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPCurrBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPCurrBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPCurrBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPCurrBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPCurrBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPCurrBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3), )
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmIGMPCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmIGMPCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmIGMPCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmIGMPCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinState.setDescription('State of the bin.')
cienaCesPmIGMPCurr24HBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPCurr24HBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPCurr24HBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPCurr24HBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPCurr24HBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPCurr24HBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPCurr24HBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPCurr24HBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPCurr24HBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPCurr24HBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4), )
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics')
cienaCesPmIGMPHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmIGMPHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmIGMPHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmIGMPHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinState.setDescription('State of the bin.')
cienaCesPmIGMPHist24HBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPHist24HBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPHist24HBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPHist24HBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPHist24HBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPHist24HBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPHist24HBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPHist24HBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPHist24HBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPHist24HBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPHist24HBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 4, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmIGMPAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5), )
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmIGMPAllTimeBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumJoins.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPAllTimeBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumLeaves.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPAllTimeBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueries.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscards.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortDown.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortBlock.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryTimeouts.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPAllTimeBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumReplyTimeouts.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPAllTimeBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumRouterDiscards.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPAllTimeBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumHostDiscards.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPAllTimeBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumBadChecksum.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPAllTimeBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumL2L3Mismatch.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPAllTimeBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumUnknownPktType.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPAllTimeBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumResourceExceed.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsSrcIpZero.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6), )
if mibBuilder.loadTexts: cienaCesPmIGMPStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmIGMPStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmIGMPStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmIGMPStatsBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPStatsBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPStatsBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPStatsBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPStatsBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPStatsBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPStatsBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPStatsBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPStatsBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPStatsBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPStatsBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmIGMPTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7), )
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmIGMPTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmIGMPTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmIGMPTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmIGMPTotalStatsBinIgmpnumJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumJoins.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumJoins.setDescription('The total number of join messages received.')
cienaCesPmIGMPTotalStatsBinIgmpnumLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumLeaves.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumLeaves.setDescription('The total number of leave messages received.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueries.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueries.setDescription('The total number of queries received.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscards.setDescription('The total number of queries discarded.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsQueryCameTooSoon = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsQueryCameTooSoon.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsQueryCameTooSoon.setDescription('The total number of queries discarded because the queries came too soon.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortDown.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortDown.setDescription('The total number queries discarded because the port was down.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortBlock.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortBlock.setDescription('The total number of queries discarded because the port was blocked.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsLiNoServerLI = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsLiNoServerLI.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsLiNoServerLI.setDescription('The total number of queries discarded because of no server logical interfaces.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryTimeouts.setDescription('The total number of timeouts waiting for the router to send query.')
cienaCesPmIGMPTotalStatsBinIgmpnumReplyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumReplyTimeouts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumReplyTimeouts.setDescription('The total number of timeouts waiting for the membership reports.')
cienaCesPmIGMPTotalStatsBinIgmpnumRouterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumRouterDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumRouterDiscards.setDescription('The total number of messages discarded by the router. This happens when a join comes in from a router port.')
cienaCesPmIGMPTotalStatsBinIgmpnumHostDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumHostDiscards.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumHostDiscards.setDescription('The total number of messages discarded by the host. This happens when a join or leave comes in a port, but no router port is established.')
cienaCesPmIGMPTotalStatsBinIgmpnumBadChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumBadChecksum.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumBadChecksum.setDescription('The total number of packets received with bad IP checksum.')
cienaCesPmIGMPTotalStatsBinIgmpnumL2L3Mismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumL2L3Mismatch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumL2L3Mismatch.setDescription('The total number of IGMP Layer 2 and Layer 3 mismatch packets received.')
cienaCesPmIGMPTotalStatsBinIgmpnumUnknownPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumUnknownPktType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumUnknownPktType.setDescription('The total number of unknown type IGMP packets received.')
cienaCesPmIGMPTotalStatsBinIgmpnumResourceExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumResourceExceed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumResourceExceed.setDescription('The total number of IGMP packets discarded because there were not enough resources to process these messages. This could happen when the rate of the incoming IGMP messages is very high.')
cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsSrcIpZero = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 3, 7, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsSrcIpZero.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsSrcIpZero.setDescription('The total number of queries discarded because they had zero source IP.')
cienaCesPmAccessHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1), )
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmAccessHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmAccessHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmAccessHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinIndex.setDescription('Bin number associated with the PmAccessHistoryBin entry.')
cienaCesPmAccessHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmAccessHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmAccessHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmAccessHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinState.setDescription('State of the bin.')
cienaCesPmAccessHistoryBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinAccessHitBytes.setDescription('The total number of access hit bytes for the history bin.')
cienaCesPmAccessHistoryBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHistoryBinAccessHitFrames.setDescription('The total number of access hit frames for the history bin.')
cienaCesPmAccessCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2), )
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmAccessCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmAccessCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmAccessCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmAccessCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinState.setDescription('State of the bin.')
cienaCesPmAccessCurrBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinAccessHitBytes.setDescription('The total number of access hit bytes for the current bin.')
cienaCesPmAccessCurrBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurrBinAccessHitFrames.setDescription('The total number of access hit frames for the current bin.')
cienaCesPmAccessCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3), )
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmAccessCurr24HBinTable. This table lists the statistics for the current 24 hours.')
cienaCesPmAccessCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmAccessCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmAccessCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmAccessCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinState.setDescription('State of the bin.')
cienaCesPmAccessCurr24HBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinAccessHitBytes.setDescription('The total number of access hit bytes for the 24 hours bin.')
cienaCesPmAccessCurr24HBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessCurr24HBinAccessHitFrames.setDescription('The total number of access hit frames for the 24 hours bin.')
cienaCesPmAccessHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4), )
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmAccessHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmAccessHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmAccessHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinState.setDescription('State of the bin.')
cienaCesPmAccessHist24HBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinAccessHitBytes.setDescription('The total number of access hit bytes for the history 24 hours bin.')
cienaCesPmAccessHist24HBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinAccessHitFrames.setDescription('The total number of access hit frames for the history 24 hours bin.')
cienaCesPmAccessHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmAccessHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmAccessAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5), )
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmAccessAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmAccessAllTimeBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinDuration.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinDuration.setDescription('Duration of the bin.')
cienaCesPmAccessAllTimeBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5, 1, 2), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinState.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinState.setDescription('State of the bin.')
cienaCesPmAccessAllTimeBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinAccessHitBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinAccessHitBytes.setDescription('The total number of access hit bytes for the All Time bin.')
cienaCesPmAccessAllTimeBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinAccessHitFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmAccessAllTimeBinAccessHitFrames.setDescription('The total number of access hit frames for the All Time bin.')
cienaCesPmAccessStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6), )
if mibBuilder.loadTexts: cienaCesPmAccessStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmAccessStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmAccessStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmAccessStatsBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinAccessHitBytes.setDescription('The total number of access hit bytes for the All Time bin.')
cienaCesPmAccessStatsBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessStatsBinAccessHitFrames.setDescription('The total number of access hit frames for the All Time bin.')
cienaCesPmAccessTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 7), )
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmAccessTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmAccessTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmAccessTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmAccessTotalStatsBinAccessHitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinAccessHitBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinAccessHitBytes.setDescription('The total number of access hit bytes for the All Time bin.')
cienaCesPmAccessTotalStatsBinAccessHitFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 4, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinAccessHitFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAccessTotalStatsBinAccessHitFrames.setDescription('The total number of access hit frames for the All Time bin.')
cienaCesPmFloodContainerHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmFloodContainerHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmFloodContainerHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinIndex.setDescription('Bin number associated with the PmFloodContainerHistoryBin entry.')
cienaCesPmFloodContainerHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmFloodContainerHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmFloodContainerHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmFloodContainerHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinState.setDescription('State of the bin.')
cienaCesPmFloodContainerHistoryBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinBcastDroppedBytes.setDescription('Dropped broadcast bytes.')
cienaCesPmFloodContainerHistoryBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerHistoryBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinL2McastDroppedBytes.setDescription('Multicast dropped bytes.')
cienaCesPmFloodContainerHistoryBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinL2McastDroppedFrames.setDescription('Multicast dropped frames.')
cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedBytes.setDescription('Unicast dropped bytes.')
cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedFrames.setDescription('Unicast dropped frames.')
cienaCesPmFloodContainerCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmFloodContainerCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmFloodContainerCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmFloodContainerCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinState.setDescription('State of the bin.')
cienaCesPmFloodContainerCurrBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerCurrBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerCurrBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerCurrBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedBytes.setDescription('Unknown unicast dropped bytes.')
cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedFrames.setDescription('Unknown unicast dropped frames.')
cienaCesPmFloodContainerCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmFloodContainerCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmFloodContainerCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmFloodContainerCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmFloodContainerCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinState.setDescription('State of the bin.')
cienaCesPmFloodContainerCurr24HBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerCurr24HBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerCurr24HBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerCurr24HBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedBytes.setDescription('Unknown unicast dropped bytes.')
cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedFrames.setDescription('Unknown unicast dropped frames.')
cienaCesPmFloodContainerHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmFloodContainerHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmFloodContainerHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinState.setDescription('State of the bin.')
cienaCesPmFloodContainerHist24HBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerHist24HBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerHist24HBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerHist24HBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedBytes.setDescription('Unicast dropped bytes.')
cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedFrames.setDescription('Unicast dropped frames.')
cienaCesPmFloodContainerHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmFloodContainerHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmFloodContainerAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmIGMPBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmFloodContainerAllTimeBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinBcastDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerAllTimeBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinBcastDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerAllTimeBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinL2McastDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerAllTimeBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinL2McastDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedBytes.setDescription('Unknown unicast dropped bytes.')
cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedFrames.setDescription('Unknown unicast dropped frames.')
cienaCesPmFloodContainerStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmFloodContainerStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmFloodContainerStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmFloodContainerStatsBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerStatsBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerStatsBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerStatsBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedBytes.setDescription('Unknown unicast dropped bytes.')
cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedFrames.setDescription('Unknown unicast dropped frames.')
cienaCesPmFloodContainerTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7), )
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmFloodContainerTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmFloodContainerTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmFloodContainerTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmFloodContainerTotalStatsBinBcastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinBcastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinBcastDroppedBytes.setDescription('Broadcast dropped bytes.')
cienaCesPmFloodContainerTotalStatsBinBcastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinBcastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinBcastDroppedFrames.setDescription('Broadcast dropped frames.')
cienaCesPmFloodContainerTotalStatsBinL2McastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinL2McastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinL2McastDroppedBytes.setDescription('L2 multicast dropped bytes.')
cienaCesPmFloodContainerTotalStatsBinL2McastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinL2McastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinL2McastDroppedFrames.setDescription('L2 multicast dropped frames.')
cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedBytes.setDescription('Unknown unicast dropped bytes.')
cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 5, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedFrames.setDescription('Unknown unicast dropped frames.')
cienaCesPmBasicRxHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicRxHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicRxHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicRxHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicRxHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinIndex.setDescription('Bin number associated with the PmBasicTxRxBin entry.')
cienaCesPmBasicRxHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicRxHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicRxHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicRxHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicRxHistoryBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxHistoryBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHistoryBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicRxCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinTable.setDescription('The (conceptual) read-only table listing the basic Rx profile statistics.')
cienaCesPmBasicRxCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicRxCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicRxCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicRxCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicRxCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicRxCurrBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxCurrBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurrBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicRxCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicRxCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicRxCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmBasicRxCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicRxCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicRxCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicRxCurr24HBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes.')
cienaCesPmBasicRxCurr24HBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxAcceptedFrames.setDescription('The number of accepted frames.')
cienaCesPmBasicRxCurr24HBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxYellowBytes.setDescription('The number of remarked bytes received.')
cienaCesPmBasicRxCurr24HBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxYellowFrames.setDescription('The number of remarked frames received.')
cienaCesPmBasicRxCurr24HBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped')
cienaCesPmBasicRxCurr24HBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxDroppedFrames.setDescription('The number of received frames dropped.')
cienaCesPmBasicRxCurr24HBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxBytesPerSec.setDescription('The number of bytes received per second.')
cienaCesPmBasicRxCurr24HBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxCurr24HBinBasicRxFramesPerSec.setDescription('The number of frames received per second.')
cienaCesPmBasicRxHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicRxHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicRxHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicRxHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicRxHist24HBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxDroppedBytes.setDescription('The number of dropped bytes on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxHist24HBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicRxHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicRxHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicRxAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicRxAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxAcceptedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxAcceptedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxYellowBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxYellowFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxBytesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxAllTimeBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxFramesPerSec.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmBasicRxAllTimeBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicRxStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicRxStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicRxStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicRxStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicRxStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicRxStatsBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxStatsBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxStatsBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmBasicRxTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7), )
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicRxTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicRxTotalStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicRxTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedBytes.setDescription('The number of accepted bytes on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedFrames.setDescription('The number of accepted frames on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxYellowBytes.setDescription('The number of remarked bytes received on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxYellowFrames.setDescription('The number of remarked frames received on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxDroppedBytes.setDescription('The number of received bytes dropped on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxDroppedFrames.setDescription('The number of received frames dropped on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxBytesPerSec.setDescription('The number of bytes received per second on this PM instance.')
cienaCesPmBasicRxTotalStatsBinBasicRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 6, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicRxTotalStatsBinBasicRxFramesPerSec.setDescription('The number of frames received per second on this PM instance.')
cienaCesPmQueueGroupHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics.')
cienaCesPmQueueGroupHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupHistoryBinIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmQueueGroupHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinIndex.setDescription('Bin number associated with the PmEgressQueueBin entry.')
cienaCesPmQueueGroupQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cienaCesPmQueueGroupQueueIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupQueueIndex.setDescription('This object indicates a unique index for every queue in the queue group.')
cienaCesPmQueueGroupHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmQueueGroupHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmQueueGroupHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmQueueGroupHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 7), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinState.setDescription('State of the bin.')
cienaCesPmQueueGroupHistoryBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEnqueuedBytes.setDescription('The number of enqueued bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHistoryBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinEnqueuedFrames.setDescription('The number of enqueued frames on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHistoryBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDroppedBytes.setDescription('The number of received bytes dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHistoryBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHistoryBinDroppedFrames.setDescription('The number of received frames dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinTable.setDescription('The (conceptual) read-only table listing the queue group profile statistics.')
cienaCesPmQueueGroupCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmQueueGroupCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmQueueGroupCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmQueueGroupCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinState.setDescription('State of the bin.')
cienaCesPmQueueGroupCurrBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEnqueuedBytes.setDescription('The number of enqueued bytes for this cienaCesPmQueueGroupQueueIndex')
cienaCesPmQueueGroupCurrBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinEnqueuedFrames.setDescription('The number of enqueued frames for this cienaCesPmQueueGroupQueueIndex')
cienaCesPmQueueGroupCurrBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDroppedBytes.setDescription('The number of received bytes dropped for this cienaCesPmQueueGroupQueueIndex')
cienaCesPmQueueGroupCurrBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurrBinDroppedFrames.setDescription('The number of received frames dropped for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinTable.setDescription('The (conceptual) read-only table listing the queue group profile statistics.')
cienaCesPmQueueGroupCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmQueueGroupCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmQueueGroupCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmQueueGroupCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmQueueGroupCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinState.setDescription('State of the bin.')
cienaCesPmQueueGroupCurr24HBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEnqueuedBytes.setDescription('The number of enqueued bytes for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupCurr24HBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinEnqueuedFrames.setDescription('The number of enqueued frames for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupCurr24HBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDroppedBytes.setDescription('The number of received bytes dropped for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupCurr24HBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupCurr24HBinDroppedFrames.setDescription('The number of received frames dropped for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinTable.setDescription('The (conceptual) read-only table listing the queue group profile statistics.')
cienaCesPmQueueGroupHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmQueueGroupHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmQueueGroupHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinState.setDescription('State of the bin.')
cienaCesPmQueueGroupHist24HBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEnqueuedBytes.setDescription('The number of enqueued bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHist24HBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEnqueuedFrames.setDescription('The number of enqueued frames on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHist24HBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDroppedBytes.setDescription('The number of dropped bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHist24HBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinDroppedFrames.setDescription('The number of received frames dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmQueueGroupHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmQueueGroupAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinTable.setDescription('The (conceptual) read-only table listing the queue group profile statistics.')
cienaCesPmQueueGroupAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmQueueGroupAllTimeBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEnqueuedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEnqueuedBytes.setDescription('The number of enqueued bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupAllTimeBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEnqueuedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinEnqueuedFrames.setDescription('The number of enqueued frames on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupAllTimeBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinDroppedBytes.setDescription('The number of received bytes dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupAllTimeBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmQueueGroupAllTimeBinDroppedFrames.setDescription('The number of received frames dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmQueueGroupStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmQueueGroupStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmQueueGroupStatsBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinEnqueuedBytes.setDescription('The number of enqueued bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupStatsBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinEnqueuedFrames.setDescription('The number of enqueued frames on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupStatsBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinDroppedBytes.setDescription('The number of received bytes dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupStatsBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupStatsBinDroppedFrames.setDescription('The number of received frames dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7), )
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmQueueGroupTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmQueueGroupQueueIndex"))
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmQueueGroupTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmQueueGroupTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmQueueGroupTotalStatsBinEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinEnqueuedBytes.setDescription('The number of enqueued bytes on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupTotalStatsBinEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinEnqueuedFrames.setDescription('The number of enqueued frames on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupTotalStatsBinDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinDroppedBytes.setDescription('The number of received bytes dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmQueueGroupTotalStatsBinDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 8, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmQueueGroupTotalStatsBinDroppedFrames.setDescription('The number of received frames dropped on this PM instance for this cienaCesPmQueueGroupQueueIndex.')
cienaCesPmEgressQueueHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics.')
cienaCesPmEgressQueueHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmEgressQueueHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmEgressQueueHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinIndex.setDescription('Bin number associated with the PmEgressQueueBin entry.')
cienaCesPmEgressQueueHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmEgressQueueHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmEgressQueueHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmEgressQueueHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinState.setDescription('State of the bin.')
cienaCesPmEgressQueueHistoryBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinUnicastDroppedBytes.setDescription('The number of received unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueHistoryBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinUnicastDroppedFrames.setDescription('The number of received unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueHistoryBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHistoryBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHistoryBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped before being enqueued on this PM instance.')
cienaCesPmEgressQueueHistoryBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHistoryBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped before being enqueued on this PM instance.')
cienaCesPmEgressQueueCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics.')
cienaCesPmEgressQueueCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmEgressQueueCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmEgressQueueCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmEgressQueueCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinState.setDescription('State of the bin.')
cienaCesPmEgressQueueCurrBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinUnicastDroppedBytes.setDescription('The number of received unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueCurrBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinUnicastDroppedFrames.setDescription('The number of received unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueCurrBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueCurrBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueCurrBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped before being enqueued on this PM instance.')
cienaCesPmEgressQueueCurrBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurrBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped before being enqueued on this PM instance.')
cienaCesPmEgressQueueCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics')
cienaCesPmEgressQueueCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmEgressQueueCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueCurr24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmEgressQueueCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmEgressQueueCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmEgressQueueCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinState.setDescription('State of the bin.')
cienaCesPmEgressQueueCurr24HBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinUnicastDroppedBytes.setDescription('The number of received unicast bytes that were dropped on this PM instance.')
cienaCesPmEgressQueueCurr24HBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinUnicastDroppedFrames.setDescription('The number of received unicast frames that were dropped on this PM instance.')
cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueCurr24HBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueCurr24HBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueCurr24HBinMulticastDroppedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics.')
cienaCesPmEgressQueueHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmEgressQueueHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmEgressQueueHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 3), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinState.setDescription('State of the bin.')
cienaCesPmEgressQueueHist24HBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinUnicastDroppedBytes.setDescription('The number of unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinUnicastDroppedFrames.setDescription('The number of unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped before being enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped before being enqueued at egress on this PM instance.')
cienaCesPmEgressQueueHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmEgressQueueHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmEgressQueueAllTimeBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinTable.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinTable.setDescription('The (conceptual) read-only table listing the egress queue profile statistics.')
cienaCesPmEgressQueueAllTimeBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueAllTimeBinTable. This table lists the statistics for the All Time bin of the PM instance.')
cienaCesPmEgressQueueAllTimeBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinUnicastDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinUnicastDroppedBytes.setDescription('The number of unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueAllTimeBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinUnicastDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinUnicastDroppedFrames.setDescription('The number of unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueAllTimeBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastDroppedBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueAllTimeBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastDroppedFrames.setStatus('deprecated')
if mibBuilder.loadTexts: cienaCesPmEgressQueueAllTimeBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmEgressQueueStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmEgressQueueStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmEgressQueueStatsBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinUnicastDroppedBytes.setDescription('The number of unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueStatsBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinUnicastDroppedFrames.setDescription('The number of unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueStatsBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueStatsBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueStatsBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueStatsBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueStatsBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7), )
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmEgressQueueTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmEgressQueueTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmEgressQueueTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmEgressQueueTotalStatsBinUnicastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinUnicastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinUnicastDroppedBytes.setDescription('The number of unicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatsBinUnicastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinUnicastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinUnicastDroppedFrames.setDescription('The number of unicast frames that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedBytes.setDescription('The number of multicast bytes that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedFrames.setDescription('The number of multicast frames that were enqueued at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatsBinMulticastDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastDroppedBytes.setDescription('The number of multicast bytes that were dropped at egress on this PM instance.')
cienaCesPmEgressQueueTotalStatsBinMulticastDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 7, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmEgressQueueTotalStatsBinMulticastDroppedFrames.setDescription('The number of multicast frames that were dropped at egress on this PM instance.')
cienaCesPmTdmT1PortHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmT1PortHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmTdmT1PortHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmTdmT1PortHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinIndex.setDescription('Bin number associated with the PmTdmT1PortHistoryBin entry.')
cienaCesPmTdmT1PortHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmTdmT1PortHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmTdmT1PortHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmT1PortHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinState.setDescription('State of the bin.')
cienaCesPmTdmT1PortHistoryBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortHistoryBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortHistoryBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortHistoryBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortHistoryBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortHistoryBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortHistoryBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortHistoryBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortHistoryBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortHistoryBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortHistoryBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortHistoryBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHistoryBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmT1PortCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmT1PortCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmTdmT1PortCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortCurrBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmT1PortCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmTdmT1PortCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinState.setDescription('State of the bin.')
cienaCesPmTdmT1PortCurrBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortCurrBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortCurrBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortCurrBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortCurrBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortCurrBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortCurrBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortCurrBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortCurrBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortCurrBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortCurrBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortCurrBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurrBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmT1PortCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmT1PortCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmTdmT1PortCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortCurr24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmT1PortCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmT1PortCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinState.setDescription('State of the bin.')
cienaCesPmTdmT1PortCurr24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortCurr24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortCurr24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortCurr24HBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortCurr24HBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortCurr24HBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortCurr24HBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortCurr24HBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortCurr24HBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortCurr24HBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortCurr24HBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortCurr24HBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortCurr24HBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmT1PortHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics.')
cienaCesPmTdmT1PortHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmTdmT1PortHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmTdmT1PortHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmT1PortHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmT1PortHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinState.setDescription('State of the bin.')
cienaCesPmTdmT1PortHist24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortHist24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortHist24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortHist24HBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortHist24HBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortHist24HBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortHist24HBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortHist24HBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortHist24HBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortHist24HBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortHist24HBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortHist24HBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortHist24HBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmT1PortStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmT1PortStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmTdmT1PortStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortStatisticsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmT1PortStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortStatisticsBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortStatisticsBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortStatisticsBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortStatisticsBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortStatisticsBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortStatisticsBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortStatisticsBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortStatisticsBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortStatisticsBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortStatisticsBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6), )
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmT1PortTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmT1PortTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmTdmT1PortTotalStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmT1PortTotalStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmT1PortTotalStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinLossl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinLossl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinLossl.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinCvp.setDescription('Path, Code violations.')
cienaCesPmTdmT1PortTotalStatisticsBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinEsp.setDescription('Path, Errored seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSesp.setDescription('Path, Severely errored seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinUasp.setDescription('Path, Unavailable seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinSasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinSasp.setDescription('Path, SEF/AIS seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinFcp.setDescription('Path, Failure count.')
cienaCesPmTdmT1PortTotalStatisticsBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinAsp.setDescription('Path, Available seconds.')
cienaCesPmTdmT1PortTotalStatisticsBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 9, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmT1PortTotalStatisticsBinTtp.setDescription('Path, Total time seconds.')
cienaCesPmTdmE1PortHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmE1PortHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmTdmE1PortHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmTdmE1PortHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinIndex.setDescription('Bin number associated with the PmTdmE1PortHistoryBin entry.')
cienaCesPmTdmE1PortHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmTdmE1PortHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmTdmE1PortHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmE1PortHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinState.setDescription('State of the bin.')
cienaCesPmTdmE1PortHistoryBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortHistoryBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortHistoryBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortHistoryBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortHistoryBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortHistoryBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortHistoryBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHistoryBinTt.setDescription('Total time seconds.')
cienaCesPmTdmE1PortCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmE1PortCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmTdmE1PortCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortCurrBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmE1PortCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmTdmE1PortCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinState.setDescription('State of the bin.')
cienaCesPmTdmE1PortCurrBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortCurrBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortCurrBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortCurrBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortCurrBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortCurrBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortCurrBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurrBinTt.setDescription('Total time seconds.')
cienaCesPmTdmE1PortCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmE1PortCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmTdmE1PortCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortCurr24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmE1PortCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmE1PortCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinState.setDescription('State of the bin.')
cienaCesPmTdmE1PortCurr24HBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortCurr24HBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortCurr24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortCurr24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortCurr24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortCurr24HBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortCurr24HBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortCurr24HBinTt.setDescription('Total time seconds.')
cienaCesPmTdmE1PortHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics.')
cienaCesPmTdmE1PortHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmTdmE1PortHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmTdmE1PortHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmE1PortHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmE1PortHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinState.setDescription('State of the bin.')
cienaCesPmTdmE1PortHist24HBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortHist24HBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortHist24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortHist24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortHist24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortHist24HBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortHist24HBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortHist24HBinTt.setDescription('Total time seconds.')
cienaCesPmTdmE1PortStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmE1PortStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmTdmE1PortStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortStatisticsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmE1PortStatisticsBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortStatisticsBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortStatisticsBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortStatisticsBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortStatisticsBinTt.setDescription('Total time seconds.')
cienaCesPmTdmE1PortTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6), )
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmE1PortTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmE1PortTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmTdmE1PortTotalStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmE1PortTotalStatisticsBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEb.setDescription('Errored blocks.')
cienaCesPmTdmE1PortTotalStatisticsBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinBbe.setDescription('Background block errors.')
cienaCesPmTdmE1PortTotalStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmE1PortTotalStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmE1PortTotalStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmE1PortTotalStatisticsBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinAs.setDescription('Available seconds.')
cienaCesPmTdmE1PortTotalStatisticsBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 10, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmE1PortTotalStatisticsBinTt.setDescription('Total time seconds.')
cienaCesPmTdmPwHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1), )
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmPwHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmTdmPwHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmTdmPwHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinIndex.setDescription('Bin number associated with the PmTdmPwHistoryBin entry.')
cienaCesPmTdmPwHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmTdmPwHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmTdmPwHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmPwHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinState.setDescription('State of the bin.')
cienaCesPmTdmPwHistoryBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwHistoryBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwHistoryBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwHistoryBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwHistoryBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwHistoryBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwHistoryBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwHistoryBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwHistoryBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwHistoryBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwHistoryBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwHistoryBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwHistoryBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwHistoryBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwHistoryBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwHistoryBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwHistoryBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwHistoryBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwHistoryBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinCvp.setDescription('Number of path code violations.')
cienaCesPmTdmPwHistoryBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinFcp.setDescription('Number of path fault events.')
cienaCesPmTdmPwHistoryBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwHistoryBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHistoryBinTtp.setDescription('Path total times seconds.')
cienaCesPmTdmPwCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2), )
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmPwCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmTdmPwCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwCurrBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmPwCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmTdmPwCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinState.setDescription('State of the bin.')
cienaCesPmTdmPwCurrBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwCurrBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwCurrBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwCurrBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwCurrBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwCurrBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwCurrBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwCurrBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwCurrBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwCurrBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwCurrBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwCurrBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwCurrBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwCurrBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwCurrBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwCurrBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwCurrBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwCurrBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwCurrBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinCvp.setDescription('Number of path code violations.')
cienaCesPmTdmPwCurrBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinFcp.setDescription('Number of path fault events.')
cienaCesPmTdmPwCurrBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwCurrBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurrBinTtp.setDescription('Path total time seconds.')
cienaCesPmTdmPwCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3), )
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmPwCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmTdmPwCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwCurr24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmPwCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmPwCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinState.setDescription('State of the bin.')
cienaCesPmTdmPwCurr24HBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwCurr24HBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwCurr24HBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwCurr24HBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwCurr24HBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwCurr24HBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwCurr24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwCurr24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwCurr24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwCurr24HBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwCurr24HBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwCurr24HBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwCurr24HBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwCurr24HBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwCurr24HBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwCurr24HBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwCurr24HBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwCurr24HBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwCurr24HBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinCvp.setDescription('Number of path code violations.')
cienaCesPmTdmPwCurr24HBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinFcp.setDescription('Number of path fault events.')
cienaCesPmTdmPwCurr24HBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwCurr24HBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwCurr24HBinTtp.setDescription('Path total time seconds.')
cienaCesPmTdmPwHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4), )
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics.')
cienaCesPmTdmPwHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmTdmPwHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmTdmPwHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmPwHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmPwHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinState.setDescription('State of the bin.')
cienaCesPmTdmPwHist24HBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwHist24HBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwHist24HBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwHist24HBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwHist24HBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwHist24HBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwHist24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwHist24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwHist24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwHist24HBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwHist24HBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwHist24HBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwHist24HBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwHist24HBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwHist24HBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwHist24HBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwHist24HBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwHist24HBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwHist24HBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinCvp.setDescription('Number of path code violations.')
cienaCesPmTdmPwHist24HBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinFcp.setDescription('Number of path fault events.')
cienaCesPmTdmPwHist24HBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwHist24HBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwHist24HBinTtp.setDescription('Path total time seconds.')
cienaCesPmTdmPwStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5), )
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmPwStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmTdmPwStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwStatisticsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmPwStatisticsBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwStatisticsBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwStatisticsBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwStatisticsBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwStatisticsBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwStatisticsBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwStatisticsBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwStatisticsBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwStatisticsBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwStatisticsBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwStatisticsBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwStatisticsBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwStatisticsBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwStatisticsBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwStatisticsBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwStatisticsBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinCvp.setDescription('Number of path code violation events.')
cienaCesPmTdmPwStatisticsBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinFcp.setDescription('Number of path fault counts.')
cienaCesPmTdmPwStatisticsBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwStatisticsBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwStatisticsBinTtp.setDescription('Path total time seconds.')
cienaCesPmTdmPwTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6), )
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmPwTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmPwTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmTdmPwTotalStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmPwTotalStatisticsBinMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMiss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMiss.setDescription('Number of missing PWE packets.')
cienaCesPmTdmPwTotalStatisticsBinReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinReorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinReorder.setDescription('Number of successfully reordered packets.')
cienaCesPmTdmPwTotalStatisticsBinMissorder = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMissorder.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMissorder.setDescription('Number of packets that cannot be reordered or dropped.')
cienaCesPmTdmPwTotalStatisticsBinMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMalformed.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMalformed.setDescription('Number of packets with invalid payload size of header.')
cienaCesPmTdmPwTotalStatisticsBinUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUnderrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUnderrun.setDescription('Number of PDV buffer empty events.')
cienaCesPmTdmPwTotalStatisticsBinOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinOverrun.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinOverrun.setDescription('Number of PDV buffer full events.')
cienaCesPmTdmPwTotalStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmPwTotalStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinSes.setDescription('Severely errored seconds.')
cienaCesPmTdmPwTotalStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmPwTotalStatisticsBinLops = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinLops.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinLops.setDescription('Number of LOPS events.')
cienaCesPmTdmPwTotalStatisticsBinLbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinLbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinLbit.setDescription('Number of L-bit set events.')
cienaCesPmTdmPwTotalStatisticsBinRbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinRbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinRbit.setDescription('Number of R-bit set events.')
cienaCesPmTdmPwTotalStatisticsBinMbit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMbit.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinMbit.setDescription('Number of M-bit set events (CESoP specific counter).')
cienaCesPmTdmPwTotalStatisticsBinRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinRxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinRxPkt.setDescription('Number of valid received packet over a service instance (i.e. PW).')
cienaCesPmTdmPwTotalStatisticsBinTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTxPkt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTxPkt.setDescription('Number of valid transmit packet over a service instance (i.e. PW).')
cienaCesPmTdmPwTotalStatisticsBinEsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinEsp.setDescription('Path errored seconds.')
cienaCesPmTdmPwTotalStatisticsBinSesp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinSesp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinSesp.setDescription('Path severely errored seconds.')
cienaCesPmTdmPwTotalStatisticsBinUasp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUasp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinUasp.setDescription('Path unavailable seconds.')
cienaCesPmTdmPwTotalStatisticsBinCvp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinCvp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinCvp.setDescription('Number of path code violation events.')
cienaCesPmTdmPwTotalStatisticsBinFcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinFcp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinFcp.setDescription('Number of path fault events.')
cienaCesPmTdmPwTotalStatisticsBinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinAsp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinAsp.setDescription('Path available seconds.')
cienaCesPmTdmPwTotalStatisticsBinTtp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 11, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTtp.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmPwTotalStatisticsBinTtp.setDescription('Path total time seconds.')
cienaCesPmBasicTxRxBiDirHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicTxRxBiDirHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinIndex.setDescription('Bin number associated with the PmBasicTxRxBiDirHistoryBin entry.')
cienaCesPmBasicTxRxBiDirHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxRxBiDirHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicTxRxBiDirHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxRxBiDirHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHistoryBinRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHistoryBinRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxRxBiDirCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxRxBiDirCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurrBinRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurrBinRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicTxRxBiDirCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxRxBiDirCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxRxBiDirCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirCurr24HBinRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirCurr24HBinRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicTxRxBiDirHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxRxBiDirHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxRxBiDirHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxRxBiDirHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirStatsBinRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 5, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirStatsBinRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxRxBiDirTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedBytes.setDescription('The number of forward tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedFrames.setDescription('The number of forward tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowBytes.setDescription('The number of forward tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowFrames.setDescription('The number of forward tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedBytes.setDescription('The number of forward tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedFrames.setDescription('The number of forward tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedBytes.setDescription('The number of forward tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedFrames.setDescription('The number of forward tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxBytesPerSec.setDescription('The number of forward tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxFramesPerSec.setDescription('The number of forward tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxBytesPerSec.setDescription('The number of forward tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxFramesPerSec.setDescription('The number of forward tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedBytes.setDescription('The number of reverse tunnel accepted bytes on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedFrames.setDescription('The number of reverse tunnel accepted frames on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowBytes.setDescription('The number of reverse tunnel remarked bytes received on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowFrames.setDescription('The number of reverse tunnel remarked frames received on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedBytes.setDescription('The number of reverse tunnel received bytes dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedFrames.setDescription('The number of reverse tunnel received frames dropped on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedBytes.setDescription('The number of reverse tunnel bytes forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedFrames.setDescription('The number of reverse tunnel frames forwarded on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxBytesPerSec.setDescription('The number of reverse tunnel bytes received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxFramesPerSec.setDescription('The number of reverse tunnel frames received per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxBytesPerSec.setDescription('The number of reverse tunnel bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 12, 6, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxFramesPerSec.setDescription('The number of reverse tunnel frames transmitted per second on this PM instance.')
cienaCesPmBasicPtpHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicPtpHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicPtpHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinIndex.setDescription('Bin number associated with the PmBasicPtpHistoryBin entry.')
cienaCesPmBasicPtpHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicPtpHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicPtpHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicPtpHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicPtpHistoryBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 7), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicPtpHistoryBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 8), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicPtpHistoryBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 9), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHistoryBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHistoryBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpHistoryBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpHistoryBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpHistoryBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 17), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpHistoryBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHistoryBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHistoryBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 21), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 22), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpHistoryBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpHistoryBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHistoryBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicPtpCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicPtpCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicPtpCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicPtpCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicPtpCurrBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 5), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicPtpCurrBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 6), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicPtpCurrBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 7), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurrBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurrBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 9), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 10), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpCurrBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurrBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurrBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurrBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurrBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurrBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpCurrBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpCurrBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurrBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicPtpCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicPtpCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicPtpCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicPtpCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicPtpCurr24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 5), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicPtpCurr24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 6), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicPtpCurr24HBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 7), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurr24HBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurr24HBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 9), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 10), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpCurr24HBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurr24HBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurr24HBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpCurr24HBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurr24HBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpCurr24HBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpCurr24HBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpCurr24HBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpCurr24HBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicPtpHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicPtpHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicPtpHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicPtpHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicPtpHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicPtpHist24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 6), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicPtpHist24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 7), PmProfileFieldMapBasicPtp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicPtpHist24HBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 8), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHist24HBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHist24HBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 10), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpHist24HBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpHist24HBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpHist24HBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpHist24HBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 17), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHist24HBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpHist24HBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 21), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpHist24HBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpHist24HBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpHist24HBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicPtpStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicPtpStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicPtpStatsBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 3), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpStatsBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpStatsBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 5), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 6), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 7), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 8), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpStatsBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 9), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpStatsBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 10), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpStatsBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpStatsBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpStatsBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpStatsBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpStatsBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpStatsBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpStatsBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicPtpTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicPtpTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicPtpTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicPtpTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicPtpTotalStatsBinOprOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 2), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprOch.setDescription('Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinOprnOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprnOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprnOch.setDescription('Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinOprMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 4), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMinOch.setDescription('Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinOprMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 5), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMaxOch.setDescription('Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinOprAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 6), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprAvgOch.setDescription('Average Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinOptOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 7), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptOch.setDescription('Optical Power Transmit, Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinOptMinOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 8), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptMinOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptMinOch.setDescription('Minimum Optical Channel Power Transmit.')
cienaCesPmBasicPtpTotalStatsBinOptMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 9), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptMaxOch.setDescription('Maximum Optical Channel Power Transmit.')
cienaCesPmBasicPtpTotalStatsBinOptAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 10), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOptAvgOch.setDescription('Average Optical Channel Power Transmit.')
cienaCesPmBasicPtpTotalStatsBinOprOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprOts.setDescription('Total Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinOprnOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprnOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprnOts.setDescription('Total Normalized Optical Power Receive, Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinOprMinOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMinOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMinOts.setDescription('Total Minimum Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinOprMaxOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMaxOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprMaxOts.setDescription('Total Maximum Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinOprAvgOts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprAvgOts.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinOprAvgOts.setDescription('Total Average Optical Channel Power Receive.')
cienaCesPmBasicPtpTotalStatsBinDgdAvgOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinDgdAvgOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinDgdAvgOch.setDescription('Differential Group Delay (Average), Optical Channel.')
cienaCesPmBasicPtpTotalStatsBinDgdMaxOch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 13, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinDgdMaxOch.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicPtpTotalStatsBinDgdMaxOch.setDescription('Differential Group Delay (Max), Optical Channel.')
cienaCesPmBasicOtuHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicOtuHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicOtuHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinIndex.setDescription('Bin number associated with the PmBasicOtuHistoryBin entry.')
cienaCesPmBasicOtuHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicOtuHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicOtuHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicOtuHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicOtuHistoryBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 7), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOtuHistoryBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 8), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOtuHistoryBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 15), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 16), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 17), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 21), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuHistoryBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHistoryBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicOtuCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicOtuCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicOtuCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicOtuCurrBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 5), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOtuCurrBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 6), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOtuCurrBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 13), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 14), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 15), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 17), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuCurrBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurrBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicOtuCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicOtuCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicOtuCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicOtuCurr24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 5), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOtuCurr24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 6), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOtuCurr24HBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 13), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 14), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 15), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 16), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 17), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuCurr24HBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuCurr24HBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicOtuHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicOtuHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicOtuHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicOtuHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicOtuHist24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 6), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOtuHist24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 7), PmProfileFieldMapBasicOtu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOtuHist24HBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 14), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 15), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 16), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 17), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 18), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 19), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 20), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuHist24HBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuHist24HBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOtuStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicOtuStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicOtuStatsBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 9), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 10), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 11), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 15), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuStatsBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuStatsBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOtuTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOtuTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicOtuTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOtuTotalStatsBinCvOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinCvOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinCvOtu.setDescription('Coding Violation, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinEsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinEsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinEsOtu.setDescription('Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinSesOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinSesOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinSesOtu.setDescription('Severely Errored Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinSefsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinSefsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinSefsOtu.setDescription('Severely Errored Framed Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinFecOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinFecOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinFecOtu.setDescription('Forward Error Correction, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinHccsOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinHccsOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinHccsOtu.setDescription('High Correction Count Seconds, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinPrfBerOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 8), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPrfBerOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPrfBerOtu.setDescription('Pre-FEC Bit Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinPrfBerMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 9), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPrfBerMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPrfBerMaxOtu.setDescription('Pre-FEC Bit Max Error Rate, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinPfBerEOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 10), PmCounter64Atto()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPfBerEOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinPfBerEOtu.setDescription('Post-FEC Bit Error Rate Estimate, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinQMinOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 11), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQMinOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQMinOtu.setDescription('Quality Factor Minimum, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinQMaxOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 12), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQMaxOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQMaxOtu.setDescription('Quality Factor Maximum, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinQAvgOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 13), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQAvgOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQAvgOtu.setDescription('Quality Factor Average, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinQStdevOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 14), PmInteger32Milli()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQStdevOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinQStdevOtu.setDescription('Quality Factor Standard Deviation, Optical Transport Unit.')
cienaCesPmBasicOtuTotalStatsBinUncFecBlkOtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 14, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinUncFecBlkOtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOtuTotalStatsBinUncFecBlkOtu.setDescription('Uncorrected FEC blocks, Optical Transport Unit.')
cienaCesPmBasicOduHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicOduHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicOduHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinIndex.setDescription('Bin number associated with the PmBasicOduHistoryBin entry.')
cienaCesPmBasicOduHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicOduHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicOduHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicOduHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicOduHistoryBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 7), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOduHistoryBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 8), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOduHistoryBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduHistoryBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduHistoryBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduHistoryBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduHistoryBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHistoryBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmBasicOduCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicOduCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicOduCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicOduCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicOduCurrBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 5), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOduCurrBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 6), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOduCurrBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduCurrBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurrBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurrBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurrBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurrBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmBasicOduCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicOduCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicOduCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicOduCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicOduCurr24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 5), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOduCurr24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 6), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOduCurr24HBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduCurr24HBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurr24HBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurr24HBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduCurr24HBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduCurr24HBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmBasicOduHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicOduHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicOduHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicOduHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicOduHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicOduHist24HBinFieldsUnsupported = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 6), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFieldsUnsupported.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFieldsUnsupported.setDescription('Mapping of the fields within this profile which have been declared unsupported. The value of any fields indicated by this object within the same table row should be disregarded.')
cienaCesPmBasicOduHist24HBinFieldsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 7), PmProfileFieldMapBasicOdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFieldsInvalid.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFieldsInvalid.setDescription('Mapping of the fields within this profile which have been declared invalid. The value of any fields indicated by this object within the same table row should be treated as untrustworthy.')
cienaCesPmBasicOduHist24HBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduHist24HBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduHist24HBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduHist24HBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduHist24HBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduHist24HBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmBasicOduStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicOduStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicOduStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicOduStatsBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduStatsBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduStatsBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduStatsBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduStatsBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduStatsBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmBasicOduTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicOduTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicOduTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicOduTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicOduTotalStatsBinCvOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinCvOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinCvOdu.setDescription('Coding Violation, Optical Data Unit.')
cienaCesPmBasicOduTotalStatsBinEsOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinEsOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinEsOdu.setDescription('Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduTotalStatsBinSesOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinSesOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinSesOdu.setDescription('Severely Errored Seconds, Optical Data Unit.')
cienaCesPmBasicOduTotalStatsBinUasOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinUasOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinUasOdu.setDescription('Unavailable Seconds, Optical Data Unit.')
cienaCesPmBasicOduTotalStatsBinFcOdu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 15, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinFcOdu.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicOduTotalStatsBinFcOdu.setDescription('Failure Count, Optical Data Unit.')
cienaCesPmTdmOCnPortHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmOCnPortHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmTdmOCnPortHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmTdmOCnPortHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinIndex.setDescription('Bin number associated with the PmTdmOCnPortHistoryBin entry.')
cienaCesPmTdmOCnPortHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmTdmOCnPortHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmTdmOCnPortHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmOCnPortHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinState.setDescription('State of the bin.')
cienaCesPmTdmOCnPortHistoryBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortHistoryBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortHistoryBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortHistoryBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortHistoryBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortHistoryBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortHistoryBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortHistoryBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinLoss.setDescription('Section, Unavailable seconds.')
cienaCesPmTdmOCnPortHistoryBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortHistoryBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortHistoryBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortHistoryBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortHistoryBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortHistoryBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortHistoryBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortHistoryBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortHistoryBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHistoryBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmOCnPortCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmOCnPortCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmTdmOCnPortCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortCurrBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmOCnPortCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmTdmOCnPortCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinState.setDescription('State of the bin.')
cienaCesPmTdmOCnPortCurrBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortCurrBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortCurrBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortCurrBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortCurrBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortCurrBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortCurrBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortCurrBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinLoss.setDescription('Section, Loss of signal seconds.')
cienaCesPmTdmOCnPortCurrBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortCurrBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortCurrBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortCurrBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortCurrBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortCurrBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortCurrBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortCurrBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortCurrBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurrBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmOCnPortCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmOCnPortCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmTdmOCnPortCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortCurr24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmOCnPortCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmOCnPortCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinState.setDescription('State of the bin.')
cienaCesPmTdmOCnPortCurr24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortCurr24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortCurr24HBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortCurr24HBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinLoss.setDescription('Section, Loss of signal seconds.')
cienaCesPmTdmOCnPortCurr24HBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortCurr24HBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortCurr24HBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortCurr24HBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortCurr24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortCurr24HBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortCurr24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortCurr24HBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortCurr24HBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmOCnPortHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics.')
cienaCesPmTdmOCnPortHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmTdmOCnPortHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmTdmOCnPortHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmOCnPortHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmOCnPortHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinState.setDescription('State of the bin.')
cienaCesPmTdmOCnPortHist24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortHist24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortHist24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortHist24HBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortHist24HBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortHist24HBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortHist24HBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortHist24HBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinLoss.setDescription('Section, Loss of signal seconds.')
cienaCesPmTdmOCnPortHist24HBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortHist24HBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortHist24HBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortHist24HBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortHist24HBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortHist24HBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortHist24HBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortHist24HBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortHist24HBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortHist24HBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmOCnPortStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmOCnPortStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmTdmOCnPortStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortStatisticsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmOCnPortStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortStatisticsBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortStatisticsBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinLoss.setDescription('Section, Loss of signal seconds.')
cienaCesPmTdmOCnPortStatisticsBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortStatisticsBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortStatisticsBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortStatisticsBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortStatisticsBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortStatisticsBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortStatisticsBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6), )
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmOCnPortTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmOCnPortTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmTdmOCnPortTotalStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmOCnPortTotalStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmOCnPortTotalStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinAisl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinAisl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinAisl.setDescription('Line, Alarm indication signal seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinUasl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinUasl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinUasl.setDescription('Line, Unavailable seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinEss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEss.setDescription('Section, Errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSess.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSess.setDescription('Section, Severely errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinLoss.setDescription('Section, Loss of signal seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinCvs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinCvs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinCvs.setDescription('Section, Code violation count.')
cienaCesPmTdmOCnPortTotalStatisticsBinSefss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSefss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSefss.setDescription('Section, Severely errored frame seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinEb = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEb.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEb.setDescription('Errored Blocks.')
cienaCesPmTdmOCnPortTotalStatisticsBinBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinBbe.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinBbe.setDescription('Backgroup Block Errors.')
cienaCesPmTdmOCnPortTotalStatisticsBinEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinEs.setDescription('Errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinSes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinSes.setDescription('Severely Errored seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinAs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinAs.setDescription('Available seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinUas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinUas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinUas.setDescription('Unavailable seconds.')
cienaCesPmTdmOCnPortTotalStatisticsBinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 16, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinTt.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmOCnPortTotalStatisticsBinTt.setDescription('Total Time seconds.')
cienaCesPmTdmDS3PortHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmDS3PortHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmTdmDS3PortHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmTdmDS3PortHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinIndex.setDescription('Bin number associated with the PmTdmDS3PortHistoryBin entry.')
cienaCesPmTdmDS3PortHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmTdmDS3PortHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmTdmDS3PortHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmDS3PortHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinState.setDescription('State of the bin.')
cienaCesPmTdmDS3PortHistoryBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortHistoryBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortHistoryBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmDS3PortHistoryBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortHistoryBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPcv.setDescription('Number of p-bit code violations.')
cienaCesPmTdmDS3PortHistoryBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortHistoryBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPses.setDescription('P-bit severely errored seconds.')
cienaCesPmTdmDS3PortHistoryBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinPuas.setDescription('P-bit unavilable seconds.')
cienaCesPmTdmDS3PortHistoryBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHistoryBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmTdmDS3PortCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmDS3PortCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmTdmDS3PortCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortCurrBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmDS3PortCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinDuration.setDescription('Interval of the bin.')
cienaCesPmTdmDS3PortCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinState.setDescription('State of the bin.')
cienaCesPmTdmDS3PortCurrBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortCurrBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortCurrBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmDS3PortCurrBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortCurrBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPcv.setDescription('Number of p-bit code violations.')
cienaCesPmTdmDS3PortCurrBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortCurrBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPses.setDescription('P-bit severely errored seconds.')
cienaCesPmTdmDS3PortCurrBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinPuas.setDescription('P-bit unavailable seconds.')
cienaCesPmTdmDS3PortCurrBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurrBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmTdmDS3PortCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmDS3PortCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortCurr24HBinTable. This table lists the statistics for the current 24 hours bin.')
cienaCesPmTdmDS3PortCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortCurr24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmDS3PortCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmDS3PortCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinState.setDescription('State of the bin.')
cienaCesPmTdmDS3PortCurr24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortCurr24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortCurr24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmDS3PortCurr24HBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortCurr24HBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPcv.setDescription('Number of p-bit code violations.')
cienaCesPmTdmDS3PortCurr24HBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortCurr24HBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPses.setDescription('P-bit severely errored seconds.')
cienaCesPmTdmDS3PortCurr24HBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinPuas.setDescription('P-bit unavailable seconds.')
cienaCesPmTdmDS3PortCurr24HBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortCurr24HBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmTdmDS3PortHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinTable.setDescription('The (conceptual) read-only Table listing the Bin Statistics.')
cienaCesPmTdmDS3PortHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmTdmDS3PortHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEndTime.setDescription('Collection end time for the bin.')
cienaCesPmTdmDS3PortHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmDS3PortHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinDuration.setDescription('Duration of the bin.')
cienaCesPmTdmDS3PortHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinState.setDescription('State of the bin.')
cienaCesPmTdmDS3PortHist24HBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortHist24HBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortHist24HBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinSesl.setDescription('Line, Severely Errored seconds.')
cienaCesPmTdmDS3PortHist24HBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortHist24HBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPcv.setDescription('Number of p-bit code violations.')
cienaCesPmTdmDS3PortHist24HBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortHist24HBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPses.setDescription('P-bit severely errored seconds.')
cienaCesPmTdmDS3PortHist24HBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinPuas.setDescription('P-bit unavailable seconds.')
cienaCesPmTdmDS3PortHist24HBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortHist24HBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmTdmDS3PortStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmDS3PortStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmTdmDS3PortStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortStatisticsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinClearTime.setDescription('Cleared time of the bin.')
cienaCesPmTdmDS3PortStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinSesl.setDescription('Line, Severely errored seconds.')
cienaCesPmTdmDS3PortStatisticsBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortStatisticsBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPcv.setDescription('Number of p-bit code violation events.')
cienaCesPmTdmDS3PortStatisticsBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortStatisticsBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPses.setDescription('C-bit severely errored seconds.')
cienaCesPmTdmDS3PortStatisticsBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinPuas.setDescription('P-bit unavailable seconds.')
cienaCesPmTdmDS3PortStatisticsBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortStatisticsBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6), )
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmTdmDS3PortTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaPortPmTdmDS3PortTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmTdmDS3PortTotalStatisticsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmTdmDS3PortTotalStatisticsBinCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinCvl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinCvl.setDescription('Line, Code violations.')
cienaCesPmTdmDS3PortTotalStatisticsBinEsl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinEsl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinEsl.setDescription('Line, Errored seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinSesl = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinSesl.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinSesl.setDescription('Line, Severely Errored seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinLoss.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinLoss.setDescription('Line, Loss of signal seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinPcv = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPcv.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPcv.setDescription('Number of p-bit code violation events.')
cienaCesPmTdmDS3PortTotalStatisticsBinPes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPes.setDescription('P-bit errored seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinPses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPses.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPses.setDescription('P-bit severely errored seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinPuas = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPuas.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinPuas.setDescription('P-bit unavailable seconds.')
cienaCesPmTdmDS3PortTotalStatisticsBinSefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 17, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinSefs.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmTdmDS3PortTotalStatisticsBinSefs.setDescription('Severely errored frame seconds.')
cienaCesPmBasicTxHistoryBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1), )
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTable.setDescription('The (conceptual) read-only table listing the basic Tx profile statistics.')
cienaCesPmBasicTxHistoryBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"), (0, "CIENA-CES-PM", "cienaCesPmBasicTxHistoryBinIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxHistoryBinTable. This table lists the statistics for all the history bins of the PM instance, as specified by the bin-count object of the PM instance. History bins are displayed in the order so that #1 bin always represents the most recently completed bin and #2 - the bin previous to that and so on. The statistics are displayed for only the instances with valid bins (with start time >0), as indicated by the operational state of the corresponding PM instance.')
cienaCesPmBasicTxHistoryBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinIndex.setDescription('Bin number associated with the PmBasicTxHistoryBin entry.')
cienaCesPmBasicTxHistoryBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxHistoryBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxHistoryBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinClearTime.setDescription('Clear time of the bin.')
cienaCesPmBasicTxHistoryBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxHistoryBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 6), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinState.setDescription('State of the bin.')
cienaCesPmBasicTxHistoryBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxHistoryBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxHistoryBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxHistoryBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHistoryBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxCurrBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2), )
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxCurrBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxCurrBinTable. This table lists the statistics for the current bin of the PM instance.')
cienaCesPmBasicTxCurrBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxCurrBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxCurrBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinDuration.setDescription('Duration of the bin.')
cienaCesPmBasicTxCurrBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinState.setDescription('State of the bin.')
cienaCesPmBasicTxCurrBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxCurrBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxCurrBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxCurrBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurrBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxCurr24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3), )
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTable.setDescription('The (conceptual) read-only Table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxCurr24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxCurr24HBinTable. This table lists the statistics for the current 24 Hours bin.')
cienaCesPmBasicTxCurr24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxCurr24HBinClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinClearedTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinClearedTime.setDescription('Cleared time of the bin.')
cienaCesPmBasicTxCurr24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxCurr24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 4), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxCurr24HBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxCurr24HBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxCurr24HBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxCurr24HBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxCurr24HBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxHist24HBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4), )
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinTable.setDescription('The (conceptual) read-only table listing the basic TxRx profile statistics.')
cienaCesPmBasicTxHist24HBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxHist24HBinTable. This table lists the statistics for the history 24 hours bin.')
cienaCesPmBasicTxHist24HBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxHist24HBinEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinEndTime.setDescription('Collection end time of the bin.')
cienaCesPmBasicTxHist24HBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxHist24HBinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinDuration.setDescription('Interval of the bin.')
cienaCesPmBasicTxHist24HBinState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 5), PmBinState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinState.setDescription('State of the bin.')
cienaCesPmBasicTxHist24HBinBasicTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxHist24HBinBasicTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxHist24HBinBasicTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxHist24HBinBasicTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxHist24HBinBasicTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5), )
if mibBuilder.loadTexts: cienaCesPmBasicTxStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxStatisticsBinTable. This table lists the statistics for the statistics bin of the PM instance.')
cienaCesPmBasicTxStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxStatsBinClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinClearTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinClearTime.setDescription('Collection clear time of the bin.')
cienaCesPmBasicTxStatsBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxStatsBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmBasicTxTotalStatisticsBinTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6), )
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatisticsBinTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatisticsBinTable.setDescription('The (conceptual) read-only table listing the bin statistics.')
cienaCesPmBasicTxTotalStatisticsBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatisticsBinEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatisticsBinEntry.setDescription('An entry (conceptual row) in the cienaCesPmBasicTxTotalStatisticsBinTable. This table lists the statistics for the total statistics bin of the PM instance.')
cienaCesPmBasicTxTotalStatsBinStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinStartTime.setDescription('Collection start time of the bin.')
cienaCesPmBasicTxTotalStatsBinTxForwardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxForwardedBytes.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxForwardedBytes.setDescription('The number of bytes forwarded on this PM instance.')
cienaCesPmBasicTxTotalStatsBinTxForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxForwardedFrames.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxForwardedFrames.setDescription('The number of frames forwarded on this PM instance.')
cienaCesPmBasicTxTotalStatsBinTxBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxBytesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxBytesPerSec.setDescription('The number of bytes transmitted per second on this PM instance.')
cienaCesPmBasicTxTotalStatsBinTxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 3, 18, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxFramesPerSec.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmBasicTxTotalStatsBinTxFramesPerSec.setDescription('The number of frames transmitted per second on this PM instance.')
cienaCesPmInstanceIndexXrefAutoTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 4, 1, 1), )
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoTable.setDescription('The (conceptual) table listing the cienaCesPmInstanceIndex values for each row as identified by its unique combination of indexes, as specified by: cienaCesPmInstanceInterfaceType, cienaCesPmInstanceInterfaceId, cienaCesPmInstanceInterfaceId2, and cienaCesPmInstanceProfileType. This table allows for direct lookup of a cienaCesPmInstanceIndex by for each PM Instance that has been created automatically by the system. This table provides lookup for PM Instances which are defined in the cienaCesPmInstanceTable with a cienaCesPmInstanceConfigurationMode value of auto. By providing this direct method of determining a PM Instance index for a given interface and profile type, an agent can more rapidly perform a subsequent query of the applicable table underneath the cienaCesPmStatistics branch to directly query statistics for the given interface and profile type.')
cienaCesPmInstanceIndexXrefAutoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 4, 1, 1, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmInstanceInterfaceType"), (0, "CIENA-CES-PM", "cienaCesPmInstanceInterfaceId"), (0, "CIENA-CES-PM", "cienaCesPmInstanceInterfaceId2"), (0, "CIENA-CES-PM", "cienaCesPmInstanceProfileType"))
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoEntry.setDescription('An entry (conceptual row) in the cienaCesPmInstanceIndexXrefAutoTable.')
cienaCesPmInstanceIndexXrefAutoValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 2, 4, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceIndexXrefAutoValue.setDescription('The value returned by this object represents the cienaCesPmInstanceIndex for the single auto-created PM Instance associated with the given indexes. The value may be used as a subsequent index into any tables which are indexed by the cienaCesPmInstanceIndex object, in order to obtain further information about the PM Interface.')
cienaCesPmIntervalProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileNextIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileNextIndex.setDescription('This object contains an unused value for cienaCesPmIntervalProfileIndex, or zero to indicate that no index is available (table full). When creating an interval profile in the cienaCesPmIntervalProfileTable, this object may be used to determine an appropriate value for the cienaCesPmIntervalProfileIndex object.')
cienaCesPmIntervalProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2), )
if mibBuilder.loadTexts: cienaCesPmIntervalProfileTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileTable.setDescription('The (conceptual) table listing the configuration parameters for the PM interval profile table. To create an entry in this table, values are required for cienaCesPmIntervalProfileName, cienaCesPmIntervalProfileSampleInterval, and cienaCesPmIntervalProfileRowStatus must be set to createAndGo.')
cienaCesPmIntervalProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmIntervalProfileIndex"))
if mibBuilder.loadTexts: cienaCesPmIntervalProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileEntry.setDescription('An entry (conceptual row) in the cienaCesPmIntervalProfileTable.')
cienaCesPmIntervalProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cienaCesPmIntervalProfileIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileIndex.setDescription('A unique identifier for the PM interval profile entry.')
cienaCesPmIntervalProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileName.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileName.setDescription('Name for the PM interval profile.')
cienaCesPmIntervalProfileSampleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("minutes1", 2), ("minutes5", 3), ("minutes10", 4), ("minutes15", 5), ("minutes30", 6), ("minutes60", 7), ("hours24", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileSampleInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileSampleInterval.setDescription('The period of time for each sample interval. Value returned should by one of the time periods supported by the system.')
cienaCesPmIntervalProfileCfgAttrsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 4), PmTcaIntProfCfgAttrs()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileCfgAttrsInUse.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileCfgAttrsInUse.setDescription('This object indicates the row entries with active configuration. Corresponding rows with a set bit indicated by this object will be used by the PM instances which are associated with this profile. This object is automatically populated based on the row objects which are successfully included during a row creation or are successfully set or unset after a row has been created. Each named bit in this object corresponds to the row object in this table representing the same configuration attribute.')
cienaCesPmIntervalProfileCfgAttrsUnset = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 5), PmTcaIntProfCfgAttrs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileCfgAttrsUnset.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileCfgAttrsUnset.setDescription('This object may be used to unset attributes, effectively disabling the feature for which the attribute is used. When this object is set, the indiciated configuration items will be unset which may disable the feature which uses the specified configuration attribute. Such changes will automatically apply to all PM instances associated with the specified interval profile. This object may only be set on an existing row. Attempts to include this object during a row creation will be rejected. This object will always return all bits zero. Each named bit in this object corresponds to the row object in this table representing the same configuration attribute.')
cienaCesPmIntervalProfileAdjustmentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2592000))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentInterval.setDescription('The adjustment interval used by the Adjustment TCA feature. The specified value must conform to the following criteria: -Evenly divisible by the specified sample interval. -Equal or greater than the sample interval. -No more than a 1 month period (30 days). Value 0 is used when the attribute is not in use, after having been unset. Value 0 may not be set directly. The set request will be rejected if the specified value does not conform to the critera established for this attribute.')
cienaCesPmIntervalProfileAdjustmentThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentThreshold.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentThreshold.setDescription('The threshold value which is applied against the adjustment basis value maintained by the PM instance associated with this interval profile. Sample values that are within this threshold value (above and below) the basis value are considered normal and not subject to causing an Adjustment TCA event.')
cienaCesPmIntervalProfileAdjustmentThresholdPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentThresholdPercentage.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAdjustmentThresholdPercentage.setDescription('The percentage amount of the adjustment basis which defines the range of normal values (above and below) the basis. Sample values which are outside this range are subject to causing an Adjustment TCA event.')
cienaCesPmIntervalProfileOverflowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowThreshold.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowThreshold.setDescription('The threshold value which is applied against the adjustment basis value maintained by the PM instance associated with this interval profile. Sample values that are within this threshold value (above) the basis value are considered normal and not subject to causing an Overflow condition. Values that exceed this range will cause an overflow condition to occur at the end of the sample interval, which may cause an Adjustment TCA if the overflow count has been reached.')
cienaCesPmIntervalProfileOverflowThresholdPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowThresholdPercentage.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowThresholdPercentage.setDescription('The percentage amount of the adjustment basis which defines the range of normal values (above) the basis. Sample values that are within this threshold (above) the basis value are considered normal and not subject to causing an Overflow condition.')
cienaCesPmIntervalProfileOverflowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileOverflowCount.setDescription('The number of consecutive sample intervals, all of which are in overflow condition, before an Adjustment TCA occurs due to overflow. Value 0 is used when the attribute is not in use, after having been unset. Value 0 may not be set directly.')
cienaCesPmIntervalProfileUnderflowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowThreshold.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowThreshold.setDescription('The threshold value which is applied against the adjustment basis value maintained by the PM instance associated with this interval profile. Sample values that are within this threshold value (below) the basis value are considered normal and not subject to causing an underflow condition. Values that precede this range will cause an underflow condition to occur at the end of the sample interval, which may cause an Adjustment TCA if the underflow count has been reached.')
cienaCesPmIntervalProfileUnderflowThresholdPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowThresholdPercentage.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowThresholdPercentage.setDescription('The percentage amount of the adjustment basis which defines the range of normal values (below) the basis. Sample values that are within this threshold (below) the basis value are considered normal and not subject to causing an underflow condition.')
cienaCesPmIntervalProfileUnderflowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUnderflowCount.setDescription('The number of consecutive sample intervals, all of which are in underflow condition, before an adjustment TCA occurs due to underflow. Value 0 may not be set directly. Value 0 may not be set directly.')
cienaCesPmIntervalProfileAlertInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2592000))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAlertInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAlertInterval.setDescription('The alert interval used by the Alert TCA feature. The specified value must conform to the following criteria: -Evenly divisible by the specified sample interval. -Equal or greater than the sample interval. -No more than a 1 month period (30 days). Value 0 is used when the attribute is not in use, after having been unset. Value 0 may not be set directly. The set request will be rejected if the specified value does not conform to the critera established for this attribute.')
cienaCesPmIntervalProfileAlertThresholdPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAlertThresholdPercentage.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileAlertThresholdPercentage.setDescription('The percentage amount of the alert basis which defines the level below the basis at which point a sample reading is subject to causing an Alert TCA at the end of the alert interval.')
cienaCesPmIntervalProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileRowStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. Row deletion will not be allowed if the interval profile is presently associated with one or more PM instances. To create a row in this table, set this object to 'createAndGo'. To delete a row in this table, set this object to 'destroy'.")
cienaCesPmIntervalProfileUsageTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 3), )
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUsageTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUsageTable.setDescription('The (conceptual) table providing a list of the PM instances which are configured to use each PM interval profile. This table utilizes a dual indexing scheme allowing rows to exist representing the present configuration of the interval profiles and pm instances. For each interval profile (primary index) there are zero or more PM instances which are configured (secondary index). If an interval profile has no PM Instances, there will be zero rows in this table with the interval profile primary index.')
cienaCesPmIntervalProfileUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 3, 1), ).setIndexNames((0, "CIENA-CES-PM", "cienaCesPmIntervalProfileIndex"), (0, "CIENA-CES-PM", "cienaCesPmInstanceIndex"))
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUsageEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileUsageEntry.setDescription('An entry (conceptual row) in the cienaCesPmIntervalProfileUsageTable.')
cienaCesPmIntervalProfileInstanceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 1, 3, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmIntervalProfileInstanceOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmIntervalProfileInstanceOperState.setDescription('Operational state for the PM instance identified by the second index of this table entry. This object provides a way to rapidly determine the operational state of the PM instance(s) associated with the interval profile, as identified by the primary index of this table entry, in lieu of directly accessing or walking the cienaCesPmInstanceOperState object.')
cienaCesPmInstanceThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2, 1), )
if mibBuilder.loadTexts: cienaCesPmInstanceThresholdTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceThresholdTable.setDescription('The (conceptual) table listing parameters for the PM instance table which are applicable to the PM Threshold feature.')
cienaCesPmInstanceThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2, 1, 1), )
cienaCesPmInstanceEntry.registerAugmentions(("CIENA-CES-PM", "cienaCesPmInstanceThresholdEntry"))
cienaCesPmInstanceThresholdEntry.setIndexNames(*cienaCesPmInstanceEntry.getIndexNames())
if mibBuilder.loadTexts: cienaCesPmInstanceThresholdEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceThresholdEntry.setDescription('An entry (conceptual row) in the cienaCesPmInstanceThresholdTable. This table serves as an extension of the cienaCesPmInstanceTable, representing configuration parameters for each PM instance, specific to the PM Threshold feature(s).')
cienaCesPmInstanceIntervalProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceIntervalProfileIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceIntervalProfileIndex.setDescription('This object indicates the interval profile associated with the PM instance which will be used by the PM Threshold features corresponding to a row in the cienaCesPmIntervalProfileTable with a cienaCesPmIntervalProfileIndex of matching value. When value is zero, the PM instance is not associated with any interval profile and will not participate in the PM Threshold features.')
cienaCesPmInstanceTcaStatisticsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2, 1, 1, 2), CienaStatsClear()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceTcaStatisticsClear.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceTcaStatisticsClear.setDescription('Setting this object to clear(1) will clear the statistics that track the operation of the PM TCA feature on the PM instance. This will clear the various counters associated with the Adjustment TCA and Alert TCA mechanism such as number of TCA events and samples collected on behalf of the PM instance.')
cienaCesPmInstanceTcaHistoryClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 2, 1, 1, 3), CienaStatsClear()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesPmInstanceTcaHistoryClear.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceTcaHistoryClear.setDescription('Setting this object to clear(1) will clear the history records related to the operation of the PM TCA feature on the PM instance. This will clear all records of the last Adjustment TCA events and the last Alert TCA event that have occurred on the PM instance.')
cienaCesPmInstanceAdjustmentTcaTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1), )
if mibBuilder.loadTexts: cienaCesPmInstanceAdjustmentTcaTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAdjustmentTcaTable.setDescription('The (conceptual) table listing data for the PM instance table which is applicable to the PM Threshold Adjustment TCA feature.')
cienaCesPmInstanceAdjustmentTcaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1), )
cienaCesPmInstanceEntry.registerAugmentions(("CIENA-CES-PM", "cienaCesPmInstanceAdjustmentTcaEntry"))
cienaCesPmInstanceAdjustmentTcaEntry.setIndexNames(*cienaCesPmInstanceEntry.getIndexNames())
if mibBuilder.loadTexts: cienaCesPmInstanceAdjustmentTcaEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAdjustmentTcaEntry.setDescription('An entry (conceptual row) in the cienaCesPmInstanceAdjustmentTcaTable. This table serves as an extension of the cienaCesPmInstanceTable, representing operational data for each PM instance, specific to the PM Threshold Adjustment TCA feature.')
cienaCesPmAdjustmentTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 1), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnits.setDescription('This object defines the way in which the data is used by the Adjustment TCA feature for the PM instance. This specifies the way in which the statistics samples are handled and the way in which the adjustment basis and threshold values are interpreted. When bitsPerSecond is specified, the data is intended to represent a throughput as a rate of data in bits per second. When analyzing samples for the Adjustment TCA feature, the statistic value is internally adjusted so that it represents a number of bits. For example a statistic that represents a number of bytes is multiplied by 8 to determine the bit count. The statistic value representing bits is then compared to the boundary value(s) derived from the adjustment basis and threshold value(s). The adjustment basis and threshold values are considered to be values representing data in bits-per-second and are not subjected to adjustment.')
cienaCesPmAdjustmentTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 2), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaScheme.setDescription('This object specifies the way in which the statistics, as identified by cienaCesPmAdjustmentTcaStatistics object, are used by the Adjustment TCA feature for the PM instance.')
cienaCesPmAdjustmentTcaStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 3), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaStats.setDescription('The statistic(s) used by the PM instance, subject to the Adjustment TCA feature. The PM profile is identified by the cienaCesPmInstanceProfileType object in this same table row. The PM profile table underneath the cienaCesPmStatistics branch representing the Current Bin for the PM profile is used by the Adjustment TCA feature for the PM instance. The identified statistics are used by the Adjustment TCA feature to determine new watermark values and to determine if overflow or underflow conditions exist.')
cienaCesPmAdjustmentTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 4), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValue.setDescription('Base value against which the adjustment threshold is applied to determine the boundary value(s) that trigger an Adjustment TCA event. Value is provided to PM from the component which manages the entity being monitored by the PM instance.')
cienaCesPmAdjustmentTcaBasisValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 5), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValueMin.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValueMin.setDescription('Lowest value which the adjustment basis value will be allowed to reach. May be used by PM to inhibit Adjustment TCA events once the limit has been reached. Value is provided to PM from the component which manages the entity being monitored by the PM instance.')
cienaCesPmAdjustmentTcaBasisValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 6), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValueMax.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaBasisValueMax.setDescription('Highest value which the adjustment basis value will be allowed to reach. May be used by PM to inhibit Adjustment TCA events once the limit has been reached. Value is provided to PM from the component which manages the entity being monitored by the PM instance.')
cienaCesPmAdjustmentTcaConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 7), PmTcaConfigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaConfigStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaConfigStatus.setDescription('This object indicates whether the Adjustment TCA configuration attributes are configured in a way for periodic Adjustment TCA events to occur on behalf of the PM Instance. This status refers to the Adjustment TCA functionality comprising of the following necessary configuration attributes: 1. cienaCesPmIntervalProfileAdjustmentInterval 2. cienaCesPmIntervalProfileAdjustmentThreshold or cienaCesPmIntervalProfileAdjustmentThresholdPercentage noProfile indicates there is no interval profile configured for the PM Instance. notConfigured indicates the PM instance is configured with a particular interval profile, however none of the necessary configuration attributes for the Adjustment TCA feature are configured. partiallyConfigured indicates the PM instance is configured with a particular interval profile and that some, but not all, of the necessary configuration attributes for the Adjustment TCA feature are configured. configured indicates the PM instance is configured with a particular interval profile and that all of the necessary configuration attributes for the Adjustment TCA feature are configured.')
cienaCesPmAdjustmentTcaUpperBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 8), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUpperBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUpperBoundaryValue.setDescription('Upper boundary established by adding the value represented as the adjustment threshold to the adjustment basis. Statistic readings which are equal or greater than this boundary are subject to causing an Adjustment TCA event at the end of the adjustment interval.')
cienaCesPmAdjustmentTcaLowerBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 9), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLowerBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLowerBoundaryValue.setDescription('Lower boundary established by subtracting the value represented as the adjustment threshold from the adjustment basis. Statistic readings which are equal or less than this boundary are subject to causing an Adjustment TCA event at the end of the adjustment interval.')
cienaCesPmAdjustmentTcaIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 10), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaIntervalStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaIntervalStartTime.setDescription('The time and date representing when the current Adjustment Interval has started. This value will update whenever the operational state of the pm instance changes and whenever the adjustment interval period has elapsed.')
cienaCesPmAdjustmentTcaIntervalEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 11), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaIntervalEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaIntervalEndTime.setDescription('The time and date representing when the current Adjustment Interval will end. This value will update whenever the interval start time changes.')
cienaCesPmAdjustmentTcaSampleStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 12), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSampleStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSampleStartTime.setDescription('The time and date representing when the current sample interval has started.')
cienaCesPmAdjustmentTcaSampleEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 13), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSampleEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSampleEndTime.setDescription('The time and date representing when the current sample interval will end.')
cienaCesPmAdjustmentTcaHighWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 14), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkTime.setDescription('The time and date representing when the high watermark value was established. An empty string is returned if no high watermark has been determined.')
cienaCesPmAdjustmentTcaHighWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 15), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaHighWatermarkValue object. Depending on the value indicated by cienaCesPmAdjustmentTcaScheme, this may be the same or a subset of the statistics identified by the cienaCesPmAdjustmentTcaStats object.')
cienaCesPmAdjustmentTcaHighWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 16), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaHighWatermarkValue.setDescription('Highest sample interval reading during the current adjustment interval. This value resets to zero at the start of each adjustment interval.')
cienaCesPmAdjustmentTcaOverflowConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 17), PmTcaConfigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowConfigStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowConfigStatus.setDescription('This object indicates whether the Overflow component of the Adjustment TCA feature configuration attributes are configured in a way for preemptive Adjustment TCA events to occur on behalf of the PM Instance due to overflow condition. This status refers to the Adjustment TCA functionality comprising of the following necessary configuration attributes: 1. cienaCesPmIntervalProfileAdjustmentInterval, and 2. cienaCesPmIntervalProfileAdjustmentThreshold or cienaCesPmIntervalProfileAdjustmentThresholdPercentage 3. cienaCesPmIntervalProfileOverflowThreshold or cienaCesPmIntervalProfileOverflowThresholdPercentage 4. cienaCesPmIntervalProfileOverflowCount The Overflow component of the Adjustment TCA requires the regular periodic Adjustment TCA feature to be configured. For this reason, adjustment interval and threshold configuration attributes are necessary before the overflow component is deemed configured (attributes 1 and 2). noProfile indicates there is no interval profile configured for the PM Instance. notConfigured indicates the PM instance is configured with a particular interval profile, however none of the necessary configuration attributes for the Overflow component of the Adjustment TCA feature are configured. partiallyConfigured indicates the PM instance is configured with a particular interval profile and that some, but not all, of the necessary configuration attributes for the Overflow component of the Adjustment TCA feature are configured. configured indicates the PM instance is configured with a particular interval profile and that all of the necessary configuration attributes for the Overflow component of the Adjustment TCA feature are configured.')
cienaCesPmAdjustmentTcaOverflowBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 18), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowBoundaryValue.setDescription('Boundary established by adding the value represented as the overflow threshold to the adjustment basis. Statistic readings which are equal or greater than this boundary at the end of a sample interval represent an overflow condition and are subject to causing the overflow current count to increment which may lead to an Adjustment TCA when the configured overflow count is reached.')
cienaCesPmAdjustmentTcaOverflowCurrentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowCurrentCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowCurrentCount.setDescription("Current number of consecutive overflow conditions that have occurred. A non-zero value indicates the PM instance is presently in an overflow condition which may result in an Adjustment TCA event when the count reaches the overflow count configured in the PM instance's interval profile.")
cienaCesPmAdjustmentTcaOverflowHighWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 20), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkTime.setDescription('The time and date representing when the overflow high watermark value was established. An empty string is returned if no overflow high watermark has been determined.')
cienaCesPmAdjustmentTcaOverflowHighWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 21), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaOverflowHighWatermarkValue object. Depending on the value indicated by cienaCesPmAdjustmentTcaScheme, this may be the same or a subset of the statistics identified by the cienaCesPmAdjustmentTcaStats object.')
cienaCesPmAdjustmentTcaOverflowHighWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 22), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaOverflowHighWatermarkValue.setDescription('Highest sample interval reading during the current series of samples which qualify for declaring an overflow condition. This value resets to zero at the start of each adjustment interval.')
cienaCesPmAdjustmentTcaUnderflowConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 23), PmTcaConfigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowConfigStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowConfigStatus.setDescription('This object indicates whether the Underflow component of the Adjustment TCA feature configuration attributes are configured in a way for preemptive Adjustment TCA events to occur on behalf of the PM Instance due to underflow condition. This status refers to the Adjustment TCA functionality comprising of the following necessary configuration attributes: 1. cienaCesPmIntervalProfileAdjustmentInterval, and 2. cienaCesPmIntervalProfileAdjustmentThreshold or cienaCesPmIntervalProfileAdjustmentThresholdPercentage 3. cienaCesPmIntervalProfileUnderflowThreshold or cienaCesPmIntervalProfileUnderflowThresholdPercentage 4. cienaCesPmIntervalProfileUnderflowCount The Underflow component of the Adjustment TCA requires the regular periodic Adjustment TCA feature to be configured. For this reason, adjustment interval and threshold configuration attributes are necessary before the underflow component is deemed configured (attributes 1 and 2). noProfile indicates there is no interval profile configured for the PM Instance. notConfigured indicates the PM instance is configured with a particular interval profile, however none of the necessary configuration attributes for the Underflow component of the Adjustment TCA feature are configured. partiallyConfigured indicates the PM instance is configured with a particular interval profile and that some, but not all, of the necessary configuration attributes for the Underflow component of the Adjustment TCA feature are configured. configured indicates the PM instance is configured with a particular interval profile and that all of the necessary configuration attributes for the Underflow component of the Adjustment TCA feature are configured.')
cienaCesPmAdjustmentTcaUnderflowBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 24), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowBoundaryValue.setDescription('Boundary established by subtracting the value represented as the underflow threshold from the adjustment basis. Statistic readings which are equal or less than this boundary at the end of a sample interval represent an underflow condition and are subject to causing the underflow current count to increment which may lead to an Adjustment TCA when the configured underflow count is reached.')
cienaCesPmAdjustmentTcaUnderflowCurrentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowCurrentCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowCurrentCount.setDescription("Current number of consecutive underflow conditions that have occurred. A non-zero value indicates the PM instance is presently in an underflow condition which may result in an Adjustment TCA event when the count reaches the underflow count configured in the PM instance's interval profile.")
cienaCesPmAdjustmentTcaUnderflowHighWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 26), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkTime.setDescription('The time and date representing when the underflow high watermark value was established. An empty string is returned if no underflow high watermark has been determined.')
cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 27), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue object. Depending on the value indicated by cienaCesPmAdjustmentTcaScheme, this may be the same or a subset of the statistics identified by the cienaCesPmAdjustmentTcaStats object.')
cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 28), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue.setDescription('Highest sample interval reading during the current series of samples which qualify for declaring an underflow condition. This value resets to zero at the start of each adjustment interval.')
cienaCesPmAdjustmentTcaEventsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsTotal.setDescription('Total number of Adjustment TCA events that have occurred for the PM instance.')
cienaCesPmAdjustmentTcaEventsIntervalEndUpperBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsIntervalEndUpperBoundary.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsIntervalEndUpperBoundary.setDescription('Number of Adjustment TCA events that have occurred for the PM instance which occurred due to the end of Adjustment Interval having been reached and the high watermark for the interval is a value greater or equal to the upper boundary value.')
cienaCesPmAdjustmentTcaEventsIntervalEndLowerBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsIntervalEndLowerBoundary.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsIntervalEndLowerBoundary.setDescription('Number of Adjustment TCA events that have occurred for the PM instance which occurred due to the end of Adjustment Interval having been reached and the high watermark for the interval is a value less than or equal to the lower boundary value.')
cienaCesPmAdjustmentTcaEventsOverflowCountReached = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsOverflowCountReached.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsOverflowCountReached.setDescription('Number of Adjustment TCA events that have occurred for the PM instance which occurred due to a sample collection resulting in an increment of the overflow current count value and the overflow current count value reaching the configured overflow count value.')
cienaCesPmAdjustmentTcaEventsUnderflowCountReached = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsUnderflowCountReached.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaEventsUnderflowCountReached.setDescription('Number of Adjustment TCA events that have occurred for the PM instance which occurred due to a sample collection resulting in an increment of the underflow current count value and the underflow current count value reaching the configured underflow count value.')
cienaCesPmAdjustmentTcaSamplesProcessedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesProcessedTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesProcessedTotal.setDescription('Total Number of valid samples that have been collected used by the Adjustment TCA feature on the PM instance.')
cienaCesPmAdjustmentTcaSamplesDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesDiscardedTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesDiscardedTotal.setDescription('Total Number of samples that have been collected but not used by the Adjustment TCA feature on the PM instance.')
cienaCesPmAdjustmentTcaSamplesProcessedCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesProcessedCurrentInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesProcessedCurrentInterval.setDescription('Number of valid samples that have been collected during the current Adjustment Interval and used by the Adjustment TCA feature on the PM instance.')
cienaCesPmAdjustmentTcaSamplesDiscardedCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesDiscardedCurrentInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaSamplesDiscardedCurrentInterval.setDescription('Number of samples that have been collected during the current Adjustment Interval but not used by the Adjustment TCA feature on the PM instance.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 38), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaTime.setDescription('The time and date of the last (most recent) Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. An empty string is returned if no such Adjustment TCA has occurred.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 39), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaUnits.setDescription('The value of cienaCesPmAdjustmentTcaUnits that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 40), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaScheme.setDescription('The value of cienaCesPmAdjustmentTcaScheme that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 41), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValue.setDescription('The adjustment basis value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. This refers to the value of cienaCesPmAdjustmentTcaBasisValue when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 42), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMin.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMin.setDescription('The adjustment basis minimum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMin when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 43), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMax.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMax.setDescription('The adjustment basis maximum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMax when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 44), PmTcaThresholdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdType.setDescription('This object defines the way in which the value returned for cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue should be interpreted.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue.setDescription('The threshold value that was used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. For such Adjustment TCA, this refers to the value of the configured adjustment threshold as specified in the interval profile associated with the PM instance when the Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 46), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaBoundaryValue.setDescription('The threshold boundary value which was reached, exceeded, or preceeded, causing the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. For such Adjustment TCA, this can refer to the value of cienaCesPmAdjustmentTcaUpperBoundaryValue or cienaCesPmAdjustmentTcaLowerBoundaryValue at the time of the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 47), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkTime.setDescription('The time and date that the watermark value used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region was derived. An empty string is returned if no such Adjustment TCA has occurred for the PM instance.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 48), PmTcaWatermarkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkType.setDescription('The type of watermark that was used in the logic that caused the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. This refers to the watermark value reported by the cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue object.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 49), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue object. Since this object applies to the last Adjustment TCA which occurred on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region, this object represents the value of cienaCesPmAdjustmentTcaHighWatermarkStats at the time of such Adjustment TCA.')
cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 50), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue.setDescription('The watermark value that was used in the logic that caused the last Adjustment TCA to occur on behalf of the PM instance due to end of Adjustment Interval high watermark value being outside of the upper and lower boundary region. For such Adjustment TCA, this object represents the value of cienaCesPmAdjustmentTcaHighWatermarkValue at the time the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastOverflowTcaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 51), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaTime.setDescription('The time and date of the last (most recent) Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. An empty string is returned if no such Adjustment TCA has occurred.')
cienaCesPmAdjustmentTcaLastOverflowTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 52), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaUnits.setDescription('The value of cienaCesPmAdjustmentTcaUnits that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance.')
cienaCesPmAdjustmentTcaLastOverflowTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 53), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaScheme.setDescription('The value of cienaCesPmAdjustmentTcaScheme that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance.')
cienaCesPmAdjustmentTcaLastOverflowTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 54), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValue.setDescription('The adjustment basis value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValue when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 55), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMin.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMin.setDescription('The adjustment basis minimum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMin when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 56), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMax.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMax.setDescription('The adjustment basis maximum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMax when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastOverflowTcaThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 57), PmTcaThresholdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaThresholdType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaThresholdType.setDescription('This object defines the way in which the value returned for cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue should be interpreted.')
cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue.setDescription('The threshold value that was used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this refers to the value of the configured overflow threshold as specified in the interval profile associated with the PM instance when the Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastOverflowTcaBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 59), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaBoundaryValue.setDescription('The threshold boundary value which was reached or exceeded, causing the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this refers to the value of cienaCesPmAdjustmentTcaOverflowBoundaryValue at the time of the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 60), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkTime.setDescription('The time and date that the watermark value used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance was derived. An empty string is returned if no such Adjustment TCA has occurred for the PM instance.')
cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 61), PmTcaWatermarkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkType.setDescription('The type of watermark that was used in the logic that caused the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. This refers to the watermark value reported by the cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue object.')
cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 62), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue object. Since this object applies to the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance, this object represents the value of cienaCesPmAdjustmentTcaOverflowHighWatermarkStats at the time of such Adjustment TCA.')
cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 63), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue.setDescription('The watermark value that was used in the logic that caused the last Adjustment TCA to occur on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this object represents the value of cienaCesPmAdjustmentTcaOverflowHighWatermarkValue at the time of the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastOverflowTcaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastOverflowTcaCount.setDescription('The overflow count that was used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current overflow count to reach the configured overflow count associated with the interval profile associated with the PM instance. Since such Adjustment TCA happened when the current count reaches the configured overflow count, this object will effectively report the configured overflow count that was in use at the time the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastUnderflowTcaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 65), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaTime.setDescription('The time and date of the last (most recent) Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. An empty string is returned if no such Adjustment TCA has occurred.')
cienaCesPmAdjustmentTcaLastUnderflowTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 66), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaUnits.setDescription('The value of cienaCesPmAdjustmentTcaUnits that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance.')
cienaCesPmAdjustmentTcaLastUnderflowTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 67), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaScheme.setDescription('The value of cienaCesPmAdjustmentTcaScheme that was in use during the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance.')
cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 68), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValue.setDescription('The adjustment basis value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValue when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 69), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMin.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMin.setDescription('The adjustment basis minimum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMin when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 70), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMax.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMax.setDescription('The adjustment basis maximum value that was in place when the last Adjustment TCA occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. This refers to the value of cienaCesPmAdjustmentTcaBasisValueMax when such Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 71), PmTcaThresholdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdType.setDescription('This object defines the way in which the value returned for cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue should be interpreted.')
cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 72), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue.setDescription('The threshold value that was used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this refers to the value of the configured underflow threshold as specified in the interval profile associated with the PM instance when the Adjustment TCA occurred.')
cienaCesPmAdjustmentTcaLastUnderflowTcaBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 73), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaBoundaryValue.setDescription('The threshold boundary value which was reached or exceeded, causing the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this refers to the value of cienaCesPmAdjustmentTcaUnderflowBoundaryValue at the time of the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 74), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkTime.setDescription('The time and date that the watermark value used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance was derived. An empty string is returned if no such Adjustment TCA has occurred for the PM instance.')
cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 75), PmTcaWatermarkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkType.setDescription('The type of watermark that was used in the logic that caused the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. This refers to the watermark value reported by the cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue object.')
cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 76), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkStats.setDescription('The statistic(s) which were used by the Adjustment TCA feature to establish the watermark value identified by the cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue object. Since this object applies to the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance, this object represents the value of cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats at the time of such Adjustment TCA.')
cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 77), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue.setDescription('The watermark value that was used in the logic that caused the last Adjustment TCA to occur on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. For such Adjustment TCA, this object represents the value of cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue at the time of the Adjustment TCA.')
cienaCesPmAdjustmentTcaLastUnderflowTcaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 3, 1, 1, 78), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAdjustmentTcaLastUnderflowTcaCount.setDescription('The underflow count that was used in the last Adjustment TCA which occurred on behalf of the PM instance due to end of Sample Interval incrementing the current underflow count to reach the configured underflow count associated with the interval profile associated with the PM instance. Since such Adjustment TCA happened when the current count reaches the configured underflow count, this object will effectively report the configured underflow count that was in use at the time the Adjustment TCA.')
cienaCesPmInstanceAlertTcaTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1), )
if mibBuilder.loadTexts: cienaCesPmInstanceAlertTcaTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAlertTcaTable.setDescription('The (conceptual) table listing data for the PM instance table which is applicable to the PM Threshold Alert TCA feature.')
cienaCesPmInstanceAlertTcaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1), )
cienaCesPmInstanceEntry.registerAugmentions(("CIENA-CES-PM", "cienaCesPmInstanceAlertTcaEntry"))
cienaCesPmInstanceAlertTcaEntry.setIndexNames(*cienaCesPmInstanceEntry.getIndexNames())
if mibBuilder.loadTexts: cienaCesPmInstanceAlertTcaEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmInstanceAlertTcaEntry.setDescription('An entry (conceptual row) in the cienaCesPmInstanceAlertTcaTable. This table serves as an extension of the cienaCesPmInstanceTable, representing operational data for each PM instance, specific to the PM Threshold Alert TCA feature.')
cienaCesPmAlertTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 1), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaUnits.setDescription('This object defines the way in which the data is used by the Alert TCA feature for the PM instance. This specifies the way in which the statistics samples are handled and the way in which the alert basis and threshold values are interpreted. When bitsPerSecond is specified, the data is intended to represent a throughput as a rate of data in bits per second. When analyzing samples for the Alert TCA feature, the statistic value is internally adjusted so that it represents a number of bits. For example a statistic that represents a number of bytes is multiplied by 8 to determine the bit count. The statistic value representing bits is then compared to the boundary value derived from the alert basis and threshold values. The alert basis and threshold values are considered to be values representing data in bits-per-second and are not subjected to adjustment.')
cienaCesPmAlertTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 2), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaScheme.setDescription('This object specifies the way in which the statistics, as identified by cienaCesPmAlertTcaStatistics object, are used by the Alert TCA feature for the PM instance.')
cienaCesPmAlertTcaStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 3), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaStats.setDescription('The statistic(s) used by the PM instance, subject to the Alert TCA feature. The PM profile is identified by the cienaCesPmInstanceProfileType object in this same table row. The PM profile table underneath the cienaCesPmStatistics branch representing the Current Bin for the PM profile is used by the Alert TCA feature for the PM instance. The identified statistics are used by the Alert TCA feature to determine a new watermark value.')
cienaCesPmAlertTcaConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 4), PmTcaConfigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaConfigStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaConfigStatus.setDescription('This object indicates whether the Alert TCA configuration attributes are configured in a way for periodic Alert TCA state monitoring and reporting to occur on behalf of the PM Instance. This status refers to the Alert TCA functionality comprising of the following necessary configuration attributes: 1. cienaCesPmIntervalProfileAlertInterval 2. cienaCesPmIntervalProfileAlertThresholdPercentage noProfile indicates there is no interval profile configured for the PM Instance. notConfigured indicates the PM instance is configured with a particular interval profile, however none of the necessary configuration attributes for the Alert TCA feature are configured. partiallyConfigured indicates the PM instance is configured with a particular interval profile and that some, but not all, of the necessary configuration attributes for the Alert TCA feature are configured. configured indicates the PM instance is configured with a particular interval profile and that all of the necessary configuration attributes for the Alert TCA feature are configured.')
cienaCesPmAlertTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 5), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaBasisValue.setDescription('Base value against which the alert threshold is applied to determine the boundary value that triggers an Alert TCA event. Value is provided to PM from the component which manages the entity being monitored by the PM instance.')
cienaCesPmAlertTcaBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 6), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaBoundaryValue.setDescription('Boundary established by subtracting the value represented as the alert threshold from the alert basis. Statistic readings which are equal or greater than this boundary are subject to causing an Alert TCA event at the end of the alert interval.')
cienaCesPmAlertTcaIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 7), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaIntervalStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaIntervalStartTime.setDescription('The time and date representing when the current Alert Interval has started. This value will update whenever the operational state of the pm instance changes and whenever the alert interval period has elapsed.')
cienaCesPmAlertTcaIntervalEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 8), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaIntervalEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaIntervalEndTime.setDescription('The time and date representing when the current Alert Interval will end. This value will update whenever the interval start time changes.')
cienaCesPmAlertTcaSampleStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 9), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSampleStartTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSampleStartTime.setDescription('The time and date representing when the current sample interval has started.')
cienaCesPmAlertTcaSampleEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 10), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSampleEndTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSampleEndTime.setDescription('The time and date representing when the current sample interval will end.')
cienaCesPmAlertTcaHighWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 11), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkTime.setDescription('The time and date representing when the high watermark value was established. An empty string is returned if no high watermark has been determined.')
cienaCesPmAlertTcaHighWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 12), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkStats.setDescription('The statistic(s) which were used by the Alert TCA feature to establish the watermark value identified by the cienaCesPmAlertTcaHighWatermarkValue object. Depending on the value indicated by cienaCesPmAlertTcaScheme, this may be the same or a subset of the statistics identified by the cienaCesPmAlertTcaStats object.')
cienaCesPmAlertTcaHighWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 13), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaHighWatermarkValue.setDescription('Highest sample interval reading during the current alert interval. This value resets to zero at the start of each alert interval.')
cienaCesPmAlertTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 14), PmTcaAlertState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaState.setDescription('The current alert state of the PM instance. At the end of each alert interval, the alert high watermark is compared to the alert boundary value to determine if the current Alert TCA state is normal or alert. This object indicates the state that was determined at the end of the most recent alert interval. This object will indicate a value of unspecified if an alert interval has yet to end for the PM instance.')
cienaCesPmAlertTcaEventsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaEventsTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaEventsTotal.setDescription('Total number of Alert TCA events that have occurred for the PM instance.')
cienaCesPmAlertTcaSamplesProcessedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesProcessedTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesProcessedTotal.setDescription('Total Number of valid samples that have been collected used by the Alert TCA feature on the PM instance.')
cienaCesPmAlertTcaSamplesDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesDiscardedTotal.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesDiscardedTotal.setDescription('Total Number of samples that have been collected but not used by the Alert TCA feature on the PM instance.')
cienaCesPmAlertTcaSamplesProcessedCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesProcessedCurrentInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesProcessedCurrentInterval.setDescription('Number of valid samples that have been collected during the current Alert Interval and used by the Alert TCA feature on the PM instance.')
cienaCesPmAlertTcaSamplesDiscardedCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesDiscardedCurrentInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaSamplesDiscardedCurrentInterval.setDescription('Number of samples that have been collected during the current Alert Interval but not used by the Alert TCA feature on the PM instance.')
cienaCesPmAlertTcaLastTcaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 20), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaTime.setDescription('The time and date of the last Alert TCA for the PM instance. An empty string is returned if no Alert TCAs have occurred for the PM instance.')
cienaCesPmAlertTcaLastTcaUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 21), PmTcaUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaUnits.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaUnits.setDescription('The value of cienaCesPmAlertTcaUnits that was in use during the last Alert TCA for the PM instance.')
cienaCesPmAlertTcaLastTcaScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 22), PmTcaScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaScheme.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaScheme.setDescription('The value of cienaCesPmAlertTcaScheme that was in use during the last Alert TCA for the PM instance.')
cienaCesPmAlertTcaLastTcaBasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 23), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaBasisValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaBasisValue.setDescription('The alert basis value that was in place when the last Alert TCA event occurred. This refers to the value of cienaCesPmAlertTcaBasis when the last Alert TCA occurred.')
cienaCesPmAlertTcaLastTcaThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 24), PmTcaThresholdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaThresholdType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaThresholdType.setDescription('This object defines the way in which the value returned for cienaCesPmAlertTcaLastTcaThresholdValue should be interpreted.')
cienaCesPmAlertTcaLastTcaThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaThresholdValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaThresholdValue.setDescription('The threshold value that was used in the last Alert TCA event. This refers to the configured alert threshold as specified in the interval profile associated with the PM instance when the last Alert TCA occurred.')
cienaCesPmAlertTcaLastTcaBoundaryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 26), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaBoundaryValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaBoundaryValue.setDescription('The threshold boundary value which was reached or exceeded, causing the last Alert TCA. This refers to the value of cienaCesPmAlertTcaBoundaryValue when the last Alert TCA occurred.')
cienaCesPmAlertTcaLastTcaWatermarkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 27), PmTimeDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkTime.setDescription('The time and date that the watermark value used in the last Alert TCA was derived. An empty string is returned if no Alert TCAs have occurred for the PM instance.')
cienaCesPmAlertTcaLastTcaWatermarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 28), PmTcaWatermarkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkType.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkType.setDescription('The type of watermark that was used in the logic that caused the last Alert TCA event for the PM instance. This refers to the watermark value reported by the cienaCesPmAlertTcaLastTcaWatermarkValue object.')
cienaCesPmAlertTcaLastTcaWatermarkStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 29), PmStatBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkStats.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkStats.setDescription('The statistic(s) which were used by the Alert TCA feature to establish the watermark value identified by the cienaCesPmAlertTcaLastTcaWatermarkValue object. This refers to the value of cienaCesPmAlertTcaHighWatermarkStats when the Alert TCA occurred.')
cienaCesPmAlertTcaLastTcaWatermarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 30), PmTcaUnsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkValue.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaWatermarkValue.setDescription('The watermark value that was used in the logic that caused the last Alert TCA event for the PM instance. This refers to the value of cienaCesPmAlertTcaHighWatermarkValue when the last Alert TCA occurred.')
cienaCesPmAlertTcaLastTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 1, 3, 4, 1, 1, 31), PmTcaAlertState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaState.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaLastTcaState.setDescription('The alert state that was in place during the last Alert TCA. Alert TCA events occur whenever there are changes to the Alert TCA state of the PM Instance. This object indicates whether the last Alert TCA represented the PM instance having entered the Alert TCA state by indicating a value of alert. This object indicates whether the last Alert TCA represented the PM instance having exited the Alert TCA state by indicating a value of normal.')
cienaCesPmAlertTcaNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 40, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-PM", "cienaCesPmInstanceName"), ("CIENA-CES-PM", "cienaCesPmInstanceInterfaceType"), ("CIENA-CES-PM", "cienaCesPmInstanceInterfaceName"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaUnits"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaBasisValue"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaBoundaryValue"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaWatermarkType"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaWatermarkStats"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaWatermarkValue"), ("CIENA-CES-PM", "cienaCesPmAlertTcaLastTcaState"))
if mibBuilder.loadTexts: cienaCesPmAlertTcaNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesPmAlertTcaNotification.setDescription('This notification is sent when the device reports an Alert Threshold Crossing Alert (TCA) event.')
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmBasicRxCurrBinDuration=cienaCesPmBasicRxCurrBinDuration, cienaCesPmTdmOCnPortCurr24HBinAisl=cienaCesPmTdmOCnPortCurr24HBinAisl, cienaCesPmInstanceNextIndex=cienaCesPmInstanceNextIndex, cienaCesPmExtendedTxRxTotalStatsBinRxMcastPkts=cienaCesPmExtendedTxRxTotalStatsBinRxMcastPkts, cienaCesPmTdmPwStatisticsBinClearTime=cienaCesPmTdmPwStatisticsBinClearTime, cienaCesPmTdmDS3PortHist24HBinState=cienaCesPmTdmDS3PortHist24HBinState, cienaCesPmTdmPwStatisticsBinTable=cienaCesPmTdmPwStatisticsBinTable, cienaCesPmFloodContainerCurrBinDuration=cienaCesPmFloodContainerCurrBinDuration, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowFrames, cienaCesPmTdmPwTotalStatisticsBinFcp=cienaCesPmTdmPwTotalStatisticsBinFcp, cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedFrames=cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedFrames, cienaCesPmTdmPwCurr24HBinUnderrun=cienaCesPmTdmPwCurr24HBinUnderrun, cienaCesPmTdmDS3PortHistoryBinClearTime=cienaCesPmTdmDS3PortHistoryBinClearTime, cienaCesPmIGMPHist24HBinIgmpnumReplyTimeouts=cienaCesPmIGMPHist24HBinIgmpnumReplyTimeouts, cienaCesPmTdmOCnPortHistoryBinEs=cienaCesPmTdmOCnPortHistoryBinEs, cienaCesPmBasicOtuStatsBinCvOtu=cienaCesPmBasicOtuStatsBinCvOtu, cienaCesPmIGMPStatisticsBinEntry=cienaCesPmIGMPStatisticsBinEntry, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMin=cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMin, cienaCesPmTdmT1PortCurrBinState=cienaCesPmTdmT1PortCurrBinState, cienaCesPmExtendedTxRxCurrBinTx65To127OctsPkts=cienaCesPmExtendedTxRxCurrBinTx65To127OctsPkts, cienaCesPmTdmE1PortCurr24HBinClearTime=cienaCesPmTdmE1PortCurr24HBinClearTime, cienaCesPmQueueGroupTotalStatisticsBinEntry=cienaCesPmQueueGroupTotalStatisticsBinEntry, cienaCesPmTdmPwHist24HBinMbit=cienaCesPmTdmPwHist24HBinMbit, cienaCesPmExtendedTxRxHistoryBinTxFramesPerSec=cienaCesPmExtendedTxRxHistoryBinTxFramesPerSec, cienaCesPmExtendedTxRxStatsBin512To1023OctsPkts=cienaCesPmExtendedTxRxStatsBin512To1023OctsPkts, cienaCesPmBasicTxRxCurrBinEntry=cienaCesPmBasicTxRxCurrBinEntry, cienaCesPmBasicTxHist24HBinEndTime=cienaCesPmBasicTxHist24HBinEndTime, cienaCesPmTdmPwTotalStatisticsBinOverrun=cienaCesPmTdmPwTotalStatisticsBinOverrun, cienaCesPmTdmE1PortCurr24HBinDuration=cienaCesPmTdmE1PortCurr24HBinDuration, cienaCesPmBasicPtpStatsBinDgdAvgOch=cienaCesPmBasicPtpStatsBinDgdAvgOch, cienaCesPmExtendedTxRxCurr24HBinEntry=cienaCesPmExtendedTxRxCurr24HBinEntry, cienaCesPmTdmPwTotalStatisticsBinTxPkt=cienaCesPmTdmPwTotalStatisticsBinTxPkt, cienaCesPmIGMPHistoryBinIgmpnumResourceExceed=cienaCesPmIGMPHistoryBinIgmpnumResourceExceed, cienaCesPmTdmPwHist24HBinClearTime=cienaCesPmTdmPwHist24HBinClearTime, cienaCesPmBasicOduHistoryBinState=cienaCesPmBasicOduHistoryBinState, cienaCesPmBasicTxRxAllTimeBinTable=cienaCesPmBasicTxRxAllTimeBinTable, cienaCesPmBasicOtuTotalStatisticsBinEntry=cienaCesPmBasicOtuTotalStatisticsBinEntry, cienaCesPmBasicPtpTotalStatsBinDgdMaxOch=cienaCesPmBasicPtpTotalStatsBinDgdMaxOch, cienaCesPmBasicTxRxBiDirStats=cienaCesPmBasicTxRxBiDirStats, cienaCesPmTdmT1PortCurr24HBinLossl=cienaCesPmTdmT1PortCurr24HBinLossl, cienaCesPmExtendedTxRxTotalStatsBinLinkUp=cienaCesPmExtendedTxRxTotalStatsBinLinkUp, cienaCesPmBasicRxHistoryBinBasicRxDroppedBytes=cienaCesPmBasicRxHistoryBinBasicRxDroppedBytes, cienaCesPmBasicOduHist24HBinDuration=cienaCesPmBasicOduHist24HBinDuration, cienaCesPmBasicPtpStatsBinOprMaxOts=cienaCesPmBasicPtpStatsBinOprMaxOts, cienaCesPmBasicPtpTotalStatsBinOptMinOch=cienaCesPmBasicPtpTotalStatsBinOptMinOch, cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmAdjustmentTcaOverflowHighWatermarkValue=cienaCesPmAdjustmentTcaOverflowHighWatermarkValue, cienaCesPmTdmT1PortCurr24HBinSasp=cienaCesPmTdmT1PortCurr24HBinSasp, cienaCesPmEgressQueueTotalStatsBinMulticastDroppedBytes=cienaCesPmEgressQueueTotalStatsBinMulticastDroppedBytes, cienaCesPmQueueGroupCurrBinClearedTime=cienaCesPmQueueGroupCurrBinClearedTime, cienaCesPmAdjustmentTcaLastOverflowTcaTime=cienaCesPmAdjustmentTcaLastOverflowTcaTime, cienaCesPmTdmE1PortHist24HBinState=cienaCesPmTdmE1PortHist24HBinState, cienaCesPmQueueGroupCurrBinStartTime=cienaCesPmQueueGroupCurrBinStartTime, cienaCesPmTdmPwTotalStatisticsBinMalformed=cienaCesPmTdmPwTotalStatisticsBinMalformed, cienaCesPmBasicOduCurr24HBinCvOdu=cienaCesPmBasicOduCurr24HBinCvOdu, cienaCesPmTdmDS3PortCurr24HBinSesl=cienaCesPmTdmDS3PortCurr24HBinSesl, cienaCesPmAdjustmentTcaUnderflowBoundaryValue=cienaCesPmAdjustmentTcaUnderflowBoundaryValue, cienaCesPmBasicPtpTotalStatisticsBinTable=cienaCesPmBasicPtpTotalStatisticsBinTable, cienaCesPmBasicPtpHistoryBinTable=cienaCesPmBasicPtpHistoryBinTable, cienaCesPmAlertTcaNotification=cienaCesPmAlertTcaNotification, cienaCesPmBasicPtpCurr24HBinDuration=cienaCesPmBasicPtpCurr24HBinDuration, cienaCesPmTdmPwStatisticsBinLops=cienaCesPmTdmPwStatisticsBinLops, cienaCesPmTdmE1PortStatisticsBinEs=cienaCesPmTdmE1PortStatisticsBinEs, cienaCesPmInstanceInterfaceOperState=cienaCesPmInstanceInterfaceOperState, cienaCesPmExtendedTxRxHistoryBinTxExCollPkts=cienaCesPmExtendedTxRxHistoryBinTxExCollPkts, cienaCesPmExtendedTxRxCurr24HBinTxExCollPkts=cienaCesPmExtendedTxRxCurr24HBinTxExCollPkts, cienaCesPmTdmPwHist24HBinState=cienaCesPmTdmPwHist24HBinState, cienaCesPmIntervalProfileUsageTable=cienaCesPmIntervalProfileUsageTable, cienaCesPmEgressQueueTotalStatsBinUnicastDroppedFrames=cienaCesPmEgressQueueTotalStatsBinUnicastDroppedFrames, cienaCesPmBasicTxStatsBinTxFramesPerSec=cienaCesPmBasicTxStatsBinTxFramesPerSec, cienaCesPmBasicTxRxBiDirStatsBinRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirStatsBinRevRxBytesPerSec, cienaCesPmBasicPtpTotalStatsBinOptOch=cienaCesPmBasicPtpTotalStatsBinOptOch, cienaCesPmAccessAllTimeBinAccessHitFrames=cienaCesPmAccessAllTimeBinAccessHitFrames, cienaCesPmQueueGroupHistoryBinTable=cienaCesPmQueueGroupHistoryBinTable, cienaCesPmQueueGroupStatsBinStartTime=cienaCesPmQueueGroupStatsBinStartTime, cienaCesPmTdmOCnPortHistoryBinUasl=cienaCesPmTdmOCnPortHistoryBinUasl, cienaCesPmTdmOCnPortHistoryBinEb=cienaCesPmTdmOCnPortHistoryBinEb, cienaCesPmExtendedTxRxHistoryBin4096To9216OctsPkts=cienaCesPmExtendedTxRxHistoryBin4096To9216OctsPkts, cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortDown, PmCounter64Atto=PmCounter64Atto, cienaCesPmIGMPCurr24HBinStartTime=cienaCesPmIGMPCurr24HBinStartTime, cienaCesPmEgressQueueHist24HBinMulticastEnqueuedFrames=cienaCesPmEgressQueueHist24HBinMulticastEnqueuedFrames, cienaCesPmBasicPtpStatsBinOprAvgOts=cienaCesPmBasicPtpStatsBinOprAvgOts, cienaCesPmInstanceIndexXrefAuto=cienaCesPmInstanceIndexXrefAuto, cienaCesPmExtendedTxRxStatsBinTxUnderRunPkts=cienaCesPmExtendedTxRxStatsBinTxUnderRunPkts, cienaCesPmAlertTcaScheme=cienaCesPmAlertTcaScheme, cienaCesPmExtendedTxRxHistoryBinTxTBytes=cienaCesPmExtendedTxRxHistoryBinTxTBytes, cienaCesPmExtendedTxRxTotalStatsBinTxTBytes=cienaCesPmExtendedTxRxTotalStatsBinTxTBytes, cienaCesPmQueueGroupStatsBinEnqueuedBytes=cienaCesPmQueueGroupStatsBinEnqueuedBytes, cienaCesPmTdmT1PortHist24HBinTable=cienaCesPmTdmT1PortHist24HBinTable, cienaCesPmFloodContainerCurrBinEntry=cienaCesPmFloodContainerCurrBinEntry, cienaCesPmFloodContainerHistoryBinL2McastDroppedFrames=cienaCesPmFloodContainerHistoryBinL2McastDroppedFrames, cienaCesPmTdmE1PortHist24HBinUas=cienaCesPmTdmE1PortHist24HBinUas, cienaCesPmEgressQueueAllTimeBinUnicastDroppedFrames=cienaCesPmEgressQueueAllTimeBinUnicastDroppedFrames, cienaCesPmIGMPTotalStatsBinIgmpnumQueries=cienaCesPmIGMPTotalStatsBinIgmpnumQueries, cienaCesPmExtendedTxRxCurrBinEntry=cienaCesPmExtendedTxRxCurrBinEntry, cienaCesPmBasicPtpHistoryBinFieldsInvalid=cienaCesPmBasicPtpHistoryBinFieldsInvalid, cienaCesPmFloodContainerHistoryBinIndex=cienaCesPmFloodContainerHistoryBinIndex, cienaCesPmTdmPwHist24HBinSesp=cienaCesPmTdmPwHist24HBinSesp, cienaCesPmTdmPwCurr24HBinUas=cienaCesPmTdmPwCurr24HBinUas, cienaCesPmBasicOtuTotalStatsBinCvOtu=cienaCesPmBasicOtuTotalStatsBinCvOtu, cienaCesPmTdmT1PortTotalStatisticsBinEntry=cienaCesPmTdmT1PortTotalStatisticsBinEntry, cienaCesPmBasicTxRxAllTimeBinBasicRxFramesPerSec=cienaCesPmBasicTxRxAllTimeBinBasicRxFramesPerSec, cienaCesPmExtendedTxRxCurrBinUndersizePkts=cienaCesPmExtendedTxRxCurrBinUndersizePkts, cienaCesPmExtendedTxRxHist24HBin512To1023OctsPkts=cienaCesPmExtendedTxRxHist24HBin512To1023OctsPkts, cienaCesPmBasicOtuCurrBinUncFecBlkOtu=cienaCesPmBasicOtuCurrBinUncFecBlkOtu, cienaCesPmTdmDS3PortHistoryBinSefs=cienaCesPmTdmDS3PortHistoryBinSefs, cienaCesPmTdmDS3PortHistoryBinDuration=cienaCesPmTdmDS3PortHistoryBinDuration, cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedFrames, cienaCesPmTdmOCnPortStats=cienaCesPmTdmOCnPortStats, cienaCesPmExtendedTxRxCurrBinTx256To511OctsPkts=cienaCesPmExtendedTxRxCurrBinTx256To511OctsPkts, cienaCesPmIntervalProfileAlertInterval=cienaCesPmIntervalProfileAlertInterval, cienaCesPmBasicTxRxBiDirHistoryBinIndex=cienaCesPmBasicTxRxBiDirHistoryBinIndex, cienaCesPmBasicPtpHistoryBinEndTime=cienaCesPmBasicPtpHistoryBinEndTime, cienaCesPmTdmOCnPortCurr24HBinCvs=cienaCesPmTdmOCnPortCurr24HBinCvs, cienaCesPmTdmT1PortHist24HBinClearTime=cienaCesPmTdmT1PortHist24HBinClearTime, cienaCesPmBasicOtuHistoryBinEsOtu=cienaCesPmBasicOtuHistoryBinEsOtu, cienaCesPmFloodContainerCurr24HBinBcastDroppedFrames=cienaCesPmFloodContainerCurr24HBinBcastDroppedFrames, cienaCesPmExtendedTxRxAllTimeBin64OctsPkts=cienaCesPmExtendedTxRxAllTimeBin64OctsPkts, cienaCesPmTdmPwHist24HBinTxPkt=cienaCesPmTdmPwHist24HBinTxPkt, cienaCesPmBasicOtuTotalStatsBinPrfBerOtu=cienaCesPmBasicOtuTotalStatsBinPrfBerOtu, cienaCesPmBasicPtpCurrBinClearedTime=cienaCesPmBasicPtpCurrBinClearedTime, cienaCesPmBasicTxRxCurr24HBinTxBytesPerSec=cienaCesPmBasicTxRxCurr24HBinTxBytesPerSec, cienaCesPmExtendedTxRxTotalStatsBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx512To1023OctsPkts, cienaCesPmTdmE1PortHist24HBinStartTime=cienaCesPmTdmE1PortHist24HBinStartTime, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmIGMPTotalStatisticsBinTable=cienaCesPmIGMPTotalStatisticsBinTable, cienaCesPmExtendedTxRxHistoryBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxHistoryBinTxLCheckErrorPkts, cienaCesPmIGMPHist24HBinIgmpnumLeaves=cienaCesPmIGMPHist24HBinIgmpnumLeaves, cienaCesPmBasicRxStatsBinBasicRxAcceptedFrames=cienaCesPmBasicRxStatsBinBasicRxAcceptedFrames, cienaCesPmBasicTxRxBiDirStatsBinFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirStatsBinFwdRxFramesPerSec, cienaCesPmTdmPwCurrBinMalformed=cienaCesPmTdmPwCurrBinMalformed, cienaCesPmBasicOtuStatsBinSefsOtu=cienaCesPmBasicOtuStatsBinSefsOtu, cienaCesPmQueueGroupCurr24HBinEnqueuedFrames=cienaCesPmQueueGroupCurr24HBinEnqueuedFrames, cienaCesPmBasicTxRxStatsBinTxFramesPerSec=cienaCesPmBasicTxRxStatsBinTxFramesPerSec, cienaCesPmTdmOCnPortHistoryBinAs=cienaCesPmTdmOCnPortHistoryBinAs, cienaCesPmBasicTxRxTotalStatsBinTxFramesPerSec=cienaCesPmBasicTxRxTotalStatsBinTxFramesPerSec, cienaCesPmTdmDS3PortCurr24HBinSefs=cienaCesPmTdmDS3PortCurr24HBinSefs, cienaCesPmBasicOtuTotalStatsBinFecOtu=cienaCesPmBasicOtuTotalStatsBinFecOtu, cienaCesPmExtendedTxRxStatsBinFragmentsPkts=cienaCesPmExtendedTxRxStatsBinFragmentsPkts, cienaCesPmBasicRxCurrBinBasicRxFramesPerSec=cienaCesPmBasicRxCurrBinBasicRxFramesPerSec, cienaCesPmIGMPCurr24HBinIgmpnumUnknownPktType=cienaCesPmIGMPCurr24HBinIgmpnumUnknownPktType, cienaCesPmTdmPwCurr24HBinState=cienaCesPmTdmPwCurr24HBinState, cienaCesPmBasicOtuStats=cienaCesPmBasicOtuStats, cienaCesPmBasicRxHistoryBinState=cienaCesPmBasicRxHistoryBinState, cienaCesPmBasicOtuHist24HBinClearTime=cienaCesPmBasicOtuHist24HBinClearTime, cienaCesPmExtendedTxRxHist24HBinTxUcastPkts=cienaCesPmExtendedTxRxHist24HBinTxUcastPkts, cienaCesPmTdmDS3PortTotalStatisticsBinCvl=cienaCesPmTdmDS3PortTotalStatisticsBinCvl, cienaCesPmExtendedTxRxStatsBinLinkFlap=cienaCesPmExtendedTxRxStatsBinLinkFlap, cienaCesPmBasicPtpTotalStatsBinOprAvgOts=cienaCesPmBasicPtpTotalStatsBinOprAvgOts, cienaCesPmBasicOduTotalStatsBinCvOdu=cienaCesPmBasicOduTotalStatsBinCvOdu, cienaCesPmExtendedTxRxAllTimeBinRxBytes=cienaCesPmExtendedTxRxAllTimeBinRxBytes, cienaCesPmTdmT1PortCurr24HBinState=cienaCesPmTdmT1PortCurr24HBinState, cienaCesPmExtendedTxRxHist24HBinUndersizePkts=cienaCesPmExtendedTxRxHist24HBinUndersizePkts, cienaCesPmExtendedTxRxStatsBinTxBcastPkts=cienaCesPmExtendedTxRxStatsBinTxBcastPkts, cienaCesPmFloodContainerHistoryBinState=cienaCesPmFloodContainerHistoryBinState, cienaCesPmBasicPtpHist24HBinOptAvgOch=cienaCesPmBasicPtpHist24HBinOptAvgOch, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedBytes, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowFrames, PmTimeDate=PmTimeDate, cienaCesPmTdmDS3PortHist24HBinEndTime=cienaCesPmTdmDS3PortHist24HBinEndTime, cienaCesPmAccessTotalStatsBinAccessHitBytes=cienaCesPmAccessTotalStatsBinAccessHitBytes, cienaCesPmEgressQueueAllTimeBinUnicastDroppedBytes=cienaCesPmEgressQueueAllTimeBinUnicastDroppedBytes, cienaCesPmInstanceAdminState=cienaCesPmInstanceAdminState, cienaCesPmTdmPwStatisticsBinStartTime=cienaCesPmTdmPwStatisticsBinStartTime, cienaCesPmTdmOCnPortCurrBinTable=cienaCesPmTdmOCnPortCurrBinTable, cienaCesPmBasicOtuTotalStatsBinPrfBerMaxOtu=cienaCesPmBasicOtuTotalStatsBinPrfBerMaxOtu, cienaCesPmAdjustmentTcaOverflowBoundaryValue=cienaCesPmAdjustmentTcaOverflowBoundaryValue, cienaCesPmBasicOtuHist24HBinEndTime=cienaCesPmBasicOtuHist24HBinEndTime, cienaCesPmIntervalProfileAdjustmentInterval=cienaCesPmIntervalProfileAdjustmentInterval, cienaCesPmAdjustmentTcaBasisValue=cienaCesPmAdjustmentTcaBasisValue, cienaCesPmExtendedTxRxAllTimeBinUndersizePkts=cienaCesPmExtendedTxRxAllTimeBinUndersizePkts, cienaCesPmExtendedTxRxHist24HBinTxCrcErrorPkts=cienaCesPmExtendedTxRxHist24HBinTxCrcErrorPkts, cienaCesPmTdmPwCurr24HBinLops=cienaCesPmTdmPwCurr24HBinLops, cienaCesPmBasicOtuCurrBinEsOtu=cienaCesPmBasicOtuCurrBinEsOtu, cienaCesPmQueueGroupTotalStatsBinStartTime=cienaCesPmQueueGroupTotalStatsBinStartTime, cienaCesPmBasicPtpHistoryBinOprOts=cienaCesPmBasicPtpHistoryBinOprOts, cienaCesPmExtendedTxRxCurr24HBinTxUnderRunPkts=cienaCesPmExtendedTxRxCurr24HBinTxUnderRunPkts, cienaCesPmIGMPAllTimeBinIgmpnumHostDiscards=cienaCesPmIGMPAllTimeBinIgmpnumHostDiscards, cienaCesPmExtendedTxRxAllTimeBinTxLateCollPkts=cienaCesPmExtendedTxRxAllTimeBinTxLateCollPkts, cienaCesPmTdmPwCurr24HBinFcp=cienaCesPmTdmPwCurr24HBinFcp, cienaCesPmBasicTxHistoryBinIndex=cienaCesPmBasicTxHistoryBinIndex, cienaCesPmTdmT1PortCurr24HBinDuration=cienaCesPmTdmT1PortCurr24HBinDuration, cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedFrames, cienaCesPmTdmE1PortCurr24HBinTt=cienaCesPmTdmE1PortCurr24HBinTt, cienaCesPmTdmDS3PortCurr24HBinPuas=cienaCesPmTdmDS3PortCurr24HBinPuas, cienaCesPmExtendedTxRxTotalStatsBin4096To9216OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin4096To9216OctsPkts, cienaCesPmFloodContainerHist24HBinBcastDroppedFrames=cienaCesPmFloodContainerHist24HBinBcastDroppedFrames, cienaCesPmTdmT1PortCurrBinSesp=cienaCesPmTdmT1PortCurrBinSesp, cienaCesPmExtendedTxRxCurrBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxCurrBinTx512To1023OctsPkts, cienaCesPmTdmPwCurrBinTable=cienaCesPmTdmPwCurrBinTable, cienaCesPmBasicTxRxHistoryBinRxAcceptedBytes=cienaCesPmBasicTxRxHistoryBinRxAcceptedBytes, cienaCesPmTdmPwHist24HBinCvp=cienaCesPmTdmPwHist24HBinCvp, cienaCesPmBasicTxRxCurrBinRxBytesPerSec=cienaCesPmBasicTxRxCurrBinRxBytesPerSec, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxBytesPerSec, cienaCesPmQueueGroupHistoryBinEnqueuedFrames=cienaCesPmQueueGroupHistoryBinEnqueuedFrames, cienaCesPmTdmE1PortHistoryBinUas=cienaCesPmTdmE1PortHistoryBinUas, cienaCesPmExtendedTxRxHist24HBin1519To2047OctsPkts=cienaCesPmExtendedTxRxHist24HBin1519To2047OctsPkts, cienaCesPmTdmOCnPortHist24HBinEss=cienaCesPmTdmOCnPortHist24HBinEss, cienaCesPmTdmPwCurr24HBinCvp=cienaCesPmTdmPwCurr24HBinCvp, cienaCesPmTdmPwHistoryBinMbit=cienaCesPmTdmPwHistoryBinMbit, cienaCesPmExtendedTxRxHist24HBinInDiscards=cienaCesPmExtendedTxRxHist24HBinInDiscards, cienaCesPmBasicRxCurr24HBinStartTime=cienaCesPmBasicRxCurr24HBinStartTime, cienaCesPmBasicTxRxBiDirHistoryBinRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinRevRxFramesPerSec, cienaCesPmTdmT1PortCurrBinClearTime=cienaCesPmTdmT1PortCurrBinClearTime, cienaCesPmTdmOCnPortHistoryBinCvl=cienaCesPmTdmOCnPortHistoryBinCvl, cienaCesPmEgressQueueAllTimeBinEntry=cienaCesPmEgressQueueAllTimeBinEntry, cienaCesPmAccessCurrBinDuration=cienaCesPmAccessCurrBinDuration, cienaCesPmBasicTxRxBiDirHistoryBinEntry=cienaCesPmBasicTxRxBiDirHistoryBinEntry, cienaCesPmExtendedTxRxStatsBin4096To9216OctsPkts=cienaCesPmExtendedTxRxStatsBin4096To9216OctsPkts, cienaCesPmAccessHistoryBinDuration=cienaCesPmAccessHistoryBinDuration, cienaCesPmBasicOduHistoryBinEndTime=cienaCesPmBasicOduHistoryBinEndTime, cienaCesPmExtendedTxRxStatsBinJabbersPkts=cienaCesPmExtendedTxRxStatsBinJabbersPkts, cienaCesPmBasicPtpTotalStatsBinOprAvgOch=cienaCesPmBasicPtpTotalStatsBinOprAvgOch, cienaCesPmTdmOCnPortTotalStatisticsBinUas=cienaCesPmTdmOCnPortTotalStatisticsBinUas, cienaCesPmFloodContainerHistoryBinBcastDroppedFrames=cienaCesPmFloodContainerHistoryBinBcastDroppedFrames, cienaCesPmTdmDS3PortTotalStatisticsBinSefs=cienaCesPmTdmDS3PortTotalStatisticsBinSefs, cienaCesPmTdmT1PortStatisticsBinTable=cienaCesPmTdmT1PortStatisticsBinTable, cienaCesPmBasicPtpCurr24HBinFieldsInvalid=cienaCesPmBasicPtpCurr24HBinFieldsInvalid, cienaCesPmBasicTxRxTotalStatsBinRxYellowFrames=cienaCesPmBasicTxRxTotalStatsBinRxYellowFrames, cienaCesPmBasicOduStatsBinEsOdu=cienaCesPmBasicOduStatsBinEsOdu, cienaCesPmBasicTxRxCurrBinDuration=cienaCesPmBasicTxRxCurrBinDuration, cienaCesPmBasicTxRxTotalStatsBinRxFramesPerSec=cienaCesPmBasicTxRxTotalStatsBinRxFramesPerSec, cienaCesPmTdmPwCurr24HBinSesp=cienaCesPmTdmPwCurr24HBinSesp, cienaCesPmBasicRxStatsBinBasicRxYellowFrames=cienaCesPmBasicRxStatsBinBasicRxYellowFrames, cienaCesPmBasicRxCurr24HBinBasicRxYellowBytes=cienaCesPmBasicRxCurr24HBinBasicRxYellowBytes, cienaCesPmTdmT1PortHistoryBinTable=cienaCesPmTdmT1PortHistoryBinTable, cienaCesPmBasicOtuCurr24HBinFieldsInvalid=cienaCesPmBasicOtuCurr24HBinFieldsInvalid, cienaCesPmBasicOtuStatsBinSesOtu=cienaCesPmBasicOtuStatsBinSesOtu, cienaCesPmTdmPwCurr24HBinMalformed=cienaCesPmTdmPwCurr24HBinMalformed, cienaCesPmBasicOtuCurr24HBinTable=cienaCesPmBasicOtuCurr24HBinTable, cienaCesPmExtendedTxRxCurr24HBinRxCrcErrorPkts=cienaCesPmExtendedTxRxCurr24HBinRxCrcErrorPkts, cienaCesPmAdjustmentTcaLastIntvlEndTcaScheme=cienaCesPmAdjustmentTcaLastIntvlEndTcaScheme, cienaCesPmBasicTxRxBiDirCurrBinRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirCurrBinRevRxFramesPerSec, cienaCesPmExtendedTxRxTotalStatsBinJabbersPkts=cienaCesPmExtendedTxRxTotalStatsBinJabbersPkts, cienaCesPmExtendedTxRxTotalStatsBinRxInErrorPkts=cienaCesPmExtendedTxRxTotalStatsBinRxInErrorPkts, cienaCesPmTdmPwStats=cienaCesPmTdmPwStats, cienaCesPmBasicTxCurrBinTxForwardedBytes=cienaCesPmBasicTxCurrBinTxForwardedBytes, cienaCesPmExtendedTxRxCurr24HBinRxBcastPkts=cienaCesPmExtendedTxRxCurr24HBinRxBcastPkts, cienaCesPmExtendedTxRxCurr24HBinEndTime=cienaCesPmExtendedTxRxCurr24HBinEndTime, cienaCesPmIGMPHistoryBinTable=cienaCesPmIGMPHistoryBinTable, cienaCesPmTdmOCnPortTotalStatisticsBinEb=cienaCesPmTdmOCnPortTotalStatisticsBinEb, cienaCesPmInstanceEntry=cienaCesPmInstanceEntry, cienaCesPmExtendedTxRxHistoryBinTx128To255OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx128To255OctsPkts, cienaCesPmBasicOduHist24HBinTable=cienaCesPmBasicOduHist24HBinTable, cienaCesPmAdjustmentTcaOverflowCurrentCount=cienaCesPmAdjustmentTcaOverflowCurrentCount, cienaCesPmTdmT1PortHist24HBinState=cienaCesPmTdmT1PortHist24HBinState, cienaCesPmExtendedTxRxCurrBinStartTime=cienaCesPmExtendedTxRxCurrBinStartTime, cienaCesPmExtendedTxRxCurr24HBinTxBcastPkts=cienaCesPmExtendedTxRxCurr24HBinTxBcastPkts, cienaCesPmExtendedTxRxCurr24HBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxCurr24HBinTxLCheckErrorPkts, cienaCesPmExtendedTxRxHist24HBinTxTBytes=cienaCesPmExtendedTxRxHist24HBinTxTBytes, cienaCesPmBasicTxRxBiDirCurr24HBinRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinRevTxBytesPerSec, cienaCesPmQueueGroupCurr24HBinTable=cienaCesPmQueueGroupCurr24HBinTable)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmExtendedTxRxStatsBinRxInErrorPkts=cienaCesPmExtendedTxRxStatsBinRxInErrorPkts, cienaCesPmBasicTxRxHist24HBinClearTime=cienaCesPmBasicTxRxHist24HBinClearTime, cienaCesPmBasicOtuTotalStatsBinSesOtu=cienaCesPmBasicOtuTotalStatsBinSesOtu, cienaCesPmExtendedTxRxHist24HBinTxBytesPerSec=cienaCesPmExtendedTxRxHist24HBinTxBytesPerSec, cienaCesPmExtendedTxRxCurr24HBinLinkUp=cienaCesPmExtendedTxRxCurr24HBinLinkUp, cienaCesPmTdmT1PortHist24HBinCvp=cienaCesPmTdmT1PortHist24HBinCvp, cienaCesPmBasicTxTotalStatsBinTxFramesPerSec=cienaCesPmBasicTxTotalStatsBinTxFramesPerSec, cienaCesPmIGMPCurrBinIgmpnumLeaves=cienaCesPmIGMPCurrBinIgmpnumLeaves, cienaCesPmAccessHistoryBinAccessHitFrames=cienaCesPmAccessHistoryBinAccessHitFrames, cienaCesPmExtendedTxRxHistoryBinTx64OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx64OctsPkts, cienaCesPmExtendedTxRxAllTimeBinFragmentsPkts=cienaCesPmExtendedTxRxAllTimeBinFragmentsPkts, cienaCesPmQueueGroupHistoryBinStartTime=cienaCesPmQueueGroupHistoryBinStartTime, cienaCesPmTdmDS3PortHist24HBinPes=cienaCesPmTdmDS3PortHist24HBinPes, cienaCesPmBasicTxRxTotalStatisticsBinEntry=cienaCesPmBasicTxRxTotalStatisticsBinEntry, cienaCesPmTdmT1PortHistoryBinTtp=cienaCesPmTdmT1PortHistoryBinTtp, cienaCesPmFloodContainerStats=cienaCesPmFloodContainerStats, cienaCesPmExtendedTxRxCurrBinDropEvents=cienaCesPmExtendedTxRxCurrBinDropEvents, cienaCesPmTdmPwHistoryBinAsp=cienaCesPmTdmPwHistoryBinAsp, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedBytes, cienaCesPmBasicOtuHist24HBinPrfBerMaxOtu=cienaCesPmBasicOtuHist24HBinPrfBerMaxOtu, cienaCesPmBasicTxRxAllTimeBinBasicTxFramesPerSec=cienaCesPmBasicTxRxAllTimeBinBasicTxFramesPerSec, cienaCesPmStatistics=cienaCesPmStatistics, cienaCesPmExtendedTxRxCurrBinRxFramesPerSec=cienaCesPmExtendedTxRxCurrBinRxFramesPerSec, cienaCesPmTdmPwCurr24HBinMbit=cienaCesPmTdmPwCurr24HBinMbit, cienaCesPmTdmDS3PortCurrBinLoss=cienaCesPmTdmDS3PortCurrBinLoss, cienaCesPmFloodContainerStatsBinL2McastDroppedFrames=cienaCesPmFloodContainerStatsBinL2McastDroppedFrames, cienaCesPmTdmOCnPortCurrBinUas=cienaCesPmTdmOCnPortCurrBinUas, cienaCesPmBasicOduCurrBinEsOdu=cienaCesPmBasicOduCurrBinEsOdu, cienaCesPmBasicTxCurrBinState=cienaCesPmBasicTxCurrBinState, cienaCesPmBasicOtuCurr24HBinPrfBerOtu=cienaCesPmBasicOtuCurr24HBinPrfBerOtu, cienaCesPmEgressQueueHist24HBinEntry=cienaCesPmEgressQueueHist24HBinEntry, cienaCesPmTdmT1PortCurr24HBinFcp=cienaCesPmTdmT1PortCurr24HBinFcp, cienaCesPmTdmT1PortHist24HBinFcp=cienaCesPmTdmT1PortHist24HBinFcp, cienaCesPmExtendedTxRxAllTimeBinTxSingleCollPkts=cienaCesPmExtendedTxRxAllTimeBinTxSingleCollPkts, cienaCesPmBasicRxHist24HBinBasicRxDroppedFrames=cienaCesPmBasicRxHist24HBinBasicRxDroppedFrames, cienaCesPmExtendedTxRxAllTimeBinTxMcastPkts=cienaCesPmExtendedTxRxAllTimeBinTxMcastPkts, cienaCesPmBasicTxRxBiDirHistoryBinEndTime=cienaCesPmBasicTxRxBiDirHistoryBinEndTime, cienaCesPmTdmT1PortCurrBinEsp=cienaCesPmTdmT1PortCurrBinEsp, cienaCesPmTdmDS3PortCurrBinPes=cienaCesPmTdmDS3PortCurrBinPes, cienaCesPmExtendedTxRxHistoryBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx512To1023OctsPkts, cienaCesPmBasicTxRxCurr24HBinRxDroppedFrames=cienaCesPmBasicTxRxCurr24HBinRxDroppedFrames, cienaCesPmBasicTxStatisticsBinTable=cienaCesPmBasicTxStatisticsBinTable, cienaCesPmBasicRxTotalStatisticsBinTable=cienaCesPmBasicRxTotalStatisticsBinTable, cienaCesPmTdmPwTotalStatisticsBinLops=cienaCesPmTdmPwTotalStatisticsBinLops, cienaCesPmExtendedTxRxCurr24HBinRxUcastPkts=cienaCesPmExtendedTxRxCurr24HBinRxUcastPkts, cienaCesPmQueueGroupTotalStatsBinDroppedFrames=cienaCesPmQueueGroupTotalStatsBinDroppedFrames, cienaCesPmAdjustmentTcaHighWatermarkStats=cienaCesPmAdjustmentTcaHighWatermarkStats, cienaCesPmExtendedTxRxHistoryBin64OctsPkts=cienaCesPmExtendedTxRxHistoryBin64OctsPkts, cienaCesPmInstanceTcaStatisticsClear=cienaCesPmInstanceTcaStatisticsClear, cienaCesPmExtendedTxRxAllTimeBinTxPausePkts=cienaCesPmExtendedTxRxAllTimeBinTxPausePkts, cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowFrames=cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowFrames, cienaCesPmAccessCurr24HBinStartTime=cienaCesPmAccessCurr24HBinStartTime, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxBytesPerSec, cienaCesPmTdmPwCurrBinClearTime=cienaCesPmTdmPwCurrBinClearTime, cienaCesPmExtendedTxRxAllTimeBinTxBcastPkts=cienaCesPmExtendedTxRxAllTimeBinTxBcastPkts, cienaCesPmExtendedTxRxCurrBinTxFramesPerSec=cienaCesPmExtendedTxRxCurrBinTxFramesPerSec, cienaCesPmExtendedTxRxHist24HBinTx65To127OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx65To127OctsPkts, cienaCesPmExtendedTxRxAllTimeBinDropEvents=cienaCesPmExtendedTxRxAllTimeBinDropEvents, cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxBytesPerSec, cienaCesPmBasicPtpCurrBinOprMaxOts=cienaCesPmBasicPtpCurrBinOprMaxOts, cienaCesPmBasicOduHistoryBinEsOdu=cienaCesPmBasicOduHistoryBinEsOdu, cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowFrames=cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowFrames, cienaCesPmBasicPtpHist24HBinClearTime=cienaCesPmBasicPtpHist24HBinClearTime, cienaCesPmExtendedTxRxHist24HBinTx128To255OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx128To255OctsPkts, cienaCesPmBasicTxRxStatsBinClearTime=cienaCesPmBasicTxRxStatsBinClearTime, cienaCesPmBasicRxCurr24HBinBasicRxDroppedFrames=cienaCesPmBasicRxCurr24HBinBasicRxDroppedFrames, cienaCesPmTdmPwCurrBinState=cienaCesPmTdmPwCurrBinState, cienaCesPmExtendedTxRxCurr24HBinUndersizePkts=cienaCesPmExtendedTxRxCurr24HBinUndersizePkts, cienaCesPmBasicPtpHist24HBinFieldsInvalid=cienaCesPmBasicPtpHist24HBinFieldsInvalid, cienaCesPmBasicTxRxTotalStatsBinRxYellowBytes=cienaCesPmBasicTxRxTotalStatsBinRxYellowBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowFrames, cienaCesPmBasicPtpCurrBinOprOch=cienaCesPmBasicPtpCurrBinOprOch, cienaCesPmBasicTxRxCurrBinTxForwardedBytes=cienaCesPmBasicTxRxCurrBinTxForwardedBytes, cienaCesPmInstanceAdjustmentTcaEntry=cienaCesPmInstanceAdjustmentTcaEntry, cienaCesPmTdmT1PortCurr24HBinCvl=cienaCesPmTdmT1PortCurr24HBinCvl, cienaCesPmTdmPwCurrBinTxPkt=cienaCesPmTdmPwCurrBinTxPkt, cienaCesPmBasicPtpHist24HBinDuration=cienaCesPmBasicPtpHist24HBinDuration, cienaCesPmIntervalProfileOverflowThresholdPercentage=cienaCesPmIntervalProfileOverflowThresholdPercentage, cienaCesPmTdmE1PortCurr24HBinTable=cienaCesPmTdmE1PortCurr24HBinTable, cienaCesPmBasicTxRxBiDirHist24HBinTable=cienaCesPmBasicTxRxBiDirHist24HBinTable, cienaCesPmBasicTxRxCurrBinRxYellowBytes=cienaCesPmBasicTxRxCurrBinRxYellowBytes, cienaCesPmIGMPAllTimeBinIgmpnumBadChecksum=cienaCesPmIGMPAllTimeBinIgmpnumBadChecksum, cienaCesPmTdmE1PortHist24HBinSes=cienaCesPmTdmE1PortHist24HBinSes, cienaCesPmTdmE1PortStatisticsBinEb=cienaCesPmTdmE1PortStatisticsBinEb, cienaCesPmBasicOduStatsBinStartTime=cienaCesPmBasicOduStatsBinStartTime, cienaCesPmBasicPtpCurrBinStartTime=cienaCesPmBasicPtpCurrBinStartTime, cienaCesPmIGMPCurrBinIgmpnumQueryDiscards=cienaCesPmIGMPCurrBinIgmpnumQueryDiscards, cienaCesPmTdmPwHistoryBinLops=cienaCesPmTdmPwHistoryBinLops, cienaCesPmTdmT1PortHistoryBinSesl=cienaCesPmTdmT1PortHistoryBinSesl, cienaCesPmTdmE1PortCurr24HBinEb=cienaCesPmTdmE1PortCurr24HBinEb, cienaCesPmExtendedTxRxStatsBin1024To1518OctsPkts=cienaCesPmExtendedTxRxStatsBin1024To1518OctsPkts, cienaCesPmExtendedTxRxCurrBinJabbersPkts=cienaCesPmExtendedTxRxCurrBinJabbersPkts, cienaCesPmTdmE1PortHistoryBinTt=cienaCesPmTdmE1PortHistoryBinTt, cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedBytes, cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedFrames, cienaCesPmExtendedTxRxStatsBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxStatsBinTx2048To4095OctsPkts, cienaCesPmBasicPtpHist24HBinEntry=cienaCesPmBasicPtpHist24HBinEntry, cienaCesPmBasicPtpCurrBinState=cienaCesPmBasicPtpCurrBinState, cienaCesPmBasicTxHistoryBinState=cienaCesPmBasicTxHistoryBinState, cienaCesPmExtendedTxRxStatsBinTxDeferPkts=cienaCesPmExtendedTxRxStatsBinTxDeferPkts, cienaCesPmEgressQueueStatsBinMulticastEnqueuedBytes=cienaCesPmEgressQueueStatsBinMulticastEnqueuedBytes, cienaCesPmExtendedTxRxStatsBinOversizePkts=cienaCesPmExtendedTxRxStatsBinOversizePkts, cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMax=cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMax, cienaCesPmAlertTcaSampleEndTime=cienaCesPmAlertTcaSampleEndTime, cienaCesPmTdmT1PortStatisticsBinLossl=cienaCesPmTdmT1PortStatisticsBinLossl, cienaCesPmAccessHistoryBinClearTime=cienaCesPmAccessHistoryBinClearTime, cienaCesPmBasicTxRxCurr24HBinRxYellowFrames=cienaCesPmBasicTxRxCurr24HBinRxYellowFrames, cienaCesPmTdmPwCurrBinDuration=cienaCesPmTdmPwCurrBinDuration, cienaCesPmBasicTxRxStatsBinTxForwardedFrames=cienaCesPmBasicTxRxStatsBinTxForwardedFrames, cienaCesPmBasicOduCurr24HBinSesOdu=cienaCesPmBasicOduCurr24HBinSesOdu, cienaCesPmQueueGroupStatsBinDroppedBytes=cienaCesPmQueueGroupStatsBinDroppedBytes, cienaCesPmAlertTcaSampleStartTime=cienaCesPmAlertTcaSampleStartTime, cienaCesPmIGMPCurr24HBinEntry=cienaCesPmIGMPCurr24HBinEntry, cienaCesPmExtendedTxRxCurrBinRxUcastPkts=cienaCesPmExtendedTxRxCurrBinRxUcastPkts, cienaCesPmBasicRxStatisticsBinTable=cienaCesPmBasicRxStatisticsBinTable, cienaCesPmTdmOCnPortStatisticsBinAisl=cienaCesPmTdmOCnPortStatisticsBinAisl, cienaCesPmTdmE1PortHist24HBinTable=cienaCesPmTdmE1PortHist24HBinTable, cienaCesPmBasicOduCurr24HBinFieldsUnsupported=cienaCesPmBasicOduCurr24HBinFieldsUnsupported, cienaCesPmExtendedTxRxCurrBin1519To2047OctsPkts=cienaCesPmExtendedTxRxCurrBin1519To2047OctsPkts, cienaCesPmBasicPtpHist24HBinStartTime=cienaCesPmBasicPtpHist24HBinStartTime, cienaCesPmExtendedTxRxHist24HBinTxBcastPkts=cienaCesPmExtendedTxRxHist24HBinTxBcastPkts, cienaCesPmBasicOtuCurr24HBinQMaxOtu=cienaCesPmBasicOtuCurr24HBinQMaxOtu, cienaCesPmExtendedTxRxCurrBinTxBytes=cienaCesPmExtendedTxRxCurrBinTxBytes, cienaCesPmTdmE1PortHistoryBinTable=cienaCesPmTdmE1PortHistoryBinTable, cienaCesPmExtendedTxRxCurrBinRxBytes=cienaCesPmExtendedTxRxCurrBinRxBytes, cienaCesPmAccessCurr24HBinAccessHitBytes=cienaCesPmAccessCurr24HBinAccessHitBytes, cienaCesPmBasicOduHist24HBinFieldsUnsupported=cienaCesPmBasicOduHist24HBinFieldsUnsupported, cienaCesPmBasicTxRxCurr24HBinRxBytesPerSec=cienaCesPmBasicTxRxCurr24HBinRxBytesPerSec, cienaCesPmBasicPtpHistoryBinDgdMaxOch=cienaCesPmBasicPtpHistoryBinDgdMaxOch, cienaCesPmBasicOtuHist24HBinDuration=cienaCesPmBasicOtuHist24HBinDuration, cienaCesPmBasicOtuHistoryBinTable=cienaCesPmBasicOtuHistoryBinTable, cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedFrames, cienaCesPmBasicOduTotalStatsBinStartTime=cienaCesPmBasicOduTotalStatsBinStartTime, cienaCesPmExtendedTxRxCurrBinTxBcastPkts=cienaCesPmExtendedTxRxCurrBinTxBcastPkts, cienaCesPmExtendedTxRxTotalStatsBinTxBytesPerSec=cienaCesPmExtendedTxRxTotalStatsBinTxBytesPerSec, cienaCesPmBasicOtuCurr24HBinQAvgOtu=cienaCesPmBasicOtuCurr24HBinQAvgOtu, cienaCesPmIGMPStatsBinIgmpnumL2L3Mismatch=cienaCesPmIGMPStatsBinIgmpnumL2L3Mismatch, PmBinState=PmBinState, cienaCesPmBasicRxHistoryBinBasicRxFramesPerSec=cienaCesPmBasicRxHistoryBinBasicRxFramesPerSec, cienaCesPmQueueGroupCurr24HBinEntry=cienaCesPmQueueGroupCurr24HBinEntry, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowBytes, cienaCesPmBasicTxRxCurr24HBinRxFramesPerSec=cienaCesPmBasicTxRxCurr24HBinRxFramesPerSec, cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkTime=cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkTime, cienaCesPmExtendedTxRxStatsBinTx65To127OctsPkts=cienaCesPmExtendedTxRxStatsBinTx65To127OctsPkts, cienaCesPmIGMPTotalStatsBinIgmpnumBadChecksum=cienaCesPmIGMPTotalStatsBinIgmpnumBadChecksum, cienaCesPmIGMPCurrBinIgmpnumRouterDiscards=cienaCesPmIGMPCurrBinIgmpnumRouterDiscards, cienaCesPmQueueGroupHistoryBinIndex=cienaCesPmQueueGroupHistoryBinIndex, cienaCesPmBasicRxCurr24HBinBasicRxBytesPerSec=cienaCesPmBasicRxCurr24HBinBasicRxBytesPerSec, cienaCesPmBasicTxRxBiDirHistoryBinRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinRevTxBytesPerSec, cienaCesPmBasicOduCurr24HBinDuration=cienaCesPmBasicOduCurr24HBinDuration, cienaCesPmAdjustmentTcaSampleStartTime=cienaCesPmAdjustmentTcaSampleStartTime, cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedFrames=cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedFrames, cienaCesPmBasicPtpStatsBinClearTime=cienaCesPmBasicPtpStatsBinClearTime, cienaCesPmAlertTcaSamplesProcessedCurrentInterval=cienaCesPmAlertTcaSamplesProcessedCurrentInterval, cienaCesPmExtendedTxRxTotalStatsBin256To511OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin256To511OctsPkts, cienaCesPmExtendedTxRxCurrBinRxCrcErrorPkts=cienaCesPmExtendedTxRxCurrBinRxCrcErrorPkts, cienaCesPmTdmOCnPortTotalStatisticsBinEsl=cienaCesPmTdmOCnPortTotalStatisticsBinEsl, cienaCesPmIGMPHist24HBinIgmpnumResourceExceed=cienaCesPmIGMPHist24HBinIgmpnumResourceExceed, cienaCesPmBasicTxRxBiDirCurr24HBinState=cienaCesPmBasicTxRxBiDirCurr24HBinState, cienaCesPmIGMPAllTimeBinIgmpnumLeaves=cienaCesPmIGMPAllTimeBinIgmpnumLeaves, cienaCesPmBasicTxRxBiDirCurrBinRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirCurrBinRevTxFramesPerSec, cienaCesPmBasicPtpCurr24HBinState=cienaCesPmBasicPtpCurr24HBinState, cienaCesPmInstanceEndTimeValue=cienaCesPmInstanceEndTimeValue, cienaCesPmBasicRxHistoryBinBasicRxYellowBytes=cienaCesPmBasicRxHistoryBinBasicRxYellowBytes, cienaCesPmTdmE1PortTotalStatisticsBinTable=cienaCesPmTdmE1PortTotalStatisticsBinTable, cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedBytes, cienaCesPmExtendedTxRxHist24HBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx4096To9216OctsPkts, cienaCesPmExtendedTxRxHist24HBinClearTime=cienaCesPmExtendedTxRxHist24HBinClearTime, cienaCesPmExtendedTxRxHistoryBinTxLateCollPkts=cienaCesPmExtendedTxRxHistoryBinTxLateCollPkts, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortBlock, cienaCesPmExtendedTxRxHist24HBinFragmentsPkts=cienaCesPmExtendedTxRxHist24HBinFragmentsPkts, cienaCesPmAdjustmentTcaUnderflowConfigStatus=cienaCesPmAdjustmentTcaUnderflowConfigStatus, cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValue=cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValue, cienaCesPmTdmT1PortHistoryBinCvl=cienaCesPmTdmT1PortHistoryBinCvl, cienaCesPmAdjustmentTcaBasisValueMin=cienaCesPmAdjustmentTcaBasisValueMin, cienaCesPmBasicTxRxAllTimeBinBasicRxYellowBytes=cienaCesPmBasicTxRxAllTimeBinBasicRxYellowBytes, cienaCesPmBasicOtuTotalStatsBinUncFecBlkOtu=cienaCesPmBasicOtuTotalStatsBinUncFecBlkOtu, cienaCesPmTdmOCnPortCurrBinAs=cienaCesPmTdmOCnPortCurrBinAs, cienaCesPmBasicOtuHist24HBinFieldsInvalid=cienaCesPmBasicOtuHist24HBinFieldsInvalid, cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMin=cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMin, cienaCesPmTdmPwHist24HBinTable=cienaCesPmTdmPwHist24HBinTable, cienaCesPmBasicTxRxBiDirStatsBinRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirStatsBinRevTxFramesPerSec, cienaCesPmTdmE1PortHist24HBinEntry=cienaCesPmTdmE1PortHist24HBinEntry, cienaCesPmFloodContainerHistoryBinStartTime=cienaCesPmFloodContainerHistoryBinStartTime, cienaCesPmBasicRxStatsBinBasicRxYellowBytes=cienaCesPmBasicRxStatsBinBasicRxYellowBytes, cienaCesPmQueueGroupCurr24HBinStartTime=cienaCesPmQueueGroupCurr24HBinStartTime, cienaCesPmTdmE1PortStatisticsBinStartTime=cienaCesPmTdmE1PortStatisticsBinStartTime, cienaCesPmBasicOtuHistoryBinStartTime=cienaCesPmBasicOtuHistoryBinStartTime, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortDown, PmTcaConfigStatus=PmTcaConfigStatus, cienaCesPmIGMPAllTimeBinIgmpnumL2L3Mismatch=cienaCesPmIGMPAllTimeBinIgmpnumL2L3Mismatch, cienaCesPmIGMPStatsBinIgmpnumResourceExceed=cienaCesPmIGMPStatsBinIgmpnumResourceExceed, cienaCesPmTdmE1PortCurrBinBbe=cienaCesPmTdmE1PortCurrBinBbe, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxBytesPerSec, cienaCesPmTdmDS3PortHistoryBinPses=cienaCesPmTdmDS3PortHistoryBinPses, cienaCesPmAccessHist24HBinEntry=cienaCesPmAccessHist24HBinEntry, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxBytesPerSec, cienaCesPmTdmDS3PortHist24HBinEsl=cienaCesPmTdmDS3PortHist24HBinEsl, cienaCesPmAlertTcaSamplesDiscardedCurrentInterval=cienaCesPmAlertTcaSamplesDiscardedCurrentInterval, cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirStatsBinRevRxDroppedBytes, cienaCesPmEgressQueueHistoryBinMulticastEnqueuedFrames=cienaCesPmEgressQueueHistoryBinMulticastEnqueuedFrames, cienaCesPmInstanceIndexXrefAutoEntry=cienaCesPmInstanceIndexXrefAutoEntry, cienaCesPmBasicRxTotalStatsBinBasicRxFramesPerSec=cienaCesPmBasicRxTotalStatsBinBasicRxFramesPerSec, cienaCesPmBasicOtuHist24HBinSefsOtu=cienaCesPmBasicOtuHist24HBinSefsOtu, cienaCesPmTdmOCnPortCurr24HBinStartTime=cienaCesPmTdmOCnPortCurr24HBinStartTime, cienaCesPmTdmPwHist24HBinMissorder=cienaCesPmTdmPwHist24HBinMissorder, cienaCesPmBasicPtpHist24HBinOprAvgOch=cienaCesPmBasicPtpHist24HBinOprAvgOch, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxFramesPerSec, cienaCesPmAccessHist24HBinState=cienaCesPmAccessHist24HBinState, cienaCesPmAdjustmentTcaIntervalStartTime=cienaCesPmAdjustmentTcaIntervalStartTime, cienaCesPmExtendedTxRxStats=cienaCesPmExtendedTxRxStats, cienaCesPmBasicOtuHistoryBinDuration=cienaCesPmBasicOtuHistoryBinDuration, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortDown, cienaCesPmFloodContainerStatsBinBcastDroppedFrames=cienaCesPmFloodContainerStatsBinBcastDroppedFrames, cienaCesPmExtendedTxRxHist24HBin2048To4095OctsPkts=cienaCesPmExtendedTxRxHist24HBin2048To4095OctsPkts, cienaCesPmEgressQueueStatsBinStartTime=cienaCesPmEgressQueueStatsBinStartTime, cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedFrames, cienaCesPmExtendedTxRxAllTimeBinRxBytesPerSec=cienaCesPmExtendedTxRxAllTimeBinRxBytesPerSec, cienaCesPmBasicOduCurr24HBinTable=cienaCesPmBasicOduCurr24HBinTable, cienaCesPmBasicOtuCurr24HBinPfBerEOtu=cienaCesPmBasicOtuCurr24HBinPfBerEOtu, cienaCesPmTdmPwHist24HBinSes=cienaCesPmTdmPwHist24HBinSes, cienaCesPmInstanceIndexXrefAutoTable=cienaCesPmInstanceIndexXrefAutoTable, cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedBytes, cienaCesPmFloodContainerAllTimeBinEntry=cienaCesPmFloodContainerAllTimeBinEntry, cienaCesPmBasicOtuHistoryBinQAvgOtu=cienaCesPmBasicOtuHistoryBinQAvgOtu, cienaCesPmBasicOtuHistoryBinIndex=cienaCesPmBasicOtuHistoryBinIndex, cienaCesPmQueueGroupHist24HBinEntry=cienaCesPmQueueGroupHist24HBinEntry, cienaCesPmTdmOCnPortCurr24HBinState=cienaCesPmTdmOCnPortCurr24HBinState, cienaCesPmExtendedTxRxTotalStatsBinRxBcastPkts=cienaCesPmExtendedTxRxTotalStatsBinRxBcastPkts, cienaCesPmTdmT1PortStatisticsBinEsl=cienaCesPmTdmT1PortStatisticsBinEsl, cienaCesPmBasicOtuCurr24HBinFecOtu=cienaCesPmBasicOtuCurr24HBinFecOtu, cienaCesPmExtendedTxRxTotalStatsBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx1024To1518OctsPkts, cienaCesPmBasicOtuHist24HBinStartTime=cienaCesPmBasicOtuHist24HBinStartTime, cienaCesPmTdmOCnPortTotalStatisticsBinSefss=cienaCesPmTdmOCnPortTotalStatisticsBinSefss, cienaCesPmBasicPtpHistoryBinClearTime=cienaCesPmBasicPtpHistoryBinClearTime, cienaCesPmBasicPtpHist24HBinOprMinOts=cienaCesPmBasicPtpHist24HBinOprMinOts, cienaCesPmExtendedTxRxTotalStatisticsBinTable=cienaCesPmExtendedTxRxTotalStatisticsBinTable, cienaCesPmIGMPTotalStatsBinIgmpnumHostDiscards=cienaCesPmIGMPTotalStatsBinIgmpnumHostDiscards, cienaCesPmTdmPwStatisticsBinUnderrun=cienaCesPmTdmPwStatisticsBinUnderrun, cienaCesPmTdmOCnPortHistoryBinStartTime=cienaCesPmTdmOCnPortHistoryBinStartTime, cienaCesPmTdmE1PortCurr24HBinBbe=cienaCesPmTdmE1PortCurr24HBinBbe, cienaCesPmBasicPtpStatsBinOptMaxOch=cienaCesPmBasicPtpStatsBinOptMaxOch, cienaCesPmExtendedTxRxStatsBinRxCrcErrorPkts=cienaCesPmExtendedTxRxStatsBinRxCrcErrorPkts, cienaCesPmInstanceClear=cienaCesPmInstanceClear, cienaCesPmTdmPwCurrBinRxPkt=cienaCesPmTdmPwCurrBinRxPkt, cienaCesPmTdmDS3PortHistoryBinCvl=cienaCesPmTdmDS3PortHistoryBinCvl, cienaCesPmTdmPwCurrBinReorder=cienaCesPmTdmPwCurrBinReorder, cienaCesPmBasicOtuHist24HBinUncFecBlkOtu=cienaCesPmBasicOtuHist24HBinUncFecBlkOtu, cienaCesPmTdmOCnPortCurrBinEss=cienaCesPmTdmOCnPortCurrBinEss, cienaCesPmTdmPwHist24HBinMalformed=cienaCesPmTdmPwHist24HBinMalformed, cienaCesPmExtendedTxRxHist24HBinRxUcastPkts=cienaCesPmExtendedTxRxHist24HBinRxUcastPkts, cienaCesPmExtendedTxRxTotalStatsBinTxGiantPkts=cienaCesPmExtendedTxRxTotalStatsBinTxGiantPkts, cienaCesPmEgressQueueCurrBinMulticastDroppedFrames=cienaCesPmEgressQueueCurrBinMulticastDroppedFrames, cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowBytes)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmExtendedTxRxStatsBinTxCrcErrorPkts=cienaCesPmExtendedTxRxStatsBinTxCrcErrorPkts, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedBytes, cienaCesPmExtendedTxRxHist24HBinTxLOutRangePkts=cienaCesPmExtendedTxRxHist24HBinTxLOutRangePkts, cienaCesPmBasicRxHistoryBinClearTime=cienaCesPmBasicRxHistoryBinClearTime, cienaCesPmEgressQueueHist24HBinUnicastDroppedBytes=cienaCesPmEgressQueueHist24HBinUnicastDroppedBytes, cienaCesPmTdmDS3PortCurrBinClearTime=cienaCesPmTdmDS3PortCurrBinClearTime, cienaCesPmBasicTxRxCurrBinTxFramesPerSec=cienaCesPmBasicTxRxCurrBinTxFramesPerSec, cienaCesPmExtendedTxRxTotalStatsBin1024To1518OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin1024To1518OctsPkts, cienaCesPmInstanceIntervalProfileIndex=cienaCesPmInstanceIntervalProfileIndex, cienaCesPmAdjustmentTcaLastOverflowTcaUnits=cienaCesPmAdjustmentTcaLastOverflowTcaUnits, cienaCesPmExtendedTxRxCurrBin2048To4095OctsPkts=cienaCesPmExtendedTxRxCurrBin2048To4095OctsPkts, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowBytes, cienaCesPmFloodContainerCurr24HBinClearedTime=cienaCesPmFloodContainerCurr24HBinClearedTime, cienaCesPmExtendedTxRxHist24HBin65To127OctsPkts=cienaCesPmExtendedTxRxHist24HBin65To127OctsPkts, cienaCesPmIGMPTotalStatsBinIgmpnumJoins=cienaCesPmIGMPTotalStatsBinIgmpnumJoins, cienaCesPmBasicPtpHist24HBinOprnOts=cienaCesPmBasicPtpHist24HBinOprnOts, cienaCesPmBasicTxRxTotalStatsBinRxDroppedBytes=cienaCesPmBasicTxRxTotalStatsBinRxDroppedBytes, cienaCesPmExtendedTxRxCurrBinTxBytesPerSec=cienaCesPmExtendedTxRxCurrBinTxBytesPerSec, cienaCesPmIGMPStatsBinStartTime=cienaCesPmIGMPStatsBinStartTime, cienaCesPmBasicOduCurrBinFieldsUnsupported=cienaCesPmBasicOduCurrBinFieldsUnsupported, cienaCesPmFloodContainerStatisticsBinTable=cienaCesPmFloodContainerStatisticsBinTable, cienaCesPmBasicOtuCurrBinTable=cienaCesPmBasicOtuCurrBinTable, cienaCesPmAdjustmentTcaLastUnderflowTcaUnits=cienaCesPmAdjustmentTcaLastUnderflowTcaUnits, cienaCesPmBasicOduHist24HBinUasOdu=cienaCesPmBasicOduHist24HBinUasOdu, cienaCesPmBasicOtuHistoryBinFieldsInvalid=cienaCesPmBasicOtuHistoryBinFieldsInvalid, cienaCesPmTdmPwHistoryBinUnderrun=cienaCesPmTdmPwHistoryBinUnderrun, cienaCesPmTdmE1PortHist24HBinBbe=cienaCesPmTdmE1PortHist24HBinBbe, cienaCesPmTdmE1PortHistoryBinStartTime=cienaCesPmTdmE1PortHistoryBinStartTime, cienaCesPmBasicTxRxHistoryBinClearTime=cienaCesPmBasicTxRxHistoryBinClearTime, cienaCesPmTdmOCnPortHistoryBinTt=cienaCesPmTdmOCnPortHistoryBinTt, cienaCesPmTdmDS3PortHistoryBinStartTime=cienaCesPmTdmDS3PortHistoryBinStartTime, cienaCesPmAccessAllTimeBinAccessHitBytes=cienaCesPmAccessAllTimeBinAccessHitBytes, cienaCesPmTdmDS3PortCurrBinCvl=cienaCesPmTdmDS3PortCurrBinCvl, cienaCesPmTdmPwCurrBinEntry=cienaCesPmTdmPwCurrBinEntry, cienaCesPmBasicOtuHist24HBinState=cienaCesPmBasicOtuHist24HBinState, cienaCesPmTdmT1PortHistoryBinUasp=cienaCesPmTdmT1PortHistoryBinUasp, cienaCesPmExtendedTxRxCurr24HBinRxMcastPkts=cienaCesPmExtendedTxRxCurr24HBinRxMcastPkts, cienaCesPmTdmPwHist24HBinEsp=cienaCesPmTdmPwHist24HBinEsp, cienaCesPmBasicTxStatsBinStartTime=cienaCesPmBasicTxStatsBinStartTime, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxFramesPerSec, cienaCesPmBasicOtuHist24HBinEsOtu=cienaCesPmBasicOtuHist24HBinEsOtu, cienaCesPmTdmOCnPortHist24HBinSess=cienaCesPmTdmOCnPortHist24HBinSess, cienaCesPmTdmPwHistoryBinSes=cienaCesPmTdmPwHistoryBinSes, cienaCesPmTdmPwCurrBinMissorder=cienaCesPmTdmPwCurrBinMissorder, cienaCesPmExtendedTxRxCurrBinTxUnderRunPkts=cienaCesPmExtendedTxRxCurrBinTxUnderRunPkts, cienaCesPmBasicRxTotalStatsBinBasicRxDroppedFrames=cienaCesPmBasicRxTotalStatsBinBasicRxDroppedFrames, cienaCesPmAccessHist24HBinTable=cienaCesPmAccessHist24HBinTable, cienaCesPmExtendedTxRxHist24HBinTxMcastPkts=cienaCesPmExtendedTxRxHist24HBinTxMcastPkts, cienaCesPmBasicTxRxBiDirCurrBinState=cienaCesPmBasicTxRxBiDirCurrBinState, cienaCesPmBasicRxCurr24HBinBasicRxDroppedBytes=cienaCesPmBasicRxCurr24HBinBasicRxDroppedBytes, cienaCesPmFloodContainerTotalStatsBinL2McastDroppedFrames=cienaCesPmFloodContainerTotalStatsBinL2McastDroppedFrames, cienaCesPmBasicOtuTotalStatsBinQMinOtu=cienaCesPmBasicOtuTotalStatsBinQMinOtu, cienaCesPmAdjustmentTcaBasisValueMax=cienaCesPmAdjustmentTcaBasisValueMax, cienaCesPmExtendedTxRxHistoryBinTxDeferPkts=cienaCesPmExtendedTxRxHistoryBinTxDeferPkts, cienaCesPmFloodContainerCurr24HBinEndTime=cienaCesPmFloodContainerCurr24HBinEndTime, cienaCesPmIGMPCurr24HBinIgmpnumQueries=cienaCesPmIGMPCurr24HBinIgmpnumQueries, cienaCesPmBasicPtpStatsBinOprOts=cienaCesPmBasicPtpStatsBinOprOts, cienaCesPmTdmT1PortHistoryBinCvp=cienaCesPmTdmT1PortHistoryBinCvp, cienaCesPmAccessAllTimeBinEntry=cienaCesPmAccessAllTimeBinEntry, cienaCesPmTdmT1PortHist24HBinEsp=cienaCesPmTdmT1PortHist24HBinEsp, cienaCesPmTdmPwHist24HBinUasp=cienaCesPmTdmPwHist24HBinUasp, cienaCesPmBasicOtuStatsBinPrfBerMaxOtu=cienaCesPmBasicOtuStatsBinPrfBerMaxOtu, cienaCesPmTdmOCnPortCurr24HBinTable=cienaCesPmTdmOCnPortCurr24HBinTable, cienaCesPmQueueGroupCurrBinDroppedBytes=cienaCesPmQueueGroupCurrBinDroppedBytes, cienaCesPmExtendedTxRxCurrBinLinkDown=cienaCesPmExtendedTxRxCurrBinLinkDown, cienaCesPmBasicRxCurrBinClearedTime=cienaCesPmBasicRxCurrBinClearedTime, cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedBytes, cienaCesPmExtendedTxRxStatsBinLinkDown=cienaCesPmExtendedTxRxStatsBinLinkDown, cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedFrames=cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedFrames, cienaCesPmExtendedTxRxCurr24HBinTxExDeferPkts=cienaCesPmExtendedTxRxCurr24HBinTxExDeferPkts, cienaCesPmBasicRxTotalStatsBinBasicRxDroppedBytes=cienaCesPmBasicRxTotalStatsBinBasicRxDroppedBytes, cienaCesPmExtendedTxRxCurr24HBinRxBytesPerSec=cienaCesPmExtendedTxRxCurr24HBinRxBytesPerSec, cienaCesPmAdjustmentTcaOverflowHighWatermarkTime=cienaCesPmAdjustmentTcaOverflowHighWatermarkTime, cienaCesPmExtendedTxRxHist24HBinState=cienaCesPmExtendedTxRxHist24HBinState, cienaCesPmTdmDS3PortHist24HBinEntry=cienaCesPmTdmDS3PortHist24HBinEntry, cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedBytes=cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedBytes, cienaCesPmExtendedTxRxTotalStatsBinTxExDeferPkts=cienaCesPmExtendedTxRxTotalStatsBinTxExDeferPkts, cienaCesPmExtendedTxRxTotalStatsBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx2048To4095OctsPkts, cienaCesPmInstanceStartTimeValue=cienaCesPmInstanceStartTimeValue, cienaCesPmTdmT1PortHistoryBinStartTime=cienaCesPmTdmT1PortHistoryBinStartTime, cienaCesPmTdmOCnPortHist24HBinAs=cienaCesPmTdmOCnPortHist24HBinAs, cienaCesPmBasicOduHist24HBinFieldsInvalid=cienaCesPmBasicOduHist24HBinFieldsInvalid, cienaCesPmTdmOCnPortTotalStatisticsBinBbe=cienaCesPmTdmOCnPortTotalStatisticsBinBbe, cienaCesPmExtendedTxRxCurrBin1024To1518OctsPkts=cienaCesPmExtendedTxRxCurrBin1024To1518OctsPkts, cienaCesPmTdmPwCurr24HBinEs=cienaCesPmTdmPwCurr24HBinEs, cienaCesPmBasicTxCurr24HBinTable=cienaCesPmBasicTxCurr24HBinTable, cienaCesPmBasicTxStatsBinClearTime=cienaCesPmBasicTxStatsBinClearTime, cienaCesPmBasicTxCurrBinTxBytesPerSec=cienaCesPmBasicTxCurrBinTxBytesPerSec, cienaCesPmEgressQueueCurrBinEntry=cienaCesPmEgressQueueCurrBinEntry, cienaCesPmExtendedTxRxTotalStatsBinTx65To127OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx65To127OctsPkts, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsPortBlock, cienaCesPmBasicOtuStatsBinQMinOtu=cienaCesPmBasicOtuStatsBinQMinOtu, cienaCesPmBasicOtuTotalStatsBinQMaxOtu=cienaCesPmBasicOtuTotalStatsBinQMaxOtu, cienaCesPmTdmOCnPortHistoryBinSes=cienaCesPmTdmOCnPortHistoryBinSes, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxFramesPerSec, cienaCesPmBasicPtpHistoryBinStartTime=cienaCesPmBasicPtpHistoryBinStartTime, cienaCesPmMIBNotifications=cienaCesPmMIBNotifications, cienaCesPmTdmPwTotalStatisticsBinReorder=cienaCesPmTdmPwTotalStatisticsBinReorder, cienaCesPmBasicOduTotalStatsBinFcOdu=cienaCesPmBasicOduTotalStatsBinFcOdu, cienaCesPmBasicPtpTotalStatsBinOprnOch=cienaCesPmBasicPtpTotalStatsBinOprnOch, cienaCesPmExtendedTxRxCurr24HBinRxPkts=cienaCesPmExtendedTxRxCurr24HBinRxPkts, PYSNMP_MODULE_ID=cienaCesPmMib, cienaCesPmExtendedTxRxStatsBinRxMcastPkts=cienaCesPmExtendedTxRxStatsBinRxMcastPkts, cienaCesPmBasicTxRxHistoryBinState=cienaCesPmBasicTxRxHistoryBinState, cienaCesPmTdmPwCurr24HBinMissorder=cienaCesPmTdmPwCurr24HBinMissorder, cienaCesPmBasicTxRxCurr24HBinTxForwardedBytes=cienaCesPmBasicTxRxCurr24HBinTxForwardedBytes, cienaCesPmTdmOCnPortCurr24HBinEsl=cienaCesPmTdmOCnPortCurr24HBinEsl, cienaCesPmTdmOCnPortTotalStatisticsBinLoss=cienaCesPmTdmOCnPortTotalStatisticsBinLoss, cienaCesPmBasicPtpCurrBinFieldsUnsupported=cienaCesPmBasicPtpCurrBinFieldsUnsupported, cienaCesPmTdmPwCurrBinFcp=cienaCesPmTdmPwCurrBinFcp, cienaCesPmTdmOCnPortCurrBinStartTime=cienaCesPmTdmOCnPortCurrBinStartTime, cienaCesPmExtendedTxRxHistoryBinEndTime=cienaCesPmExtendedTxRxHistoryBinEndTime, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxBytesPerSec, cienaCesPmBasicTxCurr24HBinStartTime=cienaCesPmBasicTxCurr24HBinStartTime, cienaCesPmIntervalProfileUnderflowThreshold=cienaCesPmIntervalProfileUnderflowThreshold, cienaCesPmTdmDS3PortStatisticsBinPuas=cienaCesPmTdmDS3PortStatisticsBinPuas, cienaCesPmBasicTxRxCurr24HBinClearedTime=cienaCesPmBasicTxRxCurr24HBinClearedTime, cienaCesPmTdmPwTotalStatisticsBinMissorder=cienaCesPmTdmPwTotalStatisticsBinMissorder, cienaCesPmQueueGroupStatisticsBinTable=cienaCesPmQueueGroupStatisticsBinTable, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxYellowBytes, cienaCesPmTdmT1PortCurr24HBinEsl=cienaCesPmTdmT1PortCurr24HBinEsl, cienaCesPmBasicTxRxStatisticsBinTable=cienaCesPmBasicTxRxStatisticsBinTable, cienaCesPmBasicOtuHist24HBinHccsOtu=cienaCesPmBasicOtuHist24HBinHccsOtu, cienaCesPmBasicRxCurrBinEntry=cienaCesPmBasicRxCurrBinEntry, cienaCesPmBasicOtuCurrBinFecOtu=cienaCesPmBasicOtuCurrBinFecOtu, cienaCesPmBasicTxRxStatsBinRxYellowFrames=cienaCesPmBasicTxRxStatsBinRxYellowFrames, cienaCesPmBasicRxCurr24HBinBasicRxFramesPerSec=cienaCesPmBasicRxCurr24HBinBasicRxFramesPerSec, cienaCesPmTdmT1PortHistoryBinLossl=cienaCesPmTdmT1PortHistoryBinLossl, cienaCesPmFloodContainerHist24HBinEntry=cienaCesPmFloodContainerHist24HBinEntry, cienaCesPmTdmT1PortCurr24HBinSesl=cienaCesPmTdmT1PortCurr24HBinSesl, cienaCesPmExtendedTxRxHist24HBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx1024To1518OctsPkts, cienaCesPmFloodContainerHistoryBinBcastDroppedBytes=cienaCesPmFloodContainerHistoryBinBcastDroppedBytes, cienaCesPmExtendedTxRxCurrBinTxExDeferPkts=cienaCesPmExtendedTxRxCurrBinTxExDeferPkts, cienaCesPmExtendedTxRxCurrBinDuration=cienaCesPmExtendedTxRxCurrBinDuration, cienaCesPmTdmT1PortStatisticsBinCvl=cienaCesPmTdmT1PortStatisticsBinCvl, cienaCesPmTdmDS3PortTotalStatisticsBinTable=cienaCesPmTdmDS3PortTotalStatisticsBinTable, cienaCesPmAdjustmentTcaLastUnderflowTcaTime=cienaCesPmAdjustmentTcaLastUnderflowTcaTime, cienaCesPmTdmPwCurr24HBinSes=cienaCesPmTdmPwCurr24HBinSes, cienaCesPmIGMPAllTimeBinIgmpnumJoins=cienaCesPmIGMPAllTimeBinIgmpnumJoins, cienaCesPmTdmT1PortTotalStatisticsBinEsp=cienaCesPmTdmT1PortTotalStatisticsBinEsp, cienaCesPmTdmPwStatisticsBinReorder=cienaCesPmTdmPwStatisticsBinReorder, cienaCesPmBasicTxRxBiDirStatsBinFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirStatsBinFwdTxBytesPerSec, cienaCesPmExtendedTxRxHist24HBin64OctsPkts=cienaCesPmExtendedTxRxHist24HBin64OctsPkts, cienaCesPmTdmPwHistoryBinClearTime=cienaCesPmTdmPwHistoryBinClearTime, cienaCesPmBasicOtuHist24HBinCvOtu=cienaCesPmBasicOtuHist24HBinCvOtu, cienaCesPmTdmPwTotalStatisticsBinUnderrun=cienaCesPmTdmPwTotalStatisticsBinUnderrun, cienaCesPmBasicOtuTotalStatisticsBinTable=cienaCesPmBasicOtuTotalStatisticsBinTable, cienaCesPmExtendedTxRxStatsBinTxBytes=cienaCesPmExtendedTxRxStatsBinTxBytes, cienaCesPmBasicPtpCurrBinTable=cienaCesPmBasicPtpCurrBinTable, cienaCesPmIGMPCurr24HBinIgmpnumLeaves=cienaCesPmIGMPCurr24HBinIgmpnumLeaves, cienaCesPmExtendedTxRxAllTimeBinTxCollPkts=cienaCesPmExtendedTxRxAllTimeBinTxCollPkts, cienaCesPmEgressQueueTotalStatsBinUnicastDroppedBytes=cienaCesPmEgressQueueTotalStatsBinUnicastDroppedBytes, cienaCesPmBasicOduHistoryBinCvOdu=cienaCesPmBasicOduHistoryBinCvOdu, cienaCesPmExtendedTxRxCurr24HBin4096To9216OctsPkts=cienaCesPmExtendedTxRxCurr24HBin4096To9216OctsPkts, cienaCesPmTdmOCnPortStatisticsBinAs=cienaCesPmTdmOCnPortStatisticsBinAs, cienaCesPmIGMPHist24HBinIgmpnumJoins=cienaCesPmIGMPHist24HBinIgmpnumJoins, cienaCesPmTdmPwHistoryBinStartTime=cienaCesPmTdmPwHistoryBinStartTime, cienaCesPmTdmDS3PortCurrBinSefs=cienaCesPmTdmDS3PortCurrBinSefs, cienaCesPmBasicTxCurrBinStartTime=cienaCesPmBasicTxCurrBinStartTime, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscards=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscards, cienaCesPmAccessCurr24HBinEndTime=cienaCesPmAccessCurr24HBinEndTime, cienaCesPmExtendedTxRxCurr24HBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx512To1023OctsPkts, cienaCesPmBasicPtpCurr24HBinClearedTime=cienaCesPmBasicPtpCurr24HBinClearedTime, cienaCesPmExtendedTxRxCurr24HBinState=cienaCesPmExtendedTxRxCurr24HBinState, cienaCesPmTdmDS3PortCurr24HBinEsl=cienaCesPmTdmDS3PortCurr24HBinEsl, cienaCesPmTdmE1PortStatisticsBinClearTime=cienaCesPmTdmE1PortStatisticsBinClearTime, cienaCesPmEgressQueueHistoryBinEndTime=cienaCesPmEgressQueueHistoryBinEndTime, cienaCesPmExtendedTxRxAllTimeBin1024To1518OctsPkts=cienaCesPmExtendedTxRxAllTimeBin1024To1518OctsPkts, cienaCesPmTdmOCnPortTotalStatisticsBinEntry=cienaCesPmTdmOCnPortTotalStatisticsBinEntry, cienaCesPmBasicTxTotalStatsBinTxBytesPerSec=cienaCesPmBasicTxTotalStatsBinTxBytesPerSec, cienaCesPmBasicTxRxStatsBinRxFramesPerSec=cienaCesPmBasicTxRxStatsBinRxFramesPerSec, cienaCesPmTdmPwHist24HBinEndTime=cienaCesPmTdmPwHist24HBinEndTime, cienaCesPmEgressQueueHistoryBinDuration=cienaCesPmEgressQueueHistoryBinDuration, cienaCesPmEgressQueueHist24HBinClearTime=cienaCesPmEgressQueueHist24HBinClearTime, cienaCesPmQueueGroupHist24HBinStartTime=cienaCesPmQueueGroupHist24HBinStartTime, cienaCesPmExtendedTxRxCurrBinRxInErrorPkts=cienaCesPmExtendedTxRxCurrBinRxInErrorPkts, cienaCesPmBasicTxRxTotalStatsBinRxAcceptedBytes=cienaCesPmBasicTxRxTotalStatsBinRxAcceptedBytes, cienaCesPmBasicOtuStatsBinQAvgOtu=cienaCesPmBasicOtuStatsBinQAvgOtu, cienaCesPmBasicTxRxCurrBinRxYellowFrames=cienaCesPmBasicTxRxCurrBinRxYellowFrames, cienaCesPmAccessHistoryBinStartTime=cienaCesPmAccessHistoryBinStartTime, cienaCesPmEgressQueueStatisticsBinTable=cienaCesPmEgressQueueStatisticsBinTable, cienaCesPmExtendedTxRxCurrBinRxBcastPkts=cienaCesPmExtendedTxRxCurrBinRxBcastPkts, cienaCesPmBasicOtuHistoryBinQMaxOtu=cienaCesPmBasicOtuHistoryBinQMaxOtu, cienaCesPmTdmPwCurrBinEs=cienaCesPmTdmPwCurrBinEs, cienaCesPmTdmPwCurrBinMbit=cienaCesPmTdmPwCurrBinMbit, cienaCesPmAlertTcaConfigStatus=cienaCesPmAlertTcaConfigStatus, cienaCesPmBasicTxStatisticsBinEntry=cienaCesPmBasicTxStatisticsBinEntry, cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowBytes=cienaCesPmBasicTxRxBiDirStatsBinRevRxYellowBytes, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxBytesPerSec, cienaCesPmAdjustmentTcaEventsIntervalEndLowerBoundary=cienaCesPmAdjustmentTcaEventsIntervalEndLowerBoundary, cienaCesPmAlertTcaHighWatermarkStats=cienaCesPmAlertTcaHighWatermarkStats, cienaCesPmBasicRxTotalStatsBinBasicRxYellowFrames=cienaCesPmBasicRxTotalStatsBinBasicRxYellowFrames, cienaCesPmEgressQueueCurr24HBinUnicastDroppedBytes=cienaCesPmEgressQueueCurr24HBinUnicastDroppedBytes, cienaCesPmBasicTxRxCurr24HBinRxYellowBytes=cienaCesPmBasicTxRxCurr24HBinRxYellowBytes, cienaCesPmExtendedTxRxCurr24HBinInDiscards=cienaCesPmExtendedTxRxCurr24HBinInDiscards, cienaCesPmTdmE1PortCurrBinDuration=cienaCesPmTdmE1PortCurrBinDuration, cienaCesPmBasicPtpHistoryBinOptMinOch=cienaCesPmBasicPtpHistoryBinOptMinOch, cienaCesPmExtendedTxRxCurrBinInDiscards=cienaCesPmExtendedTxRxCurrBinInDiscards, cienaCesPmExtendedTxRxCurr24HBinTxPausePkts=cienaCesPmExtendedTxRxCurr24HBinTxPausePkts, cienaCesPmIGMPAllTimeBinIgmpnumRouterDiscards=cienaCesPmIGMPAllTimeBinIgmpnumRouterDiscards, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxFramesPerSec, cienaCesPmAccessHistoryBinState=cienaCesPmAccessHistoryBinState, cienaCesPmQueueGroupCurrBinDuration=cienaCesPmQueueGroupCurrBinDuration, cienaCesPmTdmE1PortStatisticsBinBbe=cienaCesPmTdmE1PortStatisticsBinBbe, cienaCesPmTdmT1PortHist24HBinSesp=cienaCesPmTdmT1PortHist24HBinSesp, cienaCesPmTdmOCnPortCurr24HBinBbe=cienaCesPmTdmOCnPortCurr24HBinBbe, cienaCesPmQueueGroupCurr24HBinClearedTime=cienaCesPmQueueGroupCurr24HBinClearedTime, cienaCesPmTdmOCnPortCurrBinSes=cienaCesPmTdmOCnPortCurrBinSes, cienaCesPmAccessCurr24HBinClearedTime=cienaCesPmAccessCurr24HBinClearedTime, cienaCesPmTdmT1PortCurr24HBinTable=cienaCesPmTdmT1PortCurr24HBinTable, cienaCesPmInstanceCollectionTimeFormat=cienaCesPmInstanceCollectionTimeFormat, cienaCesPmTdmE1PortHistoryBinEs=cienaCesPmTdmE1PortHistoryBinEs, cienaCesPmExtendedTxRxHistoryBinTxPausePkts=cienaCesPmExtendedTxRxHistoryBinTxPausePkts, cienaCesPmBasicTxRxBiDirCurr24HBinRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinRevTxFramesPerSec, cienaCesPmTdmPwTotalStatisticsBinMiss=cienaCesPmTdmPwTotalStatisticsBinMiss, cienaCesPmQueueGroupStatisticsBinEntry=cienaCesPmQueueGroupStatisticsBinEntry, cienaCesPmEgressQueueHist24HBinStartTime=cienaCesPmEgressQueueHist24HBinStartTime, cienaCesPmTdmE1PortHist24HBinDuration=cienaCesPmTdmE1PortHist24HBinDuration, cienaCesPmTdmOCnPortHist24HBinTable=cienaCesPmTdmOCnPortHist24HBinTable, PmStatBitmap=PmStatBitmap, cienaCesPmTdmOCnPortStatisticsBinCvl=cienaCesPmTdmOCnPortStatisticsBinCvl, cienaCesPmBasicPtpStatisticsBinEntry=cienaCesPmBasicPtpStatisticsBinEntry, cienaCesPmTdmPwCurrBinUas=cienaCesPmTdmPwCurrBinUas, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxFramesPerSec, cienaCesPmTdmOCnPortHistoryBinLoss=cienaCesPmTdmOCnPortHistoryBinLoss, cienaCesPmBasicPtpCurr24HBinEntry=cienaCesPmBasicPtpCurr24HBinEntry, cienaCesPmIGMPTotalStatsBinIgmpnumResourceExceed=cienaCesPmIGMPTotalStatsBinIgmpnumResourceExceed, cienaCesPmBasicPtpStatsBinOprnOch=cienaCesPmBasicPtpStatsBinOprnOch, cienaCesPmExtendedTxRxHistoryBinEntry=cienaCesPmExtendedTxRxHistoryBinEntry, cienaCesPmTdmPwHistoryBinMiss=cienaCesPmTdmPwHistoryBinMiss, cienaCesPmTdmT1PortCurr24HBinSesp=cienaCesPmTdmT1PortCurr24HBinSesp, cienaCesPmEgressQueueAllTimeBinMulticastDroppedBytes=cienaCesPmEgressQueueAllTimeBinMulticastDroppedBytes, cienaCesPmIGMPCurr24HBinEndTime=cienaCesPmIGMPCurr24HBinEndTime, cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdType=cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdType, cienaCesPmIGMPTotalStatsBinIgmpnumL2L3Mismatch=cienaCesPmIGMPTotalStatsBinIgmpnumL2L3Mismatch, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedFrames, cienaCesPmExtendedTxRxStatsBin2048To4095OctsPkts=cienaCesPmExtendedTxRxStatsBin2048To4095OctsPkts, cienaCesPmExtendedTxRxStatsBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxStatsBinTx1519To2047OctsPkts, cienaCesPmTdmPwTotalStatisticsBinRxPkt=cienaCesPmTdmPwTotalStatisticsBinRxPkt, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscards=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscards, cienaCesPmTdmPwStatisticsBinSes=cienaCesPmTdmPwStatisticsBinSes, cienaCesPmTdmPwTotalStatisticsBinUasp=cienaCesPmTdmPwTotalStatisticsBinUasp, cienaCesPmBasicOduHist24HBinFcOdu=cienaCesPmBasicOduHist24HBinFcOdu, cienaCesPmInstanceBinDuration=cienaCesPmInstanceBinDuration, cienaCesPmPersistenceStorage=cienaCesPmPersistenceStorage, cienaCesPmTdmDS3PortHistoryBinEntry=cienaCesPmTdmDS3PortHistoryBinEntry, cienaCesPmTdmDS3PortHistoryBinLoss=cienaCesPmTdmDS3PortHistoryBinLoss, cienaCesPmExtendedTxRxStatsBinRxBytes=cienaCesPmExtendedTxRxStatsBinRxBytes, cienaCesPmTdmPwHist24HBinAsp=cienaCesPmTdmPwHist24HBinAsp, cienaCesPmTdmOCnPortHistoryBinDuration=cienaCesPmTdmOCnPortHistoryBinDuration, cienaCesPmAlertTcaLastTcaBasisValue=cienaCesPmAlertTcaLastTcaBasisValue, cienaCesPmAccessStatsBinClearTime=cienaCesPmAccessStatsBinClearTime, cienaCesPmBasicTxRxStats=cienaCesPmBasicTxRxStats, cienaCesPmAccessStatisticsBinTable=cienaCesPmAccessStatisticsBinTable)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmBasicTxRxHistoryBinTable=cienaCesPmBasicTxRxHistoryBinTable, cienaCesPmBasicOduCurrBinStartTime=cienaCesPmBasicOduCurrBinStartTime, cienaCesPmExtendedTxRxTotalStatsBinTxBytes=cienaCesPmExtendedTxRxTotalStatsBinTxBytes, cienaCesPmEgressQueueHistoryBinIndex=cienaCesPmEgressQueueHistoryBinIndex, cienaCesPmBasicTxRxBiDirStatsBinRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirStatsBinRevRxFramesPerSec, cienaCesPmBasicPtpCurrBinOprOts=cienaCesPmBasicPtpCurrBinOprOts, cienaCesPmExtendedTxRxCurrBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxCurrBinTx4096To9216OctsPkts, cienaCesPmExtendedTxRxHist24HBinTxPausePkts=cienaCesPmExtendedTxRxHist24HBinTxPausePkts, cienaCesPmEgressQueueCurrBinMulticastEnqueuedFrames=cienaCesPmEgressQueueCurrBinMulticastEnqueuedFrames, cienaCesPmBasicOtuCurr24HBinSefsOtu=cienaCesPmBasicOtuCurr24HBinSefsOtu, cienaCesPmExtendedTxRxCurr24HBinStartTime=cienaCesPmExtendedTxRxCurr24HBinStartTime, cienaCesPmTdmOCnPortHistoryBinSess=cienaCesPmTdmOCnPortHistoryBinSess, cienaCesPmExtendedTxRxCurr24HBinTxLateCollPkts=cienaCesPmExtendedTxRxCurr24HBinTxLateCollPkts, cienaCesPmBasicPtpHistoryBinState=cienaCesPmBasicPtpHistoryBinState, cienaCesPmTdmOCnPortHist24HBinEsl=cienaCesPmTdmOCnPortHist24HBinEsl, cienaCesPmBasicRxHist24HBinTable=cienaCesPmBasicRxHist24HBinTable, cienaCesPmExtendedTxRxStatsBinTxGiantPkts=cienaCesPmExtendedTxRxStatsBinTxGiantPkts, cienaCesPmEgressQueueHistoryBinMulticastDroppedBytes=cienaCesPmEgressQueueHistoryBinMulticastDroppedBytes, cienaCesPmExtendedTxRxHist24HBinTxSingleCollPkts=cienaCesPmExtendedTxRxHist24HBinTxSingleCollPkts, cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedBytes, cienaCesPmExtendedTxRxHist24HBinEntry=cienaCesPmExtendedTxRxHist24HBinEntry, cienaCesPmExtendedTxRxHist24HBinDropEvents=cienaCesPmExtendedTxRxHist24HBinDropEvents, cienaCesPmBasicPtpCurr24HBinOprnOts=cienaCesPmBasicPtpCurr24HBinOprnOts, cienaCesPmIGMPHistoryBinIgmpnumLeaves=cienaCesPmIGMPHistoryBinIgmpnumLeaves, cienaCesPmGlobalState=cienaCesPmGlobalState, cienaCesPmIGMPCurrBinIgmpnumHostDiscards=cienaCesPmIGMPCurrBinIgmpnumHostDiscards, cienaCesPmBasicOduHistoryBinEntry=cienaCesPmBasicOduHistoryBinEntry, cienaCesPmTdmOCnPortHistoryBinState=cienaCesPmTdmOCnPortHistoryBinState, cienaCesPmTdmPwTotalStatisticsBinUas=cienaCesPmTdmPwTotalStatisticsBinUas, cienaCesPmTdmDS3PortHistoryBinIndex=cienaCesPmTdmDS3PortHistoryBinIndex, cienaCesPmTdmDS3PortStatisticsBinPses=cienaCesPmTdmDS3PortStatisticsBinPses, cienaCesPmTdmOCnPortHistoryBinEsl=cienaCesPmTdmOCnPortHistoryBinEsl, cienaCesPmBasicPtpCurrBinEntry=cienaCesPmBasicPtpCurrBinEntry, cienaCesPmIGMPTotalStatisticsBinEntry=cienaCesPmIGMPTotalStatisticsBinEntry, cienaCesPmInstanceIndexXrefAutoValue=cienaCesPmInstanceIndexXrefAutoValue, cienaCesPmTdmE1PortCurrBinEb=cienaCesPmTdmE1PortCurrBinEb, cienaCesPmExtendedTxRxTotalStatsBinTxLateCollPkts=cienaCesPmExtendedTxRxTotalStatsBinTxLateCollPkts, cienaCesPmTdmPwCurr24HBinRxPkt=cienaCesPmTdmPwCurr24HBinRxPkt, cienaCesPmExtendedTxRxHist24HBinTxFramesPerSec=cienaCesPmExtendedTxRxHist24HBinTxFramesPerSec, cienaCesPmTdmOCnPortCurrBinCvs=cienaCesPmTdmOCnPortCurrBinCvs, cienaCesPmTdmPwCurrBinEsp=cienaCesPmTdmPwCurrBinEsp, cienaCesPmExtendedTxRxHistoryBinRxBytes=cienaCesPmExtendedTxRxHistoryBinRxBytes, cienaCesPmIGMPAllTimeBinIgmpnumQueries=cienaCesPmIGMPAllTimeBinIgmpnumQueries, cienaCesPmBasicRxCurr24HBinBasicRxYellowFrames=cienaCesPmBasicRxCurr24HBinBasicRxYellowFrames, cienaCesPmTdmPwCurr24HBinMiss=cienaCesPmTdmPwCurr24HBinMiss, cienaCesPmBasicPtpStatsBinStartTime=cienaCesPmBasicPtpStatsBinStartTime, cienaCesPmExtendedTxRxHist24HBinTable=cienaCesPmExtendedTxRxHist24HBinTable, cienaCesPmBasicTxRxCurrBinRxAcceptedFrames=cienaCesPmBasicTxRxCurrBinRxAcceptedFrames, cienaCesPmTdmOCnPortTotalStatisticsBinTt=cienaCesPmTdmOCnPortTotalStatisticsBinTt, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsPortDown, cienaCesPmBasicRxTotalStatsBinBasicRxYellowBytes=cienaCesPmBasicRxTotalStatsBinBasicRxYellowBytes, cienaCesPmEgressQueueCurr24HBinStartTime=cienaCesPmEgressQueueCurr24HBinStartTime, cienaCesPmQueueGroupCurrBinTable=cienaCesPmQueueGroupCurrBinTable, cienaCesPmBasicPtpCurrBinOprMinOch=cienaCesPmBasicPtpCurrBinOprMinOch, cienaCesPmQueueGroupCurrBinDroppedFrames=cienaCesPmQueueGroupCurrBinDroppedFrames, cienaCesPmIntervalProfile=cienaCesPmIntervalProfile, cienaCesPmIGMPCurrBinIgmpnumL2L3Mismatch=cienaCesPmIGMPCurrBinIgmpnumL2L3Mismatch, cienaCesPmBasicOtuTotalStatsBinQAvgOtu=cienaCesPmBasicOtuTotalStatsBinQAvgOtu, cienaCesPmBasicOtuCurrBinPrfBerOtu=cienaCesPmBasicOtuCurrBinPrfBerOtu, cienaCesPmIGMPTotalStatsBinIgmpnumRouterDiscards=cienaCesPmIGMPTotalStatsBinIgmpnumRouterDiscards, cienaCesPmAdjustmentTcaStats=cienaCesPmAdjustmentTcaStats, cienaCesPmTdmOCnPortHist24HBinCvs=cienaCesPmTdmOCnPortHist24HBinCvs, cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMin=cienaCesPmAdjustmentTcaLastOverflowTcaBasisValueMin, cienaCesPmExtendedTxRxCurr24HBinJabbersPkts=cienaCesPmExtendedTxRxCurr24HBinJabbersPkts, cienaCesPmEgressQueueTotalStatisticsBinTable=cienaCesPmEgressQueueTotalStatisticsBinTable, cienaCesPmMib=cienaCesPmMib, cienaCesPmIGMPTotalStatsBinIgmpnumReplyTimeouts=cienaCesPmIGMPTotalStatsBinIgmpnumReplyTimeouts, cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedBytes=cienaCesPmEgressQueueTotalStatsBinMulticastEnqueuedBytes, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortDown, cienaCesPmTdmOCnPortCurr24HBinUasl=cienaCesPmTdmOCnPortCurr24HBinUasl, cienaCesPmAlertTcaLastTcaWatermarkStats=cienaCesPmAlertTcaLastTcaWatermarkStats, cienaCesPmExtendedTxRxStatsBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxStatsBinTx1024To1518OctsPkts, cienaCesPmTdmOCnPortCurr24HBinClearTime=cienaCesPmTdmOCnPortCurr24HBinClearTime, cienaCesPmEgressQueueTotalStatsBinStartTime=cienaCesPmEgressQueueTotalStatsBinStartTime, cienaCesPmEgressQueueCurr24HBinDuration=cienaCesPmEgressQueueCurr24HBinDuration, cienaCesPmTdmDS3PortCurrBinTable=cienaCesPmTdmDS3PortCurrBinTable, cienaCesPmBasicTxRxBiDirHist24HBinState=cienaCesPmBasicTxRxBiDirHist24HBinState, cienaCesPmTdmOCnPortStatisticsBinBbe=cienaCesPmTdmOCnPortStatisticsBinBbe, cienaCesPmBasicRxStatsBinBasicRxBytesPerSec=cienaCesPmBasicRxStatsBinBasicRxBytesPerSec, cienaCesPmExtendedTxRxCurrBinFragmentsPkts=cienaCesPmExtendedTxRxCurrBinFragmentsPkts, cienaCesPmIGMPCurr24HBinState=cienaCesPmIGMPCurr24HBinState, cienaCesPmTdmOCnPortHistoryBinTable=cienaCesPmTdmOCnPortHistoryBinTable, cienaCesPmBasicRxAllTimeBinBasicRxDroppedFrames=cienaCesPmBasicRxAllTimeBinBasicRxDroppedFrames, cienaCesPmTdmDS3PortTotalStatisticsBinPuas=cienaCesPmTdmDS3PortTotalStatisticsBinPuas, cienaCesPmAlertTcaUnits=cienaCesPmAlertTcaUnits, cienaCesPmTdmOCnPortCurr24HBinCvl=cienaCesPmTdmOCnPortCurr24HBinCvl, cienaCesPmBasicTxRxAllTimeBinBasicRxBytesPerSec=cienaCesPmBasicTxRxAllTimeBinBasicRxBytesPerSec, cienaCesPmBasicPtpCurrBinDgdMaxOch=cienaCesPmBasicPtpCurrBinDgdMaxOch, cienaCesPmAdjustmentTcaEventsOverflowCountReached=cienaCesPmAdjustmentTcaEventsOverflowCountReached, cienaCesPmIGMPCurr24HBinIgmpnumHostDiscards=cienaCesPmIGMPCurr24HBinIgmpnumHostDiscards, cienaCesPmTdmE1PortCurrBinTt=cienaCesPmTdmE1PortCurrBinTt, cienaCesPmExtendedTxRxHistoryBinRxUcastPkts=cienaCesPmExtendedTxRxHistoryBinRxUcastPkts, cienaCesPmExtendedTxRxAllTimeBinRxPkts=cienaCesPmExtendedTxRxAllTimeBinRxPkts, cienaCesPmTdmE1PortTotalStatisticsBinAs=cienaCesPmTdmE1PortTotalStatisticsBinAs, cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedFrames, cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedBytes, cienaCesPmTdmDS3PortHist24HBinPses=cienaCesPmTdmDS3PortHist24HBinPses, cienaCesPmBasicRxCurrBinBasicRxBytesPerSec=cienaCesPmBasicRxCurrBinBasicRxBytesPerSec, cienaCesPmBasicOtuCurr24HBinSesOtu=cienaCesPmBasicOtuCurr24HBinSesOtu, cienaCesPmInstanceAlertTca=cienaCesPmInstanceAlertTca, cienaCesPmBasicOtuHist24HBinPfBerEOtu=cienaCesPmBasicOtuHist24HBinPfBerEOtu, cienaCesPmBasicTxRxHist24HBinBasicRxDroppedBytes=cienaCesPmBasicTxRxHist24HBinBasicRxDroppedBytes, cienaCesPmBasicRxStats=cienaCesPmBasicRxStats, cienaCesPmTdmT1PortCurrBinEsl=cienaCesPmTdmT1PortCurrBinEsl, cienaCesPmTdmT1PortHist24HBinSasp=cienaCesPmTdmT1PortHist24HBinSasp, cienaCesPmIGMPTotalStatsBinIgmpnumQueryTimeouts=cienaCesPmIGMPTotalStatsBinIgmpnumQueryTimeouts, cienaCesPmTdmE1PortHistoryBinEndTime=cienaCesPmTdmE1PortHistoryBinEndTime, cienaCesPmExtendedTxRxCurr24HBinDuration=cienaCesPmExtendedTxRxCurr24HBinDuration, cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsPortBlock, cienaCesPmTdmOCnPortHist24HBinCvl=cienaCesPmTdmOCnPortHist24HBinCvl, cienaCesPmFloodContainerStatsBinBcastDroppedBytes=cienaCesPmFloodContainerStatsBinBcastDroppedBytes, cienaCesPmTdmT1PortHist24HBinDuration=cienaCesPmTdmT1PortHist24HBinDuration, cienaCesPmTdmPwHist24HBinUas=cienaCesPmTdmPwHist24HBinUas, cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedBytes, cienaCesPmExtendedTxRxHistoryBinTxUnderRunPkts=cienaCesPmExtendedTxRxHistoryBinTxUnderRunPkts, cienaCesPmTdmPwCurrBinAsp=cienaCesPmTdmPwCurrBinAsp, cienaCesPmBasicPtpHistoryBinOprMaxOts=cienaCesPmBasicPtpHistoryBinOprMaxOts, cienaCesPmTdmOCnPortHistoryBinBbe=cienaCesPmTdmOCnPortHistoryBinBbe, cienaCesPmExtendedTxRxCurrBinTxMcastPkts=cienaCesPmExtendedTxRxCurrBinTxMcastPkts, cienaCesPmBasicPtpTotalStatsBinOprMinOch=cienaCesPmBasicPtpTotalStatsBinOprMinOch, cienaCesPmExtendedTxRxCurrBin512To1023OctsPkts=cienaCesPmExtendedTxRxCurrBin512To1023OctsPkts, cienaCesPmTdmPwCurr24HBinTable=cienaCesPmTdmPwCurr24HBinTable, cienaCesPmQueueGroupCurr24HBinDroppedFrames=cienaCesPmQueueGroupCurr24HBinDroppedFrames, cienaCesPmEgressQueueHist24HBinTable=cienaCesPmEgressQueueHist24HBinTable, cienaCesPmEgressQueueCurrBinState=cienaCesPmEgressQueueCurrBinState, cienaCesPmExtendedTxRxStatsBinTxExDeferPkts=cienaCesPmExtendedTxRxStatsBinTxExDeferPkts, cienaCesPmExtendedTxRxTotalStatsBinDropEvents=cienaCesPmExtendedTxRxTotalStatsBinDropEvents, cienaCesPmAlertTcaLastTcaWatermarkValue=cienaCesPmAlertTcaLastTcaWatermarkValue, cienaCesPmAlertTcaLastTcaTime=cienaCesPmAlertTcaLastTcaTime, cienaCesPmQueueGroupAllTimeBinEnqueuedBytes=cienaCesPmQueueGroupAllTimeBinEnqueuedBytes, cienaCesPmBasicTxRxCurr24HBinTxForwardedFrames=cienaCesPmBasicTxRxCurr24HBinTxForwardedFrames, cienaCesPmIGMPHist24HBinEndTime=cienaCesPmIGMPHist24HBinEndTime, cienaCesPmInstanceConfigurationMode=cienaCesPmInstanceConfigurationMode, cienaCesPmBasicPtpCurr24HBinOptMaxOch=cienaCesPmBasicPtpCurr24HBinOptMaxOch, cienaCesPmBasicOtuCurrBinFieldsInvalid=cienaCesPmBasicOtuCurrBinFieldsInvalid, cienaCesPmTdmDS3PortHist24HBinSesl=cienaCesPmTdmDS3PortHist24HBinSesl, cienaCesPmBasicTxHistoryBinEndTime=cienaCesPmBasicTxHistoryBinEndTime, cienaCesPmAccessHistoryBinIndex=cienaCesPmAccessHistoryBinIndex, cienaCesPmBasicPtpHistoryBinDgdAvgOch=cienaCesPmBasicPtpHistoryBinDgdAvgOch, cienaCesPmBasicTxRxCurrBinRxDroppedBytes=cienaCesPmBasicTxRxCurrBinRxDroppedBytes, cienaCesPmExtendedTxRxCurrBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxCurrBinTx2048To4095OctsPkts, cienaCesPmBasicRxHist24HBinBasicRxYellowFrames=cienaCesPmBasicRxHist24HBinBasicRxYellowFrames, cienaCesPmIGMPHist24HBinState=cienaCesPmIGMPHist24HBinState, cienaCesPmIGMPCurr24HBinIgmpnumL2L3Mismatch=cienaCesPmIGMPCurr24HBinIgmpnumL2L3Mismatch, cienaCesPmExtendedTxRxHist24HBinRxMcastPkts=cienaCesPmExtendedTxRxHist24HBinRxMcastPkts, cienaCesPmAdjustmentTcaIntervalEndTime=cienaCesPmAdjustmentTcaIntervalEndTime, cienaCesPmFloodContainerHist24HBinStartTime=cienaCesPmFloodContainerHist24HBinStartTime, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmBasicRxStatsBinBasicRxDroppedBytes=cienaCesPmBasicRxStatsBinBasicRxDroppedBytes, cienaCesPmBasicTxRxBiDirHist24HBinDuration=cienaCesPmBasicTxRxBiDirHist24HBinDuration, cienaCesPmIGMPHistoryBinIgmpnumReplyTimeouts=cienaCesPmIGMPHistoryBinIgmpnumReplyTimeouts, cienaCesPmBasicTxRxHist24HBinTable=cienaCesPmBasicTxRxHist24HBinTable, cienaCesPmTdmPwTotalStatisticsBinSes=cienaCesPmTdmPwTotalStatisticsBinSes, cienaCesPmBasicTxRxBiDirCurrBinEntry=cienaCesPmBasicTxRxBiDirCurrBinEntry, cienaCesPmExtendedTxRxHist24HBinDuration=cienaCesPmExtendedTxRxHist24HBinDuration, cienaCesPmAdjustmentTcaConfigStatus=cienaCesPmAdjustmentTcaConfigStatus, cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedBytes, cienaCesPmExtendedTxRxCurrBinClearedTime=cienaCesPmExtendedTxRxCurrBinClearedTime, cienaCesPmAccessCurrBinState=cienaCesPmAccessCurrBinState, cienaCesPmBasicTxRxBiDirHist24HBinStartTime=cienaCesPmBasicTxRxBiDirHist24HBinStartTime, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmTdmOCnPortHistoryBinAisl=cienaCesPmTdmOCnPortHistoryBinAisl, cienaCesPmExtendedTxRxHist24HBinRxFramesPerSec=cienaCesPmExtendedTxRxHist24HBinRxFramesPerSec, cienaCesPmFloodContainerStatsBinL2McastDroppedBytes=cienaCesPmFloodContainerStatsBinL2McastDroppedBytes, cienaCesPmExtendedTxRxCurr24HBinTx128To255OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx128To255OctsPkts, cienaCesPmBasicTxRxAllTimeBinEntry=cienaCesPmBasicTxRxAllTimeBinEntry, cienaCesPmTdmT1PortStatisticsBinTtp=cienaCesPmTdmT1PortStatisticsBinTtp, cienaCesPmExtendedTxRxHistoryBinJabbersPkts=cienaCesPmExtendedTxRxHistoryBinJabbersPkts, cienaCesPmInstanceInterfaceId2=cienaCesPmInstanceInterfaceId2, cienaCesPmTdmDS3PortStatisticsBinTable=cienaCesPmTdmDS3PortStatisticsBinTable, cienaCesPmTdmE1PortCurr24HBinStartTime=cienaCesPmTdmE1PortCurr24HBinStartTime, cienaCesPmTdmPwHistoryBinEsp=cienaCesPmTdmPwHistoryBinEsp, cienaCesPmAlertTcaEventsTotal=cienaCesPmAlertTcaEventsTotal, cienaCesPmTdmT1PortCurrBinDuration=cienaCesPmTdmT1PortCurrBinDuration, cienaCesPmQueueGroupHistoryBinDuration=cienaCesPmQueueGroupHistoryBinDuration, cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedFrames, cienaCesPmAlertTcaBoundaryValue=cienaCesPmAlertTcaBoundaryValue, cienaCesPmExtendedTxRxCurrBinTxDeferPkts=cienaCesPmExtendedTxRxCurrBinTxDeferPkts, cienaCesPmExtendedTxRxStatsBinLinkUp=cienaCesPmExtendedTxRxStatsBinLinkUp, cienaCesPmTdmE1PortCurr24HBinEs=cienaCesPmTdmE1PortCurr24HBinEs, cienaCesPmExtendedTxRxStatsBinDropEvents=cienaCesPmExtendedTxRxStatsBinDropEvents, cienaCesPmBasicTxCurr24HBinState=cienaCesPmBasicTxCurr24HBinState, cienaCesPmExtendedTxRxCurrBinTx64OctsPkts=cienaCesPmExtendedTxRxCurrBinTx64OctsPkts, cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkType=cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkType, cienaCesPmTdmT1PortCurr24HBinAsp=cienaCesPmTdmT1PortCurr24HBinAsp, cienaCesPmTdmDS3PortTotalStatisticsBinPes=cienaCesPmTdmDS3PortTotalStatisticsBinPes, cienaCesPmBasicPtpTotalStatsBinOprMaxOts=cienaCesPmBasicPtpTotalStatsBinOprMaxOts, cienaCesPmExtendedTxRxAllTimeBin512To1023OctsPkts=cienaCesPmExtendedTxRxAllTimeBin512To1023OctsPkts, cienaCesPmIGMPCurrBinEntry=cienaCesPmIGMPCurrBinEntry, cienaCesPmTdmOCnPortHistoryBinSefss=cienaCesPmTdmOCnPortHistoryBinSefss, cienaCesPmAdjustmentTcaLastOverflowTcaBoundaryValue=cienaCesPmAdjustmentTcaLastOverflowTcaBoundaryValue, cienaCesPmTdmT1PortCurrBinEntry=cienaCesPmTdmT1PortCurrBinEntry, cienaCesPmTdmOCnPortCurrBinUasl=cienaCesPmTdmOCnPortCurrBinUasl, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsPortBlock, cienaCesPmTdmE1PortHist24HBinAs=cienaCesPmTdmE1PortHist24HBinAs, cienaCesPmBasicPtpCurr24HBinOprMaxOts=cienaCesPmBasicPtpCurr24HBinOprMaxOts, cienaCesPmBasicOtuTotalStatsBinStartTime=cienaCesPmBasicOtuTotalStatsBinStartTime, cienaCesPmAdjustmentTcaSamplesDiscardedTotal=cienaCesPmAdjustmentTcaSamplesDiscardedTotal, cienaCesPmTdmPwCurr24HBinUasp=cienaCesPmTdmPwCurr24HBinUasp, cienaCesPmTdmPwTotalStatisticsBinAsp=cienaCesPmTdmPwTotalStatisticsBinAsp, cienaCesPmBasicOduCurrBinClearedTime=cienaCesPmBasicOduCurrBinClearedTime, cienaCesPmFloodContainerHist24HBinEndTime=cienaCesPmFloodContainerHist24HBinEndTime, cienaCesPmTdmPwCurr24HBinTxPkt=cienaCesPmTdmPwCurr24HBinTxPkt, cienaCesPmTdmT1PortTotalStatisticsBinLossl=cienaCesPmTdmT1PortTotalStatisticsBinLossl, cienaCesPmBasicOduHistoryBinDuration=cienaCesPmBasicOduHistoryBinDuration, cienaCesPmTdmT1PortCurr24HBinClearTime=cienaCesPmTdmT1PortCurr24HBinClearTime, cienaCesPmBasicTxRxCurrBinRxFramesPerSec=cienaCesPmBasicTxRxCurrBinRxFramesPerSec, cienaCesPmBasicTxHistoryBinTxBytesPerSec=cienaCesPmBasicTxHistoryBinTxBytesPerSec, cienaCesPmTdmT1PortTotalStatisticsBinTable=cienaCesPmTdmT1PortTotalStatisticsBinTable, cienaCesPmTdmOCnPortHistoryBinCvs=cienaCesPmTdmOCnPortHistoryBinCvs, cienaCesPmExtendedTxRxCurr24HBinTxBytesPerSec=cienaCesPmExtendedTxRxCurr24HBinTxBytesPerSec, cienaCesPmBasicPtpHist24HBinOptMinOch=cienaCesPmBasicPtpHist24HBinOptMinOch, cienaCesPmBasicPtpTotalStatsBinStartTime=cienaCesPmBasicPtpTotalStatsBinStartTime, cienaCesPmExtendedTxRxHistoryBinRxLOutRangePkts=cienaCesPmExtendedTxRxHistoryBinRxLOutRangePkts, cienaCesPmTdmOCnPortStatisticsBinUasl=cienaCesPmTdmOCnPortStatisticsBinUasl, cienaCesPmExtendedTxRxCurr24HBinLinkDown=cienaCesPmExtendedTxRxCurr24HBinLinkDown, cienaCesPmBasicOtuHistoryBinCvOtu=cienaCesPmBasicOtuHistoryBinCvOtu, cienaCesPmBasicTxTotalStatsBinTxForwardedBytes=cienaCesPmBasicTxTotalStatsBinTxForwardedBytes, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmExtendedTxRxTotalStatsBinRxBytes=cienaCesPmExtendedTxRxTotalStatsBinRxBytes, cienaCesPmIGMPCurrBinIgmpnumBadChecksum=cienaCesPmIGMPCurrBinIgmpnumBadChecksum, cienaCesPmAdjustmentTcaSamplesProcessedTotal=cienaCesPmAdjustmentTcaSamplesProcessedTotal, cienaCesPmIGMPCurrBinIgmpnumQueries=cienaCesPmIGMPCurrBinIgmpnumQueries, cienaCesPmAccessCurrBinStartTime=cienaCesPmAccessCurrBinStartTime, cienaCesPmQueueGroupHist24HBinDuration=cienaCesPmQueueGroupHist24HBinDuration, cienaCesPmTdmDS3PortCurrBinPcv=cienaCesPmTdmDS3PortCurrBinPcv, cienaCesPmBasicTxRxBiDirHistoryBinDuration=cienaCesPmBasicTxRxBiDirHistoryBinDuration, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedBytes, cienaCesPmBasicPtpHist24HBinDgdMaxOch=cienaCesPmBasicPtpHist24HBinDgdMaxOch, cienaCesPmBasicTxRxHistoryBinRxBytesPerSec=cienaCesPmBasicTxRxHistoryBinRxBytesPerSec, cienaCesPmQueueGroupHist24HBinEndTime=cienaCesPmQueueGroupHist24HBinEndTime, cienaCesPmIGMPHistoryBinEntry=cienaCesPmIGMPHistoryBinEntry, cienaCesPmTdmOCnPortHistoryBinEndTime=cienaCesPmTdmOCnPortHistoryBinEndTime, cienaCesPmExtendedTxRxHist24HBinTxExDeferPkts=cienaCesPmExtendedTxRxHist24HBinTxExDeferPkts, cienaCesPmBasicRxStatsBinClearTime=cienaCesPmBasicRxStatsBinClearTime, cienaCesPmFloodContainerHist24HBinDuration=cienaCesPmFloodContainerHist24HBinDuration, cienaCesPmTdmT1PortStatisticsBinEsp=cienaCesPmTdmT1PortStatisticsBinEsp, cienaCesPmTdmOCnPortStatisticsBinEb=cienaCesPmTdmOCnPortStatisticsBinEb, cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirStatsBinRevRxAcceptedFrames, cienaCesPmIGMPCurrBinIgmpnumQueryTimeouts=cienaCesPmIGMPCurrBinIgmpnumQueryTimeouts, cienaCesPmQueueGroupTotalStatsBinDroppedBytes=cienaCesPmQueueGroupTotalStatsBinDroppedBytes, cienaCesPmMIBNotificationPrefix=cienaCesPmMIBNotificationPrefix, cienaCesPmExtendedTxRxCurrBinTxGiantPkts=cienaCesPmExtendedTxRxCurrBinTxGiantPkts, cienaCesPmTdmE1PortTotalStatisticsBinSes=cienaCesPmTdmE1PortTotalStatisticsBinSes, cienaCesPmBasicRxStatsBinBasicRxAcceptedBytes=cienaCesPmBasicRxStatsBinBasicRxAcceptedBytes, cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedBytes, cienaCesPmBasicPtpTotalStatisticsBinEntry=cienaCesPmBasicPtpTotalStatisticsBinEntry, cienaCesPmTdmPwHistoryBinCvp=cienaCesPmTdmPwHistoryBinCvp, cienaCesPmBasicTxCurr24HBinEntry=cienaCesPmBasicTxCurr24HBinEntry, cienaCesPmTdmPwHistoryBinReorder=cienaCesPmTdmPwHistoryBinReorder, cienaCesPmTdmPwHistoryBinEs=cienaCesPmTdmPwHistoryBinEs, cienaCesPmBasicOduCurrBinUasOdu=cienaCesPmBasicOduCurrBinUasOdu, cienaCesPmBasicTxRxAllTimeBinBasicRxYellowFrames=cienaCesPmBasicTxRxAllTimeBinBasicRxYellowFrames, cienaCesPmTdmPwCurrBinMiss=cienaCesPmTdmPwCurrBinMiss)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmIntervalProfileSampleInterval=cienaCesPmIntervalProfileSampleInterval, cienaCesPmInstanceStartDate=cienaCesPmInstanceStartDate, cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinRevTxForwardedFrames, cienaCesPmBasicPtpHist24HBinOprMinOch=cienaCesPmBasicPtpHist24HBinOprMinOch, cienaCesPmBasicPtpHist24HBinOprAvgOts=cienaCesPmBasicPtpHist24HBinOprAvgOts, cienaCesPmIGMPHist24HBinIgmpnumRouterDiscards=cienaCesPmIGMPHist24HBinIgmpnumRouterDiscards, cienaCesPmBasicTxHistoryBinDuration=cienaCesPmBasicTxHistoryBinDuration, cienaCesPmTdmDS3PortCurrBinPuas=cienaCesPmTdmDS3PortCurrBinPuas, cienaCesPmTdmT1PortCurr24HBinStartTime=cienaCesPmTdmT1PortCurr24HBinStartTime, cienaCesPmTdmE1PortStatisticsBinSes=cienaCesPmTdmE1PortStatisticsBinSes, PmProfileFieldMapBasicOdu=PmProfileFieldMapBasicOdu, cienaCesPmTdmT1PortHistoryBinAsp=cienaCesPmTdmT1PortHistoryBinAsp, cienaCesPmExtendedTxRxCurrBin64OctsPkts=cienaCesPmExtendedTxRxCurrBin64OctsPkts, PmConfigurationMode=PmConfigurationMode, cienaCesPmTdmE1PortTotalStatisticsBinEs=cienaCesPmTdmE1PortTotalStatisticsBinEs, cienaCesPmBasicPtpCurr24HBinOptMinOch=cienaCesPmBasicPtpCurr24HBinOptMinOch, cienaCesPmExtendedTxRxAllTimeBinTxBytes=cienaCesPmExtendedTxRxAllTimeBinTxBytes, cienaCesPmAdjustmentTcaLastIntvlEndTcaUnits=cienaCesPmAdjustmentTcaLastIntvlEndTcaUnits, cienaCesPmExtendedTxRxHistoryBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx4096To9216OctsPkts, cienaCesPmExtendedTxRxHistoryBinTxLOutRangePkts=cienaCesPmExtendedTxRxHistoryBinTxLOutRangePkts, cienaCesPmBasicTxCurrBinDuration=cienaCesPmBasicTxCurrBinDuration, cienaCesPmBasicTxRxHist24HBinBasicRxYellowFrames=cienaCesPmBasicTxRxHist24HBinBasicRxYellowFrames, cienaCesPmExtendedTxRxHistoryBinInDiscards=cienaCesPmExtendedTxRxHistoryBinInDiscards, cienaCesPmExtendedTxRxHistoryBinTxBytesPerSec=cienaCesPmExtendedTxRxHistoryBinTxBytesPerSec, cienaCesPmTdmPwHist24HBinStartTime=cienaCesPmTdmPwHist24HBinStartTime, cienaCesPmBasicPtpHist24HBinOprMaxOts=cienaCesPmBasicPtpHist24HBinOprMaxOts, cienaCesPmQueueGroupQueueIndex=cienaCesPmQueueGroupQueueIndex, cienaCesPmExtendedTxRxTotalStatsBinTxMcastPkts=cienaCesPmExtendedTxRxTotalStatsBinTxMcastPkts, cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedBytes, cienaCesPmTdmOCnPortHist24HBinSesl=cienaCesPmTdmOCnPortHist24HBinSesl, cienaCesPmBasicOtuHistoryBinEntry=cienaCesPmBasicOtuHistoryBinEntry, cienaCesPmAccessHistoryBinEntry=cienaCesPmAccessHistoryBinEntry, cienaCesPmBasicTxRxHistoryBinTxForwardedBytes=cienaCesPmBasicTxRxHistoryBinTxForwardedBytes, cienaCesPmTdmDS3PortHist24HBinDuration=cienaCesPmTdmDS3PortHist24HBinDuration, cienaCesPmExtendedTxRxTotalStatsBinUndersizePkts=cienaCesPmExtendedTxRxTotalStatsBinUndersizePkts, cienaCesPmTdmPwStatisticsBinUas=cienaCesPmTdmPwStatisticsBinUas, cienaCesPmAccessCurrBinAccessHitFrames=cienaCesPmAccessCurrBinAccessHitFrames, cienaCesPmBasicRxHist24HBinEntry=cienaCesPmBasicRxHist24HBinEntry, cienaCesPmTdmDS3PortCurrBinEntry=cienaCesPmTdmDS3PortCurrBinEntry, cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortDown, cienaCesPmAccessCurrBinAccessHitBytes=cienaCesPmAccessCurrBinAccessHitBytes, cienaCesPmExtendedTxRxStatsBinTxLateCollPkts=cienaCesPmExtendedTxRxStatsBinTxLateCollPkts, cienaCesPmBasicPtpCurr24HBinTable=cienaCesPmBasicPtpCurr24HBinTable, cienaCesPmTdmOCnPortCurr24HBinEntry=cienaCesPmTdmOCnPortCurr24HBinEntry, cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedBytes, cienaCesPmBasicOtuCurr24HBinPrfBerMaxOtu=cienaCesPmBasicOtuCurr24HBinPrfBerMaxOtu, cienaCesPmEgressQueueTotalStatisticsBinEntry=cienaCesPmEgressQueueTotalStatisticsBinEntry, cienaCesPmTdmPwHistoryBinLbit=cienaCesPmTdmPwHistoryBinLbit, cienaCesPmTdmT1PortHist24HBinTtp=cienaCesPmTdmT1PortHist24HBinTtp, cienaCesPmBasicOduCurrBinFieldsInvalid=cienaCesPmBasicOduCurrBinFieldsInvalid, cienaCesPmAlertTcaLastTcaScheme=cienaCesPmAlertTcaLastTcaScheme, cienaCesPmExtendedTxRxAllTimeBinTxBytesPerSec=cienaCesPmExtendedTxRxAllTimeBinTxBytesPerSec, cienaCesPmFloodContainerHistoryBinDuration=cienaCesPmFloodContainerHistoryBinDuration, cienaCesPmBasicPtpCurrBinDuration=cienaCesPmBasicPtpCurrBinDuration, cienaCesPmTdmOCnPortStatisticsBinTable=cienaCesPmTdmOCnPortStatisticsBinTable, cienaCesPmTdmOCnPortStatisticsBinStartTime=cienaCesPmTdmOCnPortStatisticsBinStartTime, cienaCesPmQueueGroupCurr24HBinState=cienaCesPmQueueGroupCurr24HBinState, cienaCesPmBasicPtpStats=cienaCesPmBasicPtpStats, cienaCesPmTdmDS3PortHistoryBinTable=cienaCesPmTdmDS3PortHistoryBinTable, cienaCesPmTdmT1PortCurrBinStartTime=cienaCesPmTdmT1PortCurrBinStartTime, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmInstanceInterfaceId=cienaCesPmInstanceInterfaceId, cienaCesPmBasicOtuHistoryBinSefsOtu=cienaCesPmBasicOtuHistoryBinSefsOtu, cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkType=cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkType, cienaCesPmBasicTxRxBiDirHistoryBinStartTime=cienaCesPmBasicTxRxBiDirHistoryBinStartTime, cienaCesPmBasicRxHist24HBinBasicRxFramesPerSec=cienaCesPmBasicRxHist24HBinBasicRxFramesPerSec, cienaCesPmQueueGroupHist24HBinState=cienaCesPmQueueGroupHist24HBinState, cienaCesPmQueueGroupHistoryBinEntry=cienaCesPmQueueGroupHistoryBinEntry, cienaCesPmTdmPwTotalStatisticsBinEs=cienaCesPmTdmPwTotalStatisticsBinEs, cienaCesPmExtendedTxRxCurrBinTxTBytes=cienaCesPmExtendedTxRxCurrBinTxTBytes, cienaCesPmTdmT1PortCurrBinSesl=cienaCesPmTdmT1PortCurrBinSesl, cienaCesPmMIBObjects=cienaCesPmMIBObjects, cienaCesPmIGMPCurr24HBinTable=cienaCesPmIGMPCurr24HBinTable, cienaCesPmTdmE1PortStatisticsBinTt=cienaCesPmTdmE1PortStatisticsBinTt, cienaCesPmExtendedTxRxCurr24HBinTxPkts=cienaCesPmExtendedTxRxCurr24HBinTxPkts, cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkType=cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkType, cienaCesPmExtendedTxRxHistoryBinRxFramesPerSec=cienaCesPmExtendedTxRxHistoryBinRxFramesPerSec, cienaCesPmBasicRxCurr24HBinEntry=cienaCesPmBasicRxCurr24HBinEntry, cienaCesPmBasicOtuHistoryBinSesOtu=cienaCesPmBasicOtuHistoryBinSesOtu, cienaCesPmExtendedTxRxHistoryBinTxCrcErrorPkts=cienaCesPmExtendedTxRxHistoryBinTxCrcErrorPkts, cienaCesPmTdmT1PortTotalStatisticsBinStartTime=cienaCesPmTdmT1PortTotalStatisticsBinStartTime, cienaCesPmExtendedTxRxAllTimeBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxAllTimeBinTxLCheckErrorPkts, cienaCesPmBasicTxRxBiDirStatsBinClearTime=cienaCesPmBasicTxRxBiDirStatsBinClearTime, cienaCesPmGlobal=cienaCesPmGlobal, cienaCesPmExtendedTxRxCurrBinTxCrcErrorPkts=cienaCesPmExtendedTxRxCurrBinTxCrcErrorPkts, cienaCesPmFloodContainerCurrBinState=cienaCesPmFloodContainerCurrBinState, cienaCesPmTdmDS3PortCurrBinSesl=cienaCesPmTdmDS3PortCurrBinSesl, cienaCesPmTdmDS3PortCurr24HBinPes=cienaCesPmTdmDS3PortCurr24HBinPes, cienaCesPmAccessHist24HBinEndTime=cienaCesPmAccessHist24HBinEndTime, cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedBytes, cienaCesPmExtendedTxRxTotalStatsBinTxSingleCollPkts=cienaCesPmExtendedTxRxTotalStatsBinTxSingleCollPkts, cienaCesPmTdmPwHist24HBinMiss=cienaCesPmTdmPwHist24HBinMiss, cienaCesPmBasicOduCurrBinState=cienaCesPmBasicOduCurrBinState, cienaCesPmAdjustmentTcaOverflowConfigStatus=cienaCesPmAdjustmentTcaOverflowConfigStatus, cienaCesPmBasicTxRxHist24HBinBasicTxForwardedFrames=cienaCesPmBasicTxRxHist24HBinBasicTxForwardedFrames, cienaCesPmBasicOduHist24HBinCvOdu=cienaCesPmBasicOduHist24HBinCvOdu, cienaCesPmBasicOduStatisticsBinEntry=cienaCesPmBasicOduStatisticsBinEntry, cienaCesPmExtendedTxRxHistoryBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx1024To1518OctsPkts, cienaCesPmTdmPwTotalStatisticsBinTable=cienaCesPmTdmPwTotalStatisticsBinTable, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedFrames, cienaCesPmAdjustmentTcaUnits=cienaCesPmAdjustmentTcaUnits, cienaCesPmTdmT1PortCurrBinLossl=cienaCesPmTdmT1PortCurrBinLossl, cienaCesPmQueueGroupHistoryBinEnqueuedBytes=cienaCesPmQueueGroupHistoryBinEnqueuedBytes, cienaCesPmBasicPtpHistoryBinFieldsUnsupported=cienaCesPmBasicPtpHistoryBinFieldsUnsupported, cienaCesPmBasicTxRxBiDirCurrBinFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirCurrBinFwdRxFramesPerSec, cienaCesPmBasicPtpHistoryBinOprMinOch=cienaCesPmBasicPtpHistoryBinOprMinOch, cienaCesPmBasicPtpCurr24HBinStartTime=cienaCesPmBasicPtpCurr24HBinStartTime, cienaCesPmTdmOCnPortHist24HBinUas=cienaCesPmTdmOCnPortHist24HBinUas, cienaCesPmTdmOCnPortStatisticsBinCvs=cienaCesPmTdmOCnPortStatisticsBinCvs, cienaCesPmBasicOduStatsBinFcOdu=cienaCesPmBasicOduStatsBinFcOdu, cienaCesPmInstanceRowStatus=cienaCesPmInstanceRowStatus, cienaCesPmExtendedTxRxCurr24HBinTxGiantPkts=cienaCesPmExtendedTxRxCurr24HBinTxGiantPkts, cienaCesPmIGMPStatsBinIgmpnumUnknownPktType=cienaCesPmIGMPStatsBinIgmpnumUnknownPktType, cienaCesPmBasicPtpStatsBinDgdMaxOch=cienaCesPmBasicPtpStatsBinDgdMaxOch, cienaCesPmTdmPwHist24HBinRxPkt=cienaCesPmTdmPwHist24HBinRxPkt, cienaCesPmTdmDS3PortHistoryBinEsl=cienaCesPmTdmDS3PortHistoryBinEsl, cienaCesPmTdmPwHistoryBinSesp=cienaCesPmTdmPwHistoryBinSesp, cienaCesPmTdmDS3PortCurr24HBinTable=cienaCesPmTdmDS3PortCurr24HBinTable, cienaCesPmBasicPtpHistoryBinOptMaxOch=cienaCesPmBasicPtpHistoryBinOptMaxOch, cienaCesPmTdmOCnPortCurr24HBinUas=cienaCesPmTdmOCnPortCurr24HBinUas, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedFrames, cienaCesPmEgressQueueHistoryBinUnicastDroppedFrames=cienaCesPmEgressQueueHistoryBinUnicastDroppedFrames, cienaCesPmTdmT1PortCurr24HBinCvp=cienaCesPmTdmT1PortCurr24HBinCvp, cienaCesPmExtendedTxRxStatsBinRxPkts=cienaCesPmExtendedTxRxStatsBinRxPkts, cienaCesPmExtendedTxRxTotalStatsBinTxPausePkts=cienaCesPmExtendedTxRxTotalStatsBinTxPausePkts, PmTcaIntProfCfgAttrs=PmTcaIntProfCfgAttrs, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxBytesPerSec, cienaCesPmBasicTxHist24HBinStartTime=cienaCesPmBasicTxHist24HBinStartTime, cienaCesPmBasicTxRxHistoryBinRxDroppedBytes=cienaCesPmBasicTxRxHistoryBinRxDroppedBytes, cienaCesPmExtendedTxRxCurr24HBin1519To2047OctsPkts=cienaCesPmExtendedTxRxCurr24HBin1519To2047OctsPkts, cienaCesPmTdmT1PortStatisticsBinSasp=cienaCesPmTdmT1PortStatisticsBinSasp, PmInstanceType=PmInstanceType, cienaCesPmEgressQueueHistoryBinTable=cienaCesPmEgressQueueHistoryBinTable, cienaCesPmTdmPwHistoryBinTxPkt=cienaCesPmTdmPwHistoryBinTxPkt, cienaCesPmTdmDS3PortTotalStatisticsBinLoss=cienaCesPmTdmDS3PortTotalStatisticsBinLoss, cienaCesPmAdjustmentTcaLastUnderflowTcaScheme=cienaCesPmAdjustmentTcaLastUnderflowTcaScheme, cienaCesPmTdmOCnPortCurr24HBinDuration=cienaCesPmTdmOCnPortCurr24HBinDuration, cienaCesPmInstanceProfileType=cienaCesPmInstanceProfileType, cienaCesPmFloodContainerHistoryBinTable=cienaCesPmFloodContainerHistoryBinTable, cienaCesPmIntervalProfileIndex=cienaCesPmIntervalProfileIndex, cienaCesPmBasicOtuCurr24HBinState=cienaCesPmBasicOtuCurr24HBinState, cienaCesPmBasicTxHistoryBinTxFramesPerSec=cienaCesPmBasicTxHistoryBinTxFramesPerSec, cienaCesPmBasicTxHist24HBinBasicTxBytesPerSec=cienaCesPmBasicTxHist24HBinBasicTxBytesPerSec, cienaCesPmBasicOtuHist24HBinFieldsUnsupported=cienaCesPmBasicOtuHist24HBinFieldsUnsupported, cienaCesPmTdmT1PortStatisticsBinEntry=cienaCesPmTdmT1PortStatisticsBinEntry, cienaCesPmExtendedTxRxStatsBinTxLOutRangePkts=cienaCesPmExtendedTxRxStatsBinTxLOutRangePkts, cienaCesPmAlertTcaHighWatermarkTime=cienaCesPmAlertTcaHighWatermarkTime, cienaCesPmIntervalProfileOverflowThreshold=cienaCesPmIntervalProfileOverflowThreshold, cienaCesPmBasicTxRxBiDirHistoryBinState=cienaCesPmBasicTxRxBiDirHistoryBinState, cienaCesPmExtendedTxRxHist24HBinRxLOutRangePkts=cienaCesPmExtendedTxRxHist24HBinRxLOutRangePkts, cienaCesPmBasicRxCurr24HBinClearedTime=cienaCesPmBasicRxCurr24HBinClearedTime, cienaCesPmAccessTotalStatsBinStartTime=cienaCesPmAccessTotalStatsBinStartTime, cienaCesPmExtendedTxRxCurr24HBinTxCollPkts=cienaCesPmExtendedTxRxCurr24HBinTxCollPkts, cienaCesPmTdmPwStatisticsBinMbit=cienaCesPmTdmPwStatisticsBinMbit, cienaCesPmExtendedTxRxTotalStatsBin64OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin64OctsPkts, cienaCesPmExtendedTxRxHist24HBinTxDeferPkts=cienaCesPmExtendedTxRxHist24HBinTxDeferPkts, cienaCesPmBasicRxCurrBinBasicRxYellowBytes=cienaCesPmBasicRxCurrBinBasicRxYellowBytes, cienaCesPmAccessStatsBinStartTime=cienaCesPmAccessStatsBinStartTime, cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirCurrBinFwdRxDroppedBytes, cienaCesPmTdmDS3PortHistoryBinEndTime=cienaCesPmTdmDS3PortHistoryBinEndTime, cienaCesPmInstanceAdjustmentTcaTable=cienaCesPmInstanceAdjustmentTcaTable, cienaCesPmTdmOCnPortTotalStatisticsBinSesl=cienaCesPmTdmOCnPortTotalStatisticsBinSesl, cienaCesPmBasicOduHistoryBinSesOdu=cienaCesPmBasicOduHistoryBinSesOdu, cienaCesPmBasicOduHist24HBinSesOdu=cienaCesPmBasicOduHist24HBinSesOdu, cienaCesPmTdmOCnPortTotalStatisticsBinAisl=cienaCesPmTdmOCnPortTotalStatisticsBinAisl, cienaCesPmTdmT1PortTotalStatisticsBinEsl=cienaCesPmTdmT1PortTotalStatisticsBinEsl, cienaCesPmBasicPtpCurrBinOprnOts=cienaCesPmBasicPtpCurrBinOprnOts, cienaCesPmAdjustmentTcaUnderflowHighWatermarkTime=cienaCesPmAdjustmentTcaUnderflowHighWatermarkTime, cienaCesPmExtendedTxRxCurr24HBinTxFramesPerSec=cienaCesPmExtendedTxRxCurr24HBinTxFramesPerSec, cienaCesPmAccessCurr24HBinDuration=cienaCesPmAccessCurr24HBinDuration, cienaCesPmBasicTxHistoryBinClearTime=cienaCesPmBasicTxHistoryBinClearTime, cienaCesPmTdmE1PortCurr24HBinAs=cienaCesPmTdmE1PortCurr24HBinAs, cienaCesPmBasicRxStatsBinBasicRxDroppedFrames=cienaCesPmBasicRxStatsBinBasicRxDroppedFrames, cienaCesPmInstanceTable=cienaCesPmInstanceTable, cienaCesPmTdmE1PortTotalStatisticsBinStartTime=cienaCesPmTdmE1PortTotalStatisticsBinStartTime, cienaCesPmTdmT1PortHistoryBinDuration=cienaCesPmTdmT1PortHistoryBinDuration, cienaCesPmTdmOCnPortCurrBinSesl=cienaCesPmTdmOCnPortCurrBinSesl, cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedFrames, cienaCesPmIGMPCurr24HBinDuration=cienaCesPmIGMPCurr24HBinDuration, cienaCesPmExtendedTxRxCurr24HBin1024To1518OctsPkts=cienaCesPmExtendedTxRxCurr24HBin1024To1518OctsPkts, cienaCesPmExtendedTxRxCurrBin4096To9216OctsPkts=cienaCesPmExtendedTxRxCurrBin4096To9216OctsPkts, cienaCesPmBasicTxRxBiDirHist24HBinEntry=cienaCesPmBasicTxRxBiDirHist24HBinEntry, cienaCesPmExtendedTxRxAllTimeBinRxPausePkts=cienaCesPmExtendedTxRxAllTimeBinRxPausePkts, cienaCesPmBasicPtpCurrBinFieldsInvalid=cienaCesPmBasicPtpCurrBinFieldsInvalid, cienaCesPmExtendedTxRxTotalStatsBin2048To4095OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin2048To4095OctsPkts, cienaCesPmBasicOduCurr24HBinEntry=cienaCesPmBasicOduCurr24HBinEntry, cienaCesPmTdmOCnPortStatisticsBinEs=cienaCesPmTdmOCnPortStatisticsBinEs, cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkTime=cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkTime, cienaCesPmTdmPwHist24HBinRbit=cienaCesPmTdmPwHist24HBinRbit, cienaCesPmExtendedTxRxHist24HBinRxBcastPkts=cienaCesPmExtendedTxRxHist24HBinRxBcastPkts, cienaCesPmIntervalProfileEntry=cienaCesPmIntervalProfileEntry, cienaCesPmExtendedTxRxCurrBinRxBytesPerSec=cienaCesPmExtendedTxRxCurrBinRxBytesPerSec, cienaCesPmBasicOtuHistoryBinHccsOtu=cienaCesPmBasicOtuHistoryBinHccsOtu, cienaCesPmBasicOduCurr24HBinFieldsInvalid=cienaCesPmBasicOduCurr24HBinFieldsInvalid, cienaCesPmExtendedTxRxCurr24HBinLinkFlap=cienaCesPmExtendedTxRxCurr24HBinLinkFlap, cienaCesPmBasicPtpStatsBinOprMinOts=cienaCesPmBasicPtpStatsBinOprMinOts, PmInterfaceType=PmInterfaceType, cienaCesPmBasicTxRxCurr24HBinEndTime=cienaCesPmBasicTxRxCurr24HBinEndTime, cienaCesPmExtendedTxRxCurr24HBinRxPausePkts=cienaCesPmExtendedTxRxCurr24HBinRxPausePkts, cienaCesPmAlertTcaIntervalEndTime=cienaCesPmAlertTcaIntervalEndTime, cienaCesPmAdjustmentTcaLastOverflowTcaThresholdType=cienaCesPmAdjustmentTcaLastOverflowTcaThresholdType, cienaCesPmBasicRxCurrBinBasicRxDroppedBytes=cienaCesPmBasicRxCurrBinBasicRxDroppedBytes, cienaCesPmTdmPwCurrBinTtp=cienaCesPmTdmPwCurrBinTtp, cienaCesPmIntervalProfileCfgAttrsInUse=cienaCesPmIntervalProfileCfgAttrsInUse, cienaCesPmIgmpStats=cienaCesPmIgmpStats, PmTcaThresholdType=PmTcaThresholdType, cienaCesPmTdmDS3PortHistoryBinPuas=cienaCesPmTdmDS3PortHistoryBinPuas, cienaCesPmBasicTxRxHist24HBinBasicRxFramesPerSec=cienaCesPmBasicTxRxHist24HBinBasicRxFramesPerSec, cienaCesPmExtendedTxRxCurr24HBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx1519To2047OctsPkts, cienaCesPmTdmPwCurrBinLbit=cienaCesPmTdmPwCurrBinLbit, cienaCesPmTdmOCnPortCurrBinEs=cienaCesPmTdmOCnPortCurrBinEs, cienaCesPmExtendedTxRxHistoryBinTxSingleCollPkts=cienaCesPmExtendedTxRxHistoryBinTxSingleCollPkts, cienaCesPmIGMPStatsBinIgmpnumLeaves=cienaCesPmIGMPStatsBinIgmpnumLeaves, cienaCesPmAccessHist24HBinDuration=cienaCesPmAccessHist24HBinDuration, cienaCesPmTdmE1PortCurrBinState=cienaCesPmTdmE1PortCurrBinState, cienaCesPmBasicPtpTotalStatsBinOptAvgOch=cienaCesPmBasicPtpTotalStatsBinOptAvgOch, cienaCesPmTdmPwHistoryBinTtp=cienaCesPmTdmPwHistoryBinTtp, cienaCesPmBasicTxRxCurr24HBinStartTime=cienaCesPmBasicTxRxCurr24HBinStartTime, cienaCesPmBasicTxRxBiDirHistoryBinClearTime=cienaCesPmBasicTxRxBiDirHistoryBinClearTime, cienaCesPmInstance=cienaCesPmInstance, cienaCesPmExtendedTxRxTotalStatsBin512To1023OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin512To1023OctsPkts, cienaCesPmExtendedTxRxCurrBinLinkUp=cienaCesPmExtendedTxRxCurrBinLinkUp, cienaCesPmExtendedTxRxStatsBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxStatsBinTx512To1023OctsPkts, cienaCesPmIGMPCurrBinDuration=cienaCesPmIGMPCurrBinDuration, cienaCesPmTdmOCnPortHist24HBinClearTime=cienaCesPmTdmOCnPortHist24HBinClearTime, cienaCesPmIntervalProfileName=cienaCesPmIntervalProfileName, cienaCesPmBasicOtuStatsBinQStdevOtu=cienaCesPmBasicOtuStatsBinQStdevOtu, cienaCesPmTdmOCnPortCurr24HBinSess=cienaCesPmTdmOCnPortCurr24HBinSess, cienaCesPmBasicTxRxTotalStatsBinTxForwardedBytes=cienaCesPmBasicTxRxTotalStatsBinTxForwardedBytes, cienaCesPmBasicTxRxAllTimeBinBasicTxBytesPerSec=cienaCesPmBasicTxRxAllTimeBinBasicTxBytesPerSec, cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerAllTimeBinUnknownUnicastDroppedFrames, cienaCesPmInstanceTcaHistoryClear=cienaCesPmInstanceTcaHistoryClear, cienaCesPmIGMPTotalStatsBinIgmpnumLeaves=cienaCesPmIGMPTotalStatsBinIgmpnumLeaves, cienaCesPmBasicTxRxStatsBinRxDroppedFrames=cienaCesPmBasicTxRxStatsBinRxDroppedFrames, cienaCesPmTdmDS3PortHistoryBinPes=cienaCesPmTdmDS3PortHistoryBinPes, cienaCesPmExtendedTxRxTotalStatsBinLinkDown=cienaCesPmExtendedTxRxTotalStatsBinLinkDown, cienaCesPmEgressQueueHist24HBinMulticastDroppedFrames=cienaCesPmEgressQueueHist24HBinMulticastDroppedFrames, cienaCesPmBasicTxRxCurrBinRxDroppedFrames=cienaCesPmBasicTxRxCurrBinRxDroppedFrames, cienaCesPmTdmOCnPortTotalStatisticsBinTable=cienaCesPmTdmOCnPortTotalStatisticsBinTable, cienaCesPmTdmE1PortHistoryBinEntry=cienaCesPmTdmE1PortHistoryBinEntry, cienaCesPmFloodContainerAllTimeBinTable=cienaCesPmFloodContainerAllTimeBinTable, cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedFrames=cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedFrames, cienaCesPmEgressQueueCurrBinMulticastDroppedBytes=cienaCesPmEgressQueueCurrBinMulticastDroppedBytes, cienaCesPmTdmOCnPortStatisticsBinSesl=cienaCesPmTdmOCnPortStatisticsBinSesl, cienaCesPmAdjustmentTcaLowerBoundaryValue=cienaCesPmAdjustmentTcaLowerBoundaryValue, cienaCesPmBasicTxRxHist24HBinDuration=cienaCesPmBasicTxRxHist24HBinDuration, cienaCesPmEgressQueueCurr24HBinState=cienaCesPmEgressQueueCurr24HBinState, cienaCesPmBasicTxRxStatsBinTxForwardedBytes=cienaCesPmBasicTxRxStatsBinTxForwardedBytes, cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirHistoryBinRevRxAcceptedFrames, cienaCesPmTdmPwCurr24HBinReorder=cienaCesPmTdmPwCurr24HBinReorder, cienaCesPmAdjustmentTcaLastUnderflowTcaCount=cienaCesPmAdjustmentTcaLastUnderflowTcaCount, cienaCesPmQueueGroupHist24HBinTable=cienaCesPmQueueGroupHist24HBinTable, cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedBytes=cienaCesPmEgressQueueCurr24HBinMulticastEnqueuedBytes, cienaCesPmBasicOduStatisticsBinTable=cienaCesPmBasicOduStatisticsBinTable)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmEgressQueueHistoryBinClearTime=cienaCesPmEgressQueueHistoryBinClearTime, cienaCesPmIGMPAllTimeBinEntry=cienaCesPmIGMPAllTimeBinEntry, cienaCesPmTdmT1PortHist24HBinUasp=cienaCesPmTdmT1PortHist24HBinUasp, cienaCesPmExtendedTxRxCurr24HBinTxMcastPkts=cienaCesPmExtendedTxRxCurr24HBinTxMcastPkts, cienaCesPmFloodContainerHistoryBinClearTime=cienaCesPmFloodContainerHistoryBinClearTime, cienaCesPmBasicTxRxBiDirCurrBinStartTime=cienaCesPmBasicTxRxBiDirCurrBinStartTime, cienaCesPmExtendedTxRxCurr24HBin65To127OctsPkts=cienaCesPmExtendedTxRxCurr24HBin65To127OctsPkts, cienaCesPmEgressQueueCurr24HBinClearedTime=cienaCesPmEgressQueueCurr24HBinClearedTime, cienaCesPmEgressQueueTotalStatsBinMulticastDroppedFrames=cienaCesPmEgressQueueTotalStatsBinMulticastDroppedFrames, cienaCesPmTdmPwStatisticsBinRxPkt=cienaCesPmTdmPwStatisticsBinRxPkt, cienaCesPmBasicPtpStatisticsBinTable=cienaCesPmBasicPtpStatisticsBinTable, cienaCesPmTdmDS3PortStatisticsBinCvl=cienaCesPmTdmDS3PortStatisticsBinCvl, cienaCesPmBasicTxHist24HBinBasicTxForwardedBytes=cienaCesPmBasicTxHist24HBinBasicTxForwardedBytes, cienaCesPmTdmE1PortCurr24HBinState=cienaCesPmTdmE1PortCurr24HBinState, cienaCesPmBasicOduStatsBinUasOdu=cienaCesPmBasicOduStatsBinUasOdu, cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedFrames=cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedFrames, cienaCesPmFloodContainerHistoryBinL2McastDroppedBytes=cienaCesPmFloodContainerHistoryBinL2McastDroppedBytes, cienaCesPmExtendedTxRxCurr24HBinTxCrcErrorPkts=cienaCesPmExtendedTxRxCurr24HBinTxCrcErrorPkts, cienaCesPmBasicOduTotalStatsBinUasOdu=cienaCesPmBasicOduTotalStatsBinUasOdu, cienaCesPmIntervalProfileTable=cienaCesPmIntervalProfileTable, cienaCesPmBasicTxRxCurrBinRxAcceptedBytes=cienaCesPmBasicTxRxCurrBinRxAcceptedBytes, cienaCesPmEgressQueueCurrBinUnicastDroppedFrames=cienaCesPmEgressQueueCurrBinUnicastDroppedFrames, cienaCesPmTdmE1PortHistoryBinState=cienaCesPmTdmE1PortHistoryBinState, cienaCesPmTdmPwHistoryBinTable=cienaCesPmTdmPwHistoryBinTable, cienaCesPmBasicRxHist24HBinClearTime=cienaCesPmBasicRxHist24HBinClearTime, cienaCesPmExtendedTxRxStatsBinTxFramesPerSec=cienaCesPmExtendedTxRxStatsBinTxFramesPerSec, cienaCesPmBasicOtuCurrBinCvOtu=cienaCesPmBasicOtuCurrBinCvOtu, cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerHist24HBinUnknownUnicastDroppedFrames, cienaCesPmTdmE1PortCurrBinStartTime=cienaCesPmTdmE1PortCurrBinStartTime, cienaCesPmTdmPwCurr24HBinDuration=cienaCesPmTdmPwCurr24HBinDuration, cienaCesPmTdmT1PortStatisticsBinSesp=cienaCesPmTdmT1PortStatisticsBinSesp, cienaCesPmTdmPwHistoryBinIndex=cienaCesPmTdmPwHistoryBinIndex, cienaCesPmAlertTcaLastTcaState=cienaCesPmAlertTcaLastTcaState, cienaCesPmExtendedTxRxHistoryBinLinkDown=cienaCesPmExtendedTxRxHistoryBinLinkDown, cienaCesPmBasicTxRxCurrBinState=cienaCesPmBasicTxRxCurrBinState, cienaCesPmExtendedTxRxStatsBinTx256To511OctsPkts=cienaCesPmExtendedTxRxStatsBinTx256To511OctsPkts, cienaCesPmExtendedTxRxCurrBinTxUcastPkts=cienaCesPmExtendedTxRxCurrBinTxUcastPkts, cienaCesPmBasicOtuTotalStatsBinEsOtu=cienaCesPmBasicOtuTotalStatsBinEsOtu, cienaCesPmTdmPwStatisticsBinEsp=cienaCesPmTdmPwStatisticsBinEsp, cienaCesPmQueueGroupHist24HBinEnqueuedBytes=cienaCesPmQueueGroupHist24HBinEnqueuedBytes, cienaCesPmTdmT1PortHist24HBinStartTime=cienaCesPmTdmT1PortHist24HBinStartTime, cienaCesPmTdmT1PortCurrBinTable=cienaCesPmTdmT1PortCurrBinTable, cienaCesPmExtendedTxRxHist24HBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxHist24HBinTxLCheckErrorPkts, cienaCesPmTdmOCnPortCurrBinSess=cienaCesPmTdmOCnPortCurrBinSess, cienaCesPmBasicTxRxStatsBinRxAcceptedFrames=cienaCesPmBasicTxRxStatsBinRxAcceptedFrames, cienaCesPmBasicTxRxHist24HBinBasicRxBytesPerSec=cienaCesPmBasicTxRxHist24HBinBasicRxBytesPerSec, cienaCesPmBasicOtuHist24HBinQMaxOtu=cienaCesPmBasicOtuHist24HBinQMaxOtu, cienaCesPmTdmT1PortHist24HBinLossl=cienaCesPmTdmT1PortHist24HBinLossl, cienaCesPmAdjustmentTcaOverflowHighWatermarkStats=cienaCesPmAdjustmentTcaOverflowHighWatermarkStats, cienaCesPmExtendedTxRxAllTimeBin128To255OctsPkts=cienaCesPmExtendedTxRxAllTimeBin128To255OctsPkts, cienaCesPmBasicPtpCurrBinOprMinOts=cienaCesPmBasicPtpCurrBinOprMinOts, cienaCesPmBasicOtuCurr24HBinEntry=cienaCesPmBasicOtuCurr24HBinEntry, cienaCesPmTdmPwStatisticsBinSesp=cienaCesPmTdmPwStatisticsBinSesp, cienaCesPmExtendedTxRxHist24HBinTxBytes=cienaCesPmExtendedTxRxHist24HBinTxBytes, cienaCesPmBasicRxHist24HBinBasicRxBytesPerSec=cienaCesPmBasicRxHist24HBinBasicRxBytesPerSec, cienaCesPmFloodContainerAllTimeBinL2McastDroppedBytes=cienaCesPmFloodContainerAllTimeBinL2McastDroppedBytes, cienaCesPmExtendedTxRxAllTimeBinTxPkts=cienaCesPmExtendedTxRxAllTimeBinTxPkts, cienaCesPmExtendedTxRxCurrBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxCurrBinTx1519To2047OctsPkts, cienaCesPmAccessTotalStatsBinAccessHitFrames=cienaCesPmAccessTotalStatsBinAccessHitFrames, cienaCesPmTdmOCnPortCurr24HBinEb=cienaCesPmTdmOCnPortCurr24HBinEb, cienaCesPmTdmOCnPortHist24HBinEntry=cienaCesPmTdmOCnPortHist24HBinEntry, cienaCesPmExtendedTxRxCurr24HBin128To255OctsPkts=cienaCesPmExtendedTxRxCurr24HBin128To255OctsPkts, cienaCesPmBasicTxRxHist24HBinStartTime=cienaCesPmBasicTxRxHist24HBinStartTime, cienaCesPmTdmOCnPortCurrBinSefss=cienaCesPmTdmOCnPortCurrBinSefss, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxDroppedBytes, cienaCesPmTdmOCnPortStatisticsBinEntry=cienaCesPmTdmOCnPortStatisticsBinEntry, cienaCesPmBasicOtuStatsBinQMaxOtu=cienaCesPmBasicOtuStatsBinQMaxOtu, cienaCesPmExtendedTxRxStatsBinInDiscards=cienaCesPmExtendedTxRxStatsBinInDiscards, cienaCesPmQueueGroupHist24HBinDroppedFrames=cienaCesPmQueueGroupHist24HBinDroppedFrames, cienaCesPmPersistenceInterval=cienaCesPmPersistenceInterval, cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirHistoryBinFwdTxForwardedBytes, cienaCesPmTdmOCnPortCurrBinLoss=cienaCesPmTdmOCnPortCurrBinLoss, cienaCesPmExtendedTxRxHist24HBin1024To1518OctsPkts=cienaCesPmExtendedTxRxHist24HBin1024To1518OctsPkts, cienaCesPmBasicOtuCurr24HBinDuration=cienaCesPmBasicOtuCurr24HBinDuration, cienaCesPmBasicTxRxCurr24HBinTxFramesPerSec=cienaCesPmBasicTxRxCurr24HBinTxFramesPerSec, cienaCesPmBasicTxTotalStatisticsBinTable=cienaCesPmBasicTxTotalStatisticsBinTable, cienaCesPmBasicPtpCurr24HBinOprMinOts=cienaCesPmBasicPtpCurr24HBinOprMinOts, cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMax=cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValueMax, cienaCesPmIGMPCurr24HBinIgmpnumQueryTimeouts=cienaCesPmIGMPCurr24HBinIgmpnumQueryTimeouts, cienaCesPmBasicOtuHistoryBinQMinOtu=cienaCesPmBasicOtuHistoryBinQMinOtu, cienaCesPmExtendedTxRxHist24HBinLinkUp=cienaCesPmExtendedTxRxHist24HBinLinkUp, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedBytes, cienaCesPmQueueGroupCurr24HBinDroppedBytes=cienaCesPmQueueGroupCurr24HBinDroppedBytes, cienaCesPmAlertTcaState=cienaCesPmAlertTcaState, cienaCesPmIntervalProfileUnderflowCount=cienaCesPmIntervalProfileUnderflowCount, cienaCesPmTdmDS3PortCurr24HBinClearTime=cienaCesPmTdmDS3PortCurr24HBinClearTime, cienaCesPmIGMPTotalStatsBinStartTime=cienaCesPmIGMPTotalStatsBinStartTime, cienaCesPmBasicTxRxBiDirCurrBinFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirCurrBinFwdTxFramesPerSec, cienaCesPmBasicTxRxHistoryBinDuration=cienaCesPmBasicTxRxHistoryBinDuration, cienaCesPmTdmPwHist24HBinLops=cienaCesPmTdmPwHist24HBinLops, cienaCesPmExtendedTxRxAllTimeBinJabbersPkts=cienaCesPmExtendedTxRxAllTimeBinJabbersPkts, cienaCesPmIGMPHistoryBinDuration=cienaCesPmIGMPHistoryBinDuration, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedBytes, cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerStatsBinUnknownUnicastDroppedBytes, cienaCesPmIGMPHistoryBinIgmpnumRouterDiscards=cienaCesPmIGMPHistoryBinIgmpnumRouterDiscards, cienaCesPmEgressQueueHist24HBinMulticastDroppedBytes=cienaCesPmEgressQueueHist24HBinMulticastDroppedBytes, cienaCesPmBasicRxAllTimeBinBasicRxDroppedBytes=cienaCesPmBasicRxAllTimeBinBasicRxDroppedBytes, cienaCesPmEgressQueueAllTimeBinTable=cienaCesPmEgressQueueAllTimeBinTable, cienaCesPmBasicTxHistoryBinTxForwardedFrames=cienaCesPmBasicTxHistoryBinTxForwardedFrames, cienaCesPmTdmT1PortHistoryBinSasp=cienaCesPmTdmT1PortHistoryBinSasp, cienaCesPmBasicOduHistoryBinFcOdu=cienaCesPmBasicOduHistoryBinFcOdu, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowFrames, cienaCesPmExtendedTxRxHistoryBinRxBytesPerSec=cienaCesPmExtendedTxRxHistoryBinRxBytesPerSec, cienaCesPmEgressQueueStatsBinUnicastDroppedBytes=cienaCesPmEgressQueueStatsBinUnicastDroppedBytes, cienaCesPmIntervalProfileUnderflowThresholdPercentage=cienaCesPmIntervalProfileUnderflowThresholdPercentage, cienaCesPmQueueGroupCurrBinEntry=cienaCesPmQueueGroupCurrBinEntry, cienaCesPmBasicTxRxCurrBinClearedTime=cienaCesPmBasicTxRxCurrBinClearedTime, cienaCesPmQueueGroupTotalStatisticsBinTable=cienaCesPmQueueGroupTotalStatisticsBinTable, cienaCesPmBasicRxCurrBinBasicRxAcceptedBytes=cienaCesPmBasicRxCurrBinBasicRxAcceptedBytes, cienaCesPmExtendedTxRxHistoryBinState=cienaCesPmExtendedTxRxHistoryBinState, cienaCesPmTdmPwTotalStatisticsBinEntry=cienaCesPmTdmPwTotalStatisticsBinEntry, cienaCesPmExtendedTxRxHist24HBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx2048To4095OctsPkts, cienaCesPmExtendedTxRxHist24HBinTxLateCollPkts=cienaCesPmExtendedTxRxHist24HBinTxLateCollPkts, cienaCesPmInstanceOperState=cienaCesPmInstanceOperState, cienaCesPmBasicRxStatisticsBinEntry=cienaCesPmBasicRxStatisticsBinEntry, cienaCesPmExtendedTxRxHist24HBinOversizePkts=cienaCesPmExtendedTxRxHist24HBinOversizePkts, PmProfileFieldMapBasicPtp=PmProfileFieldMapBasicPtp, cienaCesPmExtendedTxRxCurr24HBinTx65To127OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx65To127OctsPkts, cienaCesPmFloodContainerCurrBinBcastDroppedBytes=cienaCesPmFloodContainerCurrBinBcastDroppedBytes, cienaCesPmInstanceType=cienaCesPmInstanceType, cienaCesPmBasicTxRxStatsBinStartTime=cienaCesPmBasicTxRxStatsBinStartTime, cienaCesPmExtendedTxRxCurrBinTxLOutRangePkts=cienaCesPmExtendedTxRxCurrBinTxLOutRangePkts, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmExtendedTxRxHistoryBinTxUcastPkts=cienaCesPmExtendedTxRxHistoryBinTxUcastPkts, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxYellowFrames, cienaCesPmBasicPtpCurr24HBinDgdMaxOch=cienaCesPmBasicPtpCurr24HBinDgdMaxOch, cienaCesPmBasicOtuCurr24HBinStartTime=cienaCesPmBasicOtuCurr24HBinStartTime, cienaCesPmBasicOduHist24HBinEsOdu=cienaCesPmBasicOduHist24HBinEsOdu, cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirCurrBinFwdRxYellowFrames, cienaCesPmAdjustmentTcaLastIntvlEndTcaBoundaryValue=cienaCesPmAdjustmentTcaLastIntvlEndTcaBoundaryValue, cienaCesPmExtendedTxRxTotalStatsBinTx64OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx64OctsPkts, cienaCesPmFloodContainerAllTimeBinBcastDroppedBytes=cienaCesPmFloodContainerAllTimeBinBcastDroppedBytes, cienaCesPmAlertTcaLastTcaThresholdType=cienaCesPmAlertTcaLastTcaThresholdType, cienaCesPmTdmT1PortCurr24HBinTtp=cienaCesPmTdmT1PortCurr24HBinTtp, cienaCesPmBasicTxHistoryBinStartTime=cienaCesPmBasicTxHistoryBinStartTime, cienaCesPmBasicOduCurr24HBinClearedTime=cienaCesPmBasicOduCurr24HBinClearedTime, cienaCesPmBasicRxHistoryBinBasicRxDroppedFrames=cienaCesPmBasicRxHistoryBinBasicRxDroppedFrames, cienaCesPmBasicOduHistoryBinFieldsUnsupported=cienaCesPmBasicOduHistoryBinFieldsUnsupported, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscards=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscards, cienaCesPmExtendedTxRxHistoryBin512To1023OctsPkts=cienaCesPmExtendedTxRxHistoryBin512To1023OctsPkts, cienaCesPmAdjustmentTcaEventsIntervalEndUpperBoundary=cienaCesPmAdjustmentTcaEventsIntervalEndUpperBoundary, cienaCesPmBasicPtpTotalStatsBinDgdAvgOch=cienaCesPmBasicPtpTotalStatsBinDgdAvgOch, cienaCesPmBasicTxRxBiDirStatsBinFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirStatsBinFwdTxFramesPerSec, cienaCesPmTdmOCnPortTotalStatisticsBinCvs=cienaCesPmTdmOCnPortTotalStatisticsBinCvs, cienaCesPmExtendedTxRxHist24HBinTxUnderRunPkts=cienaCesPmExtendedTxRxHist24HBinTxUnderRunPkts, cienaCesPmTdmE1PortHistoryBinClearTime=cienaCesPmTdmE1PortHistoryBinClearTime, cienaCesPmBasicOtuTotalStatsBinQStdevOtu=cienaCesPmBasicOtuTotalStatsBinQStdevOtu, cienaCesPmTdmE1PortHist24HBinEs=cienaCesPmTdmE1PortHist24HBinEs, cienaCesPmExtendedTxRxCurr24HBinRxBytes=cienaCesPmExtendedTxRxCurr24HBinRxBytes, cienaCesPmExtendedTxRxCurr24HBinRxLOutRangePkts=cienaCesPmExtendedTxRxCurr24HBinRxLOutRangePkts, cienaCesPmExtendedTxRxHistoryBin128To255OctsPkts=cienaCesPmExtendedTxRxHistoryBin128To255OctsPkts, cienaCesPmBasicOduTotalStatisticsBinEntry=cienaCesPmBasicOduTotalStatisticsBinEntry, cienaCesPmTdmDS3PortHistoryBinState=cienaCesPmTdmDS3PortHistoryBinState, cienaCesPmBasicTxCurr24HBinDuration=cienaCesPmBasicTxCurr24HBinDuration, cienaCesPmTdmE1PortStatisticsBinAs=cienaCesPmTdmE1PortStatisticsBinAs, cienaCesPmExtendedTxRxHist24HBinTxExCollPkts=cienaCesPmExtendedTxRxHist24HBinTxExCollPkts, cienaCesPmTdmDS3PortStatisticsBinClearTime=cienaCesPmTdmDS3PortStatisticsBinClearTime, cienaCesPmBasicRxHist24HBinDuration=cienaCesPmBasicRxHist24HBinDuration, cienaCesPmBasicOtuHistoryBinUncFecBlkOtu=cienaCesPmBasicOtuHistoryBinUncFecBlkOtu, cienaCesPmTdmE1PortCurr24HBinEntry=cienaCesPmTdmE1PortCurr24HBinEntry, cienaCesPmBasicOtuCurrBinState=cienaCesPmBasicOtuCurrBinState, cienaCesPmTdmOCnPortStatisticsBinSefss=cienaCesPmTdmOCnPortStatisticsBinSefss, cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmExtendedTxRxCurr24HBinRxInErrorPkts=cienaCesPmExtendedTxRxCurr24HBinRxInErrorPkts, cienaCesPmExtendedTxRxAllTimeBinEntry=cienaCesPmExtendedTxRxAllTimeBinEntry, cienaCesPmTdmE1PortCurrBinEntry=cienaCesPmTdmE1PortCurrBinEntry, cienaCesPmFloodContainerTotalStatisticsBinTable=cienaCesPmFloodContainerTotalStatisticsBinTable, cienaCesPmBasicOduCurr24HBinFcOdu=cienaCesPmBasicOduCurr24HBinFcOdu, cienaCesPmAccessCurrBinTable=cienaCesPmAccessCurrBinTable, cienaCesPmExtendedTxRxHistoryBinClearTime=cienaCesPmExtendedTxRxHistoryBinClearTime, cienaCesPmExtendedTxRxHist24HBinTx512To1023OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx512To1023OctsPkts, cienaCesPmTdmPwHist24HBinUnderrun=cienaCesPmTdmPwHist24HBinUnderrun, cienaCesPmExtendedTxRxStatsBinTxTBytes=cienaCesPmExtendedTxRxStatsBinTxTBytes, cienaCesPmExtendedTxRxStatsBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxStatsBinTxLCheckErrorPkts, cienaCesPmTdmT1PortCurrBinCvp=cienaCesPmTdmT1PortCurrBinCvp, cienaCesPmAccessHist24HBinAccessHitFrames=cienaCesPmAccessHist24HBinAccessHitFrames, cienaCesPmBasicTxRxBiDirStatsBinRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirStatsBinRevTxBytesPerSec, cienaCesPmBasicRxCurr24HBinBasicRxAcceptedFrames=cienaCesPmBasicRxCurr24HBinBasicRxAcceptedFrames, cienaCesPmIGMPStatsBinIgmpnumRouterDiscards=cienaCesPmIGMPStatsBinIgmpnumRouterDiscards, cienaCesPmTdmDS3PortHistoryBinSesl=cienaCesPmTdmDS3PortHistoryBinSesl, cienaCesPmFloodContainerCurrBinClearedTime=cienaCesPmFloodContainerCurrBinClearedTime, cienaCesPmBasicTxStatsBinTxBytesPerSec=cienaCesPmBasicTxStatsBinTxBytesPerSec, cienaCesPmExtendedTxRxHist24HBinEndTime=cienaCesPmExtendedTxRxHist24HBinEndTime, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedFrames, cienaCesPmTdmDS3PortHist24HBinSefs=cienaCesPmTdmDS3PortHist24HBinSefs, cienaCesPmBasicPtpTotalStatsBinOprnOts=cienaCesPmBasicPtpTotalStatsBinOprnOts, cienaCesPmTdmDS3PortStats=cienaCesPmTdmDS3PortStats, cienaCesPmTdmE1PortHist24HBinEndTime=cienaCesPmTdmE1PortHist24HBinEndTime, cienaCesPmAccessHist24HBinAccessHitBytes=cienaCesPmAccessHist24HBinAccessHitBytes, cienaCesPmExtendedTxRxHist24HBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx1519To2047OctsPkts, cienaCesPmAccessCurr24HBinAccessHitFrames=cienaCesPmAccessCurr24HBinAccessHitFrames, cienaCesPmInstanceInterfaceType=cienaCesPmInstanceInterfaceType, cienaCesPmExtendedTxRxCurr24HBinTxDeferPkts=cienaCesPmExtendedTxRxCurr24HBinTxDeferPkts, cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedBytes=cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedBytes, cienaCesPmTdmDS3PortCurr24HBinPses=cienaCesPmTdmDS3PortCurr24HBinPses, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxYellowBytes, cienaCesPmExtendedTxRxTotalStatsBinTxLOutRangePkts=cienaCesPmExtendedTxRxTotalStatsBinTxLOutRangePkts, cienaCesPmTdmT1PortHist24HBinAsp=cienaCesPmTdmT1PortHist24HBinAsp, cienaCesPmAccessCurrBinEntry=cienaCesPmAccessCurrBinEntry, cienaCesPmExtendedTxRxHist24HBinTxPkts=cienaCesPmExtendedTxRxHist24HBinTxPkts, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxBytesPerSec, cienaCesPmBasicRxHist24HBinStartTime=cienaCesPmBasicRxHist24HBinStartTime, cienaCesPmBasicPtpCurrBinOptMinOch=cienaCesPmBasicPtpCurrBinOptMinOch, cienaCesPmTdmPwStatisticsBinEs=cienaCesPmTdmPwStatisticsBinEs, cienaCesPmExtendedTxRxTotalStatsBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx1519To2047OctsPkts, cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirHistoryBinRevTxForwardedFrames, cienaCesPmBasicTxRxStatisticsBinEntry=cienaCesPmBasicTxRxStatisticsBinEntry, cienaCesPmTdmT1PortHistoryBinEsl=cienaCesPmTdmT1PortHistoryBinEsl, cienaCesPmBasicRxCurrBinBasicRxYellowFrames=cienaCesPmBasicRxCurrBinBasicRxYellowFrames, cienaCesPmFloodContainerCurr24HBinDuration=cienaCesPmFloodContainerCurr24HBinDuration, cienaCesPmExtendedTxRxHistoryBinRxPausePkts=cienaCesPmExtendedTxRxHistoryBinRxPausePkts, cienaCesPmExtendedTxRxTotalStatsBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx4096To9216OctsPkts, cienaCesPmAlertTcaLastTcaUnits=cienaCesPmAlertTcaLastTcaUnits, cienaCesPmIGMPHist24HBinIgmpnumQueries=cienaCesPmIGMPHist24HBinIgmpnumQueries, cienaCesPmInstanceAlertTcaTable=cienaCesPmInstanceAlertTcaTable, cienaCesPmEgressQueueStatsBinMulticastEnqueuedFrames=cienaCesPmEgressQueueStatsBinMulticastEnqueuedFrames, cienaCesPmInstanceIndex=cienaCesPmInstanceIndex, cienaCesPmTdmOCnPortHist24HBinDuration=cienaCesPmTdmOCnPortHist24HBinDuration, cienaCesPmExtendedTxRxCurrBin128To255OctsPkts=cienaCesPmExtendedTxRxCurrBin128To255OctsPkts, cienaCesPmBasicTxRxCurr24HBinEntry=cienaCesPmBasicTxRxCurr24HBinEntry, cienaCesPmExtendedTxRxHist24HBinRxBytes=cienaCesPmExtendedTxRxHist24HBinRxBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxAcceptedFrames, cienaCesPmExtendedTxRxStatsBin65To127OctsPkts=cienaCesPmExtendedTxRxStatsBin65To127OctsPkts, cienaCesPmExtendedTxRxCurrBinLinkFlap=cienaCesPmExtendedTxRxCurrBinLinkFlap, cienaCesPmBasicOduCurrBinCvOdu=cienaCesPmBasicOduCurrBinCvOdu, cienaCesPmTdmOCnPortTotalStatisticsBinStartTime=cienaCesPmTdmOCnPortTotalStatisticsBinStartTime, cienaCesPmAccessHistoryBinAccessHitBytes=cienaCesPmAccessHistoryBinAccessHitBytes, cienaCesPmIGMPStatsBinIgmpnumJoins=cienaCesPmIGMPStatsBinIgmpnumJoins, cienaCesPmTdmT1PortTotalStatisticsBinUasp=cienaCesPmTdmT1PortTotalStatisticsBinUasp, cienaCesPmBasicOtuHist24HBinQMinOtu=cienaCesPmBasicOtuHist24HBinQMinOtu, cienaCesPmBasicPtpHistoryBinOptAvgOch=cienaCesPmBasicPtpHistoryBinOptAvgOch, cienaCesPmTdmE1PortStatisticsBinEntry=cienaCesPmTdmE1PortStatisticsBinEntry, cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable=cienaCesPmBasicTxRxBiDirTotalStatisticsBinTable, cienaCesPmTdmT1PortTotalStatisticsBinAsp=cienaCesPmTdmT1PortTotalStatisticsBinAsp, cienaCesPmBasicPtpCurrBinOptAvgOch=cienaCesPmBasicPtpCurrBinOptAvgOch, cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedBytes=cienaCesPmEgressQueueAllTimeBinMulticastEnqueuedBytes, cienaCesPmIGMPHistoryBinIndex=cienaCesPmIGMPHistoryBinIndex, cienaCesPmFloodContainerCurr24HBinState=cienaCesPmFloodContainerCurr24HBinState, cienaCesPmBasicRxHistoryBinIndex=cienaCesPmBasicRxHistoryBinIndex, cienaCesPmTdmPwTotalStatisticsBinCvp=cienaCesPmTdmPwTotalStatisticsBinCvp, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedBytes, cienaCesPmExtendedTxRxHist24HBinRxCrcErrorPkts=cienaCesPmExtendedTxRxHist24HBinRxCrcErrorPkts, cienaCesPmAccessAllTimeBinTable=cienaCesPmAccessAllTimeBinTable, cienaCesPmBasicPtpTotalStatsBinOptMaxOch=cienaCesPmBasicPtpTotalStatsBinOptMaxOch, cienaCesPmBasicTxRxHistoryBinEndTime=cienaCesPmBasicTxRxHistoryBinEndTime, cienaCesPmExtendedTxRxHistoryBinDuration=cienaCesPmExtendedTxRxHistoryBinDuration, cienaCesPmEgressQueueHistoryBinStartTime=cienaCesPmEgressQueueHistoryBinStartTime, cienaCesPmExtendedTxRxStatsBinTxMcastPkts=cienaCesPmExtendedTxRxStatsBinTxMcastPkts, cienaCesPmTdmOCnPortCurrBinEb=cienaCesPmTdmOCnPortCurrBinEb, cienaCesPmExtendedTxRxHistoryBinTx1519To2047OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx1519To2047OctsPkts, cienaCesPmIGMPStatsBinIgmpnumBadChecksum=cienaCesPmIGMPStatsBinIgmpnumBadChecksum, cienaCesPmTdmPwHistoryBinRxPkt=cienaCesPmTdmPwHistoryBinRxPkt, cienaCesPmTdmOCnPortHist24HBinAisl=cienaCesPmTdmOCnPortHist24HBinAisl, cienaCesPmAccessStatsBinAccessHitBytes=cienaCesPmAccessStatsBinAccessHitBytes)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmIGMPAllTimeBinIgmpnumUnknownPktType=cienaCesPmIGMPAllTimeBinIgmpnumUnknownPktType, cienaCesPmBasicOduHistoryBinStartTime=cienaCesPmBasicOduHistoryBinStartTime, cienaCesPmTdmT1PortCurrBinTtp=cienaCesPmTdmT1PortCurrBinTtp, cienaCesPmBasicRxCurrBinStartTime=cienaCesPmBasicRxCurrBinStartTime, cienaCesPmBasicTxRxHistoryBinRxDroppedFrames=cienaCesPmBasicTxRxHistoryBinRxDroppedFrames, cienaCesPmBasicPtpHist24HBinTable=cienaCesPmBasicPtpHist24HBinTable, cienaCesPmTdmE1PortTotalStatisticsBinUas=cienaCesPmTdmE1PortTotalStatisticsBinUas, cienaCesPmBasicOtuCurrBinSesOtu=cienaCesPmBasicOtuCurrBinSesOtu, cienaCesPmBasicPtpCurr24HBinOptOch=cienaCesPmBasicPtpCurr24HBinOptOch, cienaCesPmTdmOCnPortTotalStatisticsBinCvl=cienaCesPmTdmOCnPortTotalStatisticsBinCvl, cienaCesPmTdmT1PortCurrBinAsp=cienaCesPmTdmT1PortCurrBinAsp, cienaCesPmTdmOCnPortHistoryBinIndex=cienaCesPmTdmOCnPortHistoryBinIndex, cienaCesPmAdjustmentTcaScheme=cienaCesPmAdjustmentTcaScheme, cienaCesPmQueueGroupCurr24HBinEnqueuedBytes=cienaCesPmQueueGroupCurr24HBinEnqueuedBytes, cienaCesPmExtendedTxRxCurr24HBinOversizePkts=cienaCesPmExtendedTxRxCurr24HBinOversizePkts, cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedBytes, cienaCesPmFloodContainerAllTimeBinL2McastDroppedFrames=cienaCesPmFloodContainerAllTimeBinL2McastDroppedFrames, cienaCesPmTdmE1PortTotalStatisticsBinTt=cienaCesPmTdmE1PortTotalStatisticsBinTt, cienaCesPmBasicPtpCurr24HBinOprMinOch=cienaCesPmBasicPtpCurr24HBinOprMinOch, cienaCesPmBasicPtpCurr24HBinOprOch=cienaCesPmBasicPtpCurr24HBinOprOch, cienaCesPmBasicOtuCurrBinDuration=cienaCesPmBasicOtuCurrBinDuration, cienaCesPmTdmPwStatisticsBinTxPkt=cienaCesPmTdmPwStatisticsBinTxPkt, cienaCesPmExtendedTxRxAllTimeBinTxExDeferPkts=cienaCesPmExtendedTxRxAllTimeBinTxExDeferPkts, cienaCesPmExtendedTxRxTotalStatsBinOversizePkts=cienaCesPmExtendedTxRxTotalStatsBinOversizePkts, cienaCesPmTdmOCnPortCurrBinCvl=cienaCesPmTdmOCnPortCurrBinCvl, cienaCesPmExtendedTxRxHistoryBinRxInErrorPkts=cienaCesPmExtendedTxRxHistoryBinRxInErrorPkts, cienaCesPmThreshold=cienaCesPmThreshold, cienaCesPmTdmT1PortHistoryBinEndTime=cienaCesPmTdmT1PortHistoryBinEndTime, cienaCesPmFloodContainerCurr24HBinTable=cienaCesPmFloodContainerCurr24HBinTable, cienaCesPmIGMPHistoryBinIgmpnumQueries=cienaCesPmIGMPHistoryBinIgmpnumQueries, cienaCesPmExtendedTxRxCurrBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxCurrBinTxLCheckErrorPkts, cienaCesPmAccessCurr24HBinTable=cienaCesPmAccessCurr24HBinTable, cienaCesPmTdmOCnPortStatisticsBinUas=cienaCesPmTdmOCnPortStatisticsBinUas, cienaCesPmInstanceEndTime=cienaCesPmInstanceEndTime, cienaCesPmInstanceAlertTcaEntry=cienaCesPmInstanceAlertTcaEntry, cienaCesPmTdmE1PortTotalStatisticsBinEb=cienaCesPmTdmE1PortTotalStatisticsBinEb, cienaCesPmExtendedTxRxHistoryBinTxGiantPkts=cienaCesPmExtendedTxRxHistoryBinTxGiantPkts, cienaCesPmExtendedTxRxCurrBinTxPausePkts=cienaCesPmExtendedTxRxCurrBinTxPausePkts, cienaCesPmBasicTxHist24HBinEntry=cienaCesPmBasicTxHist24HBinEntry, cienaCesPmEgressQueueCurrBinDuration=cienaCesPmEgressQueueCurrBinDuration, cienaCesPmExtendedTxRxHistoryBin1519To2047OctsPkts=cienaCesPmExtendedTxRxHistoryBin1519To2047OctsPkts, cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerTotalStatsBinUnknownUnicastDroppedFrames, cienaCesPmFloodContainerCurr24HBinBcastDroppedBytes=cienaCesPmFloodContainerCurr24HBinBcastDroppedBytes, cienaCesPmQueueGroupHistoryBinDroppedBytes=cienaCesPmQueueGroupHistoryBinDroppedBytes, cienaCesPmBasicOtuTotalStatsBinPfBerEOtu=cienaCesPmBasicOtuTotalStatsBinPfBerEOtu, cienaCesPmBasicOtuCurrBinQAvgOtu=cienaCesPmBasicOtuCurrBinQAvgOtu, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedBytes, cienaCesPmExtendedTxRxTotalStatsBinTxExCollPkts=cienaCesPmExtendedTxRxTotalStatsBinTxExCollPkts, cienaCesPmBasicOduCurrBinSesOdu=cienaCesPmBasicOduCurrBinSesOdu, cienaCesPmExtendedTxRxTotalStatsBin128To255OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin128To255OctsPkts, cienaCesPmBasicPtpHistoryBinOprnOch=cienaCesPmBasicPtpHistoryBinOprnOch, cienaCesPmBasicTxRxCurr24HBinRxAcceptedFrames=cienaCesPmBasicTxRxCurr24HBinRxAcceptedFrames, cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedBytes, cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxFramesPerSec, cienaCesPmBasicTxRxBiDirCurr24HBinStartTime=cienaCesPmBasicTxRxBiDirCurr24HBinStartTime, cienaCesPmTdmPwTotalStatisticsBinLbit=cienaCesPmTdmPwTotalStatisticsBinLbit, cienaCesPmBasicOtuCurrBinEntry=cienaCesPmBasicOtuCurrBinEntry, cienaCesPmEgressQueueCurr24HBinEntry=cienaCesPmEgressQueueCurr24HBinEntry, cienaCesPmTdmOCnPortHistoryBinEss=cienaCesPmTdmOCnPortHistoryBinEss, cienaCesPmTdmT1PortHistoryBinEntry=cienaCesPmTdmT1PortHistoryBinEntry, cienaCesPmBasicTxRxBiDirCurr24HBinClearedTime=cienaCesPmBasicTxRxBiDirCurr24HBinClearedTime, cienaCesPmEgressQueueStatisticsBinEntry=cienaCesPmEgressQueueStatisticsBinEntry, cienaCesPmBasicPtpCurrBinOprnOch=cienaCesPmBasicPtpCurrBinOprnOch, cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirCurrBinFwdRxAcceptedFrames, cienaCesPmBasicPtpCurr24HBinDgdAvgOch=cienaCesPmBasicPtpCurr24HBinDgdAvgOch, cienaCesPmExtendedTxRxHistoryBinLinkUp=cienaCesPmExtendedTxRxHistoryBinLinkUp, cienaCesPmTdmPwStatisticsBinLbit=cienaCesPmTdmPwStatisticsBinLbit, cienaCesPmTdmDS3PortCurrBinDuration=cienaCesPmTdmDS3PortCurrBinDuration, cienaCesPmExtendedTxRxHist24HBinLinkFlap=cienaCesPmExtendedTxRxHist24HBinLinkFlap, cienaCesPmTdmPwHistoryBinUasp=cienaCesPmTdmPwHistoryBinUasp, cienaCesPmBasicTxCurr24HBinClearedTime=cienaCesPmBasicTxCurr24HBinClearedTime, cienaCesPmEgressQueueHistoryBinEntry=cienaCesPmEgressQueueHistoryBinEntry, cienaCesPmBasicRxCurrBinTable=cienaCesPmBasicRxCurrBinTable, cienaCesPmBasicTxRxTotalStatsBinTxBytesPerSec=cienaCesPmBasicTxRxTotalStatsBinTxBytesPerSec, cienaCesPmTdmE1PortHistoryBinDuration=cienaCesPmTdmE1PortHistoryBinDuration, cienaCesPmIntervalProfileUsageEntry=cienaCesPmIntervalProfileUsageEntry, cienaCesPmBasicOtuCurrBinHccsOtu=cienaCesPmBasicOtuCurrBinHccsOtu, cienaCesPmTdmPwHistoryBinEntry=cienaCesPmTdmPwHistoryBinEntry, cienaCesPmBasicTxRxHist24HBinEndTime=cienaCesPmBasicTxRxHist24HBinEndTime, cienaCesPmTdmE1PortTotalStatisticsBinEntry=cienaCesPmTdmE1PortTotalStatisticsBinEntry, cienaCesPmExtendedTxRxCurrBinRxPausePkts=cienaCesPmExtendedTxRxCurrBinRxPausePkts, cienaCesPmExtendedTxRxCurr24HBinTxUcastPkts=cienaCesPmExtendedTxRxCurr24HBinTxUcastPkts, cienaCesPmExtendedTxRxHistoryBinTable=cienaCesPmExtendedTxRxHistoryBinTable, cienaCesPmBasicTxRxTotalStatsBinStartTime=cienaCesPmBasicTxRxTotalStatsBinStartTime, cienaCesPmBasicOtuStatsBinEsOtu=cienaCesPmBasicOtuStatsBinEsOtu, cienaCesPmExtendedTxRxTotalStatisticsBinEntry=cienaCesPmExtendedTxRxTotalStatisticsBinEntry, cienaCesPmBasicPtpHist24HBinDgdAvgOch=cienaCesPmBasicPtpHist24HBinDgdAvgOch, cienaCesPmBasicTxStatsBinTxForwardedFrames=cienaCesPmBasicTxStatsBinTxForwardedFrames, cienaCesPmTdmOCnPortCurrBinAisl=cienaCesPmTdmOCnPortCurrBinAisl, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxForwardedBytes, cienaCesPmBasicRxHistoryBinEntry=cienaCesPmBasicRxHistoryBinEntry, cienaCesPmTdmOCnPortTotalStatisticsBinEss=cienaCesPmTdmOCnPortTotalStatisticsBinEss, cienaCesPmExtendedTxRxStatisticsBinEntry=cienaCesPmExtendedTxRxStatisticsBinEntry, cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowFrames=cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowFrames, cienaCesPmBasicOtuCurrBinStartTime=cienaCesPmBasicOtuCurrBinStartTime, cienaCesPmExtendedTxRxTotalStatsBinRxPausePkts=cienaCesPmExtendedTxRxTotalStatsBinRxPausePkts, cienaCesPmBasicRxHist24HBinBasicRxYellowBytes=cienaCesPmBasicRxHist24HBinBasicRxYellowBytes, cienaCesPmTdmPwCurr24HBinTtp=cienaCesPmTdmPwCurr24HBinTtp, cienaCesPmExtendedTxRxStatsBinTxSingleCollPkts=cienaCesPmExtendedTxRxStatsBinTxSingleCollPkts, cienaCesPmTdmOCnPortStatisticsBinLoss=cienaCesPmTdmOCnPortStatisticsBinLoss, cienaCesPmBasicTxRxBiDirCurrBinFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirCurrBinFwdTxBytesPerSec, cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowFrames=cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowFrames, cienaCesPmBasicPtpCurr24HBinOprOts=cienaCesPmBasicPtpCurr24HBinOprOts, cienaCesPmExtendedTxRxTotalStatsBinTxCollPkts=cienaCesPmExtendedTxRxTotalStatsBinTxCollPkts, cienaCesPmTdmOCnPortStatisticsBinEss=cienaCesPmTdmOCnPortStatisticsBinEss, cienaCesPmExtendedTxRxCurr24HBinClearedTime=cienaCesPmExtendedTxRxCurr24HBinClearedTime, cienaCesPmTdmPwStatisticsBinUasp=cienaCesPmTdmPwStatisticsBinUasp, cienaCesPmAccessHist24HBinStartTime=cienaCesPmAccessHist24HBinStartTime, cienaCesPmTdmT1PortHistoryBinSesp=cienaCesPmTdmT1PortHistoryBinSesp, cienaCesPmBasicTxRxHistoryBinTxFramesPerSec=cienaCesPmBasicTxRxHistoryBinTxFramesPerSec, cienaCesPmBasicRxAllTimeBinTable=cienaCesPmBasicRxAllTimeBinTable, cienaCesPmBasicTxCurrBinTable=cienaCesPmBasicTxCurrBinTable, cienaCesPmBasicPtpHist24HBinOprOch=cienaCesPmBasicPtpHist24HBinOprOch, cienaCesPmBasicOtuCurrBinQMaxOtu=cienaCesPmBasicOtuCurrBinQMaxOtu, cienaCesPmTdmDS3PortCurrBinStartTime=cienaCesPmTdmDS3PortCurrBinStartTime, cienaCesPmExtendedTxRxHistoryBin2048To4095OctsPkts=cienaCesPmExtendedTxRxHistoryBin2048To4095OctsPkts, cienaCesPmAdjustmentTcaEventsTotal=cienaCesPmAdjustmentTcaEventsTotal, cienaCesPmTdmOCnPortHist24HBinSes=cienaCesPmTdmOCnPortHist24HBinSes, cienaCesPmFloodContainerTotalStatsBinStartTime=cienaCesPmFloodContainerTotalStatsBinStartTime, cienaCesPmTdmT1PortStatisticsBinStartTime=cienaCesPmTdmT1PortStatisticsBinStartTime, cienaCesPmBasicTxRxTotalStatsBinRxBytesPerSec=cienaCesPmBasicTxRxTotalStatsBinRxBytesPerSec, cienaCesPmTdmPwStatisticsBinFcp=cienaCesPmTdmPwStatisticsBinFcp, cienaCesPmFloodContainerStatsBinClearTime=cienaCesPmFloodContainerStatsBinClearTime, cienaCesPmBasicRxAllTimeBinBasicRxYellowBytes=cienaCesPmBasicRxAllTimeBinBasicRxYellowBytes, cienaCesPmTdmDS3PortTotalStatisticsBinEntry=cienaCesPmTdmDS3PortTotalStatisticsBinEntry, cienaCesPmExtendedTxRxStatsBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxStatsBinTx4096To9216OctsPkts, cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValue=cienaCesPmAdjustmentTcaLastUnderflowTcaBasisValue, cienaCesPmAdjustmentTcaUpperBoundaryValue=cienaCesPmAdjustmentTcaUpperBoundaryValue, cienaCesPmBasicOtuHistoryBinFieldsUnsupported=cienaCesPmBasicOtuHistoryBinFieldsUnsupported, cienaCesPmExtendedTxRxCurr24HBinTxTBytes=cienaCesPmExtendedTxRxCurr24HBinTxTBytes, PmTcaUnits=PmTcaUnits, cienaCesPmAlertTcaIntervalStartTime=cienaCesPmAlertTcaIntervalStartTime, cienaCesPmTdmDS3PortStatisticsBinEsl=cienaCesPmTdmDS3PortStatisticsBinEsl, cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedBytes=cienaCesPmBasicTxRxBiDirStatsBinFwdTxForwardedBytes, cienaCesPmTdmDS3PortStatisticsBinPcv=cienaCesPmTdmDS3PortStatisticsBinPcv, cienaCesPmTdmT1PortHist24HBinEntry=cienaCesPmTdmT1PortHist24HBinEntry, cienaCesPmBasicPtpTotalStatsBinOprMinOts=cienaCesPmBasicPtpTotalStatsBinOprMinOts, cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPCurrBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmExtendedTxRxHistoryBin256To511OctsPkts=cienaCesPmExtendedTxRxHistoryBin256To511OctsPkts, cienaCesPmIGMPHist24HBinIgmpnumQueryTimeouts=cienaCesPmIGMPHist24HBinIgmpnumQueryTimeouts, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxForwardedFrames, cienaCesPmExtendedTxRxHist24HBinTx64OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx64OctsPkts, cienaCesPmExtendedTxRxAllTimeBinTxTBytes=cienaCesPmExtendedTxRxAllTimeBinTxTBytes, cienaCesPmIGMPCurr24HBinIgmpnumJoins=cienaCesPmIGMPCurr24HBinIgmpnumJoins, cienaCesPmBasicTxRxBiDirHist24HBinEndTime=cienaCesPmBasicTxRxBiDirHist24HBinEndTime, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedBytes, cienaCesPmBasicOtuCurrBinFieldsUnsupported=cienaCesPmBasicOtuCurrBinFieldsUnsupported, cienaCesPmExtendedTxRxHist24HBinTx256To511OctsPkts=cienaCesPmExtendedTxRxHist24HBinTx256To511OctsPkts, cienaCesPmTdmE1PortHist24HBinTt=cienaCesPmTdmE1PortHist24HBinTt, cienaCesPmBasicTxRxTotalStatsBinRxDroppedFrames=cienaCesPmBasicTxRxTotalStatsBinRxDroppedFrames, cienaCesPmBasicTxCurrBinTxFramesPerSec=cienaCesPmBasicTxCurrBinTxFramesPerSec, cienaCesPmTdmT1PortStatisticsBinClearTime=cienaCesPmTdmT1PortStatisticsBinClearTime, cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmTdmPwStatisticsBinMalformed=cienaCesPmTdmPwStatisticsBinMalformed, cienaCesPmBasicPtpCurr24HBinOptAvgOch=cienaCesPmBasicPtpCurr24HBinOptAvgOch, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxDroppedBytes, cienaCesPmExtendedTxRxStatsBinRxPausePkts=cienaCesPmExtendedTxRxStatsBinRxPausePkts, cienaCesPmTdmDS3PortStatisticsBinPes=cienaCesPmTdmDS3PortStatisticsBinPes, cienaCesPmQueueGroupHistoryBinClearTime=cienaCesPmQueueGroupHistoryBinClearTime, cienaCesPmTdmDS3PortCurr24HBinStartTime=cienaCesPmTdmDS3PortCurr24HBinStartTime, cienaCesPmBasicRxAllTimeBinBasicRxFramesPerSec=cienaCesPmBasicRxAllTimeBinBasicRxFramesPerSec, cienaCesPmBasicTxRxBiDirCurr24HBinTable=cienaCesPmBasicTxRxBiDirCurr24HBinTable, cienaCesPmExtendedTxRxHistoryBinLinkFlap=cienaCesPmExtendedTxRxHistoryBinLinkFlap, cienaCesPmExtendedTxRxCurr24HBin256To511OctsPkts=cienaCesPmExtendedTxRxCurr24HBin256To511OctsPkts, cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowBytes=cienaCesPmBasicTxRxBiDirCurrBinRevRxYellowBytes, cienaCesPmIGMPHistoryBinStartTime=cienaCesPmIGMPHistoryBinStartTime, cienaCesPmBasicPtpCurrBinOprAvgOch=cienaCesPmBasicPtpCurrBinOprAvgOch, cienaCesPmBasicTxRxHistoryBinTxForwardedFrames=cienaCesPmBasicTxRxHistoryBinTxForwardedFrames, cienaCesPmTdmOCnPortStatisticsBinSess=cienaCesPmTdmOCnPortStatisticsBinSess, cienaCesPmBasicTxHist24HBinTable=cienaCesPmBasicTxHist24HBinTable, cienaCesPmExtendedTxRxTotalStatsBinFragmentsPkts=cienaCesPmExtendedTxRxTotalStatsBinFragmentsPkts, cienaCesPmTdmPwCurrBinRbit=cienaCesPmTdmPwCurrBinRbit, cienaCesPmExtendedTxRxCurr24HBin512To1023OctsPkts=cienaCesPmExtendedTxRxCurr24HBin512To1023OctsPkts, cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue=cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkValue, cienaCesPmIntervalProfileAdjustmentThresholdPercentage=cienaCesPmIntervalProfileAdjustmentThresholdPercentage, cienaCesPmBasicOtuCurr24HBinHccsOtu=cienaCesPmBasicOtuCurr24HBinHccsOtu, cienaCesPmTdmDS3PortHist24HBinLoss=cienaCesPmTdmDS3PortHist24HBinLoss, cienaCesPmBasicTxHist24HBinDuration=cienaCesPmBasicTxHist24HBinDuration, cienaCesPmAccessTotalStatisticsBinEntry=cienaCesPmAccessTotalStatisticsBinEntry, cienaCesPmFloodContainerHist24HBinClearTime=cienaCesPmFloodContainerHist24HBinClearTime, cienaCesPmTdmOCnPortStatisticsBinTt=cienaCesPmTdmOCnPortStatisticsBinTt, cienaCesPmTdmDS3PortCurr24HBinPcv=cienaCesPmTdmDS3PortCurr24HBinPcv, cienaCesPmBasicTxStatsBinTxForwardedBytes=cienaCesPmBasicTxStatsBinTxForwardedBytes, cienaCesPmExtendedTxRxStatsBinTxPkts=cienaCesPmExtendedTxRxStatsBinTxPkts, cienaCesPmIGMPHistoryBinState=cienaCesPmIGMPHistoryBinState, cienaCesPmTdmOCnPortCurrBinState=cienaCesPmTdmOCnPortCurrBinState, cienaCesPmBasicTxRxHistoryBinEntry=cienaCesPmBasicTxRxHistoryBinEntry, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedBytes, cienaCesPmBasicOtuHistoryBinPrfBerOtu=cienaCesPmBasicOtuHistoryBinPrfBerOtu, cienaCesPmTdmPwStatisticsBinRbit=cienaCesPmTdmPwStatisticsBinRbit, cienaCesPmBasicOtuHistoryBinFecOtu=cienaCesPmBasicOtuHistoryBinFecOtu, cienaCesPmBasicOduHistoryBinIndex=cienaCesPmBasicOduHistoryBinIndex, cienaCesPmBasicPtpStatsBinOprAvgOch=cienaCesPmBasicPtpStatsBinOprAvgOch, cienaCesPmBasicOduTotalStatisticsBinTable=cienaCesPmBasicOduTotalStatisticsBinTable, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedFrames, cienaCesPmTdmT1PortCurr24HBinEsp=cienaCesPmTdmT1PortCurr24HBinEsp, cienaCesPmTdmT1PortCurrBinUasp=cienaCesPmTdmT1PortCurrBinUasp, cienaCesPmTdmDS3PortCurrBinEsl=cienaCesPmTdmDS3PortCurrBinEsl, cienaCesPmBasicOtuCurr24HBinCvOtu=cienaCesPmBasicOtuCurr24HBinCvOtu, cienaCesPmBasicPtpHist24HBinOptMaxOch=cienaCesPmBasicPtpHist24HBinOptMaxOch, cienaCesPmInstanceAdjustmentTca=cienaCesPmInstanceAdjustmentTca, cienaCesPmExtendedTxRxTotalStatsBinTxLCheckErrorPkts=cienaCesPmExtendedTxRxTotalStatsBinTxLCheckErrorPkts, cienaCesPmExtendedTxRxHistoryBin65To127OctsPkts=cienaCesPmExtendedTxRxHistoryBin65To127OctsPkts, cienaCesPmExtendedTxRxAllTimeBinTxLOutRangePkts=cienaCesPmExtendedTxRxAllTimeBinTxLOutRangePkts, cienaCesPmTdmE1PortCurrBinUas=cienaCesPmTdmE1PortCurrBinUas, cienaCesPmAlertTcaSamplesProcessedTotal=cienaCesPmAlertTcaSamplesProcessedTotal, cienaCesPmTdmT1PortTotalStatisticsBinFcp=cienaCesPmTdmT1PortTotalStatisticsBinFcp, PmTcaScheme=PmTcaScheme, cienaCesPmExtendedTxRxTotalStatsBinRxLOutRangePkts=cienaCesPmExtendedTxRxTotalStatsBinRxLOutRangePkts, cienaCesPmQueueGroupCurrBinState=cienaCesPmQueueGroupCurrBinState, cienaCesPmBasicTxRxBiDirCurr24HBinEntry=cienaCesPmBasicTxRxBiDirCurr24HBinEntry, cienaCesPmEgressQueueCurrBinClearedTime=cienaCesPmEgressQueueCurrBinClearedTime, cienaCesPmBasicOtuHist24HBinSesOtu=cienaCesPmBasicOtuHist24HBinSesOtu, cienaCesPmBasicRxAllTimeBinBasicRxBytesPerSec=cienaCesPmBasicRxAllTimeBinBasicRxBytesPerSec, cienaCesPmBasicTxRxBiDirCurrBinClearedTime=cienaCesPmBasicTxRxBiDirCurrBinClearedTime, cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue=cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdValue, PmInteger32Milli=PmInteger32Milli, cienaCesPmInstanceThresholdEntry=cienaCesPmInstanceThresholdEntry, cienaCesPmExtendedTxRxHistoryBinFragmentsPkts=cienaCesPmExtendedTxRxHistoryBinFragmentsPkts, cienaCesPmBasicOtuHistoryBinEndTime=cienaCesPmBasicOtuHistoryBinEndTime, cienaCesPmTdmT1PortHistoryBinState=cienaCesPmTdmT1PortHistoryBinState, cienaCesPmTdmPwHistoryBinRbit=cienaCesPmTdmPwHistoryBinRbit, cienaCesPmTdmOCnPortCurrBinEsl=cienaCesPmTdmOCnPortCurrBinEsl, cienaCesPmAdjustmentTcaHighWatermarkValue=cienaCesPmAdjustmentTcaHighWatermarkValue, cienaCesPmIGMPHist24HBinIgmpnumHostDiscards=cienaCesPmIGMPHist24HBinIgmpnumHostDiscards, cienaCesPmBasicTxRxTotalStatsBinRxAcceptedFrames=cienaCesPmBasicTxRxTotalStatsBinRxAcceptedFrames, cienaCesPmTdmT1PortHist24HBinSesl=cienaCesPmTdmT1PortHist24HBinSesl, cienaCesPmQueueGroupHist24HBinEnqueuedFrames=cienaCesPmQueueGroupHist24HBinEnqueuedFrames, cienaCesPmExtendedTxRxStatsBinTxUcastPkts=cienaCesPmExtendedTxRxStatsBinTxUcastPkts, cienaCesPmBasicTxRxHist24HBinBasicRxYellowBytes=cienaCesPmBasicTxRxHist24HBinBasicRxYellowBytes, cienaCesPmFloodContainerHist24HBinL2McastDroppedFrames=cienaCesPmFloodContainerHist24HBinL2McastDroppedFrames, cienaCesPmEgressQueueCurr24HBinUnicastDroppedFrames=cienaCesPmEgressQueueCurr24HBinUnicastDroppedFrames, cienaCesPmIntervalProfileAdjustmentThreshold=cienaCesPmIntervalProfileAdjustmentThreshold, cienaCesPmExtendedTxRxAllTimeBinRxLOutRangePkts=cienaCesPmExtendedTxRxAllTimeBinRxLOutRangePkts, cienaCesPmExtendedTxRxAllTimeBinTxCrcErrorPkts=cienaCesPmExtendedTxRxAllTimeBinTxCrcErrorPkts, cienaCesPmEgressQueueCurr24HBinEndTime=cienaCesPmEgressQueueCurr24HBinEndTime, cienaCesPmTdmDS3PortCurr24HBinState=cienaCesPmTdmDS3PortCurr24HBinState, cienaCesPmBasicOtuCurrBinQStdevOtu=cienaCesPmBasicOtuCurrBinQStdevOtu, cienaCesPmExtendedTxRxCurr24HBinDropEvents=cienaCesPmExtendedTxRxCurr24HBinDropEvents, cienaCesPmTdmDS3PortStatisticsBinEntry=cienaCesPmTdmDS3PortStatisticsBinEntry, cienaCesPmBasicTxRxHistoryBinIndex=cienaCesPmBasicTxRxHistoryBinIndex, cienaCesPmBasicOduHistoryBinUasOdu=cienaCesPmBasicOduHistoryBinUasOdu, cienaCesPmExtendedTxRxHist24HBinTxCollPkts=cienaCesPmExtendedTxRxHist24HBinTxCollPkts, cienaCesPmBasicTxRxCurrBinTxBytesPerSec=cienaCesPmBasicTxRxCurrBinTxBytesPerSec, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmExtendedTxRxStatsBinRxUcastPkts=cienaCesPmExtendedTxRxStatsBinRxUcastPkts, cienaCesPmTdmPwHistoryBinEndTime=cienaCesPmTdmPwHistoryBinEndTime, cienaCesPmTdmPwCurr24HBinRbit=cienaCesPmTdmPwCurr24HBinRbit, cienaCesPmExtendedTxRxHist24HBinStartTime=cienaCesPmExtendedTxRxHist24HBinStartTime, cienaCesPmTdmPwCurrBinUasp=cienaCesPmTdmPwCurrBinUasp, cienaCesPmTdmPwHist24HBinTtp=cienaCesPmTdmPwHist24HBinTtp, cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedFrames, cienaCesPmIGMPHist24HBinClearTime=cienaCesPmIGMPHist24HBinClearTime, cienaCesPmTdmPwTotalStatisticsBinRbit=cienaCesPmTdmPwTotalStatisticsBinRbit)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmBasicTxRxBiDirTotalStatisticsBinEntry=cienaCesPmBasicTxRxBiDirTotalStatisticsBinEntry, cienaCesPmQueueGroupAllTimeBinEnqueuedFrames=cienaCesPmQueueGroupAllTimeBinEnqueuedFrames, cienaCesPmQueueGroupAllTimeBinDroppedFrames=cienaCesPmQueueGroupAllTimeBinDroppedFrames, cienaCesPmExtendedTxRxStatsBin128To255OctsPkts=cienaCesPmExtendedTxRxStatsBin128To255OctsPkts, cienaCesPmEgressQueueHistoryBinUnicastDroppedBytes=cienaCesPmEgressQueueHistoryBinUnicastDroppedBytes, cienaCesPmExtendedTxRxHist24HBin128To255OctsPkts=cienaCesPmExtendedTxRxHist24HBin128To255OctsPkts, cienaCesPmTdmPwHistoryBinMalformed=cienaCesPmTdmPwHistoryBinMalformed, cienaCesPmExtendedTxRxCurr24HBin64OctsPkts=cienaCesPmExtendedTxRxCurr24HBin64OctsPkts, cienaCesPmExtendedTxRxHist24HBinRxPausePkts=cienaCesPmExtendedTxRxHist24HBinRxPausePkts, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmBasicTxRxCurrBinTable=cienaCesPmBasicTxRxCurrBinTable, cienaCesPmTdmDS3PortHist24HBinStartTime=cienaCesPmTdmDS3PortHist24HBinStartTime, cienaCesPmBasicPtpHist24HBinFieldsUnsupported=cienaCesPmBasicPtpHist24HBinFieldsUnsupported, cienaCesPmExtendedTxRxHistoryBinStartTime=cienaCesPmExtendedTxRxHistoryBinStartTime, cienaCesPmIGMPCurr24HBinIgmpnumResourceExceed=cienaCesPmIGMPCurr24HBinIgmpnumResourceExceed, cienaCesPmTdmE1PortHistoryBinIndex=cienaCesPmTdmE1PortHistoryBinIndex, cienaCesPmExtendedTxRxCurrBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxCurrBinTx1024To1518OctsPkts, cienaCesPmTdmT1PortStatisticsBinAsp=cienaCesPmTdmT1PortStatisticsBinAsp, cienaCesPmIGMPCurr24HBinIgmpnumBadChecksum=cienaCesPmIGMPCurr24HBinIgmpnumBadChecksum, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsPortBlock, cienaCesPmFloodContainerTotalStatsBinBcastDroppedFrames=cienaCesPmFloodContainerTotalStatsBinBcastDroppedFrames, cienaCesPmExtendedTxRxCurr24HBinTx1024To1518OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx1024To1518OctsPkts, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscards=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscards, cienaCesPmBasicPtpStatsBinOptMinOch=cienaCesPmBasicPtpStatsBinOptMinOch, cienaCesPmExtendedTxRxCurrBinTxPkts=cienaCesPmExtendedTxRxCurrBinTxPkts, cienaCesPmAlertTcaBasisValue=cienaCesPmAlertTcaBasisValue, cienaCesPmAlertTcaLastTcaBoundaryValue=cienaCesPmAlertTcaLastTcaBoundaryValue, cienaCesPmInstanceStartTime=cienaCesPmInstanceStartTime, cienaCesPmTdmT1PortTotalStatisticsBinCvp=cienaCesPmTdmT1PortTotalStatisticsBinCvp, cienaCesPmExtendedTxRxStatsBinRxBytesPerSec=cienaCesPmExtendedTxRxStatsBinRxBytesPerSec, PmTcaAlertState=PmTcaAlertState, cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxFramesPerSec, cienaCesPmBasicOtuHistoryBinPrfBerMaxOtu=cienaCesPmBasicOtuHistoryBinPrfBerMaxOtu, cienaCesPmBasicOduHist24HBinClearTime=cienaCesPmBasicOduHist24HBinClearTime, cienaCesPmBasicOtuHistoryBinPfBerEOtu=cienaCesPmBasicOtuHistoryBinPfBerEOtu, cienaCesPmIGMPHist24HBinEntry=cienaCesPmIGMPHist24HBinEntry, cienaCesPmTdmPwCurr24HBinLbit=cienaCesPmTdmPwCurr24HBinLbit, cienaCesPmBasicPtpStatsBinOprMinOch=cienaCesPmBasicPtpStatsBinOprMinOch, cienaCesPmExtendedTxRxTotalStatsBin1519To2047OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin1519To2047OctsPkts, cienaCesPmExtendedTxRxStatsBinClearTime=cienaCesPmExtendedTxRxStatsBinClearTime, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedBytes, cienaCesPmBasicTxRxStatsBinRxAcceptedBytes=cienaCesPmBasicTxRxStatsBinRxAcceptedBytes, cienaCesPmInstanceIndexXref=cienaCesPmInstanceIndexXref, cienaCesPmExtendedTxRxStatsBinTx128To255OctsPkts=cienaCesPmExtendedTxRxStatsBinTx128To255OctsPkts, cienaCesPmTdmT1PortHist24HBinEndTime=cienaCesPmTdmT1PortHist24HBinEndTime, cienaCesPmBasicRxHistoryBinEndTime=cienaCesPmBasicRxHistoryBinEndTime, PmTcaWatermarkType=PmTcaWatermarkType, cienaCesPmBasicTxRxHist24HBinBasicRxDroppedFrames=cienaCesPmBasicTxRxHist24HBinBasicRxDroppedFrames, cienaCesPmTdmDS3PortHist24HBinClearTime=cienaCesPmTdmDS3PortHist24HBinClearTime, cienaCesPmExtendedTxRxHistoryBinUndersizePkts=cienaCesPmExtendedTxRxHistoryBinUndersizePkts, cienaCesPmTdmPwStatisticsBinAsp=cienaCesPmTdmPwStatisticsBinAsp, cienaCesPmBasicOduCurrBinEntry=cienaCesPmBasicOduCurrBinEntry, cienaCesPmAccessCurrBinClearedTime=cienaCesPmAccessCurrBinClearedTime, cienaCesPmTdmE1PortStats=cienaCesPmTdmE1PortStats, cienaCesPmExtendedTxRxTotalStatsBinTxFramesPerSec=cienaCesPmExtendedTxRxTotalStatsBinTxFramesPerSec, cienaCesPmFloodContainerHist24HBinState=cienaCesPmFloodContainerHist24HBinState, cienaCesPmTdmT1PortStatisticsBinSesl=cienaCesPmTdmT1PortStatisticsBinSesl, cienaCesPmTdmT1PortTotalStatisticsBinCvl=cienaCesPmTdmT1PortTotalStatisticsBinCvl, cienaCesPmTdmOCnPortTotalStatisticsBinUasl=cienaCesPmTdmOCnPortTotalStatisticsBinUasl, cienaCesPmTdmT1PortCurrBinCvl=cienaCesPmTdmT1PortCurrBinCvl, cienaCesPmEgressQueueHistoryBinMulticastDroppedFrames=cienaCesPmEgressQueueHistoryBinMulticastDroppedFrames, cienaCesPmBasicOtuHistoryBinClearTime=cienaCesPmBasicOtuHistoryBinClearTime, cienaCesPmFloodContainerHistoryBinEndTime=cienaCesPmFloodContainerHistoryBinEndTime, cienaCesPmTdmOCnPortCurrBinDuration=cienaCesPmTdmOCnPortCurrBinDuration, cienaCesPmEgressQueueAllTimeBinMulticastDroppedFrames=cienaCesPmEgressQueueAllTimeBinMulticastDroppedFrames, cienaCesPmTdmDS3PortTotalStatisticsBinEsl=cienaCesPmTdmDS3PortTotalStatisticsBinEsl, cienaCesPmTdmE1PortHistoryBinSes=cienaCesPmTdmE1PortHistoryBinSes, cienaCesPmBasicOtuHistoryBinState=cienaCesPmBasicOtuHistoryBinState, cienaCesPmTdmPwStatisticsBinCvp=cienaCesPmTdmPwStatisticsBinCvp, cienaCesPmBasicPtpHistoryBinEntry=cienaCesPmBasicPtpHistoryBinEntry, cienaCesPmQueueGroupStatsBinEnqueuedFrames=cienaCesPmQueueGroupStatsBinEnqueuedFrames, cienaCesPmBasicPtpHistoryBinOprAvgOts=cienaCesPmBasicPtpHistoryBinOprAvgOts, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxDroppedFrames, cienaCesPmExtendedTxRxStatsBinTxPausePkts=cienaCesPmExtendedTxRxStatsBinTxPausePkts, cienaCesPmBasicOtuCurr24HBinFieldsUnsupported=cienaCesPmBasicOtuCurr24HBinFieldsUnsupported, cienaCesPmTdmOCnPortStatisticsBinSes=cienaCesPmTdmOCnPortStatisticsBinSes, cienaCesPmTdmDS3PortTotalStatisticsBinStartTime=cienaCesPmTdmDS3PortTotalStatisticsBinStartTime, cienaCesPmExtendedTxRxHist24HBin4096To9216OctsPkts=cienaCesPmExtendedTxRxHist24HBin4096To9216OctsPkts, cienaCesPmBasicPtpStatsBinOprMaxOch=cienaCesPmBasicPtpStatsBinOprMaxOch, cienaCesPmBasicTxRxStatsBinTxBytesPerSec=cienaCesPmBasicTxRxStatsBinTxBytesPerSec, cienaCesPmBasicTxHistoryBinTxForwardedBytes=cienaCesPmBasicTxHistoryBinTxForwardedBytes, cienaCesPmBasicOtuCurrBinPfBerEOtu=cienaCesPmBasicOtuCurrBinPfBerEOtu, cienaCesPmBasicRxCurr24HBinState=cienaCesPmBasicRxCurr24HBinState, cienaCesPmBasicTxTotalStatsBinStartTime=cienaCesPmBasicTxTotalStatsBinStartTime, cienaCesPmQueueGroupCurrBinEnqueuedBytes=cienaCesPmQueueGroupCurrBinEnqueuedBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedFrames, cienaCesPmBasicRxHistoryBinBasicRxBytesPerSec=cienaCesPmBasicRxHistoryBinBasicRxBytesPerSec, cienaCesPmExtendedTxRxCurrBinTable=cienaCesPmExtendedTxRxCurrBinTable, cienaCesPmBasicOtuTotalStatsBinSefsOtu=cienaCesPmBasicOtuTotalStatsBinSefsOtu, cienaCesPmExtendedTxRxStatsBin64OctsPkts=cienaCesPmExtendedTxRxStatsBin64OctsPkts, cienaCesPmFloodContainerCurrBinStartTime=cienaCesPmFloodContainerCurrBinStartTime, cienaCesPmTdmDS3PortCurr24HBinEntry=cienaCesPmTdmDS3PortCurr24HBinEntry, cienaCesPmExtendedTxRxAllTimeBinTxGiantPkts=cienaCesPmExtendedTxRxAllTimeBinTxGiantPkts, cienaCesPmTdmPwHistoryBinUas=cienaCesPmTdmPwHistoryBinUas, cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedFrames=cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedFrames, cienaCesPmExtendedTxRxHistoryBinTx256To511OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx256To511OctsPkts, cienaCesPmExtendedTxRxCurrBinTxLateCollPkts=cienaCesPmExtendedTxRxCurrBinTxLateCollPkts, cienaCesPmAccessHistoryBinTable=cienaCesPmAccessHistoryBinTable, cienaCesPmQueueGroupCurr24HBinDuration=cienaCesPmQueueGroupCurr24HBinDuration, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowBytes=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowBytes, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdTxFramesPerSec, cienaCesPmExtendedTxRxStatsBinStartTime=cienaCesPmExtendedTxRxStatsBinStartTime, cienaCesPmBasicOduHist24HBinStartTime=cienaCesPmBasicOduHist24HBinStartTime, cienaCesPmBasicPtpHistoryBinOprMinOts=cienaCesPmBasicPtpHistoryBinOprMinOts, cienaCesPmAdjustmentTcaLastOverflowTcaScheme=cienaCesPmAdjustmentTcaLastOverflowTcaScheme, cienaCesPmEgressQueueStats=cienaCesPmEgressQueueStats, cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmExtendedTxRxStatsBinRxFramesPerSec=cienaCesPmExtendedTxRxStatsBinRxFramesPerSec, cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirStatsBinFwdRxYellowBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxForwardedBytes, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxYellowFrames, cienaCesPmBasicTxRxCurr24HBinState=cienaCesPmBasicTxRxCurr24HBinState, cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedFrames=cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedFrames, cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedBytes=cienaCesPmBasicTxRxBiDirStatsBinFwdRxDroppedBytes, cienaCesPmExtendedTxRxHistoryBinTxBytes=cienaCesPmExtendedTxRxHistoryBinTxBytes, cienaCesPmIGMPHist24HBinDuration=cienaCesPmIGMPHist24HBinDuration, cienaCesPmQueueGroupHist24HBinDroppedBytes=cienaCesPmQueueGroupHist24HBinDroppedBytes, cienaCesPmBasicTxRxCurrBinTxForwardedFrames=cienaCesPmBasicTxRxCurrBinTxForwardedFrames, cienaCesPmBasicOtuHist24HBinQAvgOtu=cienaCesPmBasicOtuHist24HBinQAvgOtu, cienaCesPmExtendedTxRxHistoryBinDropEvents=cienaCesPmExtendedTxRxHistoryBinDropEvents, cienaCesPmAccessCurr24HBinState=cienaCesPmAccessCurr24HBinState, cienaCesPmBasicPtpTotalStatsBinOprOch=cienaCesPmBasicPtpTotalStatsBinOprOch, cienaCesPmTdmOCnPortCurrBinTt=cienaCesPmTdmOCnPortCurrBinTt, cienaCesPmTdmDS3PortCurr24HBinLoss=cienaCesPmTdmDS3PortCurr24HBinLoss, cienaCesPmInstanceEndDate=cienaCesPmInstanceEndDate, cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue=cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkValue, cienaCesPmAdjustmentTcaEventsUnderflowCountReached=cienaCesPmAdjustmentTcaEventsUnderflowCountReached, cienaCesPmTdmPwCurrBinCvp=cienaCesPmTdmPwCurrBinCvp, cienaCesPmIGMPCurrBinStartTime=cienaCesPmIGMPCurrBinStartTime, cienaCesPmExtendedTxRxHistoryBinTxCollPkts=cienaCesPmExtendedTxRxHistoryBinTxCollPkts, cienaCesPmExtendedTxRxTotalStatsBinRxBytesPerSec=cienaCesPmExtendedTxRxTotalStatsBinRxBytesPerSec, cienaCesPmTdmPwTotalStatisticsBinEsp=cienaCesPmTdmPwTotalStatisticsBinEsp, cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinRevRxFramesPerSec, cienaCesPmExtendedTxRxStatsBinRxBcastPkts=cienaCesPmExtendedTxRxStatsBinRxBcastPkts, cienaCesPmExtendedTxRxCurrBin256To511OctsPkts=cienaCesPmExtendedTxRxCurrBin256To511OctsPkts, cienaCesPmBasicTxRxHistoryBinTxBytesPerSec=cienaCesPmBasicTxRxHistoryBinTxBytesPerSec, cienaCesPmTdmPwCurr24HBinEsp=cienaCesPmTdmPwCurr24HBinEsp, cienaCesPmBasicOtuCurr24HBinQStdevOtu=cienaCesPmBasicOtuCurr24HBinQStdevOtu, cienaCesPmBasicOtuStatsBinPfBerEOtu=cienaCesPmBasicOtuStatsBinPfBerEOtu, cienaCesPmTdmOCnPortStatisticsBinEsl=cienaCesPmTdmOCnPortStatisticsBinEsl, cienaCesPmTdmOCnPortCurrBinClearTime=cienaCesPmTdmOCnPortCurrBinClearTime, cienaCesPmBasicPtpCurrBinDgdAvgOch=cienaCesPmBasicPtpCurrBinDgdAvgOch, cienaCesPmEgressQueueStatsBinMulticastDroppedBytes=cienaCesPmEgressQueueStatsBinMulticastDroppedBytes, cienaCesPmFloodContainerCurr24HBinStartTime=cienaCesPmFloodContainerCurr24HBinStartTime, cienaCesPmBasicPtpCurr24HBinOprnOch=cienaCesPmBasicPtpCurr24HBinOprnOch, cienaCesPmAccessAllTimeBinState=cienaCesPmAccessAllTimeBinState, cienaCesPmTdmE1PortCurrBinAs=cienaCesPmTdmE1PortCurrBinAs, cienaCesPmBasicOduHist24HBinEndTime=cienaCesPmBasicOduHist24HBinEndTime, cienaCesPmIGMPHistoryBinIgmpnumHostDiscards=cienaCesPmIGMPHistoryBinIgmpnumHostDiscards, cienaCesPmTdmPwHist24HBinEs=cienaCesPmTdmPwHist24HBinEs, cienaCesPmExtendedTxRxTotalStatsBin65To127OctsPkts=cienaCesPmExtendedTxRxTotalStatsBin65To127OctsPkts, cienaCesPmBasicTxStats=cienaCesPmBasicTxStats, cienaCesPmExtendedTxRxHistoryBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx2048To4095OctsPkts, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxDroppedFrames, cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkTime=cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkTime, cienaCesPmBasicTxRxBiDirCurrBinRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirCurrBinRevTxBytesPerSec, cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedBytes=cienaCesPmBasicTxRxAllTimeBinBasicRxDroppedBytes, cienaCesPmIGMPHist24HBinIgmpnumL2L3Mismatch=cienaCesPmIGMPHist24HBinIgmpnumL2L3Mismatch, cienaCesPmExtendedTxRxAllTimeBinTxFramesPerSec=cienaCesPmExtendedTxRxAllTimeBinTxFramesPerSec, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortDown=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortDown, cienaCesPmIntervalProfileCfgAttrsUnset=cienaCesPmIntervalProfileCfgAttrsUnset, cienaCesPmTdmPwHistoryBinState=cienaCesPmTdmPwHistoryBinState, cienaCesPmBasicRxAllTimeBinBasicRxAcceptedBytes=cienaCesPmBasicRxAllTimeBinBasicRxAcceptedBytes, cienaCesPmTdmDS3PortCurrBinState=cienaCesPmTdmDS3PortCurrBinState, cienaCesPmTdmDS3PortTotalStatisticsBinPses=cienaCesPmTdmDS3PortTotalStatisticsBinPses, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxAcceptedBytes, cienaCesPmTdmPwHist24HBinLbit=cienaCesPmTdmPwHist24HBinLbit, cienaCesPmExtendedTxRxCurrBinState=cienaCesPmExtendedTxRxCurrBinState, cienaCesPmIGMPCurrBinIgmpnumJoins=cienaCesPmIGMPCurrBinIgmpnumJoins, cienaCesPmEgressQueueCurr24HBinMulticastDroppedFrames=cienaCesPmEgressQueueCurr24HBinMulticastDroppedFrames, cienaCesPmTdmE1PortCurrBinSes=cienaCesPmTdmE1PortCurrBinSes, cienaCesPmBasicTxRxBiDirCurrBinTable=cienaCesPmBasicTxRxBiDirCurrBinTable, cienaCesPmBasicOduHistoryBinFieldsInvalid=cienaCesPmBasicOduHistoryBinFieldsInvalid, cienaCesPmBasicOduTotalStatsBinSesOdu=cienaCesPmBasicOduTotalStatsBinSesOdu, PmAlignment=PmAlignment, cienaCesPmIGMPHistoryBinIgmpnumBadChecksum=cienaCesPmIGMPHistoryBinIgmpnumBadChecksum, cienaCesPmBasicTxCurr24HBinTxBytesPerSec=cienaCesPmBasicTxCurr24HBinTxBytesPerSec, cienaCesPmBasicOduCurrBinFcOdu=cienaCesPmBasicOduCurrBinFcOdu, cienaCesPmTdmOCnPortCurr24HBinTt=cienaCesPmTdmOCnPortCurr24HBinTt, cienaCesPmExtendedTxRxTotalStatsBinStartTime=cienaCesPmExtendedTxRxTotalStatsBinStartTime, cienaCesPmTdmOCnPortHist24HBinEb=cienaCesPmTdmOCnPortHist24HBinEb, cienaCesPmExtendedTxRxAllTimeBinInDiscards=cienaCesPmExtendedTxRxAllTimeBinInDiscards, cienaCesPmTdmPwStatisticsBinEntry=cienaCesPmTdmPwStatisticsBinEntry, cienaCesPmTdmE1PortCurrBinClearTime=cienaCesPmTdmE1PortCurrBinClearTime, cienaCesPmBasicRxCurr24HBinBasicRxAcceptedBytes=cienaCesPmBasicRxCurr24HBinBasicRxAcceptedBytes, cienaCesPmBasicTxRxCurr24HBinRxAcceptedBytes=cienaCesPmBasicTxRxCurr24HBinRxAcceptedBytes, cienaCesPmBasicPtpHist24HBinOptOch=cienaCesPmBasicPtpHist24HBinOptOch, cienaCesPmTdmT1PortStatisticsBinUasp=cienaCesPmTdmT1PortStatisticsBinUasp, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowFrames=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxYellowFrames, cienaCesPmBasicRxCurr24HBinDuration=cienaCesPmBasicRxCurr24HBinDuration, cienaCesPmExtendedTxRxCurr24HBin2048To4095OctsPkts=cienaCesPmExtendedTxRxCurr24HBin2048To4095OctsPkts, cienaCesPmTdmE1PortHist24HBinClearTime=cienaCesPmTdmE1PortHist24HBinClearTime, cienaCesPmBasicPtpHistoryBinOprAvgOch=cienaCesPmBasicPtpHistoryBinOprAvgOch, cienaCesPmBasicOtuTotalStatsBinHccsOtu=cienaCesPmBasicOtuTotalStatsBinHccsOtu, cienaCesPmExtendedTxRxTotalStatsBinTxBcastPkts=cienaCesPmExtendedTxRxTotalStatsBinTxBcastPkts, cienaCesPmBasicTxRxHist24HBinBasicTxFramesPerSec=cienaCesPmBasicTxRxHist24HBinBasicTxFramesPerSec, cienaCesPmExtendedTxRxTotalStatsBinTx128To255OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx128To255OctsPkts, cienaCesPmIGMPHistoryBinIgmpnumQueryTimeouts=cienaCesPmIGMPHistoryBinIgmpnumQueryTimeouts, cienaCesPmAdjustmentTcaLastIntvlEndTcaTime=cienaCesPmAdjustmentTcaLastIntvlEndTcaTime, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxAcceptedFrames, cienaCesPmBasicOtuHistoryBinQStdevOtu=cienaCesPmBasicOtuHistoryBinQStdevOtu, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxDroppedFrames, cienaCesPmTdmPwStatisticsBinMiss=cienaCesPmTdmPwStatisticsBinMiss, cienaCesPmBasicOtuHist24HBinEntry=cienaCesPmBasicOtuHist24HBinEntry, cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirCurrBinFwdTxForwardedFrames, cienaCesPmExtendedTxRxHistoryBinOversizePkts=cienaCesPmExtendedTxRxHistoryBinOversizePkts, cienaCesPmTdmDS3PortTotalStatisticsBinPcv=cienaCesPmTdmDS3PortTotalStatisticsBinPcv, cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMax=cienaCesPmAdjustmentTcaLastIntvlEndTcaBasisValueMax, cienaCesPmIGMPCurr24HBinIgmpnumReplyTimeouts=cienaCesPmIGMPCurr24HBinIgmpnumReplyTimeouts, cienaCesPmBasicOtuStatsBinPrfBerOtu=cienaCesPmBasicOtuStatsBinPrfBerOtu, cienaCesPmBasicTxRxBiDirHist24HBinClearTime=cienaCesPmBasicTxRxBiDirHist24HBinClearTime, cienaCesPmTdmDS3PortStatisticsBinStartTime=cienaCesPmTdmDS3PortStatisticsBinStartTime, cienaCesPmAccessTotalStatisticsBinTable=cienaCesPmAccessTotalStatisticsBinTable, cienaCesPmBasicTxRxBiDirHistoryBinFwdTxFramesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinFwdTxFramesPerSec, cienaCesPmExtendedTxRxAllTimeBinRxMcastPkts=cienaCesPmExtendedTxRxAllTimeBinRxMcastPkts, cienaCesPmTdmT1PortTotalStatisticsBinSasp=cienaCesPmTdmT1PortTotalStatisticsBinSasp, cienaCesPmBasicOtuHist24HBinQStdevOtu=cienaCesPmBasicOtuHist24HBinQStdevOtu, cienaCesPmExtendedTxRxHist24HBin256To511OctsPkts=cienaCesPmExtendedTxRxHist24HBin256To511OctsPkts, cienaCesPmFloodContainerTotalStatsBinBcastDroppedBytes=cienaCesPmFloodContainerTotalStatsBinBcastDroppedBytes, cienaCesPmBasicTxRxBiDirStatsBinFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirStatsBinFwdRxBytesPerSec, cienaCesPmExtendedTxRxHistoryBinRxMcastPkts=cienaCesPmExtendedTxRxHistoryBinRxMcastPkts, cienaCesPmExtendedTxRxHistoryBinRxCrcErrorPkts=cienaCesPmExtendedTxRxHistoryBinRxCrcErrorPkts, cienaCesPmIGMPStatsBinIgmpnumQueries=cienaCesPmIGMPStatsBinIgmpnumQueries, cienaCesPmExtendedTxRxAllTimeBinRxFramesPerSec=cienaCesPmExtendedTxRxAllTimeBinRxFramesPerSec, cienaCesPmAccessCurr24HBinEntry=cienaCesPmAccessCurr24HBinEntry, cienaCesPmBasicRxHistoryBinBasicRxAcceptedBytes=cienaCesPmBasicRxHistoryBinBasicRxAcceptedBytes, cienaCesPmTdmPwCurr24HBinStartTime=cienaCesPmTdmPwCurr24HBinStartTime, cienaCesPmBasicPtpTotalStatsBinOprOts=cienaCesPmBasicPtpTotalStatsBinOprOts, cienaCesPmAdjustmentTcaSamplesProcessedCurrentInterval=cienaCesPmAdjustmentTcaSamplesProcessedCurrentInterval, cienaCesPmBasicRxAllTimeBinEntry=cienaCesPmBasicRxAllTimeBinEntry, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxYellowBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxBytesPerSec=cienaCesPmBasicTxRxBiDirTotalStatsBinRevTxBytesPerSec, cienaCesPmIGMPCurrBinIgmpnumUnknownPktType=cienaCesPmIGMPCurrBinIgmpnumUnknownPktType, cienaCesPmBasicRxStatsBinStartTime=cienaCesPmBasicRxStatsBinStartTime, cienaCesPmBasicOtuCurrBinQMinOtu=cienaCesPmBasicOtuCurrBinQMinOtu, cienaCesPmQueueGroupHistoryBinState=cienaCesPmQueueGroupHistoryBinState, cienaCesPmTdmOCnPortHistoryBinClearTime=cienaCesPmTdmOCnPortHistoryBinClearTime, cienaCesPmBasicOduTotalStatsBinEsOdu=cienaCesPmBasicOduTotalStatsBinEsOdu, cienaCesPmExtendedTxRxHistoryBinIndex=cienaCesPmExtendedTxRxHistoryBinIndex, cienaCesPmExtendedTxRxHistoryBinRxPkts=cienaCesPmExtendedTxRxHistoryBinRxPkts, cienaCesPmFloodContainerHist24HBinTable=cienaCesPmFloodContainerHist24HBinTable, cienaCesPmTdmE1PortCurrBinTable=cienaCesPmTdmE1PortCurrBinTable, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevTxFramesPerSec, cienaCesPmExtendedTxRxCurrBinTx128To255OctsPkts=cienaCesPmExtendedTxRxCurrBinTx128To255OctsPkts, cienaCesPmExtendedTxRxTotalStatsBinTxCrcErrorPkts=cienaCesPmExtendedTxRxTotalStatsBinTxCrcErrorPkts, cienaCesPmBasicTxHistoryBinTable=cienaCesPmBasicTxHistoryBinTable, cienaCesPmExtendedTxRxHist24HBinRxInErrorPkts=cienaCesPmExtendedTxRxHist24HBinRxInErrorPkts, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedBytes, cienaCesPmTdmDS3PortHist24HBinPcv=cienaCesPmTdmDS3PortHist24HBinPcv, cienaCesPmBasicTxHist24HBinBasicTxForwardedFrames=cienaCesPmBasicTxHist24HBinBasicTxForwardedFrames, cienaCesPmTdmOCnPortHist24HBinSefss=cienaCesPmTdmOCnPortHist24HBinSefss, cienaCesPmTdmPwCurr24HBinEntry=cienaCesPmTdmPwCurr24HBinEntry, cienaCesPmTdmOCnPortHist24HBinEs=cienaCesPmTdmOCnPortHist24HBinEs, cienaCesPmAdjustmentTcaLastUnderflowTcaBoundaryValue=cienaCesPmAdjustmentTcaLastUnderflowTcaBoundaryValue)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmQueueGroupStatsBinClearTime=cienaCesPmQueueGroupStatsBinClearTime, cienaCesPmExtendedTxRxTotalStatsBinTxUnderRunPkts=cienaCesPmExtendedTxRxTotalStatsBinTxUnderRunPkts, cienaCesPmQueueGroupAllTimeBinDroppedBytes=cienaCesPmQueueGroupAllTimeBinDroppedBytes, cienaCesPmBasicPtpStatsBinOprnOts=cienaCesPmBasicPtpStatsBinOprnOts, cienaCesPmTdmDS3PortHist24HBinPuas=cienaCesPmTdmDS3PortHist24HBinPuas, cienaCesPmTdmPwHistoryBinDuration=cienaCesPmTdmPwHistoryBinDuration, cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerCurrBinUnknownUnicastDroppedFrames, cienaCesPmTdmOCnPortTotalStatisticsBinAs=cienaCesPmTdmOCnPortTotalStatisticsBinAs, cienaCesPmTdmOCnPortHist24HBinLoss=cienaCesPmTdmOCnPortHist24HBinLoss, cienaCesPmBasicOduHist24HBinEntry=cienaCesPmBasicOduHist24HBinEntry, cienaCesPmIGMPHist24HBinIgmpnumBadChecksum=cienaCesPmIGMPHist24HBinIgmpnumBadChecksum, cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue=cienaCesPmAdjustmentTcaLastIntvlEndTcaThresholdValue, cienaCesPmTdmT1PortTotalStatisticsBinSesl=cienaCesPmTdmT1PortTotalStatisticsBinSesl, cienaCesPmBasicOtuHist24HBinFecOtu=cienaCesPmBasicOtuHist24HBinFecOtu, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmBasicTxHist24HBinState=cienaCesPmBasicTxHist24HBinState, cienaCesPmQueueGroupAllTimeBinEntry=cienaCesPmQueueGroupAllTimeBinEntry, cienaCesPmBasicPtpTotalStatsBinOprMaxOch=cienaCesPmBasicPtpTotalStatsBinOprMaxOch, cienaCesPmBasicOduCurrBinDuration=cienaCesPmBasicOduCurrBinDuration, cienaCesPmBasicOduStatsBinSesOdu=cienaCesPmBasicOduStatsBinSesOdu, cienaCesPmExtendedTxRxAllTimeBinTxUnderRunPkts=cienaCesPmExtendedTxRxAllTimeBinTxUnderRunPkts, cienaCesPmTdmDS3PortStatisticsBinSefs=cienaCesPmTdmDS3PortStatisticsBinSefs, cienaCesPmExtendedTxRxCurr24HBinTx64OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx64OctsPkts, cienaCesPmTdmDS3PortTotalStatisticsBinSesl=cienaCesPmTdmDS3PortTotalStatisticsBinSesl, cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPHist24HBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmExtendedTxRxCurr24HBinTable=cienaCesPmExtendedTxRxCurr24HBinTable, cienaCesPmEgressQueueCurrBinStartTime=cienaCesPmEgressQueueCurrBinStartTime, cienaCesPmFloodContainerCurrBinTable=cienaCesPmFloodContainerCurrBinTable, cienaCesPmFloodContainerStatisticsBinEntry=cienaCesPmFloodContainerStatisticsBinEntry, cienaCesPmIGMPHistoryBinIgmpnumUnknownPktType=cienaCesPmIGMPHistoryBinIgmpnumUnknownPktType, cienaCesPmBasicTxRxHist24HBinBasicTxForwardedBytes=cienaCesPmBasicTxRxHist24HBinBasicTxForwardedBytes, cienaCesPmEgressQueueCurrBinMulticastEnqueuedBytes=cienaCesPmEgressQueueCurrBinMulticastEnqueuedBytes, cienaCesPmExtendedTxRxAllTimeBinTxExCollPkts=cienaCesPmExtendedTxRxAllTimeBinTxExCollPkts, cienaCesPmIGMPCurr24HBinClearedTime=cienaCesPmIGMPCurr24HBinClearedTime, cienaCesPmAccessStatisticsBinEntry=cienaCesPmAccessStatisticsBinEntry, cienaCesPmTdmE1PortCurrBinEs=cienaCesPmTdmE1PortCurrBinEs, cienaCesPmExtendedTxRxStatsBinTxBytesPerSec=cienaCesPmExtendedTxRxStatsBinTxBytesPerSec, cienaCesPmTdmPwCurr24HBinClearTime=cienaCesPmTdmPwCurr24HBinClearTime, cienaCesPmBasicTxRxHist24HBinEntry=cienaCesPmBasicTxRxHist24HBinEntry, cienaCesPmExtendedTxRxCurr24HBinTxBytes=cienaCesPmExtendedTxRxCurr24HBinTxBytes, cienaCesPmBasicTxRxBiDirHistoryBinRevTxFramesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinRevTxFramesPerSec, cienaCesPmIGMPStatisticsBinTable=cienaCesPmIGMPStatisticsBinTable, cienaCesPmBasicOduCurr24HBinState=cienaCesPmBasicOduCurr24HBinState, cienaCesPmBasicTxHist24HBinClearTime=cienaCesPmBasicTxHist24HBinClearTime, cienaCesPmBasicRxTotalStatsBinBasicRxBytesPerSec=cienaCesPmBasicRxTotalStatsBinBasicRxBytesPerSec, cienaCesPmQueueGroupHist24HBinClearTime=cienaCesPmQueueGroupHist24HBinClearTime, cienaCesPmExtendedTxRxTotalStatsBinRxPkts=cienaCesPmExtendedTxRxTotalStatsBinRxPkts, cienaCesPmExtendedTxRxTotalStatsBinRxCrcErrorPkts=cienaCesPmExtendedTxRxTotalStatsBinRxCrcErrorPkts, cienaCesPmTdmE1PortCurr24HBinUas=cienaCesPmTdmE1PortCurr24HBinUas, cienaCesPmAccessAllTimeBinDuration=cienaCesPmAccessAllTimeBinDuration, cienaCesPmTdmOCnPortHistoryBinSesl=cienaCesPmTdmOCnPortHistoryBinSesl, cienaCesPmIGMPStatsBinIgmpnumQueryTimeouts=cienaCesPmIGMPStatsBinIgmpnumQueryTimeouts, cienaCesPmBasicRxHistoryBinBasicRxAcceptedFrames=cienaCesPmBasicRxHistoryBinBasicRxAcceptedFrames, cienaCesPmQueueGroupTotalStatsBinEnqueuedFrames=cienaCesPmQueueGroupTotalStatsBinEnqueuedFrames, cienaCesPmBasicPtpHistoryBinOprOch=cienaCesPmBasicPtpHistoryBinOprOch, cienaCesPmTdmOCnPortCurr24HBinEs=cienaCesPmTdmOCnPortCurr24HBinEs, cienaCesPmExtendedTxRxCurr24HBinTx256To511OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx256To511OctsPkts, cienaCesPmBasicOtuCurr24HBinClearedTime=cienaCesPmBasicOtuCurr24HBinClearedTime, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxDroppedFrames, cienaCesPmExtendedTxRxAllTimeBinRxCrcErrorPkts=cienaCesPmExtendedTxRxAllTimeBinRxCrcErrorPkts, cienaCesPmTdmOCnPortTotalStatisticsBinSess=cienaCesPmTdmOCnPortTotalStatisticsBinSess, cienaCesPmBasicPtpHist24HBinOprOts=cienaCesPmBasicPtpHist24HBinOprOts, cienaCesPmTdmOCnPortCurr24HBinEss=cienaCesPmTdmOCnPortCurr24HBinEss, cienaCesPmBasicPtpCurr24HBinOprMaxOch=cienaCesPmBasicPtpCurr24HBinOprMaxOch, cienaCesPmIGMPAllTimeBinIgmpnumReplyTimeouts=cienaCesPmIGMPAllTimeBinIgmpnumReplyTimeouts, cienaCesPmInstanceName=cienaCesPmInstanceName, cienaCesPmExtendedTxRxHistoryBinTxPkts=cienaCesPmExtendedTxRxHistoryBinTxPkts, cienaCesPmIGMPAllTimeBinIgmpnumResourceExceed=cienaCesPmIGMPAllTimeBinIgmpnumResourceExceed, cienaCesPmBasicTxCurr24HBinTxForwardedFrames=cienaCesPmBasicTxCurr24HBinTxForwardedFrames, cienaCesPmBasicRxHistoryBinStartTime=cienaCesPmBasicRxHistoryBinStartTime, cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats=cienaCesPmAdjustmentTcaUnderflowHighWatermarkStats, cienaCesPmInstanceInterfaceName=cienaCesPmInstanceInterfaceName, cienaCesPmAlertTcaStats=cienaCesPmAlertTcaStats, cienaCesPmExtendedTxRxTotalStatsBinRxFramesPerSec=cienaCesPmExtendedTxRxTotalStatsBinRxFramesPerSec, cienaCesPmTdmT1PortHistoryBinFcp=cienaCesPmTdmT1PortHistoryBinFcp, cienaCesPmTdmT1PortTotalStatisticsBinTtp=cienaCesPmTdmT1PortTotalStatisticsBinTtp, cienaCesPmTdmPwHist24HBinReorder=cienaCesPmTdmPwHist24HBinReorder, cienaCesPmTdmT1PortHistoryBinEsp=cienaCesPmTdmT1PortHistoryBinEsp, cienaCesPmBasicOtuCurrBinClearedTime=cienaCesPmBasicOtuCurrBinClearedTime, cienaCesPmExtendedTxRxCurrBinTxCollPkts=cienaCesPmExtendedTxRxCurrBinTxCollPkts, cienaCesPmAdjustmentTcaHighWatermarkTime=cienaCesPmAdjustmentTcaHighWatermarkTime, cienaCesPmTdmE1PortHistoryBinAs=cienaCesPmTdmE1PortHistoryBinAs, cienaCesPmTdmE1PortHistoryBinBbe=cienaCesPmTdmE1PortHistoryBinBbe, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxAcceptedFrames, cienaCesPmFloodContainerCurr24HBinL2McastDroppedFrames=cienaCesPmFloodContainerCurr24HBinL2McastDroppedFrames, cienaCesPmExtendedTxRxTotalStatsBinTxUcastPkts=cienaCesPmExtendedTxRxTotalStatsBinTxUcastPkts, cienaCesPmTdmT1PortCurrBinSasp=cienaCesPmTdmT1PortCurrBinSasp, cienaCesPmBasicOduStats=cienaCesPmBasicOduStats, cienaCesPmExtendedTxRxCurrBinTxExCollPkts=cienaCesPmExtendedTxRxCurrBinTxExCollPkts, cienaCesPmTdmPwHistoryBinOverrun=cienaCesPmTdmPwHistoryBinOverrun, cienaCesPmExtendedTxRxStatsBinRxLOutRangePkts=cienaCesPmExtendedTxRxStatsBinRxLOutRangePkts, cienaCesPmFloodContainerCurr24HBinL2McastDroppedBytes=cienaCesPmFloodContainerCurr24HBinL2McastDroppedBytes, cienaCesPmIGMPCurrBinIgmpnumResourceExceed=cienaCesPmIGMPCurrBinIgmpnumResourceExceed, cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedBytes=cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedBytes, cienaCesPmExtendedTxRxCurr24HBinTxSingleCollPkts=cienaCesPmExtendedTxRxCurr24HBinTxSingleCollPkts, cienaCesPmBasicTxRxStatsBinRxDroppedBytes=cienaCesPmBasicTxRxStatsBinRxDroppedBytes, cienaCesPmTdmOCnPortHistoryBinEntry=cienaCesPmTdmOCnPortHistoryBinEntry, cienaCesPmBasicRxAllTimeBinBasicRxAcceptedFrames=cienaCesPmBasicRxAllTimeBinBasicRxAcceptedFrames, cienaCesPmExtendedTxRxAllTimeBin256To511OctsPkts=cienaCesPmExtendedTxRxAllTimeBin256To511OctsPkts, cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue=cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkValue, cienaCesPmTdmOCnPortCurrBinBbe=cienaCesPmTdmOCnPortCurrBinBbe, cienaCesPmQueueGroupTotalStatsBinEnqueuedBytes=cienaCesPmQueueGroupTotalStatsBinEnqueuedBytes, cienaCesPmEgressQueueStatsBinUnicastDroppedFrames=cienaCesPmEgressQueueStatsBinUnicastDroppedFrames, cienaCesPmTdmT1PortCurr24HBinEntry=cienaCesPmTdmT1PortCurr24HBinEntry, cienaCesPmBasicPtpCurrBinOptOch=cienaCesPmBasicPtpCurrBinOptOch, cienaCesPmEgressQueueStatsBinClearTime=cienaCesPmEgressQueueStatsBinClearTime, cienaCesPmInstanceThreshold=cienaCesPmInstanceThreshold, cienaCesPmIGMPCurrBinState=cienaCesPmIGMPCurrBinState, cienaCesPmExtendedTxRxTotalStatsBinInDiscards=cienaCesPmExtendedTxRxTotalStatsBinInDiscards, cienaCesPmBasicTxRxBiDirCurrBinDuration=cienaCesPmBasicTxRxBiDirCurrBinDuration, cienaCesPmBasicRxTotalStatisticsBinEntry=cienaCesPmBasicRxTotalStatisticsBinEntry, cienaCesPmTdmT1PortCurrBinFcp=cienaCesPmTdmT1PortCurrBinFcp, cienaCesPmTdmE1PortCurr24HBinSes=cienaCesPmTdmE1PortCurr24HBinSes, cienaCesPmTdmPwHist24HBinEntry=cienaCesPmTdmPwHist24HBinEntry, PmProfileType=PmProfileType, cienaCesPmBasicTxRxHistoryBinStartTime=cienaCesPmBasicTxRxHistoryBinStartTime, cienaCesPmBasicRxHist24HBinBasicRxDroppedBytes=cienaCesPmBasicRxHist24HBinBasicRxDroppedBytes, cienaCesPmBasicRxAllTimeBinBasicRxYellowFrames=cienaCesPmBasicRxAllTimeBinBasicRxYellowFrames, cienaCesPmBasicTxRxBiDirCurr24HBinDuration=cienaCesPmBasicTxRxBiDirCurr24HBinDuration, cienaCesPmBasicOduCurrBinTable=cienaCesPmBasicOduCurrBinTable, cienaCesPmTdmOCnPortHistoryBinUas=cienaCesPmTdmOCnPortHistoryBinUas, cienaCesPmTdmOCnPortHist24HBinEndTime=cienaCesPmTdmOCnPortHist24HBinEndTime, cienaCesPmBasicOtuCurr24HBinQMinOtu=cienaCesPmBasicOtuCurr24HBinQMinOtu, cienaCesPmFloodContainerAllTimeBinBcastDroppedFrames=cienaCesPmFloodContainerAllTimeBinBcastDroppedFrames, cienaCesPmTdmOCnPortTotalStatisticsBinEs=cienaCesPmTdmOCnPortTotalStatisticsBinEs, cienaCesPmBasicRxCurr24HBinEndTime=cienaCesPmBasicRxCurr24HBinEndTime, cienaCesPmBasicOduCurr24HBinStartTime=cienaCesPmBasicOduCurr24HBinStartTime, cienaCesPmBasicPtpHist24HBinState=cienaCesPmBasicPtpHist24HBinState, cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedBytes=cienaCesPmBasicTxRxBiDirCurrBinRevRxDroppedBytes, cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkStats=cienaCesPmAdjustmentTcaLastIntvlEndTcaWatermarkStats, cienaCesPmBasicTxRxHistoryBinRxAcceptedFrames=cienaCesPmBasicTxRxHistoryBinRxAcceptedFrames, cienaCesPmBasicRxTotalStatsBinStartTime=cienaCesPmBasicRxTotalStatsBinStartTime, cienaCesPmExtendedTxRxCurr24HBinTx4096To9216OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx4096To9216OctsPkts, cienaCesPmTdmOCnPortTotalStatisticsBinSes=cienaCesPmTdmOCnPortTotalStatisticsBinSes, cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsPortBlock, cienaCesPmIGMPCurr24HBinIgmpnumRouterDiscards=cienaCesPmIGMPCurr24HBinIgmpnumRouterDiscards, cienaCesPmTdmT1PortHistoryBinIndex=cienaCesPmTdmT1PortHistoryBinIndex, cienaCesPmAdjustmentTcaLastOverflowTcaBasisValue=cienaCesPmAdjustmentTcaLastOverflowTcaBasisValue, cienaCesPmTdmPwCurrBinUnderrun=cienaCesPmTdmPwCurrBinUnderrun, cienaCesPmBasicOtuStatisticsBinEntry=cienaCesPmBasicOtuStatisticsBinEntry, cienaCesPmTdmPwHist24HBinFcp=cienaCesPmTdmPwHist24HBinFcp, cienaCesPmBasicRxCurr24HBinTable=cienaCesPmBasicRxCurr24HBinTable, cienaCesPmIGMPCurrBinClearedTime=cienaCesPmIGMPCurrBinClearedTime, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxDroppedFrames, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxYellowBytes, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdRxAcceptedBytes, cienaCesPmTdmDS3PortHist24HBinTable=cienaCesPmTdmDS3PortHist24HBinTable, cienaCesPmExtendedTxRxTotalStatsBinRxUcastPkts=cienaCesPmExtendedTxRxTotalStatsBinRxUcastPkts, cienaCesPmBasicOtuStatsBinClearTime=cienaCesPmBasicOtuStatsBinClearTime, cienaCesPmInstanceBinCount=cienaCesPmInstanceBinCount, cienaCesPmExtendedTxRxTotalStatsBinLinkFlap=cienaCesPmExtendedTxRxTotalStatsBinLinkFlap, cienaCesPmFloodContainerCurrBinBcastDroppedFrames=cienaCesPmFloodContainerCurrBinBcastDroppedFrames, cienaCesPmTdmPwHist24HBinDuration=cienaCesPmTdmPwHist24HBinDuration, cienaCesPmBasicPtpCurrBinOptMaxOch=cienaCesPmBasicPtpCurrBinOptMaxOch, cienaCesPmBasicOtuCurrBinPrfBerMaxOtu=cienaCesPmBasicOtuCurrBinPrfBerMaxOtu, cienaCesPmBasicTxRxBiDirHistoryBinTable=cienaCesPmBasicTxRxBiDirHistoryBinTable, cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue=cienaCesPmAdjustmentTcaLastOverflowTcaThresholdValue, cienaCesPmQueueGroupHistoryBinDroppedFrames=cienaCesPmQueueGroupHistoryBinDroppedFrames, cienaCesPmFloodContainerTotalStatisticsBinEntry=cienaCesPmFloodContainerTotalStatisticsBinEntry, cienaCesPmBasicTxRxCurrBinStartTime=cienaCesPmBasicTxRxCurrBinStartTime, cienaCesPmExtendedTxRxStatsBinTxExCollPkts=cienaCesPmExtendedTxRxStatsBinTxExCollPkts, cienaCesPmTdmPwCurr24HBinAsp=cienaCesPmTdmPwCurr24HBinAsp, cienaCesPmBasicTxCurr24HBinTxFramesPerSec=cienaCesPmBasicTxCurr24HBinTxFramesPerSec, cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsLiNoServerLI=cienaCesPmIGMPAllTimeBinIgmpnumQueryDiscardsLiNoServerLI, cienaCesPmBasicTxRxCurr24HBinRxDroppedBytes=cienaCesPmBasicTxRxCurr24HBinRxDroppedBytes, cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerCurr24HBinUnknownUnicastDroppedFrames, cienaCesPmIGMPHist24HBinIgmpnumUnknownPktType=cienaCesPmIGMPHist24HBinIgmpnumUnknownPktType, cienaCesPmBasicPtpCurrBinOprAvgOts=cienaCesPmBasicPtpCurrBinOprAvgOts, cienaCesPmEgressQueueHist24HBinUnicastDroppedFrames=cienaCesPmEgressQueueHist24HBinUnicastDroppedFrames, cienaCesPmExtendedTxRxTotalStatsBinTxDeferPkts=cienaCesPmExtendedTxRxTotalStatsBinTxDeferPkts, cienaCesPmIGMPCurrBinTable=cienaCesPmIGMPCurrBinTable, cienaCesPmAlertTcaHighWatermarkValue=cienaCesPmAlertTcaHighWatermarkValue, cienaCesPmBasicPtpHistoryBinIndex=cienaCesPmBasicPtpHistoryBinIndex, cienaCesPmIGMPTotalStatsBinIgmpnumUnknownPktType=cienaCesPmIGMPTotalStatsBinIgmpnumUnknownPktType, cienaCesPmTdmOCnPortCurr24HBinSes=cienaCesPmTdmOCnPortCurr24HBinSes, cienaCesPmBasicRxHist24HBinBasicRxAcceptedFrames=cienaCesPmBasicRxHist24HBinBasicRxAcceptedFrames, cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxFramesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinFwdRxFramesPerSec, cienaCesPmQueueGroupStats=cienaCesPmQueueGroupStats, cienaCesPmBasicTxRxHist24HBinState=cienaCesPmBasicTxRxHist24HBinState, cienaCesPmTdmOCnPortHist24HBinState=cienaCesPmTdmOCnPortHist24HBinState, cienaCesPmEgressQueueHist24HBinEndTime=cienaCesPmEgressQueueHist24HBinEndTime, cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirTotalStatsBinFwdTxForwardedFrames, cienaCesPmIntervalProfileOverflowCount=cienaCesPmIntervalProfileOverflowCount, cienaCesPmBasicRxHistoryBinDuration=cienaCesPmBasicRxHistoryBinDuration, cienaCesPmBasicOtuStatsBinHccsOtu=cienaCesPmBasicOtuStatsBinHccsOtu, cienaCesPmTdmT1PortStatisticsBinCvp=cienaCesPmTdmT1PortStatisticsBinCvp, cienaCesPmTdmT1PortHist24HBinEsl=cienaCesPmTdmT1PortHist24HBinEsl, cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkStats=cienaCesPmAdjustmentTcaLastOverflowTcaWatermarkStats, cienaCesPmBasicTxRxTotalStatisticsBinTable=cienaCesPmBasicTxRxTotalStatisticsBinTable, cienaCesPmTdmPwCurrBinOverrun=cienaCesPmTdmPwCurrBinOverrun, cienaCesPmBasicOduStatsBinClearTime=cienaCesPmBasicOduStatsBinClearTime, cienaCesPmBasicOtuStatsBinFecOtu=cienaCesPmBasicOtuStatsBinFecOtu, cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPCurr24HBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmTdmE1PortStatisticsBinUas=cienaCesPmTdmE1PortStatisticsBinUas, cienaCesPmExtendedTxRxHistoryBinTx65To127OctsPkts=cienaCesPmExtendedTxRxHistoryBinTx65To127OctsPkts, cienaCesPmBasicTxTotalStatisticsBinEntry=cienaCesPmBasicTxTotalStatisticsBinEntry, cienaCesPmEgressQueueCurr24HBinTable=cienaCesPmEgressQueueCurr24HBinTable, cienaCesPmTdmPwTotalStatisticsBinMbit=cienaCesPmTdmPwTotalStatisticsBinMbit, cienaCesPmTdmDS3PortStatisticsBinLoss=cienaCesPmTdmDS3PortStatisticsBinLoss, cienaCesPmBasicTxRxBiDirTotalStatsBinStartTime=cienaCesPmBasicTxRxBiDirTotalStatsBinStartTime, cienaCesPmTdmPwStatisticsBinTtp=cienaCesPmTdmPwStatisticsBinTtp, cienaCesPmTdmDS3PortHistoryBinPcv=cienaCesPmTdmDS3PortHistoryBinPcv, cienaCesPmFloodContainerCurrBinL2McastDroppedBytes=cienaCesPmFloodContainerCurrBinL2McastDroppedBytes, cienaCesPmInstanceAlignment=cienaCesPmInstanceAlignment, cienaCesPmBasicTxRxHist24HBinBasicTxBytesPerSec=cienaCesPmBasicTxRxHist24HBinBasicTxBytesPerSec, cienaCesPmBasicTxCurrBinClearedTime=cienaCesPmBasicTxCurrBinClearedTime, cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedBytes=cienaCesPmBasicTxRxHist24HBinBasicRxAcceptedBytes, cienaCesPmFloodContainerHist24HBinBcastDroppedBytes=cienaCesPmFloodContainerHist24HBinBcastDroppedBytes, cienaCesPmBasicOtuStatsBinStartTime=cienaCesPmBasicOtuStatsBinStartTime, cienaCesPmIntervalProfileInstanceOperState=cienaCesPmIntervalProfileInstanceOperState, cienaCesPmTdmPwCurrBinLops=cienaCesPmTdmPwCurrBinLops, cienaCesPmIGMPHistoryBinIgmpnumJoins=cienaCesPmIGMPHistoryBinIgmpnumJoins, cienaCesPmExtendedTxRxAllTimeBinRxBcastPkts=cienaCesPmExtendedTxRxAllTimeBinRxBcastPkts, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsSrcIpZero=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsSrcIpZero, cienaCesPmIGMPHist24HBinStartTime=cienaCesPmIGMPHist24HBinStartTime, cienaCesPmFloodContainerTotalStatsBinL2McastDroppedBytes=cienaCesPmFloodContainerTotalStatsBinL2McastDroppedBytes, cienaCesPmBasicPtpHist24HBinEndTime=cienaCesPmBasicPtpHist24HBinEndTime, cienaCesPmTdmPwTotalStatisticsBinStartTime=cienaCesPmTdmPwTotalStatisticsBinStartTime, cienaCesPmExtendedTxRxAllTimeBinOversizePkts=cienaCesPmExtendedTxRxAllTimeBinOversizePkts, cienaCesPmBasicTxRxBiDirStatisticsBinEntry=cienaCesPmBasicTxRxBiDirStatisticsBinEntry, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmBasicOduHistoryBinTable=cienaCesPmBasicOduHistoryBinTable, cienaCesPmTdmOCnPortCurr24HBinAs=cienaCesPmTdmOCnPortCurr24HBinAs, cienaCesPmExtendedTxRxCurrBinRxLOutRangePkts=cienaCesPmExtendedTxRxCurrBinRxLOutRangePkts, cienaCesPmInstanceThresholdTable=cienaCesPmInstanceThresholdTable, cienaCesPmIGMPStatsBinIgmpnumHostDiscards=cienaCesPmIGMPStatsBinIgmpnumHostDiscards, cienaCesPmTdmPwStatisticsBinMissorder=cienaCesPmTdmPwStatisticsBinMissorder, cienaCesPmExtendedTxRxHist24HBinJabbersPkts=cienaCesPmExtendedTxRxHist24HBinJabbersPkts, cienaCesPmExtendedTxRxStatisticsBinTable=cienaCesPmExtendedTxRxStatisticsBinTable, cienaCesPmBasicTxRxBiDirStatsBinStartTime=cienaCesPmBasicTxRxBiDirStatsBinStartTime, cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedFrames=cienaCesPmBasicTxRxAllTimeBinBasicTxForwardedFrames, cienaCesPmExtendedTxRxCurr24HBinTx2048To4095OctsPkts=cienaCesPmExtendedTxRxCurr24HBinTx2048To4095OctsPkts, cienaCesPmExtendedTxRxHist24HBinRxPkts=cienaCesPmExtendedTxRxHist24HBinRxPkts, cienaCesPmEgressQueueCurrBinTable=cienaCesPmEgressQueueCurrBinTable, cienaCesPmBasicOtuStatisticsBinTable=cienaCesPmBasicOtuStatisticsBinTable, cienaCesPmAlertTcaLastTcaWatermarkType=cienaCesPmAlertTcaLastTcaWatermarkType, cienaCesPmEgressQueueHistoryBinState=cienaCesPmEgressQueueHistoryBinState, cienaCesPmBasicTxRxStatsBinRxBytesPerSec=cienaCesPmBasicTxRxStatsBinRxBytesPerSec, cienaCesPmEgressQueueHist24HBinMulticastEnqueuedBytes=cienaCesPmEgressQueueHist24HBinMulticastEnqueuedBytes, cienaCesPmIGMPStatsBinClearTime=cienaCesPmIGMPStatsBinClearTime, cienaCesPmBasicPtpCurr24HBinFieldsUnsupported=cienaCesPmBasicPtpCurr24HBinFieldsUnsupported, cienaCesPmTdmT1PortHist24HBinCvl=cienaCesPmTdmT1PortHist24HBinCvl, cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedFrames=cienaCesPmBasicTxRxBiDirCurrBinRevRxAcceptedFrames, cienaCesPmBasicTxHist24HBinBasicTxFramesPerSec=cienaCesPmBasicTxHist24HBinBasicTxFramesPerSec, cienaCesPmAccessStats=cienaCesPmAccessStats, cienaCesPmAccessHist24HBinClearTime=cienaCesPmAccessHist24HBinClearTime, cienaCesPmBasicPtpStatsBinOptAvgOch=cienaCesPmBasicPtpStatsBinOptAvgOch, cienaCesPmBasicOtuHist24HBinPrfBerOtu=cienaCesPmBasicOtuHist24HBinPrfBerOtu, cienaCesPmTdmOCnPortHist24HBinStartTime=cienaCesPmTdmOCnPortHist24HBinStartTime, cienaCesPmBasicRxHist24HBinBasicRxAcceptedBytes=cienaCesPmBasicRxHist24HBinBasicRxAcceptedBytes, cienaCesPmFloodContainerCurr24HBinEntry=cienaCesPmFloodContainerCurr24HBinEntry, cienaCesPmBasicRxCurrBinState=cienaCesPmBasicRxCurrBinState, cienaCesPmTdmE1PortHist24HBinEb=cienaCesPmTdmE1PortHist24HBinEb, cienaCesPmExtendedTxRxHist24HBinRxBytesPerSec=cienaCesPmExtendedTxRxHist24HBinRxBytesPerSec)
mibBuilder.exportSymbols("CIENA-CES-PM", cienaCesPmTdmOCnPortCurrBinEntry=cienaCesPmTdmOCnPortCurrBinEntry, cienaCesPmIntervalProfileRowStatus=cienaCesPmIntervalProfileRowStatus, cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedFrames=cienaCesPmFloodContainerHistoryBinUnknownUnicastDroppedFrames, cienaCesPmTdmDS3PortCurr24HBinCvl=cienaCesPmTdmDS3PortCurr24HBinCvl, cienaCesPmIGMPStatsBinIgmpnumReplyTimeouts=cienaCesPmIGMPStatsBinIgmpnumReplyTimeouts, cienaCesPmExtendedTxRxTotalStatsBinTxPkts=cienaCesPmExtendedTxRxTotalStatsBinTxPkts, cienaCesPmIGMPHistoryBinClearTime=cienaCesPmIGMPHistoryBinClearTime, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxFramesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxFramesPerSec, cienaCesPmExtendedTxRxCurrBinOversizePkts=cienaCesPmExtendedTxRxCurrBinOversizePkts, cienaCesPmExtendedTxRxTotalStatsBinTx256To511OctsPkts=cienaCesPmExtendedTxRxTotalStatsBinTx256To511OctsPkts, cienaCesPmIGMPHist24HBinTable=cienaCesPmIGMPHist24HBinTable, cienaCesPmBasicTxRxHistoryBinRxYellowFrames=cienaCesPmBasicTxRxHistoryBinRxYellowFrames, cienaCesPmExtendedTxRxHistoryBinTxExDeferPkts=cienaCesPmExtendedTxRxHistoryBinTxExDeferPkts, cienaCesPmExtendedTxRxCurrBin65To127OctsPkts=cienaCesPmExtendedTxRxCurrBin65To127OctsPkts, cienaCesPmBasicPtpHistoryBinOptOch=cienaCesPmBasicPtpHistoryBinOptOch, cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowBytes=cienaCesPmBasicTxRxBiDirHistoryBinRevRxYellowBytes, cienaCesPmExtendedTxRxHistoryBinTxBcastPkts=cienaCesPmExtendedTxRxHistoryBinTxBcastPkts, cienaCesPmTdmOCnPortStatisticsBinClearTime=cienaCesPmTdmOCnPortStatisticsBinClearTime, cienaCesPmBasicTxRxTotalStatsBinTxForwardedFrames=cienaCesPmBasicTxRxTotalStatsBinTxForwardedFrames, cienaCesPmTdmPwCurrBinSes=cienaCesPmTdmPwCurrBinSes, cienaCesPmBasicTxRxBiDirCurrBinRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirCurrBinRevRxBytesPerSec, cienaCesPmAdjustmentTcaSampleEndTime=cienaCesPmAdjustmentTcaSampleEndTime, cienaCesPmAlertTcaLastTcaWatermarkTime=cienaCesPmAlertTcaLastTcaWatermarkTime, cienaCesPmBasicRxHistoryBinTable=cienaCesPmBasicRxHistoryBinTable, cienaCesPmBasicPtpCurrBinOprMaxOch=cienaCesPmBasicPtpCurrBinOprMaxOch, cienaCesPmBasicPtpStatsBinOptOch=cienaCesPmBasicPtpStatsBinOptOch, cienaCesPmAccessStatsBinAccessHitFrames=cienaCesPmAccessStatsBinAccessHitFrames, cienaCesPmBasicTxRxBiDirCurrBinFwdRxBytesPerSec=cienaCesPmBasicTxRxBiDirCurrBinFwdRxBytesPerSec, cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirHist24HBinBasicRevRxBytesPerSec, cienaCesPmBasicRxCurrBinBasicRxAcceptedFrames=cienaCesPmBasicRxCurrBinBasicRxAcceptedFrames, cienaCesPmTdmT1PortHistoryBinClearTime=cienaCesPmTdmT1PortHistoryBinClearTime, cienaCesPmBasicPtpStatsBinOprOch=cienaCesPmBasicPtpStatsBinOprOch, cienaCesPmBasicRxHist24HBinEndTime=cienaCesPmBasicRxHist24HBinEndTime, cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue=cienaCesPmAdjustmentTcaUnderflowHighWatermarkValue, cienaCesPmExtendedTxRxHistoryBin1024To1518OctsPkts=cienaCesPmExtendedTxRxHistoryBin1024To1518OctsPkts, cienaCesPmTdmPwCurrBinSesp=cienaCesPmTdmPwCurrBinSesp, cienaCesPmBasicTxHistoryBinEntry=cienaCesPmBasicTxHistoryBinEntry, cienaCesPmTdmPwHistoryBinMissorder=cienaCesPmTdmPwHistoryBinMissorder, cienaCesPmBasicPtpHist24HBinOprnOch=cienaCesPmBasicPtpHist24HBinOprnOch, cienaCesPmTdmDS3PortStatisticsBinSesl=cienaCesPmTdmDS3PortStatisticsBinSesl, cienaCesPmTdmDS3PortHist24HBinCvl=cienaCesPmTdmDS3PortHist24HBinCvl, cienaCesPmTdmPwHistoryBinFcp=cienaCesPmTdmPwHistoryBinFcp, cienaCesPmAdjustmentTcaLastOverflowTcaCount=cienaCesPmAdjustmentTcaLastOverflowTcaCount, cienaCesPmExtendedTxRxHistoryBinRxBcastPkts=cienaCesPmExtendedTxRxHistoryBinRxBcastPkts, cienaCesPmTdmT1PortCurr24HBinUasp=cienaCesPmTdmT1PortCurr24HBinUasp, cienaCesPmFloodContainerHist24HBinL2McastDroppedBytes=cienaCesPmFloodContainerHist24HBinL2McastDroppedBytes, cienaCesPmTdmOCnPortCurr24HBinSefss=cienaCesPmTdmOCnPortCurr24HBinSefss, cienaCesPmExtendedTxRxStatsBinTx64OctsPkts=cienaCesPmExtendedTxRxStatsBinTx64OctsPkts, cienaCesPmBasicPtpCurr24HBinOprAvgOts=cienaCesPmBasicPtpCurr24HBinOprAvgOts, cienaCesPmTdmPwCurrBinStartTime=cienaCesPmTdmPwCurrBinStartTime, cienaCesPmFloodContainerStatsBinStartTime=cienaCesPmFloodContainerStatsBinStartTime, cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirHistoryBinFwdRxAcceptedFrames, cienaCesPmInstanceDynamic=cienaCesPmInstanceDynamic, cienaCesPmExtendedTxRxStatsBin256To511OctsPkts=cienaCesPmExtendedTxRxStatsBin256To511OctsPkts, cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedFrames=cienaCesPmBasicTxRxBiDirHist24HBinBasicFwdRxAcceptedFrames, cienaCesPmExtendedTxRxCurr24HBinRxFramesPerSec=cienaCesPmExtendedTxRxCurr24HBinRxFramesPerSec, cienaCesPmExtendedTxRxStatsBinUndersizePkts=cienaCesPmExtendedTxRxStatsBinUndersizePkts, cienaCesPmBasicTxRxCurr24HBinDuration=cienaCesPmBasicTxRxCurr24HBinDuration, cienaCesPmBasicOtuCurrBinSefsOtu=cienaCesPmBasicOtuCurrBinSefsOtu, cienaCesPmExtendedTxRxCurrBinRxMcastPkts=cienaCesPmExtendedTxRxCurrBinRxMcastPkts, cienaCesPmTdmPwHist24HBinOverrun=cienaCesPmTdmPwHist24HBinOverrun, cienaCesPmEgressQueueHist24HBinState=cienaCesPmEgressQueueHist24HBinState, cienaCesPmTdmPwTotalStatisticsBinTtp=cienaCesPmTdmPwTotalStatisticsBinTtp, cienaCesPmTdmDS3PortCurrBinPses=cienaCesPmTdmDS3PortCurrBinPses, cienaCesPmQueueGroupStatsBinDroppedFrames=cienaCesPmQueueGroupStatsBinDroppedFrames, cienaCesPmIGMPHistoryBinIgmpnumL2L3Mismatch=cienaCesPmIGMPHistoryBinIgmpnumL2L3Mismatch, cienaCesPmBasicOtuStatsBinUncFecBlkOtu=cienaCesPmBasicOtuStatsBinUncFecBlkOtu, cienaCesPmTdmT1PortStats=cienaCesPmTdmT1PortStats, cienaCesPmBasicTxRxStatsBinRxYellowBytes=cienaCesPmBasicTxRxStatsBinRxYellowBytes, cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirStatsBinRevTxForwardedBytes, cienaCesPmBasicPtpHistoryBinOprMaxOch=cienaCesPmBasicPtpHistoryBinOprMaxOch, cienaCesPmExtendedTxRxCurr24HBinTxLOutRangePkts=cienaCesPmExtendedTxRxCurr24HBinTxLOutRangePkts, cienaCesPmBasicRxStatsBinBasicRxFramesPerSec=cienaCesPmBasicRxStatsBinBasicRxFramesPerSec, cienaCesPmTdmPwStatisticsBinOverrun=cienaCesPmTdmPwStatisticsBinOverrun, cienaCesPmBasicTxTotalStatsBinTxForwardedFrames=cienaCesPmBasicTxTotalStatsBinTxForwardedFrames, cienaCesPmIGMPHistoryBinEndTime=cienaCesPmIGMPHistoryBinEndTime, cienaCesPmTdmOCnPortCurr24HBinSesl=cienaCesPmTdmOCnPortCurr24HBinSesl, cienaCesPmBasicTxRxBiDirStatisticsBinTable=cienaCesPmBasicTxRxBiDirStatisticsBinTable, cienaCesPmEgressQueueHistoryBinMulticastEnqueuedBytes=cienaCesPmEgressQueueHistoryBinMulticastEnqueuedBytes, cienaCesPmFloodContainerHistoryBinEntry=cienaCesPmFloodContainerHistoryBinEntry, cienaCesPmTdmT1PortStatisticsBinFcp=cienaCesPmTdmT1PortStatisticsBinFcp, cienaCesPmTdmE1PortTotalStatisticsBinBbe=cienaCesPmTdmE1PortTotalStatisticsBinBbe, cienaCesPmTdmE1PortHistoryBinEb=cienaCesPmTdmE1PortHistoryBinEb, cienaCesPmAlertTcaSamplesDiscardedTotal=cienaCesPmAlertTcaSamplesDiscardedTotal, cienaCesPmExtendedTxRxStatsBin1519To2047OctsPkts=cienaCesPmExtendedTxRxStatsBin1519To2047OctsPkts, cienaCesPmBasicOtuCurr24HBinEsOtu=cienaCesPmBasicOtuCurr24HBinEsOtu, PmProfileFieldMapBasicOtu=PmProfileFieldMapBasicOtu, cienaCesPmExtendedTxRxAllTimeBinTable=cienaCesPmExtendedTxRxAllTimeBinTable, cienaCesPmBasicOduStatsBinCvOdu=cienaCesPmBasicOduStatsBinCvOdu, cienaCesPmEgressQueueHist24HBinDuration=cienaCesPmEgressQueueHist24HBinDuration, cienaCesPmQueueGroupAllTimeBinTable=cienaCesPmQueueGroupAllTimeBinTable, cienaCesPmBasicTxCurrBinEntry=cienaCesPmBasicTxCurrBinEntry, cienaCesPmIntervalProfileAlertThresholdPercentage=cienaCesPmIntervalProfileAlertThresholdPercentage, cienaCesPmInstanceHistoryClear=cienaCesPmInstanceHistoryClear, cienaCesPmBasicTxRxCurr24HBinTable=cienaCesPmBasicTxRxCurr24HBinTable, cienaCesPmBasicOduHist24HBinState=cienaCesPmBasicOduHist24HBinState, cienaCesPmExtendedTxRxHist24HBinLinkDown=cienaCesPmExtendedTxRxHist24HBinLinkDown, cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedBytes=cienaCesPmBasicRxTotalStatsBinBasicRxAcceptedBytes, cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsQueryCameTooSoon=cienaCesPmIGMPStatsBinIgmpnumQueryDiscardsQueryCameTooSoon, cienaCesPmTdmOCnPortHist24HBinUasl=cienaCesPmTdmOCnPortHist24HBinUasl, cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedFrames=cienaCesPmBasicTxRxAllTimeBinBasicRxAcceptedFrames, cienaCesPmAdjustmentTcaSamplesDiscardedCurrentInterval=cienaCesPmAdjustmentTcaSamplesDiscardedCurrentInterval, cienaCesPmExtendedTxRxHistoryBinTxMcastPkts=cienaCesPmExtendedTxRxHistoryBinTxMcastPkts, cienaCesPmIGMPStatsBinIgmpnumQueryDiscards=cienaCesPmIGMPStatsBinIgmpnumQueryDiscards, cienaCesPmExtendedTxRxHist24HBinTxGiantPkts=cienaCesPmExtendedTxRxHist24HBinTxGiantPkts, cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedBytes=cienaCesPmBasicTxRxBiDirStatsBinFwdRxAcceptedBytes, PmTcaUnsigned64=PmTcaUnsigned64, cienaCesPmIGMPCurrBinIgmpnumReplyTimeouts=cienaCesPmIGMPCurrBinIgmpnumReplyTimeouts, cienaCesPmIntervalProfileNextIndex=cienaCesPmIntervalProfileNextIndex, cienaCesPmTdmDS3PortCurr24HBinDuration=cienaCesPmTdmDS3PortCurr24HBinDuration, cienaCesPmIGMPAllTimeBinTable=cienaCesPmIGMPAllTimeBinTable, cienaCesPmExtendedTxRxCurr24HBinFragmentsPkts=cienaCesPmExtendedTxRxCurr24HBinFragmentsPkts, cienaCesPmBasicTxRxHistoryBinRxFramesPerSec=cienaCesPmBasicTxRxHistoryBinRxFramesPerSec, cienaCesPmAlertTcaLastTcaThresholdValue=cienaCesPmAlertTcaLastTcaThresholdValue, cienaCesPmBasicTxCurrBinTxForwardedFrames=cienaCesPmBasicTxCurrBinTxForwardedFrames, cienaCesPmTdmOCnPortHist24HBinTt=cienaCesPmTdmOCnPortHist24HBinTt, cienaCesPmTdmOCnPortHist24HBinBbe=cienaCesPmTdmOCnPortHist24HBinBbe, cienaCesPmQueueGroupHistoryBinEndTime=cienaCesPmQueueGroupHistoryBinEndTime, cienaCesPmBasicTxRxBiDirCurr24HBinRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirCurr24HBinRevRxBytesPerSec, cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedFrames=cienaCesPmBasicTxRxBiDirHistoryBinRevRxDroppedFrames, cienaCesPmBasicPtpHistoryBinDuration=cienaCesPmBasicPtpHistoryBinDuration, cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedBytes=cienaCesPmBasicTxRxBiDirCurrBinRevTxForwardedBytes, cienaCesPmExtendedTxRxCurrBinRxPkts=cienaCesPmExtendedTxRxCurrBinRxPkts, cienaCesPmTdmPwCurr24HBinOverrun=cienaCesPmTdmPwCurr24HBinOverrun, cienaCesPmBasicOduHistoryBinClearTime=cienaCesPmBasicOduHistoryBinClearTime, cienaCesPmExtendedTxRxAllTimeBin65To127OctsPkts=cienaCesPmExtendedTxRxAllTimeBin65To127OctsPkts, cienaCesPmQueueGroupCurr24HBinEndTime=cienaCesPmQueueGroupCurr24HBinEndTime, cienaCesPmBasicPtpCurr24HBinOprAvgOch=cienaCesPmBasicPtpCurr24HBinOprAvgOch, cienaCesPmFloodContainerCurrBinL2McastDroppedFrames=cienaCesPmFloodContainerCurrBinL2McastDroppedFrames, cienaCesPmTdmPwTotalStatisticsBinSesp=cienaCesPmTdmPwTotalStatisticsBinSesp, cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedFrames=cienaCesPmBasicTxRxBiDirCurr24HBinFwdTxForwardedFrames, cienaCesPmBasicPtpHist24HBinOprMaxOch=cienaCesPmBasicPtpHist24HBinOprMaxOch, cienaCesPmBasicTxRxBiDirHistoryBinRevRxBytesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinRevRxBytesPerSec, cienaCesPmBasicOduCurr24HBinEsOdu=cienaCesPmBasicOduCurr24HBinEsOdu, cienaCesPmTdmOCnPortCurr24HBinLoss=cienaCesPmTdmOCnPortCurr24HBinLoss, cienaCesPmIGMPAllTimeBinIgmpnumQueryTimeouts=cienaCesPmIGMPAllTimeBinIgmpnumQueryTimeouts, cienaCesPmTdmE1PortStatisticsBinTable=cienaCesPmTdmE1PortStatisticsBinTable, cienaCesPmBasicRxCurrBinBasicRxDroppedFrames=cienaCesPmBasicRxCurrBinBasicRxDroppedFrames, cienaCesPmAccessHistoryBinEndTime=cienaCesPmAccessHistoryBinEndTime, cienaCesPmExtendedTxRxCurrBinTxSingleCollPkts=cienaCesPmExtendedTxRxCurrBinTxSingleCollPkts, cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortBlock=cienaCesPmIGMPHistoryBinIgmpnumQueryDiscardsPortBlock, cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkStats=cienaCesPmAdjustmentTcaLastUnderflowTcaWatermarkStats, cienaCesPmQueueGroupCurrBinEnqueuedFrames=cienaCesPmQueueGroupCurrBinEnqueuedFrames, cienaCesPmAdjustmentTcaUnderflowCurrentCount=cienaCesPmAdjustmentTcaUnderflowCurrentCount, cienaCesPmBasicTxRxHistoryBinRxYellowBytes=cienaCesPmBasicTxRxHistoryBinRxYellowBytes, cienaCesPmBasicRxHist24HBinState=cienaCesPmBasicRxHist24HBinState, cienaCesPmTdmT1PortTotalStatisticsBinSesp=cienaCesPmTdmT1PortTotalStatisticsBinSesp, cienaCesPmEgressQueueCurrBinUnicastDroppedBytes=cienaCesPmEgressQueueCurrBinUnicastDroppedBytes, cienaCesPmEgressQueueStatsBinMulticastDroppedFrames=cienaCesPmEgressQueueStatsBinMulticastDroppedFrames, cienaCesPmBasicOtuHist24HBinTable=cienaCesPmBasicOtuHist24HBinTable, cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdType=cienaCesPmAdjustmentTcaLastUnderflowTcaThresholdType, cienaCesPmBasicTxCurr24HBinTxForwardedBytes=cienaCesPmBasicTxCurr24HBinTxForwardedBytes, cienaCesPmExtendedTxRxStatsBinTxCollPkts=cienaCesPmExtendedTxRxStatsBinTxCollPkts, cienaCesPmEgressQueueCurr24HBinMulticastDroppedBytes=cienaCesPmEgressQueueCurr24HBinMulticastDroppedBytes, cienaCesPmBasicPtpHistoryBinOprnOts=cienaCesPmBasicPtpHistoryBinOprnOts, cienaCesPmBasicRxHistoryBinBasicRxYellowFrames=cienaCesPmBasicRxHistoryBinBasicRxYellowFrames, cienaCesPmBasicOduCurr24HBinUasOdu=cienaCesPmBasicOduCurr24HBinUasOdu, cienaCesPmBasicTxRxBiDirHistoryBinFwdTxBytesPerSec=cienaCesPmBasicTxRxBiDirHistoryBinFwdTxBytesPerSec, cienaCesPmBasicOtuCurr24HBinUncFecBlkOtu=cienaCesPmBasicOtuCurr24HBinUncFecBlkOtu, cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscards=cienaCesPmIGMPTotalStatsBinIgmpnumQueryDiscards)
