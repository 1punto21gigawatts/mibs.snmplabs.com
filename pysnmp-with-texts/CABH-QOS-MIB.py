#
# PySNMP MIB module CABH-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CABH-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:44:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
clabProjCableHome, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjCableHome")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, NotificationType, Bits, IpAddress, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, iso, Counter32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "NotificationType", "Bits", "IpAddress", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "iso", "Counter32", "Unsigned32", "ModuleIdentity")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
cabhQosMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6))
cabhQosMib.setRevisions(('2003-03-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cabhQosMib.setRevisionsDescriptions(('Initial version, published as RFC xxxx.',))
if mibBuilder.loadTexts: cabhQosMib.setLastUpdated('200303010000Z')
if mibBuilder.loadTexts: cabhQosMib.setOrganization('CableLabs Broadband Access Department')
if mibBuilder.loadTexts: cabhQosMib.setContactInfo('Kevin Luehrs Postal: Cable Television Laboratories, Inc. 400 Centennial Parkway Louisville, Colorado 80027-1266 U.S.A. Phone: +1 303-661-9100 Fax: +1 303-661-9199 E-mail: k.luehrs@cablelabs.com; mibs@cablelabs.com')
if mibBuilder.loadTexts: cabhQosMib.setDescription('This MIB module supplies parameters for the configuration and monitoring of CableHome prioritized QoS capability.')
cabhQosMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1))
cabhPriorityQosMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1))
cabhPriorityQosBase = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1))
cabhPriorityQosBp = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2))
cabhPriorityQosPs = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 3))
cabhPriorityQosMasterTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 1), )
if mibBuilder.loadTexts: cabhPriorityQosMasterTable.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosMasterTable.setDescription('This table contains a list of mappings for Application IDs to Default CableHome Priorities.')
cabhPriorityQosMasterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 1, 1), ).setIndexNames((0, "CABH-QOS-MIB", "cabhPriorityQosMasterApplicationId"))
if mibBuilder.loadTexts: cabhPriorityQosMasterEntry.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosMasterEntry.setDescription('An entry for mapping Application IDs to Default CableHome Priorities.')
cabhPriorityQosMasterApplicationId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cabhPriorityQosMasterApplicationId.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosMasterApplicationId.setDescription('The IANA well-known port number identifying an application.')
cabhPriorityQosMasterDefaultCHPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cabhPriorityQosMasterDefaultCHPriority.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosMasterDefaultCHPriority.setDescription('The Qos priority assigned to the application.')
cabhPriorityQosMasterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cabhPriorityQosMasterRowStatus.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosMasterRowStatus.setDescription("The Row Status interlock for creation and deletion of row entries. The PS MUST NOT allow the NMS to set RowStatus to notInService(2). The PS MUST assign a RowStatus of notReady(3) to any new row created without a valid value for both entries. The PS will prevent modification of this table's columns and return an inconsistentValue error if the NMS attempts to make such modifications while RowStatus is active(1).")
cabhPriorityQosSetToFactory = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cabhPriorityQosSetToFactory.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosSetToFactory.setDescription('Reading this object alwyas returns false(2). When this object is set to true(1), the PS MUST clear all the entries in the cabhPriorityQosBpTable and cabhPriorityQosBpDestTable.')
cabhPriorityQosBpTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1), )
if mibBuilder.loadTexts: cabhPriorityQosBpTable.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpTable.setDescription('This table contains the priorities for each of the discovered CableHome Host (BP) applications and related data.')
cabhPriorityQosBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1), ).setIndexNames((0, "CABH-QOS-MIB", "cabhPriorityQosMasterApplicationId"), (0, "CABH-QOS-MIB", "cabhPriorityQosBpIpAddrType"), (0, "CABH-QOS-MIB", "cabhPriorityQosBpIpAddr"))
if mibBuilder.loadTexts: cabhPriorityQosBpEntry.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpEntry.setDescription('List of all the discovered applications on a BP and their priorities identified by the PS.')
cabhPriorityQosBpIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpIpAddrType.setDescription('The type of the IP address assigned to a particular BP element.')
cabhPriorityQosBpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpIpAddr.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpIpAddr.setDescription('The IP address assigned to a particular BP element.')
cabhPriorityQosBpApplicationId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpApplicationId.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpApplicationId.setDescription('The IANA well-known port number assigned to a particular application implemented on the CableHome Host device in which this BP resides.')
cabhPriorityQosBpDefaultCHPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpDefaultCHPriority.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDefaultCHPriority.setDescription('The priority assigned to a particular application implemented on CableHome Host device in which this BP resides. The PS populates this entry according to the Application Priority Master Table.')
cabhPriorityQosBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpIndex.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpIndex.setDescription("The unique identifier for a particular row in the BP Application Priority Table. This identifier is used as an index into the 'nested' Destination Priority Table.")
cabhPriorityQosBpDestTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2), )
if mibBuilder.loadTexts: cabhPriorityQosBpDestTable.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestTable.setDescription('This table contains the priorities based on sessions established by a BP, identified by destination IP address and port number. It is indexed with a unique identifier for rows in the BP Application Priority Table (cabhPriorityQoSBpTable.')
cabhPriorityQosBpDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1), ).setIndexNames((0, "CABH-QOS-MIB", "cabhPriorityQosBpIndex"), (0, "CABH-QOS-MIB", "cabhPriorityQosBpDestIndex"))
if mibBuilder.loadTexts: cabhPriorityQosBpDestEntry.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestEntry.setDescription('List of Destination IP addresses and port numbers for an application to which special Qos priority is provisioned.')
cabhPriorityQosBpDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cabhPriorityQosBpDestIndex.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestIndex.setDescription('The locally unique index into the Destination Priority Table.')
cabhPriorityQosBpDestIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpAddrType.setDescription('The type of the Destination IP Address.')
cabhPriorityQosBpDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpAddr.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpAddr.setDescription('The Destination IP address of the device to which an application-session is established by a BP and a special Qos priority is provisioned.')
cabhPriorityQosBpDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpDestPort.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestPort.setDescription('The port number on a IP device to which an application-session is established by a BP and a special Qos priority is provisioned.')
cabhPriorityQosBpDestIpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpPortPriority.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosBpDestIpPortPriority.setDescription('The Qos priority assigned to a particular application-session (identified by destination IP and Port) on a BP.')
cabhPriorityQosPsIfAttribTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 3, 1), )
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribTable.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribTable.setDescription('This table contains the number of media access priorities and number of queues associated with each LAN interface in the Residential Gateway.')
cabhPriorityQosPsIfAttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribEntry.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribEntry.setDescription('Number of media access priorities and number of queues for each LAN interface in the Residential Gateway. This table applies only to interfaces through which data flows.')
cabhPriorityQosPsIfAttribIfNumPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribIfNumPriorities.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribIfNumPriorities.setDescription('The number of media access priorities supported by this LAN interface.')
cabhPriorityQosPsIfAttribIfNumQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 1, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribIfNumQueues.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosPsIfAttribIfNumQueues.setDescription('The number of queues associated with this LAN interface.')
cabhQosNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 2))
cabhPriorityQosNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 2, 1))
cabhQosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3))
cabhPriorityQosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3, 1))
cabhPriorityQosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3, 1, 1))
cabhPriorityQosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3, 1, 2))
cabhPriorityQosCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3, 1, 2, 1)).setObjects(("CABH-QOS-MIB", "cabhPriorityQosGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cabhPriorityQosCompliance = cabhPriorityQosCompliance.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosCompliance.setDescription('The compliance statement for devices that implement CableHome 1.1 PriorityQos capability.')
cabhPriorityQosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 4, 6, 3, 1, 1, 1)).setObjects(("CABH-QOS-MIB", "cabhPriorityQosMasterDefaultCHPriority"), ("CABH-QOS-MIB", "cabhPriorityQosMasterRowStatus"), ("CABH-QOS-MIB", "cabhPriorityQosSetToFactory"), ("CABH-QOS-MIB", "cabhPriorityQosBpIpAddrType"), ("CABH-QOS-MIB", "cabhPriorityQosBpIpAddr"), ("CABH-QOS-MIB", "cabhPriorityQosBpApplicationId"), ("CABH-QOS-MIB", "cabhPriorityQosBpDefaultCHPriority"), ("CABH-QOS-MIB", "cabhPriorityQosBpIndex"), ("CABH-QOS-MIB", "cabhPriorityQosBpDestIpAddrType"), ("CABH-QOS-MIB", "cabhPriorityQosBpDestIpAddr"), ("CABH-QOS-MIB", "cabhPriorityQosBpDestPort"), ("CABH-QOS-MIB", "cabhPriorityQosBpDestIpPortPriority"), ("CABH-QOS-MIB", "cabhPriorityQosPsIfAttribIfNumPriorities"), ("CABH-QOS-MIB", "cabhPriorityQosPsIfAttribIfNumQueues"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cabhPriorityQosGroup = cabhPriorityQosGroup.setStatus('current')
if mibBuilder.loadTexts: cabhPriorityQosGroup.setDescription('Group of objects for CableHome Application Priority MIB.')
mibBuilder.exportSymbols("CABH-QOS-MIB", cabhPriorityQosBpDestIpAddr=cabhPriorityQosBpDestIpAddr, cabhPriorityQosSetToFactory=cabhPriorityQosSetToFactory, cabhPriorityQosCompliances=cabhPriorityQosCompliances, cabhPriorityQosBpDestIpAddrType=cabhPriorityQosBpDestIpAddrType, cabhPriorityQosBpApplicationId=cabhPriorityQosBpApplicationId, cabhPriorityQosPsIfAttribEntry=cabhPriorityQosPsIfAttribEntry, cabhPriorityQosBpIpAddr=cabhPriorityQosBpIpAddr, cabhPriorityQosBpIpAddrType=cabhPriorityQosBpIpAddrType, cabhPriorityQosBp=cabhPriorityQosBp, cabhPriorityQosBase=cabhPriorityQosBase, cabhPriorityQosPs=cabhPriorityQosPs, cabhPriorityQosBpTable=cabhPriorityQosBpTable, cabhPriorityQosGroup=cabhPriorityQosGroup, cabhPriorityQosMasterRowStatus=cabhPriorityQosMasterRowStatus, cabhQosMib=cabhQosMib, cabhPriorityQosBpDestPort=cabhPriorityQosBpDestPort, cabhPriorityQosBpDefaultCHPriority=cabhPriorityQosBpDefaultCHPriority, cabhPriorityQosBpDestTable=cabhPriorityQosBpDestTable, cabhPriorityQosMasterApplicationId=cabhPriorityQosMasterApplicationId, cabhPriorityQosBpDestIndex=cabhPriorityQosBpDestIndex, cabhPriorityQosConformance=cabhPriorityQosConformance, cabhPriorityQosMasterDefaultCHPriority=cabhPriorityQosMasterDefaultCHPriority, cabhPriorityQosBpDestEntry=cabhPriorityQosBpDestEntry, cabhPriorityQosBpEntry=cabhPriorityQosBpEntry, cabhPriorityQosPsIfAttribIfNumQueues=cabhPriorityQosPsIfAttribIfNumQueues, cabhPriorityQosPsIfAttribIfNumPriorities=cabhPriorityQosPsIfAttribIfNumPriorities, cabhPriorityQosPsIfAttribTable=cabhPriorityQosPsIfAttribTable, cabhQosNotification=cabhQosNotification, cabhPriorityQosMasterEntry=cabhPriorityQosMasterEntry, cabhPriorityQosGroups=cabhPriorityQosGroups, PYSNMP_MODULE_ID=cabhQosMib, cabhQosMibObjects=cabhQosMibObjects, cabhQosConformance=cabhQosConformance, cabhPriorityQosMasterTable=cabhPriorityQosMasterTable, cabhPriorityQosBpDestIpPortPriority=cabhPriorityQosBpDestIpPortPriority, cabhPriorityQosBpIndex=cabhPriorityQosBpIndex, cabhPriorityQosMibObjects=cabhPriorityQosMibObjects, cabhPriorityQosNotification=cabhPriorityQosNotification, cabhPriorityQosCompliance=cabhPriorityQosCompliance)
