#
# PySNMP MIB module I2000-V1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/I2000-V1
# Produced by pysmi-0.3.4 at Wed May  1 13:50:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Unsigned32, TimeTicks, Bits, NotificationType, MibIdentifier, NotificationType, iso, enterprises, ObjectIdentity, Integer32, Gauge32, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "TimeTicks", "Bits", "NotificationType", "MibIdentifier", "NotificationType", "iso", "enterprises", "ObjectIdentity", "Integer32", "Gauge32", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
iMAP = MibIdentifier((1, 3, 6, 1, 4, 1, 2011))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2))
iMAPNetManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15))
iMAPNorthbound = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2))
iMAPNorthboundCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1))
iMAPNorthboundEventMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2))
iMAPNorthboundNotificationReport = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1))
iMAPNorthboundNotificationCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1))
iMAPNorthboundHeartbeatNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1))
iMAPNorthboundHeartbeatNotificationV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 0))
iMAPNorthboundHeartbeatSystemLabel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSystemLabel.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSystemLabel.setDescription('Managed system ID: indicates the managed system from which the heartbeat notification is reported. It uniquely identifies one EMS.')
iMAPNorthboundHeartbeatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatPeriod.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatPeriod.setDescription('Heartbeat period (must be between 3 and 300), in seconds')
iMAPNorthboundHeartbeatTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatTimeStamp.setDescription('Time stamp: the time when the heartbeat notification trap is generated')
iMAPNorthboundCommuLinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3))
iMAPNorthboundHeartbeatSvc = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3, 1))
iMAPNorthboundHeartbeatSvcReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSvcReportInterval.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatSvcReportInterval.setDescription('Accepts integral values in the range 3-300 (both end inclusive) Sets heartbeat interval to the value supplied. A heart beat is sent immediately consisting of changed interval. Attempt to set with invalid value results in error.')
iMAPNorthboundFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4))
iMAPNorthboundFaultQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 1))
iMAPNorthboundAlarmQuery = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmQuery.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmQuery.setDescription('Accepts only values 0 and 1 (single character) Attempt to set any other value returns error 1-> starts query active alarm process (if previous query alarm process is in progress then error is returned) 0-> stops the previous query active alarm process in progress (if any) ')
iMAPNorthboundFaultNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3))
iMAPNorthboundFaultAlarmNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3))
iMAPNorthboundFaultAlarmNotificationV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 0))
iMAPNorthboundAlarmCSN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmCSN.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmCSN.setDescription('Serial number of an alarm > 0. An alarm is identified by a unique number.')
iMAPNorthboundAlarmCategory = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmCategory.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmCategory.setDescription('Category can be one of the following: 1 - Fault 2 - Clear 3 - Event 4 - Acknowledge 5 - Unacknowledge 9 - Change ')
iMAPNorthboundAlarmOccurTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmOccurTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmOccurTime.setDescription('Fault occurrence time, time at which the alarm has been raised')
iMAPNorthboundAlarmMOName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmMOName.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmMOName.setDescription('Managed object name for which the alarm has been raised')
iMAPNorthboundAlarmProductID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("transmission", 1), ("mobile", 2), ("fixedNetworkNarrow", 3), ("bandFixedBand", 4), ("intelligence", 5), ("omc", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProductID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProductID.setDescription('Product type ID: 1 - transmission 2 - mobile 3 - fixed network narrowband 4 - fixed network broadband 5 - intelligent network 6 - omc')
iMAPNorthboundAlarmNEType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEType.setDescription('Network Element Type ID')
iMAPNorthboundAlarmNEDevID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEDevID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmNEDevID.setDescription('Network Element or Device ID')
iMAPNorthboundAlarmDevCsn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmDevCsn.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmDevCsn.setDescription('Device Serial number of the alarm device, unique in the same NE.')
iMAPNorthboundAlarmID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmID.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmID.setDescription('Alarm ID for the raised alarm')
iMAPNorthboundAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmType.setDescription('Alarm type. It can be one of the following: 1 - Power System 2 - Environment System 3 - Signaling System 4 - Trunk System 5 - Hardware System 6 - Software System 7 - Running System 8 - Communication System 9 - QoS 10 - Processing error 11 - OMC ')
iMAPNorthboundAlarmLevel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmLevel.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmLevel.setDescription('Level is the alarm severity. It can be one of the following: 1 - Critical 2 - Major 3 - Minor 4 - Warning 6 - Cleared ')
iMAPNorthboundAlarmRestore = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("uncleared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestore.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestore.setDescription('Alarm clear status 1 - Cleared 2 - Uncleared')
iMAPNorthboundAlarmConfirm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acknowledged", 1), ("unacknowledged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmConfirm.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmConfirm.setDescription('Alarm acknowledgement status 1 - Acknowledged 2 - Unacknowledged ')
iMAPNorthboundAlarmAckTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAckTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAckTime.setDescription('Alarm acknowledgement time')
iMAPNorthboundAlarmRestoreTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestoreTime.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmRestoreTime.setDescription('Alarm clearance time')
iMAPNorthboundAlarmOperator = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmOperator.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmOperator.setDescription('Operator, who performs the acknowledgement and clearance operations.')
iMAPNorthboundAlarmParas1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas1.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas1.setDescription('Reserved field 1')
iMAPNorthboundAlarmParas2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas2.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas2.setDescription('Reserved field 2')
iMAPNorthboundAlarmParas3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas3.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas3.setDescription('Reserved field 3')
iMAPNorthboundAlarmParas4 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas4.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas4.setDescription('Reserved field 4')
iMAPNorthboundAlarmParas5 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas5.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas5.setDescription('Reserved field 5')
iMAPNorthboundAlarmParas6 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas6.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas6.setDescription('Reserved field 6')
iMAPNorthboundAlarmParas7 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas7.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas7.setDescription('Reserved field 7')
iMAPNorthboundAlarmParas8 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas8.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas8.setDescription('Reserved field 8')
iMAPNorthboundAlarmParas9 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas9.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas9.setDescription('Reserved field 9')
iMAPNorthboundAlarmParas10 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas10.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmParas10.setDescription('Reserved field 10')
iMAPNorthboundAlarmExtendInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendInfo.setDescription('Extended information (max: 250 characters) Alarm extended information, including the location information of the alarm.')
iMAPNorthboundAlarmProbablecause = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 28), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProbablecause.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProbablecause.setDescription('Probable cause of the alarm (max: 250 characters)')
iMAPNorthboundAlarmProposedrepairactions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmProposedrepairactions.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmProposedrepairactions.setDescription('Alarm repair recommendations (max: 250 characters)')
iMAPNorthboundAlarmSpecificproblems = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmSpecificproblems.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmSpecificproblems.setDescription('Alarm detailed reasons (max: 250 characters)')
iMAPNorthboundAlarmExtendProductItem1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem1.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem1.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 32), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem2.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem2.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 33), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem3.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem3.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem4 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 34), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem4.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem4.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem5 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 35), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem5.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem5.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem6 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem6.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem6.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem7 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem7.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem7.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem8 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem8.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem8.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem9 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem9.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem9.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem10 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 40), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem10.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem10.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem11 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 41), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem11.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem11.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem12 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 42), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem12.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem12.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem13 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 43), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem13.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem13.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem14 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 44), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem14.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem14.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmExtendProductItem15 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 45), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem15.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmExtendProductItem15.setDescription('This is one of 15 extensible alarm fields to be reported as part of alarm information. The fields to be reported are decided by the configuration for the SNMP agent in file snmpsvc.xml. For string type parameters the maximum supported length is 250 characters. If string is longer it will be truncated to 250 characters.')
iMAPNorthboundAlarmClearOperator = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 46), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearOperator.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearOperator.setDescription('The operator who cleared this alarm.')
iMAPNorthboundAlarmObjectInstanceType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 47), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmObjectInstanceType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmObjectInstanceType.setDescription('Object instance type for the raised alarm')
iMAPNorthboundAlarmClearCategory = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 48), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearCategory.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearCategory.setDescription('This specifies the Clear Category of alarms. 0 1 - ADAC (Automatically Detected Automcatically Cleared) 2 - ADMC (Automatically Detected Manually Cleared)')
iMAPNorthboundAlarmClearType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 49), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearType.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClearType.setDescription('This specifies the Clear Type of alarms. 0 1 - Normal Clear 2 - Restore Clear 3 - Manual Clear 4 - Configure Clear 5 - Co-relation Clear')
iMAPNorthboundAlarmServiceAffectFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 50), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmServiceAffectFlag.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmServiceAffectFlag.setDescription('Affecting service flag for the alarm')
iMAPNorthboundAlarmAdditionalInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3, 51), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAdditionalInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAdditionalInfo.setDescription('Additional Information regarding the alarm')
iMAPNorthboundFaultAcknowledge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 4))
iMAPNorthboundAlarmAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 4, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmAcknowledge.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmAcknowledge.setDescription(' Give serial number(s) of alarms to be acknowledged. Multiple serial numbers are separated by comma(,). Alarms serial number(s) are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be acknowledged. This also contains invalid Alarm serial number(s). If all alarms are successfully acknowledged then output is blank.')
iMAPNorthboundFaultUnAcknowledge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 5))
iMAPNorthboundAlarmUnAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 5, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmUnAcknowledge.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmUnAcknowledge.setDescription(' Give serial number(s) of alarms to be unacknowledged. Multiple serial numbers are separated by comma(,). Alarms serial number(s) are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be unacknowledged. This also contains invalid Alarm serial number(s). If all alarms are successfully unacknowledged then output is blank.')
iMAPNorthboundFaultClear = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 6))
iMAPNorthboundAlarmClear = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 6, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iMAPNorthboundAlarmClear.setStatus('mandatory')
if mibBuilder.loadTexts: iMAPNorthboundAlarmClear.setDescription(' Give serial number(s) of alarms to be cleared. Multiple serial numbers are separated by comma(,). Alarms serial number(s)are of type unsigned long and incompatible types are automatically considered as invalid serial number(s). Get attempt on this node will result in error. Output: Serial number(s) of alarms which could not be cleared. This also contains invalid Alarm serial number(s). If all alarms are successfully cleared then output is blank.')
iMAPConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3))
iMAPGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1))
currentObjectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1, 1))
currentNotificationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 1, 2))
iMAPCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 2))
basicCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 3, 2, 1))
iMAPNorthboundFaultAlarmReportNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,1)).setObjects(("I2000-V1", "iMAPNorthboundAlarmCSN"), ("I2000-V1", "iMAPNorthboundAlarmCategory"), ("I2000-V1", "iMAPNorthboundAlarmOccurTime"), ("I2000-V1", "iMAPNorthboundAlarmMOName"), ("I2000-V1", "iMAPNorthboundAlarmProductID"), ("I2000-V1", "iMAPNorthboundAlarmNEType"), ("I2000-V1", "iMAPNorthboundAlarmNEDevID"), ("I2000-V1", "iMAPNorthboundAlarmDevCsn"), ("I2000-V1", "iMAPNorthboundAlarmID"), ("I2000-V1", "iMAPNorthboundAlarmType"), ("I2000-V1", "iMAPNorthboundAlarmLevel"), ("I2000-V1", "iMAPNorthboundAlarmRestore"), ("I2000-V1", "iMAPNorthboundAlarmConfirm"), ("I2000-V1", "iMAPNorthboundAlarmAckTime"), ("I2000-V1", "iMAPNorthboundAlarmRestoreTime"), ("I2000-V1", "iMAPNorthboundAlarmOperator"), ("I2000-V1", "iMAPNorthboundAlarmParas1"), ("I2000-V1", "iMAPNorthboundAlarmParas2"), ("I2000-V1", "iMAPNorthboundAlarmParas3"), ("I2000-V1", "iMAPNorthboundAlarmParas4"), ("I2000-V1", "iMAPNorthboundAlarmParas5"), ("I2000-V1", "iMAPNorthboundAlarmParas6"), ("I2000-V1", "iMAPNorthboundAlarmParas7"), ("I2000-V1", "iMAPNorthboundAlarmParas8"), ("I2000-V1", "iMAPNorthboundAlarmParas9"), ("I2000-V1", "iMAPNorthboundAlarmParas10"), ("I2000-V1", "iMAPNorthboundAlarmExtendInfo"), ("I2000-V1", "iMAPNorthboundAlarmProbablecause"), ("I2000-V1", "iMAPNorthboundAlarmProposedrepairactions"), ("I2000-V1", "iMAPNorthboundAlarmSpecificproblems"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem1"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem2"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem3"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem4"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem5"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem6"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem7"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem8"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem9"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem10"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem11"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem12"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem13"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem14"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem15"), ("I2000-V1", "iMAPNorthboundAlarmClearOperator"), ("I2000-V1", "iMAPNorthboundAlarmAdditionalInfo"), ("I2000-V1", "iMAPNorthboundAlarmClearType"), ("I2000-V1", "iMAPNorthboundAlarmClearCategory"), ("I2000-V1", "iMAPNorthboundAlarmServiceAffectFlag"), ("I2000-V1", "iMAPNorthboundAlarmObjectInstanceType"))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmReportNotificationType.setDescription('The iMAP system sends real-time alarms to the NMS using this trap. If an alarm occurs to an NE or the iMAP, the iMAP sends the alarm trap to the NMS.')
iMAPNorthboundFaultAlarmQueryBeginNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,2))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryBeginNotificationType.setDescription('The iMAP notifies the NMS of the start of the query. After the NMS receives the active alarm query start trap, the query starts. The trap is triggered by NMS for alarm query.')
iMAPNorthboundFaultAlarmQueryNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,3)).setObjects(("I2000-V1", "iMAPNorthboundAlarmCSN"), ("I2000-V1", "iMAPNorthboundAlarmCategory"), ("I2000-V1", "iMAPNorthboundAlarmOccurTime"), ("I2000-V1", "iMAPNorthboundAlarmMOName"), ("I2000-V1", "iMAPNorthboundAlarmProductID"), ("I2000-V1", "iMAPNorthboundAlarmNEType"), ("I2000-V1", "iMAPNorthboundAlarmNEDevID"), ("I2000-V1", "iMAPNorthboundAlarmDevCsn"), ("I2000-V1", "iMAPNorthboundAlarmID"), ("I2000-V1", "iMAPNorthboundAlarmType"), ("I2000-V1", "iMAPNorthboundAlarmLevel"), ("I2000-V1", "iMAPNorthboundAlarmRestore"), ("I2000-V1", "iMAPNorthboundAlarmConfirm"), ("I2000-V1", "iMAPNorthboundAlarmAckTime"), ("I2000-V1", "iMAPNorthboundAlarmRestoreTime"), ("I2000-V1", "iMAPNorthboundAlarmOperator"), ("I2000-V1", "iMAPNorthboundAlarmParas1"), ("I2000-V1", "iMAPNorthboundAlarmParas2"), ("I2000-V1", "iMAPNorthboundAlarmParas3"), ("I2000-V1", "iMAPNorthboundAlarmParas4"), ("I2000-V1", "iMAPNorthboundAlarmParas5"), ("I2000-V1", "iMAPNorthboundAlarmParas6"), ("I2000-V1", "iMAPNorthboundAlarmParas7"), ("I2000-V1", "iMAPNorthboundAlarmParas8"), ("I2000-V1", "iMAPNorthboundAlarmParas9"), ("I2000-V1", "iMAPNorthboundAlarmParas10"), ("I2000-V1", "iMAPNorthboundAlarmExtendInfo"), ("I2000-V1", "iMAPNorthboundAlarmProbablecause"), ("I2000-V1", "iMAPNorthboundAlarmProposedrepairactions"), ("I2000-V1", "iMAPNorthboundAlarmSpecificproblems"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem1"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem2"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem3"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem4"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem5"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem6"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem7"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem8"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem9"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem10"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem11"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem12"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem13"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem14"), ("I2000-V1", "iMAPNorthboundAlarmExtendProductItem15"), ("I2000-V1", "iMAPNorthboundAlarmClearOperator"), ("I2000-V1", "iMAPNorthboundAlarmAdditionalInfo"), ("I2000-V1", "iMAPNorthboundAlarmServiceAffectFlag"), ("I2000-V1", "iMAPNorthboundAlarmClearType"), ("I2000-V1", "iMAPNorthboundAlarmClearCategory"), ("I2000-V1", "iMAPNorthboundAlarmObjectInstanceType"))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryNotificationType.setDescription(' The iMAP system sends queried alarms to the NMS using this trap.')
iMAPNorthboundFaultAlarmQueryEndNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 4, 3, 3) + (0,4))
if mibBuilder.loadTexts: iMAPNorthboundFaultAlarmQueryEndNotificationType.setDescription(' The iMAP notifies the NMS of the stop of the query. After the NMS receives the active alarm query stop trap, it indicates that the query ends. The NMS triggers the stop of the query, or the query ends after the NMS receives the active alarms.')
iMAPNorthboundHeartbeatNotificationType = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 2, 1, 2, 1, 1, 1) + (0,5)).setObjects(("I2000-V1", "iMAPNorthboundHeartbeatSystemLabel"), ("I2000-V1", "iMAPNorthboundHeartbeatPeriod"), ("I2000-V1", "iMAPNorthboundHeartbeatTimeStamp"))
if mibBuilder.loadTexts: iMAPNorthboundHeartbeatNotificationType.setDescription(' The iMAP sends the heartbeat notification trap to the NMS regularly each period. If the NMS receives the trap, the connection between the NMS and the iMAP works. If not, the connection fails.')
mibBuilder.exportSymbols("I2000-V1", iMAPNorthboundAlarmParas8=iMAPNorthboundAlarmParas8, iMAPNorthboundHeartbeatNotificationType=iMAPNorthboundHeartbeatNotificationType, iMAPNorthboundCommuLinkMonitor=iMAPNorthboundCommuLinkMonitor, iMAPNorthboundAlarmParas1=iMAPNorthboundAlarmParas1, iMAPNorthboundHeartbeatPeriod=iMAPNorthboundHeartbeatPeriod, iMAPNorthboundAlarmExtendProductItem11=iMAPNorthboundAlarmExtendProductItem11, iMAPNorthboundHeartbeatSvc=iMAPNorthboundHeartbeatSvc, iMAPNorthboundAlarmCategory=iMAPNorthboundAlarmCategory, iMAPNorthboundAlarmExtendProductItem4=iMAPNorthboundAlarmExtendProductItem4, iMAPNorthboundAlarmClearOperator=iMAPNorthboundAlarmClearOperator, iMAPNorthboundAlarmRestoreTime=iMAPNorthboundAlarmRestoreTime, iMAPNorthboundEventMgmt=iMAPNorthboundEventMgmt, iMAPNorthboundFaultAcknowledge=iMAPNorthboundFaultAcknowledge, iMAPCompliances=iMAPCompliances, iMAPNorthboundCommon=iMAPNorthboundCommon, iMAPNorthboundAlarmExtendProductItem3=iMAPNorthboundAlarmExtendProductItem3, iMAPNorthboundAlarmExtendProductItem13=iMAPNorthboundAlarmExtendProductItem13, iMAPNorthboundFaultAlarmNotification=iMAPNorthboundFaultAlarmNotification, iMAPNorthboundAlarmExtendProductItem8=iMAPNorthboundAlarmExtendProductItem8, iMAPNorthboundAlarmClearType=iMAPNorthboundAlarmClearType, iMAPNorthboundFaultNotification=iMAPNorthboundFaultNotification, iMAPNorthboundAlarmType=iMAPNorthboundAlarmType, iMAPNorthboundAlarmExtendProductItem7=iMAPNorthboundAlarmExtendProductItem7, iMAPNorthboundHeartbeatNotification=iMAPNorthboundHeartbeatNotification, iMAPNorthboundAlarmExtendProductItem2=iMAPNorthboundAlarmExtendProductItem2, iMAPConformance=iMAPConformance, iMAPNorthboundAlarmParas7=iMAPNorthboundAlarmParas7, iMAPNorthboundAlarmProposedrepairactions=iMAPNorthboundAlarmProposedrepairactions, iMAPNorthboundAlarmExtendProductItem15=iMAPNorthboundAlarmExtendProductItem15, iMAPNorthboundAlarmExtendProductItem9=iMAPNorthboundAlarmExtendProductItem9, iMAPNorthboundAlarmExtendProductItem6=iMAPNorthboundAlarmExtendProductItem6, iMAPNorthboundAlarmObjectInstanceType=iMAPNorthboundAlarmObjectInstanceType, iMAPNorthboundAlarmRestore=iMAPNorthboundAlarmRestore, iMAPNorthboundAlarmParas4=iMAPNorthboundAlarmParas4, iMAPNorthboundAlarmCSN=iMAPNorthboundAlarmCSN, iMAPNorthboundHeartbeatSystemLabel=iMAPNorthboundHeartbeatSystemLabel, currentNotificationGroup=currentNotificationGroup, iMAPNorthboundAlarmParas3=iMAPNorthboundAlarmParas3, iMAPNorthboundFaultClear=iMAPNorthboundFaultClear, iMAPNorthboundAlarmExtendProductItem1=iMAPNorthboundAlarmExtendProductItem1, iMAPNetManagement=iMAPNetManagement, iMAPNorthboundAlarmOccurTime=iMAPNorthboundAlarmOccurTime, iMAP=iMAP, iMAPNorthboundAlarmNEDevID=iMAPNorthboundAlarmNEDevID, iMAPNorthboundFaultAlarmReportNotificationType=iMAPNorthboundFaultAlarmReportNotificationType, iMAPNorthboundAlarmServiceAffectFlag=iMAPNorthboundAlarmServiceAffectFlag, currentObjectGroup=currentObjectGroup, iMAPNorthboundAlarmParas2=iMAPNorthboundAlarmParas2, iMAPNorthboundAlarmProductID=iMAPNorthboundAlarmProductID, iMAPNorthboundAlarmDevCsn=iMAPNorthboundAlarmDevCsn, iMAPNorthboundNotificationReport=iMAPNorthboundNotificationReport, iMAPGroups=iMAPGroups, iMAPNorthboundFaultQuery=iMAPNorthboundFaultQuery, iMAPNorthboundFaultAlarmNotificationV2=iMAPNorthboundFaultAlarmNotificationV2, iMAPNorthboundAlarmNEType=iMAPNorthboundAlarmNEType, iMAPNorthboundAlarmAckTime=iMAPNorthboundAlarmAckTime, iMAPNorthboundAlarmOperator=iMAPNorthboundAlarmOperator, iMAPNorthboundAlarmParas10=iMAPNorthboundAlarmParas10, iMAPNorthboundHeartbeatSvcReportInterval=iMAPNorthboundHeartbeatSvcReportInterval, iMAPNorthboundAlarmParas9=iMAPNorthboundAlarmParas9, iMAPNorthboundAlarmExtendProductItem12=iMAPNorthboundAlarmExtendProductItem12, iMAPNorthboundAlarmConfirm=iMAPNorthboundAlarmConfirm, iMAPNorthboundAlarmExtendProductItem14=iMAPNorthboundAlarmExtendProductItem14, iMAPNorthbound=iMAPNorthbound, iMAPNorthboundAlarmQuery=iMAPNorthboundAlarmQuery, iMAPNorthboundFaultAlarmQueryEndNotificationType=iMAPNorthboundFaultAlarmQueryEndNotificationType, iMAPNorthboundAlarmParas6=iMAPNorthboundAlarmParas6, iMAPNorthboundAlarmClearCategory=iMAPNorthboundAlarmClearCategory, iMAPNorthboundFaultAlarmQueryNotificationType=iMAPNorthboundFaultAlarmQueryNotificationType, iMAPNorthboundAlarmProbablecause=iMAPNorthboundAlarmProbablecause, iMAPNorthboundHeartbeatTimeStamp=iMAPNorthboundHeartbeatTimeStamp, iMAPNorthboundAlarmUnAcknowledge=iMAPNorthboundAlarmUnAcknowledge, iMAPNorthboundAlarmAcknowledge=iMAPNorthboundAlarmAcknowledge, iMAPNorthboundAlarmAdditionalInfo=iMAPNorthboundAlarmAdditionalInfo, iMAPNorthboundFaultUnAcknowledge=iMAPNorthboundFaultUnAcknowledge, basicCompliance=basicCompliance, iMAPNorthboundAlarmClear=iMAPNorthboundAlarmClear, iMAPNorthboundAlarmExtendInfo=iMAPNorthboundAlarmExtendInfo, iMAPNorthboundAlarmParas5=iMAPNorthboundAlarmParas5, iMAPNorthboundHeartbeatNotificationV2=iMAPNorthboundHeartbeatNotificationV2, iMAPNorthboundAlarmID=iMAPNorthboundAlarmID, iMAPNorthboundAlarmLevel=iMAPNorthboundAlarmLevel, iMAPNorthboundAlarmExtendProductItem10=iMAPNorthboundAlarmExtendProductItem10, products=products, iMAPNorthboundAlarmExtendProductItem5=iMAPNorthboundAlarmExtendProductItem5, iMAPNorthboundFaultAlarmQueryBeginNotificationType=iMAPNorthboundFaultAlarmQueryBeginNotificationType, iMAPNorthboundNotificationCommon=iMAPNorthboundNotificationCommon, iMAPNorthboundFault=iMAPNorthboundFault, iMAPNorthboundAlarmSpecificproblems=iMAPNorthboundAlarmSpecificproblems, iMAPNorthboundAlarmMOName=iMAPNorthboundAlarmMOName)
