#
# PySNMP MIB module PROXY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PROXY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:42:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, TimeTicks, Counter32, MibIdentifier, ModuleIdentity, IpAddress, Bits, Counter64, NotificationType, experimental, Integer32, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "TimeTicks", "Counter32", "MibIdentifier", "ModuleIdentity", "IpAddress", "Bits", "Counter64", "NotificationType", "experimental", "Integer32", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nsfnet = MibIdentifier((1, 3, 6, 1, 3, 25))
proxy = ModuleIdentity((1, 3, 6, 1, 3, 25, 17))
proxy.setRevisions(('1998-08-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: proxy.setRevisionsDescriptions(('Inital revision.',))
if mibBuilder.loadTexts: proxy.setLastUpdated('9809010000Z')
if mibBuilder.loadTexts: proxy.setOrganization('National Laboratory for Applied Network Research')
if mibBuilder.loadTexts: proxy.setContactInfo(' Glenn Chisholm Postal: National Centre for Atmospheric Research (NCAR) Room 36, SCD PO Box 3000 Boulder, Colorado 80307 US Tel: +1 303 497 1289 Fax: +1 303 497 1818 E-mail: glenn@ircache.net')
if mibBuilder.loadTexts: proxy.setDescription('Proxy MIB defined for the generic management of proxy devices. See http://www.ircache.net/Cache/cache-snmp/.')
proxySystem = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 1))
proxyConfig = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 2))
proxyPerf = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 3))
proxyMemUsage = MibScalar((1, 3, 6, 1, 3, 25, 17, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyMemUsage.setStatus('current')
if mibBuilder.loadTexts: proxyMemUsage.setDescription('The memory in use by the proxy independant of the support processes on the system running the proxy')
proxyStorage = MibScalar((1, 3, 6, 1, 3, 25, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyStorage.setStatus('current')
if mibBuilder.loadTexts: proxyStorage.setDescription('The quantity of storage in use by the proxy in KB. This value can be zero if there is no caching occuring.')
proxyCpuUsage = MibScalar((1, 3, 6, 1, 3, 25, 17, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyCpuUsage.setStatus('current')
if mibBuilder.loadTexts: proxyCpuUsage.setDescription('The amount of CPU consumed over the life of the process in seconds.')
proxyUpTime = MibScalar((1, 3, 6, 1, 3, 25, 17, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyUpTime.setStatus('current')
if mibBuilder.loadTexts: proxyUpTime.setDescription('The amount of time the proxy has been running, in TimeTicks.')
proxyAdmin = MibScalar((1, 3, 6, 1, 3, 25, 17, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyAdmin.setStatus('current')
if mibBuilder.loadTexts: proxyAdmin.setDescription('The contact responsible for the administration of the proxy. Usually a name and email address.')
proxySoftware = MibScalar((1, 3, 6, 1, 3, 25, 17, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxySoftware.setStatus('current')
if mibBuilder.loadTexts: proxySoftware.setDescription('Name of the proxy sofware.')
proxyVersion = MibScalar((1, 3, 6, 1, 3, 25, 17, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyVersion.setStatus('current')
if mibBuilder.loadTexts: proxyVersion.setDescription('Version of the proxy software.')
proxySysPerf = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 3, 1))
proxyProtoPerf = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 3, 2))
proxyCpuLoad = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyCpuLoad.setStatus('current')
if mibBuilder.loadTexts: proxyCpuLoad.setDescription('The current percentage of the CPU being consumed by the proxy proccess at this time.')
proxyNumObjects = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyNumObjects.setStatus('current')
if mibBuilder.loadTexts: proxyNumObjects.setDescription('The number of objects currently held by the proxy.')
proxyProtoClient = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 3, 2, 1))
proxyProtoServer = MibIdentifier((1, 3, 6, 1, 3, 25, 17, 3, 2, 2))
proxyClientHttpRequests = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyClientHttpRequests.setStatus('current')
if mibBuilder.loadTexts: proxyClientHttpRequests.setDescription('The number of HTTP requests recieved from clients.')
proxyClientHttpHits = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyClientHttpHits.setStatus('current')
if mibBuilder.loadTexts: proxyClientHttpHits.setDescription('The number of HTTP hits that the proxy clients have produced.')
proxyClientHttpErrors = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyClientHttpErrors.setStatus('current')
if mibBuilder.loadTexts: proxyClientHttpErrors.setDescription('The number of HTTP errors caused by client connections.')
proxyClientHttpInKbs = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyClientHttpInKbs.setStatus('current')
if mibBuilder.loadTexts: proxyClientHttpInKbs.setDescription('The number of kilobits recieved from the clients by the proxy.')
proxyClientHttpOutKbs = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyClientHttpOutKbs.setStatus('current')
if mibBuilder.loadTexts: proxyClientHttpOutKbs.setDescription('The number of kilobits delivered to clients from the proxy.')
proxyServerHttpRequests = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyServerHttpRequests.setStatus('current')
if mibBuilder.loadTexts: proxyServerHttpRequests.setDescription('The number of HTTP requests that the proxy has issued.')
proxyServerHttpErrors = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyServerHttpErrors.setStatus('current')
if mibBuilder.loadTexts: proxyServerHttpErrors.setDescription('The number of HTTP errors while fetching objects.')
proxyServerHttpInKbs = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyServerHttpInKbs.setStatus('current')
if mibBuilder.loadTexts: proxyServerHttpInKbs.setDescription('The number of Kbs recieved by the proxy from remote servers.')
proxyServerHttpOutKbs = MibScalar((1, 3, 6, 1, 3, 25, 17, 3, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyServerHttpOutKbs.setStatus('current')
if mibBuilder.loadTexts: proxyServerHttpOutKbs.setDescription('The number of kbs transmitted by the proxy to remote servers.')
proxyMedianSvcTable = MibTable((1, 3, 6, 1, 3, 25, 17, 3, 3), )
if mibBuilder.loadTexts: proxyMedianSvcTable.setStatus('current')
if mibBuilder.loadTexts: proxyMedianSvcTable.setDescription('The table of median statistics serviced by the proxy indexed by the median time.')
proxyMedianSvcEntry = MibTableRow((1, 3, 6, 1, 3, 25, 17, 3, 3, 1), ).setIndexNames((0, "PROXY-MIB", "proxyMedianTime"))
if mibBuilder.loadTexts: proxyMedianSvcEntry.setStatus('current')
if mibBuilder.loadTexts: proxyMedianSvcEntry.setDescription('An entry in the proxyMedianSvcTable.')
proxyMedianTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyMedianTime.setStatus('current')
if mibBuilder.loadTexts: proxyMedianTime.setDescription('The median time used to index the table proxyMedianSvcTable.')
proxyHTTPAllSvcTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyHTTPAllSvcTime.setStatus('current')
if mibBuilder.loadTexts: proxyHTTPAllSvcTime.setDescription('The service time for all HTTP requests.')
proxyHTTPMissSvcTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyHTTPMissSvcTime.setStatus('current')
if mibBuilder.loadTexts: proxyHTTPMissSvcTime.setDescription('The service time for all HTTP misses.')
proxyHTTPHitSvcTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyHTTPHitSvcTime.setStatus('current')
if mibBuilder.loadTexts: proxyHTTPHitSvcTime.setDescription('The service time for all HTTP hits.')
proxyHTTPNhSvcTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyHTTPNhSvcTime.setStatus('current')
if mibBuilder.loadTexts: proxyHTTPNhSvcTime.setDescription('The service time for all HTTP near hits.')
proxyDnsSvcTime = MibTableColumn((1, 3, 6, 1, 3, 25, 17, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyDnsSvcTime.setStatus('current')
if mibBuilder.loadTexts: proxyDnsSvcTime.setDescription('The DNS service time.')
mibBuilder.exportSymbols("PROXY-MIB", proxyStorage=proxyStorage, proxyProtoPerf=proxyProtoPerf, proxyHTTPAllSvcTime=proxyHTTPAllSvcTime, proxyDnsSvcTime=proxyDnsSvcTime, proxyNumObjects=proxyNumObjects, PYSNMP_MODULE_ID=proxy, proxyHTTPNhSvcTime=proxyHTTPNhSvcTime, nsfnet=nsfnet, proxyMedianSvcTable=proxyMedianSvcTable, proxyServerHttpRequests=proxyServerHttpRequests, proxyProtoClient=proxyProtoClient, proxyClientHttpOutKbs=proxyClientHttpOutKbs, proxyServerHttpErrors=proxyServerHttpErrors, proxyUpTime=proxyUpTime, proxySoftware=proxySoftware, proxySystem=proxySystem, proxy=proxy, proxyClientHttpErrors=proxyClientHttpErrors, proxyServerHttpInKbs=proxyServerHttpInKbs, proxyMemUsage=proxyMemUsage, proxyMedianTime=proxyMedianTime, proxyHTTPHitSvcTime=proxyHTTPHitSvcTime, proxyMedianSvcEntry=proxyMedianSvcEntry, proxyHTTPMissSvcTime=proxyHTTPMissSvcTime, proxyVersion=proxyVersion, proxySysPerf=proxySysPerf, proxyConfig=proxyConfig, proxyProtoServer=proxyProtoServer, proxyCpuUsage=proxyCpuUsage, proxyServerHttpOutKbs=proxyServerHttpOutKbs, proxyClientHttpInKbs=proxyClientHttpInKbs, proxyAdmin=proxyAdmin, proxyClientHttpHits=proxyClientHttpHits, proxyPerf=proxyPerf, proxyCpuLoad=proxyCpuLoad, proxyClientHttpRequests=proxyClientHttpRequests)
