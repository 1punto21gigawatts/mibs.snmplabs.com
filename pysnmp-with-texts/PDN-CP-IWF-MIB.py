#
# PySNMP MIB module PDN-CP-IWF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-CP-IWF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
pdnCpIwf, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdnCpIwf")
SwitchState, = mibBuilder.importSymbols("PDN-TC", "SwitchState")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, ObjectIdentity, IpAddress, Unsigned32, ModuleIdentity, MibIdentifier, iso, Counter32, Bits, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "ObjectIdentity", "IpAddress", "Unsigned32", "ModuleIdentity", "MibIdentifier", "iso", "Counter32", "Bits", "Gauge32", "Counter64")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
pdnCpIwfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1))
pdnCpIwfMIB.setRevisions(('2004-12-02 17:00', '2004-10-07 11:00', '2004-08-30 11:00', '2004-07-15 00:00', '2004-03-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnCpIwfMIB.setRevisionsDescriptions(('Added the following objects for the POTS IAD config: o pdnPotsIadJitterBufferLength Added groundstart value to PotsSignaling. Create a new POTS port packet statistics group that includes: o pdnPotsPortPacketsSent o pdnPotsPortPacketsReceived o pdnPotsPortPacketsLost o pdnPotsPortBytesSent o pdnPotsPortBytesReceived ', 'Added the following objects for the POTS port config: pdnPotsPortActiveSoftswitch to provide status of the active softswitch on per port basis. ', 'Added the following objects for the POTS port config: o pdnPotsPortCustInfo o pdnPotsPortG729VoiceCodec o pdnPotsPortPreferredVoiceCodec o pdnPotsPortSilenceSuppresion o pdnPotsPortActualVoiceCodec o pdnPotsPortCallElapsedTime o pdnPotsPortModemDetected o pdnPotsPortEchoCanceller o pdnPotsPortLocalEndName Added the following objects for the POTS port stats: o pdnPotsPortTotalCallsFailure o pdnPotsPortInCallsReceived o pdnPotsPortInCallsAnswered o pdnPotsPortInCallsConnected o pdnPotsPortInCallsFailure o pdnPotsPortOutCallsAttempted o pdnPotsPortOutCallsAnswered o pdnPotsPortOutCallsConnected o pdnPotsPortOutCallsFailure o pdnPotsPortOutCallsDropped Added a new POTS test table: o pdnPotsPortTestTable ', 'Remove VoiceCodec g.711 and g.726 codecs Added pdnCpIwfScssPredefinedProfile object', 'Initial release.',))
if mibBuilder.loadTexts: pdnCpIwfMIB.setLastUpdated('200412021700Z')
if mibBuilder.loadTexts: pdnCpIwfMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnCpIwfMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33773 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editor Jesus Pinto')
if mibBuilder.loadTexts: pdnCpIwfMIB.setDescription('This module defines a portion of the management information base (MIB) for managing multiple Loop Emulation Service (LES) Customer Premises Interworking Functions (CP-IWF). The mib recommended by the ATM forum (af-vmoa-0145.000) lacks the ability to manage multiple CP-IWFs as required by the Paradyne DSLAM products. This enterprise mib is meant to be used in connection with RFC 2863 which defines the ifTable. ')
pdnCpIwfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 0))
pdnCpIwfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1))
pdnCpIwfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2))
pdnCpIwfConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1))
pdnCpIwfTestObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2))
pdnCpIwfStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3))
class CpIwfRegion(TextualConvention, Integer32):
    description = 'Different regions define an specific group of parameters'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("usa", 1), ("canada", 2))

class GatewayProtocol(TextualConvention, Integer32):
    description = 'Gateway protocols supported by CPIWF running on this agent'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("lescas", 1), ("voiceband", 2), ("mgcp", 3), ("sip", 4))

class HookState(TextualConvention, Integer32):
    description = 'This textual convention defines the different hook status for POTS ports.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("onhook", 1), ("offhook", 2), ("ringground", 3))

class PotsSignaling(TextualConvention, Integer32):
    description = 'This textual convention defines the possible signaling types for POTS ports. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("loopstart", 1), ("groundstart", 2))

class ControlProtocol(TextualConvention, Bits):
    description = 'This textual convention defines the control protocol capabilities of the CpIwf. Each bit position in the bitmap corresponds to an specific protocol. If the bit is 1, that protocol is supported. Bit 0 : cas (channel associated signaling) Bit 1 : eoc (embedded operation channel) Bit 2 : ccs/elcp (common signaling channel/ emulated loop control protocol) Bit 3 : Not used (Future) Bit 4 : Not used (Future) Bit 5 : Not used (Future) Bit 6 : Not used (Future) Bit 7 : Not used (Future) '
    status = 'current'
    namedValues = NamedValues(("cas", 0), ("eoc", 1), ("ccselcp", 2))

class VoiceEncoding(TextualConvention, Integer32):
    description = 'This textual convention defines the voice encoding capabilities of the POTS port. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("g711", 0), ("g726", 1), ("g729", 2))

class PdnPotsTestTypes(TextualConvention, Integer32):
    description = 'This textual convention defines the possible test types for POTS ports. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noTest", 1), ("loopback", 2), ("ringsignal", 3))

pdnCpIwfTotalNumber = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfTotalNumber.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfTotalNumber.setDescription('Indicates the total number of CpIwfs correctly configured in this system. ')
pdnCpIwfIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfIndexNext.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfIndexNext.setDescription('This object contains an appropriate value to be used for pdnCpIwfIndex when creating entries in the pdnCpIwfTable. The value 0 indicates that no unassigned entries are available. To obtain the pdnCpIwfIndexNext value for a new entry, the manager issues a management protocol retrieval operation to obtain the current value of this object. After each retrieval, the agent should modify the value to the next unassigned index. After a manager retrieves a value the agent will determine through its local policy when this index value will be made available for reuse.')
pdnCpIwfRegion = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 3), CpIwfRegion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfRegion.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfRegion.setDescription('This object permits the selection of a regional set of parameters that apply to the entire device.')
pdnCpIwfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4), )
if mibBuilder.loadTexts: pdnCpIwfTable.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfTable.setDescription('The Cp-Iwf Configuration table.')
pdnCpIwfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1), ).setIndexNames((0, "PDN-CP-IWF-MIB", "pdnCpIwfIndex"))
if mibBuilder.loadTexts: pdnCpIwfEntry.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfEntry.setDescription('An entry in the Cp-Iwf configuration table. ')
pdnCpIwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pdnCpIwfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfIndex.setDescription("This object is an arbitrary index assigned by the agent. When a client wishes to add an entry to this pdnCpIwfTable, first it must do a get to the pdnCpIwfIndexNext and use the returned value as the table's index for the new entry. ")
pdnCpIwfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfIfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfIfIndex.setDescription('This object displays the interface index from the ifTable assigned by the SNMP agent upon creation of this CPIWF.')
pdnCpIwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnCpIwfRowStatus.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfRowStatus.setDescription('rowStatus object that allows creation and deletion of CpIwfs.')
pdnCpIwfNumPotsAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfNumPotsAssigned.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfNumPotsAssigned.setDescription('This object maintains the number of pots ports currently assigned to this CpIwf. It is not required that a new created CpIwf has Pots ports assigned to it. Moreover, the default value for this object can be implementation specific, for example: - assign all 24 POTS ports to the CpIwf port upon creation. - assign a minimum number of POTS to the CpIwf port. ')
pdnCpIwfGatewayProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 5), GatewayProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnCpIwfGatewayProtocol.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfGatewayProtocol.setDescription('This is the Gateway protocol configured for this CPIWF.')
pdnCpIwfAtmBLESCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 6), ControlProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAtmBLESCapability.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAtmBLESCapability.setDescription('This object indicates whether this CP-IWF supports the ATM Forum BLES standard with CCS and ELCP and EOC.')
pdnCpIwfSscsPredefinedProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfSscsPredefinedProfile.setReference('Loop Emulation Service Using AAL2 -Rev 1 (af-vmoa-0145.001) February 2003, Page 92.')
if mibBuilder.loadTexts: pdnCpIwfSscsPredefinedProfile.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfSscsPredefinedProfile.setDescription('This object allows selection of predefined profiles for use by voice/voiceband data connections using UUI codepoints 0-15 with type 1 packets. The ATM Forum predefined profiles are specified in Annex A: ATM Forum Predefined Profiles (see reference below). Implementations are not required to support every profile. Thus, an SNMP set on this object to an unsupported profile must result in an SNMP Response with error status of badValue(3). Examples of profiles and its attributes values: <<Profile 9>> (PCM-64, 44 Octet packets, without silence): ------------------------------------------------------------------------------- UUI | Packet | Encoding | Description | | Packet | Seq.No Codepoint | Length | Format | of | M | Time | Interval Range | (octets) | Reference | Algorithm | | (ms) | (ms) ------------------------------------------------------------------------------- 0-15 44 Fig B-1/I.366.2 PCM, G.711-64, 1 5.5 5.5 Generic <<Profile 10>> (PCM-64 and ADPCM-32, 44 Octet packets, without silence): ------------------------------------------------------------------------------- UUI | Packet | Encoding | Description | | Packet | Seq.No Codepoint | Length | Format | of | M | Time | Interval Range | (octets) | Reference | Algorithm | | (ms) | (ms) ------------------------------------------------------------------------------- 0-7 44 Fig B-1/I.366.2 PCM, G.711-64, 1 5.5 5.5 Generic 7-15 44 Fig E-2/I.366.2 ADPCM, G.726-32 1 5.5 5.5 ')
pdnCpIwfJitterBufferLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfJitterBufferLength.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfJitterBufferLength.setDescription('This object allows the configuration of the jitter buffer length.')
pdnCpIwfMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5), )
if mibBuilder.loadTexts: pdnCpIwfMappingTable.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfMappingTable.setDescription("A table mapping the 'ifIndex' values of 'pdnCpIwfIfIndex' to the 'pdnCpIwfIndex' values of the corresponding CpIwf.")
pdnCpIwfMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnCpIwfMappingEntry.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfMappingEntry.setDescription('Each row describes the mapping of one ifIndex to a pdnCpIwfIndex.')
pdnCpIwfMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfMappingIndex.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfMappingIndex.setDescription("The index assigned to the Cp-Iwf's interface upon creation.")
pdnPotsPortTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6), )
if mibBuilder.loadTexts: pdnPotsPortTable.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortTable.setDescription('The Pots port Configuration table.')
pdnPotsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1), ).setIndexNames((0, "PDN-CP-IWF-MIB", "pdnPotsPortIfIndex"))
if mibBuilder.loadTexts: pdnPotsPortEntry.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortEntry.setDescription('An entry in the Pots Port configuration table.')
pdnPotsPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pdnPotsPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortIfIndex.setDescription('ifIndex value from ifTable for this POTS port.')
pdnPotsPortCpIwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortCpIwfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortCpIwfIndex.setDescription("The value of this object corresponds to a valid pdnCpIwfIndex in the pdnCpIwfTable or '0' which has the meaning of 'not-assigned'. The value 0 is expected to be used during changes on the assignment of Pots ports, that is, a Pots port initially assigned to a CpIwf port needs to be un-assigned first and then assigned to the new CpIwf Port. ")
pdnPotsPortHookStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 3), HookState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortHookStatus.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortHookStatus.setDescription('Current hook status of this POTS port.')
pdnPotsPortSignalingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 4), PotsSignaling()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortSignalingMethod.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortSignalingMethod.setDescription('Signaling method selected for this POTS port.')
pdnPotsPortTxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-24, 23))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortTxGain.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortTxGain.setDescription('This is the gain in the analog-to-digital direction (towards the uplink). ')
pdnPotsPortRxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-24, 23))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortRxGain.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortRxGain.setDescription('This is the gain in the digital-to-analog direction (towards the loop). ')
pdnPotsPortCustInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortCustInfo.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortCustInfo.setDescription('This object represents textual information about an user, typically user name and directory number. ')
pdnPotsPortG729VoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 8), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortG729VoiceCodec.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortG729VoiceCodec.setDescription('This object is used to enable or disable G.729 codec on this POTS port. ')
pdnPotsPortPreferedVoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 9), VoiceEncoding()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortPreferedVoiceCodec.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortPreferedVoiceCodec.setDescription('This object is the preferable voice encoding configured for this port. ')
pdnPotsPortPreferredPacketPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortPreferredPacketPeriod.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortPreferredPacketPeriod.setDescription('The value of this object contains the preferred packetization period in milliseconds. ')
pdnPotsPortSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 11), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortSilenceSuppression.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortSilenceSuppression.setDescription("This object allows users to enable or disable silence suppression. If the value of the object is 'enabled (1)' silence suppression will be performed for a call placed on this port if agreed via negotiation with the far end. ")
pdnPotsPortActualVoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 12), VoiceEncoding()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortActualVoiceCodec.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortActualVoiceCodec.setDescription("This object is the actual voice encoding being used on this port as determined by the device in real-time. This object may differ from the configurable 'pdnPotsPortPreferedVoiceCodec' object. ")
pdnPotsPortCallElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortCallElapsedTime.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortCallElapsedTime.setDescription('This value is the number of seconds that have elapsed since the start of the current call. If no active call is in progress on this port, this object should be zero. ')
pdnPotsPortModemDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortModemDetected.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortModemDetected.setDescription("This object displays the status of the modem/fax connected on this port. If the value of this object is 'enabled (1)' the modem or fax answer tone has been detected. Otherwise this object will return 'disabled (2)'. ")
pdnPotsPortEchoCanceller = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortEchoCanceller.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortEchoCanceller.setDescription('This object displays the current status of the echo canceller. ')
pdnPotsPortLocalEndName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortLocalEndName.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortLocalEndName.setDescription("This object contains a descriptive text identifying the local endpoint's name. ")
pdnPotsPortActiveSoftswitch = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortActiveSoftswitch.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortActiveSoftswitch.setDescription("This object displays the active selection for the Softswitch (e.g., Call Agent, Proxy Agent, etc.) for this Pots port. The possible values for this object are: primary --> Primary Softswitch is selected secondary --> Secondary Softswitch is selected none --> no softswitch is currently selected. The configuration of the primary/secondary softswitches are found in objects outside this document (e.g., pdnCpIwfIpMgcpPriAgentName, etc...) If the SNMP agent can not determine an active softswitch for this Pots port (e.g, lost communication with the Call Agent), the value of this object will be set to 'none (3)'. ")
pdnCpIwfAal2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1), )
if mibBuilder.loadTexts: pdnCpIwfAal2StatsTable.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2StatsTable.setDescription('This table is used to maintain AAL2-Customer Part Sublayer (CPS) statistics per VCC associated to each CpIwf port. An entry in this table represents the AAL2 statistics maintained for this circuit. ')
pdnCpIwfAal2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnCpIwfAal2StatsEntry.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2StatsEntry.setDescription('Contained AAL2 stats for a VCC defined on this cpIwf.')
pdnCpIwfAal2CpsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsRxPkts.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsRxPkts.setDescription('Number of CPS Received.')
pdnCpIwfAal2CpsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsTxPkts.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsTxPkts.setDescription('Number of CPS Transmitted.')
pdnCpIwfAal2CpsParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsParityErrors.setReference('Table 7 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsParityErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsParityErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=0)')
pdnCpIwfAal2CpsSeqNumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsSeqNumErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsSeqNumErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsSeqNumErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=1)')
pdnCpIwfAal2CpsOsfMismatchErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfMismatchErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfMismatchErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfMismatchErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=2)')
pdnCpIwfAal2CpsOsfErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=3)')
pdnCpIwfAal2CpsHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=4)')
pdnCpIwfAal2CpsOversizeSduErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOversizeSduErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOversizeSduErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOversizeSduErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=5)')
pdnCpIwfAal2CpsReassemblyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsReassemblyErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsReassemblyErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=6)')
pdnCpIwfAal2CpsHecOverlapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecOverlapErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecOverlapErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecOverlapErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=7)')
pdnCpIwfAal2CpsUuiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsUuiErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsUuiErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsUuiErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=8)')
pdnCpIwfAal2CpsCidErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsCidErrors.setReference('Table 6 I.363.2')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsCidErrors.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2CpsCidErrors.setDescription('Number of errors encountered as specified in Table 6/I.363.2 (errnum=9)')
pdnPotsPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2), )
if mibBuilder.loadTexts: pdnPotsPortStatsTable.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortStatsTable.setDescription('This table is used to maintain statistics per Pots port.')
pdnPotsPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnPotsPortStatsEntry.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortStatsEntry.setDescription('Contained statistics per Pots Port.')
pdnPotsPortTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCalls.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortTotalCalls.setDescription('Total Number of successfull calls performed on this POTS port.')
pdnPotsPortTotalCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCallsFailure.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortTotalCallsFailure.setDescription('Total number of calls that failed on this POTS port.')
pdnPotsPortTotalCallsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCallsDropped.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortTotalCallsDropped.setDescription('Total number of calls (in/out) that were dropped on this POTS port.')
pdnPotsPortInCallsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsReceived.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortInCallsReceived.setDescription('Total number of incoming calls received on this POTS port.')
pdnPotsPortInCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsAnswered.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortInCallsAnswered.setDescription('Total number of incoming calls answered on this POTS port.')
pdnPotsPortInCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsConnected.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortInCallsConnected.setDescription('Total number of incoming calls connected on this POTS port.')
pdnPotsPortInCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsFailure.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortInCallsFailure.setDescription('Total number of incoming calls that failed on this POTS port.')
pdnPotsPortOutCallsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsAttempted.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortOutCallsAttempted.setDescription('Total number of outgoing calls that were attempted on this POTS port.')
pdnPotsPortOutCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsAnswered.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortOutCallsAnswered.setDescription('Total number of outgoing calls that were answered on this POTS port.')
pdnPotsPortOutCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsConnected.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortOutCallsConnected.setDescription('Total number of outgoing calls that were connected on this POTS port.')
pdnPotsPortOutCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsFailure.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortOutCallsFailure.setDescription('Total number of outgoing calls that failed on this POTS port.')
pdnPotsPortPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsSent.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortPacketsSent.setDescription('Total number of packets transmitted by this POTS port.')
pdnPotsPortPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortPacketsReceived.setDescription('Total number of packets received by this POTS port.')
pdnPotsPortPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsLost.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortPacketsLost.setDescription('Total number of packets lost by this POTS port.')
pdnPotsPortBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortBytesSent.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortBytesSent.setDescription('Total number of bytes transmitted by this POTS port.')
pdnPotsPortBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortBytesReceived.setStatus('current')
if mibBuilder.loadTexts: pdnPotsPortBytesReceived.setDescription('Total number of bytes received by this POTS port.')
pdnPotsTestTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1), )
if mibBuilder.loadTexts: pdnPotsTestTable.setStatus('current')
if mibBuilder.loadTexts: pdnPotsTestTable.setDescription('The Paradyne Pots Port Interface Test Table.')
pdnPotsTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnPotsTestEntry.setStatus('current')
if mibBuilder.loadTexts: pdnPotsTestEntry.setDescription('An entry in the Paradyne POTS Interface Test Table. Only 1 test can be run at a time per POTS interface index (ifIndex). ')
pdnPotsTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 1), PdnPotsTestTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsTestType.setStatus('current')
if mibBuilder.loadTexts: pdnPotsTestType.setDescription("This object is used to specify the test type in this interface. If no test is active on this port, the agent should return the value of 'noTest (1)' ")
pdnPotsTestCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noOp", 1), ("start", 2), ("stop", 3), ("keepAlive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsTestCmd.setStatus('current')
if mibBuilder.loadTexts: pdnPotsTestCmd.setDescription("This object can be set to initiate and/or terminate the test running on this interface. If no test is 'active' on this interface, the agent should return the value of 'noOp(1)'. Only if a test is 'active' on this interface, the agent should process a 'keepAlive (4)' command. Otherwise, this command should be rejected. ")
pdnPotsTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsTestStatus.setStatus('current')
if mibBuilder.loadTexts: pdnPotsTestStatus.setDescription("This object displays the current status of this entry. If no test is running on this interface, the agent should return the value 'inactive (2)'. ")
pdnCpIwfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1))
pdnCpIwfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2))
pdnCpIwfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 1)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBCompliance = pdnCpIwfMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: pdnCpIwfMIBCompliance.setDescription('The compliance statement for SNMP entities that support LES as specified in af-vmoa-0145.000 of the ATM Forum. This compliance has been deprecated and replaced by V2 below. ')
pdnCpIwfMIBComplianceV2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 2)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfIADConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortTestGroupV2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBComplianceV2 = pdnCpIwfMIBComplianceV2.setStatus('deprecated')
if mibBuilder.loadTexts: pdnCpIwfMIBComplianceV2.setDescription('The compliance statement for SNMP entities that support LES as specified in af-vmoa-0145.000 of the ATM Forum. This compliance statement superseeds the pdnCpIwfMIBCompliance. This compliance has been deprecated and replaced by V3 below. ')
pdnCpIwfMIBComplianceV3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 3)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfIADConfigGroupV3"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortTestGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortPacketStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBComplianceV3 = pdnCpIwfMIBComplianceV3.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfMIBComplianceV3.setDescription('The compliance statement for SNMP entities that support LES as specified in af-vmoa-0145.000 of the ATM Forum. This compliance statement superseeds the pdnCpIwfMIBComplianceV2. ')
pdnCpIwfGeneralConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 1)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfTotalNumber"), ("PDN-CP-IWF-MIB", "pdnCpIwfIndexNext"), ("PDN-CP-IWF-MIB", "pdnCpIwfRegion"), ("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfGeneralConfigGroup = pdnCpIwfGeneralConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: pdnCpIwfGeneralConfigGroup.setDescription('General Configuration of CpIwf ports')
pdnCpIwfPotsPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 2)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortCpIwfIndex"), ("PDN-CP-IWF-MIB", "pdnPotsPortHookStatus"), ("PDN-CP-IWF-MIB", "pdnPotsPortSignalingMethod"), ("PDN-CP-IWF-MIB", "pdnPotsPortTxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortRxGain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortConfigGroup = pdnCpIwfPotsPortConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: pdnCpIwfPotsPortConfigGroup.setDescription('Configuration group for Pots ports This group is now deprecated by pdnCpIwfPotsPortConfigGroupV2. ')
pdnCpIwfAal2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 3)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsRxPkts"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsTxPkts"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsParityErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsSeqNumErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOsfMismatchErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOsfErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsHecErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOversizeSduErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsReassemblyErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsHecOverlapErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsUuiErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsCidErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfAal2StatsGroup = pdnCpIwfAal2StatsGroup.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfAal2StatsGroup.setDescription('Aal2 stats per CpIwf')
pdnCpIwfPotsPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 4)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortTotalCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortStatsGroup = pdnCpIwfPotsPortStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: pdnCpIwfPotsPortStatsGroup.setDescription('Pots Ports stats group')
pdnCpIwfGeneralConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 5)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfTotalNumber"), ("PDN-CP-IWF-MIB", "pdnCpIwfIndexNext"), ("PDN-CP-IWF-MIB", "pdnCpIwfRegion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfGeneralConfigGroupV2 = pdnCpIwfGeneralConfigGroupV2.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfGeneralConfigGroupV2.setDescription('Configuration of general parameters related to the CpIwf. This group superseeds the pdnCpIwfGeneralConfigGroup which was splitted in two groups.')
pdnCpIwfIADConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 6)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfIADConfigGroupV2 = pdnCpIwfIADConfigGroupV2.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfIADConfigGroupV2.setDescription('Configuration of each CpIwf interfaces in the device. This group superseeds the pdnCpIwfGeneralConfigGroup which was splitted in two groups. This group is now deprecated by pdnCpIwfPotsPortConfigGroupV3.')
pdnCpIwfPotsPortStatsGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 7)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortTotalCalls"), ("PDN-CP-IWF-MIB", "pdnPotsPortTotalCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortTotalCallsDropped"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsAnswered"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsConnected"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsAttempted"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsAnswered"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsConnected"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsLost"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortStatsGroupV2 = pdnCpIwfPotsPortStatsGroupV2.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfPotsPortStatsGroupV2.setDescription('Pots Ports stats group')
pdnCpIwfPotsPortConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 8)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortCpIwfIndex"), ("PDN-CP-IWF-MIB", "pdnPotsPortHookStatus"), ("PDN-CP-IWF-MIB", "pdnPotsPortSignalingMethod"), ("PDN-CP-IWF-MIB", "pdnPotsPortTxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortRxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortCustInfo"), ("PDN-CP-IWF-MIB", "pdnPotsPortG729VoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortPreferedVoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortPreferredPacketPeriod"), ("PDN-CP-IWF-MIB", "pdnPotsPortSilenceSuppression"), ("PDN-CP-IWF-MIB", "pdnPotsPortActualVoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortCallElapsedTime"), ("PDN-CP-IWF-MIB", "pdnPotsPortModemDetected"), ("PDN-CP-IWF-MIB", "pdnPotsPortEchoCanceller"), ("PDN-CP-IWF-MIB", "pdnPotsPortLocalEndName"), ("PDN-CP-IWF-MIB", "pdnPotsPortActiveSoftswitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortConfigGroupV2 = pdnCpIwfPotsPortConfigGroupV2.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfPotsPortConfigGroupV2.setDescription('Configuration group for Pots ports')
pdnCpIwfPotsPortTestGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 9)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsTestType"), ("PDN-CP-IWF-MIB", "pdnPotsTestCmd"), ("PDN-CP-IWF-MIB", "pdnPotsTestStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortTestGroupV2 = pdnCpIwfPotsPortTestGroupV2.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfPotsPortTestGroupV2.setDescription('Pots Ports test group')
pdnCpIwfIADConfigGroupV3 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 10)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfJitterBufferLength"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfIADConfigGroupV3 = pdnCpIwfIADConfigGroupV3.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfIADConfigGroupV3.setDescription('Configuration of each CpIwf interfaces in the device. This group superseeds the pdnCpIwfGeneralConfigGroupV2. ')
pdnCpIwfPotsPortPacketStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 11)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortPacketsSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsLost"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortPacketStatsGroup = pdnCpIwfPotsPortPacketStatsGroup.setStatus('current')
if mibBuilder.loadTexts: pdnCpIwfPotsPortPacketStatsGroup.setDescription('Pots Ports packet statistics group')
mibBuilder.exportSymbols("PDN-CP-IWF-MIB", pdnCpIwfTable=pdnCpIwfTable, pdnPotsPortCallElapsedTime=pdnPotsPortCallElapsedTime, pdnCpIwfAal2CpsRxPkts=pdnCpIwfAal2CpsRxPkts, pdnCpIwfPotsPortConfigGroup=pdnCpIwfPotsPortConfigGroup, pdnPotsPortIfIndex=pdnPotsPortIfIndex, pdnCpIwfMappingTable=pdnCpIwfMappingTable, pdnCpIwfMIB=pdnCpIwfMIB, pdnCpIwfRegion=pdnCpIwfRegion, pdnCpIwfMappingIndex=pdnCpIwfMappingIndex, pdnPotsPortEchoCanceller=pdnPotsPortEchoCanceller, pdnCpIwfAal2CpsOsfMismatchErrors=pdnCpIwfAal2CpsOsfMismatchErrors, pdnCpIwfMIBGroups=pdnCpIwfMIBGroups, pdnCpIwfPotsPortTestGroupV2=pdnCpIwfPotsPortTestGroupV2, pdnPotsPortInCallsReceived=pdnPotsPortInCallsReceived, pdnCpIwfJitterBufferLength=pdnCpIwfJitterBufferLength, pdnPotsTestEntry=pdnPotsTestEntry, pdnCpIwfAal2CpsParityErrors=pdnCpIwfAal2CpsParityErrors, pdnPotsPortBytesSent=pdnPotsPortBytesSent, pdnPotsPortLocalEndName=pdnPotsPortLocalEndName, pdnCpIwfAal2StatsGroup=pdnCpIwfAal2StatsGroup, VoiceEncoding=VoiceEncoding, PdnPotsTestTypes=PdnPotsTestTypes, CpIwfRegion=CpIwfRegion, pdnCpIwfAal2CpsReassemblyErrors=pdnCpIwfAal2CpsReassemblyErrors, pdnPotsPortStatsTable=pdnPotsPortStatsTable, pdnCpIwfAal2CpsUuiErrors=pdnCpIwfAal2CpsUuiErrors, pdnCpIwfAtmBLESCapability=pdnCpIwfAtmBLESCapability, pdnCpIwfAal2CpsHecOverlapErrors=pdnCpIwfAal2CpsHecOverlapErrors, pdnCpIwfStatsObjects=pdnCpIwfStatsObjects, pdnCpIwfMIBComplianceV2=pdnCpIwfMIBComplianceV2, pdnCpIwfIfIndex=pdnCpIwfIfIndex, pdnPotsTestStatus=pdnPotsTestStatus, pdnCpIwfTotalNumber=pdnCpIwfTotalNumber, pdnPotsPortOutCallsAnswered=pdnPotsPortOutCallsAnswered, pdnPotsPortInCallsConnected=pdnPotsPortInCallsConnected, pdnPotsPortOutCallsConnected=pdnPotsPortOutCallsConnected, pdnPotsPortHookStatus=pdnPotsPortHookStatus, pdnCpIwfPotsPortStatsGroupV2=pdnCpIwfPotsPortStatsGroupV2, pdnPotsPortTotalCallsFailure=pdnPotsPortTotalCallsFailure, pdnCpIwfConfigObjects=pdnCpIwfConfigObjects, pdnPotsPortPreferredPacketPeriod=pdnPotsPortPreferredPacketPeriod, pdnPotsPortInCallsFailure=pdnPotsPortInCallsFailure, pdnPotsPortPacketsReceived=pdnPotsPortPacketsReceived, PYSNMP_MODULE_ID=pdnCpIwfMIB, pdnPotsPortTxGain=pdnPotsPortTxGain, pdnPotsPortEntry=pdnPotsPortEntry, pdnCpIwfMIBCompliances=pdnCpIwfMIBCompliances, pdnCpIwfAal2CpsTxPkts=pdnCpIwfAal2CpsTxPkts, pdnPotsTestType=pdnPotsTestType, pdnPotsPortActualVoiceCodec=pdnPotsPortActualVoiceCodec, pdnPotsPortBytesReceived=pdnPotsPortBytesReceived, HookState=HookState, pdnPotsPortRxGain=pdnPotsPortRxGain, pdnCpIwfPotsPortPacketStatsGroup=pdnCpIwfPotsPortPacketStatsGroup, pdnCpIwfPotsPortConfigGroupV2=pdnCpIwfPotsPortConfigGroupV2, pdnPotsPortPacketsLost=pdnPotsPortPacketsLost, pdnPotsPortCustInfo=pdnPotsPortCustInfo, pdnPotsPortPreferedVoiceCodec=pdnPotsPortPreferedVoiceCodec, pdnPotsPortOutCallsFailure=pdnPotsPortOutCallsFailure, pdnCpIwfMappingEntry=pdnCpIwfMappingEntry, pdnCpIwfGeneralConfigGroup=pdnCpIwfGeneralConfigGroup, pdnPotsTestCmd=pdnPotsTestCmd, GatewayProtocol=GatewayProtocol, pdnCpIwfIADConfigGroupV2=pdnCpIwfIADConfigGroupV2, pdnCpIwfAal2CpsOsfErrors=pdnCpIwfAal2CpsOsfErrors, pdnCpIwfNotifications=pdnCpIwfNotifications, ControlProtocol=ControlProtocol, pdnCpIwfIndex=pdnCpIwfIndex, pdnCpIwfAal2CpsSeqNumErrors=pdnCpIwfAal2CpsSeqNumErrors, pdnCpIwfAal2CpsCidErrors=pdnCpIwfAal2CpsCidErrors, pdnPotsPortStatsEntry=pdnPotsPortStatsEntry, pdnCpIwfEntry=pdnCpIwfEntry, pdnCpIwfMIBComplianceV3=pdnCpIwfMIBComplianceV3, pdnPotsPortPacketsSent=pdnPotsPortPacketsSent, pdnPotsPortTotalCalls=pdnPotsPortTotalCalls, pdnCpIwfNumPotsAssigned=pdnCpIwfNumPotsAssigned, pdnCpIwfIndexNext=pdnCpIwfIndexNext, pdnPotsPortCpIwfIndex=pdnPotsPortCpIwfIndex, pdnPotsPortSignalingMethod=pdnPotsPortSignalingMethod, pdnPotsTestTable=pdnPotsTestTable, pdnCpIwfAal2StatsTable=pdnCpIwfAal2StatsTable, pdnPotsPortModemDetected=pdnPotsPortModemDetected, pdnCpIwfAal2CpsOversizeSduErrors=pdnCpIwfAal2CpsOversizeSduErrors, pdnCpIwfMIBCompliance=pdnCpIwfMIBCompliance, pdnPotsPortOutCallsAttempted=pdnPotsPortOutCallsAttempted, pdnCpIwfGatewayProtocol=pdnCpIwfGatewayProtocol, PotsSignaling=PotsSignaling, pdnCpIwfPotsPortStatsGroup=pdnCpIwfPotsPortStatsGroup, pdnPotsPortActiveSoftswitch=pdnPotsPortActiveSoftswitch, pdnCpIwfGeneralConfigGroupV2=pdnCpIwfGeneralConfigGroupV2, pdnCpIwfRowStatus=pdnCpIwfRowStatus, pdnCpIwfAal2CpsHecErrors=pdnCpIwfAal2CpsHecErrors, pdnCpIwfMIBObjects=pdnCpIwfMIBObjects, pdnPotsPortTable=pdnPotsPortTable, pdnCpIwfMIBConformance=pdnCpIwfMIBConformance, pdnPotsPortG729VoiceCodec=pdnPotsPortG729VoiceCodec, pdnCpIwfIADConfigGroupV3=pdnCpIwfIADConfigGroupV3, pdnCpIwfSscsPredefinedProfile=pdnCpIwfSscsPredefinedProfile, pdnCpIwfTestObjects=pdnCpIwfTestObjects, pdnCpIwfAal2StatsEntry=pdnCpIwfAal2StatsEntry, pdnPotsPortTotalCallsDropped=pdnPotsPortTotalCallsDropped, pdnPotsPortSilenceSuppression=pdnPotsPortSilenceSuppression, pdnPotsPortInCallsAnswered=pdnPotsPortInCallsAnswered)
