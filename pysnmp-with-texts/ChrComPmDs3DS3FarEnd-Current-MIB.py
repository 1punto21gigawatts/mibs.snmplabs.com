#
# PySNMP MIB module ChrComPmDs3DS3FarEnd-Current-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmDs3DS3FarEnd-Current-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:35:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmDs3, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmDs3")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Unsigned32, ObjectIdentity, NotificationType, TimeTicks, Bits, IpAddress, MibIdentifier, ModuleIdentity, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Unsigned32", "ObjectIdentity", "NotificationType", "TimeTicks", "Bits", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
chrComPmDs3DS3FarEnd_CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13), ).setLabel("chrComPmDs3DS3FarEnd-CurrentTable")
if mibBuilder.loadTexts: chrComPmDs3DS3FarEnd_CurrentTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3DS3FarEnd_CurrentTable.setDescription('')
chrComPmDs3DS3FarEnd_CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1), ).setLabel("chrComPmDs3DS3FarEnd-CurrentEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"))
if mibBuilder.loadTexts: chrComPmDs3DS3FarEnd_CurrentEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3DS3FarEnd_CurrentEntry.setDescription('')
chrComPmDs3SuspectedInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3SuspectedInterval.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3SuspectedInterval.setDescription('')
chrComPmDs3ElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3ElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3ElapsedTime.setDescription('')
chrComPmDs3SuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3SuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3SuppressedIntrvls.setDescription('')
chrComPmDs3CCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3CCV.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3CCV.setDescription('')
chrComPmDs3CES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3CES.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3CES.setDescription('')
chrComPmDs3CSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3CSES.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3CSES.setDescription('')
chrComPmDs3SAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3SAS.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3SAS.setDescription('')
chrComPmDs3UASCP = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3UASCP.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3UASCP.setDescription('')
chrComPmDs3ESPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmDs3ESPLCP.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3ESPLCP.setDescription('')
chrComPmDs3ThresholdProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmDs3ThresholdProfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3ThresholdProfIndex.setDescription('')
chrComPmDs3ResetPmCountersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 3, 13, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmDs3ResetPmCountersAction.setStatus('current')
if mibBuilder.loadTexts: chrComPmDs3ResetPmCountersAction.setDescription('')
mibBuilder.exportSymbols("ChrComPmDs3DS3FarEnd-Current-MIB", chrComPmDs3ESPLCP=chrComPmDs3ESPLCP, chrComPmDs3ThresholdProfIndex=chrComPmDs3ThresholdProfIndex, chrComPmDs3ElapsedTime=chrComPmDs3ElapsedTime, chrComPmDs3SAS=chrComPmDs3SAS, chrComPmDs3CSES=chrComPmDs3CSES, chrComPmDs3CCV=chrComPmDs3CCV, chrComPmDs3DS3FarEnd_CurrentEntry=chrComPmDs3DS3FarEnd_CurrentEntry, chrComPmDs3UASCP=chrComPmDs3UASCP, chrComPmDs3ResetPmCountersAction=chrComPmDs3ResetPmCountersAction, chrComPmDs3SuppressedIntrvls=chrComPmDs3SuppressedIntrvls, chrComPmDs3DS3FarEnd_CurrentTable=chrComPmDs3DS3FarEnd_CurrentTable, chrComPmDs3SuspectedInterval=chrComPmDs3SuspectedInterval, chrComPmDs3CES=chrComPmDs3CES)
