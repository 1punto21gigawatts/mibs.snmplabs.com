#
# PySNMP MIB module ZYXEL-CLUSTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-CLUSTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, Unsigned32, Counter64, Gauge32, Integer32, Bits, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Unsigned32", "Counter64", "Gauge32", "Integer32", "Bits", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "NotificationType", "ModuleIdentity")
MacAddress, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention", "RowStatus")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelCluster = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14))
if mibBuilder.loadTexts: zyxelCluster.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelCluster.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelCluster.setContactInfo('')
if mibBuilder.loadTexts: zyxelCluster.setDescription('The subtree for cluster')
zyxelClusterSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1))
zyxelClusterStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2))
zyxelClusterManager = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1))
zyClusterManagerMaxNumberOfManagers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterManagerMaxNumberOfManagers.setStatus('current')
if mibBuilder.loadTexts: zyClusterManagerMaxNumberOfManagers.setDescription('The maximum number of cluster managers that can be created.')
zyxelClusterManagerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 2), )
if mibBuilder.loadTexts: zyxelClusterManagerTable.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterManagerTable.setDescription('The table contains cluster manager configuration.')
zyxelClusterManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 2, 1), ).setIndexNames((0, "ZYXEL-CLUSTER-MIB", "zyClusterManagerVid"))
if mibBuilder.loadTexts: zyxelClusterManagerEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterManagerEntry.setDescription('An entry contains cluster manager configuration. ')
zyClusterManagerVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyClusterManagerVid.setStatus('current')
if mibBuilder.loadTexts: zyClusterManagerVid.setDescription('This is the VLAN ID and is only applicable if the switch is set to 802.1Q VLAN. All switches must be directly connected and in the same VLAN group to belong to the same cluster.')
zyClusterManagerName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyClusterManagerName.setStatus('current')
if mibBuilder.loadTexts: zyClusterManagerName.setDescription('Type a name to identify the cluster manager.')
zyClusterManagerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyClusterManagerRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyClusterManagerRowStatus.setDescription('This object allows cluster manager entries to be created and deleted from cluster manager table.')
zyxelClusterMembers = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2))
zyClusterMemberMaxNumberOfMembers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterMemberMaxNumberOfMembers.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberMaxNumberOfMembers.setDescription('The maximum number of cluster members that can be created.')
zyxelClusterMemberTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2), )
if mibBuilder.loadTexts: zyxelClusterMemberTable.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterMemberTable.setDescription('The table contains cluster member configuration.')
zyxelClusterMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1), ).setIndexNames((0, "ZYXEL-CLUSTER-MIB", "zyClusterMemberMacAddress"))
if mibBuilder.loadTexts: zyxelClusterMemberEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterMemberEntry.setDescription('An entry contains cluster member configuration.')
zyClusterMemberMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: zyClusterMemberMacAddress.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberMacAddress.setDescription("This is the cluster member switch's hardware MAC address.")
zyClusterMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterMemberName.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberName.setDescription("This is the cluster member switch's system name.")
zyClusterMemberModel = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterMemberModel.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberModel.setDescription("This is the cluster member switch's model name.")
zyClusterMemberPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyClusterMemberPassword.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberPassword.setDescription("Each cluster member's password is its administration password.")
zyClusterMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 1, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyClusterMemberRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyClusterMemberRowStatus.setDescription('This object allows cluster member entries to be created and deleted from cluster member table.')
zyxelClusterCandidate = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1))
zyxelClusterCandidateTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1, 1), )
if mibBuilder.loadTexts: zyxelClusterCandidateTable.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterCandidateTable.setDescription('The table contains cluster candidate information.')
zyxelClusterCandidateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1, 1, 1), ).setIndexNames((0, "ZYXEL-CLUSTER-MIB", "zyClusterCandidateMacAddress"))
if mibBuilder.loadTexts: zyxelClusterCandidateEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterCandidateEntry.setDescription('An entry contains cluster candidate information.')
zyClusterCandidateMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: zyClusterCandidateMacAddress.setStatus('current')
if mibBuilder.loadTexts: zyClusterCandidateMacAddress.setDescription("This is the cluster candidate switch's hardware MAC address.")
zyClusterCandidateName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterCandidateName.setStatus('current')
if mibBuilder.loadTexts: zyClusterCandidateName.setDescription("This is the cluster candidate switch's system name.")
zyClusterCandidateModel = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterCandidateModel.setStatus('current')
if mibBuilder.loadTexts: zyClusterCandidateModel.setDescription("This is the cluster candidate switch's model name.")
zyClusterRole = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("manager", 1), ("member", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterRole.setStatus('current')
if mibBuilder.loadTexts: zyClusterRole.setDescription('The role of this switch within the cluster.')
zyClusterInfoManager = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterInfoManager.setStatus('current')
if mibBuilder.loadTexts: zyClusterInfoManager.setDescription("The cluster manager switch's hardware MAC address.")
zyxelClusterInfoMemberTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4), )
if mibBuilder.loadTexts: zyxelClusterInfoMemberTable.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterInfoMemberTable.setDescription('The table contains cluster member information.')
zyxelClusterInfoMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4, 1), ).setIndexNames((0, "ZYXEL-CLUSTER-MIB", "zyClusterInfoMemberMacAddress"))
if mibBuilder.loadTexts: zyxelClusterInfoMemberEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelClusterInfoMemberEntry.setDescription('An entry contains cluster member information.')
zyClusterInfoMemberMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: zyClusterInfoMemberMacAddress.setStatus('current')
if mibBuilder.loadTexts: zyClusterInfoMemberMacAddress.setDescription("This is the cluster member switch's hardware MAC address.")
zyClusterInfoMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterInfoMemberName.setStatus('current')
if mibBuilder.loadTexts: zyClusterInfoMemberName.setDescription("This is the cluster member switch's system name.")
zyClusterInfoMemberModel = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterInfoMemberModel.setStatus('current')
if mibBuilder.loadTexts: zyClusterInfoMemberModel.setDescription("This is the cluster member switch's model name.")
zyClusterInfoMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 14, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("error", 0), ("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyClusterInfoMemberStatus.setStatus('current')
if mibBuilder.loadTexts: zyClusterInfoMemberStatus.setDescription('There are three types in cluster status. Online(the cluster member switch is accessible), Error (for example, the cluster member switch password was changed or the switch was set as the manager and so left the member list, etc.), Offline (the switch is disconnected - Offline shows approximately 1.5 minutes after the link between cluster member and manager goes down).')
mibBuilder.exportSymbols("ZYXEL-CLUSTER-MIB", zyClusterCandidateModel=zyClusterCandidateModel, zyxelClusterManager=zyxelClusterManager, zyxelClusterCandidateEntry=zyxelClusterCandidateEntry, zyxelClusterMembers=zyxelClusterMembers, zyxelCluster=zyxelCluster, zyClusterInfoManager=zyClusterInfoManager, zyClusterInfoMemberModel=zyClusterInfoMemberModel, zyxelClusterSetup=zyxelClusterSetup, zyxelClusterInfoMemberTable=zyxelClusterInfoMemberTable, zyClusterMemberName=zyClusterMemberName, zyClusterCandidateName=zyClusterCandidateName, zyxelClusterStatus=zyxelClusterStatus, zyClusterManagerRowStatus=zyClusterManagerRowStatus, zyxelClusterManagerEntry=zyxelClusterManagerEntry, zyClusterManagerVid=zyClusterManagerVid, zyClusterInfoMemberMacAddress=zyClusterInfoMemberMacAddress, zyxelClusterManagerTable=zyxelClusterManagerTable, zyxelClusterInfoMemberEntry=zyxelClusterInfoMemberEntry, zyxelClusterMemberEntry=zyxelClusterMemberEntry, zyClusterInfoMemberStatus=zyClusterInfoMemberStatus, zyClusterRole=zyClusterRole, zyClusterMemberRowStatus=zyClusterMemberRowStatus, zyxelClusterCandidateTable=zyxelClusterCandidateTable, zyClusterMemberMaxNumberOfMembers=zyClusterMemberMaxNumberOfMembers, zyxelClusterMemberTable=zyxelClusterMemberTable, zyClusterInfoMemberName=zyClusterInfoMemberName, zyClusterManagerName=zyClusterManagerName, zyClusterMemberModel=zyClusterMemberModel, zyClusterMemberMacAddress=zyClusterMemberMacAddress, zyClusterCandidateMacAddress=zyClusterCandidateMacAddress, PYSNMP_MODULE_ID=zyxelCluster, zyClusterMemberPassword=zyClusterMemberPassword, zyxelClusterCandidate=zyxelClusterCandidate, zyClusterManagerMaxNumberOfManagers=zyClusterManagerMaxNumberOfManagers)
