#
# PySNMP MIB module NETSCREEN-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
netscreenQos, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenQos")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, NotificationType, ObjectIdentity, Bits, ModuleIdentity, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, Unsigned32, IpAddress, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "ObjectIdentity", "Bits", "ModuleIdentity", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "Unsigned32", "IpAddress", "TimeTicks", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenQosMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 5, 0))
netscreenQosMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2001-09-28 00:00', '2001-05-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenQosMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'No Comment', 'Creation Date',))
if mibBuilder.loadTexts: netscreenQosMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenQosMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenQosMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenQosMibModule.setDescription('This module defines the object that are used to monitor QoS')
nsQosUsrShapingMode = MibScalar((1, 3, 6, 1, 4, 1, 3224, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("on-off", 2), ("off-on", 3), ("auto", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosUsrShapingMode.setStatus('current')
if mibBuilder.loadTexts: nsQosUsrShapingMode.setDescription('QoS mode set by user')
nsQosSysShapingMode = MibScalar((1, 3, 6, 1, 4, 1, 3224, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("on-off", 2), ("off-on", 3), ("auto", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosSysShapingMode.setStatus('current')
if mibBuilder.loadTexts: nsQosSysShapingMode.setDescription('QoS mode currently set by the system')
nsQosPly = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 5, 3))
nsQosPlyTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1), )
if mibBuilder.loadTexts: nsQosPlyTable.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyTable.setDescription('QoS is the allocation of the appropriate amount of network bandwidth to every user and application on an interface. This table collects all the QoS configuration setting on each physical interface.')
nsQosPlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1), ).setIndexNames((0, "NETSCREEN-QOS-MIB", "nsQosPlyId"))
if mibBuilder.loadTexts: nsQosPlyEntry.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyEntry.setDescription('Each entry holds a set of attributes for QoS')
nsQosPlyId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyId.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyId.setDescription('A unique policy id, also used as table index.')
nsQosPlyVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyVsys.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyVsys.setDescription('VSYS this policy belongs to.')
nsQosPlyQosEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyQosEnable.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyQosEnable.setDescription('Enable QoS on this policy.')
nsQosPlyGanBW = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyGanBW.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyGanBW.setDescription('Guaranteed Bandwidth (in bytes per second). When Qos Enable is off, the value has no meaning.')
nsQosPlyMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyMaxBW.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyMaxBW.setDescription('Maxium Bandwidth (in bytes per second). When Qos Enable is off, the value has no meaning. Negative value means it is not set yet.')
nsQosPlyTraffPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyTraffPriority.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyTraffPriority.setDescription('Traffic priority for this policy. Zero is the highest priority and seven is the lowest.')
nsQosPlyDSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyDSEnable.setStatus('current')
if mibBuilder.loadTexts: nsQosPlyDSEnable.setDescription('Enable DiffServ codepoint marking on this policy.')
mibBuilder.exportSymbols("NETSCREEN-QOS-MIB", nsQosUsrShapingMode=nsQosUsrShapingMode, nsQosPly=nsQosPly, nsQosPlyTable=nsQosPlyTable, nsQosPlyGanBW=nsQosPlyGanBW, nsQosPlyMaxBW=nsQosPlyMaxBW, nsQosPlyDSEnable=nsQosPlyDSEnable, nsQosPlyEntry=nsQosPlyEntry, PYSNMP_MODULE_ID=netscreenQosMibModule, nsQosSysShapingMode=nsQosSysShapingMode, nsQosPlyQosEnable=nsQosPlyQosEnable, netscreenQosMibModule=netscreenQosMibModule, nsQosPlyId=nsQosPlyId, nsQosPlyTraffPriority=nsQosPlyTraffPriority, nsQosPlyVsys=nsQosPlyVsys)
