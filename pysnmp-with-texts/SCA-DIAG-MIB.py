#
# PySNMP MIB module SCA-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCA-DIAG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:01:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
scanet, = mibBuilder.importSymbols("SCANET-MIB", "scanet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Counter64, TimeTicks, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, IpAddress, NotificationType, ModuleIdentity, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter64", "TimeTicks", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "IpAddress", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
diag = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47))
diagList = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47, 1))
diagTest = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 47, 2))
diagListNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagListNumberOfEntries.setStatus('mandatory')
if mibBuilder.loadTexts: diagListNumberOfEntries.setDescription('Number of entries in Diagnostics Table (Set value to 0 to delete all entries)')
diagListNumberOfErrorEntries = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListNumberOfErrorEntries.setStatus('mandatory')
if mibBuilder.loadTexts: diagListNumberOfErrorEntries.setDescription('Number of errors in Diagnostics Table')
diagListLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 208, 47, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLastUpdateTime.setStatus('mandatory')
if mibBuilder.loadTexts: diagListLastUpdateTime.setDescription('Time of last change in Diagnostics Table in timeticks since boot')
diagListTable = MibTable((1, 3, 6, 1, 4, 1, 208, 47, 1, 4), )
if mibBuilder.loadTexts: diagListTable.setStatus('mandatory')
if mibBuilder.loadTexts: diagListTable.setDescription('Diagnostics Table')
diagListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1), ).setIndexNames((0, "SCA-DIAG-MIB", "diagListIndex"))
if mibBuilder.loadTexts: diagListEntry.setStatus('mandatory')
if mibBuilder.loadTexts: diagListEntry.setDescription('')
diagListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIndex.setStatus('mandatory')
if mibBuilder.loadTexts: diagListIndex.setDescription('Position in table.')
diagListLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 64, 96))).clone(namedValues=NamedValues(("warning", 32), ("error", 64), ("fatalError", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLevel.setStatus('mandatory')
if mibBuilder.loadTexts: diagListLevel.setDescription('Error level.')
diagListCode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListCode.setStatus('mandatory')
if mibBuilder.loadTexts: diagListCode.setDescription('Number that uniquely identifies a specific situation. Set code to zero to delete the entry.')
diagListIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIfindex.setStatus('mandatory')
if mibBuilder.loadTexts: diagListIfindex.setDescription('Interface index.')
diagListTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: diagListTimeStamp.setDescription('Time of (re)insertion in timeticks since boot.')
diagListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListDescription.setStatus('mandatory')
if mibBuilder.loadTexts: diagListDescription.setDescription('Description of the problem.')
diagListAdvice = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListAdvice.setStatus('mandatory')
if mibBuilder.loadTexts: diagListAdvice.setDescription('Advice')
diagTestTable = MibTable((1, 3, 6, 1, 4, 1, 208, 47, 2, 1), )
if mibBuilder.loadTexts: diagTestTable.setStatus('mandatory')
if mibBuilder.loadTexts: diagTestTable.setDescription('')
diagTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1), ).setIndexNames((0, "SCA-DIAG-MIB", "diagTestType"))
if mibBuilder.loadTexts: diagTestEntry.setStatus('mandatory')
if mibBuilder.loadTexts: diagTestEntry.setDescription('')
diagTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestType.setStatus('mandatory')
if mibBuilder.loadTexts: diagTestType.setDescription('Test type')
diagTestDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestDescription.setStatus('mandatory')
if mibBuilder.loadTexts: diagTestDescription.setDescription('Test description')
diagTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 47, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ready", 1), ("test", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagTestStatus.setStatus('mandatory')
if mibBuilder.loadTexts: diagTestStatus.setDescription('Test status. Begin a test by setting the value to test(2) and then wait for it to go from testing(3) to ready(1).')
mibBuilder.exportSymbols("SCA-DIAG-MIB", diagTest=diagTest, diag=diag, diagListLastUpdateTime=diagListLastUpdateTime, diagListDescription=diagListDescription, diagTestType=diagTestType, diagListNumberOfEntries=diagListNumberOfEntries, diagListCode=diagListCode, diagTestDescription=diagTestDescription, diagListEntry=diagListEntry, diagTestEntry=diagTestEntry, diagListAdvice=diagListAdvice, diagListTable=diagListTable, diagTestTable=diagTestTable, diagList=diagList, diagListIndex=diagListIndex, diagListIfindex=diagListIfindex, diagListLevel=diagListLevel, diagListNumberOfErrorEntries=diagListNumberOfErrorEntries, diagListTimeStamp=diagListTimeStamp, diagTestStatus=diagTestStatus)
