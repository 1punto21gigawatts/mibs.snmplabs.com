#
# PySNMP MIB module L2PROTOCOL-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/L2PROTOCOL-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:04:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Integer32, Gauge32, NotificationType, Unsigned32, ModuleIdentity, MibIdentifier, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Gauge32", "NotificationType", "Unsigned32", "ModuleIdentity", "MibIdentifier", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
swL2ProtocolTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 93))
if mibBuilder.loadTexts: swL2ProtocolTunnelMIB.setLastUpdated('1004120000Z')
if mibBuilder.loadTexts: swL2ProtocolTunnelMIB.setOrganization('D-Link Corp.')
if mibBuilder.loadTexts: swL2ProtocolTunnelMIB.setContactInfo('http://support.dlink.com')
if mibBuilder.loadTexts: swL2ProtocolTunnelMIB.setDescription('The structure of Layer 2 protocol tunneling for the proprietary enterprise.')
swL2PTMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 93, 1))
swL2PTState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL2PTState.setStatus('current')
if mibBuilder.loadTexts: swL2PTState.setDescription('This object indicates the global state of Layer 2 protocol tunneling.')
swL2PTPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 2), )
if mibBuilder.loadTexts: swL2PTPortTable.setStatus('current')
if mibBuilder.loadTexts: swL2PTPortTable.setDescription('A table that contains the Layer 2 protocol tunneling information of each port.')
swL2PTPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 2, 1), ).setIndexNames((0, "L2PROTOCOL-TUNNEL-MIB", "swL2PTPortIndex"))
if mibBuilder.loadTexts: swL2PTPortEntry.setStatus('current')
if mibBuilder.loadTexts: swL2PTPortEntry.setDescription('A list with the Layer 2 protocol tunneling information of each port.')
swL2PTPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: swL2PTPortIndex.setStatus('current')
if mibBuilder.loadTexts: swL2PTPortIndex.setDescription('This object indicates the port number.')
swL2PTPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("uni", 2), ("nni", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL2PTPortType.setStatus('current')
if mibBuilder.loadTexts: swL2PTPortType.setDescription("This object indicates the Layer 2 protocol tunneling port type. The 'none' value indicates that the port is normal. Layer 2 protocol tunneling is disabled on this port. The 'uni' value indicates that the port is connected to the customer site. A Layer 2 PDU received on a UNI port can be tunneled to a remote customer site across the provider network. The 'nni' value indicates that the port is connected to the provider network. A Tunneled Layer 2 PDU received on an NNI port will be restored to its original format.")
swL2PTProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 2, 1, 3), Bits().clone(namedValues=NamedValues(("stp", 0), ("gvrp", 1), ("mac-01-00-0C-CC-CC-CC", 2), ("mac-01-00-0C-CC-CC-CD", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL2PTProtocol.setStatus('current')
if mibBuilder.loadTexts: swL2PTProtocol.setDescription("This object indicates the tunneled protocols on this port. This object can only be applied on a UNI port. If the 'stp' BIT is set, the STP BPDU will be tunneled. If the 'gvrp' BIT is set, the GVRP PDU will be tunneled. If the 'mac-01-00-0C-CC-CC-CC' BIT is set, the PDU with the destination MAC address 01-00-0C-CC-CC-CC will be tunneled . If the 'mac-01-00-0C-CC-CC-CD' BIT is set, then the PDU with the destination MAC address 01-00-0C-CC-CC-CD will be tunneled.")
swL2PTThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 3), )
if mibBuilder.loadTexts: swL2PTThresholdTable.setStatus('current')
if mibBuilder.loadTexts: swL2PTThresholdTable.setDescription('This table contains the protocol tunneling threshold of a UNI port.')
swL2PTThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 3, 1), ).setIndexNames((0, "L2PROTOCOL-TUNNEL-MIB", "swL2PTPortIndex"), (0, "L2PROTOCOL-TUNNEL-MIB", "swL2PTProtocolIndex"))
if mibBuilder.loadTexts: swL2PTThresholdEntry.setStatus('current')
if mibBuilder.loadTexts: swL2PTThresholdEntry.setDescription('A list with the Layer2 Protocol tunneling threshold.')
swL2PTProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stp", 1), ("gvrp", 2), ("mac-01-00-0C-CC-CC-CC", 3), ("mac-01-00-0C-CC-CC-CD", 4))))
if mibBuilder.loadTexts: swL2PTProtocolIndex.setStatus('current')
if mibBuilder.loadTexts: swL2PTProtocolIndex.setDescription('This object indicates the tunneled protocol of the port.')
swL2PTDropThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 93, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL2PTDropThreshold.setStatus('current')
if mibBuilder.loadTexts: swL2PTDropThreshold.setDescription('This object indicates the drop threshold for a given protocol on a UNI port. If the arrival rate of a tunneled protocol has reached its threshold, the received PDUs of this protocol will be dropped. The value 0 indicates there is no threshold for the protocol.')
mibBuilder.exportSymbols("L2PROTOCOL-TUNNEL-MIB", swL2PTPortEntry=swL2PTPortEntry, swL2PTPortTable=swL2PTPortTable, swL2PTThresholdTable=swL2PTThresholdTable, swL2PTProtocolIndex=swL2PTProtocolIndex, swL2PTPortIndex=swL2PTPortIndex, swL2PTState=swL2PTState, swL2PTProtocol=swL2PTProtocol, swL2PTMIBObjects=swL2PTMIBObjects, swL2PTDropThreshold=swL2PTDropThreshold, swL2PTThresholdEntry=swL2PTThresholdEntry, swL2ProtocolTunnelMIB=swL2ProtocolTunnelMIB, PYSNMP_MODULE_ID=swL2ProtocolTunnelMIB, swL2PTPortType=swL2PTPortType)
