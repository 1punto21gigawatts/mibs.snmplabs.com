#
# PySNMP MIB module CISCO-OSPF-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-OSPF-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
cospfShamLinksLocalIpAddrType, cospfShamLinkState, cospfLsdbType, cospfShamLinkLocalIpAddress, cospfShamLinksAreaId, cospfShamLinkNbrIpAddrType, cospfShamLinksState, cospfShamLinkNbrArea, cospfShamLinkNbrRtrId, cospfShamLinksRemoteIpAddr, cospfShamLinkNeighborId, cospfShamLinksLocalIpAddr, cospfShamLinkNbrIpAddr, cospfShamLinksRemoteIpAddrType, cospfShamLinkAreaId, cospfAreaNssaTranslatorState, cospfShamLinkNbrState = mibBuilder.importSymbols("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType", "cospfShamLinkState", "cospfLsdbType", "cospfShamLinkLocalIpAddress", "cospfShamLinksAreaId", "cospfShamLinkNbrIpAddrType", "cospfShamLinksState", "cospfShamLinkNbrArea", "cospfShamLinkNbrRtrId", "cospfShamLinksRemoteIpAddr", "cospfShamLinkNeighborId", "cospfShamLinksLocalIpAddr", "cospfShamLinkNbrIpAddr", "cospfShamLinksRemoteIpAddrType", "cospfShamLinkAreaId", "cospfAreaNssaTranslatorState", "cospfShamLinkNbrState")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ospfRouterId, ospfLsdbAreaId, ospfVirtIfNeighbor, ospfVirtIfAreaId, ospfLsdbLsid, ospfNbrRtrId, ospfLsdbRouterId, ospfAddressLessIf, ospfAreaId, ospfIfIpAddress = mibBuilder.importSymbols("OSPF-MIB", "ospfRouterId", "ospfLsdbAreaId", "ospfVirtIfNeighbor", "ospfVirtIfAreaId", "ospfLsdbLsid", "ospfNbrRtrId", "ospfLsdbRouterId", "ospfAddressLessIf", "ospfAreaId", "ospfIfIpAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Bits, TimeTicks, Gauge32, Unsigned32, Integer32, Counter64, MibIdentifier, IpAddress, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Bits", "TimeTicks", "Gauge32", "Unsigned32", "Integer32", "Counter64", "MibIdentifier", "IpAddress", "Counter32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoOspfTrapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 101))
ciscoOspfTrapMIB.setRevisions(('2003-07-18 00:00', '2003-02-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoOspfTrapMIB.setRevisionsDescriptions(('+Deprecated cospfShamLinkStateChange. +Added cospfShamLinksStateChange. +Added cospfShamLinkNbrStateChange. +Added cospfShamLinkConfigError. +Added cospfShamLinkAuthFailure. +Added cospfShamLinkRxBadPacket. +Added cospfShamLinkTxRetransmit. +Fixed indentation and spelling.', 'Initial version of the MIB module.',))
if mibBuilder.loadTexts: ciscoOspfTrapMIB.setLastUpdated('200307180000Z')
if mibBuilder.loadTexts: ciscoOspfTrapMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoOspfTrapMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ospf@cisco.com')
if mibBuilder.loadTexts: ciscoOspfTrapMIB.setDescription('This MIB module describes new/modified notification objects/events, which are defined in the latest version for OSPF MIB IETF draft draftietf-ospf-mib-update-05.txt. Support for OSPF Sham link is also added')
ciscoOspfTrapMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 0))
ciscoOspfTrapMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 1))
ciscoOspfTrapMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 2))
cospfTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 1, 1))
cospfSetTrap = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 101, 1, 1, 1), Bits().clone(namedValues=NamedValues(("ifConfigError", 0), ("virtIfConfigError", 1), ("retransmit", 2), ("virtRetransmit", 3), ("originateLsa", 4), ("originateMaxAgeLsa", 5), ("nssaTranslatorStatusChange", 6), ("shamLinkStateChange", 7), ("shamLinkNbrStateChange", 8), ("shamLinkConfigError", 9), ("shamLinkAuthFailure", 10), ("shamLinkRxBadPacket", 11), ("shamLinkTxRetransmit", 12), ("shamLinksStateChange", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cospfSetTrap.setStatus('current')
if mibBuilder.loadTexts: cospfSetTrap.setDescription('An octet string serving as a bit map for the trap events defined by the OSPF traps in this MIB. This object is used to enable and disable specific OSPF traps where a 1 in the corresponding bit field represents enabled.')
cospfConfigErrorType = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 101, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("badVersion", 1), ("areaMismatch", 2), ("unknownNbmaNbr", 3), ("unknownVirtualNbr", 4), ("authTypeMismatch", 5), ("authFailure", 6), ("netMaskMismatch", 7), ("helloIntervalMismatch", 8), ("deadIntervalMismatch", 9), ("optionMismatch", 10), ("mtuMismatch", 11), ("noError", 12), ("unknownShamLinkNbr", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfConfigErrorType.setStatus('current')
if mibBuilder.loadTexts: cospfConfigErrorType.setDescription('Potential types of configuration conflicts. Used by the cospfConfigError and cospfConfigVirtError traps. When the last value of a trap using this object is needed, but no traps of that type have been sent, this value pertaining to this object should be returned as noError.')
cospfPacketType = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 101, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("hello", 1), ("dbDescript", 2), ("lsReq", 3), ("lsUpdate", 4), ("lsAck", 5), ("nullPacket", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfPacketType.setStatus('current')
if mibBuilder.loadTexts: cospfPacketType.setDescription('OSPF packet types. When the last value of a trap using this object is needed, but no traps of that type have been sent, this value pertaining to this object should be returned as nullPacket.')
cospfPacketSrc = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 101, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cospfPacketSrc.setStatus('current')
if mibBuilder.loadTexts: cospfPacketSrc.setDescription('The IP address of an inbound packet that can- not be identified by a neighbor instance. When the last value of a trap using this object is needed, but no traps of that type have been sent, this value pertaining to this object should be returned as 0.0.0.0.')
cospfIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 1)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-MIB", "ospfAddressLessIf"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketSrc"), ("CISCO-OSPF-TRAP-MIB", "cospfConfigErrorType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"))
if mibBuilder.loadTexts: cospfIfConfigError.setStatus('current')
if mibBuilder.loadTexts: cospfIfConfigError.setDescription('A cospfIfConfigError trap signifies that a packet with mismatched parameter MTU has been received on a non-virtual interface from a router.')
cospfVirtIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 2)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("CISCO-OSPF-TRAP-MIB", "cospfConfigErrorType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"))
if mibBuilder.loadTexts: cospfVirtIfConfigError.setStatus('current')
if mibBuilder.loadTexts: cospfVirtIfConfigError.setDescription('A cospfVirtIfConfigError trap signifies that a packet with mismatched parameter MTU has been received on a virtual interface from a router.')
cospfTxRetransmit = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 3)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfIfIpAddress"), ("OSPF-MIB", "ospfAddressLessIf"), ("OSPF-MIB", "ospfNbrRtrId"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfTxRetransmit.setStatus('current')
if mibBuilder.loadTexts: cospfTxRetransmit.setDescription('A cospfTxRetransmit trap signifies than an OSPF packet, which has been associated with an Opaque LSA LSDB Entry, has been retransmitted on a non-virtual interface.')
cospfVirtIfTxRetransmit = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 4)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfVirtIfAreaId"), ("OSPF-MIB", "ospfVirtIfNeighbor"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfVirtIfTxRetransmit.setStatus('current')
if mibBuilder.loadTexts: cospfVirtIfTxRetransmit.setDescription('A cospfVirtTxRetransmit trap signifies than an OSPF packet, which has been associated with an Opaque LSA LSDB Entry, has been retransmitted on a non-virtual interface.')
cospfOriginateLsa = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 5)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfLsdbAreaId"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfOriginateLsa.setStatus('current')
if mibBuilder.loadTexts: cospfOriginateLsa.setDescription('A cospfOriginateLsa trap signifies that a new Opaque LSA has been originated by this router. This trap should not be invoked for simple refreshes of LSAs (which happesn every 30 minutes), but instead will only be invoked when an LSA is (re)originated due to a topology change. Additionally, this trap does not include LSAs that are being flushed because they have reached MaxAge.')
cospfMaxAgeLsa = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 6)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfLsdbAreaId"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbLsid"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfMaxAgeLsa.setStatus('current')
if mibBuilder.loadTexts: cospfMaxAgeLsa.setDescription("A cospfMaxAgeLsa trap signifies that one of the Opaque LSAs in the router's link-state database has aged to MaxAge.")
cospfNssaTranslatorStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 7)).setObjects(("OSPF-MIB", "ospfRouterId"), ("OSPF-MIB", "ospfAreaId"), ("CISCO-OSPF-MIB", "cospfAreaNssaTranslatorState"))
if mibBuilder.loadTexts: cospfNssaTranslatorStatusChange.setStatus('current')
if mibBuilder.loadTexts: cospfNssaTranslatorStatusChange.setDescription("A cospfNssaTranslatorStatusChange trap indicates that there has been a change in the router's ability to translate OSPF type-7 LSAs into OSPF type-5 LSAs. This trap should be generated when the Translator Status transitions from or to any defined status on a per area basis.")
cospfShamLinkStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 8)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinkAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinkLocalIpAddress"), ("CISCO-OSPF-MIB", "cospfShamLinkNeighborId"), ("CISCO-OSPF-MIB", "cospfShamLinkState"))
if mibBuilder.loadTexts: cospfShamLinkStateChange.setStatus('deprecated')
if mibBuilder.loadTexts: cospfShamLinkStateChange.setDescription('A ospfShamLinkStateChange trap signifies that there has been a change in the state of a Sham Link OSPF interface. This trap should be generated when the interface state regresses from Point-to-Point to Down or progresses to Down to Point-to-Point. This trap has been deprecated by cospfShamLinksStateChange.')
cospfShamLinksStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 14)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinksAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksState"))
if mibBuilder.loadTexts: cospfShamLinksStateChange.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinksStateChange.setDescription('A ospfShamLinkStateChange trap signifies that there has been a change in the state of a Sham Link OSPF interface. This trap should be generated when the interface state regresses from Point-to-Point to Down or progresses to Down to Point-to-Point.')
cospfShamLinkNbrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 9)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrArea"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrRtrId"), ("CISCO-OSPF-MIB", "cospfShamLinkNbrState"))
if mibBuilder.loadTexts: cospfShamLinkNbrStateChange.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinkNbrStateChange.setDescription('A cospfShamLinkNbrStateChange trap signifies that there has been a change in the state of a sham link OSPF neighbor. This trap should be generated when the neighbor state regresses (e.g., goes from Attempt or Full to 1-Way or Down) or progresses to a terminal state (e.g., Full).')
cospfShamLinkConfigError = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 10)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinksAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"), ("CISCO-OSPF-TRAP-MIB", "cospfConfigErrorType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"))
if mibBuilder.loadTexts: cospfShamLinkConfigError.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinkConfigError.setDescription("A cospfShamLinkConfigError signifies that a packet has been received on a sham link from a router whose configuration parameters conflict with this router's configuration parameters.")
cospfShamLinkAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 11)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinksAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"), ("CISCO-OSPF-TRAP-MIB", "cospfConfigErrorType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"))
if mibBuilder.loadTexts: cospfShamLinkAuthFailure.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinkAuthFailure.setDescription("A cospfShamLinkAuthFailure trap signifies that a packet has been received on a sham link from a router whose authentication key or authentication type conflicts with this router's authentication key and authentication type.")
cospfShamLinkRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 12)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinksAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"))
if mibBuilder.loadTexts: cospfShamLinkRxBadPacket.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinkRxBadPacket.setDescription('A cospfShamLinkRxBadPacket trap signifies that an OSPF packet has been received on a sham link that cannot be parsed.')
cospfShamLinkTxRetransmit = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 101, 0, 13)).setObjects(("OSPF-MIB", "ospfRouterId"), ("CISCO-OSPF-MIB", "cospfShamLinksAreaId"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksLocalIpAddr"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddrType"), ("CISCO-OSPF-MIB", "cospfShamLinksRemoteIpAddr"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"), ("CISCO-OSPF-MIB", "cospfLsdbType"), ("OSPF-MIB", "ospfLsdbLsid"), ("OSPF-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: cospfShamLinkTxRetransmit.setStatus('current')
if mibBuilder.loadTexts: cospfShamLinkTxRetransmit.setDescription('A cospfShamLinkTxRetransmit trap signifies that an OSPF packet has been retransmitted on a sham link. All packets that may be retransmitted are associated with an LSDB entry. The LS type, LS ID, and Router ID are used identify the LSDB entry.')
ciscoOspfTrapMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 1))
ciscoOspfTrapMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 2))
ciscoOspfTrapMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 2, 1)).setObjects(("CISCO-OSPF-TRAP-MIB", "ciscoOspfTrapEventGroup"), ("CISCO-OSPF-TRAP-MIB", "ciscoOspfTrapControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOspfTrapMIBCompliance = ciscoOspfTrapMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoOspfTrapMIBCompliance.setDescription('The compliance statements for the Cisco OSPF TRAP MIB. These statements are deprecated by ciscoOspfTrapMIBComplianceRev1.')
ciscoOspfTrapMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 2, 2)).setObjects(("CISCO-OSPF-TRAP-MIB", "ciscoOspfTrapEventGroupRev1"), ("CISCO-OSPF-TRAP-MIB", "ciscoOspfTrapControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOspfTrapMIBComplianceRev1 = ciscoOspfTrapMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoOspfTrapMIBComplianceRev1.setDescription('The compliance statements for the Cisco OSPF TRAP MIB.')
ciscoOspfTrapEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 1, 1)).setObjects(("CISCO-OSPF-TRAP-MIB", "cospfIfConfigError"), ("CISCO-OSPF-TRAP-MIB", "cospfVirtIfConfigError"), ("CISCO-OSPF-TRAP-MIB", "cospfTxRetransmit"), ("CISCO-OSPF-TRAP-MIB", "cospfVirtIfTxRetransmit"), ("CISCO-OSPF-TRAP-MIB", "cospfOriginateLsa"), ("CISCO-OSPF-TRAP-MIB", "cospfMaxAgeLsa"), ("CISCO-OSPF-TRAP-MIB", "cospfNssaTranslatorStatusChange"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOspfTrapEventGroup = ciscoOspfTrapEventGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoOspfTrapEventGroup.setDescription('A grouping of OSPF Trap Events, as specified in NOTIFICATION-TYPE constructs. This has been deprecated by ciscoOspfTrapEventGroupRev1.')
ciscoOspfTrapControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 1, 2)).setObjects(("CISCO-OSPF-TRAP-MIB", "cospfSetTrap"), ("CISCO-OSPF-TRAP-MIB", "cospfConfigErrorType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketType"), ("CISCO-OSPF-TRAP-MIB", "cospfPacketSrc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOspfTrapControlGroup = ciscoOspfTrapControlGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoOspfTrapControlGroup.setDescription('These objects are required to control traps from OSPF systems.')
ciscoOspfTrapEventGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 101, 2, 1, 3)).setObjects(("CISCO-OSPF-TRAP-MIB", "cospfIfConfigError"), ("CISCO-OSPF-TRAP-MIB", "cospfVirtIfConfigError"), ("CISCO-OSPF-TRAP-MIB", "cospfTxRetransmit"), ("CISCO-OSPF-TRAP-MIB", "cospfVirtIfTxRetransmit"), ("CISCO-OSPF-TRAP-MIB", "cospfOriginateLsa"), ("CISCO-OSPF-TRAP-MIB", "cospfMaxAgeLsa"), ("CISCO-OSPF-TRAP-MIB", "cospfNssaTranslatorStatusChange"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinksStateChange"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkNbrStateChange"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkConfigError"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkAuthFailure"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkRxBadPacket"), ("CISCO-OSPF-TRAP-MIB", "cospfShamLinkTxRetransmit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOspfTrapEventGroupRev1 = ciscoOspfTrapEventGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoOspfTrapEventGroupRev1.setDescription('A grouping of OSPF Trap Events, as specified in NOTIFICATION-TYPE constructs.')
mibBuilder.exportSymbols("CISCO-OSPF-TRAP-MIB", cospfPacketType=cospfPacketType, cospfShamLinkRxBadPacket=cospfShamLinkRxBadPacket, PYSNMP_MODULE_ID=ciscoOspfTrapMIB, cospfShamLinkTxRetransmit=cospfShamLinkTxRetransmit, ciscoOspfTrapMIBCompliance=ciscoOspfTrapMIBCompliance, ciscoOspfTrapMIBCompliances=ciscoOspfTrapMIBCompliances, ciscoOspfTrapMIBObjects=ciscoOspfTrapMIBObjects, cospfShamLinkConfigError=cospfShamLinkConfigError, ciscoOspfTrapMIBNotifs=ciscoOspfTrapMIBNotifs, cospfTrapControl=cospfTrapControl, ciscoOspfTrapEventGroup=ciscoOspfTrapEventGroup, cospfShamLinkAuthFailure=cospfShamLinkAuthFailure, cospfPacketSrc=cospfPacketSrc, ciscoOspfTrapMIB=ciscoOspfTrapMIB, cospfShamLinkNbrStateChange=cospfShamLinkNbrStateChange, ciscoOspfTrapMIBComplianceRev1=ciscoOspfTrapMIBComplianceRev1, cospfNssaTranslatorStatusChange=cospfNssaTranslatorStatusChange, cospfIfConfigError=cospfIfConfigError, ciscoOspfTrapControlGroup=ciscoOspfTrapControlGroup, ciscoOspfTrapMIBConform=ciscoOspfTrapMIBConform, cospfSetTrap=cospfSetTrap, cospfVirtIfTxRetransmit=cospfVirtIfTxRetransmit, cospfMaxAgeLsa=cospfMaxAgeLsa, cospfShamLinksStateChange=cospfShamLinksStateChange, ciscoOspfTrapEventGroupRev1=ciscoOspfTrapEventGroupRev1, cospfShamLinkStateChange=cospfShamLinkStateChange, cospfVirtIfConfigError=cospfVirtIfConfigError, ciscoOspfTrapMIBGroups=ciscoOspfTrapMIBGroups, cospfConfigErrorType=cospfConfigErrorType, cospfOriginateLsa=cospfOriginateLsa, cospfTxRetransmit=cospfTxRetransmit)
