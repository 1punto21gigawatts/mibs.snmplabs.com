#
# PySNMP MIB module HP-ICF-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:35:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
hpicfSyslog, = mibBuilder.importSymbols("HP-ICF-OID", "hpicfSyslog")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, ObjectIdentity, Gauge32, ModuleIdentity, Unsigned32, Counter32, IpAddress, NotificationType, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Unsigned32", "Counter32", "IpAddress", "NotificationType", "TimeTicks", "Counter64")
DisplayString, TruthValue, TimeStamp, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TimeStamp", "TextualConvention", "RowStatus")
hpicfSyslogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1))
hpicfSyslogMIB.setRevisions(('2015-09-11 05:26', '2015-09-04 00:00', '2015-09-03 00:00', '2015-08-31 00:00', '2015-08-28 00:00', '2015-05-09 00:00', '2015-04-16 00:00', '2014-11-13 00:00', '2014-07-17 00:00', '2013-11-06 00:00', '2013-09-24 00:00', '2013-09-14 00:00', '2013-09-05 00:00', '2013-06-25 00:00', '2013-08-07 00:00', '2012-03-15 00:00', '2012-01-30 00:00', '2011-10-11 00:00', '2011-08-24 00:00', '2011-07-19 00:00', '2011-06-13 00:00', '2011-05-27 00:00', '2011-03-21 00:00', '2011-03-05 00:00', '2010-11-09 00:00', '2010-10-25 00:00', '2010-08-11 00:00', '2010-06-20 00:00', '2010-03-20 00:00', '2010-03-12 00:00', '2010-01-27 00:00', '2009-08-19 00:00', '2009-02-18 00:00', '2009-01-30 00:00', '2008-11-18 00:00', '2008-07-09 00:00', '2008-06-26 00:00', '2008-06-25 00:00', '2008-01-25 00:00', '2008-01-01 11:21',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfSyslogMIB.setRevisionsDescriptions(("Added 'captivePortal' entry in hpicfSyslogSystemModule", "Added 'lldpmad' entry in hpicfSyslogSystemModule", "Added 'bfd' entry in hpicfSyslogSystemModule", "Added 'rip' entry in hpicfSyslogSystemModule", "Added 'mvrp' entry in hpicfSyslogSystemModule", "Added 'arpthrottle' entry in hpicfSyslogSystemModule", "Added 'ripng' entry in hpicfSyslogSystemModule", 'Added hpicfSyslogSecClearLog for securty logging hpicfSyslogLogMsgOptions', 'Added acct susbsytem for accounting RMON logging in hpicfSyslogSystemModule', "Added 'tr69' and 'http' entries in hpicfSyslogSystemModule", "Added 'hpicfSyslogOriginId' entry to hpicfSyslogPriority", "Added 'job' entry in hpicfSyslogSystemModule", "Added 'dhcp-server' entry in hpicfSyslogSystemModule", "Added 'tls' entry in hpicfSyslogControlTransportProtocol", "Added 'insysprog' entry in HpicfSyslogSystemModule", "Added 'hpespcm' entry in HpicfSyslogSystemModule", "Added 'securemode' entry in HpicfSyslogSystemModule", "Added 'mobility-agent' entry in HpicfSyslogSystemModule", "Added 'ecm' and 'hpespip' entries in HpicfSyslogSystemModule", "Added 'ra-guard' entry in HpicfSyslogSystemModule", "Added 'slp' entries in HpicfSyslogSystemModule", "Added 'rfs', 'crypto' and 'testmode' entries in HpicfSyslogSystemModule", "Added 'stacking' entry in HpicfSyslogSystemModule 'stacking' is applicable only for platforms which support true stacking solution", "Added 'hpicfSyslogAlerts' group of objects. Objects 'hpicfSyslogAlertIndex', 'hpicfSyslogAlertStatus', and 'hpicfSyslogAlertTransmitInterval' added to this group.", "Added 'sftp' entry in HpicfSyslogSystemModule", "Added 'dt' entry in HpicfSyslogSystemModule", "Added 'fips' entry in HpicfSyslogSystemModule", "Added 'hpicfSyslogControlTransportProtocol' & 'hpicfSyslogControlDestinationPort' to hpicfSyslogControlEntry.", "Added 'bgp' entry in HpicfSyslogSystemModule", "Added 'dhcpv6r' entry in HpicfSyslogSystemModule", 'Added an enum for ospf3 in HpicfSyslogSystemModule', "Added 'hpicfSyslogControlSmmLog to hpicfSyslogControlEntry & 'hpicfSyslogLogMsgOptions' to the hpicfSyslogObjects.", "Added 'hpicfSyslogControlBindAddrIsOobm' MIB object to 'hpicfSyslogControlTable'. Add an enum for oobm in ''HpicfSyslogSystemModule'. ", 'Add Syslog statistics hpicfSyslogObjects.', "Add 'srcip' to the available SYNTAX for HpicfSyslogSystemModule. ", "Add 'hpsm' to the available SYNTAX for HpicfSyslogSystemModule. ", "Add 'dipld' to the available SYNTAX for HpicfSyslogSystemModule. ", 'Correct comments that are not clear or written properly. ', "Add 'bridge' to the available SYNTAX for HpicfSyslogSystemModule. ", 'The initial version.',))
if mibBuilder.loadTexts: hpicfSyslogMIB.setLastUpdated('201509110526Z')
if mibBuilder.loadTexts: hpicfSyslogMIB.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfSyslogMIB.setContactInfo('Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfSyslogMIB.setDescription('The MIB module for configuring and monitoring Syslog applications. The HP Syslog application sends Syslog messages.')
class HpicfSyslogFacility(TextualConvention, Integer32):
    description = 'This textual convention enumerates the facility of a Syslog application. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("sys9", 9), ("sys10", 10), ("sys11", 11), ("sys12", 12), ("sys13", 13), ("sys14", 14), ("cron", 15), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23))

class HpicfSyslogSeverity(TextualConvention, Integer32):
    description = 'This textual convention enumerates the severity of a Syslog application. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("major", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7))

class HpicfSyslogSystemModule(TextualConvention, Integer32):
    description = 'This textual convention enumerates the system module (subsystem) of a Syslog application. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133))
    namedValues = NamedValues(("all-pass", 0), ("vlan", 1), ("ip", 2), ("igmp", 3), ("ipx", 4), ("stp", 5), ("system", 6), ("chassis", 7), ("console", 8), ("ports", 9), ("dhcp", 10), ("download", 11), ("tcp", 12), ("telnet", 13), ("timep", 14), ("tftp", 15), ("xmodem", 16), ("update", 17), ("mgr", 18), ("bridge", 19), ("snmp", 20), ("addrmgr", 21), ("agp", 22), ("fault", 23), ("ldbal", 24), ("garp", 25), ("gvrp", 26), ("cos", 27), ("lacp", 28), ("dhcpr", 29), ("stack", 30), ("dma", 31), ("sntp", 32), ("ieee8021x", 33), ("cdp", 34), ("auth", 35), ("tacacs", 36), ("radius", 37), ("ssh", 38), ("netinet", 39), ("ospf", 40), ("xrrp", 41), ("ssl", 42), ("ipaddrmgr", 43), ("macauth", 44), ("kms", 45), ("pim", 46), ("maclock", 47), ("acl", 48), ("udpf", 49), ("inst-mon", 50), ("udld", 51), ("hpesp", 52), ("lldp", 53), ("connfilt", 54), ("ratelim", 55), ("idm", 56), ("iplock", 57), ("dhcp-snoop", 58), ("vrrp", 59), ("usb", 60), ("licensing", 61), ("loop-protect", 62), ("sflow", 63), ("arp-protect", 64), ("dhcpv6c", 65), ("mtm", 66), ("mld", 67), ("dca", 68), ("qinq", 69), ("autorun", 70), ("ffi", 71), ("wsm", 72), ("dipld", 73), ("hpsm", 74), ("srcip", 75), ("policy", 76), ("oobm", 77), ("trmode", 78), ("ospf3", 79), ("dhcpv6r", 80), ("bgp", 81), ("ufd", 82), ("fips", 83), ("dt", 84), ("dcbx", 85), ("sftp", 86), ("stacking", 87), ("rfs", 88), ("testmode", 89), ("crypto", 90), ("slp", 91), ("ra-guard", 92), ("ecm", 93), ("hpespip", 94), ("mobility-agent", 95), ("securemode", 96), ("mSatProxy", 97), ("eSatProxy", 98), ("hpespcm", 99), ("openflow", 100), ("smart-link", 101), ("insysprog", 102), ("dhcp-server", 103), ("job", 104), ("dsnoopv6", 105), ("dipldv6", 106), ("servicetunnel", 107), ("tr069", 108), ("http", 109), ("vxlantunnel", 110), ("bpdu", 111), ("byod-redirect", 112), ("dldp", 113), ("macsec", 114), ("acct", 115), ("tls", 116), ("ripng", 117), ("arpthrottle", 120), ("ndsnoop", 122), ("ntp", 123), ("mdns", 126), ("mvrp", 127), ("rip", 128), ("bfd", 129), ("lldpmad", 130), ("captive-portal", 131), ("profile-manager", 132), ("vsf", 133))

class HpicfSyslogOriginId(TextualConvention, Integer32):
    description = 'This textual convention enumerates the origin identifier of syslog message. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ip-address", 1), ("hostname", 2), ("none", 3))

hpicfSyslogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 0))
hpicfSyslogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1))
hpicfSyslogConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3))
hpicfSyslogControlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1), )
if mibBuilder.loadTexts: hpicfSyslogControlTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlTable.setDescription('A table containing the configuration parameters pertaining to the hpicfSyslog applications serviced by an SNMP agent. ')
hpicfSyslogControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1), ).setIndexNames((0, "HP-ICF-SYSLOG-MIB", "hpicfSyslogControlIndex"))
if mibBuilder.loadTexts: hpicfSyslogControlEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlEntry.setDescription('The configuration parameters pertaining to a Syslog application. ')
hpicfSyslogControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpicfSyslogControlIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlIndex.setDescription('The Index that uniquely identifies the Syslog application in the hpicfSyslogControlTable. The value of the index for a Syslog application may not be the same across system reboots. Users and applications will need to determine the index of a Syslog application after system reboots. Initial implementation allows integers (1..6). ')
hpicfSyslogControlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlDescr.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlDescr.setDescription("A user definable description of the Syslog application. This description could be used by Syslog management applications e.g. in reports or in user interfaces. For the description to be persistent across reboots, the conceptual row must be in the 'active' state. Also, refer to note in hpicfSyslogControlRowStatus, for additional limitations. ")
hpicfSyslogControlBindAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlBindAddrType.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlBindAddrType.setDescription('The type of Internet address which follows in hpicfSyslogControlBindAddr. Currently only IPv4 is supported. ')
hpicfSyslogControlBindAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlBindAddr.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlBindAddr.setDescription('The specific address the Syslog sender will bind to. The format of the address is specified by the corresponding hpicfSyslogControlBindAddrType object. ')
hpicfSyslogControlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlRowStatus.setDescription("This object is used to create, modify and delete rows in the hpicfSyslogControlTable. The value of hpicfSyslogControlDescr can be changed when this object is in state ''active'' or in ''notInService''. The other objects in a row can be modified only when the value of this object in the corresponding conceptual row is not ''active''. Thus to modify one or more of the objects in this conceptual row, a. change the row status to ''notInService'', b. change the values of the row c. change the row status to ''active'' The hpicfSyslogControlRowStatus may be changed to ''active'' if all the managed objects in the conceptual row with MAX-ACCESS read-create have been assigned valid values. The information in each conceptual row is only persist across reboots if the row status is 'active'. ")
hpicfSyslogControlBindAddrIsOobm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlBindAddrIsOobm.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlBindAddrIsOobm.setDescription('This object indicates the specific address to which Syslog sender will bind is on OOBM interface. This mib object will be applicable only if there is a physical OOBM port on the device. ')
hpicfSyslogControlSmmLog = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSyslogControlSmmLog.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlSmmLog.setDescription('This object is applicable for a device with a standby management module like 8200zl. When the value of this object is set to enabled, all the log messages from the standby management module(SMM) will be sent to the Syslog server. If the value is disabled, the log messages from the standby management module will not be sent to the Syslog server. By default, this is disabled.')
hpicfSyslogControlTransportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("tls", 3))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogControlTransportProtocol.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlTransportProtocol.setDescription('The transport protocol used for the connection to the Syslog server associated with this row. The default value is UDP.')
hpicfSyslogControlDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 1, 1, 9), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogControlDestinationPort.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlDestinationPort.setDescription('The socket port used by the transport protocol to connect to the Syslog server associated with this row. The default Syslog port for UDP is 514, for TCP is 1470, and for TLS is 6514.')
hpicfSyslogOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2))
hpicfSyslogOperationsMsgsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsMsgsTransmitted.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsMsgsTransmitted.setDescription('The number of messages transmitted by the Syslog sender. This does not include the messages that could not be queued for transmission by the hpicfSyslog sender. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hpicfSyslogOperationsCounterDiscontinuityTime. ')
hpicfSyslogOperationsMsgsDropped = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsMsgsDropped.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsMsgsDropped.setDescription('The number of messages that could not be queued for transmission by the Syslog sender. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hpicfSyslogOperationsCounterDiscontinuityTime. ')
hpicfSyslogOperationsLastMsgTransmittedTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsLastMsgTransmittedTime.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsLastMsgTransmittedTime.setDescription('The value of sysUpTime when the last message was transmitted by the hpicfSyslog sender. If no messages have been transmitted by this Syslog application, since the last re-initialization of the local management subsystem, then this object will have a zero value. ')
hpicfSyslogOperationsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsStartTime.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsStartTime.setDescription('The value of sysUpTime when this Syslog application was started. ')
hpicfSyslogOperationsLastError = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsLastError.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsLastError.setDescription('A description of the last error related to sending a Syslog message that was encountered by this Syslog application. If no error has been encountered by this Syslog application then the value of this object will be a zero-length string. If no error has been encountered by this Syslog application since the last re-initialization of the local management subsystem then the value of this object will be a zero-length string. ')
hpicfSyslogOperationsLastErrorTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsLastErrorTime.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsLastErrorTime.setDescription('The value of sysUpTime when the last error was encountered. If no error has been encountered by this Syslog application since the last re-initialization of the local management subsystem, then this object will have a zero value. ')
hpicfSyslogOperationsCounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsCounterDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any one or more of this Syslog application's counters, viz., counters with OID prefix 'hpicfSyslogOperationsMsgsTransmitted' or 'hpicfSyslogOperationsMsgsDropped' suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object will have a zero value. ")
hpicfSyslogOperationsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("started", 2), ("suspended", 3), ("stopped", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogOperationsStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsStatus.setDescription('The status of the Syslog application. ')
hpicfSyslogPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3))
hpicfSyslogPriorityFacility = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3, 1), HpicfSyslogFacility().clone('user')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogPriorityFacility.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPriorityFacility.setDescription('The facility value of this entry. This value will be returned in all Syslog message, regardless of the process/daemon that originates the message. ')
hpicfSyslogPrioritySeverity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3, 2), HpicfSyslogSeverity().clone('debug')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogPrioritySeverity.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPrioritySeverity.setDescription("The severity value of this entry. Used to filter 'event' messages. ")
hpicfSyslogPriorityDescr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogPriorityDescr.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPriorityDescr.setDescription('A textual description of this priority entry. ')
hpicfSyslogSystemModule = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3, 4), HpicfSyslogSystemModule().clone('all-pass')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogSystemModule.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSystemModule.setDescription("A system module value of this entry. Used to filter 'event' messages. ")
hpicfSyslogOriginId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 3, 5), HpicfSyslogOriginId().clone('ip-address')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogOriginId.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOriginId.setDescription("Specifies the content of a HOSTNAME field in the HEADER of a syslog message. This content can be either an IP address, a hostname or none. A value of (1) indicates the IP address of the outgoing interface. A value of (2) indicates the hostname of the device. A value of (3) indicates NILVALUE. Here, NILVALUE is defined as '-'. ")
hpicfSyslogStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4))
hpicfSyslogGeneralStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1))
hpicfSyslogGeneralLogSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralLogSent.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralLogSent.setDescription('Number of Syslog messages sent by the Syslog sender.')
hpicfSyslogGeneralLogRecv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralLogRecv.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralLogRecv.setDescription('Number of Syslog messages received by the Syslog Server.')
hpicfSyslogGeneralLogRelay = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralLogRelay.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralLogRelay.setDescription('The number of messages processed by the Syslog relay.')
hpicfSyslogGeneralSendError = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralSendError.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralSendError.setDescription('Number of Syslog messages that failed during the send process and this failed message will be buffered for the retransmission process.')
hpicfSyslogGeneralLogResend = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralLogResend.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralLogResend.setDescription('Number of Syslog messages re-transmitted successfully.')
hpicfSyslogGeneralResendError = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralResendError.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralResendError.setDescription('Number of Syslog messages that failed during the retransmission process.The Syslog retransmission will happen if and only if Syslog send failed while transmitting the buffered Syslog messages.')
hpicfSyslogGeneralLogBuffered = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogGeneralLogBuffered.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralLogBuffered.setDescription('Current number of buffered Syslog messages that are ready to be transmitted. ')
hpicfSyslogSeverityStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2))
hpicfSyslogSeverityCounterInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hpicfSyslogSeverityCounterInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityCounterInfoTable.setDescription(' A table containing the Syslog severity statistics counter value.')
hpicfSyslogSeverityCounterInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2, 1, 1), ).setIndexNames((0, "HP-ICF-SYSLOG-MIB", "hpicfSyslogSeverityTypeIndex"))
if mibBuilder.loadTexts: hpicfSyslogSeverityCounterInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityCounterInfoEntry.setDescription(' The configuration parameters pertaining to a Syslog severity statistics.')
hpicfSyslogSeverityTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpicfSyslogSeverityTypeIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityTypeIndex.setDescription(' The Index that uniquely identifies the Syslog severity type.')
hpicfSyslogSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2, 1, 1, 2), HpicfSyslogSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogSeverityType.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityType.setDescription(' The severity type for all the Syslog messages.')
hpicfSyslogSeverityCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogSeverityCounter.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityCounter.setDescription('Number of messages transmitted per severity.')
hpicfSyslogFacilityStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3))
hpicfSyslogFacilityCounterInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3, 1), )
if mibBuilder.loadTexts: hpicfSyslogFacilityCounterInfoTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFacilityCounterInfoTable.setDescription('A table containing the Syslog facility statistics counter values.')
hpicfSyslogFacilityCounterInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3, 1, 1), ).setIndexNames((0, "HP-ICF-SYSLOG-MIB", "hpicfSyslogfacilityCounterIndex"))
if mibBuilder.loadTexts: hpicfSyslogFacilityCounterInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFacilityCounterInfoEntry.setDescription('The configuration parameters pertaining to a Syslog facility statistics.')
hpicfSyslogfacilityCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpicfSyslogfacilityCounterIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogfacilityCounterIndex.setDescription(' The Index that uniquely identifies the Syslog facility.')
hpicfSyslogfacilityType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3, 1, 1, 2), HpicfSyslogFacility()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogfacilityType.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogfacilityType.setDescription(' The facility type for all the Syslog messages.')
hpicfSyslogfacilityCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 4, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogfacilityCounter.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogfacilityCounter.setDescription(' Number of Syslog messages transmitted per facilty.')
hpicfSyslogLogMsgOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 5))
hpicfSyslogClearLog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogClearLog.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogClearLog.setDescription('Setting this object to TRUE will erase all event log messages. This object always return FALSE when read.')
hpicfSyslogSecClearLog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 5, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogSecClearLog.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSecClearLog.setDescription('Setting this object to TRUE will erase all security-related log messages. This object always return FALSE when read.')
hpicfSyslogServerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6), )
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsTable.setDescription('A table containing the statistical information pertaining to each Syslog server indexed by hpicfSyslogControlIndex. ')
hpicfSyslogServerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1), ).setIndexNames((0, "HP-ICF-SYSLOG-MIB", "hpicfSyslogControlIndex"))
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsEntry.setDescription('The configuration parameters pertaining to a Syslog application. ')
hpicfSyslogServerLogSent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerLogSent.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerLogSent.setDescription('Number of Syslog messages sent by the Syslog sender.')
hpicfSyslogServerLogRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerLogRecv.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerLogRecv.setDescription('Number of Syslog messages received by the Syslog Server.')
hpicfSyslogServerLogRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerLogRelay.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerLogRelay.setDescription('The number of messages processed by the Syslog relay.')
hpicfSyslogServerSendError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerSendError.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerSendError.setDescription('Number of Syslog messages that failed during the send process and this failed message will be buffered for the retransmission process.')
hpicfSyslogServerLogResend = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerLogResend.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerLogResend.setDescription('Number of Syslog messages re-transmitted successfully.')
hpicfSyslogServerResendError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerResendError.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerResendError.setDescription('Number of Syslog messages that failed during the retransmission process.The Syslog retransmission will happen if and only if Syslog send failed while transmitting the buffered Syslog messages.')
hpicfSyslogServerLogBuffered = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSyslogServerLogBuffered.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerLogBuffered.setDescription('Current number of buffered Syslog messages that are ready to be transmitted. ')
hpicfSyslogAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7))
hpicfSyslogAlertsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7, 1), )
if mibBuilder.loadTexts: hpicfSyslogAlertsTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertsTable.setDescription('A table of entries containing configuration information for transmitting alerts in Syslog messages.')
hpicfSyslogAlertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7, 1, 1), ).setIndexNames((0, "HP-ICF-SYSLOG-MIB", "hpicfSyslogAlertIndex"))
if mibBuilder.loadTexts: hpicfSyslogAlertsEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertsEntry.setDescription("An entry in the 'hpicfSyslogAlertsTable'.")
hpicfSyslogAlertIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("runningCfgChg", 1))))
if mibBuilder.loadTexts: hpicfSyslogAlertIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertIndex.setDescription("The index which uniquely identifies a row in the 'hpicfSyslogAlertsTable'. runningCfgChg - the alert type indicating that a change was made made to the switch's running configuration.")
hpicfSyslogAlertAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogAlertAdminStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertAdminStatus.setDescription('Indicates whether the Syslog application is permitted to generate given type of alerts in transmitted Syslog messages. Default is disabled.')
hpicfSyslogAlertTransmitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 1, 7, 1, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSyslogAlertTransmitInterval.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertTransmitInterval.setDescription('Specifies the transmission interval in seconds for sending alerts in Syslog messages. Only one Syslog message is allowed for transmission within this time interval. Default value is 0, indicating there is no rate limit for alerts transmission.')
hpicfSyslogStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 0, 1)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlIndex"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlDescr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddrType"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlRowStatus"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityDescr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPrioritySeverity"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityFacility"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogSystemModule"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsStatus"))
if mibBuilder.loadTexts: hpicfSyslogStatusChanged.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogStatusChanged.setDescription("This notification is sent when any of the objects listed are accessed. For example, when the first server address is entered, the application starts [hpicfSyslogOperationsStatus is ''started'' ]. When the last server address is removed, the Syslog application stops [hpicfSyslogOperationsStatus is ''stopped'']. The value of hpicfSyslogOperationsStatus will be the new status of the Syslog application after the change. Another example, when a server address is added, a notification is sent indicating the index used to store the row information, as well as the address type, the address itself, the description if given , and the row status. ")
hpicfSyslogGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1))
hpicfSyslogCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2))
hpicfSyslogOperationsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 1)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsMsgsTransmitted"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsMsgsDropped"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsLastMsgTransmittedTime"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsStartTime"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsLastError"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsLastErrorTime"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsCounterDiscontinuityTime"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogOperationsGroup = hpicfSyslogOperationsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOperationsGroup.setDescription('A collection of objects providing message related statistics.')
hpicfSyslogControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 2)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlDescr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddrType"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogControlGroup = hpicfSyslogControlGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlGroup.setDescription('A collection of objects representing the run time parameters for the Syslog applications. ')
hpicfSyslogPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 3)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogPriorityGroup = hpicfSyslogPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPriorityGroup.setDescription('A collection of objects representing the priority groupings of hpicfSyslog messages. ')
hpicfSyslogNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 5)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogStatusChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogNotificationGroup = hpicfSyslogNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogNotificationGroup.setDescription('A collection of notifications about the operational state of a Syslog application. ')
hpicfSyslogControlGroupOobm = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 6)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddrIsOobm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogControlGroupOobm = hpicfSyslogControlGroupOobm.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlGroupOobm.setDescription('A collection of objects representing the run time parameters for the OOBM aware Syslog applications. ')
hpicfSyslogGeneralStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 7)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralLogSent"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralLogRecv"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralLogRelay"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralSendError"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralLogResend"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralResendError"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralLogBuffered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogGeneralStatisticsGroup = hpicfSyslogGeneralStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogGeneralStatisticsGroup.setDescription('A collection of objects representing the general statistics counter information.')
hpicfSyslogSeverityStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 8)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogSeverityType"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogSeverityCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogSeverityStatisticsGroup = hpicfSyslogSeverityStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSeverityStatisticsGroup.setDescription('A collection of objects representing the severity statistics counter information.')
hpicfSyslogFacilityStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 9)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogfacilityType"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogfacilityCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogFacilityStatisticsGroup = hpicfSyslogFacilityStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFacilityStatisticsGroup.setDescription('A collection of objects representing the facility statistics counter information.')
hpicfSyslogControlGroupSmm = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 10)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlBindAddr"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlSmmLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogControlGroupSmm = hpicfSyslogControlGroupSmm.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlGroupSmm.setDescription('A collection of objects representing the log message for the standby module.')
hpicfSyslogLogMsgOptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 11)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogClearLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogLogMsgOptionsGroup = hpicfSyslogLogMsgOptionsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfSyslogLogMsgOptionsGroup.setDescription('A collection of objects representing the log message information.')
hpicfSyslogControlTransportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 12)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlTransportProtocol"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlDestinationPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogControlTransportGroup = hpicfSyslogControlTransportGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogControlTransportGroup.setDescription('A collection of objects representing the run time parameters for the transport applications. ')
hpicfSyslogServerStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 13)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerLogSent"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerLogRecv"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerLogRelay"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerSendError"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerLogResend"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerResendError"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerLogBuffered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogServerStatisticsGroup = hpicfSyslogServerStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsGroup.setDescription('A collection of objects representing the server specific statistics counter information.')
hpicfSyslogPriorityGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 14)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityFacility"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPrioritySeverity"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogSystemModule"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogPriorityGroup1 = hpicfSyslogPriorityGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPriorityGroup1.setDescription('A collection of object for Syslog priority.')
hpicfSyslogAlertsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 15)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogAlertAdminStatus"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogAlertTransmitInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogAlertsGroup = hpicfSyslogAlertsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertsGroup.setDescription('A collection of objects representing Syslog alerts information.')
hpicfSyslogOriginIdGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 16)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogOriginId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogOriginIdGroup1 = hpicfSyslogOriginIdGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOriginIdGroup1.setDescription('An object for syslog origin ID.')
hpicfSyslogLogMsgOptionsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 1, 17)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogClearLog"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogSecClearLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogLogMsgOptionsGroup1 = hpicfSyslogLogMsgOptionsGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogLogMsgOptionsGroup1.setDescription('A collection of objects representing the log message information.')
hpicfSyslogFullCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 1)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogNotificationGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogFullCompliance1 = hpicfSyslogFullCompliance1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFullCompliance1.setDescription('The compliance statement for SNMP entities which implement the SYSLOG-MIB with support for writable objects and notifications. Such an implementation can be both monitored and configured via SNMP. It can also send notifications about change in the operational status of the Syslog application. ')
hpicfSyslogFullCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 2)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogFullCompliance2 = hpicfSyslogFullCompliance2.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFullCompliance2.setDescription('The compliance statement for SNMP entities which implement the SYSLOG-MIB with support for writable objects. Such an implementation can be both monitored and configured via SNMP. ')
hpicfSyslogReadOnlyCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 4)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogNotificationGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogReadOnlyCompliance1 = hpicfSyslogReadOnlyCompliance1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogReadOnlyCompliance1.setDescription('The compliance statement for SNMP entities which implement the hpicfSyslog MIB without support for read-write (i.e. in read-only mode). It can also send notifications about change in the operational status of the Syslog application. ')
hpicfSyslogReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 5)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogOperationsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogReadOnlyCompliance2 = hpicfSyslogReadOnlyCompliance2.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogReadOnlyCompliance2.setDescription('The compliance statement for SNMP entities which implement the hpicfSyslog MIB without support for read-write (i.e. in read-only mode). ')
hpicfSyslogNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 7)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogNotificationCompliance = hpicfSyslogNotificationCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogNotificationCompliance.setDescription('The compliance statement for SNMP entities which implement the SYSLOG-MIB and support only notifications about change in the operational status of a Syslog application. ')
hpicfSyslogFullComplianceOobm = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 8)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroupOobm"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogFullComplianceOobm = hpicfSyslogFullComplianceOobm.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogFullComplianceOobm.setDescription('The compliance statement for Syslog server configuration with support for OOBM. ')
hpicfSyslogStatisticsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 9)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogGeneralStatisticsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogSeverityStatisticsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogFacilityStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogStatisticsCompliance = hpicfSyslogStatisticsCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogStatisticsCompliance.setDescription('The compliance statement for SNMP entities which implement the Syslog statistics.')
hpicfSyslogSmmLogMsgCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 10)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroupSmm"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogLogMsgOptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogSmmLogMsgCompliance = hpicfSyslogSmmLogMsgCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfSyslogSmmLogMsgCompliance.setDescription('The compliance statement for Syslog log messages for standby module.')
hpicfSyslogTransportCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 11)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlTransportGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogTransportCompliance = hpicfSyslogTransportCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogTransportCompliance.setDescription('The compliance statement for Syslog transport .')
hpicfSyslogPriorityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 12)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogPriorityGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogPriorityCompliance = hpicfSyslogPriorityCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogPriorityCompliance.setDescription('The compliance statement for Syslog priority .')
hpicfSyslogServerStatisticsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 13)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogServerStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogServerStatisticsCompliance = hpicfSyslogServerStatisticsCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogServerStatisticsCompliance.setDescription('The compliance statement for syslog server statistics .')
hpicfSyslogAlertsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 14)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogAlertsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogAlertsCompliance = hpicfSyslogAlertsCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogAlertsCompliance.setDescription('The compliance statement for Syslog alerts.')
hpicfSyslogOriginIdCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 15)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogOriginIdGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogOriginIdCompliance = hpicfSyslogOriginIdCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogOriginIdCompliance.setDescription('The compliance statement for syslog origin id.')
hpicfSyslogSmmLogMsgCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 14, 1, 3, 2, 16)).setObjects(("HP-ICF-SYSLOG-MIB", "hpicfSyslogControlGroupSmm"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogLogMsgOptionsGroup"), ("HP-ICF-SYSLOG-MIB", "hpicfSyslogLogMsgOptionsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSyslogSmmLogMsgCompliance1 = hpicfSyslogSmmLogMsgCompliance1.setStatus('current')
if mibBuilder.loadTexts: hpicfSyslogSmmLogMsgCompliance1.setDescription('The compliance statement for Syslog log messages for standby module.')
mibBuilder.exportSymbols("HP-ICF-SYSLOG-MIB", hpicfSyslogAlerts=hpicfSyslogAlerts, hpicfSyslogNotificationCompliance=hpicfSyslogNotificationCompliance, HpicfSyslogSystemModule=HpicfSyslogSystemModule, hpicfSyslogFacilityStatisticsGroup=hpicfSyslogFacilityStatisticsGroup, HpicfSyslogOriginId=HpicfSyslogOriginId, hpicfSyslogControlEntry=hpicfSyslogControlEntry, hpicfSyslogGeneralSendError=hpicfSyslogGeneralSendError, hpicfSyslogfacilityType=hpicfSyslogfacilityType, hpicfSyslogCompliances=hpicfSyslogCompliances, hpicfSyslogfacilityCounterIndex=hpicfSyslogfacilityCounterIndex, hpicfSyslogServerLogRelay=hpicfSyslogServerLogRelay, hpicfSyslogGroups=hpicfSyslogGroups, hpicfSyslogMIB=hpicfSyslogMIB, hpicfSyslogNotifications=hpicfSyslogNotifications, hpicfSyslogLogMsgOptionsGroup1=hpicfSyslogLogMsgOptionsGroup1, hpicfSyslogLogMsgOptions=hpicfSyslogLogMsgOptions, hpicfSyslogLogMsgOptionsGroup=hpicfSyslogLogMsgOptionsGroup, hpicfSyslogAlertsGroup=hpicfSyslogAlertsGroup, hpicfSyslogReadOnlyCompliance2=hpicfSyslogReadOnlyCompliance2, hpicfSyslogSystemModule=hpicfSyslogSystemModule, hpicfSyslogServerStatisticsEntry=hpicfSyslogServerStatisticsEntry, hpicfSyslogOriginIdGroup1=hpicfSyslogOriginIdGroup1, hpicfSyslogStatisticsCompliance=hpicfSyslogStatisticsCompliance, hpicfSyslogOperationsGroup=hpicfSyslogOperationsGroup, PYSNMP_MODULE_ID=hpicfSyslogMIB, hpicfSyslogStatistics=hpicfSyslogStatistics, hpicfSyslogFacilityCounterInfoTable=hpicfSyslogFacilityCounterInfoTable, hpicfSyslogAlertAdminStatus=hpicfSyslogAlertAdminStatus, hpicfSyslogOriginIdCompliance=hpicfSyslogOriginIdCompliance, hpicfSyslogGeneralLogRecv=hpicfSyslogGeneralLogRecv, hpicfSyslogGeneralLogSent=hpicfSyslogGeneralLogSent, hpicfSyslogControlBindAddrType=hpicfSyslogControlBindAddrType, hpicfSyslogServerStatisticsGroup=hpicfSyslogServerStatisticsGroup, hpicfSyslogSeverityTypeIndex=hpicfSyslogSeverityTypeIndex, hpicfSyslogConformance=hpicfSyslogConformance, hpicfSyslogControlGroupOobm=hpicfSyslogControlGroupOobm, hpicfSyslogControlTransportProtocol=hpicfSyslogControlTransportProtocol, hpicfSyslogControlTransportGroup=hpicfSyslogControlTransportGroup, hpicfSyslogPriority=hpicfSyslogPriority, hpicfSyslogOperationsCounterDiscontinuityTime=hpicfSyslogOperationsCounterDiscontinuityTime, hpicfSyslogOperationsMsgsTransmitted=hpicfSyslogOperationsMsgsTransmitted, hpicfSyslogGeneralStatisticsGroup=hpicfSyslogGeneralStatisticsGroup, hpicfSyslogSeverityStatisticsGroup=hpicfSyslogSeverityStatisticsGroup, hpicfSyslogSmmLogMsgCompliance1=hpicfSyslogSmmLogMsgCompliance1, hpicfSyslogReadOnlyCompliance1=hpicfSyslogReadOnlyCompliance1, hpicfSyslogServerLogBuffered=hpicfSyslogServerLogBuffered, hpicfSyslogServerLogRecv=hpicfSyslogServerLogRecv, hpicfSyslogStatusChanged=hpicfSyslogStatusChanged, hpicfSyslogOperationsStatus=hpicfSyslogOperationsStatus, hpicfSyslogSmmLogMsgCompliance=hpicfSyslogSmmLogMsgCompliance, HpicfSyslogSeverity=HpicfSyslogSeverity, hpicfSyslogOperationsLastMsgTransmittedTime=hpicfSyslogOperationsLastMsgTransmittedTime, hpicfSyslogAlertIndex=hpicfSyslogAlertIndex, hpicfSyslogServerSendError=hpicfSyslogServerSendError, hpicfSyslogControlBindAddr=hpicfSyslogControlBindAddr, hpicfSyslogControlGroupSmm=hpicfSyslogControlGroupSmm, hpicfSyslogFullCompliance1=hpicfSyslogFullCompliance1, hpicfSyslogSecClearLog=hpicfSyslogSecClearLog, hpicfSyslogGeneralResendError=hpicfSyslogGeneralResendError, hpicfSyslogPriorityGroup=hpicfSyslogPriorityGroup, hpicfSyslogServerLogSent=hpicfSyslogServerLogSent, hpicfSyslogControlBindAddrIsOobm=hpicfSyslogControlBindAddrIsOobm, hpicfSyslogPrioritySeverity=hpicfSyslogPrioritySeverity, hpicfSyslogGeneralLogBuffered=hpicfSyslogGeneralLogBuffered, hpicfSyslogControlDestinationPort=hpicfSyslogControlDestinationPort, hpicfSyslogServerResendError=hpicfSyslogServerResendError, hpicfSyslogControlTable=hpicfSyslogControlTable, hpicfSyslogPriorityCompliance=hpicfSyslogPriorityCompliance, hpicfSyslogFullCompliance2=hpicfSyslogFullCompliance2, hpicfSyslogServerLogResend=hpicfSyslogServerLogResend, hpicfSyslogOperationsMsgsDropped=hpicfSyslogOperationsMsgsDropped, hpicfSyslogClearLog=hpicfSyslogClearLog, hpicfSyslogSeverityCounter=hpicfSyslogSeverityCounter, hpicfSyslogOperations=hpicfSyslogOperations, hpicfSyslogAlertsCompliance=hpicfSyslogAlertsCompliance, hpicfSyslogObjects=hpicfSyslogObjects, hpicfSyslogTransportCompliance=hpicfSyslogTransportCompliance, hpicfSyslogPriorityGroup1=hpicfSyslogPriorityGroup1, hpicfSyslogfacilityCounter=hpicfSyslogfacilityCounter, hpicfSyslogControlGroup=hpicfSyslogControlGroup, hpicfSyslogGeneralStatistics=hpicfSyslogGeneralStatistics, hpicfSyslogGeneralLogResend=hpicfSyslogGeneralLogResend, hpicfSyslogControlIndex=hpicfSyslogControlIndex, hpicfSyslogSeverityStatistics=hpicfSyslogSeverityStatistics, hpicfSyslogServerStatisticsTable=hpicfSyslogServerStatisticsTable, hpicfSyslogFullComplianceOobm=hpicfSyslogFullComplianceOobm, hpicfSyslogPriorityDescr=hpicfSyslogPriorityDescr, hpicfSyslogControlSmmLog=hpicfSyslogControlSmmLog, hpicfSyslogSeverityCounterInfoTable=hpicfSyslogSeverityCounterInfoTable, HpicfSyslogFacility=HpicfSyslogFacility, hpicfSyslogPriorityFacility=hpicfSyslogPriorityFacility, hpicfSyslogGeneralLogRelay=hpicfSyslogGeneralLogRelay, hpicfSyslogControlDescr=hpicfSyslogControlDescr, hpicfSyslogFacilityStatistics=hpicfSyslogFacilityStatistics, hpicfSyslogServerStatisticsCompliance=hpicfSyslogServerStatisticsCompliance, hpicfSyslogNotificationGroup=hpicfSyslogNotificationGroup, hpicfSyslogSeverityCounterInfoEntry=hpicfSyslogSeverityCounterInfoEntry, hpicfSyslogAlertsTable=hpicfSyslogAlertsTable, hpicfSyslogAlertsEntry=hpicfSyslogAlertsEntry, hpicfSyslogOperationsLastError=hpicfSyslogOperationsLastError, hpicfSyslogSeverityType=hpicfSyslogSeverityType, hpicfSyslogOperationsLastErrorTime=hpicfSyslogOperationsLastErrorTime, hpicfSyslogAlertTransmitInterval=hpicfSyslogAlertTransmitInterval, hpicfSyslogOperationsStartTime=hpicfSyslogOperationsStartTime, hpicfSyslogFacilityCounterInfoEntry=hpicfSyslogFacilityCounterInfoEntry, hpicfSyslogControlRowStatus=hpicfSyslogControlRowStatus, hpicfSyslogOriginId=hpicfSyslogOriginId)
