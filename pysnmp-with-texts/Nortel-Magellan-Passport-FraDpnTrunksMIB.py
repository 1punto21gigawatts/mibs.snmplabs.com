#
# PySNMP MIB module Nortel-Magellan-Passport-FraDpnTrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FraDpnTrunksMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:27:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
dpnGateIndex, dpnGate = mibBuilder.importSymbols("Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex", "dpnGate")
RowPointer, Counter32, RowStatus, Gauge32, Unsigned32, StorageType, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowPointer", "Counter32", "RowStatus", "Gauge32", "Unsigned32", "StorageType", "DisplayString")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, iso, ModuleIdentity, Integer32, IpAddress, Counter32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Unsigned32, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "ModuleIdentity", "Integer32", "IpAddress", "Counter32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Unsigned32", "NotificationType", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
fraDpnTrunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68))
dpnGateFrAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4))
dpnGateFrAccessRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1), )
if mibBuilder.loadTexts: dpnGateFrAccessRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessRowStatusTable.setDescription('This entry controls the addition and deletion of dpnGateFrAccess components.')
dpnGateFrAccessRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessRowStatusEntry.setDescription('A single entry in the table represents a single dpnGateFrAccess component.')
dpnGateFrAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessRowStatus.setDescription('This variable is used as the basis for SNMP naming of dpnGateFrAccess components. These components can be added and deleted.')
dpnGateFrAccessComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
dpnGateFrAccessStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStorageType.setDescription('This variable represents the storage type value for the dpnGateFrAccess tables.')
dpnGateFrAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: dpnGateFrAccessIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessIndex.setDescription('This variable represents the index for the dpnGateFrAccess tables.')
dpnGateFrAccessProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 10), )
if mibBuilder.loadTexts: dpnGateFrAccessProvTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessProvTable.setDescription('This group of provisionable attributes contains the parameters used by Unacknowledged, Utp, and FrAccess for monitoring link quality.')
dpnGateFrAccessProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessProvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessProvEntry.setDescription('An entry in the dpnGateFrAccessProvTable.')
dpnGateFrAccessMaximumErroredInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessMaximumErroredInterval.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessMaximumErroredInterval.setDescription('This attribute specifies the interval time over which the error threshold (as specified by receiveErrorSensitivity) must be continuously exceeded before the Unacknowledged, Utp, or FrAccess component can be degraded. Once the error interval count exceeds the provisioned value, the Unacknowledged, Utp, or FrAccess component issues an alarm indicating that link quality has degraded, and it disables its parent component. The exception to this is a value of zero, the default, which indicates that the mechanism is completely disabled.')
dpnGateFrAccessReceiveErrorSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10), )).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessReceiveErrorSensitivity.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessReceiveErrorSensitivity.setDescription('This attribute is the allowable error rate beyond which the Unacknowledged, Utp, or FrAccess component can be degraded if it persists for a duration longer than the maximumErrorInterval. The threshold is expressed as a percentage of number of errored frames in the last interval per number of frames received in the last interval. The exception to this is a value of zero, which indicates that the mechanism is completely disabled. The configurable values are: 0 = the mechanism is completely disabled 1 = 1/(2**1) 2 = 1/(2**2) 3 = 1/(2**3) : 10 = 1/(2**10)')
dpnGateFrAccessStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11), )
if mibBuilder.loadTexts: dpnGateFrAccessStateTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStateTable.setDescription('This group contains the three OSI State attributes and the six OSI Status attributes. The descriptions generically indicate what each attribute implies about the component. Note that not all the values and state combinations described here are supported by every component which uses this group. For component-specific information and the valid state combinations, refer to NTP 241- 7001-150, Passport Operations and Maintenance Guide.')
dpnGateFrAccessStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessStateEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStateEntry.setDescription('An entry in the dpnGateFrAccessStateTable.')
dpnGateFrAccessAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessAdminState.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessAdminState.setDescription('This attribute indicates the OSI Administrative State of the component. The value locked indicates that the component is administratively prohibited from providing services for its users. A Lock or Lock - force command has been previously issued for this component. When the value is locked, the value of usageState must be idle. The value shuttingDown indicates that the component is administratively permitted to provide service to its existing users only. A Lock command was issued against the component and it is in the process of shutting down. The value unlocked indicates that the component is administratively permitted to provide services for its users. To enter this state, issue an Unlock command to this component. The OSI Status attributes, if supported by the component, may provide more details, qualifying the state of the component.')
dpnGateFrAccessOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessOperationalState.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessOperationalState.setDescription('This attribute indicates the OSI Operational State of the component. The value enabled indicates that the component is available for operation. Note that if adminState is locked, it would still not be providing service. The value disabled indicates that the component is not available for operation. For example, something is wrong with the component itself, or with another component on which this one depends. If the value is disabled, the usageState must be idle. The OSI Status attributes, if supported by the component, may provide more details, qualifying the state of the component.')
dpnGateFrAccessUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessUsageState.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessUsageState.setDescription('This attribute indicates the OSI Usage State of the component. The value idle indicates that the component is not currently in use. The value active indicates that the component is in use and has spare capacity to provide for additional users. The value busy indicates that the component is in use and has no spare operating capacity for additional users at this time. The OSI Status attributes, if supported by the component, may provide more details, qualifying the state of the component.')
dpnGateFrAccessAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessAvailabilityStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessAvailabilityStatus.setDescription('If supported by the component, this attribute indicates the OSI Availability status of the component. Note that, even though it is defined as a multi-valued set, at most one value is shown to the user. When no values are in the set, this indicates that either the attribute is not supported or that none of the status conditions described below are present. The value inTest indicates that the resource is undergoing a test procedure. If adminState is locked or shuttingDown, the normal users are precluded from using the resource and controlStatus is reservedForTest. Tests that do not exclude additional users can be present in any operational or administrative state but the reservedForTest condition should not be present. The value failed indicates that the component has an internal fault that prevents it from operating. The operationalState is disabled. The value dependency indicates that the component cannot operate because some other resource on which it depends is unavailable. The operationalState is disabled. The value powerOff indicates the resource requires power to be applied and it is not powered on. The operationalState is disabled. The value offLine indicates the resource requires a routine operation (either manual, automatic, or both) to be performed to place it on-line and make it available for use. The operationalState is disabled. The value offDuty indicates the resource is inactive in accordance with a predetermined time schedule. In the absence of other disabling conditions, the operationalState is enabled or disabled. The value degraded indicates the service provided by the component is degraded in some way, such as in speed or operating capacity. However, the resource remains available for service. The operationalState is enabled. The value notInstalled indicates the resource is not present. The operationalState is disabled. The value logFull is not used. Description of bits: inTest(0) failed(1) powerOff(2) offLine(3) offDuty(4) dependency(5) degraded(6) notInstalled(7) logFull(8)')
dpnGateFrAccessProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessProceduralStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessProceduralStatus.setDescription("If supported by the component, this attribute indicates the OSI Procedural status of the component. Note that, even though it is defined as a multi-valued set, at most one value is shown to the user. When no values are in the set, this indicates that either the attribute is not supported or that none of the status conditions described below are present. The value initializationRequired indicates (for a resource which doesn't initialize autonomously) that initialization is required before it can perform its normal functions, and this procedure has not been initiated. The operationalState is disabled. The value notInitialized indicates (for a resource which does initialize autonomously) that initialization is required before it can perform its normal functions, and this procedure has not been initiated. The operationalState may be enabled or disabled. The value initializing indicates that initialization has been initiated but is not yet complete. The operationalState may be enabled or disabled. The value reporting indicates the resource has completed some processing operation and is notifying the results. The operationalState is enabled. The value terminating indicates the component is in a termination phase. If the resource doesn't reinitialize autonomously, operationalState is disabled; otherwise it is enabled or disabled. Description of bits: initializationRequired(0) notInitialized(1) initializing(2) reporting(3) terminating(4)")
dpnGateFrAccessControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessControlStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessControlStatus.setDescription('If supported by the component, this attribute indicates the OSI Control status of the component. Note that, even though it is defined as a multi-valued set, at most one value is shown to the user. When no values are in the set, this indicates that either the attribute is not supported or that none of the status conditions described below are present. The value subjectToTest indicates the resource is available but tests may be conducted simultaneously at unpredictable times, which may cause it to exhibit unusual characteristics. The value partOfServicesLocked indicates that part of the service is restricted from users of a resource. The adminState is unlocked. The value reservedForTest indicates that the component is administratively unavailable because it is undergoing a test procedure. The adminState is locked. The value suspended indicates that the service has been administratively suspended. Description of bits: subjectToTest(0) partOfServicesLocked(1) reservedForTest(2) suspended(3)')
dpnGateFrAccessAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessAlarmStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessAlarmStatus.setDescription('If supported by the component, this attribute indicates the OSI Alarm status of the component. Note that, even though it is defined as a multi-valued set, at most one value is shown to the user. When no values are in the set, this indicates that either the attribute is not supported or that none of the status conditions described below are present. The value underRepair indicates the component is currently being repaired. The operationalState is enabled or disabled. The value critical indicates one or more critical alarms are outstanding against the component. Other, less severe, alarms may also be outstanding. The operationalState is enabled or disabled. The value major indicates one or more major alarms are outstanding against the component. Other, less severe, alarms may also be outstanding. The operationalState is enabled or disabled. The value minor indicates one or more minor alarms are outstanding against the component. Other, less severe, alarms may also be outstanding. The operationalState is enabled or disabled. The value alarmOutstanding generically indicates that an alarm of some severity is outstanding against the component. Description of bits: underRepair(0) critical(1) major(2) minor(3) alarmOutstanding(4)')
dpnGateFrAccessStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessStandbyStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStandbyStatus.setDescription('If supported by the component, this attribute indicates the OSI Standby status of the component. The value notSet indicates that either the attribute is not supported or that none of the status conditions described below are present. Note that this is a non-standard value, used because the original specification indicated this attribute was set-valued and thus, did not provide a value to indicate that none of the other three are applicable. The value hotStandby indicates that the resource is not providing service but will be immediately able to take over the role of the resource to be backed up, without initialization activity, and containing the same information as the resource to be backed up. The value coldStandby indicates the resource is a backup for another resource but will not be immediately able to take over the role of the backed up resource and will require some initialization activity. The value providingService indicates that this component, as a backup resource, is currently backing up another resource.')
dpnGateFrAccessUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessUnknownStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessUnknownStatus.setDescription('This attribute indicates the OSI Unknown status of the component. The value false indicates that all of the other OSI State and Status attribute values can be considered accurate. The value true indicates that the actual state of the component is not known for sure.')
dpnGateFrAccessOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 12), )
if mibBuilder.loadTexts: dpnGateFrAccessOpTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessOpTable.setDescription('This group of attributes contains the set of LTP operational parameters measured and maintained by this component.')
dpnGateFrAccessOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessOpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessOpEntry.setDescription('An entry in the dpnGateFrAccessOpTable.')
dpnGateFrAccessRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 12, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessRoundTripDelay.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessRoundTripDelay.setDescription('This is the measured Round Trip Delay (ms) discovered with the remote through the LTP staging protocol. The value includes emission, propagation, and queuing delays. A 2 byte control frame is used to perform the measurement. A value of zero is displayed when the link is disabled or the measured Round Trip Delay is unknown.')
dpnGateFrAccessStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13), )
if mibBuilder.loadTexts: dpnGateFrAccessStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStatsTable.setDescription('This group contains the operational statistics for FrAccess.')
dpnGateFrAccessStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessStatsEntry.setDescription('An entry in the dpnGateFrAccessStatsTable.')
dpnGateFrAccessReceivedBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessReceivedBytesFromIf.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessReceivedBytesFromIf.setDescription('This attribute counts the number of bytes received by FrAccess in information frames. When the maximum count is reached the count wraps to zero.')
dpnGateFrAccessLostFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessLostFramesFromIf.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessLostFramesFromIf.setDescription('This attribute counts the frames lost in the direction from interface, the loss of which is detected based on the sequence number mechanism. The reason for a loss may be the congestion-related loss in the external frame relay network, or errors/congestion developing in the FrMux service. When FrMux statistics do not show errors/congestion developing internally in FrMux, then the losses visible through this statistic should be attributed to the external frame relay network. When the maximum count is reached the count wraps to zero.')
dpnGateFrAccessDiscardBadFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessDiscardBadFromIf.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessDiscardBadFromIf.setDescription("This attribute counts the number of frames discarded in the direction 'from interface', because they are unknown to the FrAccess protocol. When the maximum count is reached the count wraps to zero.")
dpnGateFrAccessDiscardExcessToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessDiscardExcessToIf.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessDiscardExcessToIf.setDescription("This attribute counts the number of frames discarded in the direction 'to interface' because of congestion on the transmit queue. When the maximum count is reached the count wraps to zero.")
dpnGateFrAccessFrMuxSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2))
dpnGateFrAccessFrMuxSetupRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1), )
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatusTable.setDescription('This entry controls the addition and deletion of dpnGateFrAccessFrMuxSetup components.')
dpnGateFrAccessFrMuxSetupRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatusEntry.setDescription('A single entry in the table represents a single dpnGateFrAccessFrMuxSetup component.')
dpnGateFrAccessFrMuxSetupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupRowStatus.setDescription('This variable is used as the basis for SNMP naming of dpnGateFrAccessFrMuxSetup components. These components cannot be added nor deleted.')
dpnGateFrAccessFrMuxSetupComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
dpnGateFrAccessFrMuxSetupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupStorageType.setDescription('This variable represents the storage type value for the dpnGateFrAccessFrMuxSetup tables.')
dpnGateFrAccessFrMuxSetupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupIndex.setDescription('This variable represents the index for the dpnGateFrAccessFrMuxSetup tables.')
dpnGateFrAccessFrMuxSetupTrafficDescrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 10), )
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupTrafficDescrTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupTrafficDescrTable.setDescription('This group contains the provisionable attributes for the application of which this FrMuxSetup is a subcomponent. The parameters are used for maximum frame size checking and traffic shaping and are to be passed over to FrMux Dlci associated with the application. The attributes in this group are defined in T1.606 Addendum 1.')
dpnGateFrAccessFrMuxSetupTrafficDescrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupTrafficDescrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupTrafficDescrEntry.setDescription('An entry in the dpnGateFrAccessFrMuxSetupTrafficDescrTable.')
dpnGateFrAccessFrMuxSetupCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4800, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupCommittedInformationRate.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupCommittedInformationRate.setDescription('This attribute specifies, in bit/s, the committed information rate (CIR) to which the traffic transmitted towards the interface is shaped. The minimum value is 4800 bit/s.')
dpnGateFrAccessFrMuxSetupCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupCommittedBurstSize.setStatus('obsolete')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupCommittedBurstSize.setDescription('THIS ATTRIBUTE IS NOT BEING USED.')
dpnGateFrAccessFrMuxSetupMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupMaximumFrameSize.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupMaximumFrameSize.setDescription('This attribute specifies the maximum number of octets which may be included in the information field. The frame relay header and CRC octets are not included in this definition. This attribute corresponds to the dN1 parameter described in the Vendor Forum Specification.')
dpnGateFrAccessFrMuxSetupDlciCompNameOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 11), )
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompNameOpTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompNameOpTable.setDescription('This group contains the component name of the Dlci which carries the traffic for this application.')
dpnGateFrAccessFrMuxSetupDlciCompNameOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompNameOpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompNameOpEntry.setDescription('An entry in the dpnGateFrAccessFrMuxSetupDlciCompNameOpTable.')
dpnGateFrAccessFrMuxSetupDlciCompName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 11, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompName.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupDlciCompName.setDescription('This attribute specifies the component name of the Dlci with which the application using this FrMuxSetup component is associated. The name is a string FrMux/n Dlci/m. For a PVC this is the same component name as provisioned under the subcomponent FrMuxPvcSetup.')
dpnGateFrAccessFrMuxSetupPvcSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2))
dpnGateFrAccessFrMuxSetupPvcSetupRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1), )
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatusTable.setDescription('This entry controls the addition and deletion of dpnGateFrAccessFrMuxSetupPvcSetup components.')
dpnGateFrAccessFrMuxSetupPvcSetupRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupPvcSetupIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatusEntry.setDescription('A single entry in the table represents a single dpnGateFrAccessFrMuxSetupPvcSetup component.')
dpnGateFrAccessFrMuxSetupPvcSetupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupRowStatus.setDescription('This variable is used as the basis for SNMP naming of dpnGateFrAccessFrMuxSetupPvcSetup components. These components cannot be added nor deleted.')
dpnGateFrAccessFrMuxSetupPvcSetupComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
dpnGateFrAccessFrMuxSetupPvcSetupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupStorageType.setDescription('This variable represents the storage type value for the dpnGateFrAccessFrMuxSetupPvcSetup tables.')
dpnGateFrAccessFrMuxSetupPvcSetupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupIndex.setDescription('This variable represents the index for the dpnGateFrAccessFrMuxSetupPvcSetup tables.')
dpnGateFrAccessFrMuxSetupPvcSetupProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 10), )
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupProvTable.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupProvTable.setDescription('This group contains provisionable attributes for setting up a Dlci associated with the application using the FrMuxSetup component. The Dlci is of the PVC type.')
dpnGateFrAccessFrMuxSetupPvcSetupProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-DpnTrunksMIB", "dpnGateIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupIndex"), (0, "Nortel-Magellan-Passport-FraDpnTrunksMIB", "dpnGateFrAccessFrMuxSetupPvcSetupIndex"))
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupProvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupProvEntry.setDescription('An entry in the dpnGateFrAccessFrMuxSetupPvcSetupProvTable.')
dpnGateFrAccessFrMuxSetupPvcSetupDlciName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 61, 4, 2, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupDlciName.setStatus('mandatory')
if mibBuilder.loadTexts: dpnGateFrAccessFrMuxSetupPvcSetupDlciName.setDescription('This attribute is the link to the Dlci which is associated with the application using the FrMuxSetup component.')
fraDpnTrunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 1))
fraDpnTrunksGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 1, 5))
fraDpnTrunksGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 1, 5, 1))
fraDpnTrunksGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 1, 5, 1, 2))
fraDpnTrunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 3))
fraDpnTrunksCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 3, 5))
fraDpnTrunksCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 3, 5, 1))
fraDpnTrunksCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 68, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FraDpnTrunksMIB", dpnGateFrAccessFrMuxSetupPvcSetupRowStatusTable=dpnGateFrAccessFrMuxSetupPvcSetupRowStatusTable, dpnGateFrAccessProvEntry=dpnGateFrAccessProvEntry, fraDpnTrunksGroupBE00=fraDpnTrunksGroupBE00, dpnGateFrAccessProceduralStatus=dpnGateFrAccessProceduralStatus, fraDpnTrunksGroup=fraDpnTrunksGroup, dpnGateFrAccessAvailabilityStatus=dpnGateFrAccessAvailabilityStatus, dpnGateFrAccessAlarmStatus=dpnGateFrAccessAlarmStatus, dpnGateFrAccessFrMuxSetupPvcSetupProvTable=dpnGateFrAccessFrMuxSetupPvcSetupProvTable, fraDpnTrunksGroupBE=fraDpnTrunksGroupBE, dpnGateFrAccessRoundTripDelay=dpnGateFrAccessRoundTripDelay, dpnGateFrAccessFrMuxSetupDlciCompName=dpnGateFrAccessFrMuxSetupDlciCompName, fraDpnTrunksCapabilitiesBE00=fraDpnTrunksCapabilitiesBE00, dpnGateFrAccessFrMuxSetupComponentName=dpnGateFrAccessFrMuxSetupComponentName, dpnGateFrAccessRowStatusEntry=dpnGateFrAccessRowStatusEntry, dpnGateFrAccessFrMuxSetupPvcSetupStorageType=dpnGateFrAccessFrMuxSetupPvcSetupStorageType, dpnGateFrAccessRowStatusTable=dpnGateFrAccessRowStatusTable, dpnGateFrAccessFrMuxSetupTrafficDescrEntry=dpnGateFrAccessFrMuxSetupTrafficDescrEntry, fraDpnTrunksCapabilitiesBE=fraDpnTrunksCapabilitiesBE, dpnGateFrAccessFrMuxSetupStorageType=dpnGateFrAccessFrMuxSetupStorageType, dpnGateFrAccessFrMuxSetupRowStatus=dpnGateFrAccessFrMuxSetupRowStatus, dpnGateFrAccessFrMuxSetupPvcSetupRowStatus=dpnGateFrAccessFrMuxSetupPvcSetupRowStatus, dpnGateFrAccessStandbyStatus=dpnGateFrAccessStandbyStatus, dpnGateFrAccessStatsTable=dpnGateFrAccessStatsTable, dpnGateFrAccessLostFramesFromIf=dpnGateFrAccessLostFramesFromIf, dpnGateFrAccessIndex=dpnGateFrAccessIndex, dpnGateFrAccessControlStatus=dpnGateFrAccessControlStatus, fraDpnTrunksGroupBE00A=fraDpnTrunksGroupBE00A, dpnGateFrAccessFrMuxSetupTrafficDescrTable=dpnGateFrAccessFrMuxSetupTrafficDescrTable, dpnGateFrAccessFrMuxSetupPvcSetup=dpnGateFrAccessFrMuxSetupPvcSetup, dpnGateFrAccessRowStatus=dpnGateFrAccessRowStatus, fraDpnTrunksMIB=fraDpnTrunksMIB, fraDpnTrunksCapabilitiesBE00A=fraDpnTrunksCapabilitiesBE00A, dpnGateFrAccessReceiveErrorSensitivity=dpnGateFrAccessReceiveErrorSensitivity, dpnGateFrAccessAdminState=dpnGateFrAccessAdminState, dpnGateFrAccessOpTable=dpnGateFrAccessOpTable, dpnGateFrAccessDiscardExcessToIf=dpnGateFrAccessDiscardExcessToIf, dpnGateFrAccessFrMuxSetupPvcSetupIndex=dpnGateFrAccessFrMuxSetupPvcSetupIndex, fraDpnTrunksCapabilities=fraDpnTrunksCapabilities, dpnGateFrAccessProvTable=dpnGateFrAccessProvTable, dpnGateFrAccessComponentName=dpnGateFrAccessComponentName, dpnGateFrAccessFrMuxSetupDlciCompNameOpTable=dpnGateFrAccessFrMuxSetupDlciCompNameOpTable, dpnGateFrAccessFrMuxSetupPvcSetupComponentName=dpnGateFrAccessFrMuxSetupPvcSetupComponentName, dpnGateFrAccessStorageType=dpnGateFrAccessStorageType, dpnGateFrAccessStatsEntry=dpnGateFrAccessStatsEntry, dpnGateFrAccessFrMuxSetup=dpnGateFrAccessFrMuxSetup, dpnGateFrAccessFrMuxSetupRowStatusTable=dpnGateFrAccessFrMuxSetupRowStatusTable, dpnGateFrAccessFrMuxSetupIndex=dpnGateFrAccessFrMuxSetupIndex, dpnGateFrAccessReceivedBytesFromIf=dpnGateFrAccessReceivedBytesFromIf, dpnGateFrAccessOpEntry=dpnGateFrAccessOpEntry, dpnGateFrAccessFrMuxSetupPvcSetupProvEntry=dpnGateFrAccessFrMuxSetupPvcSetupProvEntry, dpnGateFrAccessFrMuxSetupPvcSetupRowStatusEntry=dpnGateFrAccessFrMuxSetupPvcSetupRowStatusEntry, dpnGateFrAccessFrMuxSetupRowStatusEntry=dpnGateFrAccessFrMuxSetupRowStatusEntry, dpnGateFrAccessUsageState=dpnGateFrAccessUsageState, dpnGateFrAccess=dpnGateFrAccess, dpnGateFrAccessFrMuxSetupMaximumFrameSize=dpnGateFrAccessFrMuxSetupMaximumFrameSize, dpnGateFrAccessOperationalState=dpnGateFrAccessOperationalState, dpnGateFrAccessFrMuxSetupCommittedInformationRate=dpnGateFrAccessFrMuxSetupCommittedInformationRate, dpnGateFrAccessFrMuxSetupDlciCompNameOpEntry=dpnGateFrAccessFrMuxSetupDlciCompNameOpEntry, dpnGateFrAccessStateTable=dpnGateFrAccessStateTable, dpnGateFrAccessMaximumErroredInterval=dpnGateFrAccessMaximumErroredInterval, dpnGateFrAccessFrMuxSetupCommittedBurstSize=dpnGateFrAccessFrMuxSetupCommittedBurstSize, dpnGateFrAccessUnknownStatus=dpnGateFrAccessUnknownStatus, dpnGateFrAccessFrMuxSetupPvcSetupDlciName=dpnGateFrAccessFrMuxSetupPvcSetupDlciName, dpnGateFrAccessStateEntry=dpnGateFrAccessStateEntry, dpnGateFrAccessDiscardBadFromIf=dpnGateFrAccessDiscardBadFromIf)
