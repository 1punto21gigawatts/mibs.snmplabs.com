#
# PySNMP MIB module MRV-IR-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IR-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
irCharPortIndex, irLdAlarmTrapSeverity, irLdAlarmContactState, irLdAlarmPointIndex, irLdAlarmPortIndex, irHumidityTrapSeverity, irHumidityThresholdLow, irHumidityThresholdHigh, irTempThresholdHigh, irTempThresholdLow, irTempValue, irLdAlarmDescription, irHumidityValue, irLdAlarmName, irTempTrapSeverity, irLdAlarmCount = mibBuilder.importSymbols("MRV-IR-CHAR-MIB", "irCharPortIndex", "irLdAlarmTrapSeverity", "irLdAlarmContactState", "irLdAlarmPointIndex", "irLdAlarmPortIndex", "irHumidityTrapSeverity", "irHumidityThresholdLow", "irHumidityThresholdHigh", "irTempThresholdHigh", "irTempThresholdLow", "irTempValue", "irLdAlarmDescription", "irHumidityValue", "irLdAlarmName", "irTempTrapSeverity", "irLdAlarmCount")
irAlarmPortIndex, irAnalogSlotIndex, irAnalogDescription, irHdamPowerPortIndex, irHdamPowerIndex, irAnalogThresholdSeverity, irAnalogName, irHdamPowerStatus, irHdamPortIndex, irAnalogThresholdLowAlarmCount, irAlarmDescription, irAnalogPortIndex, irAnalogThresholdHighAlarmCount, irAlarmPointIndex, irAlarmCount, irAlarmName, irAlarmTrapSeverity, irAlarmContactState, irAnalogCalValue, irAlarmSlotIndex, irAnalogPointIndex = mibBuilder.importSymbols("MRV-IR-HDAM-MIB", "irAlarmPortIndex", "irAnalogSlotIndex", "irAnalogDescription", "irHdamPowerPortIndex", "irHdamPowerIndex", "irAnalogThresholdSeverity", "irAnalogName", "irHdamPowerStatus", "irHdamPortIndex", "irAnalogThresholdLowAlarmCount", "irAlarmDescription", "irAnalogPortIndex", "irAnalogThresholdHighAlarmCount", "irAlarmPointIndex", "irAlarmCount", "irAlarmName", "irAlarmTrapSeverity", "irAlarmContactState", "irAnalogCalValue", "irAlarmSlotIndex", "irAnalogPointIndex")
mrvLx, irSysTempHysteresis, ipmiThresholdDirection, ipmiDiscreteSensorName, irEnetPortLinkStatus, irEnetPortIndex, irSysTempThresholdLow, ipmiThresholdSensorName, irPowerStatus, ipmiDiscreteOffset, ipmiThresholdAssert, ipmiThresholdType, irPowerIndex, irSysTempThresholdHigh, irSysCurrentTemp = mibBuilder.importSymbols("MRV-IR-SYSTEM-MIB", "mrvLx", "irSysTempHysteresis", "ipmiThresholdDirection", "ipmiDiscreteSensorName", "irEnetPortLinkStatus", "irEnetPortIndex", "irSysTempThresholdLow", "ipmiThresholdSensorName", "irPowerStatus", "ipmiDiscreteOffset", "ipmiThresholdAssert", "ipmiThresholdType", "irPowerIndex", "irSysTempThresholdHigh", "irSysCurrentTemp")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, Bits, ModuleIdentity, iso, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, MibIdentifier, Gauge32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Bits", "ModuleIdentity", "iso", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "MibIdentifier", "Gauge32", "IpAddress", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
irTrapMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 33, 100, 3))
if mibBuilder.loadTexts: irTrapMib.setLastUpdated('200703220000Z')
if mibBuilder.loadTexts: irTrapMib.setOrganization('MRV Communications - BPD Division')
if mibBuilder.loadTexts: irTrapMib.setContactInfo('Postal: MRV Communications, Inc. 295 Foster Street Littleton, MA 01460')
if mibBuilder.loadTexts: irTrapMib.setDescription('This is the MRV LX Trap MIB module.')
irTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 3, 1))
irTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 3, 2))
irTextString = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 3, 1, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: irTextString.setStatus('current')
if mibBuilder.loadTexts: irTextString.setDescription('An ascii text string.')
irTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 3, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: irTimeStamp.setStatus('current')
if mibBuilder.loadTexts: irTimeStamp.setDescription('A text string containing timestamp.')
irUserName = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 3, 1, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: irUserName.setStatus('current')
if mibBuilder.loadTexts: irUserName.setDescription('A text string used for a user name.')
irIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 3, 1, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: irIpAddress.setStatus('current')
if mibBuilder.loadTexts: irIpAddress.setDescription('A text string used for an ip address.')
irNotifyEvent = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 1)).setObjects(("MRV-IR-TRAP-MIB", "irTextString"))
if mibBuilder.loadTexts: irNotifyEvent.setStatus('current')
if mibBuilder.loadTexts: irNotifyEvent.setDescription('A notification sent to indicate a system event. irTextString object provides a description of the event.')
irTempHighTholdAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 2)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irTempValue"), ("MRV-IR-CHAR-MIB", "irTempThresholdHigh"), ("MRV-IR-CHAR-MIB", "irTempTrapSeverity"))
if mibBuilder.loadTexts: irTempHighTholdAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irTempHighTholdAlarmRaised.setDescription('This trap indicates that the current temp value has gone above the value set in irTempThresholdHigh object. irTempValue object indicates the current temp value.')
irTempHighTholdAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 3)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irTempValue"), ("MRV-IR-CHAR-MIB", "irTempThresholdHigh"), ("MRV-IR-CHAR-MIB", "irTempTrapSeverity"))
if mibBuilder.loadTexts: irTempHighTholdAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irTempHighTholdAlarmCleared.setDescription('This trap indicates that the current temp value has dropped below the value set in irTempThresholdHigh object after having gone above that value. irTempValue object indicates the current temp value.')
irTempLowTholdAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 4)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irTempValue"), ("MRV-IR-CHAR-MIB", "irTempThresholdLow"), ("MRV-IR-CHAR-MIB", "irTempTrapSeverity"))
if mibBuilder.loadTexts: irTempLowTholdAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irTempLowTholdAlarmRaised.setDescription('This trap indicates that the current temp value has dropped below the value set in irTempThresholdLow object. irTempValue object indicates the current temp value.')
irTempLowTholdAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 5)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irTempValue"), ("MRV-IR-CHAR-MIB", "irTempThresholdLow"), ("MRV-IR-CHAR-MIB", "irTempTrapSeverity"))
if mibBuilder.loadTexts: irTempLowTholdAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irTempLowTholdAlarmCleared.setDescription('This trap indicates that the current temp value has returned above the value set in irTempThresholdLow object after having fallen below that value. irTempValue object indicates the current temp value.')
irHumidityHighTholdAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 6)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irHumidityValue"), ("MRV-IR-CHAR-MIB", "irHumidityThresholdHigh"), ("MRV-IR-CHAR-MIB", "irHumidityTrapSeverity"))
if mibBuilder.loadTexts: irHumidityHighTholdAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irHumidityHighTholdAlarmRaised.setDescription('This trap indicates that the current humidity value has gone above the value set in irHumidityThresholdHigh object. irHumidityValue object indicates the current humidity value.')
irHumidityHighTholdAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 7)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irHumidityValue"), ("MRV-IR-CHAR-MIB", "irHumidityThresholdHigh"), ("MRV-IR-CHAR-MIB", "irHumidityTrapSeverity"))
if mibBuilder.loadTexts: irHumidityHighTholdAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irHumidityHighTholdAlarmCleared.setDescription('This trap indicates that the current temp value has dropped below the value set in irHumidityThresholdHigh object after having gone above that value. irHumidityValue object indicates the current humidity value.')
irHumidityLowTholdAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 8)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irHumidityValue"), ("MRV-IR-CHAR-MIB", "irHumidityThresholdLow"), ("MRV-IR-CHAR-MIB", "irHumidityTrapSeverity"))
if mibBuilder.loadTexts: irHumidityLowTholdAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irHumidityLowTholdAlarmRaised.setDescription('This trap indicates that the current humidity value has dropped below the value set in irHumidityThresholdLow object. irHumidityValue object indicates the current humidity value.')
irHumidityLowTholdAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 9)).setObjects(("MRV-IR-CHAR-MIB", "irCharPortIndex"), ("MRV-IR-CHAR-MIB", "irHumidityValue"), ("MRV-IR-CHAR-MIB", "irHumidityThresholdLow"), ("MRV-IR-CHAR-MIB", "irHumidityTrapSeverity"))
if mibBuilder.loadTexts: irHumidityLowTholdAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irHumidityLowTholdAlarmCleared.setDescription('This trap indicates that the current humidity value has gone above the value set in irHumidityThresholdLow object after having gone below that value. irHumidityValue object indicates the current humidity value.')
irClusterSyncStarted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 10)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterSyncStarted.setStatus('current')
if mibBuilder.loadTexts: irClusterSyncStarted.setDescription('This trap indicates that a cluster config synch has started.')
irClusterSyncCompleted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 11)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterSyncCompleted.setStatus('current')
if mibBuilder.loadTexts: irClusterSyncCompleted.setDescription('This trap indicates that a cluster config synch has completed.')
irClusterSoftwareUpdateStarted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 12)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterSoftwareUpdateStarted.setStatus('current')
if mibBuilder.loadTexts: irClusterSoftwareUpdateStarted.setDescription('This trap indicates that a cluster system software update has started.')
irClusterSoftwareUpdateCompleted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 13)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterSoftwareUpdateCompleted.setStatus('current')
if mibBuilder.loadTexts: irClusterSoftwareUpdateCompleted.setDescription('This trap indicates that a cluster system software update has completed.')
irClusterBootloaderUpdateStarted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 14)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterBootloaderUpdateStarted.setStatus('current')
if mibBuilder.loadTexts: irClusterBootloaderUpdateStarted.setDescription('This trap indicates that a cluster boot loader software update has started.')
irClusterBootloaderUpdateCompleted = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 15)).setObjects(("MRV-IR-TRAP-MIB", "irTimeStamp"))
if mibBuilder.loadTexts: irClusterBootloaderUpdateCompleted.setStatus('current')
if mibBuilder.loadTexts: irClusterBootloaderUpdateCompleted.setDescription('This trap indicates that a cluster boot loader software update has completed.')
irPowerSupplyStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 16)).setObjects(("MRV-IR-SYSTEM-MIB", "irPowerIndex"), ("MRV-IR-SYSTEM-MIB", "irPowerStatus"))
if mibBuilder.loadTexts: irPowerSupplyStatusChanged.setStatus('current')
if mibBuilder.loadTexts: irPowerSupplyStatusChanged.setDescription('This trap indicates that a power supply status has changed.')
irLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 17)).setObjects(("MRV-IR-TRAP-MIB", "irUserName"), ("MRV-IR-TRAP-MIB", "irIpAddress"), ("MRV-IR-CHAR-MIB", "irCharPortIndex"))
if mibBuilder.loadTexts: irLoginFailed.setStatus('current')
if mibBuilder.loadTexts: irLoginFailed.setDescription('This trap indicates that a user attempted to login and failed. irCharPortIndex indicates the physical or tcp port. irUserName indicates the user name. irIpAddress indicates the ip address of the remote machine from which the user attempted the login. If the IP address values is non-zero, it indicates a network connection and irCharPortIndex indicates the tcp port. If the IP address is zero, it indicates login attemp was local and irCharPortIndex indicates the physical port.')
irHdamAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 18)).setObjects(("MRV-IR-HDAM-MIB", "irAlarmPortIndex"), ("MRV-IR-HDAM-MIB", "irAlarmSlotIndex"), ("MRV-IR-HDAM-MIB", "irAlarmPointIndex"), ("MRV-IR-HDAM-MIB", "irAlarmName"), ("MRV-IR-HDAM-MIB", "irAlarmContactState"), ("MRV-IR-HDAM-MIB", "irAlarmTrapSeverity"), ("MRV-IR-HDAM-MIB", "irAlarmCount"), ("MRV-IR-HDAM-MIB", "irAlarmDescription"))
if mibBuilder.loadTexts: irHdamAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irHdamAlarmRaised.setDescription('This trap indicates that the HDAM unit generated an alarm.')
irHdamAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 19)).setObjects(("MRV-IR-HDAM-MIB", "irAlarmPortIndex"), ("MRV-IR-HDAM-MIB", "irAlarmSlotIndex"), ("MRV-IR-HDAM-MIB", "irAlarmPointIndex"), ("MRV-IR-HDAM-MIB", "irAlarmName"), ("MRV-IR-HDAM-MIB", "irAlarmContactState"), ("MRV-IR-HDAM-MIB", "irAlarmTrapSeverity"), ("MRV-IR-HDAM-MIB", "irAlarmCount"), ("MRV-IR-HDAM-MIB", "irAlarmDescription"))
if mibBuilder.loadTexts: irHdamAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irHdamAlarmCleared.setDescription('This trap indicates that the HDAM unit has cleared an alarm.')
irHdamContactLost = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 20)).setObjects(("MRV-IR-HDAM-MIB", "irHdamPortIndex"))
if mibBuilder.loadTexts: irHdamContactLost.setStatus('current')
if mibBuilder.loadTexts: irHdamContactLost.setDescription('This trap indicates that the LX has lost contact with the HDAM unit.')
irHdamContactRegained = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 21)).setObjects(("MRV-IR-HDAM-MIB", "irHdamPortIndex"))
if mibBuilder.loadTexts: irHdamContactRegained.setStatus('current')
if mibBuilder.loadTexts: irHdamContactRegained.setDescription('This trap indicates that the LX has regained contact with the HDAM unit.')
irHdamPowerStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 22)).setObjects(("MRV-IR-HDAM-MIB", "irHdamPowerPortIndex"), ("MRV-IR-HDAM-MIB", "irHdamPowerIndex"), ("MRV-IR-HDAM-MIB", "irHdamPowerStatus"))
if mibBuilder.loadTexts: irHdamPowerStatusChanged.setStatus('current')
if mibBuilder.loadTexts: irHdamPowerStatusChanged.setDescription('This trap indicates that the HDAM power status has changed. irHdamPowerIndex indicates the power index (A or B). irHdamPowerStatus indicates the new power status.')
irOnBoardLowTempExceeded = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 24)).setObjects(("MRV-IR-SYSTEM-MIB", "irSysCurrentTemp"), ("MRV-IR-SYSTEM-MIB", "irSysTempThresholdLow"), ("MRV-IR-SYSTEM-MIB", "irSysTempHysteresis"))
if mibBuilder.loadTexts: irOnBoardLowTempExceeded.setStatus('current')
if mibBuilder.loadTexts: irOnBoardLowTempExceeded.setDescription('This trap indicates that the onboard temperature has exceeded the configured low temperature threshold (plus hysteresis) value.')
irOnBoardLowTempCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 25)).setObjects(("MRV-IR-SYSTEM-MIB", "irSysCurrentTemp"), ("MRV-IR-SYSTEM-MIB", "irSysTempThresholdLow"), ("MRV-IR-SYSTEM-MIB", "irSysTempHysteresis"))
if mibBuilder.loadTexts: irOnBoardLowTempCleared.setStatus('current')
if mibBuilder.loadTexts: irOnBoardLowTempCleared.setDescription('This trap indicates that the onboard temperature has fallen back below the configured low temperature threshold (plus hysteresis) value.')
irOnBoardHighTempExceeded = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 26)).setObjects(("MRV-IR-SYSTEM-MIB", "irSysCurrentTemp"), ("MRV-IR-SYSTEM-MIB", "irSysTempThresholdHigh"), ("MRV-IR-SYSTEM-MIB", "irSysTempHysteresis"))
if mibBuilder.loadTexts: irOnBoardHighTempExceeded.setStatus('current')
if mibBuilder.loadTexts: irOnBoardHighTempExceeded.setDescription('This trap indicates that the onboard temperature has exceeded the configured high temperature threshold (minus hysteresis) value.')
irOnBoardHighTempCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 27)).setObjects(("MRV-IR-SYSTEM-MIB", "irSysCurrentTemp"), ("MRV-IR-SYSTEM-MIB", "irSysTempThresholdHigh"), ("MRV-IR-SYSTEM-MIB", "irSysTempHysteresis"))
if mibBuilder.loadTexts: irOnBoardHighTempCleared.setStatus('current')
if mibBuilder.loadTexts: irOnBoardHighTempCleared.setDescription('This trap indicates that the onboard temperature has fallen back below the configured high temperature threshold (minus hysteresis) value.')
irAdminLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 28)).setObjects(("MRV-IR-TRAP-MIB", "irUserName"), ("MRV-IR-CHAR-MIB", "irCharPortIndex"))
if mibBuilder.loadTexts: irAdminLoginFailed.setStatus('current')
if mibBuilder.loadTexts: irAdminLoginFailed.setDescription('This trap indicates that an administrator login failed. irUserName indicates the user name. irCharPortIndex indicates the port.')
irEnetPortBondLinkStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 29)).setObjects(("MRV-IR-SYSTEM-MIB", "irEnetPortIndex"), ("MRV-IR-SYSTEM-MIB", "irEnetPortLinkStatus"))
if mibBuilder.loadTexts: irEnetPortBondLinkStatusChanged.setStatus('current')
if mibBuilder.loadTexts: irEnetPortBondLinkStatusChanged.setDescription('This trap indicates that the enet port bonding link status has changed. This trap is generated only on systems with multiple enet ports. irEnetPortIndex is the index of the ethernet port in question. irEnetPortLinkStatus is the new link status of the ethernet port.')
irHdamAnalogHighAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 30)).setObjects(("MRV-IR-HDAM-MIB", "irAnalogPortIndex"), ("MRV-IR-HDAM-MIB", "irAnalogSlotIndex"), ("MRV-IR-HDAM-MIB", "irAnalogPointIndex"), ("MRV-IR-HDAM-MIB", "irAnalogName"), ("MRV-IR-HDAM-MIB", "irAnalogDescription"), ("MRV-IR-HDAM-MIB", "irAnalogCalValue"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdSeverity"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdHighAlarmCount"))
if mibBuilder.loadTexts: irHdamAnalogHighAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irHdamAnalogHighAlarmRaised.setDescription('This trap indicates that the HDAM analog loop module generated a high threshold raised alarm.')
irHdamAnalogHighAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 31)).setObjects(("MRV-IR-HDAM-MIB", "irAnalogPortIndex"), ("MRV-IR-HDAM-MIB", "irAnalogSlotIndex"), ("MRV-IR-HDAM-MIB", "irAnalogPointIndex"), ("MRV-IR-HDAM-MIB", "irAnalogName"), ("MRV-IR-HDAM-MIB", "irAnalogDescription"), ("MRV-IR-HDAM-MIB", "irAnalogCalValue"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdSeverity"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdHighAlarmCount"))
if mibBuilder.loadTexts: irHdamAnalogHighAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irHdamAnalogHighAlarmCleared.setDescription('This trap indicates that the HDAM analog loop module generated a high threshold cleared alarm.')
irHdamAnalogLowAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 32)).setObjects(("MRV-IR-HDAM-MIB", "irAnalogPortIndex"), ("MRV-IR-HDAM-MIB", "irAnalogSlotIndex"), ("MRV-IR-HDAM-MIB", "irAnalogPointIndex"), ("MRV-IR-HDAM-MIB", "irAnalogName"), ("MRV-IR-HDAM-MIB", "irAnalogDescription"), ("MRV-IR-HDAM-MIB", "irAnalogCalValue"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdSeverity"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdLowAlarmCount"))
if mibBuilder.loadTexts: irHdamAnalogLowAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irHdamAnalogLowAlarmRaised.setDescription('This trap indicates that the HDAM analog loop module generated a low threshold raised alarm.')
irHdamAnalogLowAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 33)).setObjects(("MRV-IR-HDAM-MIB", "irAnalogPortIndex"), ("MRV-IR-HDAM-MIB", "irAnalogSlotIndex"), ("MRV-IR-HDAM-MIB", "irAnalogPointIndex"), ("MRV-IR-HDAM-MIB", "irAnalogName"), ("MRV-IR-HDAM-MIB", "irAnalogDescription"), ("MRV-IR-HDAM-MIB", "irAnalogCalValue"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdSeverity"), ("MRV-IR-HDAM-MIB", "irAnalogThresholdLowAlarmCount"))
if mibBuilder.loadTexts: irHdamAnalogLowAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irHdamAnalogLowAlarmCleared.setDescription('This trap indicates that the HDAM analog loop module generated a low threshold cleared alarm.')
irLdamAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 34)).setObjects(("MRV-IR-CHAR-MIB", "irLdAlarmPortIndex"), ("MRV-IR-CHAR-MIB", "irLdAlarmPointIndex"), ("MRV-IR-CHAR-MIB", "irLdAlarmName"), ("MRV-IR-CHAR-MIB", "irLdAlarmDescription"), ("MRV-IR-CHAR-MIB", "irLdAlarmContactState"), ("MRV-IR-CHAR-MIB", "irLdAlarmTrapSeverity"), ("MRV-IR-CHAR-MIB", "irLdAlarmCount"))
if mibBuilder.loadTexts: irLdamAlarmRaised.setStatus('current')
if mibBuilder.loadTexts: irLdamAlarmRaised.setDescription('This trap indicates that the LDAM alarm point generated an alarm.')
irLdamAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 35)).setObjects(("MRV-IR-CHAR-MIB", "irLdAlarmPortIndex"), ("MRV-IR-CHAR-MIB", "irLdAlarmPointIndex"), ("MRV-IR-CHAR-MIB", "irLdAlarmName"), ("MRV-IR-CHAR-MIB", "irLdAlarmDescription"), ("MRV-IR-CHAR-MIB", "irLdAlarmContactState"), ("MRV-IR-CHAR-MIB", "irLdAlarmTrapSeverity"), ("MRV-IR-CHAR-MIB", "irLdAlarmCount"))
if mibBuilder.loadTexts: irLdamAlarmCleared.setStatus('current')
if mibBuilder.loadTexts: irLdamAlarmCleared.setDescription('This trap indicates that the LDAM alarm point has been cleared.')
irIpmiDiscreteDeassertEvent = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 36)).setObjects(("MRV-IR-SYSTEM-MIB", "ipmiDiscreteOffset"), ("MRV-IR-SYSTEM-MIB", "ipmiDiscreteSensorName"))
if mibBuilder.loadTexts: irIpmiDiscreteDeassertEvent.setStatus('current')
if mibBuilder.loadTexts: irIpmiDiscreteDeassertEvent.setDescription('This trap indicates that an IPMI discrete sensor Deassert event has occurred.')
irIpmiDiscreteAssertEvent = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 37)).setObjects(("MRV-IR-SYSTEM-MIB", "ipmiDiscreteOffset"), ("MRV-IR-SYSTEM-MIB", "ipmiDiscreteSensorName"))
if mibBuilder.loadTexts: irIpmiDiscreteAssertEvent.setStatus('current')
if mibBuilder.loadTexts: irIpmiDiscreteAssertEvent.setDescription('This trap indicates that an IPMI discrete sensor Assert event has occurred.')
irIpmiThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 33, 100, 3, 2, 38)).setObjects(("MRV-IR-SYSTEM-MIB", "ipmiThresholdType"), ("MRV-IR-SYSTEM-MIB", "ipmiThresholdSensorName"), ("MRV-IR-SYSTEM-MIB", "ipmiThresholdDirection"), ("MRV-IR-SYSTEM-MIB", "ipmiThresholdAssert"))
if mibBuilder.loadTexts: irIpmiThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: irIpmiThresholdEvent.setDescription('This trap indicates that an IPMI threshold sensor event has occurred.')
mibBuilder.exportSymbols("MRV-IR-TRAP-MIB", irTraps=irTraps, irClusterSyncStarted=irClusterSyncStarted, irIpmiThresholdEvent=irIpmiThresholdEvent, irTempHighTholdAlarmCleared=irTempHighTholdAlarmCleared, irHumidityHighTholdAlarmCleared=irHumidityHighTholdAlarmCleared, irHdamAnalogHighAlarmRaised=irHdamAnalogHighAlarmRaised, irTextString=irTextString, irIpAddress=irIpAddress, irLoginFailed=irLoginFailed, irLdamAlarmCleared=irLdamAlarmCleared, irTempHighTholdAlarmRaised=irTempHighTholdAlarmRaised, irTempLowTholdAlarmCleared=irTempLowTholdAlarmCleared, irHdamAnalogLowAlarmRaised=irHdamAnalogLowAlarmRaised, irClusterSoftwareUpdateCompleted=irClusterSoftwareUpdateCompleted, irNotifyEvent=irNotifyEvent, irHdamContactLost=irHdamContactLost, irHdamAlarmRaised=irHdamAlarmRaised, irClusterSoftwareUpdateStarted=irClusterSoftwareUpdateStarted, irIpmiDiscreteDeassertEvent=irIpmiDiscreteDeassertEvent, irUserName=irUserName, PYSNMP_MODULE_ID=irTrapMib, irTrapMib=irTrapMib, irEnetPortBondLinkStatusChanged=irEnetPortBondLinkStatusChanged, irHdamAnalogLowAlarmCleared=irHdamAnalogLowAlarmCleared, irOnBoardLowTempExceeded=irOnBoardLowTempExceeded, irHdamAnalogHighAlarmCleared=irHdamAnalogHighAlarmCleared, irOnBoardHighTempCleared=irOnBoardHighTempCleared, irHdamAlarmCleared=irHdamAlarmCleared, irAdminLoginFailed=irAdminLoginFailed, irClusterBootloaderUpdateCompleted=irClusterBootloaderUpdateCompleted, irHumidityLowTholdAlarmRaised=irHumidityLowTholdAlarmRaised, irHdamPowerStatusChanged=irHdamPowerStatusChanged, irLdamAlarmRaised=irLdamAlarmRaised, irTrapObjects=irTrapObjects, irTempLowTholdAlarmRaised=irTempLowTholdAlarmRaised, irHumidityHighTholdAlarmRaised=irHumidityHighTholdAlarmRaised, irPowerSupplyStatusChanged=irPowerSupplyStatusChanged, irHdamContactRegained=irHdamContactRegained, irOnBoardLowTempCleared=irOnBoardLowTempCleared, irOnBoardHighTempExceeded=irOnBoardHighTempExceeded, irClusterBootloaderUpdateStarted=irClusterBootloaderUpdateStarted, irIpmiDiscreteAssertEvent=irIpmiDiscreteAssertEvent, irClusterSyncCompleted=irClusterSyncCompleted, irTimeStamp=irTimeStamp, irHumidityLowTholdAlarmCleared=irHumidityLowTholdAlarmCleared)
