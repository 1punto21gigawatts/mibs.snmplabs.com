#
# PySNMP MIB module AISYSCFGSOFTWARE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AISYSCFGSOFTWARE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, enterprises, Gauge32, iso, ModuleIdentity, TimeTicks, Integer32, Unsigned32, NotificationType, MibIdentifier, Counter64, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "enterprises", "Gauge32", "iso", "ModuleIdentity", "TimeTicks", "Integer32", "Unsigned32", "NotificationType", "MibIdentifier", "Counter64", "IpAddress", "ObjectIdentity")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSysCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32))
aiSysCfgSoftware = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 32, 1))
aiSysCfgSoftware.setRevisions(('2001-04-30 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aiSysCfgSoftware.setRevisionsDescriptions(('The initial revision of this module.',))
if mibBuilder.loadTexts: aiSysCfgSoftware.setLastUpdated('200104301700Z')
if mibBuilder.loadTexts: aiSysCfgSoftware.setOrganization('Applied Innovation Inc.')
if mibBuilder.loadTexts: aiSysCfgSoftware.setContactInfo(' Engineering MIB Administrator Postal: Applied Innovation Inc. 5800 Innovation Drive Dublin, Ohio 43017-3271 Tel: 614-798-2000 Fax: 614-798-1770 Email: snmp@aiinet.com')
if mibBuilder.loadTexts: aiSysCfgSoftware.setDescription('MIB module to describe software images. Any software/firmware image/load/package should be describable by entries in aiSCSoftwareTable. The set of (name, type, version, date) should uniquely identify any image loaded on an AI box.')
aiSCSoftwareActive = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareActive.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareActive.setDescription('Index into aiSCSoftwareTable indicating the main software image currently executing on this machine.')
aiSCSoftwareUpdateName = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCSoftwareUpdateName.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareUpdateName.setDescription('To initiate a system software update, set this object to the name of the image file, and monitor aiSCSoftwareUpdateStatus until it changes to ok(1) or error(3). If the update succeeds, the new software will be used after the system is rebooted. Maximum length is 255 characters; additional restrictions are system-dependent.')
aiSCSoftwareUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ready", 1), ("inProgress", 2), ("ok", 3), ("error", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCSoftwareUpdateStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareUpdateStatus.setDescription('See aislcscSoftwareUpdateName for a description of how to use this object. ready(1) -- ready to update software (read-write) inProgress(2) -- update is in progress (read-only) ok(3) -- update completed successfully (read-only) error(4) -- update failed (read-only)')
aiSCSoftwareTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 1, 4), )
if mibBuilder.loadTexts: aiSCSoftwareTable.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareTable.setDescription('A table of information on all firmware and software on this machine.')
aiSCSoftwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1), ).setIndexNames((0, "AISYSCFGSOFTWARE-MIB", "aiSCSoftwareIndex"))
if mibBuilder.loadTexts: aiSCSoftwareEntry.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareEntry.setDescription('Information on a given software package.')
aiSCSoftwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareIndex.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareIndex.setDescription('Self referential index into this table.')
aiSCSoftwareName = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareName.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareName.setDescription('The name of this software package. If the system supports multiple stored packages, this should be an identifier with which the system can manipulate and identify this package. If the concept of multiple sofware images does not make sense on this machine, this value MAY be a zero length string.')
aiSCSoftwareDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareDescr.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareDescr.setDescription('A description of this software package. If aiSCSoftwareType is other(4), then this MUST contain a description of this piece of code. Otherwise, this field MAY contain information describing the software.')
aiSCSoftwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bootloader", 1), ("firmware", 2), ("module", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareType.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareType.setDescription('The type of this software package. Management stations should be capable of using this together with aiSCSoftwareName to determine how to interpret aiSCSoftwareVersion.')
aiSCSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareVersion.setDescription('The version of this software package. Currently, only one syntax is used: firmware- The version of the firmware currently executing on the system. This is in the format xxx.yyy[.zzz] where xxx, yyy, and zzz are 1 to 3 digit numbers and the third field, zzz, is optional.')
aiSCSoftwareCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 1, 4, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCSoftwareCreationTime.setStatus('current')
if mibBuilder.loadTexts: aiSCSoftwareCreationTime.setDescription('This is the package build time.')
mibBuilder.exportSymbols("AISYSCFGSOFTWARE-MIB", aiSysCfg=aiSysCfg, aiSCSoftwareActive=aiSCSoftwareActive, aiSCSoftwareUpdateName=aiSCSoftwareUpdateName, aiSCSoftwareName=aiSCSoftwareName, aii=aii, aiSCSoftwareTable=aiSCSoftwareTable, aiSCSoftwareIndex=aiSCSoftwareIndex, PYSNMP_MODULE_ID=aiSysCfgSoftware, aiSCSoftwareCreationTime=aiSCSoftwareCreationTime, aiSysCfgSoftware=aiSysCfgSoftware, aiSCSoftwareEntry=aiSCSoftwareEntry, aiSCSoftwareVersion=aiSCSoftwareVersion, aiSCSoftwareUpdateStatus=aiSCSoftwareUpdateStatus, aiSCSoftwareType=aiSCSoftwareType, aiSCSoftwareDescr=aiSCSoftwareDescr)
