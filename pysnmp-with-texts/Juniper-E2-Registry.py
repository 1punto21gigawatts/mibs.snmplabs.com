#
# PySNMP MIB module Juniper-E2-Registry (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-E2-Registry
# Produced by pysmi-0.3.4 at Wed May  1 14:02:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
juniAdmin, = mibBuilder.importSymbols("Juniper-Registry", "juniAdmin")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Bits, Counter64, Integer32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Gauge32, Counter32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Bits", "Counter64", "Integer32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Gauge32", "Counter32", "TimeTicks", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniE2Registry = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3))
juniE2Registry.setRevisions(('2004-05-19 17:42', '2003-08-18 20:27',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniE2Registry.setRevisionsDescriptions(('Updated for revised E320 hardware.', 'Initial version of this SNMP management information module.',))
if mibBuilder.loadTexts: juniE2Registry.setLastUpdated('200405191742Z')
if mibBuilder.loadTexts: juniE2Registry.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniE2Registry.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniE2Registry.setDescription('Juniper second generation E-series product family system-specific object identification values. This module defines AutonomousType (OID) values for all the physical entity types (entPhysicalVendorType). This module will be updated whenever a new type of module or other hardware becomes available in second generation E-series systems.')
juniE2EntPhysicalType = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1))
e2Chassis = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 1))
if mibBuilder.loadTexts: e2Chassis.setStatus('current')
if mibBuilder.loadTexts: e2Chassis.setDescription("The vendor type ID for a second generation E-series chassis. This identifies an 'overall' physical entity for any second generation E-series system.")
e320Chassis = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 1, 1))
if mibBuilder.loadTexts: e320Chassis.setStatus('current')
if mibBuilder.loadTexts: e320Chassis.setDescription("The vendor type ID for an E320 chassis. This is the 'overall' physical entity for an E320 system.")
e2FanAssembly = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 2))
if mibBuilder.loadTexts: e2FanAssembly.setStatus('current')
if mibBuilder.loadTexts: e2FanAssembly.setDescription('The vendor type ID for a second generation E-series fan assembly.')
e320PrimaryFanAssembly = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 2, 1))
if mibBuilder.loadTexts: e320PrimaryFanAssembly.setStatus('current')
if mibBuilder.loadTexts: e320PrimaryFanAssembly.setDescription('The vendor type ID for the primary fan assembly for an E320 chassis.')
e320AuxiliaryFanAssembly = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 2, 2))
if mibBuilder.loadTexts: e320AuxiliaryFanAssembly.setStatus('current')
if mibBuilder.loadTexts: e320AuxiliaryFanAssembly.setDescription('The vendor type ID for the auxiliary fan assembly for an E320 chassis.')
e2PowerInput = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 3))
if mibBuilder.loadTexts: e2PowerInput.setStatus('current')
if mibBuilder.loadTexts: e2PowerInput.setDescription('The vendor type ID for a second generation E-series power distribution module.')
e320PowerDistributionModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 3, 1))
if mibBuilder.loadTexts: e320PowerDistributionModule.setStatus('current')
if mibBuilder.loadTexts: e320PowerDistributionModule.setDescription('The vendor type ID for the power distribution module for an E320 chassis.')
e2Midplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 4))
if mibBuilder.loadTexts: e2Midplane.setStatus('current')
if mibBuilder.loadTexts: e2Midplane.setDescription('The vendor type ID for a second generation E-series midplane.')
e320Midplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 4, 1))
if mibBuilder.loadTexts: e320Midplane.setStatus('current')
if mibBuilder.loadTexts: e320Midplane.setDescription('The vendor type ID for the midplane for an E320 chassis.')
e2SrpModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 5))
if mibBuilder.loadTexts: e2SrpModule.setStatus('current')
if mibBuilder.loadTexts: e2SrpModule.setDescription('The vendor type ID for a second generation E-series system controller/ switch fabric module.')
e320Srp100Module = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 5, 1))
if mibBuilder.loadTexts: e320Srp100Module.setStatus('current')
if mibBuilder.loadTexts: e320Srp100Module.setDescription('The vendor type ID for an integrated system contoller/switch fabric module for an E320 chassis.')
e320Srp320Module = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 5, 99))
if mibBuilder.loadTexts: e320Srp320Module.setStatus('current')
if mibBuilder.loadTexts: e320Srp320Module.setDescription('The vendor type ID for an integrated system contoller/switch fabric module for an E320 chassis. For internal use only.')
e2SwitchFabricModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 6))
if mibBuilder.loadTexts: e2SwitchFabricModule.setStatus('current')
if mibBuilder.loadTexts: e2SwitchFabricModule.setDescription('The vendor type ID for a second generation E-series switch fabric module.')
e320FabricSlice100Module = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 6, 1))
if mibBuilder.loadTexts: e320FabricSlice100Module.setStatus('current')
if mibBuilder.loadTexts: e320FabricSlice100Module.setDescription('The vendor type ID for a switch fabric module for an E320 chassis. For internal use only.')
e320FabricSlice320Module = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 6, 99))
if mibBuilder.loadTexts: e320FabricSlice320Module.setStatus('current')
if mibBuilder.loadTexts: e320FabricSlice320Module.setDescription('The vendor type ID for a switch fabric module for an E320 chassis. For internal use only.')
e2SrpIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 7))
if mibBuilder.loadTexts: e2SrpIoa.setStatus('current')
if mibBuilder.loadTexts: e2SrpIoa.setDescription('The vendor type ID for the system controller I/O adapter for a second generation E-series system.')
e320SrpIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 7, 1))
if mibBuilder.loadTexts: e320SrpIoa.setStatus('current')
if mibBuilder.loadTexts: e320SrpIoa.setDescription('The vendor type ID for an SRP IOA for an E320 chassis.')
e2ForwardingModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8))
if mibBuilder.loadTexts: e2ForwardingModule.setStatus('current')
if mibBuilder.loadTexts: e2ForwardingModule.setDescription('The vendor type ID for a second generation E-series forwarding module.')
e3204gLeModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 1))
if mibBuilder.loadTexts: e3204gLeModule.setStatus('current')
if mibBuilder.loadTexts: e3204gLeModule.setDescription('The vendor type ID for a 4 Gigabit Line Card for an E320 chassis.')
e320Ge4PortModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 2))
if mibBuilder.loadTexts: e320Ge4PortModule.setStatus('current')
if mibBuilder.loadTexts: e320Ge4PortModule.setDescription('The vendor type ID for a Gigabit Ethernet 4 Port line card for an E320 chassis.')
e320Oc48Pos1PortModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 3))
if mibBuilder.loadTexts: e320Oc48Pos1PortModule.setStatus('current')
if mibBuilder.loadTexts: e320Oc48Pos1PortModule.setDescription('The vendor type ID for an OC48 POS 1 Port line card for an E320 chassis.')
e320Oc48RPos1PortModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 4))
if mibBuilder.loadTexts: e320Oc48RPos1PortModule.setStatus('current')
if mibBuilder.loadTexts: e320Oc48RPos1PortModule.setDescription('The vendor type ID for an OC48R POS 1 Port line card for an E320 chassis.')
e320OcXModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 5))
if mibBuilder.loadTexts: e320OcXModule.setStatus('current')
if mibBuilder.loadTexts: e320OcXModule.setDescription('The vendor type ID for an OCx line card for an E320 chassis.')
e320MfgSerdesTestModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 8, 99))
if mibBuilder.loadTexts: e320MfgSerdesTestModule.setStatus('current')
if mibBuilder.loadTexts: e320MfgSerdesTestModule.setDescription('The vendor type ID for a Manufacturing Serdes Test line card for an E320 chassis. For internal use only.')
e2ForwardingIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 9))
if mibBuilder.loadTexts: e2ForwardingIoa.setStatus('current')
if mibBuilder.loadTexts: e2ForwardingIoa.setDescription('The vendor type ID for a second generation E-series I/O adapter for a forwarding module.')
e3204GeIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 9, 1))
if mibBuilder.loadTexts: e3204GeIoa.setStatus('current')
if mibBuilder.loadTexts: e3204GeIoa.setDescription('The vendor type ID for a 4GE IOA for an E320 chassis.')
e320Oc48PosIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 9, 2))
if mibBuilder.loadTexts: e320Oc48PosIoa.setStatus('current')
if mibBuilder.loadTexts: e320Oc48PosIoa.setDescription('The vendor type ID for an OC48 POS IOA for an E320 chassis.')
e320Oc48RPosIoa = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3, 1, 9, 3))
if mibBuilder.loadTexts: e320Oc48RPosIoa.setStatus('current')
if mibBuilder.loadTexts: e320Oc48RPosIoa.setDescription('The vendor type ID for an OC48R POS IOA for an E320 chassis.')
mibBuilder.exportSymbols("Juniper-E2-Registry", e320Midplane=e320Midplane, e320Srp100Module=e320Srp100Module, e3204GeIoa=e3204GeIoa, e320FabricSlice100Module=e320FabricSlice100Module, e2ForwardingModule=e2ForwardingModule, e320Oc48RPosIoa=e320Oc48RPosIoa, e320Ge4PortModule=e320Ge4PortModule, e320OcXModule=e320OcXModule, e320FabricSlice320Module=e320FabricSlice320Module, e320Oc48RPos1PortModule=e320Oc48RPos1PortModule, e2ForwardingIoa=e2ForwardingIoa, e320Oc48Pos1PortModule=e320Oc48Pos1PortModule, e320AuxiliaryFanAssembly=e320AuxiliaryFanAssembly, e2SrpIoa=e2SrpIoa, e320MfgSerdesTestModule=e320MfgSerdesTestModule, e320Chassis=e320Chassis, juniE2Registry=juniE2Registry, e3204gLeModule=e3204gLeModule, e320PowerDistributionModule=e320PowerDistributionModule, e2PowerInput=e2PowerInput, e320SrpIoa=e320SrpIoa, e320Oc48PosIoa=e320Oc48PosIoa, e320Srp320Module=e320Srp320Module, e2Midplane=e2Midplane, e2SrpModule=e2SrpModule, e320PrimaryFanAssembly=e320PrimaryFanAssembly, PYSNMP_MODULE_ID=juniE2Registry, e2SwitchFabricModule=e2SwitchFabricModule, juniE2EntPhysicalType=juniE2EntPhysicalType, e2Chassis=e2Chassis, e2FanAssembly=e2FanAssembly)
