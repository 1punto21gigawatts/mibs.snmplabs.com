#
# PySNMP MIB module CISCO-HW-MODULE-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-HW-MODULE-CONTROL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoInterfaceIndexList, = mibBuilder.importSymbols("CISCO-TC", "CiscoInterfaceIndexList")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, ObjectIdentity, Counter32, Unsigned32, IpAddress, iso, MibIdentifier, ModuleIdentity, NotificationType, Integer32, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Counter32", "Unsigned32", "IpAddress", "iso", "MibIdentifier", "ModuleIdentity", "NotificationType", "Integer32", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoHwModuleControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 714))
ciscoHwModuleControlMIB.setRevisions(('2010-08-09 00:00', '2009-11-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setRevisionsDescriptions(('Added ciscoHmcMIBOperModeGroup.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setLastUpdated('201008090000Z')
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setDescription('The MIB module providing configuration and control information for management of hardware modules and components on Cisco devices. The following features are managed: bandwidth oversubscription, clearing of HoL(Head of Line) blocking, etc. Bandwidth oversubscription: a group of ports are said to be operating in bandwidth oversubscription mode if the amount of internal forwarding fabric bandwidth allocated to the group of ports on a switching or routing device is less than the aggregate maximum connection speeds of these ports. Clearing of HoL blocking: refers to the process in which if any port of a port group receives a pause frame from the remote side, it will block packet transmission on all ports of the port group till a packet is delivered to the flow controlled port. If the clearing of HoL blocking feature is disabled, the device will drop packets destined for the jammed ports and continue delivering packets for the other ports.')
ciscoHwModuleControlMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 0))
ciscoHwModuleControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1))
ciscoHwModuleControlMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2))
chmcOversubscription = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1))
chmcOperationalMode = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2))
chmcOversubModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1), )
if mibBuilder.loadTexts: chmcOversubModuleTable.setStatus('current')
if mibBuilder.loadTexts: chmcOversubModuleTable.setDescription('Contains information for managing bandwidth oversubscription feature for physical modules capable of providing such feature.')
chmcOversubModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: chmcOversubModuleEntry.setStatus('current')
if mibBuilder.loadTexts: chmcOversubModuleEntry.setDescription('Each entry provides management information for a specific physical module as indicated by the value of entPhysicalIndex, which is capable of providing bandwidth oversubscription feature.')
chmcOversubModuleCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("oversubConfigModuleLevel", 0), ("oversubConfigPortGroupLevel", 1), ("clearblockConfigPortGroupLevel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOversubModuleCapabilities.setStatus('current')
if mibBuilder.loadTexts: chmcOversubModuleCapabilities.setDescription('Indicates the attributes of this module with respective to the bandwidth oversubscription feature. oversubConfigModuleLevel(0) - This bit is set if configuration of bandwidth oversubscription is supported at module level. oversubConfigPortGroupLevel(1) - This bit is set if configuration of bandwidth oversubscription is supported at port group level. clearblockConfigPortGroupLevel(2) - This bit is set if configuration of clearing of HoL blocking is supported at port group level.')
chmcOversubModOversubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabledOnAllPortGroups", 1), ("disabledOnAllPortGroups", 2), ("portGroupSpecific", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubModOversubStatus.setStatus('current')
if mibBuilder.loadTexts: chmcOversubModOversubStatus.setDescription("Specifies the state of the bandwidth oversubscription feature for this module. enabledOnAllPortGroups -- the bandwidth oversubscription feature is enabled on all port groups of this module. disabledOnAllPortGroups -- the bandwidth oversubscription feature is disabled on all port groups of this module. portGroupSpecific -- the bandwidth oversubscription feature is enabled on some port groups of this module while being disabled at the remaining port groups of this module. This value is a read-only value and can not be set on any instance of this object. This object will only be configurable when the instance value of chmcOversubModuleCapabilities of this entry has the 'oversubConfigModuleLevel' bit set to 1.")
chmcOversubPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2), )
if mibBuilder.loadTexts: chmcOversubPortGroupTable.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGroupTable.setDescription('Contains information for managing bandwidth oversubscription and clearing of HoL blocking features for port groups of the physical modules capable of providing bandwidth oversubscription feature.')
chmcOversubPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpIndex"))
if mibBuilder.loadTexts: chmcOversubPortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGroupEntry.setDescription('Each entry contains management information for a specific port group on a specific physical module as indicated by the value of entPhysicalIndex, which is capable of providing bandwidth oversubscription feature.')
chmcOversubPortGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: chmcOversubPortGrpIndex.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGrpIndex.setDescription('A unique value assigned to a specific port group on a module.')
chmcOversubPortGrpIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 2), CiscoInterfaceIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOversubPortGrpIfIndexList.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGrpIfIndexList.setDescription('Contains ifIndex values for the list of the ports in the port group.')
chmcOversubPortGrpOversubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubPortGrpOversubStatus.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGrpOversubStatus.setDescription("Specifies the state of the bandwidth oversubscription feature on this port group. other - none of the following. This value is a read-only value and can not be set on any instance of this object. enabled - this port group is enabled to operate in bandwidth oversubscription mode. disabled - this port group is disabled to operate in bandwidth oversubscription mode. The first port indicated by the first four bytes of the value of chmcOversubPortGrpIfIndexList of this port group will keep its administrative status and the remaining ports of this port group will be administratively shut down. This object will only be configurable when the instance value of chmcOversubModuleCapabilities for the corresponding module has the 'oversubConfigPortGroupLevel' bit set to 1.")
chmcOversubPortGrpClearBlkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubPortGrpClearBlkStatus.setStatus('current')
if mibBuilder.loadTexts: chmcOversubPortGrpClearBlkStatus.setDescription("Specifies the state of the clearing of HoL blocking feature on this port group. other - none of the following. This value is a read-only value and can not be set on any instance of this object. enabled - the clearing of HoL blocking feature is enabled. disabled - the clearing of HoL blocking feature is disabled. This object will only take effect when the instance value of chmcOversubPortGrpOversubStatus of this entry is 'enabled'. This object will only be configurable when the instance value of chmcOversubPortGrpOversubStatus of this entry is 'enabled' and the instance value of chmcOversubModuleCapabilities for the corresponding module has the 'clearblockConfigPortGroupLevel' bit set to 1.")
chmcOperModePortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1), )
if mibBuilder.loadTexts: chmcOperModePortGroupTable.setStatus('current')
if mibBuilder.loadTexts: chmcOperModePortGroupTable.setDescription('Contains information for managing operational mode features for port groups of the physical modules capable of providing operational mode configuration.')
chmcOperModePortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpIndex"))
if mibBuilder.loadTexts: chmcOperModePortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: chmcOperModePortGroupEntry.setDescription('Each entry contains operational mode information for a specific port group on a specific physical module as indicated by the value of entPhysicalIndex, which is capable of providing operational mode configuration.')
chmcOperModePortGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: chmcOperModePortGrpIndex.setStatus('current')
if mibBuilder.loadTexts: chmcOperModePortGrpIndex.setDescription('A unique value assigned to a specific port group on a module.')
chmcOperModePortGrpOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tenGigabitEthernet", 2), ("fortyGigabitEthernet", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOperModePortGrpOperMode.setStatus('current')
if mibBuilder.loadTexts: chmcOperModePortGrpOperMode.setDescription('Specifies the operational mode of the port group. other - none of the following. This value is a read-only value and can not be set on any instance of this object. tenGigabitEthernet - this port group is operated with 10 Gigibit Ethernet port mode. forthGigabitEthernet - this port group is operated with 40 Gigabit Ethernet port mode. Modification on the instance value of this object may cause the corresponding module to be reset.')
chmcOperModePortGrpIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 3), CiscoInterfaceIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOperModePortGrpIfIndexList.setStatus('current')
if mibBuilder.loadTexts: chmcOperModePortGrpIfIndexList.setDescription('Contains ifIndex values for the list of the ports in the port group. The instance value of this object may be changed after modification on the corresponding instance value of chmcOperModePortGrpOperMode.')
chmcHwModuleControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1))
chmcHwModuleControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2))
chmcHwModuleControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1, 1)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubBaseGroup"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubPgClearBlkGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chmcHwModuleControlMIBCompliance = chmcHwModuleControlMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: chmcHwModuleControlMIBCompliance.setDescription('The compliance statement for CISCO-HW-MODULE-CONTROL-MIB.')
chmcHwModuleControlMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1, 2)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubBaseGroup"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubPgClearBlkGrp"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOperModeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chmcHwModuleControlMIBCompliance1 = chmcHwModuleControlMIBCompliance1.setStatus('current')
if mibBuilder.loadTexts: chmcHwModuleControlMIBCompliance1.setDescription('The compliance statement for CISCO-HW-MODULE-CONTROL-MIB.')
ciscoHmcMIBOversubBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 1)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubModuleCapabilities"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubModOversubStatus"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpIfIndexList"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpOversubStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOversubBaseGroup = ciscoHmcMIBOversubBaseGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoHmcMIBOversubBaseGroup.setDescription('A collection of objects providing information about the bandwidth oversubscription and/or clearing of HoL blocking features for hardware modules capable of providing such features.')
ciscoHmcMIBOversubPgClearBlkGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 2)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpClearBlkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOversubPgClearBlkGrp = ciscoHmcMIBOversubPgClearBlkGrp.setStatus('current')
if mibBuilder.loadTexts: ciscoHmcMIBOversubPgClearBlkGrp.setDescription('A collection of objects describing the clearing of HoL blocking support at port group level for each hardware module capable of providing such feature.')
ciscoHmcMIBOperModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 3)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpOperMode"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpIfIndexList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOperModeGroup = ciscoHmcMIBOperModeGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoHmcMIBOperModeGroup.setDescription('A collection of objects providing the operational mode information at port group level for each physical module capable of providing such feature.')
mibBuilder.exportSymbols("CISCO-HW-MODULE-CONTROL-MIB", chmcOversubPortGrpIfIndexList=chmcOversubPortGrpIfIndexList, ciscoHwModuleControlMIBObjects=ciscoHwModuleControlMIBObjects, chmcOversubModuleCapabilities=chmcOversubModuleCapabilities, chmcOversubModOversubStatus=chmcOversubModOversubStatus, chmcOversubscription=chmcOversubscription, chmcOversubPortGroupTable=chmcOversubPortGroupTable, chmcOversubModuleTable=chmcOversubModuleTable, PYSNMP_MODULE_ID=ciscoHwModuleControlMIB, chmcOversubPortGroupEntry=chmcOversubPortGroupEntry, ciscoHmcMIBOversubPgClearBlkGrp=ciscoHmcMIBOversubPgClearBlkGrp, ciscoHwModuleControlMIB=ciscoHwModuleControlMIB, chmcOperModePortGroupTable=chmcOperModePortGroupTable, ciscoHwModuleControlMIBNotifs=ciscoHwModuleControlMIBNotifs, ciscoHmcMIBOversubBaseGroup=ciscoHmcMIBOversubBaseGroup, chmcHwModuleControlMIBCompliances=chmcHwModuleControlMIBCompliances, ciscoHmcMIBOperModeGroup=ciscoHmcMIBOperModeGroup, chmcOperModePortGrpIndex=chmcOperModePortGrpIndex, chmcOperModePortGroupEntry=chmcOperModePortGroupEntry, chmcHwModuleControlMIBGroups=chmcHwModuleControlMIBGroups, chmcOversubPortGrpClearBlkStatus=chmcOversubPortGrpClearBlkStatus, chmcHwModuleControlMIBCompliance1=chmcHwModuleControlMIBCompliance1, chmcOversubModuleEntry=chmcOversubModuleEntry, chmcOversubPortGrpOversubStatus=chmcOversubPortGrpOversubStatus, chmcOperModePortGrpIfIndexList=chmcOperModePortGrpIfIndexList, chmcOversubPortGrpIndex=chmcOversubPortGrpIndex, chmcOperModePortGrpOperMode=chmcOperModePortGrpOperMode, ciscoHwModuleControlMIBConform=ciscoHwModuleControlMIBConform, chmcOperationalMode=chmcOperationalMode, chmcHwModuleControlMIBCompliance=chmcHwModuleControlMIBCompliance)
