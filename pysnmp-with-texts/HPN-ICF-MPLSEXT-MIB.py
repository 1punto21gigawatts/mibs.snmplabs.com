#
# PySNMP MIB module HPN-ICF-MPLSEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLSEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:40:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, IpAddress, ModuleIdentity, Integer32, MibIdentifier, Counter32, Counter64, Unsigned32, NotificationType, Gauge32, ObjectIdentity, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "ModuleIdentity", "Integer32", "MibIdentifier", "Counter32", "Counter64", "Unsigned32", "NotificationType", "Gauge32", "ObjectIdentity", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
hpnicfMplsExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142))
hpnicfMplsExt.setRevisions(('2013-06-13 18:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfMplsExt.setRevisionsDescriptions(('Initial version of this MIB.',))
if mibBuilder.loadTexts: hpnicfMplsExt.setLastUpdated('201306131800Z')
if mibBuilder.loadTexts: hpnicfMplsExt.setOrganization('')
if mibBuilder.loadTexts: hpnicfMplsExt.setContactInfo('')
if mibBuilder.loadTexts: hpnicfMplsExt.setDescription('Multiprotocol Label Switching MIB')
hpnicfMplsExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1))
hpnicfMplsExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1))
hpnicfMplsExtLsrID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsExtLsrID.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLsrID.setDescription("The Label Switching Router's Identifier.")
hpnicfMplsExtLdpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsExtLdpStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpStatus.setDescription('The global configuration of LDP(Label Distribution Protocol).')
hpnicfMplsExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2), )
if mibBuilder.loadTexts: hpnicfMplsExtTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtTable.setDescription('A table for configuring MPLS(Multiprotocol Label Switching) parameters.')
hpnicfMplsExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLSEXT-MIB", "hpnicfMplsExtIndex"))
if mibBuilder.loadTexts: hpnicfMplsExtEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtEntry.setDescription('An entry for configuring MPLS parameters.')
hpnicfMplsExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsExtIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtIndex.setDescription('Index of MPLS interface.')
hpnicfMplsExtCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtCapability.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtCapability.setDescription('The MPLS capability of an interface.')
hpnicfMplsExtMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(46, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtMtu.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtMtu.setDescription('The MPLS MTU(Maximum Transmission Unit) of an interface.')
hpnicfMplsExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtRowStatus.setDescription('Operation status of this table entry.')
hpnicfMplsExtLdpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3), )
if mibBuilder.loadTexts: hpnicfMplsExtLdpTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpTable.setDescription('A table for configuring LDP parameters.')
hpnicfMplsExtLdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-MPLSEXT-MIB", "hpnicfMplsExtLdpIndex"))
if mibBuilder.loadTexts: hpnicfMplsExtLdpEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpEntry.setDescription('An entry for configuring LDP parameters.')
hpnicfMplsExtLdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsExtLdpIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpIndex.setDescription('Index of LDP interface.')
hpnicfMplsExtLdpCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtLdpCapability.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpCapability.setDescription('The LDP capability of an interface.')
hpnicfMplsExtLdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtLdpRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMplsExtLdpRowStatus.setDescription("Operation status of this table entry. A row entry cannot be modified when the value of this object is 'active'.")
mibBuilder.exportSymbols("HPN-ICF-MPLSEXT-MIB", hpnicfMplsExtTable=hpnicfMplsExtTable, hpnicfMplsExtLsrID=hpnicfMplsExtLsrID, hpnicfMplsExtLdpTable=hpnicfMplsExtLdpTable, hpnicfMplsExtLdpStatus=hpnicfMplsExtLdpStatus, hpnicfMplsExtScalarGroup=hpnicfMplsExtScalarGroup, hpnicfMplsExtRowStatus=hpnicfMplsExtRowStatus, hpnicfMplsExtCapability=hpnicfMplsExtCapability, hpnicfMplsExtEntry=hpnicfMplsExtEntry, hpnicfMplsExtIndex=hpnicfMplsExtIndex, hpnicfMplsExtObjects=hpnicfMplsExtObjects, hpnicfMplsExtMtu=hpnicfMplsExtMtu, PYSNMP_MODULE_ID=hpnicfMplsExt, hpnicfMplsExtLdpIndex=hpnicfMplsExtLdpIndex, hpnicfMplsExtLdpRowStatus=hpnicfMplsExtLdpRowStatus, hpnicfMplsExt=hpnicfMplsExt, hpnicfMplsExtLdpEntry=hpnicfMplsExtLdpEntry, hpnicfMplsExtLdpCapability=hpnicfMplsExtLdpCapability)
