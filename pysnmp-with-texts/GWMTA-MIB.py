#
# PySNMP MIB module GWMTA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GWMTA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:20:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, ModuleIdentity, Bits, NotificationType, Counter64, Gauge32, IpAddress, MibIdentifier, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "ModuleIdentity", "Bits", "NotificationType", "Counter64", "Gauge32", "IpAddress", "MibIdentifier", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "iso", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
gwmta = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 37))
mta = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 37, 1))
mtaTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 37, 2))
mtaTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 37, 3))
mtaTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1), )
if mibBuilder.loadTexts: mtaTable.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTable.setDescription('A table of MTA objects')
mtaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1), ).setIndexNames((0, "GWMTA-MIB", "mtaIndex"))
if mibBuilder.loadTexts: mtaEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mtaEntry.setDescription('An entry in the MTA Table')
mtaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mtaIndex.setDescription('Index into the MTA table')
mtaDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDomainName.setStatus('mandatory')
if mibBuilder.loadTexts: mtaDomainName.setDescription('The Domain for which this MTA operates.')
mtaTotalDomains = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalDomains.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTotalDomains.setDescription('Number of Domains serviced by this MTA.')
mtaClosedDomains = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaClosedDomains.setStatus('mandatory')
if mibBuilder.loadTexts: mtaClosedDomains.setDescription('Number of closed Domains serviced by this MTA.')
mtaTotalPostOffices = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalPostOffices.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTotalPostOffices.setDescription('Number of Post Offices serviced by this MTA.')
mtaClosedPostOffices = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaClosedPostOffices.setStatus('mandatory')
if mibBuilder.loadTexts: mtaClosedPostOffices.setDescription('Number of closed Post Offices serviced by this MTA.')
mtaTotalGateways = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalGateways.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTotalGateways.setDescription('Number of Gateways serviced by this MTA.')
mtaClosedGateways = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaClosedGateways.setStatus('mandatory')
if mibBuilder.loadTexts: mtaClosedGateways.setDescription('Number of closed Gateways serviced by this MTA.')
mtaRoutedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaRoutedMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaRoutedMsgs.setDescription('Number of messages routed since startup by this MTA.')
mtaTenMinuteRoutedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTenMinuteRoutedMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTenMinuteRoutedMsgs.setDescription('Number of messages routed in the past 10 minutes by this MTA.')
mtaUndeliverableMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaUndeliverableMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaUndeliverableMsgs.setDescription('Number of messages undeliverable since startup by this MTA.')
mtaTenMinuteUndeliverableMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTenMinuteUndeliverableMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTenMinuteUndeliverableMsgs.setDescription('Number of messages undeliverable in the past 10 minutes by this MTA.')
mtaErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaErrorMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaErrorMsgs.setDescription('Number of messages found in error since startup by this MTA.')
mtaTenMinuteErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTenMinuteErrorMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTenMinuteErrorMsgs.setDescription('Number of messages found in error in the past 10 minutes by this MTA.')
mtaResiliencyState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaResiliencyState.setStatus('mandatory')
if mibBuilder.loadTexts: mtaResiliencyState.setDescription('Resiliency State of this MTA.')
mtaUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaUptime.setStatus('mandatory')
if mibBuilder.loadTexts: mtaUptime.setDescription('Uptime of this MTA.')
mtaLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("verbose", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaLogLevel.setStatus('mandatory')
if mibBuilder.loadTexts: mtaLogLevel.setDescription('MTA Log Level: Normal, Verbose')
mtaFileLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaFileLogging.setStatus('mandatory')
if mibBuilder.loadTexts: mtaFileLogging.setDescription('MTA Disk Logging enabled: Yes or No')
mtaMaxLogFileAge = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaMaxLogFileAge.setStatus('mandatory')
if mibBuilder.loadTexts: mtaMaxLogFileAge.setDescription('Maximum age for MTA log files.')
mtaMaxLogFileSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaMaxLogFileSpace.setStatus('mandatory')
if mibBuilder.loadTexts: mtaMaxLogFileSpace.setDescription('Maximum disk space for MTA log files.')
mtaCurrentLogFile = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaCurrentLogFile.setStatus('mandatory')
if mibBuilder.loadTexts: mtaCurrentLogFile.setDescription('MTA current log file name.')
mtaRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaRestart.setStatus('mandatory')
if mibBuilder.loadTexts: mtaRestart.setDescription('MTA Restart: Yes or No.')
mtaGUID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGUID.setStatus('mandatory')
if mibBuilder.loadTexts: mtaGUID.setDescription('Message Transfer Agent globally unique identifier.')
mtaOS = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOS.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOS.setDescription('Operating System name and version')
mtaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaVersion.setStatus('mandatory')
if mibBuilder.loadTexts: mtaVersion.setDescription('Version and date this agent.')
mtaAdmThreadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmThreadStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmThreadStatus.setDescription('Admin thread status: Running, Suspended, Unknown.')
mtaAdmCompletedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmCompletedMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmCompletedMsgs.setDescription('Number of Admin messages processed since startup by this MTA.')
mtaAdmErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmErrorMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmErrorMsgs.setDescription('Number of Admin message errors since startup by this MTA.')
mtaAdmInQueueMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmInQueueMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmInQueueMsgs.setDescription('Number of Admin messages waiting to be processed.')
mtaAdmDBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmDBStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmDBStatus.setDescription('Domain database status: Normal, DB Error, Unknown.')
mtaAdmDBSortLang = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmDBSortLang.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmDBSortLang.setDescription('Domain database sort language.')
mtaAdmDBRecoverCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdmDBRecoverCnt.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmDBRecoverCnt.setDescription('Number of DB recoveries performed since startup by this MTA.')
mtaDN = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDN.setStatus('mandatory')
if mibBuilder.loadTexts: mtaDN.setDescription('Distinguished Name of MTA agent.')
mtaLocalQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLocalQCount.setStatus('mandatory')
if mibBuilder.loadTexts: mtaLocalQCount.setDescription('Number of messages in Local post office and gateways queues.')
mtaLocalQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLocalQSize.setStatus('mandatory')
if mibBuilder.loadTexts: mtaLocalQSize.setDescription('Size of all messages in local post offices and gateways queues.(KB)')
mtaOtherQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOtherQCount.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOtherQCount.setDescription('Number of messages in other domains queues.')
mtaOtherQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOtherQSize.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOtherQSize.setDescription('Size of all messages in other domain queues.(KB)')
mtaINetQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaINetQCount.setStatus('mandatory')
if mibBuilder.loadTexts: mtaINetQCount.setDescription('Number of messages in internet queues.')
mtaINetQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaINetQSize.setStatus('mandatory')
if mibBuilder.loadTexts: mtaINetQSize.setDescription('Size of all messages in internet queues.(KB)')
mtaADAQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaADAQCount.setStatus('mandatory')
if mibBuilder.loadTexts: mtaADAQCount.setDescription('Number of messages in admin queues.')
mtaADAQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaADAQSize.setStatus('mandatory')
if mibBuilder.loadTexts: mtaADAQSize.setDescription('Size of all messages in admin queues.(KB)')
mtaOldestQMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 42), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOldestQMsg.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOldestQMsg.setDescription('Date stamp of oldest message in any of the queues.')
mtaOldestQDestname = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOldestQDestname.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOldestQDestname.setDescription('Facility/domain name of oldest message.')
mtaOldestADAQMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 44), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOldestADAQMsg.setStatus('mandatory')
if mibBuilder.loadTexts: mtaOldestADAQMsg.setDescription('Date stamp of oldest message in ADA queues.')
mtaAvailDiskSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAvailDiskSpace.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAvailDiskSpace.setDescription('Amount of disk space available.')
mtaHTTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaHTTPPort.setStatus('mandatory')
if mibBuilder.loadTexts: mtaHTTPPort.setDescription('HTTP port used by the agent')
mtaAdmDBStatusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("error", 1), ("recovering", 2), ("unknown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaAdmDBStatusNumber.setStatus('mandatory')
if mibBuilder.loadTexts: mtaAdmDBStatusNumber.setDescription('Numeric Domain database status')
mtaRouterQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 37, 1, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaRouterQCount.setStatus('mandatory')
if mibBuilder.loadTexts: mtaRouterQCount.setDescription('Number of messages in the routing queue.')
mtaTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 1), Integer32())
if mibBuilder.loadTexts: mtaTrapTime.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTrapTime.setDescription('The time the trap occurred. Seconds since Jan 1, 1970 (GMT)')
mtaServerName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: mtaServerName.setStatus('mandatory')
if mibBuilder.loadTexts: mtaServerName.setDescription('The logical MTA name')
mtaTrapDomainName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: mtaTrapDomainName.setStatus('mandatory')
if mibBuilder.loadTexts: mtaTrapDomainName.setDescription('The Domain for which this MTA operates.')
mtaFacilityName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: mtaFacilityName.setStatus('mandatory')
if mibBuilder.loadTexts: mtaFacilityName.setDescription('A Domain/PostOffice or Gateway name.')
mtaFacilityLink = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: mtaFacilityLink.setStatus('mandatory')
if mibBuilder.loadTexts: mtaFacilityLink.setDescription('A Domain/PostOffice or Gateway path.')
mtaClosureReason = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 37, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: mtaClosureReason.setStatus('mandatory')
if mibBuilder.loadTexts: mtaClosureReason.setDescription('Reason for facility closure.')
mtaStartupTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,1)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaStartupTrap.setDescription('MTA started.')
mtaShutdownTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,2)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaShutdownTrap.setDescription('MTA shut down.')
mtaRestartTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,3)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaRestartTrap.setDescription('MTA restart initiated.')
mtaConfigurationLoadedTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,4)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaConfigurationLoadedTrap.setDescription('MTA configuration loaded.')
mtaFacilityClosedTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,5)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaFacilityName"), ("GWMTA-MIB", "mtaFacilityLink"), ("GWMTA-MIB", "mtaClosureReason"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaFacilityClosedTrap.setDescription('MTA facility closed.')
mtaFacilityOpenedTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,6)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaFacilityName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaFacilityOpenedTrap.setDescription('MTA facility opened.')
mtaBackupOnlineTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,7)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaBackupOnlineTrap.setDescription('Backup MTA went online.')
mtaBackupStandbyTrap = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 37, 3) + (0,8)).setObjects(("GWMTA-MIB", "mtaTrapTime"), ("GWMTA-MIB", "mtaServerName"), ("GWMTA-MIB", "mtaDomainName"), ("GWMTA-MIB", "mtaGUID"))
if mibBuilder.loadTexts: mtaBackupStandbyTrap.setDescription('Backup MTA went standby.')
mibBuilder.exportSymbols("GWMTA-MIB", gwmta=gwmta, mtaRestartTrap=mtaRestartTrap, mtaShutdownTrap=mtaShutdownTrap, mta=mta, mtaGUID=mtaGUID, mtaEntry=mtaEntry, mtaTrapInfo=mtaTrapInfo, mtaClosedPostOffices=mtaClosedPostOffices, mtaOtherQCount=mtaOtherQCount, mtaAvailDiskSpace=mtaAvailDiskSpace, mtaAdmInQueueMsgs=mtaAdmInQueueMsgs, mtaDN=mtaDN, mtaTrapDomainName=mtaTrapDomainName, mtaOldestQDestname=mtaOldestQDestname, mibDoc=mibDoc, mtaTrapTime=mtaTrapTime, novell=novell, mtaBackupStandbyTrap=mtaBackupStandbyTrap, mtaTenMinuteUndeliverableMsgs=mtaTenMinuteUndeliverableMsgs, mtaINetQSize=mtaINetQSize, mtaStartupTrap=mtaStartupTrap, mtaAdmDBRecoverCnt=mtaAdmDBRecoverCnt, mtaHTTPPort=mtaHTTPPort, mtaOldestADAQMsg=mtaOldestADAQMsg, mtaServerName=mtaServerName, mtaFacilityClosedTrap=mtaFacilityClosedTrap, mtaAdmCompletedMsgs=mtaAdmCompletedMsgs, mtaTenMinuteRoutedMsgs=mtaTenMinuteRoutedMsgs, mtaIndex=mtaIndex, mtaDomainName=mtaDomainName, mtaTotalPostOffices=mtaTotalPostOffices, mtaTraps=mtaTraps, mtaClosedDomains=mtaClosedDomains, mtaCurrentLogFile=mtaCurrentLogFile, mtaTenMinuteErrorMsgs=mtaTenMinuteErrorMsgs, mtaOS=mtaOS, mtaLogLevel=mtaLogLevel, mtaClosedGateways=mtaClosedGateways, mtaFacilityName=mtaFacilityName, mtaAdmThreadStatus=mtaAdmThreadStatus, mtaRoutedMsgs=mtaRoutedMsgs, mtaOtherQSize=mtaOtherQSize, mtaUndeliverableMsgs=mtaUndeliverableMsgs, mtaResiliencyState=mtaResiliencyState, mtaRestart=mtaRestart, mtaErrorMsgs=mtaErrorMsgs, mtaTable=mtaTable, mtaAdmErrorMsgs=mtaAdmErrorMsgs, mtaTotalGateways=mtaTotalGateways, mtaAdmDBSortLang=mtaAdmDBSortLang, mtaConfigurationLoadedTrap=mtaConfigurationLoadedTrap, mtaMaxLogFileAge=mtaMaxLogFileAge, mtaMaxLogFileSpace=mtaMaxLogFileSpace, mtaAdmDBStatus=mtaAdmDBStatus, mtaLocalQSize=mtaLocalQSize, mtaUptime=mtaUptime, mtaVersion=mtaVersion, mtaADAQSize=mtaADAQSize, mtaFacilityLink=mtaFacilityLink, mtaClosureReason=mtaClosureReason, mtaFacilityOpenedTrap=mtaFacilityOpenedTrap, mtaADAQCount=mtaADAQCount, mtaOldestQMsg=mtaOldestQMsg, mtaLocalQCount=mtaLocalQCount, mtaTotalDomains=mtaTotalDomains, mtaINetQCount=mtaINetQCount, mtaRouterQCount=mtaRouterQCount, mtaAdmDBStatusNumber=mtaAdmDBStatusNumber, mtaFileLogging=mtaFileLogging, mtaBackupOnlineTrap=mtaBackupOnlineTrap)
