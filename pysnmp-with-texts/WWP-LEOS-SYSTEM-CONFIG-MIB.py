#
# PySNMP MIB module WWP-LEOS-SYSTEM-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-SYSTEM-CONFIG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Unsigned32, Counter32, ModuleIdentity, Counter64, MibIdentifier, TimeTicks, Bits, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Unsigned32", "Counter32", "ModuleIdentity", "Counter64", "MibIdentifier", "TimeTicks", "Bits", "IpAddress", "ObjectIdentity")
RowStatus, TextualConvention, DisplayString, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime", "TruthValue")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosSystemConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12))
wwpLeosSystemConfigMIB.setRevisions(('2012-09-19 00:00', '2012-07-06 00:00', '2012-06-27 00:00', '2012-04-16 00:00', '2011-11-05 00:00', '2011-07-05 00:00', '2002-03-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosSystemConfigMIB.setRevisionsDescriptions(('Added wwpLeosSystemServers for enable/disable of SFTP server.', 'Added three new tables for XFTP server settings.', 'Corrected string lengths.', 'Added a new table for Default Gateway to support IPv6 configuration. The old OID, wwpLeosSystemConfigDefaultGateway, will continue to support ipv4 configuration.', 'Added a new table for Guardian configuration', 'Added a new object wwpLeosTelnetMaxAdminUserSessions.', 'Initial creation.',))
if mibBuilder.loadTexts: wwpLeosSystemConfigMIB.setLastUpdated('201209190000Z')
if mibBuilder.loadTexts: wwpLeosSystemConfigMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: wwpLeosSystemConfigMIB.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: wwpLeosSystemConfigMIB.setDescription('The MIB module for the WWP System Config information.')
class FileName(TextualConvention, OctetString):
    description = 'Represents the textual convention which defines the name string and display hint'
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

wwpLeosSystemConfigMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1))
wwpLeosSystemConfigAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1))
wwpLeosSystemConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2))
wwpLeosSystemTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 3))
wwpLeosSystemConfigMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2))
wwpLeosSystemConfigMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0))
wwpLeosSystemConfigMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3))
wwpLeosSystemConfigCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 1))
wwpLeosSystemConfigMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 2))
wwpLeosSystemConfigDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGateway.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGateway.setDescription('Default gateway IP address.')
wwpLeosSystemConfigBootCmdFile = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 2), FileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigBootCmdFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBootCmdFile.setDescription('Name of the last successfully executed command file name executed by the device.')
wwpLeosSystemConfigBootCfgFile = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 3), FileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigBootCfgFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBootCfgFile.setDescription('This mib object specifies the bootup config file for the system. Setting is object is similar to setting default load config file name. When device will reboot it will attempt to load the file specified by wwpLeosSystemConfigBootCfgFile.')
wwpLeosSystemClockDateTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemClockDateTime.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemClockDateTime.setDescription('The current system date and time of box. There are no provisions for local time or daylight savings. All times use the 24 hr clock and are UTC. Because device time is UTC, only first 7 bytes of DateAndTime data are returned, as per RFC1903.')
wwpLeosSystemConfigSavePermFile = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 5), FileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigSavePermFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigSavePermFile.setDescription("Setting this object will set the save file name to the value of wwpLeosSystemConfigSavePermFile. What it means is that whenever wwpLeosSystemConfigControl is set to value 'save' then if wwpLeosSystemConfigSaveFile is not set then device will use wwpLeosSystemConfigSavePermFile as the file name to store config.")
wwpLeosSystemConfigLastFileNameReset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigLastFileNameReset.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigLastFileNameReset.setDescription('Setting this object will reset the name of the last config filename that was successfully executed by the device.')
wwpLeosSystemServiceMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("mpls", 1), ("pbt", 2), ("aoam", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemServiceMode.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemServiceMode.setDescription("Setting this object will change the service mode of operation. It will cause device to reboot. If this object is set to 'none' then device will reject the request and will return error.")
wwpLeosSystemConfigBackupGateway = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGateway.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGateway.setDescription('Backup gateway IP address.')
wwpLeosSystemConfigCustomerCfgFile = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 9), FileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigCustomerCfgFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigCustomerCfgFile.setDescription('Setting this object will set the name of the default customer configuration file name, which is the file that will copied to the default configuration file during a reset-to-customer-default operation. Setting this object to an empty string will remove the file name from the system configuration.')
wwpLeosSystemConfigDefaultGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10), )
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayTable.setDescription('The (conceptual) table listing the default gateways')
wwpLeosSystemConfigDefaultGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigDefaultGatewayIndex"))
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemConfigDefaultGatewayTable.')
wwpLeosSystemConfigDefaultGatewayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemConfigDefaultGatewayInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInetAddrType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInetAddrType.setDescription('The Inet address type of default gateway. Used in conjunction with wwpLeosSystemConfigDefaultGatewayInetAddress. When set to : ipv4: wwpLeosSystemConfigDefaultGatewayInetAddress should be compliant with InetAddressIPv4 from RFC 4001 ipv6: wwpLeosSystemConfigDefaultGatewayInetAddress should be compliant with InetAddressIPv6 from RFC 4001.')
wwpLeosSystemConfigDefaultGatewayInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInetAddress.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInetAddress.setDescription('Default gateway IP address. This OID must be used in conjunction with wwpLeosSystemConfigDefaultGatewayInetAddrType. The InetAddress set here should be compliant with rfc 4001 InetAddressType. When this OID is set, wwpLeosSystemConfigDefaultGateway is set ot 0.0.0.0.')
wwpLeosSystemConfigDefaultGatewayInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInterfaceName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayInterfaceName.setDescription('Interface Name of the gateway, local or remote.')
wwpLeosSystemConfigDefaultGatewayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayMetric.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayMetric.setDescription('Metric of the gateway.')
wwpLeosSystemConfigDefaultGatewayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 10, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigDefaultGatewayStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. To delete an entry, set this object to 'destroy'.")
wwpLeosSystemConfigBackupGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11), )
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayTable.setDescription('The (conceptual) table listing the default gateways')
wwpLeosSystemConfigBackupGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigBackupGatewayIndex"))
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemConfigBackupGatewayTable.')
wwpLeosSystemConfigBackupGatewayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemConfigBackupGatewayInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInetAddrType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInetAddrType.setDescription('The Inet address type of backup gateway. Used in conjunction with wwpLeosSystemConfigBackupGatewayInetAddress. When set to : ipv4: wwpLeosSystemConfigBackupGatewayInetAddress should be compliant with InetAddressIPv4 from RFC 4001 ipv6: wwpLeosSystemConfigBackupGatewayInetAddress should be compliant with InetAddressIPv6 from RFC 4001.')
wwpLeosSystemConfigBackupGatewayInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInetAddress.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInetAddress.setDescription('Backup gateway IP address. This OID must be used in conjunction with wwpLeosSystemConfigBackupGatewayInetAddrType. The InetAddress set here should be compliant with rfc 4001 InetAddressType. When this OID is set, wwpLeosSystemConfigBackupGateway is set ot 0.0.0.0.')
wwpLeosSystemConfigBackupGatewayInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInterfaceName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayInterfaceName.setDescription('Interface Name of the gateway, local or remote.')
wwpLeosSystemConfigBackupGatewayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayMetric.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayMetric.setDescription('Metric of the gateway.')
wwpLeosSystemConfigBackupGatewayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 1, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigBackupGatewayStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. To delete an entry, set this object to 'destroy'.")
wwpLeosSystemConfigSaveFileName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 1), FileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigSaveFileName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigSaveFileName.setDescription("wwpLeosSystemConfigSaveFileName specifies the name of the config file to be used when wwpLeosSystemConfigControl has been set to 'save'. If this object is not set then device will use the file name specified by wwpLeosSystemConfigSavePermFile. If wwpLeosSystemConfigSavePermFile is also not set then default config file name i.e startup-config will be used to save config. Once 'wwpLeosSystemConfigControl' has been successfully applied, read on wwpLeosSystemConfigSaveFileName will always return empty string else it will show what user has configured.")
wwpLeosSystemConfigControl = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("save", 1), ("mfgDefaultCfg", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigControl.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigControl.setDescription("Controls configuration options on the device. The current options are: save: to make the configuration changes made using SNMP persistent across a reboot. mfgDefaultCfg: Set system configuration to factory defaults. Note: this will wipe out all of the current configuration including Password and VLAN information. If the system doesn't support any of these control configuration option, it should return error while trying to set this object to the specific option. A read on this object should return none(0).")
wwpLeosSystemConfigFilepath = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 3), FileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigFilepath.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigFilepath.setDescription('Returns the path for configuration related files.')
wwpLeosSystemConfigFileTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 4), )
if mibBuilder.loadTexts: wwpLeosSystemConfigFileTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigFileTable.setDescription('The (conceptual) table listing the configs')
wwpLeosSystemConfigFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 4, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigFileIndex"))
if mibBuilder.loadTexts: wwpLeosSystemConfigFileEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigFileEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemConfigFileTable.')
wwpLeosSystemConfigFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosSystemConfigFileIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigFileIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 4, 1, 2), FileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigFileName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigFileName.setDescription('The name of the Config file.')
wwpLeosSystemConfigActivateFile = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("loadCfg", 1), ("resetToCfg", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemConfigActivateFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigActivateFile.setDescription("Set this object to 'loadCfg to load the 'wwpLeosSystemConfigFileName' config. If the operation was successful, this object performs the CLI equivalent to these commands and will return the status Setting this object to 'resetToCfg' will kills the load module and reloads a new load module and applies the config file specified by wwpLeosSystemConfigFileName. Setting this object to none will do nothing.")
wwpLeosTelnetMaxBaseUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTelnetMaxBaseUserSessions.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTelnetMaxBaseUserSessions.setDescription('The max number of base user telnet sessions for the device.')
wwpLeosTelnetMaxSuperUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTelnetMaxSuperUserSessions.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTelnetMaxSuperUserSessions.setDescription('The max number of super user telnet sessions for the device.')
wwpLeosTelnetMaxAdminUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTelnetMaxAdminUserSessions.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTelnetMaxAdminUserSessions.setDescription('The max number of admin users telnet sessions for the device.')
wwpLeosSystemCpuLoadQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7))
wwpLeosSystemCpuLoad1Min = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1Min.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1Min.setDescription('The OID to display CPU load in last 1 min. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad10Min = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad10Min.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad10Min.setDescription('The OID to display CPU load in last 10 min. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad15Min = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15Min.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15Min.setDescription('The OID to display CPU load in last 15 min. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad5Min = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5Min.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5Min.setDescription('The OID to display CPU load in last 5 min. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad1MinMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinMinimum.setDescription('The minimum 1 minute CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad1MinMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinMaximum.setDescription('The maximum 1 minute CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad1MinState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad1MinState.setDescription('The 1 minute CPU load average state.')
wwpLeosSystemCpuLoad15MinMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinMinimum.setDescription('The minimum 15 minute CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad15MinMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinMaximum.setDescription('The maximum 15 minute CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad15MinState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad15MinState.setDescription('The 15 minutes CPU load average state.')
wwpLeosSystemCpuLoad5MinMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinMinimum.setDescription('The minimum 5 minutes CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad5MinMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinMaximum.setDescription('The maximum 5 minutes CPU load average. This value is an integer representation of the CPU load (load average * 100).')
wwpLeosSystemCpuLoad5MinState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 7, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuLoad5MinState.setDescription('The 5 minutes CPU load average state.')
wwpLeosSystemConfigNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8))
wwpLeosSystemConfigNotifTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8, 1), )
if mibBuilder.loadTexts: wwpLeosSystemConfigNotifTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigNotifTable.setDescription('The (conceptual) table listing the configuration file line numbers. This table is only used when sending wwpLeosImproperCmdInConfigFile notification. No Get, GetNext or Set is allowed on this table.')
wwpLeosSystemConfigNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8, 1, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigFileIndex"))
if mibBuilder.loadTexts: wwpLeosSystemConfigNotifEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigNotifEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemConfigNotifTable. No Get, GetNext or Set is allowed on this table.')
wwpLeosSystemConfigErrLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigErrLineNum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigErrLineNum.setDescription('The OID is sent in the wwpLeosImproperCmdInConfigFile trap to identify the line number which was failed when configuration is applied. No Get, GetNext or Set is allowed on this table.')
wwpLeosSystemConfigErrStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigErrStr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigErrStr.setDescription('The OID is wwpLeosSystemConfigErrStr trap to identify the line which was failed when configuration is applied. No Get, GetNext or Set is allowed on this table.')
wwpLeosSystemConfigErrLinesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemConfigErrLinesTotal.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemConfigErrLinesTotal.setDescription('The OID is sent in the wwpLeosImproperCmdInConfigFile trap to identify the total line numbers which was failed when configuration is applied. No Get, GetNext or Set is allowed on this table.')
wwpLeosSystemMemoryUsageQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9))
wwpLeosSystemMemoryUsageTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1), )
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageTable.setDescription('Table of Memory Usage for various Memory Pools.')
wwpLeosSystemMemoryUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUsagePoolIndex"))
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageEntry.setDescription('An entry for each Memory Pool.')
wwpLeosSystemMemoryUsagePoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ose-pool-1", 1), ("global-heap", 2), ("malloc-heap", 3))))
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsagePoolIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsagePoolIndex.setDescription('The Memory Pool type.')
wwpLeosSystemMemoryUsageMemoryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 2), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryTotal.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryTotal.setDescription('Total size of the Memory Pool in bytes.')
wwpLeosSystemMemoryUsageMemoryLWM = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryLWM.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryLWM.setDescription('Lowest free memory in the Memory Pool in bytes. Not supported in SAOS 6.x')
wwpLeosSystemMemoryUsageMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 4), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryFree.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryFree.setDescription("Amount of free memory in the Memory Pool in bytes. This corresponds to the CLI's memory never used.")
wwpLeosSystemMemoryUsageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("lowMemory", 2), ("notSupported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageStatus.setDescription('Denotes if the free memory amount is normal or below limit.')
wwpLeosSystemMemoryUsageMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 6), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryUsed.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryUsed.setDescription('Amount of used memory in the Memory Pool in bytes..')
wwpLeosSystemMemoryUsageMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 9, 1, 1, 7), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryAvailable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUsageMemoryAvailable.setDescription('Amount of available memory in the Memory Pool in bytes.')
wwpLeosSystemXFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10))
wwpLeosSystemXFtpMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("ftp", 2), ("sftp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpMode.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpMode.setDescription('Select between modes of file transfer. The default mode is tftp.')
wwpLeosSystemXFtpServer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpServer.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpServer.setDescription('IP address or the host name of default server.')
wwpLeosSystemXFtpUserName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpUserName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpUserName.setDescription('Name used to login with.')
wwpLeosSystemXFtpPasswd = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpPasswd.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpPasswd.setDescription('Password used to login with.')
wwpLeosSystemXFtpNumOfRetries = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpNumOfRetries.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpNumOfRetries.setDescription('Number of times to retry a file transfer request if it fails.')
wwpLeosSystemXFtpRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpRetryInterval.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpRetryInterval.setDescription('Length of time in seconds to wait before retrying a file transfer if it fails.')
wwpLeosSystemXFtpConnectionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemXFtpConnectionTimeout.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpConnectionTimeout.setDescription('Length of time in seconds to wait before connection times out.')
wwpLeosSystemXFtpTFtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 8), )
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerTable.setDescription('The (conceptual) table listing the default TFTP server')
wwpLeosSystemXFtpTFtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 8, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemXFtpTFtpServerIndex"))
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemXFtpTFtpServerTable.')
wwpLeosSystemXFtpTFtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemXFtpTFtpServerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 8, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerHostName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerHostName.setDescription('Host name or IP address of the default TFTP server.')
wwpLeosSystemXFtpTFtpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpTFtpServerRowStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. To delete an entry, set this object to 'destroy'. At the current time, there is only one, static row in this table, with index 1.")
wwpLeosSystemXFtpFtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9), )
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerTable.setDescription('The (conceptual) table listing the default FTP server')
wwpLeosSystemXFtpFtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemXFtpFtpServerIndex"))
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemXFtpFtpServerTable.')
wwpLeosSystemXFtpFtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemXFtpFtpServerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerHostName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerHostName.setDescription('Host name or IP address of the default FTP server.')
wwpLeosSystemXFtpFtpServerUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerUserName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerUserName.setDescription('User name / login ID to be used with the default FTP server.')
wwpLeosSystemXFtpFtpServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerPassword.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerPassword.setDescription('Password to be used with the default FTP server. Returns an empty string when read. Either the password or the secret may be set, but not both.')
wwpLeosSystemXFtpFtpServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerSecret.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerSecret.setDescription('Password secret to be used with the default FTP server. Returns an empty string when read. Either the password or the secret may be set, but not both.')
wwpLeosSystemXFtpFtpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpFtpServerRowStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. To delete an entry, set this object to 'destroy'. At the current time, there is only one, static row in this table, with index 1.")
wwpLeosSystemXFtpSFtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10), )
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerTable.setDescription('The (conceptual) table listing the default SFTP server')
wwpLeosSystemXFtpSFtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1), ).setIndexNames((0, "WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemXFtpSFtpServerIndex"))
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerEntry.setDescription('An entry (conceptual row) in the wwpLeosSystemXFtpSFtpServerTable.')
wwpLeosSystemXFtpSFtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerIndex.setDescription('Unique identifier to the table.')
wwpLeosSystemXFtpSFtpServerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerHostName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerHostName.setDescription('Host name or IP address of the default SFTP server.')
wwpLeosSystemXFtpSFtpServerUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerUserName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerUserName.setDescription('User name / login ID to be used with the default SFTP server.')
wwpLeosSystemXFtpSFtpServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerPassword.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerPassword.setDescription('Password to be used with the default SFTP server. Returns an empty string when read. Either the password or the secret may be set, but not both.')
wwpLeosSystemXFtpSFtpServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerSecret.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerSecret.setDescription('Password secret to be used with the default SFTP server. Returns an empty string when read. Either the password or the secret may be set, but not both.')
wwpLeosSystemXFtpSFtpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 10, 10, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemXFtpSFtpServerRowStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. To delete an entry, set this object to 'destroy'. At the current time, there is only one, static row in this table, with index 1.")
wwpLeosSystemCpuUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11))
wwpLeosSystemCpuUtilizationLast5Seconds = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5Seconds.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5Seconds.setDescription('Average 5 second CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast5SecondsMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsMinimum.setDescription('Minimum 5 second CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast5SecondsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsMaximum.setDescription('The maximum 5 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast5SecondsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast5SecondsState.setDescription('The 5 seconds CPU usage state.')
wwpLeosSystemCpuUtilizationLast10Seconds = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10Seconds.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10Seconds.setDescription('The 10 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast10SecondsMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsMinimum.setDescription('Minimum 10 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast10SecondsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsMaximum.setDescription('Maximum 10 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast10SecondsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast10SecondsState.setDescription('The 10 seconds CPU usage state.')
wwpLeosSystemCpuUtilizationLast60Seconds = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60Seconds.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60Seconds.setDescription('The 60 seconds CPU usage state.')
wwpLeosSystemCpuUtilizationLast60SecondsMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsMinimum.setDescription('Minimum 60 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast60SecondsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsMaximum.setDescription('Maximum 60 seconds CPU usage measurement.')
wwpLeosSystemCpuUtilizationLast60SecondsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 11, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilizationLast60SecondsState.setDescription('The 60 seconds CPU state.')
wwpLeosSystemFileSystemUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12))
wwpLeosSystemFileSystemUtilizationTmpfsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsCurrent.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsCurrent.setDescription('Current percentage usage of the /tmp/ directory in the filesystem.')
wwpLeosSystemFileSystemUtilizationTmpfsMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsMinimum.setDescription('Minimum percentage usage of the /tmp/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationTmpfsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsMaximum.setDescription('Maximum percentage usage of the /tmp/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationTmpfsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpfsState.setDescription('Current state of the /tmp/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationSysfsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsCurrent.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsCurrent.setDescription('Current percentage usage of the /mnt/sysfs/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationSysfsMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsMinimum.setDescription('Minimum percentage usage of the /mnt/sysfs/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationSysfsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsMaximum.setDescription('Maximum percentage usage of the /mnt/sysfs/ directory in the file system.')
wwpLeosSystemFileSystemUtilizationSysfsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsState.setDescription('Current state of the /mnt/sysfs/ directory in the file system.')
wwpLeosSystemMemoryUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13))
wwpLeosSystemMemoryUtilizationUsedMemoryCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryCurrent.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryCurrent.setDescription('Current number of used memory in bytes.')
wwpLeosSystemMemoryUtilizationUsedMemoryMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryMinimum.setDescription('Minimum number of used memory in bytes.')
wwpLeosSystemMemoryUtilizationUsedMemoryMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationUsedMemoryMaximum.setDescription('Maximum number of used memory in bytes.')
wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent.setDescription('Current number of available memory in bytes.')
wwpLeosSystemMemoryUtilizationAvailableMemoryMinimum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryMinimum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryMinimum.setDescription('Minimum number of available memory in bytes.')
wwpLeosSystemMemoryUtilizationAvailableMemoryMaximum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryMaximum.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryMaximum.setDescription('Maximum number of available memory in bytes.')
wwpLeosSystemMemoryUtilizationAvailableMemoryState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 13, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("degraded", 3), ("faulted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationAvailableMemoryState.setDescription('Current state of the available memory.')
wwpLeosSystemGuardian = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14))
wwpLeosSystemGuardianAdminEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemGuardianAdminEnable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemGuardianAdminEnable.setDescription('Sets the admin state for the system guardian. A reboot is required for changes to take effect')
wwpLeosSystemGuardianOperEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("suspended", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemGuardianOperEnable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemGuardianOperEnable.setDescription('Displays the current guardian operational state.')
wwpLeosSystemGuardianLimitNumReboots = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemGuardianLimitNumReboots.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemGuardianLimitNumReboots.setDescription('limits the number of consecutive guardian reboots to 3 if set to on.')
wwpLeosSystemGuardianConsecutiveReboots = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemGuardianConsecutiveReboots.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemGuardianConsecutiveReboots.setDescription('The current number of consecutive guardian reboots')
wwpLeosSystemGuardianTotalReboots = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 14, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSystemGuardianTotalReboots.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemGuardianTotalReboots.setDescription('The total number of guardian reboots.')
wwpLeosSystemServers = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 15))
wwpLeosSystemSftpServerAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 1, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSystemSftpServerAdminState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemSftpServerAdminState.setDescription('Sets the admin state for the SFTP server')
wwpLeosImproperCmdInConfigFile = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 1)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigFileName"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigErrLineNum"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigErrLinesTotal"))
if mibBuilder.loadTexts: wwpLeosImproperCmdInConfigFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosImproperCmdInConfigFile.setDescription('A wwpLeosImproperCmdInConfigFile notif signifies that the SNMP entity, acting in an agent role, has counted the number of improper commands that were found in the configuration file while processing the wwpLeosSystemConfigFileName')
wwpLeosSystemServiceModeChange = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 2)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemServiceMode"))
if mibBuilder.loadTexts: wwpLeosSystemServiceModeChange.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemServiceModeChange.setDescription('A wwpLeosSystemServiceModeChange notification will be sent out whenever someone changes the system service mode between mpls and pbt.')
wwpLeosSystemMemoryStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 3)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUsageMemoryTotal"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUsageMemoryFree"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUsageStatus"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUsageMemoryAvailable"))
if mibBuilder.loadTexts: wwpLeosSystemMemoryStatusNotification.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryStatusNotification.setDescription('A wwpLeosSystemMemoryStatusNotification notification will be sent out whenever the system memory is below threshold limit.')
wwpLeosImproperCmdInConfigLineString = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 4)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigErrStr"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigErrLineNum"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigFileName"))
if mibBuilder.loadTexts: wwpLeosImproperCmdInConfigLineString.setStatus('current')
if mibBuilder.loadTexts: wwpLeosImproperCmdInConfigLineString.setDescription('A wwpLeosImproperCmdInConfigLineString notif signifies that the SNMP entity, acting in an agent role, has detected that improper commands were found in the configuration file while processing the wwpLeosSystemConfigFileName. wwpLeosSystemConfigErrStr will specify the commands which failed with the line number.')
wwpLeosSystemCpuUtilization5SecondStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 5)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast5Seconds"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast5SecondsState"))
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization5SecondStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization5SecondStatusTrap.setDescription('The wwpLeosSystemCpuUtilizationStatusTrap is sent out when the 5 second CPU utilization changes states.')
wwpLeosSystemCpuUtilization10SecondStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 6)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast10Seconds"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast10SecondsState"))
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization10SecondStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization10SecondStatusTrap.setDescription('The wwpLeosSystemCpuUtilization10SecondStatusTrap is sent out when the 10 second CPU utilization changes states.')
wwpLeosSystemCpuUtilization60SecondStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 7)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast60Seconds"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuUtilizationLast60SecondsState"))
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization60SecondStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpuUtilization60SecondStatusTrap.setDescription('The wwpLeosSystemCpuUtilizationStatusTrap is sent out when the 60 second CPU utilization changes states.')
wwpLeosSystemCpu1MinLoadStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 8)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad1Min"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad1MinState"))
if mibBuilder.loadTexts: wwpLeosSystemCpu1MinLoadStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpu1MinLoadStatusTrap.setDescription('The wwpLeosSystemCpuLoadStatusTrap is sent out when the CPU load over one minute changes states.')
wwpLeosSystemCpu5MinLoadStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 9)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad5Min"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad5MinState"))
if mibBuilder.loadTexts: wwpLeosSystemCpu5MinLoadStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpu5MinLoadStatusTrap.setDescription('The wwpLeosSystemCpuLoadStatusTrap is sent out when the CPU load over five minutes changes states.')
wwpLeosSystemCpu15MinLoadStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 10)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad15Min"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemCpuLoad15MinState"))
if mibBuilder.loadTexts: wwpLeosSystemCpu15MinLoadStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemCpu15MinLoadStatusTrap.setDescription('The wwpLeosSystemCpuLoadStatusTrap is sent out when the CPU load over fifteen minutes changes states.')
wwpLeosSystemMemoryUtilizationStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 11)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemMemoryUtilizationAvailableMemoryState"))
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemMemoryUtilizationStatusTrap.setDescription('The wwpLeosSystemMemoryUtilizationStatusTrap is sent out when the memory utilization changes states.')
wwpLeosSystemFileSystemUtilizationTmpStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 12)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemFileSystemUtilizationTmpfsCurrent"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemFileSystemUtilizationTmpfsState"))
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationTmpStatusTrap.setDescription("The wwpLeosSystemFileSystemUtilizationTmpStatusTrap is sent out when the usage of '/tmp/' changes states.")
wwpLeosSystemFileSystemUtilizationSysfsStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 2, 0, 13)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemFileSystemUtilizationSysfsCurrent"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemFileSystemUtilizationSysfsState"))
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsStatusTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosSystemFileSystemUtilizationSysfsStatusTrap.setDescription("The wwpLeosSystemFileSystemUtilizationSysfsStatusTrap is sent out when the usage of '/mnt/sysfs/' changes states.")
wwpLeosDefaultGatewayCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 1, 1)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosDefaultGatewayIPv6Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosDefaultGatewayCompliance = wwpLeosDefaultGatewayCompliance.setStatus('current')
if mibBuilder.loadTexts: wwpLeosDefaultGatewayCompliance.setDescription('The compliance statement of wwpLeosSystemConfigAttr.')
wwpLeosBackupGatewayCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 1, 2)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosBackupGatewayIPv6Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosBackupGatewayCompliance = wwpLeosBackupGatewayCompliance.setStatus('current')
if mibBuilder.loadTexts: wwpLeosBackupGatewayCompliance.setDescription('The compliance statement of wwpLeosSystemConfigAttr.')
wwpLeosDefaultGatewayIPv6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 2, 1)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigDefaultGatewayInetAddrType"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigDefaultGatewayInetAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosDefaultGatewayIPv6Group = wwpLeosDefaultGatewayIPv6Group.setStatus('current')
if mibBuilder.loadTexts: wwpLeosDefaultGatewayIPv6Group.setDescription('System config default gateway objects for supporting IPv6.')
wwpLeosBackupGatewayIPv6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 12, 3, 2, 2)).setObjects(("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigBackupGatewayInetAddrType"), ("WWP-LEOS-SYSTEM-CONFIG-MIB", "wwpLeosSystemConfigBackupGatewayInetAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosBackupGatewayIPv6Group = wwpLeosBackupGatewayIPv6Group.setStatus('current')
if mibBuilder.loadTexts: wwpLeosBackupGatewayIPv6Group.setDescription('System config backup gateway objects for supporting IPv6.')
mibBuilder.exportSymbols("WWP-LEOS-SYSTEM-CONFIG-MIB", wwpLeosSystemConfigSavePermFile=wwpLeosSystemConfigSavePermFile, wwpLeosDefaultGatewayIPv6Group=wwpLeosDefaultGatewayIPv6Group, wwpLeosSystemConfigMIBObjects=wwpLeosSystemConfigMIBObjects, wwpLeosSystemConfigBackupGatewayTable=wwpLeosSystemConfigBackupGatewayTable, wwpLeosSystemConfigErrLinesTotal=wwpLeosSystemConfigErrLinesTotal, wwpLeosSystemXFtp=wwpLeosSystemXFtp, wwpLeosSystemCpuUtilizationLast5SecondsMinimum=wwpLeosSystemCpuUtilizationLast5SecondsMinimum, wwpLeosSystemCpuLoad1MinMaximum=wwpLeosSystemCpuLoad1MinMaximum, wwpLeosSystemMemoryUtilization=wwpLeosSystemMemoryUtilization, wwpLeosSystemXFtpFtpServerEntry=wwpLeosSystemXFtpFtpServerEntry, wwpLeosSystemXFtpRetryInterval=wwpLeosSystemXFtpRetryInterval, wwpLeosSystemXFtpFtpServerUserName=wwpLeosSystemXFtpFtpServerUserName, wwpLeosSystemConfigDefaultGatewayEntry=wwpLeosSystemConfigDefaultGatewayEntry, wwpLeosSystemMemoryUtilizationUsedMemoryMaximum=wwpLeosSystemMemoryUtilizationUsedMemoryMaximum, wwpLeosSystemCpuUtilization=wwpLeosSystemCpuUtilization, wwpLeosSystemConfigControl=wwpLeosSystemConfigControl, wwpLeosSystemCpuLoad15Min=wwpLeosSystemCpuLoad15Min, wwpLeosSystemFileSystemUtilizationTmpfsMinimum=wwpLeosSystemFileSystemUtilizationTmpfsMinimum, wwpLeosSystemGuardianLimitNumReboots=wwpLeosSystemGuardianLimitNumReboots, wwpLeosSystemMemoryUsageMemoryUsed=wwpLeosSystemMemoryUsageMemoryUsed, wwpLeosSystemMemoryUsageMemoryLWM=wwpLeosSystemMemoryUsageMemoryLWM, wwpLeosSystemGuardianTotalReboots=wwpLeosSystemGuardianTotalReboots, FileName=FileName, wwpLeosSystemConfigActivateFile=wwpLeosSystemConfigActivateFile, wwpLeosTelnetMaxBaseUserSessions=wwpLeosTelnetMaxBaseUserSessions, wwpLeosSystemConfigBackupGatewayInterfaceName=wwpLeosSystemConfigBackupGatewayInterfaceName, wwpLeosSystemConfigErrStr=wwpLeosSystemConfigErrStr, wwpLeosSystemConfigMIBConformance=wwpLeosSystemConfigMIBConformance, wwpLeosSystemCpuLoad5MinMinimum=wwpLeosSystemCpuLoad5MinMinimum, wwpLeosSystemConfigBackupGatewayInetAddrType=wwpLeosSystemConfigBackupGatewayInetAddrType, wwpLeosSystemXFtpSFtpServerHostName=wwpLeosSystemXFtpSFtpServerHostName, wwpLeosSystemCpu1MinLoadStatusTrap=wwpLeosSystemCpu1MinLoadStatusTrap, wwpLeosSystemCpu15MinLoadStatusTrap=wwpLeosSystemCpu15MinLoadStatusTrap, wwpLeosSystemConfigCustomerCfgFile=wwpLeosSystemConfigCustomerCfgFile, wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent=wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent, wwpLeosSystemCpuLoad5MinState=wwpLeosSystemCpuLoad5MinState, wwpLeosSystemCpuUtilizationLast60SecondsMaximum=wwpLeosSystemCpuUtilizationLast60SecondsMaximum, wwpLeosSystemCpuUtilizationLast5SecondsState=wwpLeosSystemCpuUtilizationLast5SecondsState, wwpLeosSystemCpuUtilizationLast10SecondsMaximum=wwpLeosSystemCpuUtilizationLast10SecondsMaximum, wwpLeosSystemXFtpFtpServerHostName=wwpLeosSystemXFtpFtpServerHostName, PYSNMP_MODULE_ID=wwpLeosSystemConfigMIB, wwpLeosSystemXFtpTFtpServerEntry=wwpLeosSystemXFtpTFtpServerEntry, wwpLeosSystemFileSystemUtilizationTmpfsMaximum=wwpLeosSystemFileSystemUtilizationTmpfsMaximum, wwpLeosSystemConfigDefaultGatewayInetAddress=wwpLeosSystemConfigDefaultGatewayInetAddress, wwpLeosSystemConfigFileEntry=wwpLeosSystemConfigFileEntry, wwpLeosSystemCpuLoad5MinMaximum=wwpLeosSystemCpuLoad5MinMaximum, wwpLeosSystemXFtpFtpServerSecret=wwpLeosSystemXFtpFtpServerSecret, wwpLeosSystemXFtpTFtpServerRowStatus=wwpLeosSystemXFtpTFtpServerRowStatus, wwpLeosSystemMemoryUtilizationAvailableMemoryMaximum=wwpLeosSystemMemoryUtilizationAvailableMemoryMaximum, wwpLeosSystemGuardianAdminEnable=wwpLeosSystemGuardianAdminEnable, wwpLeosSystemConfigLastFileNameReset=wwpLeosSystemConfigLastFileNameReset, wwpLeosSystemCpuUtilizationLast10SecondsState=wwpLeosSystemCpuUtilizationLast10SecondsState, wwpLeosSystemMemoryUsageMemoryTotal=wwpLeosSystemMemoryUsageMemoryTotal, wwpLeosSystemCpuLoad1MinState=wwpLeosSystemCpuLoad1MinState, wwpLeosSystemMemoryStatusNotification=wwpLeosSystemMemoryStatusNotification, wwpLeosSystemConfigMIB=wwpLeosSystemConfigMIB, wwpLeosImproperCmdInConfigFile=wwpLeosImproperCmdInConfigFile, wwpLeosSystemCpuLoad5Min=wwpLeosSystemCpuLoad5Min, wwpLeosSystemCpuLoad10Min=wwpLeosSystemCpuLoad10Min, wwpLeosSystemMemoryUtilizationAvailableMemoryState=wwpLeosSystemMemoryUtilizationAvailableMemoryState, wwpLeosSystemXFtpFtpServerIndex=wwpLeosSystemXFtpFtpServerIndex, wwpLeosSystemFileSystemUtilizationSysfsMaximum=wwpLeosSystemFileSystemUtilizationSysfsMaximum, wwpLeosSystemConfigNotifTable=wwpLeosSystemConfigNotifTable, wwpLeosSystemMemoryUsageMemoryAvailable=wwpLeosSystemMemoryUsageMemoryAvailable, wwpLeosSystemMemoryUtilizationAvailableMemoryMinimum=wwpLeosSystemMemoryUtilizationAvailableMemoryMinimum, wwpLeosSystemGuardianConsecutiveReboots=wwpLeosSystemGuardianConsecutiveReboots, wwpLeosSystemConfigBackupGatewayEntry=wwpLeosSystemConfigBackupGatewayEntry, wwpLeosSystemConfigBackupGatewayIndex=wwpLeosSystemConfigBackupGatewayIndex, wwpLeosSystemXFtpFtpServerRowStatus=wwpLeosSystemXFtpFtpServerRowStatus, wwpLeosSystemConfigBackupGatewayMetric=wwpLeosSystemConfigBackupGatewayMetric, wwpLeosSystemGuardian=wwpLeosSystemGuardian, wwpLeosTelnetMaxAdminUserSessions=wwpLeosTelnetMaxAdminUserSessions, wwpLeosSystemXFtpNumOfRetries=wwpLeosSystemXFtpNumOfRetries, wwpLeosSystemConfigMIBGroups=wwpLeosSystemConfigMIBGroups, wwpLeosSystemCpuLoad15MinMinimum=wwpLeosSystemCpuLoad15MinMinimum, wwpLeosSystemCpuUtilization5SecondStatusTrap=wwpLeosSystemCpuUtilization5SecondStatusTrap, wwpLeosSystemMemoryUsageMemoryFree=wwpLeosSystemMemoryUsageMemoryFree, wwpLeosSystemCpuUtilizationLast10Seconds=wwpLeosSystemCpuUtilizationLast10Seconds, wwpLeosSystemGuardianOperEnable=wwpLeosSystemGuardianOperEnable, wwpLeosSystemCpuUtilizationLast60Seconds=wwpLeosSystemCpuUtilizationLast60Seconds, wwpLeosSystemConfigAttr=wwpLeosSystemConfigAttr, wwpLeosSystemConfigBootCfgFile=wwpLeosSystemConfigBootCfgFile, wwpLeosSystemConfigDefaultGatewayInetAddrType=wwpLeosSystemConfigDefaultGatewayInetAddrType, wwpLeosSystemClockDateTime=wwpLeosSystemClockDateTime, wwpLeosSystemXFtpMode=wwpLeosSystemXFtpMode, wwpLeosSystemMemoryUtilizationUsedMemoryCurrent=wwpLeosSystemMemoryUtilizationUsedMemoryCurrent, wwpLeosSystemCpuUtilizationLast10SecondsMinimum=wwpLeosSystemCpuUtilizationLast10SecondsMinimum, wwpLeosSystemCpuUtilization10SecondStatusTrap=wwpLeosSystemCpuUtilization10SecondStatusTrap, wwpLeosSystemXFtpSFtpServerUserName=wwpLeosSystemXFtpSFtpServerUserName, wwpLeosSystemXFtpSFtpServerIndex=wwpLeosSystemXFtpSFtpServerIndex, wwpLeosSystemMemoryUtilizationStatusTrap=wwpLeosSystemMemoryUtilizationStatusTrap, wwpLeosSystemMemoryUsageStatus=wwpLeosSystemMemoryUsageStatus, wwpLeosSystemXFtpFtpServerTable=wwpLeosSystemXFtpFtpServerTable, wwpLeosSystemConfigDefaultGatewayIndex=wwpLeosSystemConfigDefaultGatewayIndex, wwpLeosSystemConfigSaveFileName=wwpLeosSystemConfigSaveFileName, wwpLeosSystemConfigDefaultGateway=wwpLeosSystemConfigDefaultGateway, wwpLeosSystemCpuLoad1Min=wwpLeosSystemCpuLoad1Min, wwpLeosSystemConfigFilepath=wwpLeosSystemConfigFilepath, wwpLeosSystemFileSystemUtilizationSysfsMinimum=wwpLeosSystemFileSystemUtilizationSysfsMinimum, wwpLeosSystemXFtpTFtpServerTable=wwpLeosSystemXFtpTFtpServerTable, wwpLeosSystemConfigMIBNotifications=wwpLeosSystemConfigMIBNotifications, wwpLeosSystemMemoryUsageTable=wwpLeosSystemMemoryUsageTable, wwpLeosSystemConfigBackupGateway=wwpLeosSystemConfigBackupGateway, wwpLeosSystemConfigFileIndex=wwpLeosSystemConfigFileIndex, wwpLeosSystemCpuUtilizationLast5SecondsMaximum=wwpLeosSystemCpuUtilizationLast5SecondsMaximum, wwpLeosSystemConfigDefaultGatewayStatus=wwpLeosSystemConfigDefaultGatewayStatus, wwpLeosSystemCpuUtilizationLast5Seconds=wwpLeosSystemCpuUtilizationLast5Seconds, wwpLeosSystemXFtpSFtpServerRowStatus=wwpLeosSystemXFtpSFtpServerRowStatus, wwpLeosSystemCpuUtilization60SecondStatusTrap=wwpLeosSystemCpuUtilization60SecondStatusTrap, wwpLeosSystemCpuLoad15MinState=wwpLeosSystemCpuLoad15MinState, wwpLeosSystemXFtpSFtpServerSecret=wwpLeosSystemXFtpSFtpServerSecret, wwpLeosSystemFileSystemUtilization=wwpLeosSystemFileSystemUtilization, wwpLeosSystemServiceModeChange=wwpLeosSystemServiceModeChange, wwpLeosSystemConfigMIBNotificationPrefix=wwpLeosSystemConfigMIBNotificationPrefix, wwpLeosImproperCmdInConfigLineString=wwpLeosImproperCmdInConfigLineString, wwpLeosSystemXFtpUserName=wwpLeosSystemXFtpUserName, wwpLeosSystemXFtpConnectionTimeout=wwpLeosSystemXFtpConnectionTimeout, wwpLeosSystemConfigDefaultGatewayMetric=wwpLeosSystemConfigDefaultGatewayMetric, wwpLeosSystemXFtpPasswd=wwpLeosSystemXFtpPasswd, wwpLeosSystemXFtpSFtpServerTable=wwpLeosSystemXFtpSFtpServerTable, wwpLeosSystemFileSystemUtilizationSysfsCurrent=wwpLeosSystemFileSystemUtilizationSysfsCurrent, wwpLeosSystemXFtpTFtpServerIndex=wwpLeosSystemXFtpTFtpServerIndex, wwpLeosBackupGatewayCompliance=wwpLeosBackupGatewayCompliance, wwpLeosSystemConfigBootCmdFile=wwpLeosSystemConfigBootCmdFile, wwpLeosSystemConfigFileTable=wwpLeosSystemConfigFileTable, wwpLeosSystemConfigFileName=wwpLeosSystemConfigFileName, wwpLeosSystemCpu5MinLoadStatusTrap=wwpLeosSystemCpu5MinLoadStatusTrap, wwpLeosSystemConfigDefaultGatewayTable=wwpLeosSystemConfigDefaultGatewayTable, wwpLeosSystemConfigBackupGatewayInetAddress=wwpLeosSystemConfigBackupGatewayInetAddress, wwpLeosSystemConfig=wwpLeosSystemConfig, wwpLeosSystemXFtpFtpServerPassword=wwpLeosSystemXFtpFtpServerPassword, wwpLeosSystemCpuUtilizationLast60SecondsMinimum=wwpLeosSystemCpuUtilizationLast60SecondsMinimum, wwpLeosSystemConfigErrLineNum=wwpLeosSystemConfigErrLineNum, wwpLeosSystemSftpServerAdminState=wwpLeosSystemSftpServerAdminState, wwpLeosSystemConfigNotif=wwpLeosSystemConfigNotif, wwpLeosSystemCpuLoad15MinMaximum=wwpLeosSystemCpuLoad15MinMaximum, wwpLeosDefaultGatewayCompliance=wwpLeosDefaultGatewayCompliance, wwpLeosSystemXFtpSFtpServerPassword=wwpLeosSystemXFtpSFtpServerPassword, wwpLeosSystemConfigNotifEntry=wwpLeosSystemConfigNotifEntry, wwpLeosSystemCpuLoadQuery=wwpLeosSystemCpuLoadQuery, wwpLeosSystemFileSystemUtilizationSysfsState=wwpLeosSystemFileSystemUtilizationSysfsState, wwpLeosSystemMemoryUtilizationUsedMemoryMinimum=wwpLeosSystemMemoryUtilizationUsedMemoryMinimum, wwpLeosSystemConfigBackupGatewayStatus=wwpLeosSystemConfigBackupGatewayStatus, wwpLeosSystemServers=wwpLeosSystemServers, wwpLeosBackupGatewayIPv6Group=wwpLeosBackupGatewayIPv6Group, wwpLeosSystemCpuLoad1MinMinimum=wwpLeosSystemCpuLoad1MinMinimum, wwpLeosSystemFileSystemUtilizationTmpfsState=wwpLeosSystemFileSystemUtilizationTmpfsState, wwpLeosTelnetMaxSuperUserSessions=wwpLeosTelnetMaxSuperUserSessions, wwpLeosSystemMemoryUsageQuery=wwpLeosSystemMemoryUsageQuery, wwpLeosSystemXFtpTFtpServerHostName=wwpLeosSystemXFtpTFtpServerHostName, wwpLeosSystemMemoryUsageEntry=wwpLeosSystemMemoryUsageEntry, wwpLeosSystemFileSystemUtilizationSysfsStatusTrap=wwpLeosSystemFileSystemUtilizationSysfsStatusTrap, wwpLeosSystemServiceMode=wwpLeosSystemServiceMode, wwpLeosSystemXFtpServer=wwpLeosSystemXFtpServer, wwpLeosSystemFileSystemUtilizationTmpStatusTrap=wwpLeosSystemFileSystemUtilizationTmpStatusTrap, wwpLeosSystemConfigCompliances=wwpLeosSystemConfigCompliances, wwpLeosSystemMemoryUsagePoolIndex=wwpLeosSystemMemoryUsagePoolIndex, wwpLeosSystemCpuUtilizationLast60SecondsState=wwpLeosSystemCpuUtilizationLast60SecondsState, wwpLeosSystemTelnet=wwpLeosSystemTelnet, wwpLeosSystemFileSystemUtilizationTmpfsCurrent=wwpLeosSystemFileSystemUtilizationTmpfsCurrent, wwpLeosSystemConfigDefaultGatewayInterfaceName=wwpLeosSystemConfigDefaultGatewayInterfaceName, wwpLeosSystemXFtpSFtpServerEntry=wwpLeosSystemXFtpSFtpServerEntry)
