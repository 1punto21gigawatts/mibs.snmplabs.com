#
# PySNMP MIB module CISCOSB-TCPSESSIONS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-TCPSESSIONS
# Produced by pysmi-0.3.4 at Wed May  1 12:23:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Counter32, Bits, Integer32, IpAddress, MibIdentifier, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, ObjectIdentity, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Counter32", "Bits", "Integer32", "IpAddress", "MibIdentifier", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "ObjectIdentity", "mib-2")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tcp = ModuleIdentity((1, 3, 6, 1, 2, 1, 6))
tcp.setRevisions(('2011-05-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tcp.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: tcp.setLastUpdated('201105300000Z')
if mibBuilder.loadTexts: tcp.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: tcp.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: tcp.setDescription('The private MIB module definition for TCP Private Extension.')
rlTcpSessionTable = MibTable((1, 3, 6, 1, 2, 1, 6, 16), )
if mibBuilder.loadTexts: rlTcpSessionTable.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionTable.setDescription('A table containing TCP sessions information.')
rlTcpSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 6, 16, 1), ).setIndexNames((0, "CISCOSB-TCPSESSIONS", "rlTcpSessionLocalAddrType"), (0, "CISCOSB-TCPSESSIONS", "rlTcpSessionLocalAddress"), (0, "CISCOSB-TCPSESSIONS", "rlTcpSessionLocalPort"), (0, "CISCOSB-TCPSESSIONS", "rlTcpSessionRemAddrType"), (0, "CISCOSB-TCPSESSIONS", "rlTcpSessionRemAddress"), (0, "CISCOSB-TCPSESSIONS", "rlTcpSessionRemPort"))
if mibBuilder.loadTexts: rlTcpSessionEntry.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionEntry.setDescription('')
rlTcpSessionLocalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rlTcpSessionLocalAddrType.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionLocalAddrType.setDescription('The type of the rlTcpSessionLocalAddress address')
rlTcpSessionLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 2), InetAddress())
if mibBuilder.loadTexts: rlTcpSessionLocalAddress.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionLocalAddress.setDescription('The local IP address for this TCP connection. In the case of a connection in the listen state which is willing to accept connections for any IP interface associated with the node, the value 0.0.0.0 is used.')
rlTcpSessionLocalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rlTcpSessionLocalPort.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionLocalPort.setDescription('The local port number for this TCP connection.')
rlTcpSessionRemAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlTcpSessionRemAddrType.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionRemAddrType.setDescription('The type of the rlTcpSessionRemAddress address')
rlTcpSessionRemAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlTcpSessionRemAddress.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionRemAddress.setDescription('The remote IP address for this TCP connection.')
rlTcpSessionRemPort = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rlTcpSessionRemPort.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionRemPort.setDescription('The remote port number for this TCP connection.')
rlTcpSessionState = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("closed", 1), ("listen", 2), ("synSent", 3), ("synReceived", 4), ("established", 5), ("finWait1", 6), ("finWait2", 7), ("closeWait", 8), ("lastAck", 9), ("closing", 10), ("timeWait", 11), ("deleteTCB", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTcpSessionState.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionState.setDescription("The state of this TCP connection. The only value which may be set by a management station is deleteTCB(12). Accordingly, it is appropriate for an agent to return a `badValue' response if a management station attempts to set this object to any other value. If a management station sets this object to the value deleteTCB(12), then this has the effect of deleting the TCB (as defined in RFC 793) of the corresponding connection on the managed node, resulting in immediate termination of the connection. As an implementation-specific option, a RST segment may be sent from the managed node to the other TCP endpoint (note however that RST segments are not sent reliably).")
rlTcpSessionAppName = MibTableColumn((1, 3, 6, 1, 2, 1, 6, 16, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTcpSessionAppName.setStatus('current')
if mibBuilder.loadTexts: rlTcpSessionAppName.setDescription('The name of the application for this TCP connection.')
mibBuilder.exportSymbols("CISCOSB-TCPSESSIONS", rlTcpSessionAppName=rlTcpSessionAppName, rlTcpSessionTable=rlTcpSessionTable, rlTcpSessionEntry=rlTcpSessionEntry, rlTcpSessionLocalPort=rlTcpSessionLocalPort, rlTcpSessionState=rlTcpSessionState, rlTcpSessionRemPort=rlTcpSessionRemPort, rlTcpSessionLocalAddress=rlTcpSessionLocalAddress, rlTcpSessionRemAddress=rlTcpSessionRemAddress, rlTcpSessionLocalAddrType=rlTcpSessionLocalAddrType, PYSNMP_MODULE_ID=tcp, tcp=tcp, rlTcpSessionRemAddrType=rlTcpSessionRemAddrType)
