#
# PySNMP MIB module NETASQ-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETASQ-ALARM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ntqNotifications, ntqAlarm = mibBuilder.importSymbols("NETASQ-SMI-MIB", "ntqNotifications", "ntqAlarm")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter32, TimeTicks, iso, Integer32, ModuleIdentity, Bits, NotificationType, IpAddress, Gauge32, ObjectIdentity, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "TimeTicks", "iso", "Integer32", "ModuleIdentity", "Bits", "NotificationType", "IpAddress", "Gauge32", "ObjectIdentity", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntqATable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0), )
if mibBuilder.loadTexts: ntqATable.setStatus('current')
if mibBuilder.loadTexts: ntqATable.setDescription('Alarm Table')
ntqAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1), ).setIndexNames((0, "NETASQ-ALARM-MIB", "ntqAIndex"))
if mibBuilder.loadTexts: ntqAEntry.setStatus('current')
if mibBuilder.loadTexts: ntqAEntry.setDescription('Alarm table entry')
ntqAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 0), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ntqAIndex.setStatus('current')
if mibBuilder.loadTexts: ntqAIndex.setDescription('Index of each line in table')
ntqATime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqATime.setStatus('current')
if mibBuilder.loadTexts: ntqATime.setDescription('alarm date')
ntqASif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASif.setStatus('current')
if mibBuilder.loadTexts: ntqASif.setDescription('source interface')
ntqADif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADif.setStatus('current')
if mibBuilder.loadTexts: ntqADif.setDescription('destination interface')
ntqAProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAProto.setStatus('current')
if mibBuilder.loadTexts: ntqAProto.setDescription('IP protocol')
ntqASaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASaddr.setStatus('current')
if mibBuilder.loadTexts: ntqASaddr.setDescription('source IP adress')
ntqADaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADaddr.setStatus('current')
if mibBuilder.loadTexts: ntqADaddr.setDescription('destination IP address')
ntqASport = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASport.setStatus('current')
if mibBuilder.loadTexts: ntqASport.setDescription('Source port')
ntqADport = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADport.setStatus('current')
if mibBuilder.loadTexts: ntqADport.setDescription('Destination port')
ntqASname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASname.setStatus('current')
if mibBuilder.loadTexts: ntqASname.setDescription('IP source name')
ntqADname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADname.setStatus('current')
if mibBuilder.loadTexts: ntqADname.setDescription('IP destination name')
ntqAMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAMessage.setStatus('current')
if mibBuilder.loadTexts: ntqAMessage.setDescription('Alarm Message')
ntqAicmpTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1), )
if mibBuilder.loadTexts: ntqAicmpTable.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpTable.setDescription('ICMP alarm table')
ntqAicmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1), ).setIndexNames((0, "NETASQ-ALARM-MIB", "ntqAicmpIndex"))
if mibBuilder.loadTexts: ntqAicmpEntry.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpEntry.setDescription('Entry in the ntqAicmpTable.')
ntqAicmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 0), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ntqAicmpIndex.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpIndex.setDescription('A unique value for phase one table. Its value ranges between 1 and 65535 and may not be contigous. the index has no other meaning but a pure index')
ntqAicmpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpTime.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpTime.setDescription('Alarm date')
ntqAicmpSif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSif.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpSif.setDescription('source interface')
ntqAicmpDif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDif.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpDif.setDescription('destination interface')
ntqAicmpSaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSaddr.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpSaddr.setDescription('IP source address')
ntqAicmpDaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDaddr.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpDaddr.setDescription('IP destination address')
ntqAicmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpType.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpType.setDescription('ICMP type')
ntqAicmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpCode.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpCode.setDescription('ICMP code')
ntqAicmpSname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSname.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpSname.setDescription('IP source name')
ntqAicmpDname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDname.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpDname.setDescription('IP destination name')
ntqAicmpMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpMessage.setStatus('current')
if mibBuilder.loadTexts: ntqAicmpMessage.setDescription('Alarm message')
ntqNotification = NotificationType((1, 3, 6, 1, 4, 1, 11256, 1, 6, 1)).setObjects(("NETASQ-ALARM-MIB", "ntqATime"), ("NETASQ-ALARM-MIB", "ntqASif"), ("NETASQ-ALARM-MIB", "ntqASaddr"), ("NETASQ-ALARM-MIB", "ntqADaddr"), ("NETASQ-ALARM-MIB", "ntqAMessage"))
if mibBuilder.loadTexts: ntqNotification.setStatus('current')
if mibBuilder.loadTexts: ntqNotification.setDescription('notification')
mibBuilder.exportSymbols("NETASQ-ALARM-MIB", ntqAicmpSname=ntqAicmpSname, ntqASaddr=ntqASaddr, ntqASif=ntqASif, ntqAicmpDname=ntqAicmpDname, ntqATable=ntqATable, ntqAicmpTable=ntqAicmpTable, ntqAicmpSif=ntqAicmpSif, ntqAicmpDaddr=ntqAicmpDaddr, ntqATime=ntqATime, ntqASname=ntqASname, ntqAIndex=ntqAIndex, ntqAicmpEntry=ntqAicmpEntry, ntqAicmpIndex=ntqAicmpIndex, ntqAicmpMessage=ntqAicmpMessage, ntqAEntry=ntqAEntry, ntqADport=ntqADport, ntqAProto=ntqAProto, ntqADif=ntqADif, ntqAicmpDif=ntqAicmpDif, ntqAicmpType=ntqAicmpType, ntqADname=ntqADname, ntqAMessage=ntqAMessage, ntqNotification=ntqNotification, ntqADaddr=ntqADaddr, ntqAicmpCode=ntqAicmpCode, ntqASport=ntqASport, ntqAicmpTime=ntqAicmpTime, ntqAicmpSaddr=ntqAicmpSaddr)
