#
# PySNMP MIB module Q-IN-Q-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Q-IN-Q-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:43:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, TimeTicks, ModuleIdentity, Bits, Counter32, Gauge32, IpAddress, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "TimeTicks", "ModuleIdentity", "Bits", "Counter32", "Gauge32", "IpAddress", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "MibIdentifier")
MacAddress, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TextualConvention")
swQinQMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 57))
if mibBuilder.loadTexts: swQinQMIB.setLastUpdated('0804080000Z')
if mibBuilder.loadTexts: swQinQMIB.setOrganization('D-Link Corp.')
if mibBuilder.loadTexts: swQinQMIB.setContactInfo('http://support.dlink.com')
if mibBuilder.loadTexts: swQinQMIB.setDescription('The structure of Q-in-Q information for the proprietary enterprise.')
class VlanId(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

swQinQCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 57, 1))
swQinQInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 57, 2))
swQinQPortMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 57, 3))
swQinQMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 57, 4))
swQinQState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 57, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swQinQState.setStatus('current')
if mibBuilder.loadTexts: swQinQState.setDescription('This object is used to enable/disable the Q-in-Q status.')
swQinQPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 57, 3, 1), )
if mibBuilder.loadTexts: swQinQPortTable.setStatus('current')
if mibBuilder.loadTexts: swQinQPortTable.setDescription('A table that contains Q-in-Q VLAN mode information about each port.')
swQinQPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 57, 3, 1, 1), ).setIndexNames((0, "Q-IN-Q-MIB", "swQinQPortIndex"))
if mibBuilder.loadTexts: swQinQPortEntry.setStatus('current')
if mibBuilder.loadTexts: swQinQPortEntry.setDescription('A list of Q-in-Q VLAN mode information for each port.')
swQinQPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 57, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swQinQPortIndex.setStatus('current')
if mibBuilder.loadTexts: swQinQPortIndex.setDescription("This object indicates the module's port number.")
swQinQPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 57, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nni", 1), ("uni", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swQinQPortRole.setStatus('current')
if mibBuilder.loadTexts: swQinQPortRole.setDescription('This object sets the port role in Q-in-Q mode. It can be UNI port or NNI port.')
swQinQPortTpid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 57, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swQinQPortTpid.setStatus('current')
if mibBuilder.loadTexts: swQinQPortTpid.setDescription('Specifies the outer TPID for each port.')
mibBuilder.exportSymbols("Q-IN-Q-MIB", swQinQMIB=swQinQMIB, swQinQPortTable=swQinQPortTable, swQinQInfo=swQinQInfo, swQinQState=swQinQState, swQinQPortTpid=swQinQPortTpid, swQinQPortEntry=swQinQPortEntry, swQinQCtrl=swQinQCtrl, swQinQMgmt=swQinQMgmt, swQinQPortIndex=swQinQPortIndex, swQinQPortRole=swQinQPortRole, VlanId=VlanId, PYSNMP_MODULE_ID=swQinQMIB, swQinQPortMgmt=swQinQPortMgmt)
