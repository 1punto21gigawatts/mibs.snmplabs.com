#
# PySNMP MIB module CISCO-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:52:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, Counter64, Bits, MibIdentifier, ModuleIdentity, NotificationType, Counter32, Integer32, iso, IpAddress, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Counter64", "Bits", "MibIdentifier", "ModuleIdentity", "NotificationType", "Counter32", "Integer32", "iso", "IpAddress", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
ciscoSyslogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 41))
ciscoSyslogMIB.setRevisions(('2005-12-03 00:00', '2005-08-11 00:00', '2005-06-01 00:00', '1995-08-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSyslogMIB.setRevisionsDescriptions(('Removed UNITS clause for clogOriginIDType as UNITS clause is not applicable.', 'Added following objects: clogOriginIDType clogOriginID', 'Added clogServerGroup.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoSyslogMIB.setLastUpdated('200512030000Z')
if mibBuilder.loadTexts: ciscoSyslogMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSyslogMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoSyslogMIB.setDescription('The MIB module to describe and store the system messages generated by the IOS and any other OS which supports syslogs.')
ciscoSyslogMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 1))
clogBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1))
clogHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2))
clogServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3))
class SyslogSeverity(TextualConvention, Integer32):
    reference = 'RFC 3164, Section 4.1 - syslog Message Parts'
    description = "The severity of a syslog message. The enumeration values are equal to the values that syslog uses + 1. For example, with syslog, emergency=0. 'emergency' : system is unusable 'alert' : action must be taken immediately 'critical' : critical conditions 'error' : error conditions 'warning' : warning conditions 'notice' : normal but significant condition 'informational': informational messages 'debug' : debug-level messages."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("info", 7), ("debug", 8))

clogNotificationsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 1), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: clogNotificationsSent.setStatus('current')
if mibBuilder.loadTexts: clogNotificationsSent.setDescription('The number of clogMessageGenerated notifications that have been sent. This number may include notifications that were prevented from being transmitted due to reasons such as resource limitations and/or non-connectivity. If one is receiving notifications, one can periodically poll this object to determine if any notifications were missed. If so, a poll of the clogHistoryTable might be appropriate.')
clogNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clogNotificationsEnabled.setStatus('current')
if mibBuilder.loadTexts: clogNotificationsEnabled.setDescription('Indicates whether clogMessageGenerated notifications will or will not be sent when a syslog message is generated by the device. Disabling notifications does not prevent syslog messages from being added to the clogHistoryTable.')
clogMaxSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 3), SyslogSeverity().clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clogMaxSeverity.setStatus('current')
if mibBuilder.loadTexts: clogMaxSeverity.setDescription("Indicates which syslog severity levels will be processed. Any syslog message with a severity value greater than this value will be ignored by the agent. note: severity numeric values increase as their severity decreases, e.g. 'error' is more severe than 'debug'.")
clogMsgIgnores = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: clogMsgIgnores.setStatus('current')
if mibBuilder.loadTexts: clogMsgIgnores.setDescription('The number of syslog messages which were ignored. A message will be ignored if it has a severity value greater than clogMaxSeverity.')
clogMsgDrops = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: clogMsgDrops.setStatus('current')
if mibBuilder.loadTexts: clogMsgDrops.setDescription("The number of syslog messages which could not be processed due to lack of system resources. Most likely this will occur at the same time that syslog messages are generated to indicate this lack of resources. Increases in this object's value may serve as an indication that system resource levels should be examined via other mib objects. A message that is dropped will not appear in the history table and no notification will be sent for this message.")
clogOriginIDType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hostName", 3), ("ipv4Address", 4), ("contextName", 5), ("userDefined", 6))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clogOriginIDType.setStatus('current')
if mibBuilder.loadTexts: clogOriginIDType.setDescription("This object identifies the type of value that will be contained in clogOriginID object. The possible value(s) are: 'none' : do not send origin identifier in syslog messages. 'other' : type that is not identified by other values specified in this object. 'hostName' : Send hostname of the system in syslog messages. 'ipv4Address': Send IP address of the sending interface. 'contextName': Send context name of the security device. 'userDefined': Send user configured string in syslog message. The value 'other' and 'none' can not be set but can only be read.")
clogOriginID = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 1, 7), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clogOriginID.setStatus('current')
if mibBuilder.loadTexts: clogOriginID.setDescription("This object is used for configuring the origin identifier for the syslog messages. The origin identifier is useful for identifying the source of system logging messages in cases syslog messages from multiple devices are sent to a single syslog host. The origin identifier is added to the beginning of all system logging (syslog) messages sent to remote hosts. The type of the identifier is specified by clogOriginIDType object. This object can be written by the SNMP manager only when clogOriginIDType is set to 'userDefined'. For following value(s) of clogOriginIDType, this object can not be set; the value of this object is derived by the system in these cases: 'contextName' 'ipv4Address' 'hostName' 'other' 'none' This object contains the context name of the device, when clogOriginIDType is set to 'contextName'. This object contains IPv4 address (in dotted decimal notation) of the sending interface when clogOriginIDType is set to 'ipv4Address'. This object contains hostname of the system when clogOriginIDType is set to 'hostName'. This object will contain zero length octet string when clogOriginIDType is either 'none' or 'other'.")
clogHistTableMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(1)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clogHistTableMaxLength.setStatus('current')
if mibBuilder.loadTexts: clogHistTableMaxLength.setDescription('The upper limit on the number of entries that the clogHistoryTable may contain. A value of 0 will prevent any history from being retained. When this table is full, the oldest entry will be deleted and a new one will be created.')
clogHistMsgsFlushed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistMsgsFlushed.setStatus('current')
if mibBuilder.loadTexts: clogHistMsgsFlushed.setDescription('The number of entries that have been removed from the clogHistoryTable in order to make room for new entries. This object can be utilized to determine whether your polling frequency on the history table is fast enough and/or the size of your history table is large enough such that you are not missing messages.')
clogHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3), )
if mibBuilder.loadTexts: clogHistoryTable.setStatus('current')
if mibBuilder.loadTexts: clogHistoryTable.setDescription("A table of syslog messages generated by this device. All 'interesting' syslog messages (i.e. severity <= clogMaxSeverity) are entered into this table.")
clogHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-SYSLOG-MIB", "clogHistIndex"))
if mibBuilder.loadTexts: clogHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: clogHistoryEntry.setDescription('A syslog message that was previously generated by this device. Each entry is indexed by a message index.')
clogHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: clogHistIndex.setStatus('current')
if mibBuilder.loadTexts: clogHistIndex.setDescription('A monotonically increasing integer for the sole purpose of indexing messages. When it reaches the maximum value the agent flushes the table and wraps the value back to 1.')
clogHistFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistFacility.setStatus('current')
if mibBuilder.loadTexts: clogHistFacility.setDescription("Name of the facility that generated this message. For example: 'SYS'.")
clogHistSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 3), SyslogSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistSeverity.setStatus('current')
if mibBuilder.loadTexts: clogHistSeverity.setDescription('The severity of the message.')
clogHistMsgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistMsgName.setStatus('current')
if mibBuilder.loadTexts: clogHistMsgName.setDescription('A textual identification for the message type. A facility name in conjunction with a message name uniquely identifies a message type.')
clogHistMsgText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistMsgText.setStatus('current')
if mibBuilder.loadTexts: clogHistMsgText.setDescription("The text of the message. If the text of the message exceeds 255 bytes, the message will be truncated to 254 bytes and a '*' character will be appended - indicating that the message has been truncated.")
clogHistTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 2, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogHistTimestamp.setStatus('current')
if mibBuilder.loadTexts: clogHistTimestamp.setDescription('The value of sysUpTime when this message was generated.')
clogMaxServers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clogMaxServers.setStatus('current')
if mibBuilder.loadTexts: clogMaxServers.setDescription('The maximum number of syslog servers that can be configured for the system in clogServerConfigTable. A value of zero for this object indicates there is no specified limit for the system and is only dictated by system resources.')
clogServerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 2), )
if mibBuilder.loadTexts: clogServerConfigTable.setStatus('current')
if mibBuilder.loadTexts: clogServerConfigTable.setDescription('This table contains entries that allow application to configure syslog servers for the system. The maximum number of entries that can be created for this table is limited by the object clogMaxServers.')
clogServerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-SYSLOG-MIB", "clogServerAddrType"), (0, "CISCO-SYSLOG-MIB", "clogServerAddr"))
if mibBuilder.loadTexts: clogServerConfigEntry.setStatus('current')
if mibBuilder.loadTexts: clogServerConfigEntry.setDescription('An entry containing information about syslog servers configured for the system.')
clogServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: clogServerAddrType.setStatus('current')
if mibBuilder.loadTexts: clogServerAddrType.setDescription('The type of Internet address of this syslog server.')
clogServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 2, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: clogServerAddr.setStatus('current')
if mibBuilder.loadTexts: clogServerAddr.setDescription('The Internet address of this syslog server. The type of this address is determined by the value of the clogServerAddrType object.')
clogServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 41, 1, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clogServerStatus.setStatus('current')
if mibBuilder.loadTexts: clogServerStatus.setDescription("The status object used to manage rows in this table. A row may only be created by setting this object to 'createAndGo'. A row may only be deleted by setting this object to 'destroy'.")
ciscoSyslogMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 2))
ciscoSyslogMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 2, 0))
clogMessageGenerated = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 41, 2, 0, 1)).setObjects(("CISCO-SYSLOG-MIB", "clogHistFacility"), ("CISCO-SYSLOG-MIB", "clogHistSeverity"), ("CISCO-SYSLOG-MIB", "clogHistMsgName"), ("CISCO-SYSLOG-MIB", "clogHistMsgText"), ("CISCO-SYSLOG-MIB", "clogHistTimestamp"))
if mibBuilder.loadTexts: clogMessageGenerated.setStatus('current')
if mibBuilder.loadTexts: clogMessageGenerated.setDescription('When a syslog message is generated by the device a clogMessageGenerated notification is sent. The sending of these notifications can be enabled/disabled via the clogNotificationsEnabled object.')
ciscoSyslogMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 3))
ciscoSyslogMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 1))
ciscoSyslogMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 2))
ciscoSyslogMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 1, 1)).setObjects(("CISCO-SYSLOG-MIB", "ciscoSyslogMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSyslogMIBCompliance = ciscoSyslogMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSyslogMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco syslog MIB.')
ciscoSyslogMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 1, 2)).setObjects(("CISCO-SYSLOG-MIB", "ciscoSyslogMIBGroup"), ("CISCO-SYSLOG-MIB", "clogServerGroup"), ("CISCO-SYSLOG-MIB", "clogOriginIDGroup"), ("CISCO-SYSLOG-MIB", "clogNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSyslogMIBComplianceRev1 = ciscoSyslogMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoSyslogMIBComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco syslog MIB.')
ciscoSyslogMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 2, 1)).setObjects(("CISCO-SYSLOG-MIB", "clogNotificationsSent"), ("CISCO-SYSLOG-MIB", "clogNotificationsEnabled"), ("CISCO-SYSLOG-MIB", "clogMaxSeverity"), ("CISCO-SYSLOG-MIB", "clogMsgIgnores"), ("CISCO-SYSLOG-MIB", "clogMsgDrops"), ("CISCO-SYSLOG-MIB", "clogHistTableMaxLength"), ("CISCO-SYSLOG-MIB", "clogHistMsgsFlushed"), ("CISCO-SYSLOG-MIB", "clogHistFacility"), ("CISCO-SYSLOG-MIB", "clogHistSeverity"), ("CISCO-SYSLOG-MIB", "clogHistMsgName"), ("CISCO-SYSLOG-MIB", "clogHistMsgText"), ("CISCO-SYSLOG-MIB", "clogHistTimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSyslogMIBGroup = ciscoSyslogMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSyslogMIBGroup.setDescription('A collection of objects providing the syslog MIB capability.')
clogNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 2, 2)).setObjects(("CISCO-SYSLOG-MIB", "clogMessageGenerated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clogNotificationsGroup = clogNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: clogNotificationsGroup.setDescription('A collection of notification(s) for syslog feature.')
clogServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 2, 3)).setObjects(("CISCO-SYSLOG-MIB", "clogMaxServers"), ("CISCO-SYSLOG-MIB", "clogServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clogServerGroup = clogServerGroup.setStatus('current')
if mibBuilder.loadTexts: clogServerGroup.setDescription('A collection of objects providing syslog server information for the system.')
clogOriginIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 41, 3, 2, 4)).setObjects(("CISCO-SYSLOG-MIB", "clogOriginIDType"), ("CISCO-SYSLOG-MIB", "clogOriginID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clogOriginIDGroup = clogOriginIDGroup.setStatus('current')
if mibBuilder.loadTexts: clogOriginIDGroup.setDescription('A collection of objects providing information on origin of syslog messages.')
mibBuilder.exportSymbols("CISCO-SYSLOG-MIB", ciscoSyslogMIB=ciscoSyslogMIB, clogMaxServers=clogMaxServers, clogHistIndex=clogHistIndex, clogMsgIgnores=clogMsgIgnores, clogServerGroup=clogServerGroup, clogHistFacility=clogHistFacility, clogHistSeverity=clogHistSeverity, ciscoSyslogMIBCompliance=ciscoSyslogMIBCompliance, clogServerStatus=clogServerStatus, clogMaxSeverity=clogMaxSeverity, ciscoSyslogMIBNotificationPrefix=ciscoSyslogMIBNotificationPrefix, clogHistTimestamp=clogHistTimestamp, ciscoSyslogMIBComplianceRev1=ciscoSyslogMIBComplianceRev1, clogHistoryEntry=clogHistoryEntry, clogHistMsgText=clogHistMsgText, clogServer=clogServer, ciscoSyslogMIBGroup=ciscoSyslogMIBGroup, SyslogSeverity=SyslogSeverity, ciscoSyslogMIBConformance=ciscoSyslogMIBConformance, clogServerAddr=clogServerAddr, clogOriginID=clogOriginID, clogServerConfigEntry=clogServerConfigEntry, ciscoSyslogMIBCompliances=ciscoSyslogMIBCompliances, ciscoSyslogMIBGroups=ciscoSyslogMIBGroups, clogNotificationsGroup=clogNotificationsGroup, PYSNMP_MODULE_ID=ciscoSyslogMIB, clogHistMsgName=clogHistMsgName, clogMsgDrops=clogMsgDrops, clogMessageGenerated=clogMessageGenerated, clogHistoryTable=clogHistoryTable, clogOriginIDType=clogOriginIDType, clogServerConfigTable=clogServerConfigTable, clogOriginIDGroup=clogOriginIDGroup, clogHistTableMaxLength=clogHistTableMaxLength, clogNotificationsEnabled=clogNotificationsEnabled, clogServerAddrType=clogServerAddrType, ciscoSyslogMIBNotifications=ciscoSyslogMIBNotifications, clogHistMsgsFlushed=clogHistMsgsFlushed, ciscoSyslogMIBObjects=ciscoSyslogMIBObjects, clogNotificationsSent=clogNotificationsSent, clogHistory=clogHistory, clogBasic=clogBasic)
