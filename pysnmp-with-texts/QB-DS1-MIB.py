#
# PySNMP MIB module QB-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/QB-DS1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:43:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
dsx1ConfigEntry, = mibBuilder.importSymbols("DS1-MIB", "dsx1ConfigEntry")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
qbMibs, = mibBuilder.importSymbols("QUANTUMBRIDGE-REG", "qbMibs")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Integer32, Gauge32, Counter32, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, iso, TimeTicks, Bits, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Gauge32", "Counter32", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "iso", "TimeTicks", "Bits", "Unsigned32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
qbDs1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4323, 2, 10))
if mibBuilder.loadTexts: qbDs1MIB.setLastUpdated('0103140000Z')
if mibBuilder.loadTexts: qbDs1MIB.setOrganization('Quantum Bridge Corp.')
if mibBuilder.loadTexts: qbDs1MIB.setContactInfo('mvaysman@quantumbridge.com')
if mibBuilder.loadTexts: qbDs1MIB.setDescription('This module defines additional objects for management of DS1 links in Quantum Bridge devices, above and beyond what is defined in the standard DS1 mib, and proposed drafts.')
qbDs1Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 10, 1))
qbDs1Tables = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2))
qbDs1Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 10, 3))
qbDsx1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 1), )
if mibBuilder.loadTexts: qbDsx1ConfigTable.setStatus('current')
if mibBuilder.loadTexts: qbDsx1ConfigTable.setDescription('The Quantum Bridge DS1 Config table contains extensions to the DS1 Config table.')
qbDsx1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 1, 1), )
dsx1ConfigEntry.registerAugmentions(("QB-DS1-MIB", "qbDsx1ConfigEntry"))
qbDsx1ConfigEntry.setIndexNames(*dsx1ConfigEntry.getIndexNames())
if mibBuilder.loadTexts: qbDsx1ConfigEntry.setStatus('current')
if mibBuilder.loadTexts: qbDsx1ConfigEntry.setDescription('An entry in the Quantum Build DS1 Config table.')
qbdsx1ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("srts", 2), ("adaptive", 3))).clone('adaptive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qbdsx1ClockMode.setStatus('current')
if mibBuilder.loadTexts: qbdsx1ClockMode.setDescription('Define if DSx/Ex service clocking mode.')
qbDsx1StatTable = MibTable((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 2), )
if mibBuilder.loadTexts: qbDsx1StatTable.setStatus('current')
if mibBuilder.loadTexts: qbDsx1StatTable.setDescription('The Quantum Bridge DS1 Config table contains extensions to the DS1 Config table.')
qbDsx1StatEnry = MibTableRow((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: qbDsx1StatEnry.setStatus('current')
if mibBuilder.loadTexts: qbDsx1StatEnry.setDescription('An entry in the Quantum Build DS1 Config table.')
qbDsx1StatBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 10, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbDsx1StatBPVs.setStatus('current')
if mibBuilder.loadTexts: qbDsx1StatBPVs.setDescription('The number of Bipolar Violations.')
qbDs1Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 10, 3, 1))
qbDs1Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 10, 3, 2))
qbDs1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4323, 2, 10, 3, 1, 1)).setObjects(("QB-DS1-MIB", "qbDs1AllGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qbDs1Compliance = qbDs1Compliance.setStatus('current')
if mibBuilder.loadTexts: qbDs1Compliance.setDescription('The compliance statement for all agents that support this MIB. A compliant agent implements all objects defined in this MIB.')
qbDs1AllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4323, 2, 10, 3, 2, 1)).setObjects(("QB-DS1-MIB", "qbdsx1ClockMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qbDs1AllGroup = qbDs1AllGroup.setStatus('current')
if mibBuilder.loadTexts: qbDs1AllGroup.setDescription('The set of all accessible objects in this MIB.')
mibBuilder.exportSymbols("QB-DS1-MIB", qbDs1MIB=qbDs1MIB, qbDs1Tables=qbDs1Tables, qbDs1Objects=qbDs1Objects, qbDsx1ConfigEntry=qbDsx1ConfigEntry, qbDsx1StatBPVs=qbDsx1StatBPVs, qbDs1Compliances=qbDs1Compliances, qbdsx1ClockMode=qbdsx1ClockMode, qbDs1Groups=qbDs1Groups, qbDs1Compliance=qbDs1Compliance, PYSNMP_MODULE_ID=qbDs1MIB, qbDsx1StatTable=qbDsx1StatTable, qbDsx1StatEnry=qbDsx1StatEnry, qbDs1AllGroup=qbDs1AllGroup, qbDsx1ConfigTable=qbDsx1ConfigTable, qbDs1Conformance=qbDs1Conformance)
