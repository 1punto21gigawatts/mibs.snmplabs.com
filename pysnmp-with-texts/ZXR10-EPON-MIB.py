#
# PySNMP MIB module ZXR10-EPON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-EPON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:48:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, TimeTicks, Integer32, Counter64, MibIdentifier, iso, NotificationType, IpAddress, Unsigned32, Bits, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "TimeTicks", "Integer32", "Counter64", "MibIdentifier", "iso", "NotificationType", "IpAddress", "Unsigned32", "Bits", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32")
DisplayString, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "MacAddress")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10EponObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309))
zxr10EponLocal = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1))
zxr10EponRemoteOnu = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2))
zxr10EponTopologyCollect = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 3))
zxr10EponOnuAuthTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1), )
if mibBuilder.loadTexts: zxr10EponOnuAuthTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuAuthTable.setDescription('')
zxr10EponOnuAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "eponSlotId"))
if mibBuilder.loadTexts: zxr10EponOnuAuthEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuAuthEntry.setDescription('')
eponSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eponSlotId.setStatus('current')
if mibBuilder.loadTexts: eponSlotId.setDescription('index')
onuSoftwareAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sn", 0), ("mac", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSoftwareAuth.setStatus('current')
if mibBuilder.loadTexts: onuSoftwareAuth.setDescription('')
onuHardwareSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuHardwareSwitch.setStatus('current')
if mibBuilder.loadTexts: onuHardwareSwitch.setDescription('')
onuAutoAuthSwtich = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuAutoAuthSwtich.setStatus('current')
if mibBuilder.loadTexts: onuAutoAuthSwtich.setDescription('')
zxr10EponOltOptiInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2), )
if mibBuilder.loadTexts: zxr10EponOltOptiInfoTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltOptiInfoTable.setDescription('')
zxr10EponOltOptiInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltOptiInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltOptiInfoEntry.setDescription('the index,for example:epon-olt_1/1')
eponOltPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eponOltPortName.setStatus('current')
if mibBuilder.loadTexts: eponOltPortName.setDescription('')
optiInfoSFPID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoSFPID.setStatus('current')
if mibBuilder.loadTexts: optiInfoSFPID.setDescription('')
optiInfoVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoVendor.setStatus('current')
if mibBuilder.loadTexts: optiInfoVendor.setDescription('')
optiInfoWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoWavelength.setStatus('current')
if mibBuilder.loadTexts: optiInfoWavelength.setDescription('')
optiInfoVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoVendorPN.setStatus('current')
if mibBuilder.loadTexts: optiInfoVendorPN.setDescription('')
oltPortSupportedLlidNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortSupportedLlidNum.setStatus('current')
if mibBuilder.loadTexts: oltPortSupportedLlidNum.setDescription('')
oltPortSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: oltPortSoftwareVersion.setDescription('')
oltPortAGCLockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortAGCLockTime.setStatus('current')
if mibBuilder.loadTexts: oltPortAGCLockTime.setDescription('')
oltPortCDRLockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortCDRLockTime.setStatus('current')
if mibBuilder.loadTexts: oltPortCDRLockTime.setDescription('')
zxr10EponOltEncryptTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3), )
if mibBuilder.loadTexts: zxr10EponOltEncryptTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltEncryptTable.setDescription('configure OLT encryption arithmetic')
zxr10EponOltEncryptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltEncryptEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltEncryptEntry.setDescription('the index,for example:epon-olt_1/1')
oltEncryptAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("triple-churning", 1), ("aes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltEncryptAlgorithm.setStatus('current')
if mibBuilder.loadTexts: oltEncryptAlgorithm.setDescription('')
oltKeyUpdatePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltKeyUpdatePeriod.setStatus('current')
if mibBuilder.loadTexts: oltKeyUpdatePeriod.setDescription('the default vlaue is 10')
oltChurningTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltChurningTimer.setStatus('current')
if mibBuilder.loadTexts: oltChurningTimer.setDescription('')
oltMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 25000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltMaxRtt.setStatus('current')
if mibBuilder.loadTexts: oltMaxRtt.setDescription('')
oltLaserSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltLaserSwitch.setStatus('current')
if mibBuilder.loadTexts: oltLaserSwitch.setDescription('')
opticsMeasureLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticsMeasureLow.setStatus('current')
if mibBuilder.loadTexts: opticsMeasureLow.setDescription('')
opticsMeasureHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticsMeasureHigh.setStatus('current')
if mibBuilder.loadTexts: opticsMeasureHigh.setDescription('')
packetLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: packetLimitType.setStatus('current')
if mibBuilder.loadTexts: packetLimitType.setDescription('')
packetLimitSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: packetLimitSwitch.setStatus('current')
if mibBuilder.loadTexts: packetLimitSwitch.setDescription('')
protocolProtectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolProtectMode.setStatus('current')
if mibBuilder.loadTexts: protocolProtectMode.setDescription('')
protocolProtectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolProtectSwitch.setStatus('current')
if mibBuilder.loadTexts: protocolProtectSwitch.setDescription('')
optiDiagInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: optiDiagInterval.setStatus('current')
if mibBuilder.loadTexts: optiDiagInterval.setDescription('')
oltEncryptRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltEncryptRowStatus.setStatus('current')
if mibBuilder.loadTexts: oltEncryptRowStatus.setDescription('')
oltPortDBAType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("archimedes", 0), ("thales", 1), ("plato", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltPortDBAType.setStatus('current')
if mibBuilder.loadTexts: oltPortDBAType.setDescription('')
zxr10EponOnuAuthInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4), )
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoTable.setDescription('')
zxr10EponOnuAuthInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoEntry.setDescription('ifIndex,for example epon-olt_1/1;onuId is the number of yhe onu')
onuId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuId.setStatus('current')
if mibBuilder.loadTexts: onuId.setDescription('')
onuAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthState.setStatus('current')
if mibBuilder.loadTexts: onuAuthState.setDescription('')
onuType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac", 0), ("sn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuType.setStatus('current')
if mibBuilder.loadTexts: onuType.setDescription('')
onuAuthPCBVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthPCBVer.setStatus('current')
if mibBuilder.loadTexts: onuAuthPCBVer.setDescription('')
onuAuthSoftVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthSoftVer.setStatus('current')
if mibBuilder.loadTexts: onuAuthSoftVer.setDescription('')
onuEEPROMVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuEEPROMVer.setStatus('current')
if mibBuilder.loadTexts: onuEEPROMVer.setDescription('')
onuHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuHostType.setStatus('current')
if mibBuilder.loadTexts: onuHostType.setDescription('')
onuOpticalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuOpticalLen.setStatus('current')
if mibBuilder.loadTexts: onuOpticalLen.setDescription('')
onuHardVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuHardVer.setStatus('current')
if mibBuilder.loadTexts: onuHardVer.setDescription('')
onuRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuRTT.setStatus('current')
if mibBuilder.loadTexts: onuRTT.setDescription('')
onuMacPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuMacPortName.setStatus('current')
if mibBuilder.loadTexts: onuMacPortName.setDescription('')
onuBindTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindTypeName.setStatus('current')
if mibBuilder.loadTexts: onuBindTypeName.setDescription('')
onuBindMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindMacAddr.setStatus('current')
if mibBuilder.loadTexts: onuBindMacAddr.setDescription('mpcp protocol')
onuBindSN = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindSN.setStatus('current')
if mibBuilder.loadTexts: onuBindSN.setDescription('')
onuMacMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMacMaxNum.setStatus('current')
if mibBuilder.loadTexts: onuMacMaxNum.setDescription('default value is 256')
onuBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindRowStatus.setStatus('current')
if mibBuilder.loadTexts: onuBindRowStatus.setDescription('')
zxr10EponOltPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5), )
if mibBuilder.loadTexts: zxr10EponOltPortStatTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltPortStatTable.setDescription('')
zxr10EponOltPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltPortStatEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOltPortStatEntry.setDescription('index,for example:epon-olt_1/1')
oltStatisBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisBer.setStatus('current')
if mibBuilder.loadTexts: oltStatisBer.setDescription('')
oltStatisFer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisFer.setStatus('current')
if mibBuilder.loadTexts: oltStatisFer.setDescription('')
oltStatisPortBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisPortBer.setStatus('current')
if mibBuilder.loadTexts: oltStatisPortBer.setDescription('')
oltStatisInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisInPkts.setDescription('')
oltStatisInOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInOctes.setStatus('current')
if mibBuilder.loadTexts: oltStatisInOctes.setDescription('')
oltStatisInUniPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInUniPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisInUniPkts.setDescription('')
oltStatisInMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInMultiPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisInMultiPkts.setDescription('')
oltStatisInBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInBroadPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisInBroadPkts.setDescription('')
oltStatisOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisOutPkts.setDescription('')
oltStatisOutOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutOctes.setStatus('current')
if mibBuilder.loadTexts: oltStatisOutOctes.setDescription('')
oltStatisOutUniPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutUniPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisOutUniPkts.setDescription('')
oltStatisOutMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutMultiPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisOutMultiPkts.setDescription('')
oltStatisOutBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutBroadPkts.setStatus('current')
if mibBuilder.loadTexts: oltStatisOutBroadPkts.setDescription('')
oamFramesCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oamFramesCounters.setStatus('current')
if mibBuilder.loadTexts: oamFramesCounters.setDescription('')
standardOamStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: standardOamStatistics.setStatus('current')
if mibBuilder.loadTexts: standardOamStatistics.setDescription('')
standardOamMpcpStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: standardOamMpcpStatistic.setStatus('current')
if mibBuilder.loadTexts: standardOamMpcpStatistic.setDescription('')
cpuPortsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPortsOctets.setStatus('current')
if mibBuilder.loadTexts: cpuPortsOctets.setDescription('')
cpuPortsFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPortsFrames.setStatus('current')
if mibBuilder.loadTexts: cpuPortsFrames.setDescription('')
transmittedFramesPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmittedFramesPerLLID.setStatus('current')
if mibBuilder.loadTexts: transmittedFramesPerLLID.setDescription('')
droppedFramesPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: droppedFramesPerLLID.setStatus('current')
if mibBuilder.loadTexts: droppedFramesPerLLID.setDescription('')
transmittedOctetsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmittedOctetsPerLLID.setStatus('current')
if mibBuilder.loadTexts: transmittedOctetsPerLLID.setDescription('')
inRangeLengthErrorsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inRangeLengthErrorsPerLLID.setStatus('current')
if mibBuilder.loadTexts: inRangeLengthErrorsPerLLID.setDescription('')
frameTooLongErrorsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frameTooLongErrorsPerLLID.setStatus('current')
if mibBuilder.loadTexts: frameTooLongErrorsPerLLID.setDescription('')
zxr10EponOnuPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6), )
if mibBuilder.loadTexts: zxr10EponOnuPortStatTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuPortStatTable.setDescription('')
zxr10EponOnuPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponOnuPortStatEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponOnuPortStatEntry.setDescription('ifIndex,for example epon-olt_1/1;onuId is the number of the onu')
onuStatisBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisBer.setStatus('current')
if mibBuilder.loadTexts: onuStatisBer.setDescription('')
onuStatisFer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisFer.setStatus('current')
if mibBuilder.loadTexts: onuStatisFer.setDescription('')
onuStatisInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisInPkts.setDescription('')
onuStatisInOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInOctes.setStatus('current')
if mibBuilder.loadTexts: onuStatisInOctes.setDescription('')
onuStatisInMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInMultiPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisInMultiPkts.setDescription('')
onuStatisInBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInBroadPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisInBroadPkts.setDescription('')
onuStatisOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisOutPkts.setDescription('')
onuStatisOutOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutOctes.setStatus('current')
if mibBuilder.loadTexts: onuStatisOutOctes.setDescription('')
onuStatisOutMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutMultiPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisOutMultiPkts.setDescription('')
onuStatisOutBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutBroadPkts.setStatus('current')
if mibBuilder.loadTexts: onuStatisOutBroadPkts.setDescription('')
zxr10EponProtectGroupTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7), )
if mibBuilder.loadTexts: zxr10EponProtectGroupTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponProtectGroupTable.setDescription('')
zxr10EponProtectGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "protectGroupid"))
if mibBuilder.loadTexts: zxr10EponProtectGroupEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponProtectGroupEntry.setDescription('')
protectGroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protectGroupid.setStatus('current')
if mibBuilder.loadTexts: protectGroupid.setDescription('')
protectOltMasterIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltMasterIfName.setStatus('current')
if mibBuilder.loadTexts: protectOltMasterIfName.setDescription('')
protectOltBackupIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltBackupIfName.setStatus('current')
if mibBuilder.loadTexts: protectOltBackupIfName.setDescription('')
protectOltActiveIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protectOltActiveIfName.setStatus('current')
if mibBuilder.loadTexts: protectOltActiveIfName.setDescription('')
protectOltEnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltEnableSwitch.setStatus('current')
if mibBuilder.loadTexts: protectOltEnableSwitch.setDescription('')
protectReverEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectReverEnable.setStatus('current')
if mibBuilder.loadTexts: protectReverEnable.setDescription('')
protectReverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectReverTime.setStatus('current')
if mibBuilder.loadTexts: protectReverTime.setDescription('')
protectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectRowStatus.setStatus('current')
if mibBuilder.loadTexts: protectRowStatus.setDescription('')
zxr10EponSwitchRecordTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8), )
if mibBuilder.loadTexts: zxr10EponSwitchRecordTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponSwitchRecordTable.setDescription('')
zxr10EponSwitchRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "switchRecordGroupid"), (0, "ZXR10-EPON-MIB", "switchRecordNum"))
if mibBuilder.loadTexts: zxr10EponSwitchRecordEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponSwitchRecordEntry.setDescription('')
switchRecordGroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchRecordGroupid.setStatus('current')
if mibBuilder.loadTexts: switchRecordGroupid.setDescription('index')
switchRecordNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchRecordNum.setStatus('current')
if mibBuilder.loadTexts: switchRecordNum.setDescription('index')
switchTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchTime.setStatus('current')
if mibBuilder.loadTexts: switchTime.setDescription('')
switchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("force", 2), ("retiver", 3), ("alarm", 4), ("ifchange", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchType.setStatus('current')
if mibBuilder.loadTexts: switchType.setDescription('')
switchTypeMtoB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchTypeMtoB.setStatus('current')
if mibBuilder.loadTexts: switchTypeMtoB.setDescription('')
zxr10EponAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9), )
if mibBuilder.loadTexts: zxr10EponAlarmTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponAlarmTable.setDescription('')
zxr10EponAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponAlarmEntry.setDescription('epon-olt_1/1')
oltAlarmSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmSwitch.setStatus('current')
if mibBuilder.loadTexts: oltAlarmSwitch.setDescription('')
oltAlarmDirectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmDirectSwitch.setStatus('current')
if mibBuilder.loadTexts: oltAlarmDirectSwitch.setDescription('default is downlink')
oltAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmThreshold.setStatus('current')
if mibBuilder.loadTexts: oltAlarmThreshold.setDescription('bit-error-rate and frame-error-rate threshold value ,and default value is 10')
zxr10EponRemoteOnuInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoTable.setDescription('')
zxr10EponRemoteOnuInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
remoteOnuVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuVendorId.setStatus('current')
if mibBuilder.loadTexts: remoteOnuVendorId.setDescription('')
remoteOnuModel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuModel.setStatus('current')
if mibBuilder.loadTexts: remoteOnuModel.setDescription('')
remoteOnuId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuId.setStatus('current')
if mibBuilder.loadTexts: remoteOnuId.setDescription('')
remoteHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteHardwareVersion.setStatus('current')
if mibBuilder.loadTexts: remoteHardwareVersion.setDescription('')
remoteSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: remoteSoftwareVersion.setDescription('')
remoteFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: remoteFirmwareVersion.setDescription('')
remoteChipVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipVendorId.setStatus('current')
if mibBuilder.loadTexts: remoteChipVendorId.setDescription('')
remoteChipModel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipModel.setStatus('current')
if mibBuilder.loadTexts: remoteChipModel.setDescription('')
remoteChipRevison = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipRevison.setStatus('current')
if mibBuilder.loadTexts: remoteChipRevison.setDescription('')
remoteIcVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteIcVersion.setStatus('current')
if mibBuilder.loadTexts: remoteIcVersion.setDescription('')
remoteGePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteGePortNum.setStatus('current')
if mibBuilder.loadTexts: remoteGePortNum.setDescription('')
remoteBitmapGePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBitmapGePort.setStatus('current')
if mibBuilder.loadTexts: remoteBitmapGePort.setDescription('')
remoteFePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteFePortNum.setStatus('current')
if mibBuilder.loadTexts: remoteFePortNum.setDescription('')
remoteBitmapFePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBitmapFePort.setStatus('current')
if mibBuilder.loadTexts: remoteBitmapFePort.setDescription('')
remotePortsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remotePortsNum.setStatus('current')
if mibBuilder.loadTexts: remotePortsNum.setDescription('')
remoteE1PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteE1PortNum.setStatus('current')
if mibBuilder.loadTexts: remoteE1PortNum.setDescription('')
remoteUsQueuesNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteUsQueuesNum.setStatus('current')
if mibBuilder.loadTexts: remoteUsQueuesNum.setDescription('')
remoteMaxQueuesPerUSport = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteMaxQueuesPerUSport.setStatus('current')
if mibBuilder.loadTexts: remoteMaxQueuesPerUSport.setDescription('')
remoteDSQueuesNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDSQueuesNum.setStatus('current')
if mibBuilder.loadTexts: remoteDSQueuesNum.setDescription('')
remoteMaxQueuesPerDSport = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteMaxQueuesPerDSport.setStatus('current')
if mibBuilder.loadTexts: remoteMaxQueuesPerDSport.setDescription('')
remoteBatteryBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBatteryBackup.setStatus('current')
if mibBuilder.loadTexts: remoteBatteryBackup.setDescription('')
zxr10EponRemoteOnuDbaTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaTable.setDescription('DBA queueSet')
zxr10EponRemoteOnuDbaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "queueSetId"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
queueSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueSetId.setStatus('current')
if mibBuilder.loadTexts: queueSetId.setDescription('index')
queueValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue1.setStatus('current')
if mibBuilder.loadTexts: queueValue1.setDescription('')
queueValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue2.setStatus('current')
if mibBuilder.loadTexts: queueValue2.setDescription('')
queueValue3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue3.setStatus('current')
if mibBuilder.loadTexts: queueValue3.setDescription('')
queueValue4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue4.setStatus('current')
if mibBuilder.loadTexts: queueValue4.setDescription('')
queueValue5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue5.setStatus('current')
if mibBuilder.loadTexts: queueValue5.setDescription('')
queueValue6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue6.setStatus('current')
if mibBuilder.loadTexts: queueValue6.setDescription('')
queueValue7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue7.setStatus('current')
if mibBuilder.loadTexts: queueValue7.setDescription('')
queueValue8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue8.setStatus('current')
if mibBuilder.loadTexts: queueValue8.setDescription('')
dbaQueueActive = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dbaQueueActive.setStatus('current')
if mibBuilder.loadTexts: dbaQueueActive.setDescription('')
onuDbaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuDbaRowStatus.setStatus('current')
if mibBuilder.loadTexts: onuDbaRowStatus.setDescription('')
zxr10EponRemoteOnuClassRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleTable.setDescription('class rule')
zxr10EponRemoteOnuClassRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "ruleProfileNum"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
ruleProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruleProfileNum.setStatus('current')
if mibBuilder.loadTexts: ruleProfileNum.setDescription('')
queueVlaue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueVlaue.setStatus('current')
if mibBuilder.loadTexts: queueVlaue.setDescription('index')
priorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: priorityValue.setStatus('current')
if mibBuilder.loadTexts: priorityValue.setDescription('')
ruleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruleRowStatus.setStatus('current')
if mibBuilder.loadTexts: ruleRowStatus.setDescription('')
zxr10EponRemoteOnuClassCondiTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiTable.setDescription('class condition')
zxr10EponRemoteOnuClassCondiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "conditionProfileNum"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
conditionProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: conditionProfileNum.setStatus('current')
if mibBuilder.loadTexts: conditionProfileNum.setDescription('')
conditionMacAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, -1))).clone(namedValues=NamedValues(("source-mac", 0), ("dest-mac", 1), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionMacAddressType.setStatus('current')
if mibBuilder.loadTexts: conditionMacAddressType.setDescription('')
conditionMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionMacAddress.setStatus('current')
if mibBuilder.loadTexts: conditionMacAddress.setDescription('')
conditionIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, -1))).clone(namedValues=NamedValues(("destIp", 5), ("sourceIp", 6), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpAddressType.setStatus('current')
if mibBuilder.loadTexts: conditionIpAddressType.setDescription('')
conditionIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpAddress.setStatus('current')
if mibBuilder.loadTexts: conditionIpAddress.setDescription('')
conditionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionPriority.setStatus('current')
if mibBuilder.loadTexts: conditionPriority.setDescription('')
conditionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionVlanId.setStatus('current')
if mibBuilder.loadTexts: conditionVlanId.setDescription('')
conditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionDscp.setStatus('current')
if mibBuilder.loadTexts: conditionDscp.setDescription('')
conditionL4PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 11, -1))).clone(namedValues=NamedValues(("l4SourcePort", 10), ("l4DestPort", 11), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionL4PortType.setStatus('current')
if mibBuilder.loadTexts: conditionL4PortType.setDescription('')
conditionPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionPortNum.setStatus('current')
if mibBuilder.loadTexts: conditionPortNum.setDescription('')
conditionEthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionEthType.setStatus('current')
if mibBuilder.loadTexts: conditionEthType.setDescription('')
conditionIpProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpProtocolType.setStatus('current')
if mibBuilder.loadTexts: conditionIpProtocolType.setDescription('')
conditionOperatorType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("never-match", 0), ("equal", 1), ("not-equal", 2), ("less-equal", 3), ("greater-equal", 4), ("exists", 5), ("not-exists", 6), ("always-match", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionOperatorType.setStatus('current')
if mibBuilder.loadTexts: conditionOperatorType.setDescription('')
conditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionRowStatus.setStatus('current')
if mibBuilder.loadTexts: conditionRowStatus.setDescription('')
zxr10EponRemoteOnuPortTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortTable.setDescription('onu port')
zxr10EponRemoteOnuPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuEthUniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu;and the onuIfIndex is the port of onu')
onuEthUniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuEthUniNumber.setStatus('current')
if mibBuilder.loadTexts: onuEthUniNumber.setDescription('index:UniNumber,linearity index ')
onuPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortFlowControl.setStatus('current')
if mibBuilder.loadTexts: onuPortFlowControl.setDescription('')
onuPortUpPolicySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicySwitch.setStatus('current')
if mibBuilder.loadTexts: onuPortUpPolicySwitch.setDescription('')
onuPortUpPolicyCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyCIR.setStatus('current')
if mibBuilder.loadTexts: onuPortUpPolicyCIR.setDescription('')
onuPortUpPolicyCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyCBS.setStatus('current')
if mibBuilder.loadTexts: onuPortUpPolicyCBS.setDescription('')
onuPortUpPolicyEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyEBS.setStatus('current')
if mibBuilder.loadTexts: onuPortUpPolicyEBS.setDescription('')
onuPortDownPolicySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicySwitch.setStatus('current')
if mibBuilder.loadTexts: onuPortDownPolicySwitch.setDescription('')
onuPortDownPolicyCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicyCIR.setStatus('current')
if mibBuilder.loadTexts: onuPortDownPolicyCIR.setDescription('')
onuPortDownPolicyPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicyPIR.setStatus('current')
if mibBuilder.loadTexts: onuPortDownPolicyPIR.setDescription('')
onuPortVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("tag", 1), ("translation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortVlanMode.setStatus('current')
if mibBuilder.loadTexts: onuPortVlanMode.setDescription('')
onuPortVlanTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortVlanTagValue.setStatus('current')
if mibBuilder.loadTexts: onuPortVlanTagValue.setDescription('')
onuDefaultVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuDefaultVlan.setStatus('current')
if mibBuilder.loadTexts: onuDefaultVlan.setDescription('')
onuVlanDelVid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid1.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid1.setDescription('')
onuVlanAddVid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid1.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid1.setDescription('')
onuVlanDelVid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid2.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid2.setDescription('')
onuVlanAddVid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid2.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid2.setDescription('')
onuVlanDelVid3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid3.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid3.setDescription('')
onuVlanAddVid3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid3.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid3.setDescription('')
onuVlanDelVid4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid4.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid4.setDescription('')
onuVlanAddVid4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid4.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid4.setDescription('')
onuVlanDelVid5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid5.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid5.setDescription('')
onuVlanAddVid5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid5.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid5.setDescription('')
onuVlanDelVid6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid6.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid6.setDescription('')
onuVlanAddVid6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid6.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid6.setDescription('')
onuVlanDelVid7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid7.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid7.setDescription('')
onuVlanAddVid7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid7.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid7.setDescription('')
onuVlanDelVid8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid8.setStatus('current')
if mibBuilder.loadTexts: onuVlanDelVid8.setDescription('')
onuVlanAddVid8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid8.setStatus('current')
if mibBuilder.loadTexts: onuVlanAddVid8.setDescription('')
onuRulePrecedenceSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -1))).clone(namedValues=NamedValues(("add", 0), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRulePrecedenceSwitch.setStatus('current')
if mibBuilder.loadTexts: onuRulePrecedenceSwitch.setDescription('')
onuRulePrecedenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRulePrecedenceNum.setStatus('current')
if mibBuilder.loadTexts: onuRulePrecedenceNum.setDescription('')
onuRuleProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRuleProfile.setStatus('current')
if mibBuilder.loadTexts: onuRuleProfile.setDescription('')
onuConditionList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuConditionList.setStatus('current')
if mibBuilder.loadTexts: onuConditionList.setDescription('')
onuMultiVlanSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, -1))).clone(namedValues=NamedValues(("add", 0), ("delete", 1), ("clear", 2), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanSwitch.setStatus('current')
if mibBuilder.loadTexts: onuMultiVlanSwitch.setDescription('')
onuMultiVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanList.setStatus('current')
if mibBuilder.loadTexts: onuMultiVlanList.setDescription('')
onuMultiVlanTagStripe = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanTagStripe.setStatus('current')
if mibBuilder.loadTexts: onuMultiVlanTagStripe.setDescription('')
onuMultiGroupMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiGroupMaxNum.setStatus('current')
if mibBuilder.loadTexts: onuMultiGroupMaxNum.setDescription('')
onuPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 37), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: onuPortRowStatus.setDescription('')
zxr10EponRemoteFastRebootTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6), )
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootTable.setDescription('')
zxr10EponRemoteFastRebootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
remoteMultiFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteMultiFastLeave.setStatus('current')
if mibBuilder.loadTexts: remoteMultiFastLeave.setDescription('only to write')
remoteReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteReboot.setStatus('current')
if mibBuilder.loadTexts: remoteReboot.setDescription('only to write')
zxr10EponRemoteOnuVoipTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipTable.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipTable.setDescription('')
zxr10EponRemoteOnuVoipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuVoipUniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipEntry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
onuVoipUniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuVoipUniNumber.setStatus('current')
if mibBuilder.loadTexts: onuVoipUniNumber.setDescription('')
onuVoipEnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVoipEnableSwitch.setStatus('current')
if mibBuilder.loadTexts: onuVoipEnableSwitch.setDescription('')
zxr10EponRemoteOnuE1Table = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Table.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Table.setDescription('')
zxr10EponRemoteOnuE1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuE1UniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Entry.setStatus('current')
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Entry.setDescription('index,for example epon-olt_1/1;onuId is the number of the onu')
onuE1UniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuE1UniNumber.setStatus('current')
if mibBuilder.loadTexts: onuE1UniNumber.setDescription('')
onuE1EnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuE1EnableSwitch.setStatus('current')
if mibBuilder.loadTexts: onuE1EnableSwitch.setDescription('')
mibBuilder.exportSymbols("ZXR10-EPON-MIB", queueVlaue=queueVlaue, zxr10EponRemoteOnuDbaTable=zxr10EponRemoteOnuDbaTable, conditionIpProtocolType=conditionIpProtocolType, oltStatisOutBroadPkts=oltStatisOutBroadPkts, switchRecordGroupid=switchRecordGroupid, remoteOnuId=remoteOnuId, onuPortDownPolicyCIR=onuPortDownPolicyCIR, onuPortUpPolicyEBS=onuPortUpPolicyEBS, protectRowStatus=protectRowStatus, onuVoipUniNumber=onuVoipUniNumber, oltStatisPortBer=oltStatisPortBer, conditionPriority=conditionPriority, remoteChipModel=remoteChipModel, ruleProfileNum=ruleProfileNum, oltPortCDRLockTime=oltPortCDRLockTime, inRangeLengthErrorsPerLLID=inRangeLengthErrorsPerLLID, onuId=onuId, oltAlarmDirectSwitch=oltAlarmDirectSwitch, zxr10EponOnuPortStatEntry=zxr10EponOnuPortStatEntry, zxr10EponProtectGroupTable=zxr10EponProtectGroupTable, transmittedFramesPerLLID=transmittedFramesPerLLID, onuBindMacAddr=onuBindMacAddr, onuStatisOutPkts=onuStatisOutPkts, eponSlotId=eponSlotId, onuHostType=onuHostType, onuStatisInOctes=onuStatisInOctes, opticsMeasureLow=opticsMeasureLow, onuHardVer=onuHardVer, onuAuthSoftVer=onuAuthSoftVer, onuPortUpPolicySwitch=onuPortUpPolicySwitch, zxr10EponOltPortStatEntry=zxr10EponOltPortStatEntry, remoteUsQueuesNum=remoteUsQueuesNum, onuPortVlanTagValue=onuPortVlanTagValue, onuRulePrecedenceSwitch=onuRulePrecedenceSwitch, frameTooLongErrorsPerLLID=frameTooLongErrorsPerLLID, conditionVlanId=conditionVlanId, remoteSoftwareVersion=remoteSoftwareVersion, onuBindTypeName=onuBindTypeName, zxr10EponRemoteOnuClassRuleTable=zxr10EponRemoteOnuClassRuleTable, onuRulePrecedenceNum=onuRulePrecedenceNum, onuVlanAddVid6=onuVlanAddVid6, oltAlarmThreshold=oltAlarmThreshold, zxr10EponRemoteOnuVoipTable=zxr10EponRemoteOnuVoipTable, cpuPortsOctets=cpuPortsOctets, remoteBatteryBackup=remoteBatteryBackup, queueValue5=queueValue5, zxr10EponRemoteOnuInfoTable=zxr10EponRemoteOnuInfoTable, remoteGePortNum=remoteGePortNum, zxr10EponRemoteOnuInfoEntry=zxr10EponRemoteOnuInfoEntry, oltMaxRtt=oltMaxRtt, queueSetId=queueSetId, conditionDscp=conditionDscp, priorityValue=priorityValue, conditionL4PortType=conditionL4PortType, remoteChipVendorId=remoteChipVendorId, conditionIpAddressType=conditionIpAddressType, zxr10EponRemoteOnuPortEntry=zxr10EponRemoteOnuPortEntry, onuBindSN=onuBindSN, zxr10EponRemoteOnuDbaEntry=zxr10EponRemoteOnuDbaEntry, onuPortUpPolicyCIR=onuPortUpPolicyCIR, onuE1UniNumber=onuE1UniNumber, protocolProtectMode=protocolProtectMode, protocolProtectSwitch=protocolProtectSwitch, conditionOperatorType=conditionOperatorType, onuAuthPCBVer=onuAuthPCBVer, oltStatisFer=oltStatisFer, zxr10EponRemoteOnuClassCondiTable=zxr10EponRemoteOnuClassCondiTable, oltStatisInBroadPkts=oltStatisInBroadPkts, protectOltBackupIfName=protectOltBackupIfName, onuStatisInPkts=onuStatisInPkts, onuPortDownPolicySwitch=onuPortDownPolicySwitch, oltPortSoftwareVersion=oltPortSoftwareVersion, remoteHardwareVersion=remoteHardwareVersion, remoteMultiFastLeave=remoteMultiFastLeave, onuVoipEnableSwitch=onuVoipEnableSwitch, protectOltEnableSwitch=protectOltEnableSwitch, optiDiagInterval=optiDiagInterval, optiInfoVendor=optiInfoVendor, remoteFirmwareVersion=remoteFirmwareVersion, queueValue7=queueValue7, conditionIpAddress=conditionIpAddress, onuStatisOutMultiPkts=onuStatisOutMultiPkts, zxr10EponRemoteOnuE1Table=zxr10EponRemoteOnuE1Table, standardOamStatistics=standardOamStatistics, queueValue8=queueValue8, onuVlanAddVid1=onuVlanAddVid1, zxr10EponTopologyCollect=zxr10EponTopologyCollect, onuRuleProfile=onuRuleProfile, eponOltPortName=eponOltPortName, onuStatisInMultiPkts=onuStatisInMultiPkts, remoteDSQueuesNum=remoteDSQueuesNum, onuVlanAddVid8=onuVlanAddVid8, zxr10EponRemoteOnuE1Entry=zxr10EponRemoteOnuE1Entry, zxr10EponProtectGroupEntry=zxr10EponProtectGroupEntry, zxr10EponAlarmEntry=zxr10EponAlarmEntry, onuVlanAddVid7=onuVlanAddVid7, onuPortRowStatus=onuPortRowStatus, onuOpticalLen=onuOpticalLen, ruleRowStatus=ruleRowStatus, onuMacPortName=onuMacPortName, onuStatisInBroadPkts=onuStatisInBroadPkts, onuPortFlowControl=onuPortFlowControl, onuStatisOutBroadPkts=onuStatisOutBroadPkts, remoteBitmapGePort=remoteBitmapGePort, zxr10EponAlarmTable=zxr10EponAlarmTable, onuMultiGroupMaxNum=onuMultiGroupMaxNum, optiInfoSFPID=optiInfoSFPID, protectReverEnable=protectReverEnable, oltEncryptAlgorithm=oltEncryptAlgorithm, remoteMaxQueuesPerUSport=remoteMaxQueuesPerUSport, queueValue3=queueValue3, oltEncryptRowStatus=oltEncryptRowStatus, opticsMeasureHigh=opticsMeasureHigh, conditionMacAddress=conditionMacAddress, onuPortDownPolicyPIR=onuPortDownPolicyPIR, zxr10EponRemoteFastRebootTable=zxr10EponRemoteFastRebootTable, switchTime=switchTime, onuStatisOutOctes=onuStatisOutOctes, oltLaserSwitch=oltLaserSwitch, zxr10EponRemoteFastRebootEntry=zxr10EponRemoteFastRebootEntry, onuMultiVlanList=onuMultiVlanList, remoteIcVersion=remoteIcVersion, protectReverTime=protectReverTime, oamFramesCounters=oamFramesCounters, onuMultiVlanTagStripe=onuMultiVlanTagStripe, queueValue6=queueValue6, zxr10EponOltEncryptTable=zxr10EponOltEncryptTable, zxr10EponSwitchRecordEntry=zxr10EponSwitchRecordEntry, onuVlanDelVid4=onuVlanDelVid4, zte=zte, onuEEPROMVer=onuEEPROMVer, onuVlanAddVid4=onuVlanAddVid4, zxr10EponRemoteOnuVoipEntry=zxr10EponRemoteOnuVoipEntry, oltChurningTimer=oltChurningTimer, onuMacMaxNum=onuMacMaxNum, zxr10EponOltOptiInfoEntry=zxr10EponOltOptiInfoEntry, transmittedOctetsPerLLID=transmittedOctetsPerLLID, oltAlarmSwitch=oltAlarmSwitch, queueValue4=queueValue4, zxr10EponRemoteOnuClassCondiEntry=zxr10EponRemoteOnuClassCondiEntry, oltPortDBAType=oltPortDBAType, onuVlanDelVid2=onuVlanDelVid2, remoteFePortNum=remoteFePortNum, remoteBitmapFePort=remoteBitmapFePort, switchTypeMtoB=switchTypeMtoB, oltStatisInPkts=oltStatisInPkts, remoteE1PortNum=remoteE1PortNum, onuPortVlanMode=onuPortVlanMode, onuMultiVlanSwitch=onuMultiVlanSwitch, conditionEthType=conditionEthType, switchRecordNum=switchRecordNum, onuConditionList=onuConditionList, onuVlanAddVid3=onuVlanAddVid3, conditionPortNum=conditionPortNum, oltStatisOutOctes=oltStatisOutOctes, zxr10EponSwitchRecordTable=zxr10EponSwitchRecordTable, optiInfoVendorPN=optiInfoVendorPN, optiInfoWavelength=optiInfoWavelength, protectOltMasterIfName=protectOltMasterIfName, switchType=switchType, onuVlanDelVid1=onuVlanDelVid1, onuVlanDelVid8=onuVlanDelVid8, zxr10EponOltEncryptEntry=zxr10EponOltEncryptEntry, queueValue2=queueValue2, remoteReboot=remoteReboot, zxr10EponOnuAuthTable=zxr10EponOnuAuthTable, onuSoftwareAuth=onuSoftwareAuth, oltStatisInOctes=oltStatisInOctes, zxr10EponRemoteOnuPortTable=zxr10EponRemoteOnuPortTable, remoteMaxQueuesPerDSport=remoteMaxQueuesPerDSport, oltStatisOutMultiPkts=oltStatisOutMultiPkts, zxr10EponOnuAuthEntry=zxr10EponOnuAuthEntry, zxr10EponLocal=zxr10EponLocal, conditionRowStatus=conditionRowStatus, onuVlanAddVid5=onuVlanAddVid5, onuBindRowStatus=onuBindRowStatus, oltStatisOutPkts=oltStatisOutPkts, standardOamMpcpStatistic=standardOamMpcpStatistic, oltKeyUpdatePeriod=oltKeyUpdatePeriod, onuAuthState=onuAuthState, oltStatisOutUniPkts=oltStatisOutUniPkts, zxr10EponRemoteOnuClassRuleEntry=zxr10EponRemoteOnuClassRuleEntry, oltPortAGCLockTime=oltPortAGCLockTime, remoteChipRevison=remoteChipRevison, droppedFramesPerLLID=droppedFramesPerLLID, onuAutoAuthSwtich=onuAutoAuthSwtich, oltPortSupportedLlidNum=oltPortSupportedLlidNum, zxr10EponOnuPortStatTable=zxr10EponOnuPortStatTable, onuPortUpPolicyCBS=onuPortUpPolicyCBS, onuStatisBer=onuStatisBer, onuVlanAddVid2=onuVlanAddVid2, oltStatisInUniPkts=oltStatisInUniPkts, onuStatisFer=onuStatisFer, zxr10EponOltPortStatTable=zxr10EponOltPortStatTable, protectGroupid=protectGroupid, onuVlanDelVid3=onuVlanDelVid3, zxr10EponOnuAuthInfoTable=zxr10EponOnuAuthInfoTable, zxr10EponOnuAuthInfoEntry=zxr10EponOnuAuthInfoEntry, queueValue1=queueValue1, zxr10EponOltOptiInfoTable=zxr10EponOltOptiInfoTable, onuVlanDelVid6=onuVlanDelVid6, onuRTT=onuRTT, oltStatisInMultiPkts=oltStatisInMultiPkts, onuDefaultVlan=onuDefaultVlan, packetLimitSwitch=packetLimitSwitch, onuHardwareSwitch=onuHardwareSwitch, remoteOnuModel=remoteOnuModel, remotePortsNum=remotePortsNum, onuType=onuType, conditionMacAddressType=conditionMacAddressType, onuVlanDelVid5=onuVlanDelVid5, cpuPortsFrames=cpuPortsFrames, onuVlanDelVid7=onuVlanDelVid7, zxr10EponObjects=zxr10EponObjects, zxr10=zxr10, dbaQueueActive=dbaQueueActive, zxr10EponRemoteOnu=zxr10EponRemoteOnu, packetLimitType=packetLimitType, protectOltActiveIfName=protectOltActiveIfName, remoteOnuVendorId=remoteOnuVendorId, conditionProfileNum=conditionProfileNum, oltStatisBer=oltStatisBer, onuDbaRowStatus=onuDbaRowStatus, onuEthUniNumber=onuEthUniNumber, onuE1EnableSwitch=onuE1EnableSwitch)
