#
# PySNMP MIB module TERAWAVE-teraEPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraEPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter64, TimeTicks, enterprises, Unsigned32, ObjectIdentity, IpAddress, MibIdentifier, NotificationType, iso, ModuleIdentity, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "TimeTicks", "enterprises", "Unsigned32", "ObjectIdentity", "IpAddress", "MibIdentifier", "NotificationType", "iso", "ModuleIdentity", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraEPSGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 12))
teraLevel1EPSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 12, 1), )
if mibBuilder.loadTexts: teraLevel1EPSConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1EPSConfigTable.setDescription(' table teraLevel1EPSConfigTable')
teraLevel1EPSConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1), ).setIndexNames((0, "TERAWAVE-teraEPS-MIB", "teraLevel1ConfigIndex"))
if mibBuilder.loadTexts: teraLevel1EPSConfigTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1EPSConfigTableEntry.setDescription(' table entry teraLevel1EPSConfigTableEntry ')
teraLevel1ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLevel1ConfigIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1ConfigIndex.setDescription('')
teraLevel1ProtectingUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLevel1ProtectingUnit.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1ProtectingUnit.setDescription('')
teraLevel1AdminProtectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("manual-w2p", 1), ("force-w2p", 2), ("lock", 3), ("release", 4), ("unlock", 5), ("manual-p2w", 6), ("force-p2w", 7), ("not-used", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLevel1AdminProtectSwitch.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1AdminProtectSwitch.setDescription('')
teraLevel1AdminProtectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("working", 1), ("protection", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLevel1AdminProtectStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1AdminProtectStatus.setDescription('')
teraLevel1AdminProtectSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("forced", 1), ("locked", 2), ("manual", 3), ("auto", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLevel1AdminProtectSwitchReason.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1AdminProtectSwitchReason.setDescription('')
teraLevel1ProtectSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standby", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLevel1ProtectSwitchState.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1ProtectSwitchState.setDescription('')
teraLevel1OperProtectSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLevel1OperProtectSwitchReason.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1OperProtectSwitchReason.setDescription('')
teraLevel1OperProtectSwitchSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLevel1OperProtectSwitchSource.setStatus('mandatory')
if mibBuilder.loadTexts: teraLevel1OperProtectSwitchSource.setDescription('')
teraLinkEPSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 12, 2), )
if mibBuilder.loadTexts: teraLinkEPSConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkEPSConfigTable.setDescription(' table teraLinkEPSConfigTable')
teraLinkEPSConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1), ).setIndexNames((0, "TERAWAVE-teraEPS-MIB", "teraLevel1ConfigIndex"), (0, "TERAWAVE-teraEPS-MIB", "teraPonIndex"))
if mibBuilder.loadTexts: teraLinkEPSConfigTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkEPSConfigTableEntry.setDescription(' table entry teraLinkEPSConfigTableEntry ')
teraLinkProtectingUnitLevel1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLinkProtectingUnitLevel1Index.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkProtectingUnitLevel1Index.setDescription('')
teraLinkProtectingUnitPonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLinkProtectingUnitPonIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkProtectingUnitPonIndex.setDescription('')
teraLinkAdminProtectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("manual-w2p", 1), ("force-w2p", 2), ("lock", 3), ("release", 4), ("unlock", 5), ("manual-p2w", 6), ("force-p2w", 7), ("not-used", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLinkAdminProtectSwitch.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkAdminProtectSwitch.setDescription('')
teraLinkAdminProtectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("working", 1), ("protection", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLinkAdminProtectStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkAdminProtectStatus.setDescription('')
teraLinkAdminProtectSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("forced", 1), ("locked", 2), ("manual", 3), ("auto", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkAdminProtectSwitchReason.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkAdminProtectSwitchReason.setDescription('')
teraLinkCardEPSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 12, 3), )
if mibBuilder.loadTexts: teraLinkCardEPSConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardEPSConfigTable.setDescription(' table teraLinkCardEPSConfigTable')
teraLinkCardEPSConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1), ).setIndexNames((0, "TERAWAVE-teraEPS-MIB", "teraLevel1ConfigIndex"), (0, "TERAWAVE-teraEPS-MIB", "teraPonIndex"), (0, "TERAWAVE-teraEPS-MIB", "teraNELevel2Slot"))
if mibBuilder.loadTexts: teraLinkCardEPSConfigTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardEPSConfigTableEntry.setDescription(' table entry teraLinkCardEPSConfigTableEntry ')
teraLinkCardProtectingUnitLevel1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardProtectingUnitLevel1Index.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardProtectingUnitLevel1Index.setDescription('')
teraLinkCardProtectingUnitPonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardProtectingUnitPonIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardProtectingUnitPonIndex.setDescription('')
teraLinkCardProtectingUnitLevel2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardProtectingUnitLevel2Index.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardProtectingUnitLevel2Index.setDescription('')
teraLinkCardAdminProtectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("manual-w2p", 1), ("force-w2p", 2), ("lock", 3), ("release", 4), ("unlock", 5), ("manual-p2w", 6), ("force-p2w", 7), ("not-used", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLinkCardAdminProtectSwitch.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardAdminProtectSwitch.setDescription('')
teraLinkCardAdminProtectSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("forced", 1), ("locked", 2), ("manual", 3), ("auto", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardAdminProtectSwitchReason.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardAdminProtectSwitchReason.setDescription('')
teraLinkCardProtectSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standby", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardProtectSwitchState.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardProtectSwitchState.setDescription('')
teraLinkCardOperProtectSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardOperProtectSwitchReason.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardOperProtectSwitchReason.setDescription('')
teraLinkCardOperProtectSwitchSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardOperProtectSwitchSource.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardOperProtectSwitchSource.setDescription('')
teraLinkCardAdminProtectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 12, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("working", 1), ("protection", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLinkCardAdminProtectStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraLinkCardAdminProtectStatus.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-teraEPS-MIB", teraLevel1AdminProtectSwitchReason=teraLevel1AdminProtectSwitchReason, teraLinkAdminProtectSwitchReason=teraLinkAdminProtectSwitchReason, teraLevel1OperProtectSwitchSource=teraLevel1OperProtectSwitchSource, teraLinkCardProtectingUnitPonIndex=teraLinkCardProtectingUnitPonIndex, teraLinkCardProtectingUnitLevel1Index=teraLinkCardProtectingUnitLevel1Index, teraLinkCardOperProtectSwitchSource=teraLinkCardOperProtectSwitchSource, terawave=terawave, teraLinkCardAdminProtectSwitch=teraLinkCardAdminProtectSwitch, teraLevel1AdminProtectSwitch=teraLevel1AdminProtectSwitch, teraLinkCardProtectingUnitLevel2Index=teraLinkCardProtectingUnitLevel2Index, teraLevel1ProtectSwitchState=teraLevel1ProtectSwitchState, teraLevel1ConfigIndex=teraLevel1ConfigIndex, teraLinkCardAdminProtectStatus=teraLinkCardAdminProtectStatus, teraLevel1OperProtectSwitchReason=teraLevel1OperProtectSwitchReason, teraLevel1EPSConfigTable=teraLevel1EPSConfigTable, teraLevel1ProtectingUnit=teraLevel1ProtectingUnit, teraLinkEPSConfigTableEntry=teraLinkEPSConfigTableEntry, teraLinkCardOperProtectSwitchReason=teraLinkCardOperProtectSwitchReason, teraLinkAdminProtectSwitch=teraLinkAdminProtectSwitch, teraLevel1AdminProtectStatus=teraLevel1AdminProtectStatus, teraLinkAdminProtectStatus=teraLinkAdminProtectStatus, teraLinkProtectingUnitLevel1Index=teraLinkProtectingUnitLevel1Index, teraLinkEPSConfigTable=teraLinkEPSConfigTable, teraEPSGroup=teraEPSGroup, teraLinkCardAdminProtectSwitchReason=teraLinkCardAdminProtectSwitchReason, teraLinkProtectingUnitPonIndex=teraLinkProtectingUnitPonIndex, teraLinkCardEPSConfigTable=teraLinkCardEPSConfigTable, teraLinkCardProtectSwitchState=teraLinkCardProtectSwitchState, teraLevel1EPSConfigTableEntry=teraLevel1EPSConfigTableEntry, teraLinkCardEPSConfigTableEntry=teraLinkCardEPSConfigTableEntry)
