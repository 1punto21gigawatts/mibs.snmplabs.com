#
# PySNMP MIB module Fore-SSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-SSM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:17:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
syncStatusMsgGroup, = mibBuilder.importSymbols("Fore-Switch-MIB", "syncStatusMsgGroup")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter64, NotificationType, Bits, ModuleIdentity, Counter32, Integer32, ObjectIdentity, TimeTicks, Gauge32, MibIdentifier, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "NotificationType", "Bits", "ModuleIdentity", "Counter32", "Integer32", "ObjectIdentity", "TimeTicks", "Gauge32", "MibIdentifier", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sysStatusMsgModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 4))
if mibBuilder.loadTexts: sysStatusMsgModule.setLastUpdated('9912090000Z')
if mibBuilder.loadTexts: sysStatusMsgModule.setOrganization('FORE')
if mibBuilder.loadTexts: sysStatusMsgModule.setContactInfo(' Postal: FORE Systems Inc. 1000 FORE Drive Warrendale, PA 15086-7502 Tel: +1 724 742 6900 Email: nm_mibs@fore.com Web: http://www.fore.com')
if mibBuilder.loadTexts: sysStatusMsgModule.setDescription('Synchronization Status Message Module')
class SyncStatusMsgType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 100, 101))
    namedValues = NamedValues(("prs", 1), ("prc", 2), ("stu", 3), ("st2", 4), ("tncssua", 5), ("st3e", 8), ("ssub", 9), ("st3", 10), ("sec", 11), ("smc", 12), ("st4", 13), ("res", 15), ("dus", 16), ("invalid", 100), ("none", 101))

syncStatusMsgTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1), )
if mibBuilder.loadTexts: syncStatusMsgTable.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgTable.setDescription('A table containing Synchronization Status Message configuration and status.')
syncStatusMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1), ).setIndexNames((1, "Fore-SSM-MIB", "syncStatusMsgInterface"))
if mibBuilder.loadTexts: syncStatusMsgEntry.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgEntry.setDescription('A table entry containing Synchronization Status Message configuration and status.')
syncStatusMsgInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: syncStatusMsgInterface.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgInterface.setDescription('Name of this SSM Interface.')
syncStatusMsgRxMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 2), SyncStatusMsgType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syncStatusMsgRxMessage.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgRxMessage.setDescription('Synchronization Status Message currently being received on this interface. If syncStatusMsgForceRxSsm is set to any value other than SyncStatusMsgType::none, then syncStatusMsgRxMessage will reflect that forced value.')
syncStatusMsgTxMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 3), SyncStatusMsgType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syncStatusMsgTxMessage.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgTxMessage.setDescription("Synchronization Status Message being transmitted on this interface. If syncStatusMsgForceDus is set to enabled, then syncStatusMsgTxMessage will be Don't Use for Synchronization(DUS).")
syncStatusMsgForceRxSsm = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 4), SyncStatusMsgType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syncStatusMsgForceRxSsm.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgForceRxSsm.setDescription('This variable is used to force a particual Synchronization Status Message as the receive SSM on this interface. Forcing a receive SSM will cause the interface to ignore the actual SSM being received (i.e., changes to S1 byte.) Setting this variable to SyncStatusMsgType::none will clear any forced SSM.')
syncStatusMsgForceDus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syncStatusMsgForceDus.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgForceDus.setDescription("Indicates if Don't Use for Synchronization (DUS) is being forced on the transmit side of this interface. If this variable is set to enabled, then the switch will generate DUS message on the transmit side of the interface. Otherwise, the switch will transmit an appropriate value according to the SSM protocol.")
syncStatusMsgPrevRxMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 1, 1, 6), SyncStatusMsgType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: syncStatusMsgPrevRxMessage.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgPrevRxMessage.setDescription('Synchronization Status Message previously received on this interface. This variable is used by syncStatusMsgChanged trap.')
syncStatusMsgAutomaticRefSwitching = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syncStatusMsgAutomaticRefSwitching.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgAutomaticRefSwitching.setDescription('Indicates whether or not changes in SSM will cause automatic reference switching. If the variable is set to enabled, the switch will process and react to changes in SSM. If the variable is set to disabled, changes in SSM will not cause timing reference switching. Default value is disabled.')
syncStatusMsgSdhOption = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("optionI", 1), ("optionII", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syncStatusMsgSdhOption.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgSdhOption.setDescription('Indicates the SSM Option being used on SDH/E1 interfaces. Default value is optionII.')
syncStatusMsgChanged = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 1, 21, 0, 1)).setObjects(("Fore-SSM-MIB", "syncStatusMsgPrevRxMessage"), ("Fore-SSM-MIB", "syncStatusMsgRxMessage"))
if mibBuilder.loadTexts: syncStatusMsgChanged.setStatus('current')
if mibBuilder.loadTexts: syncStatusMsgChanged.setDescription("This trap is generated whenever a configured timing reference's receive SSM changes. It indicates the previous SSM received and the new SSM being received.")
mibBuilder.exportSymbols("Fore-SSM-MIB", syncStatusMsgForceDus=syncStatusMsgForceDus, syncStatusMsgRxMessage=syncStatusMsgRxMessage, PYSNMP_MODULE_ID=sysStatusMsgModule, syncStatusMsgTable=syncStatusMsgTable, syncStatusMsgInterface=syncStatusMsgInterface, syncStatusMsgForceRxSsm=syncStatusMsgForceRxSsm, syncStatusMsgSdhOption=syncStatusMsgSdhOption, syncStatusMsgTxMessage=syncStatusMsgTxMessage, sysStatusMsgModule=sysStatusMsgModule, syncStatusMsgEntry=syncStatusMsgEntry, syncStatusMsgAutomaticRefSwitching=syncStatusMsgAutomaticRefSwitching, syncStatusMsgPrevRxMessage=syncStatusMsgPrevRxMessage, syncStatusMsgChanged=syncStatusMsgChanged, SyncStatusMsgType=SyncStatusMsgType)
