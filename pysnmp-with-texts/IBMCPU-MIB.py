#
# PySNMP MIB module IBMCPU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBMCPU-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:51:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, NotificationType, enterprises, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, MibIdentifier, Gauge32, Integer32, ObjectIdentity, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "NotificationType", "enterprises", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "MibIdentifier", "Gauge32", "Integer32", "ObjectIdentity", "Counter32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
ibm6611 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 2))
ibmsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 2, 4))
netView6000SubAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4))
nv6saComputerSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 4, 5))
nv6saComputerSystemLoad = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 4, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nv6saComputerSystemLoad.setStatus('mandatory')
if mibBuilder.loadTexts: nv6saComputerSystemLoad.setDescription('A snapshot of the main cpu load as a percentage i.e. 25% is 25.')
ibmMainProcessorLoadTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 2, 4, 1), )
if mibBuilder.loadTexts: ibmMainProcessorLoadTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmMainProcessorLoadTable.setDescription('A table containing the average main processor load over each minute for the last 60 minutes.')
ibmMainProcessorLoadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 2, 4, 1, 1), ).setIndexNames((0, "IBMCPU-MIB", "ibmMainProcessorLoadIndex"))
if mibBuilder.loadTexts: ibmMainProcessorLoadEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmMainProcessorLoadEntry.setDescription('An entry in the main processor load table.')
ibmMainProcessorLoadIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmMainProcessorLoadIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ibmMainProcessorLoadIndex.setDescription('Indicates the number of minutes ago that this entry contains main processor load information for.')
ibmMainProcessorLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 2, 4, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmMainProcessorLoad.setStatus('mandatory')
if mibBuilder.loadTexts: ibmMainProcessorLoad.setDescription('The main processor load averaged over one minute represented as a percentage, i.e. - 25% is 25.')
mibBuilder.exportSymbols("IBMCPU-MIB", nv6saComputerSystem=nv6saComputerSystem, ibmMainProcessorLoadEntry=ibmMainProcessorLoadEntry, ibmProd=ibmProd, netView6000SubAgent=netView6000SubAgent, ibm6611=ibm6611, ibm=ibm, ibmsystem=ibmsystem, nv6saComputerSystemLoad=nv6saComputerSystemLoad, ibmMainProcessorLoad=ibmMainProcessorLoad, ibmMainProcessorLoadIndex=ibmMainProcessorLoadIndex, ibmMainProcessorLoadTable=ibmMainProcessorLoadTable)
