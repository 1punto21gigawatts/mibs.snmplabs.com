#
# PySNMP MIB module EdgeSwitch-MULTICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EdgeSwitch-MULTICAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:10:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
fastPath, = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "fastPath")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
pimBsrCandidateBSREntry, = mibBuilder.importSymbols("PIM-BSR-MIB", "pimBsrCandidateBSREntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Integer32, MibIdentifier, Bits, Counter32, iso, ObjectIdentity, ModuleIdentity, TimeTicks, Counter64, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Integer32", "MibIdentifier", "Bits", "Counter32", "iso", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "Counter64", "NotificationType", "Gauge32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
fastPathMulticast = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4))
fastPathMulticast.setRevisions(('2011-01-26 00:00', '2009-01-03 00:00', '2007-05-23 00:00', '2003-11-21 00:00', '2002-05-08 14:18',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathMulticast.setRevisionsDescriptions(('Postal address updated.', 'Add agentIpStaticMRouteTable.', 'Ubiquiti branding related changes.', 'Revisions made for new release.', 'Initial revision.',))
if mibBuilder.loadTexts: fastPathMulticast.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathMulticast.setOrganization('Broadcom Inc')
if mibBuilder.loadTexts: fastPathMulticast.setContactInfo('')
if mibBuilder.loadTexts: fastPathMulticast.setDescription('The MIB definitions for Multicast Routing Flex package.')
agentMulticastIGMPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1))
agentMulticastIGMPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIGMPAdminMode.setDescription('This enables or disables IGMP on the system.')
agentMulticastIGMPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1, 2), )
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceTable.setDescription('Provides Per-Interface configuration of IGMP.')
agentMulticastIGMPInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1, 2, 1), ).setIndexNames((0, "EdgeSwitch-MULTICAST-MIB", "agentMulticastIGMPInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastIGMPInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastIGMPInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceAdminMode.setDescription('This enables or disables IGMP on this interface.')
agentMulticastPIMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 2))
agentMulticastPIMConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sparse", 1), ("dense", 2))).clone('dense')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMConfigMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMConfigMode.setDescription('This controls which PIM mode configuration the PIM-MIB displays.')
agentMulticastPIMSMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3))
agentMulticastPIMSMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMSMAdminMode.setDescription('This enables or disables PIM Sparse Mode on the system.')
agentMulticastPIMSMStaticRPTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2), )
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMStaticRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2, 1), ).setIndexNames((0, "EdgeSwitch-MULTICAST-MIB", "agentMulticastPIMSMStaticRPIpAddr"), (0, "EdgeSwitch-MULTICAST-MIB", "agentMulticastPIMSMStaticRPGroupIpAddr"), (0, "EdgeSwitch-MULTICAST-MIB", "agentMulticastPIMSMStaticRPGroupIpMask"))
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPEntry.setDescription('Information about a table entry.')
agentMulticastPIMSMStaticRPIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPIpAddr.setDescription('IP Address of the RP.')
agentMulticastPIMSMStaticRPGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpAddr.setDescription('Group IP Address supported by the RP.')
agentMulticastPIMSMStaticRPGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2, 1, 3), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpMask.setDescription('Group mask for the group IP Address.')
agentMulticastPIMSMStaticRPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPStatus.setDescription('Status of this entry in the Static RP Table. Allowed values are: active(1) - This entry is active destroy(6) - Setting an entry to this value removes the entry from the table.')
agentMulticastPIMSMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 3), )
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 3, 1), ).setIndexNames((0, "EdgeSwitch-MULTICAST-MIB", "agentMulticastPIMSMInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMSMInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceIndex.setDescription('Routing Interface associated with this PIM SM configuration entry.')
agentMulticastPIMSMInterfaceCBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCBSRHashMaskLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCBSRHashMaskLength.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMInterfaceCRPPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCRPPreference.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCRPPreference.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMDMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 4))
agentMulticastPIMDMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMDMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMDMAdminMode.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastRoutingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 5))
agentMulticastRoutingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastRoutingAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastRoutingAdminMode.setDescription('This enables or disables Multicast Routing Mode on the system.')
agentMulticastDVMRPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 6))
agentMulticastDVMRPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastDVMRPAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastDVMRPAdminMode.setDescription('This enables or disables DVMRP on the system.')
agentSnmpTrapFlagsConfigGroupMulticast = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 7))
agentSnmpDVMRPTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpDVMRPTrapFlag.setStatus('current')
if mibBuilder.loadTexts: agentSnmpDVMRPTrapFlag.setDescription('This enables or disables DVMRP Traps on the system.')
agentSnmpPIMTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpPIMTrapFlag.setStatus('current')
if mibBuilder.loadTexts: agentSnmpPIMTrapFlag.setDescription('This enables or disables PIM Traps on the system.')
agentIpStaticMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8), )
if mibBuilder.loadTexts: agentIpStaticMRouteTable.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteTable.setDescription('The table listing the Static Multicast Route Entries.')
agentIpStaticMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1), ).setIndexNames((0, "EdgeSwitch-MULTICAST-MIB", "agentIpStaticMRouteSrcAddressType"), (0, "EdgeSwitch-MULTICAST-MIB", "agentIpStaticMRouteSrcIpAddr"), (0, "EdgeSwitch-MULTICAST-MIB", "agentIpStaticMRouteSrcNetMask"))
if mibBuilder.loadTexts: agentIpStaticMRouteEntry.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteEntry.setDescription('Information about a table entry.')
agentIpStaticMRouteSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: agentIpStaticMRouteSrcAddressType.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcAddressType.setDescription('The address type of this Multicast data source.')
agentIpStaticMRouteSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 2), InetAddress())
if mibBuilder.loadTexts: agentIpStaticMRouteSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcIpAddr.setDescription('The address of the Multicast data source.')
agentIpStaticMRouteSrcNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: agentIpStaticMRouteSrcNetMask.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcNetMask.setDescription('The network mask for the IP address of the Multicast data source.')
agentIpStaticMRouteRpfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteRpfIpAddr.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteRpfIpAddr.setDescription('The RPF Address.')
agentIpStaticMRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteIfIndex.setDescription('The interface index is valid only for IPv6 and only if RPF address is link-local.')
agentIpStaticMRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRoutePreference.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRoutePreference.setDescription('The preference of this route entry.')
agentIpStaticMRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 8, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteStatus.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteStatus.setDescription('The preference of this route entry.')
agentPIMBsrCandidateConfTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 4), )
if mibBuilder.loadTexts: agentPIMBsrCandidateConfTable.setStatus('current')
if mibBuilder.loadTexts: agentPIMBsrCandidateConfTable.setDescription('Provides Candidate-BSR-Advertisements interval information.')
agentPIMBsrCandidateConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 4, 1), )
pimBsrCandidateBSREntry.registerAugmentions(("EdgeSwitch-MULTICAST-MIB", "agentPIMBsrCandidateConfEntry"))
agentPIMBsrCandidateConfEntry.setIndexNames(*pimBsrCandidateBSREntry.getIndexNames())
if mibBuilder.loadTexts: agentPIMBsrCandidateConfEntry.setStatus('current')
if mibBuilder.loadTexts: agentPIMBsrCandidateConfEntry.setDescription('Information about a table entry.')
pimBsrCandidateBSRAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 4, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimBsrCandidateBSRAdvInterval.setStatus('current')
if mibBuilder.loadTexts: pimBsrCandidateBSRAdvInterval.setDescription('A Candidate BSR generates Candidate-BSR-Advertisements periodically. This object represents the time interval in seconds between two consecutive advertisements.')
mibBuilder.exportSymbols("EdgeSwitch-MULTICAST-MIB", agentIpStaticMRouteRpfIpAddr=agentIpStaticMRouteRpfIpAddr, agentMulticastIGMPInterfaceEntry=agentMulticastIGMPInterfaceEntry, agentMulticastPIMSMInterfaceCRPPreference=agentMulticastPIMSMInterfaceCRPPreference, agentMulticastPIMSMStaticRPIpAddr=agentMulticastPIMSMStaticRPIpAddr, agentIpStaticMRouteSrcAddressType=agentIpStaticMRouteSrcAddressType, agentIpStaticMRouteEntry=agentIpStaticMRouteEntry, agentMulticastRoutingConfigGroup=agentMulticastRoutingConfigGroup, agentSnmpTrapFlagsConfigGroupMulticast=agentSnmpTrapFlagsConfigGroupMulticast, agentMulticastPIMSMStaticRPGroupIpAddr=agentMulticastPIMSMStaticRPGroupIpAddr, agentMulticastPIMSMConfigGroup=agentMulticastPIMSMConfigGroup, agentMulticastDVMRPConfigGroup=agentMulticastDVMRPConfigGroup, agentMulticastDVMRPAdminMode=agentMulticastDVMRPAdminMode, agentMulticastPIMSMInterfaceCBSRHashMaskLength=agentMulticastPIMSMInterfaceCBSRHashMaskLength, PYSNMP_MODULE_ID=fastPathMulticast, agentMulticastPIMConfigMode=agentMulticastPIMConfigMode, fastPathMulticast=fastPathMulticast, agentSnmpDVMRPTrapFlag=agentSnmpDVMRPTrapFlag, agentMulticastPIMSMStaticRPGroupIpMask=agentMulticastPIMSMStaticRPGroupIpMask, agentMulticastIGMPInterfaceAdminMode=agentMulticastIGMPInterfaceAdminMode, agentMulticastPIMConfigGroup=agentMulticastPIMConfigGroup, agentMulticastPIMDMConfigGroup=agentMulticastPIMDMConfigGroup, agentMulticastRoutingAdminMode=agentMulticastRoutingAdminMode, agentMulticastIGMPConfigGroup=agentMulticastIGMPConfigGroup, agentMulticastIGMPInterfaceTable=agentMulticastIGMPInterfaceTable, agentMulticastPIMSMStaticRPTable=agentMulticastPIMSMStaticRPTable, agentMulticastPIMSMInterfaceEntry=agentMulticastPIMSMInterfaceEntry, agentIpStaticMRouteTable=agentIpStaticMRouteTable, agentPIMBsrCandidateConfTable=agentPIMBsrCandidateConfTable, agentMulticastIGMPAdminMode=agentMulticastIGMPAdminMode, agentIpStaticMRouteSrcIpAddr=agentIpStaticMRouteSrcIpAddr, agentMulticastPIMSMStaticRPEntry=agentMulticastPIMSMStaticRPEntry, agentMulticastPIMDMAdminMode=agentMulticastPIMDMAdminMode, agentIpStaticMRouteSrcNetMask=agentIpStaticMRouteSrcNetMask, agentMulticastPIMSMInterfaceIndex=agentMulticastPIMSMInterfaceIndex, agentMulticastPIMSMAdminMode=agentMulticastPIMSMAdminMode, agentSnmpPIMTrapFlag=agentSnmpPIMTrapFlag, pimBsrCandidateBSRAdvInterval=pimBsrCandidateBSRAdvInterval, agentMulticastIGMPInterfaceIfIndex=agentMulticastIGMPInterfaceIfIndex, agentMulticastPIMSMInterfaceTable=agentMulticastPIMSMInterfaceTable, agentPIMBsrCandidateConfEntry=agentPIMBsrCandidateConfEntry, agentMulticastPIMSMStaticRPStatus=agentMulticastPIMSMStaticRPStatus, agentIpStaticMRouteStatus=agentIpStaticMRouteStatus, agentIpStaticMRouteIfIndex=agentIpStaticMRouteIfIndex, agentIpStaticMRoutePreference=agentIpStaticMRoutePreference)
