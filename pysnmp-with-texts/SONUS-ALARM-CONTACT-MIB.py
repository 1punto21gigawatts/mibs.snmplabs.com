#
# PySNMP MIB module SONUS-ALARM-CONTACT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-ALARM-CONTACT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, iso, Counter32, Integer32, Gauge32, IpAddress, ModuleIdentity, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "iso", "Counter32", "Integer32", "Gauge32", "IpAddress", "ModuleIdentity", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonusEventClass, sonusShelfIndex, sonusEventLevel, sonusEventDescription = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusShelfIndex", "sonusEventLevel", "sonusEventDescription")
sonusSystemMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusSystemMIBs")
SonusShelfIndex, SonusAdminState, SonusBoolean = mibBuilder.importSymbols("SONUS-TC", "SonusShelfIndex", "SonusAdminState", "SonusBoolean")
sonusAlarmManagerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6))
if mibBuilder.loadTexts: sonusAlarmManagerMIB.setLastUpdated('200008280000Z')
if mibBuilder.loadTexts: sonusAlarmManagerMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusAlarmManagerMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusAlarmManagerMIB.setDescription('The MIB Module for Physical Alarm Contacts management.')
sonusAlarmManagerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1))
sonusAlarmOutAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1), )
if mibBuilder.loadTexts: sonusAlarmOutAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnTable.setDescription(' ')
sonusAlarmOutAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1), ).setIndexNames((0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmOutAdmnShelfIndex"), (0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmOutAdmnRelayIndex"))
if mibBuilder.loadTexts: sonusAlarmOutAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnEntry.setDescription(' ')
sonusAlarmOutAdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutAdmnShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnShelfIndex.setDescription(' Identifies the target shelf within the node. ')
sonusAlarmOutAdmnRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("shelfpwr-1", 1), ("critical-2", 2), ("major-3", 3), ("minor-4", 4), ("user-5", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutAdmnRelayIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnRelayIndex.setDescription(' Identifies the target outbound relay within the shelf. ')
sonusAlarmOutAdmnOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 3), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAlarmOutAdmnOperState.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnOperState.setDescription(" If enabled, the relay will respond to system events by opening and closing. If disabled, then it will be left in the default state of 'Clear', where clear is relative to the 'sense' assigned to the relay. The default sense is Normal, which means a closed relay is considered in the alarm state.")
sonusAlarmOutAdmnValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("alarm", 2))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAlarmOutAdmnValue.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnValue.setDescription(' Default value for the relays, either ALARM or CLEAR. Alarm contact five can be manually reconfigured. Alarm Contacts 1 thru 4 have a fixed default state of CLEAR, and cannot be manually reconfigured')
sonusAlarmOutAdmnSense = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("inverted", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAlarmOutAdmnSense.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnSense.setDescription(' Select NORMAL if a CLOSED relay indicates an alarm condition. Select INVERTED if an OPEN relay indicates an alarm condition.')
sonusAlarmOutAdmnStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAlarmOutAdmnStartDelay.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnStartDelay.setDescription(' Start Delay will hold the outbound relays in reset for the time period(seconds) specified. This is intended to mitigate nuisance alarms when a shelf is first started. ')
sonusAlarmOutAdmnCutoff = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAlarmOutAdmnCutoff.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutAdmnCutoff.setDescription(" Cutoff will cause the outbound relay selected to be set to its alarm clear state, relative to the relay 'sense' setting. This allows the customer to disable an alarm after it has been set by some system event. Cutoff is a one shot event, which does not inhibit future additional alarms on that relay from occuring. Alarm Relays DO NOT automatically clear, and must be cleared manually with this feature.")
sonusAlarmOutStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2), )
if mibBuilder.loadTexts: sonusAlarmOutStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatTable.setDescription(' This table describes the current status of the outbound alarm relays ')
sonusAlarmOutStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2, 1), ).setIndexNames((0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmOutStatShelfIndex"), (0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmOutStatRelayIndex"))
if mibBuilder.loadTexts: sonusAlarmOutStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatEntry.setDescription(' ')
sonusAlarmOutStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatShelfIndex.setDescription(' ')
sonusAlarmOutStatRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("shelfpwr-1", 1), ("critical-2", 2), ("major-3", 3), ("minor-4", 4), ("user-5", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutStatRelayIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatRelayIndex.setDescription(' ')
sonusAlarmOutStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("alarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutStatStatus.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatStatus.setDescription(' Indicates the operational status of the alarm relay contacts.')
sonusAlarmOutStatStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 2, 1, 4), SonusBoolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmOutStatStartDelay.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmOutStatStartDelay.setDescription(' TRUE if the alarm contact is in Start Delay, FALSE otherwise. Start Delay is a programmable time period that when the Shelf boots, alarm events will NOT trigger the corresponding alarm contact. It is intended to mitigate nuisance alarms when a shelf is first started.')
sonusAlarmInStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 3), )
if mibBuilder.loadTexts: sonusAlarmInStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmInStatTable.setDescription(' This table describes the current status of the inbound alarm ports ')
sonusAlarmInStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 3, 1), ).setIndexNames((0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmInStatShelfIndex"), (0, "SONUS-ALARM-CONTACT-MIB", "sonusAlarmInStatPort"))
if mibBuilder.loadTexts: sonusAlarmInStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmInStatEntry.setDescription(' ')
sonusAlarmInStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 3, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmInStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmInStatShelfIndex.setDescription(' ')
sonusAlarmInStatPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmInStatPort.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmInStatPort.setDescription(' ')
sonusAlarmInStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("closed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmInStatStatus.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmInStatStatus.setDescription(' Indicates the operational status of the inbound alarm contacts.')
sonusAlarmManagerMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2))
sonusAlarmManagerMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2, 0))
sonusAlarmManagerMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2, 1))
sonusAlarmPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmPortIndex.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmPortIndex.setDescription('Alarm IN port which has changed state.')
sonusAlarmPortState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("closed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAlarmPortState.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmPortState.setDescription('The current state of the inbound alarm port. ')
sonusAlarmManagerInboundNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 1, 6, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-ALARM-CONTACT-MIB", "sonusAlarmPortIndex"), ("SONUS-ALARM-CONTACT-MIB", "sonusAlarmPortState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusAlarmManagerInboundNotification.setStatus('current')
if mibBuilder.loadTexts: sonusAlarmManagerInboundNotification.setDescription('This trap indicates that a change of state has occured on the inbound alarm port')
mibBuilder.exportSymbols("SONUS-ALARM-CONTACT-MIB", sonusAlarmManagerMIBNotifications=sonusAlarmManagerMIBNotifications, sonusAlarmManagerInboundNotification=sonusAlarmManagerInboundNotification, sonusAlarmOutAdmnValue=sonusAlarmOutAdmnValue, sonusAlarmOutStatEntry=sonusAlarmOutStatEntry, sonusAlarmInStatEntry=sonusAlarmInStatEntry, sonusAlarmOutStatTable=sonusAlarmOutStatTable, sonusAlarmPortIndex=sonusAlarmPortIndex, sonusAlarmManagerMIBNotificationsObjects=sonusAlarmManagerMIBNotificationsObjects, sonusAlarmInStatTable=sonusAlarmInStatTable, sonusAlarmOutStatStartDelay=sonusAlarmOutStatStartDelay, sonusAlarmOutAdmnOperState=sonusAlarmOutAdmnOperState, sonusAlarmOutAdmnCutoff=sonusAlarmOutAdmnCutoff, sonusAlarmManagerMIBNotificationsPrefix=sonusAlarmManagerMIBNotificationsPrefix, PYSNMP_MODULE_ID=sonusAlarmManagerMIB, sonusAlarmManagerMIBObjects=sonusAlarmManagerMIBObjects, sonusAlarmOutAdmnTable=sonusAlarmOutAdmnTable, sonusAlarmOutStatStatus=sonusAlarmOutStatStatus, sonusAlarmInStatStatus=sonusAlarmInStatStatus, sonusAlarmOutAdmnEntry=sonusAlarmOutAdmnEntry, sonusAlarmOutAdmnRelayIndex=sonusAlarmOutAdmnRelayIndex, sonusAlarmOutStatRelayIndex=sonusAlarmOutStatRelayIndex, sonusAlarmOutStatShelfIndex=sonusAlarmOutStatShelfIndex, sonusAlarmPortState=sonusAlarmPortState, sonusAlarmInStatShelfIndex=sonusAlarmInStatShelfIndex, sonusAlarmManagerMIB=sonusAlarmManagerMIB, sonusAlarmOutAdmnStartDelay=sonusAlarmOutAdmnStartDelay, sonusAlarmOutAdmnShelfIndex=sonusAlarmOutAdmnShelfIndex, sonusAlarmOutAdmnSense=sonusAlarmOutAdmnSense, sonusAlarmInStatPort=sonusAlarmInStatPort)
