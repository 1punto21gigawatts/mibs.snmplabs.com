#
# PySNMP MIB module AT-ETH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-ETH-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:29:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
modules, DisplayStringUnsized = mibBuilder.importSymbols("AT-SMI-MIB", "modules", "DisplayStringUnsized")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, iso, Unsigned32, IpAddress, ModuleIdentity, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, Gauge32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "ModuleIdentity", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "Gauge32", "Bits", "Integer32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ethernet = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23))
ethernet.setRevisions(('2006-06-28 12:22', '2013-02-07 13:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ethernet.setRevisionsDescriptions(('Initial Revision', 'Added trap for when the new bandwidth parameter is set by the command handler',))
if mibBuilder.loadTexts: ethernet.setLastUpdated('201302071350Z')
if mibBuilder.loadTexts: ethernet.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: ethernet.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: ethernet.setDescription('This MIB file contains definitions of managed objects for the ethernet module. ')
ethernetTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 0))
ethernetTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 0, 1)).setObjects(("AT-ETH-MIB", "ethernetTrapMessage"))
if mibBuilder.loadTexts: ethernetTrap.setStatus('current')
if mibBuilder.loadTexts: ethernetTrap.setDescription('An ethernet trap is generated when the administrator sets the bandwidth on this interface.')
ethIntTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1), )
if mibBuilder.loadTexts: ethIntTable.setStatus('current')
if mibBuilder.loadTexts: ethIntTable.setDescription('The table of Ethernet interfaces.')
ethIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1), ).setIndexNames((0, "AT-ETH-MIB", "ethIntIndex"))
if mibBuilder.loadTexts: ethIntEntry.setStatus('current')
if mibBuilder.loadTexts: ethIntEntry.setDescription('A single entry in the Ethernet interfaces table.')
ethIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethIntIndex.setStatus('current')
if mibBuilder.loadTexts: ethIntIndex.setDescription('The ifIndex of the Ethernet interface.')
ethIntBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethIntBoardIndex.setStatus('current')
if mibBuilder.loadTexts: ethIntBoardIndex.setDescription('The index in the arBoardTable of the board on which this Ethernet interface resides. If this Ethernet interface is not found, the value of this object is 0.')
ethIntBoardPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethIntBoardPosition.setStatus('current')
if mibBuilder.loadTexts: ethIntBoardPosition.setDescription("The position on this Ethernet interface's board of this Ethernet interface. If this Ethernet interface is not found, the value of this object is 0.")
ethIntDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethIntDuplexMode.setStatus('current')
if mibBuilder.loadTexts: ethIntDuplexMode.setDescription('The duplex mode of this Ethernet interface. The value unknown is returned when the interface cannot or has not yet made a determination of its duplex mode, or when the interface cannot be found.')
ethBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBandwidth.setStatus('current')
if mibBuilder.loadTexts: ethBandwidth.setDescription('The bandwidth set on this Ethernet interface specified in kbps.')
ethernetTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 23, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetTrapMessage.setStatus('current')
if mibBuilder.loadTexts: ethernetTrapMessage.setDescription('The last message sent in an ethernet TRAP. This variable is really just a placeholder for the object sent in the ethernet TRAP, but can be read independently if required. Note however that a new TRAP will cause this variable to be overwritten.')
mibBuilder.exportSymbols("AT-ETH-MIB", ethernet=ethernet, ethernetTraps=ethernetTraps, ethernetTrap=ethernetTrap, ethIntBoardPosition=ethIntBoardPosition, ethBandwidth=ethBandwidth, ethIntIndex=ethIntIndex, ethIntBoardIndex=ethIntBoardIndex, ethIntDuplexMode=ethIntDuplexMode, ethIntTable=ethIntTable, ethernetTrapMessage=ethernetTrapMessage, ethIntEntry=ethIntEntry, PYSNMP_MODULE_ID=ethernet)
