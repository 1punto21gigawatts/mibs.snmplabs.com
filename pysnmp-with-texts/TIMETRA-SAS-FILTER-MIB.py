#
# PySNMP MIB module TIMETRA-SAS-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-SAS-FILTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:21:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
InetAddressIPv6, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddressPrefixLength")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Opaque, MibIdentifier, Integer32, Unsigned32, ModuleIdentity, IpAddress, Counter32, iso, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Opaque", "MibIdentifier", "Integer32", "Unsigned32", "ModuleIdentity", "IpAddress", "Counter32", "iso", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "ObjectIdentity")
MacAddress, RowStatus, DisplayString, TimeStamp, RowPointer, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "DisplayString", "TimeStamp", "RowPointer", "TruthValue", "TextualConvention")
tIPFilterEntry, tIPv6FilterEntry = mibBuilder.importSymbols("TIMETRA-FILTER-MIB", "tIPFilterEntry", "tIPv6FilterEntry")
tmnxSRNotifyPrefix, tmnxSRObjs, timetraSRMIBModules, tmnxSRConfs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "tmnxSRObjs", "timetraSRMIBModules", "tmnxSRConfs")
timetraSASObjs, timetraSASNotifyPrefix, timetraSASModules, timetraSASConfs = mibBuilder.importSymbols("TIMETRA-SAS-GLOBAL-MIB", "timetraSASObjs", "timetraSASNotifyPrefix", "timetraSASModules", "timetraSASConfs")
TItemDescription, TDSCPFilterActionValue, TNamedItemOrEmpty, TmnxServId, ServiceAccessPoint, TFrameType, TNamedItem, TmnxAdminState, TTcpUdpPort, TIpOption, TmnxEncapVal, Dot1PPriority, SdpBindId, TDSCPNameOrEmpty, TTcpUdpPortOperator, TIpProtocol, TmnxPortID, IpAddressPrefixLength, TmnxOperState = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TItemDescription", "TDSCPFilterActionValue", "TNamedItemOrEmpty", "TmnxServId", "ServiceAccessPoint", "TFrameType", "TNamedItem", "TmnxAdminState", "TTcpUdpPort", "TIpOption", "TmnxEncapVal", "Dot1PPriority", "SdpBindId", "TDSCPNameOrEmpty", "TTcpUdpPortOperator", "TIpProtocol", "TmnxPortID", "IpAddressPrefixLength", "TmnxOperState")
timetraSASFilterMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 2, 1, 1, 16))
timetraSASFilterMIBModule.setRevisions(('1912-04-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: timetraSASFilterMIBModule.setRevisionsDescriptions(('Rev 1.0 01 Apr 2012 00:00 1.0 release of the TIMETRA-SAS-FILTER-MIB.',))
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setLastUpdated('1204010000Z')
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setOrganization('Alcatel')
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setContactInfo('Alcatel 7x50 Support Web: http://www.alcatel.com/comps/pages/carrier_support.jhtml')
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setDescription("This document is the SNMP MIB module to manage and provision Filter features on Alcatel 7x50 systems. Copyright 2003-2012 Alcatel-Lucent. All rights reserved. Reproduction of this document is authorized on the condition that the foregoing copyright notice is included. This SNMP MIB module (Specification) embodies Alcatel's proprietary intellectual property. Alcatel retains all title and ownership in the Specification, including any revisions. Alcatel grants all interested parties a non-exclusive license to use and distribute an unmodified copy of this Specification in connection with management of Alcatel products, and without fee, provided this copyright notice and license appear on all copies. This Specification is supplied 'as is', and Alcatel makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
tmnxSASFilterObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21))
tSASFilterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1))
tIPFilterExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1), )
if mibBuilder.loadTexts: tIPFilterExtnTable.setStatus('current')
if mibBuilder.loadTexts: tIPFilterExtnTable.setDescription('Contains a List of all ip filters configured on this system.')
tIPFilterExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1, 1), )
tIPFilterEntry.registerAugmentions(("TIMETRA-SAS-FILTER-MIB", "tIPFilterExtnEntry"))
tIPFilterExtnEntry.setIndexNames(*tIPFilterEntry.getIndexNames())
if mibBuilder.loadTexts: tIPFilterExtnEntry.setStatus('current')
if mibBuilder.loadTexts: tIPFilterExtnEntry.setDescription('Information about a particular IP Filter entry. Entries are created/deleted by user. Entries have a presumed StorageType of nonVolatile.')
tFilterUseIpv6Resource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterUseIpv6Resource.setStatus('current')
if mibBuilder.loadTexts: tFilterUseIpv6Resource.setDescription('tFilterUseIpv6Resource specifies if the ipv6 resources should be used.')
tIPv6FilterExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2), )
if mibBuilder.loadTexts: tIPv6FilterExtnTable.setStatus('current')
if mibBuilder.loadTexts: tIPv6FilterExtnTable.setDescription('Contains a List of all IPv6 filters configured on this system.')
tIPv6FilterExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2, 1), )
tIPv6FilterEntry.registerAugmentions(("TIMETRA-SAS-FILTER-MIB", "tIPv6FilterExtnEntry"))
tIPv6FilterExtnEntry.setIndexNames(*tIPv6FilterEntry.getIndexNames())
if mibBuilder.loadTexts: tIPv6FilterExtnEntry.setStatus('current')
if mibBuilder.loadTexts: tIPv6FilterExtnEntry.setDescription('Information about a particular IPv6 Filter entry. Entries are created/deleted by user. Entries have a presumed StorageType of nonVolatile.')
tFilter64Bitsor128 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv6128", 1), ("ipv664", 2))).clone('ipv6128')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilter64Bitsor128.setStatus('current')
if mibBuilder.loadTexts: tFilter64Bitsor128.setDescription('tFilter64Bitsor128 is used to create a 64 bit or 128 bit ipv6 filter.')
mibBuilder.exportSymbols("TIMETRA-SAS-FILTER-MIB", tIPFilterExtnEntry=tIPFilterExtnEntry, tIPv6FilterExtnTable=tIPv6FilterExtnTable, PYSNMP_MODULE_ID=timetraSASFilterMIBModule, timetraSASFilterMIBModule=timetraSASFilterMIBModule, tmnxSASFilterObjs=tmnxSASFilterObjs, tSASFilterObjects=tSASFilterObjects, tFilter64Bitsor128=tFilter64Bitsor128, tIPv6FilterExtnEntry=tIPv6FilterExtnEntry, tIPFilterExtnTable=tIPFilterExtnTable, tFilterUseIpv6Resource=tFilterUseIpv6Resource)
