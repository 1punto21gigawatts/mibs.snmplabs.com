#
# PySNMP MIB module NETASQ-VPNSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETASQ-VPNSA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ntqVPN, = mibBuilder.importSymbols("NETASQ-SMI-MIB", "ntqVPN")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, NotificationType, MibIdentifier, Gauge32, iso, Counter64, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "NotificationType", "MibIdentifier", "Gauge32", "iso", "Counter64", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "Counter32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntqVPNSATable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1), )
if mibBuilder.loadTexts: ntqVPNSATable.setStatus('current')
if mibBuilder.loadTexts: ntqVPNSATable.setDescription('List of Security Association')
ntqVPNSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1), ).setIndexNames((0, "NETASQ-VPNSA-MIB", "ntqVPNSAIndex"))
if mibBuilder.loadTexts: ntqVPNSAEntry.setStatus('current')
if mibBuilder.loadTexts: ntqVPNSAEntry.setDescription('Each entry in the ntqVPNSATable holds a set of parameters.')
ntqVPNSAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNSAIndex.setStatus('current')
if mibBuilder.loadTexts: ntqVPNSAIndex.setDescription('A unique value for phase one table. Its value ranges between 1 and 65535 and may not be contigous. the index has no other meaning but a pure index')
ntqVPNIPSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNIPSrc.setStatus('current')
if mibBuilder.loadTexts: ntqVPNIPSrc.setDescription('IP source')
ntqVPNIPDst = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNIPDst.setStatus('current')
if mibBuilder.loadTexts: ntqVPNIPDst.setDescription('IP destination')
ntqVPNType = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unspec", 0), ("unknown", 1), ("ah", 2), ("esp", 3), ("rsvp", 4), ("ospfv2", 5), ("ripv2", 6), ("mip", 7), ("ipcomp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNType.setStatus('current')
if mibBuilder.loadTexts: ntqVPNType.setDescription('Type')
ntqVPNMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("any", 0), ("transport", 1), ("tunnel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNMode.setStatus('current')
if mibBuilder.loadTexts: ntqVPNMode.setDescription('Mode')
ntqVPNSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNSpi.setStatus('current')
if mibBuilder.loadTexts: ntqVPNSpi.setDescription('Secure property index')
ntqVPNPeerSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNPeerSpi.setStatus('current')
if mibBuilder.loadTexts: ntqVPNPeerSpi.setDescription('Secure property index')
ntqVPNReqID = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNReqID.setStatus('current')
if mibBuilder.loadTexts: ntqVPNReqID.setDescription('ReqID')
ntqVPNEnc = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNEnc.setStatus('current')
if mibBuilder.loadTexts: ntqVPNEnc.setDescription('Enc')
ntqVPNAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("hmac-md5", 1), ("hmac-sha1", 2), ("md5", 3), ("sha", 4), ("null", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNAuth.setStatus('current')
if mibBuilder.loadTexts: ntqVPNAuth.setDescription('Auth')
ntqVPNState = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("larval", 0), ("mature", 1), ("dying", 2), ("dead", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNState.setStatus('current')
if mibBuilder.loadTexts: ntqVPNState.setDescription('VPN State')
ntqVPNLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNLifetime.setStatus('current')
if mibBuilder.loadTexts: ntqVPNLifetime.setDescription('Lifetime')
ntqVPNBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNBytes.setStatus('current')
if mibBuilder.loadTexts: ntqVPNBytes.setDescription('Bytes')
ntqVPNMaxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNMaxLifetime.setStatus('current')
if mibBuilder.loadTexts: ntqVPNMaxLifetime.setDescription('MaxLifetime')
ntqVPNMaxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqVPNMaxBytes.setStatus('current')
if mibBuilder.loadTexts: ntqVPNMaxBytes.setDescription('MaxBytes')
mibBuilder.exportSymbols("NETASQ-VPNSA-MIB", ntqVPNIPSrc=ntqVPNIPSrc, ntqVPNMode=ntqVPNMode, ntqVPNMaxLifetime=ntqVPNMaxLifetime, ntqVPNSpi=ntqVPNSpi, ntqVPNSATable=ntqVPNSATable, ntqVPNPeerSpi=ntqVPNPeerSpi, ntqVPNSAEntry=ntqVPNSAEntry, ntqVPNIPDst=ntqVPNIPDst, ntqVPNType=ntqVPNType, ntqVPNSAIndex=ntqVPNSAIndex, ntqVPNAuth=ntqVPNAuth, ntqVPNState=ntqVPNState, ntqVPNEnc=ntqVPNEnc, ntqVPNBytes=ntqVPNBytes, ntqVPNMaxBytes=ntqVPNMaxBytes, ntqVPNLifetime=ntqVPNLifetime, ntqVPNReqID=ntqVPNReqID)
