#
# PySNMP MIB module CISCO-SERVICE-CONTROL-TP-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SERVICE-CONTROL-TP-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, Counter32, Unsigned32, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, ModuleIdentity, MibIdentifier, IpAddress, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "Unsigned32", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "IpAddress", "NotificationType", "TimeTicks", "iso")
TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp")
ciscoServiceControlTpStatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 634))
ciscoServiceControlTpStatsMIB.setRevisions(('2007-07-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoServiceControlTpStatsMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoServiceControlTpStatsMIB.setLastUpdated('200707220000Z')
if mibBuilder.loadTexts: ciscoServiceControlTpStatsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoServiceControlTpStatsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-excelsior-dev@cisco.com')
if mibBuilder.loadTexts: ciscoServiceControlTpStatsMIB.setDescription('This MIB provides information and statistics on the traffic processor(s) of a service control entity, which is a network element that monitors network traffic between network subscribers based on user configured policies. A service control entity uses traffic processor(s) for packet processing and flow handling in the host network. The traffic processor(s) data obtained from this MIB may also reflect the general load in the system.')
ciscoSCTpStatsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 634, 0))
ciscoSCTpStatsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 634, 1))
ciscoSCTpStatsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 634, 2))
cscTpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1), )
if mibBuilder.loadTexts: cscTpTable.setStatus('current')
if mibBuilder.loadTexts: cscTpTable.setDescription('This table contains the traffic processor statistics.')
cscTpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cscTpEntry.setStatus('current')
if mibBuilder.loadTexts: cscTpEntry.setDescription("This entry lists traffic data for packets and flows handled by the traffic processor, identified by the entPhysicalIndex for an entity with its entPhysicalClass equal to 'cpu' in ENTITY-MIB.")
cscTpTotalHandledPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalHandledPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalHandledPackets.setDescription('This object indicates the number of packets handled by this traffic processor since last restart. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalHandledFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 2), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalHandledFlows.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalHandledFlows.setDescription('This object indicates the number of flows handled by this traffic processor since last restart. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 3), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpActiveFlows.setStatus('current')
if mibBuilder.loadTexts: cscTpActiveFlows.setDescription('This object indicates the number of flows currently being handled by this traffic processor.')
cscTpTcpActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 4), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTcpActiveFlows.setStatus('current')
if mibBuilder.loadTexts: cscTpTcpActiveFlows.setDescription('This object indicates the number of TCP flows currently being handled by this traffic processor.')
cscTpUdpActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 5), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpUdpActiveFlows.setStatus('current')
if mibBuilder.loadTexts: cscTpUdpActiveFlows.setDescription('This object indicates the number of UDP flows currently being handled by this traffic processor.')
cscTpTotalBlockedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalBlockedPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalBlockedPackets.setDescription('This object indicates the number of packets discarded by this traffic processor due to application blocking rules. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalBlockedFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalBlockedFlows.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalBlockedFlows.setDescription('This object indicates the number of flows discarded by this traffic processor due to application blocking rules. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalBandwidthDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalBandwidthDiscardedPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalBandwidthDiscardedPackets.setDescription('This object indicates the number of packets discarded by this traffic processor due to subscriber bandwidth limitations. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalWredDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalWredDiscardedPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalWredDiscardedPackets.setDescription('This object indicates the number of packets discarded by this traffic processor due to congestion in the queues. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalFragments.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalFragments.setDescription('This object indicates the number of fragmented packets handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalNonIpPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalNonIpPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalNonIpPackets.setDescription('This object indicates the number of non IP packets handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalIpChecksumErrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 12), Counter32()).setUnits('num-of-packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalIpChecksumErrPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalIpChecksumErrPackets.setDescription('This object indicates the number of packets with IP checksum error handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalIpLengthErrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalIpLengthErrPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalIpLengthErrPackets.setDescription('This object indicates the number of packets with IP length error handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalIpBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalIpBroadcastPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalIpBroadcastPackets.setDescription('This object indicates the number of IP broadcast packets handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalTTLErrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalTTLErrPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalTTLErrPackets.setDescription('This object indicates the number of packets with TTL error handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpTotalTcpUdpChksumErrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpTotalTcpUdpChksumErrPackets.setStatus('current')
if mibBuilder.loadTexts: cscTpTotalTcpUdpChksumErrPackets.setDescription('This object indicates the number of TCP/UDP packets with checksum error handled by this traffic processor. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpHandledPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 17), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpHandledPacketsRate.setStatus('current')
if mibBuilder.loadTexts: cscTpHandledPacketsRate.setDescription('This object indicates the number of packets handled by this traffic processor per second.')
cscTpHandledFlowsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 18), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpHandledFlowsRate.setStatus('current')
if mibBuilder.loadTexts: cscTpHandledFlowsRate.setDescription('This object indicates the number of flow initiations per second on this traffic processor.')
cscTpFlowsCapacityUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpFlowsCapacityUtilization.setStatus('current')
if mibBuilder.loadTexts: cscTpFlowsCapacityUtilization.setDescription('This object indicates the percentage of open flows on this traffic processor out of the maximum supported number of flows per traffic processor.')
cscTpServiceLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('0.001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpServiceLoss.setStatus('current')
if mibBuilder.loadTexts: cscTpServiceLoss.setDescription('This object indicates the relative amount of service loss in this traffic processor, in units of 0.001%, since last restart.')
cscTpStatsTrafficCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2), )
if mibBuilder.loadTexts: cscTpStatsTrafficCountersTable.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCountersTable.setDescription('This table contains various traffic counters pertaining to traffic processing by the service control entity. These counters are defined, maintained and uniquely named by the service control entity hosted by traffic processor(s) at run time.')
cscTpStatsTrafficCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsTrafficCounterIndex"))
if mibBuilder.loadTexts: cscTpStatsTrafficCountersEntry.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCountersEntry.setDescription("This entry contains the traffic counter data for a specific traffic counter defined by the service control entity at run time. The service control entity is indicated by entPhysicalIndex in the ENTITY-MIB with entPhysicalClass of either 'module' or 'chassis'.")
cscTpStatsTrafficCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cscTpStatsTrafficCounterIndex.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCounterIndex.setDescription('An index value that uniquely identifies the counter.')
cscTpStatsTrafficCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpStatsTrafficCounterName.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCounterName.setDescription('This object indicates the human-readable name of this counter. The name is assigned by the service control entity when this counter is created at run time.')
cscTpStatsTrafficCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpStatsTrafficCounterValue.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCounterValue.setDescription('This object indicates a 64 bit counter value. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of cscTpCounterDiscontinuityTime.')
cscTpStatsTrafficCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bytes", 2), ("packets", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpStatsTrafficCounterType.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsTrafficCounterType.setDescription("Specifies the measurement unit of the traffic counters measured by cscTpStatsTrafficCounterValue and described by cscTpStatsTrafficCounterName. 'packets' : counts by packets 'bytes' : counts by bytes 'other' : none of the above.")
cscTpCounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 634, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cscTpCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: cscTpCounterDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any one or more of the traffic processors's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
cscTpStatsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 1))
cscTpStatsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 2))
cscTpStatsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 1, 1)).setObjects(("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsMIBObjectGroup"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsMIBTrafficCntrsObjGroup"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpCounterDiscontinuityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscTpStatsMIBCompliance = cscTpStatsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsMIBCompliance.setDescription('The compliance statement for SNMP Agents which implement this MIB.')
cscTpStatsMIBObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 2, 1)).setObjects(("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalHandledPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalHandledFlows"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpActiveFlows"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTcpActiveFlows"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpUdpActiveFlows"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalBlockedPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalBlockedFlows"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalBandwidthDiscardedPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalWredDiscardedPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalFragments"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalNonIpPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalIpChecksumErrPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalIpLengthErrPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalIpBroadcastPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalTTLErrPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpTotalTcpUdpChksumErrPackets"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpHandledPacketsRate"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpHandledFlowsRate"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpFlowsCapacityUtilization"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpServiceLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscTpStatsMIBObjectGroup = cscTpStatsMIBObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsMIBObjectGroup.setDescription('This group is a collection of objects for traffic processor counters related to handling data.')
cscTpStatsMIBTrafficCntrsObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 2, 2)).setObjects(("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsTrafficCounterValue"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsTrafficCounterName"), ("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpStatsTrafficCounterType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscTpStatsMIBTrafficCntrsObjGroup = cscTpStatsMIBTrafficCntrsObjGroup.setStatus('current')
if mibBuilder.loadTexts: cscTpStatsMIBTrafficCntrsObjGroup.setDescription('This group is a collection of objects for general traffic processor counters.')
cscTpCounterDiscontinuityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 634, 2, 2, 3)).setObjects(("CISCO-SERVICE-CONTROL-TP-STATS-MIB", "cscTpCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cscTpCounterDiscontinuityGroup = cscTpCounterDiscontinuityGroup.setStatus('current')
if mibBuilder.loadTexts: cscTpCounterDiscontinuityGroup.setDescription('A collection of objects providing information specific to traffic processor counter discontinuities.')
mibBuilder.exportSymbols("CISCO-SERVICE-CONTROL-TP-STATS-MIB", cscTpTotalBlockedFlows=cscTpTotalBlockedFlows, cscTpStatsTrafficCountersEntry=cscTpStatsTrafficCountersEntry, cscTpHandledFlowsRate=cscTpHandledFlowsRate, cscTpTotalTTLErrPackets=cscTpTotalTTLErrPackets, ciscoSCTpStatsMIBConform=ciscoSCTpStatsMIBConform, cscTpServiceLoss=cscTpServiceLoss, cscTpFlowsCapacityUtilization=cscTpFlowsCapacityUtilization, cscTpTotalBandwidthDiscardedPackets=cscTpTotalBandwidthDiscardedPackets, cscTpStatsTrafficCounterValue=cscTpStatsTrafficCounterValue, cscTpTcpActiveFlows=cscTpTcpActiveFlows, cscTpStatsTrafficCounterIndex=cscTpStatsTrafficCounterIndex, cscTpTable=cscTpTable, cscTpStatsMIBObjectGroup=cscTpStatsMIBObjectGroup, ciscoServiceControlTpStatsMIB=ciscoServiceControlTpStatsMIB, cscTpTotalTcpUdpChksumErrPackets=cscTpTotalTcpUdpChksumErrPackets, cscTpStatsMIBCompliance=cscTpStatsMIBCompliance, cscTpTotalHandledFlows=cscTpTotalHandledFlows, cscTpStatsTrafficCounterType=cscTpStatsTrafficCounterType, PYSNMP_MODULE_ID=ciscoServiceControlTpStatsMIB, cscTpStatsTrafficCountersTable=cscTpStatsTrafficCountersTable, cscTpEntry=cscTpEntry, cscTpTotalIpLengthErrPackets=cscTpTotalIpLengthErrPackets, cscTpCounterDiscontinuityGroup=cscTpCounterDiscontinuityGroup, cscTpHandledPacketsRate=cscTpHandledPacketsRate, cscTpTotalNonIpPackets=cscTpTotalNonIpPackets, cscTpActiveFlows=cscTpActiveFlows, cscTpTotalWredDiscardedPackets=cscTpTotalWredDiscardedPackets, cscTpTotalIpChecksumErrPackets=cscTpTotalIpChecksumErrPackets, cscTpTotalIpBroadcastPackets=cscTpTotalIpBroadcastPackets, cscTpStatsMIBCompliances=cscTpStatsMIBCompliances, ciscoSCTpStatsMIBNotifs=ciscoSCTpStatsMIBNotifs, ciscoSCTpStatsMIBObjects=ciscoSCTpStatsMIBObjects, cscTpTotalFragments=cscTpTotalFragments, cscTpStatsMIBGroups=cscTpStatsMIBGroups, cscTpTotalHandledPackets=cscTpTotalHandledPackets, cscTpStatsMIBTrafficCntrsObjGroup=cscTpStatsMIBTrafficCntrsObjGroup, cscTpCounterDiscontinuityTime=cscTpCounterDiscontinuityTime, cscTpStatsTrafficCounterName=cscTpStatsTrafficCounterName, cscTpTotalBlockedPackets=cscTpTotalBlockedPackets, cscTpUdpActiveFlows=cscTpUdpActiveFlows)
