#
# PySNMP MIB module TPLINK-pppoeConfig-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-pppoeConfig-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:26:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, IpAddress, Unsigned32, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, TimeTicks, ModuleIdentity, Counter64, NotificationType, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Unsigned32", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "TimeTicks", "ModuleIdentity", "Counter64", "NotificationType", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkPPPoEConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 57))
tplinkPPPoEConfigMIB.setRevisions(('2012-12-17 10:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkPPPoEConfigMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkPPPoEConfigMIB.setLastUpdated('201212171050Z')
if mibBuilder.loadTexts: tplinkPPPoEConfigMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkPPPoEConfigMIB.setContactInfo('www.tplink.com')
if mibBuilder.loadTexts: tplinkPPPoEConfigMIB.setDescription('Private MIB for PPPoE Circuit ID configuration.')
tplinkPPPoEConfigMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1))
tplinkPPPoEConfigNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 57, 2))
tpPppoeIdInsertionGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 1))
tpPppoeIdInsertionGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPppoeIdInsertionGlobalEnable.setStatus('current')
if mibBuilder.loadTexts: tpPppoeIdInsertionGlobalEnable.setDescription('0. disable 1. enable Enable/Disable the PPPoE Circuit-ID function.')
tpPppoeIdInsertionPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2))
tpPppoeIdInsertionPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1), )
if mibBuilder.loadTexts: tpPppoeIdInsertionPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: tpPppoeIdInsertionPortConfigTable.setDescription('A list of PPPoE Circuit-Id port config entries.')
tpPppoeIdInsertionPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpPppoeIdInsertionPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: tpPppoeIdInsertionPortConfigEntry.setDescription('An entry contains of the information of PPPoE Circuit-ID port config. Here you can configure the ports for the PPPoE Circuit-ID.')
tpPppoeIdInsertionPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPppoeIdInsertionPortIndex.setStatus('current')
if mibBuilder.loadTexts: tpPppoeIdInsertionPortIndex.setDescription('This object indicates the port number.')
tpPppoeCircuitIdPortConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigEnable.setStatus('current')
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigEnable.setDescription('0. disable 1. enable Select Enable/Disable the PPPoE Circuit-ID Insertion feature for the port.')
tpPppoeCircuitIdPortConfigIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("switchIp", 0), ("switchMac", 1), ("switchUdf", 2), ("switchUdfOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigIdType.setStatus('current')
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigIdType.setDescription("0. switch IP:The switch's IP address will be used to encode the Circuit-ID option. 1. switch MAC:The switch's MAC address will be used to encode the Circuit-ID option. 2. switch UDF:The user specified string with the maximum length of 40 will be used to encode the Circuit-ID option. 3. switch UDF-ONLY:Only the user specified string with the maximum length of 40 will be used to encode the Circuit-ID option. Select Circuit-ID type for the port.")
tpPppoeCircuitIdPortConfigUdfValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigUdfValue.setStatus('current')
if mibBuilder.loadTexts: tpPppoeCircuitIdPortConfigUdfValue.setDescription('A user specified string with the maximum length of 40. ')
tpPppoeRemoteIdPortConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPppoeRemoteIdPortConfigEnable.setStatus('current')
if mibBuilder.loadTexts: tpPppoeRemoteIdPortConfigEnable.setDescription('0. disable 1. enable Select Enable/Disable the PPPoE Remote-ID Insertion feature for the port.')
tpPppoeRemoteIdPortConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 57, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPppoeRemoteIdPortConfigValue.setStatus('current')
if mibBuilder.loadTexts: tpPppoeRemoteIdPortConfigValue.setDescription('A user specified string with the maximum length of 40. ')
mibBuilder.exportSymbols("TPLINK-pppoeConfig-MIB", tpPppoeIdInsertionPortIndex=tpPppoeIdInsertionPortIndex, tpPppoeIdInsertionPortConfig=tpPppoeIdInsertionPortConfig, tpPppoeCircuitIdPortConfigIdType=tpPppoeCircuitIdPortConfigIdType, tpPppoeRemoteIdPortConfigEnable=tpPppoeRemoteIdPortConfigEnable, tpPppoeIdInsertionPortConfigEntry=tpPppoeIdInsertionPortConfigEntry, tpPppoeCircuitIdPortConfigUdfValue=tpPppoeCircuitIdPortConfigUdfValue, tplinkPPPoEConfigMIBObjects=tplinkPPPoEConfigMIBObjects, tplinkPPPoEConfigNotifications=tplinkPPPoEConfigNotifications, tpPppoeIdInsertionPortConfigTable=tpPppoeIdInsertionPortConfigTable, tpPppoeIdInsertionGlobalConfig=tpPppoeIdInsertionGlobalConfig, tpPppoeRemoteIdPortConfigValue=tpPppoeRemoteIdPortConfigValue, tpPppoeIdInsertionGlobalEnable=tpPppoeIdInsertionGlobalEnable, tplinkPPPoEConfigMIB=tplinkPPPoEConfigMIB, PYSNMP_MODULE_ID=tplinkPPPoEConfigMIB, tpPppoeCircuitIdPortConfigEnable=tpPppoeCircuitIdPortConfigEnable)
