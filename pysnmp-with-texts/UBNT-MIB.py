#
# PySNMP MIB module UBNT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UBNT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:28:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, Gauge32, ModuleIdentity, Counter64, ObjectIdentity, NotificationType, Bits, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, MibIdentifier, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "ModuleIdentity", "Counter64", "ObjectIdentity", "NotificationType", "Bits", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "MibIdentifier", "iso", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ubntMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 41112, 1))
ubntMIB.setRevisions(('2014-02-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ubntMIB.setRevisionsDescriptions(('Split revision',))
if mibBuilder.loadTexts: ubntMIB.setLastUpdated('201402270000Z')
if mibBuilder.loadTexts: ubntMIB.setOrganization('Ubiquiti Networks, Inc.')
if mibBuilder.loadTexts: ubntMIB.setContactInfo('support@ubnt.com')
if mibBuilder.loadTexts: ubntMIB.setDescription('The MIB module for Ubiquiti Networks, Inc. entities')
ubnt = MibIdentifier((1, 3, 6, 1, 4, 1, 41112))
ubntSnmpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2))
ubntSnmpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 1))
ubntAirosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 2))
ubntAirFiberGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 3))
ubntEdgeMaxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 4))
ubntUniFiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 5))
ubntAirVisionGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 6))
ubntMFiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 7))
ubntUniTelGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 2, 8))
ubntAirFIBER = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 3))
ubntEdgeMax = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 5))
ubntUniFi = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 6))
ubntAirVision = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 7))
ubntMFi = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 8))
ubntUniTel = MibIdentifier((1, 3, 6, 1, 4, 1, 41112, 1, 9))
ubntORTable = MibTable((1, 3, 6, 1, 4, 1, 41112, 1, 1), )
if mibBuilder.loadTexts: ubntORTable.setStatus('current')
if mibBuilder.loadTexts: ubntORTable.setDescription('Capabilities')
ubntOREntry = MibTableRow((1, 3, 6, 1, 4, 1, 41112, 1, 1, 1), ).setIndexNames((0, "UBNT-MIB", "ubntORIndex"))
if mibBuilder.loadTexts: ubntOREntry.setStatus('current')
if mibBuilder.loadTexts: ubntOREntry.setDescription('An entry in the ubntORTable')
ubntORIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 41112, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: ubntORIndex.setStatus('current')
if mibBuilder.loadTexts: ubntORIndex.setDescription('Index for the ubntORTable')
ubntORID = MibTableColumn((1, 3, 6, 1, 4, 1, 41112, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ubntORID.setStatus('current')
if mibBuilder.loadTexts: ubntORID.setDescription('OR ID')
ubntORDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 41112, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ubntORDescr.setStatus('current')
if mibBuilder.loadTexts: ubntORDescr.setDescription('Description of idenfifier')
ubntORInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 41112, 1, 2, 1, 1)).setObjects(("UBNT-MIB", "ubntORID"), ("UBNT-MIB", "ubntORDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ubntORInfoGroup = ubntORInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ubntORInfoGroup.setDescription('Collection of related objects')
ubntORCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 41112, 1, 2, 1, 2)).setObjects(("UBNT-MIB", "ubntORInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ubntORCompliance = ubntORCompliance.setStatus('current')
if mibBuilder.loadTexts: ubntORCompliance.setDescription('The compliance statement for Ubiquiti entities.')
mibBuilder.exportSymbols("UBNT-MIB", ubntUniTel=ubntUniTel, ubntORDescr=ubntORDescr, ubntSnmpInfo=ubntSnmpInfo, ubnt=ubnt, PYSNMP_MODULE_ID=ubntMIB, ubntORTable=ubntORTable, ubntUniTelGroups=ubntUniTelGroups, ubntAirFiberGroups=ubntAirFiberGroups, ubntAirVision=ubntAirVision, ubntMFi=ubntMFi, ubntEdgeMaxGroups=ubntEdgeMaxGroups, ubntMIB=ubntMIB, ubntORIndex=ubntORIndex, ubntSnmpGroups=ubntSnmpGroups, ubntEdgeMax=ubntEdgeMax, ubntAirFIBER=ubntAirFIBER, ubntORInfoGroup=ubntORInfoGroup, ubntAirosGroups=ubntAirosGroups, ubntUniFi=ubntUniFi, ubntOREntry=ubntOREntry, ubntORID=ubntORID, ubntUniFiGroups=ubntUniFiGroups, ubntORCompliance=ubntORCompliance, ubntAirVisionGroups=ubntAirVisionGroups, ubntMFiGroups=ubntMFiGroups)
