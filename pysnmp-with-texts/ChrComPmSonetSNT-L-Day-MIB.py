#
# PySNMP MIB module ChrComPmSonetSNT-L-Day-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmSonetSNT-L-Day-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:35:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmSonet, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmSonet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, ModuleIdentity, IpAddress, NotificationType, Bits, MibIdentifier, TimeTicks, Unsigned32, Integer32, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "ModuleIdentity", "IpAddress", "NotificationType", "Bits", "MibIdentifier", "TimeTicks", "Unsigned32", "Integer32", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
chrComPmSonetSNT_L_DayTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6), ).setLabel("chrComPmSonetSNT-L-DayTable")
if mibBuilder.loadTexts: chrComPmSonetSNT_L_DayTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_L_DayTable.setDescription('')
chrComPmSonetSNT_L_DayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1), ).setLabel("chrComPmSonetSNT-L-DayEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"), (0, "ChrComPmSonetSNT-L-Day-MIB", "chrComPmSonetDayNumber"))
if mibBuilder.loadTexts: chrComPmSonetSNT_L_DayEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_L_DayEntry.setDescription('')
chrComPmSonetDayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetDayNumber.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetDayNumber.setDescription('')
chrComPmSonetSuspectedInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setDescription('')
chrComPmSonetElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setDescription('')
chrComPmSonetSuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setDescription('')
chrComPmSonetES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetES.setDescription('')
chrComPmSonetSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSES.setDescription('')
chrComPmSonetCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetCV.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetCV.setDescription('')
chrComPmSonetUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetUAS.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetUAS.setDescription('')
chrComPmSonetThresholdProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setDescription('')
chrComPmSonetResetPmCountersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 6, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setDescription('')
mibBuilder.exportSymbols("ChrComPmSonetSNT-L-Day-MIB", chrComPmSonetES=chrComPmSonetES, chrComPmSonetThresholdProfIndex=chrComPmSonetThresholdProfIndex, chrComPmSonetSNT_L_DayEntry=chrComPmSonetSNT_L_DayEntry, chrComPmSonetSuspectedInterval=chrComPmSonetSuspectedInterval, chrComPmSonetSES=chrComPmSonetSES, chrComPmSonetCV=chrComPmSonetCV, chrComPmSonetUAS=chrComPmSonetUAS, chrComPmSonetElapsedTime=chrComPmSonetElapsedTime, chrComPmSonetResetPmCountersAction=chrComPmSonetResetPmCountersAction, chrComPmSonetDayNumber=chrComPmSonetDayNumber, chrComPmSonetSuppressedIntrvls=chrComPmSonetSuppressedIntrvls, chrComPmSonetSNT_L_DayTable=chrComPmSonetSNT_L_DayTable)
