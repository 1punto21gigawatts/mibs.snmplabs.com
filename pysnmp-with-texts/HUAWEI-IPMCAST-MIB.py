#
# PySNMP MIB module HUAWEI-IPMCAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-IPMCAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:45:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
IANAipMRouteProtocol, IANAipRouteProtocol = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipMRouteProtocol", "IANAipRouteProtocol")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressPrefixLength, InetAddressType, InetAddress, InetVersion, InetZoneIndex = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddressType", "InetAddress", "InetVersion", "InetZoneIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, mib_2, Bits, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, ObjectIdentity, NotificationType, Integer32, iso, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "mib-2", "Bits", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "ObjectIdentity", "NotificationType", "Integer32", "iso", "Counter32", "TimeTicks")
StorageType, RowStatus, DisplayString, TimeStamp, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "DisplayString", "TimeStamp", "TruthValue", "TextualConvention")
hwMcast = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149))
hwIpMcastMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1))
hwIpMcastMib.setRevisions(('2014-07-01 00:00', '2014-06-20 00:00', '2013-08-28 00:00', '2007-04-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwIpMcastMib.setRevisionsDescriptions(('1.Modify the description of hwIpMcastSGThresholdExceed. 2.Modify the description of hwIpMcastSGThresholdExceedClear. 3.Modify the description of hwIpMcastSGExceedClear. ', '1.Add hwIpMcastSGThresholdExceed trap. 2.Add hwIpMcastSGThresholdExceedClear trap. 3.Add hwIpMcastSGExceed trap. 4.Add hwIpMcastSGExceedClear trap. ', 'Modify import mibs', 'The initial revision of this Mib module.',))
if mibBuilder.loadTexts: hwIpMcastMib.setLastUpdated('201407010000Z')
if mibBuilder.loadTexts: hwIpMcastMib.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwIpMcastMib.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwIpMcastMib.setDescription('The MIB module for management of IP Multicast, including multicast routing, data forwarding, and data reception. Huawei Technologies Co.,Ltd . Supplementary information may be available at: http://www.huawei.com')
class HWChannelMode(TextualConvention, Integer32):
    description = 'The mode in which a channel is operating. ssm(1) Source-Specific Multicast (SSM) with PIM Sparse Mode. asm(2) Any Source Multicast (ASM), with PIM Sparse Mode.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ssm", 1), ("asm", 2))

hwIpMcastMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1))
hwIpMcastNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2))
hwIpMcast = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1))
hwIpMcastEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpMcastEnable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastEnable.setDescription('The enabled status of IP Multicast function on this system.')
hwIpMcastRouteEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteEntryCount.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteEntryCount.setDescription('The number of rows in the hwIpMcastRouteTable. This can be used to check for multicast routing activity, and to monitor the multicast routing table size.')
hwIpMcastInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3), )
if mibBuilder.loadTexts: hwIpMcastInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceTable.setDescription('The (conceptual) table used to manage the multicast protocol active on an interface.')
hwIpMcastInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceIpVersion"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceIfIndex"))
if mibBuilder.loadTexts: hwIpMcastInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceEntry.setDescription('An entry (conceptual row) containing the multicast protocol information for a particular interface.')
hwIpMcastInterfaceIpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 1), InetVersion())
if mibBuilder.loadTexts: hwIpMcastInterfaceIpVersion.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceIpVersion.setDescription('The IP version of this row.')
hwIpMcastInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwIpMcastInterfaceIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hwIpMcastInterfaceTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpMcastInterfaceTtl.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceTtl.setDescription('The datagram TTL threshold for the interface. Any IP multicast datagrams with a TTL (IPv4) or Hop Limit (IPv6) less than this threshold will not be forwarded out the interface. The default value of 0 means all multicast packets are forwarded out the interface.')
hwIpMcastInterfaceRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpMcastInterfaceRateLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceRateLimit.setDescription('The rate-limit, in kilobits per second, of forwarded multicast traffic on the interface. A rate-limit of 0 indicates that no rate limiting is done.')
hwIpMcastInterfaceInMcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastOctets.setReference('RFC 4293 ifInOctets')
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastOctets.setDescription('The number of octets of multicast packets that have arrived on the interface, including framing characters. This object is similar to ifInOctets in the Interfaces MIB, except that only multicast packets are counted. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hwIpMcastInterfaceDiscontinuityTime.')
hwIpMcastInterfaceOutMcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastOctets.setReference('RFC 4293 ifOutOctets')
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastOctets.setDescription('The number of octets of multicast packets that have been sent on the interface, including framing characters. This object is similar to ifOutOctets in the Interfaces MIB, except that only multicast packets are counted. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hwIpMcastInterfaceDiscontinuityTime.')
hwIpMcastInterfaceInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastPkts.setReference('RFC 4293 ifInMulticastPkts')
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastPkts.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceInMcastPkts.setDescription('The number of multicast packets that have arrived on the interface. In many cases, this object is identical to ifInMulticastPkts in the Interfaces MIB. However, some implementations use ifXTable for Layer 2 traffic statistics and hwIpMcastInterfaceTable at Layer 3. In this case a difference between these objects probably indicates that some Layer 3 multicast packets are being transmitted as unicast at Layer 2. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hwIpMcastInterfaceDiscontinuityTime.')
hwIpMcastInterfaceOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastPkts.setReference('RFC 4293 ifOutMulticastPkts')
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastPkts.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceOutMcastPkts.setDescription('The number of multicast packets that have been sent on the interface. In many cases, this object is identical to ifOutMulticastPkts in the Interfaces MIB. However, some implementations use ifXTable for Layer 2 traffic statistics and hwIpMcastInterfaceTable at Layer 3. In this case a difference between these objects probably indicates that some Layer 3 multicast packets are being transmitted as unicast at Layer 2. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of hwIpMcastInterfaceDiscontinuityTime.')
hwIpMcastInterfaceDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastInterfaceDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInterfaceDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any one or more of this entry's counters suffered a discontinuity. If no such discontinuities have occurred since the last re- initialization of the local management subsystem, then this object contains a zero value.")
hwIpMcastRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5), )
if mibBuilder.loadTexts: hwIpMcastRouteTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteTable.setDescription('The (conceptual) table containing multicast routing information for IP datagrams sent by particular sources to to the IP multicast groups known to this router.')
hwIpMcastRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteGroupAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteGroup"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteGroupPrefixLength"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteSourceAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteSource"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteSourcePrefixLength"))
if mibBuilder.loadTexts: hwIpMcastRouteEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteEntry.setDescription('An entry (conceptual row) containing the multicast routing information for IP datagrams from a particular source and addressed to a particular IP multicast group address.')
hwIpMcastRouteGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastRouteGroupAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteGroupAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteGroup. Legal values correspond to the subset of address families for which multicast forwarding is supported.')
hwIpMcastRouteGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastRouteGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteGroup.setDescription('The IP multicast group address which, when combined with the corresponding value specified in hwIpMcastRouteGroupPrefixLength, identifies the groups for which this entry contains multicast routing information. This address object is only significant up to hwIpMcastRouteGroupPrefixLength bits. The remainder of the address bits are zero. This is especially important for this index field, which is part of the index of this entry. Any non-zero bits would signify an entirely different entry. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. The use of these address types indicate that this forwarding state applies only within the given zone. Zone index zero is not valid in this table.')
hwIpMcastRouteGroupPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: hwIpMcastRouteGroupPrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteGroupPrefixLength.setDescription('The length in bits of the mask which, when combined with the corresponding value of hwIpMcastRouteGroup, identifies the groups for which this entry contains multicast routing information.')
hwIpMcastRouteSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastRouteSourceAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteSourceAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteSource. The value MUST be the same as the value of IpMcastRouteGroupType.')
hwIpMcastRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastRouteSource.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteSource.setDescription('The network address which, when combined with the corresponding value of hwIpMcastRouteSourcePrefixLength, identifies the sources for which this entry contains multicast routing information. This address object is only significant up to hwIpMcastRouteGroupPrefixLength bits. The remainder of the address bits are zero. This is especially important for this index field, which is part of the index of this entry. Any non-zero bits would signify an entirely different entry. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. The use of these address types indicate that this source address applies only within the given zone. Zone index zero is not valid in this table.')
hwIpMcastRouteSourcePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 6), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: hwIpMcastRouteSourcePrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteSourcePrefixLength.setDescription('The length in bits of the mask which, when combined with the corresponding value of hwIpMcastRouteSource, identifies the sources for which this entry contains multicast routing information.')
hwIpMcastRouteUpstreamNeighborType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteUpstreamNeighborType.setReference('I-D.ietf-pim-bidir')
if mibBuilder.loadTexts: hwIpMcastRouteUpstreamNeighborType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteUpstreamNeighborType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteUpstreamNeighbor. An address type of unknown(0) indicates that the upstream neighbor is unknown, for example in BIDIR-PIM.')
hwIpMcastRouteUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteUpstreamNeighbor.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteUpstreamNeighbor.setDescription('The address of the upstream neighbor (for example, RPF neighbor) from which IP datagrams from these sources to this multicast address are received.')
hwIpMcastRouteInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteInIfIndex.setReference('I-D.ietf-pim-bidir')
if mibBuilder.loadTexts: hwIpMcastRouteInIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteInIfIndex.setDescription('The value of ifIndex for the interface on which IP datagrams sent by these sources to this multicast address are received. A value of 0 indicates that datagrams are not subject to an incoming interface check, but may be accepted on multiple interfaces (for example, in BIDIR-PIM).')
hwIpMcastRouteTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteTimeStamp.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteTimeStamp.setDescription('The value of sysUpTime at which the multicast routing information represented by this entry was learned by the router. If this infomration was present at the most recent re- initialization of the local management subsystem, then this object contains a zero value.')
hwIpMcastRouteExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteExpiryTime.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteExpiryTime.setDescription('The minimum amount of time remaining before this entry will be aged out. The value 0 indicates that the entry is not subject to aging. If hwIpMcastRouteNextHopState is pruned(1), this object represents the remaining time until the prune expires. If this timer expires, state reverts to forwarding(2). Otherwise, this object represents the time until this entry is removed from the table.')
hwIpMcastRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 12), IANAipMRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteProtocol.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteProtocol.setDescription('The multicast routing protocol via which this multicast forwarding entry was learned.')
hwIpMcastRouteRtProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 13), IANAipRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteRtProtocol.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteRtProtocol.setDescription('The routing mechanism via which the route used to find the upstream or parent interface for this multicast forwarding entry was learned.')
hwIpMcastRouteRtAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteRtAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteRtAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteRtAddress.')
hwIpMcastRouteRtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteRtAddress.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteRtAddress.setDescription('The address portion of the route used to find the upstream or parent interface for this multicast forwarding entry. This address object is only significant up to hwIpMcastRouteGroupPrefixLength bits. The remainder of the address bits are zero. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. The use of these address types indicate that this forwarding state applies only within the given zone. Zone index zero is not valid in this table.')
hwIpMcastRouteRtPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 16), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteRtPrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteRtPrefixLength.setDescription('The length in bits of the mask associated with the route used to find the upstream or parent interface for this multicast forwarding entry.')
hwIpMcastRouteRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteRtType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteRtType.setDescription('The reason the given route was placed in the (logical) multicast Routing Information Base (RIB). A value of unicast means that the route would normally be placed only in the unicast RIB, but was placed in the multicast RIB (instead or in addition) due to local configuration, such as when running PIM over RIP. A value of multicast means that the route was explicitly added to the multicast RIB by the routing protocol, such as DVMRP or Multiprotocol BGP.')
hwIpMcastRouteOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteOctets.setDescription('The number of octets contained in IP datagrams which were received from these sources and addressed to this multicast group address, and which were forwarded by this router. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.')
hwIpMcastRoutePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRoutePkts.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRoutePkts.setDescription('The number of packets routed using this multicast route entry. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.')
hwIpMcastRouteTtlDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteTtlDropOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteTtlDropOctets.setDescription('The number of octets contained in IP datagrams which this router has received from these sources and addressed to this multicast group address, which were dropped because the TTL (IPv4) or Hop Limit (IPv6) was decremented to zero, or to a value less than hwIpMcastInterfaceTtl for all next hops. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.')
hwIpMcastRouteTtlDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteTtlDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteTtlDropPackets.setDescription('The number of packets which this router has received from these sources and addressed to this multicast group address, which were dropped because the TTL (IPv4) or Hop Limit (IPv6) was decremented to zero, or to a value less than hwIpMcastInterfaceTtl for all next hops. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.')
hwIpMcastRouteDifferentInIfOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfOctets.setReference('RFC 4601 and I-D.ietf-pim-bidir')
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfOctets.setDescription("The number of octets contained in IP datagrams which this router has received from these sources and addressed to this multicast group address, which were dropped because they were received on an unexpected interface. For RPF checking protocols (such as PIM-SM), these packets arrived on interfaces other than hwIpMcastRouteInIfIndex, and were dropped because of this failed RPF check. (RPF paths are 'Reverse Path Forwarding' path; the unicast routes to the expected origin of multicast data flows). Other protocols may drop packets on an incoming interface check for different reasons (for example, BIDIR-PIM performs a DF check on receipt of packets). All packets dropped as a result of an incoming interface check are counted here. If this counter increases rapidly, this indicates a problem. A significant quantity of multicast data is arriving at this router on unexpected interfaces, and is not being forwarded. For guidance, if the rate of increase of this counter exceeds 1% of the rate of increase of hwIpMcastRouteOctets, then there are multicast routing problems that require investigation. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.")
hwIpMcastRouteDifferentInIfPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfPackets.setReference('RFC 4601 and I-D.ietf-pim-bidir')
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfPackets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteDifferentInIfPackets.setDescription("The number of packets which this router has received from these sources and addressed to this multicast group address, which were dropped because they were received on an unexpected interface. For RPF checking protocols (such as PIM-SM), these packets arrived on interfaces other than hwIpMcastRouteInIfIndex, and were dropped because of this failed RPF check. (RPF paths are 'Reverse Path Forwarding' path; the unicast routes to the expected origin of multicast data flows). Other protocols may drop packets on an incoming interface check for different reasons (for example, BIDIR-PIM performs a DF check on receipt of packets). All packets dropped as a result of an incoming interface check are counted here. If this counter increases rapidly, this indicates a problem. A significant quantity of multicast data is arriving at this router on unexpected interfaces, and is not being forwarded. For guidance, if the rate of increase of this counter exceeds 1% of the rate of increase of hwIpMcastRoutePkts, then there are multicast routing problems that require investigation. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteTimeStamp.")
hwIpMcastRouteNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6), )
if mibBuilder.loadTexts: hwIpMcastRouteNextHopTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopTable.setDescription('The (conceptual) table containing information on the next-hops on outgoing interfaces for routing IP multicast datagrams. Each entry is one of a list of next-hops on outgoing interfaces for particular sources sending to a particular multicast group address.')
hwIpMcastRouteNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopGroupAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopGroup"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopGroupPrefixLength"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopSourceAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopSource"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopSourcePrefixLength"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopIfIndex"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopAddress"))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopEntry.setDescription('An entry (conceptual row) in the list of next-hops on outgoing interfaces to which IP multicast datagrams from particular sources to an IP multicast group address are routed.')
hwIpMcastRouteNextHopGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroupAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroupAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteNextHopGroup. Legal values correspond to the subset of address families for which multicast forwarding is supported.')
hwIpMcastRouteNextHopGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroup.setDescription('The IP multicast group address which, when combined with the corresponding value specified in hwIpMcastRouteNextHopGroupPrefixLength, identifies the groups for which this entry contains multicast forwarding information. This address object is only significant up to hwIpMcastRouteNextHopGroupPrefixLength bits. The remainder of the address bits are zero. This is especially important for this index field, which is part of the index of this entry. Any non-zero bits would signify an entirely different entry. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. The use of these address types indicate that this forwarding state applies only within the given zone. Zone index zero is not valid in this table.')
hwIpMcastRouteNextHopGroupPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroupPrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopGroupPrefixLength.setDescription('The length in bits of the mask which, when combined with the corresponding value of hwIpMcastRouteGroup, identifies the groups for which this entry contains multicast routing information.')
hwIpMcastRouteNextHopSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSourceAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSourceAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteNextHopSource. The value MUST be the same as the value of IpMcastRouteNextHopGroupType.')
hwIpMcastRouteNextHopSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSource.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSource.setDescription('The network address which, when combined with the corresponding value of the mask specified in hwIpMcastRouteNextHopSourcePrefixLength, identifies the sources for which this entry specifies a next-hop on an outgoing interface. This address object is only significant up to hwIpMcastRouteNextHopSourcePrefixLength bits. The remainder of the address bits are zero. This is especially important for this index field, which is part of the index of this entry. Any non-zero bits would signify an entirely different entry. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. The use of these address types indicate that this source address applies only within the given zone. Zone index zero is not valid in this table.')
hwIpMcastRouteNextHopSourcePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 6), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSourcePrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopSourcePrefixLength.setDescription('The length in bits of the mask which, when combined with the corresponding value specified in hwIpMcastRouteNextHopSource, identifies the sources for which this entry specifies a next-hop on an outgoing interface.')
hwIpMcastRouteNextHopIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 7), InterfaceIndex())
if mibBuilder.loadTexts: hwIpMcastRouteNextHopIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopIfIndex.setDescription('The ifIndex value of the interface for the outgoing interface for this next-hop.')
hwIpMcastRouteNextHopAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 8), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastRouteNextHopAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastRouteNextHopAddress.')
hwIpMcastRouteNextHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastRouteNextHopAddress.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopAddress.setDescription('The address of the next-hop specific to this entry. For most interfaces, this is identical to hwIpMcastRouteNextHopGroup. NBMA interfaces, however, may have multiple next-hop addresses out a single outgoing interface.')
hwIpMcastRouteNextHopState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pruned", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopState.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopState.setDescription("An indication of whether the outgoing interface and next- hop represented by this entry is currently being used to forward IP datagrams. The value 'forwarding' indicates it is currently being used; the value 'pruned' indicates it is not.")
hwIpMcastRouteNextHopTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopTimeStamp.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopTimeStamp.setDescription('The value of sysUpTime at which the multicast routing information represented by this entry was learned by the router. If this infomration was present at the most recent re- initialization of the local management subsystem, then this object contains a zero value.')
hwIpMcastRouteNextHopExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopExpiryTime.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopExpiryTime.setDescription('The minimum amount of time remaining before this entry will be aged out. If hwIpMcastRouteNextHopState is pruned(1), the remaining time until the prune expires and the state reverts to forwarding(2). Otherwise, the remaining time until this entry is removed from the table. The time remaining may be copied from hwIpMcastRouteExpiryTime if the protocol in use for this entry does not specify next-hop timers. The value 0 indicates that the entry is not subject to aging.')
hwIpMcastRouteNextHopClosestMemberHops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopClosestMemberHops.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopClosestMemberHops.setDescription('The minimum number of hops between this router and any member of this IP multicast group reached via this next-hop on this outgoing interface. Any IP multicast datagrams for the group which have a TTL (IPv4) or Hop Count (IPv6) less than this number of hops will not be forwarded to this next-hop. This is an optimization applied by multicast routing protocols that explicitly track hop counts to downstream listeners. Multicast protocols that are not aware of hop counts to downstream listeners set this object to zero.')
hwIpMcastRouteNextHopProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 14), IANAipMRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopProtocol.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopProtocol.setDescription('The routing mechanism via which this next-hop was learned.')
hwIpMcastRouteNextHopOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopOctets.setDescription('The number of octets of multicast packets that have been forwarded using this route. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteNextHopTimeStamp.')
hwIpMcastRouteNextHopPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastRouteNextHopPkts.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastRouteNextHopPkts.setDescription('The number of packets which have been forwarded using this route. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of routes being removed and replaced, which can be detected by observing the value of hwIpMcastRouteNextHopTimeStamp.')
hwIpMcastBoundaryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7), )
if mibBuilder.loadTexts: hwIpMcastBoundaryTable.setReference('RFC 4007 section 5')
if mibBuilder.loadTexts: hwIpMcastBoundaryTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryTable.setDescription("The (conceptual) table listing the system's multicast scope zone boundaries.")
hwIpMcastBoundaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryIfIndex"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryAddressType"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryAddress"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryAddressPrefixLength"))
if mibBuilder.loadTexts: hwIpMcastBoundaryEntry.setReference('RFC 2365 section 5, RFC 4007 section 5')
if mibBuilder.loadTexts: hwIpMcastBoundaryEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryEntry.setDescription("An entry (conceptual row) describing one of this device's multicast scope zone boundaries.")
hwIpMcastBoundaryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIpMcastBoundaryIfIndex.setReference('RFC 2365 section 5, RFC 4007 section 5')
if mibBuilder.loadTexts: hwIpMcastBoundaryIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryIfIndex.setDescription('The IfIndex value for the interface to which this boundary applies. Packets with a destination address in the associated address/mask range will not be forwarded over this interface. For IPv4, zone boundaries cut through links. Therefore this is an external interface. This may be either a physical or virtual interface (tunnel, encapsulation, and so forth.) For IPv6, zone boundaries cut through nodes. Therefore this is a virtual interface within the node. This is not an external interface, either real or virtual. Packets crossing this interface neither arrive at nor leave the node, but only move between zones within the node.')
hwIpMcastBoundaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hwIpMcastBoundaryAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryAddressType.setDescription('A value indicating the address family of the address contained in hwIpMcastBoundaryAddress. Legal values correspond to the subset of address families for which multicast forwarding is supported.')
hwIpMcastBoundaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hwIpMcastBoundaryAddress.setReference('RFC 2365, RFC 3306 section 4, RFC 4291 section 2.7')
if mibBuilder.loadTexts: hwIpMcastBoundaryAddress.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryAddress.setDescription('The group address which, when combined with the corresponding value of hwIpMcastBoundaryAddressPrefixLength, identifies the group range for which the scoped boundary exists. Scoped IPv4 multicast address ranges must be prefixed by 239.0.0.0/4. Scoped IPv6 multicast address ranges are FF0x::/16, where x is a valid RFC 4291 multicast scope. An IPv6 address prefixed by FF1x::/16 is a non-permanently- assigned address. An IPv6 address prefixed by FF3x::/16 is a unicast-prefix-based multicast addresses. A zone boundary for FF0x::/16 implies an identical boundary for these other prefixes. No separate FF1x::/16 or FF3x::/16 entries exist in this table. This address object is only significant up to hwIpMcastBoundaryAddressPrefixLength bits. The remainder of the address bits are zero. This is especially important for this index field, which is part of the index of this entry. Any non-zero bits would signify an entirely different entry. For addresses of type ipv4z or ipv6z, the appended zone index is significant even though it lies beyond the prefix length. Zone index zero is not valid in this table.')
hwIpMcastBoundaryAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: hwIpMcastBoundaryAddressPrefixLength.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryAddressPrefixLength.setDescription('The length in bits of the mask which when, combined with the corresponding value of hwIpMcastBoundaryAddress, identifies the group range for which the scoped boundary exists.')
hwIpMcastBoundaryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastBoundaryTimeStamp.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryTimeStamp.setDescription('The value of sysUpTime at which the multicast boundary information represented by this entry was learned by the router. If this infomration was present at the most recent re- initialization of the local management subsystem, then this object contains a zero value.')
hwIpMcastBoundaryDroppedMcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastBoundaryDroppedMcastOctets.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryDroppedMcastOctets.setDescription('The number of octets of multicast packets that have been dropped as a result of this zone boundary configuration. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of boundary configuration being removed and replaced, which can be detected by observing the value of hwIpMcastBoundaryTimeStamp.')
hwIpMcastBoundaryDroppedMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastBoundaryDroppedMcastPkts.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryDroppedMcastPkts.setDescription('The number of multicast packets that have been dropped as a result of this zone boundary configuration. Discontinuities in this monotonically increasing value occur at re-initialization of the management system. Discontinuities can also occur as a result of boundary configuration being removed and replaced, which can be detected by observing the value of hwIpMcastBoundaryTimeStamp.')
hwIpMcastBoundaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpMcastBoundaryStatus.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryStatus.setDescription('The status of this row, by which rows in this table can be created and destroyed. This status object can be set to active(1) without setting any other columnar objects in this entry. All writeable objects in this entry can be modified when the status of this entry is active(1).')
hwIpMcastBoundaryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 7, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpMcastBoundaryStorageType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastBoundaryStorageType.setDescription("The storage type for this row. Rows having the value 'permanent' need not allow write-access to any columnar objects in the row.")
hwIpMcastChannelName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelName.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelName.setDescription('Channel name limited by CAC on the interface.')
hwIpMcastChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelGroup.setDescription('Group address of the entry.')
hwIpMcastChannelSource = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelSource.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelSource.setDescription('Source address of the entry.')
hwIpMcastChannelDownstreamEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamEntries.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamEntries.setDescription('The total number of entries on the interface.')
hwIpMcastChannelDownstreamBandWidth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamBandWidth.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamBandWidth.setDescription('The value of bandwidth on this interface.')
hwIpMcastChannelGlobalEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelGlobalEntries.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelGlobalEntries.setDescription('The total number of entries on the router.')
hwIpMcastChannelDownstreamLimitBandWidth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamLimitBandWidth.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamLimitBandWidth.setDescription('The configured limit of bandwidth on this interface.')
hwIpMcastChannelDownstreamLimitEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamLimitEntries.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastChannelDownstreamLimitEntries.setDescription('The configured limit of entries on the interface.')
hwIpMcastChannelGlobalLimitEntries = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelGlobalLimitEntries.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastChannelGlobalLimitEntries.setDescription('The configured limit of global entries.')
hwIpMcastChannelInterfaceIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 17), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelInterfaceIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelInterfaceIfIndex.setDescription('The interface on which this router most recently sent or received a CAC trap, or zero if this router has not sent or received a CAC trap.')
hwIpMcastChannelInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastChannelInterfaceName.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelInterfaceName.setDescription('The name of interface on which this router most recently sent or received a CAC trap.')
hwIpMcastCfgTotalLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastCfgTotalLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastCfgTotalLimit.setDescription('The configured limit of global entries.')
hwIpMcastCfgTotalThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastCfgTotalThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastCfgTotalThreshold.setDescription('The configured threshold of global entries.')
hwIpMcastTotalStat = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastTotalStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastTotalStat.setDescription('The total number of entries of this instance.')
hwIpMcastDownstreamTotalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22), )
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalTable.setDescription('The (conceptual) table used to list CAC limit and statistic information on an interface.')
hwIpMcastDownstreamTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamTotalIpVersion"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamTotalIfIndex"))
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntry.setDescription('An entry (conceptual row) containing the CAC limit and statistic information for a particular interface.')
hwIpMcastDownstreamTotalIpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 1), InetVersion())
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalIpVersion.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalIpVersion.setDescription('The IP version of this row.')
hwIpMcastDownstreamTotalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hwIpMcastDownstreamTotalEntriesLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntriesLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntriesLimit.setDescription('The configured limit of entries on the interface.')
hwIpMcastDownstreamTotalBandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalBandwidthLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalBandwidthLimit.setDescription('The configured limit of bandwidth on this interface.')
hwIpMcastDownstreamTotalEntriesStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntriesStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalEntriesStat.setDescription('The total number of entries on the interface.')
hwIpMcastDownstreamTotalBandwidthStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 22, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalBandwidthStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalBandwidthStat.setDescription('The value of bandwidth on this interface.')
hwIpMcastDownstreamChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23), )
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelTable.setDescription('The (conceptual) table used to list CAC limit and statistic information for a channel on an interface.')
hwIpMcastDownstreamChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamChannelIpVersion"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamChannelIfIndex"), (0, "HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamChannelName"))
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntry.setDescription('An entry (conceptual row) containing the multicast protocol information for a particular interface.')
hwIpMcastDownstreamChannelIpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 1), InetVersion())
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelIpVersion.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelIpVersion.setDescription('The IP version of this row.')
hwIpMcastDownstreamChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hwIpMcastDownstreamChannelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelName.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelName.setDescription('Channel name limited by CAC on the interface.')
hwIpMcastDownstreamChannelEntryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntryLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntryLimit.setDescription('The configured limit of entries of this channel on the interface.')
hwIpMcastDownstreamChannelBandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelBandwidthLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelBandwidthLimit.setDescription('The configured limit of bandwidth of this channel on this interface.')
hwIpMcastDownstreamChannelEntryStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntryStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelEntryStat.setDescription('The total number of entries of this channel on the interface.')
hwIpMcastDownstreamChannelBandwidthStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 23, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelBandwidthStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelBandwidthStat.setDescription('The value of bandwidth of this channel on the interface.')
hwIpMcastChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24), )
if mibBuilder.loadTexts: hwIpMcastChannelTable.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelTable.setDescription('The (conceptual) table used to list CAC limit and statistic information for all channels.')
hwIpMcastChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1), ).setIndexNames((0, "HUAWEI-IPMCAST-MIB", "hwIpMcastChannelChnName"))
if mibBuilder.loadTexts: hwIpMcastChannelEntry.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelEntry.setDescription('An entry (conceptual row) containing the CAC limit and statistic information for a particular channel.')
hwIpMcastChannelChnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hwIpMcastChannelChnName.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelChnName.setDescription('The channel name of this row.')
hwIpMcastChannelLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelLimit.setDescription('The configured limit of global entries for a channel.')
hwIpMcastChannelThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelThreshold.setDescription('The configured threshold of global entries for a channel.')
hwIpMcastChannelStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelStat.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelStat.setDescription('The total number of entries for this channel.')
hwIpMcastChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 24, 1, 5), HWChannelMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpMcastChannelMode.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastChannelMode.setDescription('The mode of this channel.')
hwIpMcastInstanceName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 25), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastInstanceName.setDescription('The instance name of the trap.')
hwBoardIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 26), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBoardIndex.setStatus('current')
if mibBuilder.loadTexts: hwBoardIndex.setDescription('The BoardIndex of the trap.')
hwIpMcastOverloadAddressType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 27), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastOverloadAddressType.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastOverloadAddressType.setDescription('The OverloadAddressType of the trap.')
hwIpMcastOverloadSource = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 28), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastOverloadSource.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastOverloadSource.setDescription('The OverloadSource of the trap.')
hwIpMcastOverloadGroup = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 29), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastOverloadGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastOverloadGroup.setDescription('The OverloadGroup of the trap.')
hwIpMcastSGCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 262144))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastSGCurrentCount.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGCurrentCount.setDescription('The current number of multicast routing (S, G) entries of all instances.')
hwIpMcastSGThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastSGThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGThreshold.setDescription('The threshold value of multicast routing (S, G) entries uppper limit(%) of all instances.')
hwIpMcastSGTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 262144))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpMcastSGTotalCount.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGTotalCount.setDescription('The total number of multicast routing (S, G) entries of all instances.')
hwIpMcastDownstreamChannelLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 1)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"))
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamChannelLimit.setDescription('A hwIpMcastDownstreamChannelLimit notification signifies that an entry belongs to specified channel has been limited. This notification is generated whenever an entry belongs to specified channel failed to add downstream cause channel downstream entry or bandwidth limit.')
hwIpMcastDownstreamTotalLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 2)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"))
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastDownstreamTotalLimit.setDescription('A hwIpMcastDownstreamTotalLimit notification signifies that an entry has been limited. This notification is generated whenever an entry failed to add downstream cause total downstream entry or bandwidth limit.')
hwIpMcastGlobalChannelLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 3)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"))
if mibBuilder.loadTexts: hwIpMcastGlobalChannelLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastGlobalChannelLimit.setDescription('A hwIpMcastGlobalChannelLimit notification signifies that an entry belongs to specified channel has been limited for global limit. This notification is generated whenever an entry belongs to specified channel failed to create as global entries limits.')
hwIpMcastGlobalTotalLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 4)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"))
if mibBuilder.loadTexts: hwIpMcastGlobalTotalLimit.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastGlobalTotalLimit.setDescription('A hwIpMcastGlobalTotalLimit notification signifies that an entry has been limited for global total entries limit. This notification is generated whenever an entry failed to create as global total entries limits.')
hwIpMcastOutChannelExceededLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 5)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceName"))
if mibBuilder.loadTexts: hwIpMcastOutChannelExceededLimit.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastOutChannelExceededLimit.setDescription('A hwIpMcastOutChannelExceededLimit notification signifies that existed entries exceeded channel downstream entry or bandwidth limit of pim routing-table. This notification is generated whenever existed entries belongs to specified channel exceeded downstream entry or bandwidth limit due to downstream limit configuration.')
hwIpMcastOutTotalExceededLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 6)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceName"))
if mibBuilder.loadTexts: hwIpMcastOutTotalExceededLimit.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastOutTotalExceededLimit.setDescription('A hwIpMcastOutTotalExceededLimit notification signifies that existed entries exceeded total downstream entry or bandwidth limit of pim routing-table. This notification is generated whenever existed entries exceeded total downstream entry or bandwidth limit due to downstream limit configuration.')
hwIpMcastGlobalChannelExceededLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 7)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalLimitEntries"))
if mibBuilder.loadTexts: hwIpMcastGlobalChannelExceededLimit.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastGlobalChannelExceededLimit.setDescription('A hwIpMcastGlobalChannelExceededLimit notification signifies that existed entries exceeded global entry limit of pim routing-table. This notification is generated whenever existed entries belongs to specified channel exceeded global entry or bandwidth limit due to global limit configuration.')
hwIpMcastGlobalTotalExceededLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 8)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalLimitEntries"))
if mibBuilder.loadTexts: hwIpMcastGlobalTotalExceededLimit.setStatus('obsolete')
if mibBuilder.loadTexts: hwIpMcastGlobalTotalExceededLimit.setDescription('A hwIpMcastGlobalTotalExceededLimit notification signifies that existed entries exceeded global total entry limit of pim routing-table. This notification is generated whenever existed entries exceeded global total entry or bandwidth limit due to global limit configuration.')
hwMFIBEntryOverloadSuspend = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 9)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"), ("HUAWEI-IPMCAST-MIB", "hwBoardIndex"))
if mibBuilder.loadTexts: hwMFIBEntryOverloadSuspend.setStatus('current')
if mibBuilder.loadTexts: hwMFIBEntryOverloadSuspend.setDescription('A hwMFIBEntryOverloadSuspend notification signifies that the MFIB module is overloaded. This notification is generated whenever the MFIB module is overloaded in the board.')
hwMFIBEntryOverloadSusResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 10)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"), ("HUAWEI-IPMCAST-MIB", "hwBoardIndex"))
if mibBuilder.loadTexts: hwMFIBEntryOverloadSusResume.setStatus('current')
if mibBuilder.loadTexts: hwMFIBEntryOverloadSusResume.setDescription('A hwMFIBEntryOverloadSusResume notification signifies that the board MFIB module changes from the overload suspension state to the normal state. This notification is generated whenever the MFIB module changes from the overload suspension state to the normal state.')
hwMFIBEntryOifOverloadSuspend = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 11)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"), ("HUAWEI-IPMCAST-MIB", "hwBoardIndex"))
if mibBuilder.loadTexts: hwMFIBEntryOifOverloadSuspend.setStatus('current')
if mibBuilder.loadTexts: hwMFIBEntryOifOverloadSuspend.setDescription('A hwMFIBEntryOifOverloadSuspend notification signifies that the downstream of the MFIB entry is overloaded. This notification is generated whenever the downstream of the MFIB entry is overloaded.')
hwMFIBEntryOifOverloadSusResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 12)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"), ("HUAWEI-IPMCAST-MIB", "hwBoardIndex"))
if mibBuilder.loadTexts: hwMFIBEntryOifOverloadSusResume.setStatus('current')
if mibBuilder.loadTexts: hwMFIBEntryOifOverloadSusResume.setDescription('A hwMFIBEntryOifOverloadSuspend notification signifies that the MFIB entry changes from the overload suspension state to the normal state. This notification is generated whenever the MFIB entry changes from the overload suspension state to the normal state.')
hwIpMcastSGThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 13)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastSGCurrentCount"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGThreshold"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGTotalCount"))
if mibBuilder.loadTexts: hwIpMcastSGThresholdExceed.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGThresholdExceed.setDescription('A hwIpMcastSGThresholdExceed notification signifies that multicast routing (S, G) entries count of all instances reached the upper threshold.')
hwIpMcastSGThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 14)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastSGCurrentCount"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGThreshold"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGTotalCount"))
if mibBuilder.loadTexts: hwIpMcastSGThresholdExceedClear.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGThresholdExceedClear.setDescription('A hwIpMcastSGThresholdExceedClear notification signifies that multicast routing (S, G) entries count of all instances fell below the lower threshold.')
hwIpMcastSGExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 15)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastSGTotalCount"))
if mibBuilder.loadTexts: hwIpMcastSGExceed.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGExceed.setDescription('A hwIpMcastSGExceed notification signifies that multicast routing (S, G) entries count of all instances reached the limit.')
hwIpMcastSGExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 2, 16)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastSGTotalCount"))
if mibBuilder.loadTexts: hwIpMcastSGExceedClear.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastSGExceedClear.setDescription('A hwIpMcastSGExceedClear notification signifies that multicast routing (S, G) entries count of all instances fell below the limit.')
hwIpMcastMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3))
hwIpMcastMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 1))
hwIpMcastMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2))
hwIpMcastMibComplianceHost = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 1, 1)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastMibBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibComplianceHost = hwIpMcastMibComplianceHost.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibComplianceHost.setDescription('The compliance statement for hosts supporting IPMCAST-MIB.')
hwIpMcastMibComplianceRouter = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 1, 2)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastMibRouteProtoGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastMibBasicGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastMibRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibComplianceRouter = hwIpMcastMibComplianceRouter.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibComplianceRouter.setDescription('The compliance statement for routers supporting IPMCAST-MIB.')
hwIpMcastMibComplianceBorderRouter = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 1, 3)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastMibRouteProtoGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastMibBasicGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastMibRouteGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastMibBoundaryIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibComplianceBorderRouter = hwIpMcastMibComplianceBorderRouter.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibComplianceBorderRouter.setDescription('The compliance statement for routers on scope boundaries supporting IPMCAST-MIB.')
hwIpMcastMibBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 1)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastEnable"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteEntryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibBasicGroup = hwIpMcastMibBasicGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibBasicGroup.setDescription('A collection of objects to support basic management of IP Multicast protocols.')
hwIpMcastMibRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 2)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceTtl"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceRateLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceInMcastOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceOutMcastOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceDiscontinuityTime"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteUpstreamNeighborType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteUpstreamNeighbor"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteInIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteExpiryTime"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRoutePkts"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteTtlDropPackets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteDifferentInIfPackets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopState"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibRouteGroup = hwIpMcastMibRouteGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibRouteGroup.setDescription('A collection of objects to support basic management of IP Multicast routing.')
hwIpMcastMibIfPktsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 3)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceInMcastPkts"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceOutMcastPkts"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInterfaceDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibIfPktsGroup = hwIpMcastMibIfPktsGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibIfPktsGroup.setDescription('A collection of objects to support management of packet counters for each interface entry.')
hwIpMcastMibPktsOutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 4)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibPktsOutGroup = hwIpMcastMibPktsOutGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibPktsOutGroup.setDescription('A collection of objects to support management of packet counters for each outgoing interface entry of a route.')
hwIpMcastMibHopCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 5)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopClosestMemberHops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibHopCountGroup = hwIpMcastMibHopCountGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibHopCountGroup.setDescription('A collection of objects to support management of the use of hop counts in IP Multicast routing.')
hwIpMcastMibRouteOctetsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 6)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteTtlDropOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteDifferentInIfOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibRouteOctetsGroup = hwIpMcastMibRouteOctetsGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibRouteOctetsGroup.setDescription('A collection of objects to support management of octet counters for each forwarding entry.')
hwIpMcastMibRouteProtoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 7)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteProtocol"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteRtProtocol"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteRtAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteRtAddress"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteRtPrefixLength"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteRtType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastRouteNextHopProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibRouteProtoGroup = hwIpMcastMibRouteProtoGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibRouteProtoGroup.setDescription('A collection of objects providing information on the relationship between multicast routing information and the IP Forwarding Table.')
hwIpMcastMibBoundaryIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 8)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryTimeStamp"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryDroppedMcastOctets"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryDroppedMcastPkts"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryStatus"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastBoundaryStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibBoundaryIfGroup = hwIpMcastMibBoundaryIfGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibBoundaryIfGroup.setDescription('A collection of objects to support management of multicast scope zone boundaries.')
hwIpMcastMibNotificationObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 9)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitBandWidth"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelDownstreamLimitEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelGlobalLimitEntries"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceIfIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastChannelInterfaceName"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastCfgTotalLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastCfgTotalThreshold"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastTotalStat"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastInstanceName"), ("HUAWEI-IPMCAST-MIB", "hwBoardIndex"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadAddressType"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadSource"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOverloadGroup"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGCurrentCount"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGThreshold"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGTotalCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibNotificationObjects = hwIpMcastMibNotificationObjects.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibNotificationObjects.setDescription('A collection of objects to support notification of MCAC network management events.')
hwIpMcastMibNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 149, 1, 3, 2, 10)).setObjects(("HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamChannelLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastDownstreamTotalLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastGlobalChannelLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastGlobalTotalLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOutChannelExceededLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastOutTotalExceededLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastGlobalChannelExceededLimit"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastGlobalTotalExceededLimit"), ("HUAWEI-IPMCAST-MIB", "hwMFIBEntryOverloadSuspend"), ("HUAWEI-IPMCAST-MIB", "hwMFIBEntryOverloadSusResume"), ("HUAWEI-IPMCAST-MIB", "hwMFIBEntryOifOverloadSuspend"), ("HUAWEI-IPMCAST-MIB", "hwMFIBEntryOifOverloadSusResume"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGThresholdExceed"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGThresholdExceedClear"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGExceed"), ("HUAWEI-IPMCAST-MIB", "hwIpMcastSGExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpMcastMibNotificationGroup = hwIpMcastMibNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwIpMcastMibNotificationGroup.setDescription('A collection of notifications for signaling MCAC network management events.')
mibBuilder.exportSymbols("HUAWEI-IPMCAST-MIB", hwIpMcastRouteEntryCount=hwIpMcastRouteEntryCount, hwIpMcastOverloadAddressType=hwIpMcastOverloadAddressType, hwIpMcastMibGroups=hwIpMcastMibGroups, hwIpMcastRouteTable=hwIpMcastRouteTable, hwIpMcastRouteNextHopState=hwIpMcastRouteNextHopState, hwIpMcastMibComplianceHost=hwIpMcastMibComplianceHost, hwIpMcastInterfaceEntry=hwIpMcastInterfaceEntry, hwIpMcastMibPktsOutGroup=hwIpMcastMibPktsOutGroup, hwIpMcastBoundaryStatus=hwIpMcastBoundaryStatus, hwMFIBEntryOifOverloadSuspend=hwMFIBEntryOifOverloadSuspend, hwMcast=hwMcast, hwIpMcastRouteExpiryTime=hwIpMcastRouteExpiryTime, hwIpMcastRouteNextHopEntry=hwIpMcastRouteNextHopEntry, hwIpMcastGlobalTotalLimit=hwIpMcastGlobalTotalLimit, hwIpMcastChannelGroup=hwIpMcastChannelGroup, hwIpMcastInterfaceInMcastOctets=hwIpMcastInterfaceInMcastOctets, hwIpMcastDownstreamChannelLimit=hwIpMcastDownstreamChannelLimit, hwIpMcastChannelLimit=hwIpMcastChannelLimit, hwIpMcastSGThresholdExceed=hwIpMcastSGThresholdExceed, hwIpMcastMibHopCountGroup=hwIpMcastMibHopCountGroup, hwIpMcastInterfaceRateLimit=hwIpMcastInterfaceRateLimit, hwIpMcastRouteUpstreamNeighbor=hwIpMcastRouteUpstreamNeighbor, hwIpMcastDownstreamTotalIfIndex=hwIpMcastDownstreamTotalIfIndex, hwIpMcastMibComplianceBorderRouter=hwIpMcastMibComplianceBorderRouter, hwIpMcastDownstreamChannelTable=hwIpMcastDownstreamChannelTable, hwBoardIndex=hwBoardIndex, hwIpMcastDownstreamTotalIpVersion=hwIpMcastDownstreamTotalIpVersion, hwIpMcastSGThresholdExceedClear=hwIpMcastSGThresholdExceedClear, hwIpMcastRouteNextHopAddress=hwIpMcastRouteNextHopAddress, hwIpMcastDownstreamChannelIpVersion=hwIpMcastDownstreamChannelIpVersion, hwIpMcastInstanceName=hwIpMcastInstanceName, hwIpMcastMib=hwIpMcastMib, hwIpMcastDownstreamTotalEntriesStat=hwIpMcastDownstreamTotalEntriesStat, hwIpMcastRouteNextHopOctets=hwIpMcastRouteNextHopOctets, hwIpMcastRouteRtAddress=hwIpMcastRouteRtAddress, hwIpMcastRouteSourcePrefixLength=hwIpMcastRouteSourcePrefixLength, hwIpMcastRouteNextHopAddressType=hwIpMcastRouteNextHopAddressType, hwIpMcastMibIfPktsGroup=hwIpMcastMibIfPktsGroup, hwIpMcastInterfaceDiscontinuityTime=hwIpMcastInterfaceDiscontinuityTime, hwIpMcastSGCurrentCount=hwIpMcastSGCurrentCount, hwIpMcastRouteRtType=hwIpMcastRouteRtType, hwIpMcastDownstreamChannelEntryLimit=hwIpMcastDownstreamChannelEntryLimit, hwIpMcastChannelGlobalLimitEntries=hwIpMcastChannelGlobalLimitEntries, hwMFIBEntryOverloadSusResume=hwMFIBEntryOverloadSusResume, hwIpMcastBoundaryEntry=hwIpMcastBoundaryEntry, hwIpMcastRouteUpstreamNeighborType=hwIpMcastRouteUpstreamNeighborType, hwIpMcastMibBoundaryIfGroup=hwIpMcastMibBoundaryIfGroup, hwIpMcastRouteGroupAddressType=hwIpMcastRouteGroupAddressType, hwIpMcastChannelInterfaceIfIndex=hwIpMcastChannelInterfaceIfIndex, hwIpMcastRouteTimeStamp=hwIpMcastRouteTimeStamp, hwIpMcastChannelInterfaceName=hwIpMcastChannelInterfaceName, hwIpMcastRouteTtlDropOctets=hwIpMcastRouteTtlDropOctets, hwIpMcastBoundaryTable=hwIpMcastBoundaryTable, hwIpMcastRouteRtProtocol=hwIpMcastRouteRtProtocol, hwIpMcastBoundaryAddressPrefixLength=hwIpMcastBoundaryAddressPrefixLength, HWChannelMode=HWChannelMode, hwIpMcastChannelSource=hwIpMcastChannelSource, hwIpMcastRouteNextHopPkts=hwIpMcastRouteNextHopPkts, hwIpMcastMibRouteGroup=hwIpMcastMibRouteGroup, hwIpMcastCfgTotalLimit=hwIpMcastCfgTotalLimit, hwIpMcastMibNotificationObjects=hwIpMcastMibNotificationObjects, hwIpMcastMibObjects=hwIpMcastMibObjects, hwIpMcastRouteNextHopSource=hwIpMcastRouteNextHopSource, hwIpMcastChannelChnName=hwIpMcastChannelChnName, hwIpMcastRouteNextHopClosestMemberHops=hwIpMcastRouteNextHopClosestMemberHops, hwIpMcastBoundaryAddressType=hwIpMcastBoundaryAddressType, hwIpMcastCfgTotalThreshold=hwIpMcastCfgTotalThreshold, hwIpMcastChannelTable=hwIpMcastChannelTable, hwIpMcastRouteTtlDropPackets=hwIpMcastRouteTtlDropPackets, hwIpMcastMibRouteProtoGroup=hwIpMcastMibRouteProtoGroup, hwIpMcastRouteSource=hwIpMcastRouteSource, hwIpMcastRouteNextHopTable=hwIpMcastRouteNextHopTable, hwIpMcastRouteEntry=hwIpMcastRouteEntry, hwIpMcastRouteNextHopTimeStamp=hwIpMcastRouteNextHopTimeStamp, hwIpMcastBoundaryDroppedMcastPkts=hwIpMcastBoundaryDroppedMcastPkts, hwIpMcastChannelEntry=hwIpMcastChannelEntry, hwIpMcastRouteOctets=hwIpMcastRouteOctets, hwIpMcastInterfaceOutMcastOctets=hwIpMcastInterfaceOutMcastOctets, hwIpMcastRouteProtocol=hwIpMcastRouteProtocol, hwIpMcastChannelName=hwIpMcastChannelName, hwIpMcastRouteNextHopGroup=hwIpMcastRouteNextHopGroup, hwIpMcastMibBasicGroup=hwIpMcastMibBasicGroup, hwIpMcastDownstreamTotalEntry=hwIpMcastDownstreamTotalEntry, hwIpMcastBoundaryStorageType=hwIpMcastBoundaryStorageType, hwMFIBEntryOifOverloadSusResume=hwMFIBEntryOifOverloadSusResume, hwIpMcastBoundaryAddress=hwIpMcastBoundaryAddress, hwIpMcastSGExceed=hwIpMcastSGExceed, hwIpMcastGlobalChannelExceededLimit=hwIpMcastGlobalChannelExceededLimit, hwIpMcastChannelMode=hwIpMcastChannelMode, hwMFIBEntryOverloadSuspend=hwMFIBEntryOverloadSuspend, hwIpMcastRoutePkts=hwIpMcastRoutePkts, hwIpMcastDownstreamTotalTable=hwIpMcastDownstreamTotalTable, hwIpMcastRouteNextHopSourceAddressType=hwIpMcastRouteNextHopSourceAddressType, hwIpMcastRouteGroupPrefixLength=hwIpMcastRouteGroupPrefixLength, hwIpMcastSGTotalCount=hwIpMcastSGTotalCount, hwIpMcastDownstreamChannelIfIndex=hwIpMcastDownstreamChannelIfIndex, hwIpMcastRouteNextHopSourcePrefixLength=hwIpMcastRouteNextHopSourcePrefixLength, hwIpMcastSGExceedClear=hwIpMcastSGExceedClear, hwIpMcastRouteNextHopIfIndex=hwIpMcastRouteNextHopIfIndex, hwIpMcastOverloadGroup=hwIpMcastOverloadGroup, hwIpMcastRouteRtPrefixLength=hwIpMcastRouteRtPrefixLength, hwIpMcastMibConformance=hwIpMcastMibConformance, hwIpMcastRouteDifferentInIfOctets=hwIpMcastRouteDifferentInIfOctets, hwIpMcastRouteNextHopExpiryTime=hwIpMcastRouteNextHopExpiryTime, hwIpMcastInterfaceInMcastPkts=hwIpMcastInterfaceInMcastPkts, hwIpMcastBoundaryTimeStamp=hwIpMcastBoundaryTimeStamp, hwIpMcastBoundaryIfIndex=hwIpMcastBoundaryIfIndex, hwIpMcast=hwIpMcast, hwIpMcastSGThreshold=hwIpMcastSGThreshold, hwIpMcastDownstreamTotalLimit=hwIpMcastDownstreamTotalLimit, hwIpMcastGlobalTotalExceededLimit=hwIpMcastGlobalTotalExceededLimit, hwIpMcastInterfaceIfIndex=hwIpMcastInterfaceIfIndex, hwIpMcastChannelStat=hwIpMcastChannelStat, hwIpMcastOutChannelExceededLimit=hwIpMcastOutChannelExceededLimit, hwIpMcastMibNotificationGroup=hwIpMcastMibNotificationGroup, hwIpMcastMibCompliances=hwIpMcastMibCompliances, hwIpMcastChannelDownstreamLimitEntries=hwIpMcastChannelDownstreamLimitEntries, hwIpMcastDownstreamTotalEntriesLimit=hwIpMcastDownstreamTotalEntriesLimit, hwIpMcastChannelDownstreamBandWidth=hwIpMcastChannelDownstreamBandWidth, hwIpMcastDownstreamChannelName=hwIpMcastDownstreamChannelName, hwIpMcastDownstreamTotalBandwidthLimit=hwIpMcastDownstreamTotalBandwidthLimit, hwIpMcastRouteRtAddressType=hwIpMcastRouteRtAddressType, hwIpMcastDownstreamChannelBandwidthStat=hwIpMcastDownstreamChannelBandwidthStat, hwIpMcastChannelGlobalEntries=hwIpMcastChannelGlobalEntries, hwIpMcastInterfaceIpVersion=hwIpMcastInterfaceIpVersion, hwIpMcastRouteSourceAddressType=hwIpMcastRouteSourceAddressType, hwIpMcastDownstreamChannelEntryStat=hwIpMcastDownstreamChannelEntryStat, hwIpMcastInterfaceTtl=hwIpMcastInterfaceTtl, hwIpMcastMibRouteOctetsGroup=hwIpMcastMibRouteOctetsGroup, hwIpMcastGlobalChannelLimit=hwIpMcastGlobalChannelLimit, hwIpMcastBoundaryDroppedMcastOctets=hwIpMcastBoundaryDroppedMcastOctets, hwIpMcastChannelDownstreamEntries=hwIpMcastChannelDownstreamEntries, hwIpMcastDownstreamChannelBandwidthLimit=hwIpMcastDownstreamChannelBandwidthLimit, hwIpMcastRouteInIfIndex=hwIpMcastRouteInIfIndex, hwIpMcastRouteDifferentInIfPackets=hwIpMcastRouteDifferentInIfPackets, hwIpMcastTotalStat=hwIpMcastTotalStat, hwIpMcastDownstreamChannelEntry=hwIpMcastDownstreamChannelEntry, hwIpMcastChannelDownstreamLimitBandWidth=hwIpMcastChannelDownstreamLimitBandWidth, PYSNMP_MODULE_ID=hwIpMcastMib, hwIpMcastOutTotalExceededLimit=hwIpMcastOutTotalExceededLimit, hwIpMcastInterfaceTable=hwIpMcastInterfaceTable, hwIpMcastChannelThreshold=hwIpMcastChannelThreshold, hwIpMcastRouteNextHopGroupAddressType=hwIpMcastRouteNextHopGroupAddressType, hwIpMcastInterfaceOutMcastPkts=hwIpMcastInterfaceOutMcastPkts, hwIpMcastNotifications=hwIpMcastNotifications, hwIpMcastDownstreamTotalBandwidthStat=hwIpMcastDownstreamTotalBandwidthStat, hwIpMcastRouteGroup=hwIpMcastRouteGroup, hwIpMcastRouteNextHopProtocol=hwIpMcastRouteNextHopProtocol, hwIpMcastEnable=hwIpMcastEnable, hwIpMcastMibComplianceRouter=hwIpMcastMibComplianceRouter, hwIpMcastRouteNextHopGroupPrefixLength=hwIpMcastRouteNextHopGroupPrefixLength, hwIpMcastOverloadSource=hwIpMcastOverloadSource)
