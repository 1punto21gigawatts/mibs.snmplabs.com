#
# PySNMP MIB module CISCO-CDSTV-AUTHMGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CDSTV-AUTHMGR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:52:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLStringOrEmpty, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLStringOrEmpty")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Counter32, ModuleIdentity, Gauge32, iso, Bits, ObjectIdentity, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "ModuleIdentity", "Gauge32", "iso", "Bits", "ObjectIdentity", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "MibIdentifier", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoCdstvAuthmgrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 751))
ciscoCdstvAuthmgrMIB.setRevisions(('2010-07-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoCdstvAuthmgrMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoCdstvAuthmgrMIB.setLastUpdated('201007200000Z')
if mibBuilder.loadTexts: ciscoCdstvAuthmgrMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoCdstvAuthmgrMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cds@cisco.com')
if mibBuilder.loadTexts: ciscoCdstvAuthmgrMIB.setDescription("This MIB module defines objects that describe the configuration of the authentication manager for the Cisco Content Delivery System for TV (CDS-TV). CDS-TV is a suite of products and software applications providing ingest, storage, caching, streaming, playout and on-demand delivery of video to television or set-top-box clients. Authentication Manager is an optional feature of CDS-TV and is only for specific RTSP environments (EventIS). The Authentication Manager communicates with the back-office to validate a request received from a set-top box before setting up a session. Abbreviations: CCP Cache Control Protocol CDS Content Delivery System CORBA Common Object Request Broker Architecture ISA Interactive Services Architecture ISV Integrated Streamer-Vault FSI File Service Interface FTP File Transfer Protocol MPEG Motion Picture Experts Group MSA Managed Services Architecture QAM Quadrature Amplitude Modulation RTSP Real-Time Streaming Protocol SOAP Simple Object Access Protocol STB Set-Top Box VOD Video On-Demand Common terms: Catcher: Device responsible for receiving content (typically via satellite dishes and antennae) from content providers or from a Headend-In-The-Sky. Content Ingest: Acquisition of content from a source such as a catcher or an FTP server for storing it locally and making it available to streamers as needed. TRAXIS: A part of the proprietary EventIS VOD back-office solution for transaction, session and resource management that communicates with VOD client applications, edge QAM devices, video servers and conditional access systems. Device Roles: Vault: Content delivery application responsible for ingesting and storing video content and making it available to streamers and/or caching nodes. Caching Nodes: Content delivery application responsible for caching content from vault (using CCP) and then streaming content out to streamers over HTTP or CCP. Streamer: Content delivery application responsible for streaming video out to STB's. ISV: Content delivery application capable of acting as both a vault and as a streamer in a single device.")
ciscoCdstvAuthMgrMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 751, 0))
ciscoCdstvAuthMgrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 751, 1))
ciscoCdstvAuthMgrMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 751, 2))
ciscoCdstvAuthMgrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 751, 2, 1))
cdstvAuthMgrAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrAddressType.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrAddressType.setDescription('This object specifies the type of Authentication Manager IP address, specified by cdstvAuthMgrAddress.')
cdstvAuthMgrAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrAddress.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrAddress.setDescription('This object specifies the Authentication Manager IP address, typically the same as that of the master streamer, since the Authentication Manager resides on the master streamer. The type of the address is specified by cdstvAuthMgrAddressType.')
cdstvAuthMgrPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 3), InetPortNumber().clone(7792)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrPort.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrPort.setDescription('This object specifies the Authentication Manager port number.')
cdstvAuthMgrEventIsAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrEventIsAddressType.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrEventIsAddressType.setDescription('This object specifies the type of the IP address (specified by cdstvAuthMgrEventIsAddressType) of the EventIS server.')
cdstvAuthMgrEventIsAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrEventIsAddress.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrEventIsAddress.setDescription('This object specifies the address or domain name of the EventIS server. The type of the address is specified by cdstvAuthMgrEventIsAddressType.')
cdstvAuthMgrEventIsPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 6), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrEventIsPort.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrEventIsPort.setDescription('This object specifies the port number on the EventIS server used to receive authentication requests.')
cdstvAuthMgrTraxisSoapInterface = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 7), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrTraxisSoapInterface.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrTraxisSoapInterface.setDescription('This object specifies the URL (including the address, port, and logical partition) on the Streamer used to receive messages about session tear-downs from TRAXIS.')
cdstvAuthMgrServerThreadPool = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 8), Unsigned32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrServerThreadPool.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrServerThreadPool.setDescription('This object specifies the number of threads in the Authentication Manager server pool that are used to process authentication requests for the duration of the connection.')
cdstvAuthMgrDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 751, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("low", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvAuthMgrDebugLevel.setStatus('current')
if mibBuilder.loadTexts: cdstvAuthMgrDebugLevel.setDescription('This object specifies the amount of debugging information logged. off(1) - Logging is disabled. low(2) - Errors and minimal information are logged. high(3) - Errors, warnings, and full information is logged.')
ciscoCdstvAuthMgrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 751, 2, 2))
ciscoCdstvAuthMgrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 751, 2, 1, 1)).setObjects(("CISCO-CDSTV-AUTHMGR-MIB", "ciscoCdstvAuthMgrMIBMainObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvAuthMgrMIBCompliance = ciscoCdstvAuthMgrMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoCdstvAuthMgrMIBCompliance.setDescription('The compliance statement for the entities which implement the Cisco CDS TV Authentication Manager MIB.')
ciscoCdstvAuthMgrMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 751, 2, 2, 1)).setObjects(("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrAddress"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrPort"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrEventIsPort"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrTraxisSoapInterface"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrServerThreadPool"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrDebugLevel"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrAddressType"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrEventIsAddressType"), ("CISCO-CDSTV-AUTHMGR-MIB", "cdstvAuthMgrEventIsAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvAuthMgrMIBMainObjectGroup = ciscoCdstvAuthMgrMIBMainObjectGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoCdstvAuthMgrMIBMainObjectGroup.setDescription('A collection of objects that provide status of authentication manager configuration.')
mibBuilder.exportSymbols("CISCO-CDSTV-AUTHMGR-MIB", cdstvAuthMgrEventIsPort=cdstvAuthMgrEventIsPort, cdstvAuthMgrAddressType=cdstvAuthMgrAddressType, ciscoCdstvAuthMgrMIBGroups=ciscoCdstvAuthMgrMIBGroups, ciscoCdstvAuthmgrMIB=ciscoCdstvAuthmgrMIB, ciscoCdstvAuthMgrMIBCompliances=ciscoCdstvAuthMgrMIBCompliances, ciscoCdstvAuthMgrMIBObjects=ciscoCdstvAuthMgrMIBObjects, cdstvAuthMgrAddress=cdstvAuthMgrAddress, cdstvAuthMgrEventIsAddressType=cdstvAuthMgrEventIsAddressType, cdstvAuthMgrEventIsAddress=cdstvAuthMgrEventIsAddress, cdstvAuthMgrTraxisSoapInterface=cdstvAuthMgrTraxisSoapInterface, ciscoCdstvAuthMgrMIBMainObjectGroup=ciscoCdstvAuthMgrMIBMainObjectGroup, ciscoCdstvAuthMgrMIBNotifs=ciscoCdstvAuthMgrMIBNotifs, ciscoCdstvAuthMgrMIBConform=ciscoCdstvAuthMgrMIBConform, PYSNMP_MODULE_ID=ciscoCdstvAuthmgrMIB, cdstvAuthMgrServerThreadPool=cdstvAuthMgrServerThreadPool, ciscoCdstvAuthMgrMIBCompliance=ciscoCdstvAuthMgrMIBCompliance, cdstvAuthMgrDebugLevel=cdstvAuthMgrDebugLevel, cdstvAuthMgrPort=cdstvAuthMgrPort)
