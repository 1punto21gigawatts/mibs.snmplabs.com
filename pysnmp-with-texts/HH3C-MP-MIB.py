#
# PySNMP MIB module HH3C-MP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:28:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hh3cRhw, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cRhw")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, Bits, TimeTicks, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Gauge32, iso, NotificationType, ObjectIdentity, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Gauge32", "iso", "NotificationType", "ObjectIdentity", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cMultilinkPPP = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 33))
if mibBuilder.loadTexts: hh3cMultilinkPPP.setLastUpdated('200405180000Z')
if mibBuilder.loadTexts: hh3cMultilinkPPP.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cMultilinkPPP.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cMultilinkPPP.setDescription('The HH3C-MP-MIB provides read access to MP(Multilink PPP) link status information. The information available through this MIB includes: the father channel, the bundled son channel, the slot on which MP bundled, the number of son channels, the bundle name, the statistic of lost fragments, reordered packets, unassigned packets, interleaved packets, and the received/sent sequence, etc. ')
hh3cMpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1))
hh3cMpMultilinkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1), )
if mibBuilder.loadTexts: hh3cMpMultilinkTable.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMultilinkTable.setDescription('This table describes the information of MP link. The index of this table is the interface index of MP group or VT(Virtual Template).')
hh3cMpMultilinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cMpMultilinkEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMultilinkEntry.setDescription('Each entry in this table describes the information of MP link. The available information includes: the father channel, the slot on which MP bundled, the number of bundled son channels, the statistics of lost fragments, reordered packets, unassigned packets, interleaved packets, and received/sent sequence. ')
hh3cMpMultilinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMultilinkDescr.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMultilinkDescr.setDescription('The interface name of the father interface on which MP bundled. It is the name of a Virtual Temblate or a MP group.')
hh3cMpBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundleName.setStatus('current')
if mibBuilder.loadTexts: hh3cMpBundleName.setDescription('The bundle name of the multilink. when authentication is configured, the bundle name is the authenticated user name; when authentication not configured, the bundle name is multilink. ')
hh3cMpBundledSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundledSlot.setStatus('current')
if mibBuilder.loadTexts: hh3cMpBundledSlot.setDescription('The slot on which MP bundled. ')
hh3cMpBundledMemberCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundledMemberCnt.setStatus('current')
if mibBuilder.loadTexts: hh3cMpBundledMemberCnt.setDescription('The number of the bundled son channel of the MP link. ')
hh3cMpLostFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpLostFragments.setStatus('current')
if mibBuilder.loadTexts: hh3cMpLostFragments.setDescription('The number of fragments of the MP link discarded because bad fragments received, or assembling packet failed, etc.')
hh3cMpReorderedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpReorderedPkts.setStatus('current')
if mibBuilder.loadTexts: hh3cMpReorderedPkts.setDescription('The number of received packets of the MP link reordered. ')
hh3cMpUnassignedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpUnassignedPkts.setStatus('current')
if mibBuilder.loadTexts: hh3cMpUnassignedPkts.setDescription('The number of received packets of the MP link waiting for reordering. ')
hh3cMpInterleavedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpInterleavedPkts.setStatus('current')
if mibBuilder.loadTexts: hh3cMpInterleavedPkts.setDescription('The number of received packets of the MP link interleaved by the packets queued in RTPQ(Real-time Transport Protocol Queue) or LLQ(Low Latency Queue). ')
hh3cMpRcvdSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpRcvdSequence.setStatus('current')
if mibBuilder.loadTexts: hh3cMpRcvdSequence.setDescription('The current sequence number of the MP link for receiving. ')
hh3cMpSentSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpSentSequence.setStatus('current')
if mibBuilder.loadTexts: hh3cMpSentSequence.setDescription('The current sequence number of the MP link for sending. ')
hh3cMpMemberlinkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2), )
if mibBuilder.loadTexts: hh3cMpMemberlinkTable.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkTable.setDescription('This table describes the information of son channels of the MP link. The index of this table is the interface index of MP group or VT(Virtual Template). ')
hh3cMpMemberlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MP-MIB", "hh3cMpMemberlinkSeqNumber"))
if mibBuilder.loadTexts: hh3cMpMemberlinkEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkEntry.setDescription('Each entry in this table describes the information of the bundled son channels of MP link. The available information includes: the interface index of the son channel, the interface name of the son channel. ')
hh3cMpMemberlinkSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkSeqNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkSeqNumber.setDescription('The bundled sequence number of the son channels of the MP link. This object is one of the index of the table. ')
hh3cMpMemberlinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkIfIndex.setDescription('The interface index of the son channels of the MP link. ')
hh3cMpMemberlinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkDescr.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkDescr.setDescription('The interface name of the son channels of the MP link. ')
hh3cMpMemberlinkMpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkMpStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMemberlinkMpStatus.setDescription('The MP status of the son channels of the MP link. ')
hh3cMpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 2))
hh3cMpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3))
hh3cMpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 1))
hh3cMpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 1, 1)).setObjects(("HH3C-MP-MIB", "hh3cMpMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpCompliance = hh3cMpCompliance.setStatus('current')
if mibBuilder.loadTexts: hh3cMpCompliance.setDescription('The compliance statement for entities which implement the H3C Multilink PPP MIB.')
hh3cMpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2))
hh3cMpMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2, 1)).setObjects(("HH3C-MP-MIB", "hh3cMpBundledMemberCnt"), ("HH3C-MP-MIB", "hh3cMpMemberlinkSeqNumber"), ("HH3C-MP-MIB", "hh3cMpMemberlinkIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpMandatoryGroup = hh3cMpMandatoryGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cMpMandatoryGroup.setDescription('A collection of objects providing mandatory MP information.')
hh3cMpInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2, 2)).setObjects(("HH3C-MP-MIB", "hh3cMpMultilinkDescr"), ("HH3C-MP-MIB", "hh3cMpBundleName"), ("HH3C-MP-MIB", "hh3cMpBundledSlot"), ("HH3C-MP-MIB", "hh3cMpBundledMemberCnt"), ("HH3C-MP-MIB", "hh3cMpLostFragments"), ("HH3C-MP-MIB", "hh3cMpReorderedPkts"), ("HH3C-MP-MIB", "hh3cMpUnassignedPkts"), ("HH3C-MP-MIB", "hh3cMpInterleavedPkts"), ("HH3C-MP-MIB", "hh3cMpRcvdSequence"), ("HH3C-MP-MIB", "hh3cMpSentSequence"), ("HH3C-MP-MIB", "hh3cMpMemberlinkDescr"), ("HH3C-MP-MIB", "hh3cMpMemberlinkMpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpInfoGroup = hh3cMpInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cMpInfoGroup.setDescription('All running information of MP feature.')
mibBuilder.exportSymbols("HH3C-MP-MIB", hh3cMpBundledSlot=hh3cMpBundledSlot, hh3cMpMandatoryGroup=hh3cMpMandatoryGroup, hh3cMpObjects=hh3cMpObjects, hh3cMpMemberlinkIfIndex=hh3cMpMemberlinkIfIndex, hh3cMpMemberlinkSeqNumber=hh3cMpMemberlinkSeqNumber, hh3cMpCompliance=hh3cMpCompliance, PYSNMP_MODULE_ID=hh3cMultilinkPPP, hh3cMpInterleavedPkts=hh3cMpInterleavedPkts, hh3cMpReorderedPkts=hh3cMpReorderedPkts, hh3cMpInfoGroup=hh3cMpInfoGroup, hh3cMpUnassignedPkts=hh3cMpUnassignedPkts, hh3cMpMemberlinkEntry=hh3cMpMemberlinkEntry, hh3cMpMemberlinkDescr=hh3cMpMemberlinkDescr, hh3cMpRcvdSequence=hh3cMpRcvdSequence, hh3cMultilinkPPP=hh3cMultilinkPPP, hh3cMpLostFragments=hh3cMpLostFragments, hh3cMpNotifications=hh3cMpNotifications, hh3cMpGroups=hh3cMpGroups, hh3cMpConformance=hh3cMpConformance, hh3cMpMemberlinkMpStatus=hh3cMpMemberlinkMpStatus, hh3cMpMultilinkEntry=hh3cMpMultilinkEntry, hh3cMpCompliances=hh3cMpCompliances, hh3cMpBundledMemberCnt=hh3cMpBundledMemberCnt, hh3cMpMultilinkDescr=hh3cMpMultilinkDescr, hh3cMpMemberlinkTable=hh3cMpMemberlinkTable, hh3cMpSentSequence=hh3cMpSentSequence, hh3cMpMultilinkTable=hh3cMpMultilinkTable, hh3cMpBundleName=hh3cMpBundleName)
