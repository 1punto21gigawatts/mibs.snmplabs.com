#
# PySNMP MIB module ChrComIfifTable-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComIfifTable-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
AdminStatus, OperStatus = mibBuilder.importSymbols("ChrTyp-MIB", "AdminStatus", "OperStatus")
chrComIf, = mibBuilder.importSymbols("Chromatis-MIB", "chrComIf")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, Unsigned32, Counter64, Gauge32, ObjectIdentity, Integer32, iso, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Unsigned32", "Counter64", "Gauge32", "ObjectIdentity", "Integer32", "iso", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
chrComIfifTableTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10), )
if mibBuilder.loadTexts: chrComIfifTableTable.setStatus('current')
if mibBuilder.loadTexts: chrComIfifTableTable.setDescription('Chromatis Interface Table')
chrComIfifTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1), ).setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"))
if mibBuilder.loadTexts: chrComIfifTableEntry.setStatus('current')
if mibBuilder.loadTexts: chrComIfifTableEntry.setDescription('')
chrComIfifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfifIndex.setStatus('current')
if mibBuilder.loadTexts: chrComIfifIndex.setDescription('1.Index referring to the equipment table (Shelf, Slot) (9 bits) 2. Index containing MPHY port number in card. For OC3 trib 0-3 For TC&ATM If\x19s we also have: SAR if. = SAR_FIFO_IF (FE) APS FIFO = ASP_FIFO_IF (FF) Note that these new interfaces have no low layers bellow, i.e. there are no SONET layers on these virtual supports (6 bits). 3. Index containing sub-port number, e.g., 0-3 OC12\x19s in OC48 frame (6 bits). 4. (2^6-1)-Null (all bits are 1) reserved for NULL interface, NullVCPeerID, etc. 1-OTS\x13SRC Optical Transmission Section Source (OPA,ADOM,OMDM) 2-OTS-SNK Optical Transmission Section Sink. (OPA,ADOM,OMDM) 3-OMS-SRC Optical Multiplex Section Source (ADOM, OMDM) 4-OMS-SNK Optical Multiplex Section Sink (ADOM, OMDM) 5-OCH Optical Channel (OCM/Trib) 6-SNT-S Sonet Section (OCM/Trib) 7-SNT-L Sonet Line (OCM/Trib) 8-SNT-P Sonet Path (OCM/Trib) 9-TC&ATM C and ATM general cell layer (OCM/Trib) 10-Ethernet 11-IP 12-Synchronization (6 bits) 5. Virtual interface represent a whole protection peer, out of which some members are working and the rest are protecting. SAR and Egress FIFO are real interfaces (5 bits). ')
chrComIfifName = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComIfifName.setStatus('current')
if mibBuilder.loadTexts: chrComIfifName.setDescription('String of text defining the name of the port given by the user.')
chrComIfifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 3), AdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComIfifAdminStatus.setStatus('current')
if mibBuilder.loadTexts: chrComIfifAdminStatus.setDescription('The desired state of the interface. The testing(3) state indicates that no operational packets can be passed. When a managed system initializes, all interfaces start with ifAdminStatus in the down(2)state. As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).')
chrComIfifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 4), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfifOperStatus.setStatus('current')
if mibBuilder.loadTexts: chrComIfifOperStatus.setDescription('The down state of ifOperStatus has two meanings, depending on the value of ifAdminStatus. (1) if ifAdminStatus is not down and ifOperStatus is down then a fault condition is presumed to exist on the interface. 2) if ifAdminStatus is down, then ifOperStatus will normally also be down (or notPresent) i.e.,there is not (necessarily) a fault condition on the interface. ')
chrComIfvirtualIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfvirtualIfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComIfvirtualIfIndex.setDescription('This attribute is an outcome of the card/Path Protection attribute of the equipment table. The peer ID is a virtual card ID (which is the higher of the two peers). Note that we do not reflect peering of VSP (real path protection) in this field! ')
chrComIfreal1IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfreal1IfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComIfreal1IfIndex.setDescription('This field represents the first real IfIndex , if IfIndex is virtual. ')
chrComIfreal2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComIfreal2IfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComIfreal2IfIndex.setDescription('This field represents the second real IfIndex , if IfIndex is virtual.')
mibBuilder.exportSymbols("ChrComIfifTable-MIB", chrComIfreal2IfIndex=chrComIfreal2IfIndex, chrComIfreal1IfIndex=chrComIfreal1IfIndex, chrComIfifAdminStatus=chrComIfifAdminStatus, chrComIfifTableTable=chrComIfifTableTable, chrComIfifName=chrComIfifName, chrComIfifOperStatus=chrComIfifOperStatus, chrComIfvirtualIfIndex=chrComIfvirtualIfIndex, chrComIfifIndex=chrComIfifIndex, chrComIfifTableEntry=chrComIfifTableEntry)
