#
# PySNMP MIB module ZYXEL-DHCPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-DHCPV6-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Unsigned32, MibIdentifier, Counter32, IpAddress, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Bits, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Bits", "Gauge32", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelDhcpv6 = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21))
if mibBuilder.loadTexts: zyxelDhcpv6.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelDhcpv6.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelDhcpv6.setContactInfo('')
if mibBuilder.loadTexts: zyxelDhcpv6.setDescription('The subtree for DHCPv6')
zyxelDhcpv6Setup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1))
zyxelDhcpv6Status = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 2))
zyDhcpv6MaxNumberOfRelays = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpv6MaxNumberOfRelays.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6MaxNumberOfRelays.setDescription('The maximum numbers of DHCPv6 relay entry that can be created.')
zyxelDhcpv6RelayTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2), )
if mibBuilder.loadTexts: zyxelDhcpv6RelayTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6RelayTable.setDescription('The table contains DHCPv6 relay configuration.')
zyxelDhcpv6RelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1), ).setIndexNames((0, "ZYXEL-DHCPV6-MIB", "zyDhcpv6RelayVid"))
if mibBuilder.loadTexts: zyxelDhcpv6RelayEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6RelayEntry.setDescription('An entry contains DHCPv6 relay configuration. ')
zyDhcpv6RelayVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyDhcpv6RelayVid.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayVid.setDescription('Enter the VLAN ID to which these DHCPv6 relay settings apply.')
zyDhcpv6RelayHelperIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6RelayHelperIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayHelperIpAddress.setDescription('Enter the IPv4/IPv6 address of a DHCPv6 server.')
zyDhcpv6RelayHelperIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6RelayHelperIpAddressType.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayHelperIpAddressType.setDescription('Enter the type of DHCPv6 relay helper address.')
zyDhcpv6RelayOptionIfIdState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6RelayOptionIfIdState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayOptionIfIdState.setDescription('Enable/Disable the switch to add interface ID option in DHCPv6 requests from the clients in the specified VLAN before the switch forwards them to a DHCP server.')
zyDhcpv6RelayOptionRemoteIdData = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6RelayOptionRemoteIdData.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayOptionRemoteIdData.setDescription('Set the switch to add the remote-ID option in the DHCPv6 requests from the clients in the specified VLAN before the switch forwards them to a DHCP server. This also specifies a string (up to 64 printable ASCII characters) to be carried in the remote-ID option. If this field is empty means this option is disabled.')
zyDhcpv6RelayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyDhcpv6RelayRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6RelayRowStatus.setDescription('This object allows DHCPv6 relay entries to be created and deleted.')
zyxelDhcpv6ClientTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3), )
if mibBuilder.loadTexts: zyxelDhcpv6ClientTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6ClientTable.setDescription('The table contains DHCPv6 client configuration. ')
zyxelDhcpv6ClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1), ).setIndexNames((0, "ZYXEL-DHCPV6-MIB", "zyDhcpv6ClientIfIndex"))
if mibBuilder.loadTexts: zyxelDhcpv6ClientEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6ClientEntry.setDescription('An entry contains DHCPv6 client configuration.')
zyDhcpv6ClientIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyDhcpv6ClientIfIndex.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientIfIndex.setDescription('DHCPv6 client interface index.')
zyDhcpv6ClientIaType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("iana", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientIaType.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientIaType.setDescription('Enable/Disable the switch to get a non-temporary IP address from the DHCP server.')
zyDhcpv6ClientIaTypeRapidCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rapidCommit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientIaTypeRapidCommit.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientIaTypeRapidCommit.setDescription('Enable/Disable the switch to send its DHCPv6 solicit message with a rapid commit option to obtain information from the DHCP server by a rapid two-message exchange. The switch discards any reply message that does not include a rapid commit option. The DHCP server should also support rapid commit option to have it work well.')
zyDhcpv6ClientOptionDnsState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientOptionDnsState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientOptionDnsState.setDescription('Enable/Disable DHCPv6 client DNS option is means add DNS option to DHCPv6 client requests.')
zyDhcpv6ClientOptionDomainListState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientOptionDomainListState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientOptionDomainListState.setDescription('Enable/Disable DHCPv6 client Domain-List option is means add domain list information to DHCPv6 client requests.')
zyDhcpv6ClientInfoRefreshMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientInfoRefreshMinimum.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientInfoRefreshMinimum.setDescription('Sets the time interval (in seconds) at which the switch exchanges other configuration information with a DHCPv6 server again.')
zyxelDhcpv6ClientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 2, 1), )
if mibBuilder.loadTexts: zyxelDhcpv6ClientInfoTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6ClientInfoTable.setDescription('The table contains DHCPv6 client information.')
zyxelDhcpv6ClientInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 2, 1, 1), ).setIndexNames((0, "ZYXEL-DHCPV6-MIB", "zyDhcpv6ClientIfIndex"))
if mibBuilder.loadTexts: zyxelDhcpv6ClientInfoEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpv6ClientInfoEntry.setDescription('An entry contains DHCPv6 client information.')
zyDhcpv6ClientInfoRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 21, 2, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpv6ClientInfoRestart.setStatus('current')
if mibBuilder.loadTexts: zyDhcpv6ClientInfoRestart.setDescription('Set the switch to send a release message for the assigned IPv6 address to the DHCP server and start DHCP messages exchange again.')
mibBuilder.exportSymbols("ZYXEL-DHCPV6-MIB", zyDhcpv6ClientOptionDnsState=zyDhcpv6ClientOptionDnsState, PYSNMP_MODULE_ID=zyxelDhcpv6, zyDhcpv6ClientInfoRestart=zyDhcpv6ClientInfoRestart, zyDhcpv6ClientIaTypeRapidCommit=zyDhcpv6ClientIaTypeRapidCommit, zyDhcpv6MaxNumberOfRelays=zyDhcpv6MaxNumberOfRelays, zyxelDhcpv6ClientInfoTable=zyxelDhcpv6ClientInfoTable, zyDhcpv6RelayHelperIpAddress=zyDhcpv6RelayHelperIpAddress, zyxelDhcpv6ClientInfoEntry=zyxelDhcpv6ClientInfoEntry, zyxelDhcpv6ClientTable=zyxelDhcpv6ClientTable, zyxelDhcpv6=zyxelDhcpv6, zyDhcpv6ClientIaType=zyDhcpv6ClientIaType, zyxelDhcpv6Setup=zyxelDhcpv6Setup, zyDhcpv6RelayHelperIpAddressType=zyDhcpv6RelayHelperIpAddressType, zyDhcpv6RelayVid=zyDhcpv6RelayVid, zyDhcpv6ClientInfoRefreshMinimum=zyDhcpv6ClientInfoRefreshMinimum, zyDhcpv6RelayOptionIfIdState=zyDhcpv6RelayOptionIfIdState, zyDhcpv6ClientIfIndex=zyDhcpv6ClientIfIndex, zyDhcpv6RelayRowStatus=zyDhcpv6RelayRowStatus, zyxelDhcpv6RelayTable=zyxelDhcpv6RelayTable, zyxelDhcpv6Status=zyxelDhcpv6Status, zyxelDhcpv6RelayEntry=zyxelDhcpv6RelayEntry, zyDhcpv6RelayOptionRemoteIdData=zyDhcpv6RelayOptionRemoteIdData, zyxelDhcpv6ClientEntry=zyxelDhcpv6ClientEntry, zyDhcpv6ClientOptionDomainListState=zyDhcpv6ClientOptionDomainListState)
