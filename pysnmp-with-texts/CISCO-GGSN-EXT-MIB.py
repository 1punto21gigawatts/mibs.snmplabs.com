#
# PySNMP MIB module CISCO-GGSN-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-GGSN-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
TimeIntervalMin, = mibBuilder.importSymbols("CISCO-TC", "TimeIntervalMin")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Counter64, NotificationType, TimeTicks, ModuleIdentity, Integer32, iso, Bits, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Counter64", "NotificationType", "TimeTicks", "ModuleIdentity", "Integer32", "iso", "Bits", "Unsigned32", "ObjectIdentity")
TruthValue, TimeStamp, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention", "RowStatus")
ciscoGgsnExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 647))
ciscoGgsnExtMIB.setRevisions(('2011-03-18 00:00', '2010-06-11 00:00', '2009-09-17 00:00', '2009-01-30 00:00', '2008-01-29 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoGgsnExtMIB.setRevisionsDescriptions(('The following changes have been made. [1] Added a new OBJECT IDENTIFIER ciscoGgsnExtTraceStatistics with the following objects. cGgsnExtTraceActivatedSessions, cGgsnExtTraceSignalActivations, cGgsnExtTraceMgmtActivations, cGgsnExtTraceNewSesActivations, cGgsnExtTraceActSesActivations, cGgsnExtTraceSignalActivFailures, cGgsnExtTraceMgmtActivFailures, cGgsnExtTraceDeactivatedSessions, cGgsnExtTraceSignalDeactivations, cGgsnExtTraceMgmtDeactivations, cGgsnExtTraceSignalDeactivFailures, cGgsnExtTraceMgmtDeactivFailures. [2] Added a new OBJECT IDENTIFIER ciscoGgsnExtTraceXmlStatistics with the following objects. cGgsnExtTraceTotalXmlFiles, cGgsnExtTraceTotalXmlFailNotifFiles, cGgsnExtTraceXmlFileTransSucc, cGgsnExtTraceXmlFileTransPri, cGgsnExtTraceXmlFileTransSec, cGgsnExtTraceXmlFileTotalTransFails, cGgsnExtTraceXmlFileTransPriFails, cGgsnExtTraceXmlFileTransRetries, cGgsnExtTraceXmlFileTransSecFails. [3] Two new statistics objects are added under ciscoGgsnExtStatistics. cGgsnExtConditionalIEMissingMsgs, cGgsnExtInvalidReplyPeerMsgs. [4] Two new configuration objects are added under ciscoGgsnExtConfigurations. cGgsnExtTraceBufferLimit, cGgsnExtTraceXmlTransferInterval. [5] A new table cGgsnExtSubscriberTraceProfileTable with following objects have been added to ciscoGgsnExtConfigurations. cGgsnExtTraceProfile, cGgsnExtTracePrimaryUrl, cGgsnExtTraceSecondaryUrl, cGgsnExtTraceInfoTxFailRetry, cGgsnExtTraceInfoTxFailRetryInterval, cGgsnExtTraceRowStatus. [6] A new table ciscoGgsnExtTraceStatusTable with following objects have been added to ciscoGgsnExtStatus. cGgsnExtTraceStatusImsi, cGgsnExtTraceStatusImei, cGgsnExtTraceStatusSource, cGgsnExtTraceStatusReference. [7] The following Notification has been added cGgsnExtSubsTraceFailNotif. [8] The following Notification objects are added under ciscoGgsnExtNotifInfo. cGgsnExtSubscriberMcc, cGgsnExtSubscriberMnc, cGgsnExtSubscriberTraceId, cGgsnExtSubscrTraceFailReason. [9] The following NotifMgmt objects are added under ciscoGgsnExtNotifMgmt cGgsnExtTraceNotifEnable. [10] The following groups were added cGgsnExtNotificationsGroup, cGgsnExtNotificationInfoGroup, cGgsnExtStatusGroupSup2, cGgsnExtConfigurationsGroupRev1Sup2, cGgsnExtStatisticsGroupSup2, cGgsnExtStatisticsGroupSup3. [11] Deprecated cGgsnExtMIBComplianceRev3 and added new compliance cGgsnExtMIBComplianceRev4.', 'Added the following scalar objects cGgsnExtActivatedv4v6Gtpv0Pdp, cGgsnExtActivatedv4v6Gtpv1Pdp, cGgsnExtActivatedv4v6MobileStations to ciscoGgsnExtStatus Added the following scalar objects cGgsnExtTotalCreatedv4v6Pdps and cGgsnExtTotalDeletedv4v6Pdps to ciscoGgsnExtStatistics Added OBJECT-GROUP cGgsnExtStatisticsGroupSup1, which is supplementary to cGgsnExtStatisticsGroupRev1. Added OBJECT-GROUP cGgsnExtStatusGroupSup1, which is supplementary to cGgsnExtStatusGroupRev1. Added MODULE-COMPLIANCE cGgsnExtMIBComplianceRev3, which deprecates cGgsnExtMIBComplianceRev2.', 'Added the following scalar objects cGgsnExtRedundancyEnabled, cGgsnExtChargSyncWindowSvcSeqnum, cGgsnExtChargSyncWindowCdrSeqnum, cGgsnExtChargSynWindowGtppSeqnum to ciscoGgsnExtConfigurations. Added OBJECT-GROUP cGgsnExtConfigurationsGroupRev1Sup1, which supplementary to cGgsnExtConfigurationsGroupRev1. Added MODULE-COMPLIANCE cGgsnExtMIBComplianceRev2, which deprecates cGgsnExtMIBComplianceRev1.', 'Added the following scalar objects cGgsnExtDfpCpuLoad, cGgsnExtDfpMemLoad, cGgsnExtThruputHistory, cGgsnExtCallRateInterval, cGgsnExtCallRateHistory, cGgsnExtPrepaidStandAlone to ciscoGgsnExtConfigurations. Added the scalar object cGgsnExtActivatedMs to ciscoGgsnExtStatus. Added the scalar object cGgsnExtPdpNonExistentMsgs to ciscoGgsnExtStatistics. Added the following tables cGgsnExtCallRateStatsTable, cGgsnExtHistCallRateStatsTable, cGgsnExtHistThruputStatsTable, cGgsnExtSubscriberTable to ciscoGgsnExtStatistics. Added following OBJECT-GROUP cGgsnExtStatisticsGroupRev1, cGgsnExtStatusGroupRev1, cGgsnExtConfigurationsGroupRev1 Added MODULE-COMPLIANCE cGgsnExtMIBComplianceRev1.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoGgsnExtMIB.setLastUpdated('201103180000Z')
if mibBuilder.loadTexts: ciscoGgsnExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoGgsnExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-gprs@cisco.com')
if mibBuilder.loadTexts: ciscoGgsnExtMIB.setDescription("This MIB module extends the CISCO-GGSN-MIB. This MIB module manages the Gateway GPRS Support Node (GGSN) devices. A GGSN device provides interworking with external packet-data network of a particular GPRS service provider. It provides a combination of IP routing and GPRS specific functionality to support mobile users. A PDP context on the GGSN device contains the mobile users session information, during an active session. This information is used by the device to control the session. An active PDP context is created when a mobile station's service request is authenticated and served by the GGSN device. Acronyms and terms: APN Access Point Name CDR Call Detail Record COA Change of Authorization CSG2 Content Services Gateway (2nd Generation) DT Direct Tunnel DFP Dynamic Feedback Protocol GGSN Gateway GPRS Support Node GPRS General Packet Radio Service GTP GPRS Tunneling Protocol IE Information Element IMEI International Mobile Equipment Identification IMSI International Mobile Subscriber Identification MCC Mobile Country Code MNC Mobile Network Code MS Mobile Station MSISDN Mobile Station ISDN number PDP Packet Data Protocol PDN Packet Data Network PPP Point-to-Point Protocol RNC Radio Network Controller SGSN Serving GPRS Support Node REFERENCE [1] GSM 03.60: Digital cellular telecommunications system (Phase 2+); General Packet Radio Service (GPRS); Service description; Stage 2. V7.1.0 [2] GSM 09.60: Digital cellular telecommunication system (Phase 2+); General Packet Radio Service (GPRS); GPRS Tunnelling Protocol (GTP) across Gn and Gp Interface. V7.3.0 [3] 3GPP; Technical Specification Group Services and System Aspects; QoS Concept and Architecture. 3G TS 23.107 v3.2.0. [4] 3GPP; Technical Specification Group Core Network; General Packet Radio Service(GPRS); GPRS Tunnelling Protocol (GTP) across Gn and Gp Interface (Release 7). 3G TS 29.060 v7.5.1. [5] 3GPP: Technical Specification Group Core Network; Policy control over Go interface (Release 5). 3GPP TS 29.207 V5.2.0 [6] 3GPP: Technical Specification Group Services and System Aspects; General Packet Radio Service (GPRS); Service Description (Release 7) 3GPP TS 23.060 V7.4.0 [7] 3GPP: Technical Specification Group Services and System Aspects; One Tunnel Functional description; (Release 7) 3GPP TR 23.809 V1.0.0")
ciscoGgsnExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 0))
cGgsnExtSubsTraceFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 647, 0, 1)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMcc"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMnc"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberTraceId"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscrTraceFailReason"))
if mibBuilder.loadTexts: cGgsnExtSubsTraceFailNotif.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubsTraceFailNotif.setDescription('This notification is triggered on failure of a subscriber trace activation.')
ciscoGgsnExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1))
ciscoGgsnExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 2))
ciscoGgsnExtStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1))
ciscoGgsnExtConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2))
ciscoGgsnExtStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3))
ciscoGgsnExtNotifMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 4))
ciscoGgsnExtNotifInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 5))
cGgsnExtNoWaitSgsnLocalDelPDPs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 1), Counter32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtNoWaitSgsnLocalDelPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtNoWaitSgsnLocalDelPDPs.setDescription('This object indicates the total number of PDPs deleted in GGSN without waiting for a delete context response from the SGSN.')
cGgsnExtNoReqSgsnLocalDelPDPs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 2), Counter32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtNoReqSgsnLocalDelPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtNoReqSgsnLocalDelPDPs.setDescription('This object indicates the total number of PDPs deleted in GGSN without sending a delete request to the SGSN.')
cGgsnExtSentPdpUpdateReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSentPdpUpdateReqs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSentPdpUpdateReqs.setDescription('This object indicates the total number of GGSN initiated update PDP context requests sent to SGSN.')
cGgsnExtRcvdSuccPdpUpdateResponses = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtRcvdSuccPdpUpdateResponses.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtRcvdSuccPdpUpdateResponses.setDescription('This object represents the total number of update PDP context responses received from the SGSN for the GGSN initiated update requests.')
cGgsnExtRcvdCoaMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtRcvdCoaMsgs.setReference('RFC 3576 - Dynamic Authorization Extensions to Remote Authentication Dial In User Service (RADIUS)')
if mibBuilder.loadTexts: cGgsnExtRcvdCoaMsgs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtRcvdCoaMsgs.setDescription('This object indicates the total number of Change of Authorization (COA) messages received at GGSN.')
cGgsnExtDiscardedCoaMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtDiscardedCoaMsgs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDiscardedCoaMsgs.setDescription('This object indicates the total number of COA messges dropped at GGSN.')
cGgsnExtSentCoaUpdateReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSentCoaUpdateReqs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSentCoaUpdateReqs.setDescription('This object indicates the total number of COA initiated update PDP requests for QOS change sent from GGSN.')
cGgsnExtSentErrorIndications = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSentErrorIndications.setReference('3GPP TS 23.060 V7.4.0 General Packet Radio Service (GPRS); Service description; Stage 2 (Release 7)')
if mibBuilder.loadTexts: cGgsnExtSentErrorIndications.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSentErrorIndications.setDescription('This object indicates the number of error indication messages sent from GGSN. Trigger condition: A error indication message will be sent from GGSN when a data packet is received for a non-existent PDP context.')
cGgsnExtRcvdErrorIndications = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 9), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtRcvdErrorIndications.setReference('3GPP TS 23.060 v7.4.0 General Packet Radio Service (GPRS); Service description; Stage 2 (Release 7)')
if mibBuilder.loadTexts: cGgsnExtRcvdErrorIndications.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtRcvdErrorIndications.setDescription('This object indicates the number of error indication messages received on GGSN.')
cGgsnExtTotalDtEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTotalDtEnabled.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTotalDtEnabled.setDescription('This object indicates the number of times Direct tunnel is enabled for the PDP contexts in GGSN.')
cGgsnExtRcvdDtPdpErrorIndications = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 11), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtRcvdDtPdpErrorIndications.setReference('3GPP TR 23.809 v1.0.0: 3rd Generation Partnership Project; Technical Specification Group Services and System Aspects; One Tunnel Functional description;(Release 7)')
if mibBuilder.loadTexts: cGgsnExtRcvdDtPdpErrorIndications.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtRcvdDtPdpErrorIndications.setDescription('This object indicates the total number of error indications received for Direct Tunnel PDP contexts from the RNC.')
cGgsnExtTotalDtUpdFailDeletedPDPs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 12), Counter32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTotalDtUpdFailDeletedPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTotalDtUpdFailDeletedPDPs.setDescription("This object indicates the total number of Direct tunnel PDP contexts deleted due to update response failure. Trigger condition: If the GGSN initiated update request is triggered by the error indication from RNC and the response is received with cause value other than 'request accepted' then the PDP is deleted locally in GGSN.")
cGgsnExtThruputStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13), )
if mibBuilder.loadTexts: cGgsnExtThruputStatsTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputStatsTable.setDescription('This table contains the global GTP throughput statistics on this GGSN for a configurable duration set in cGgsnThruputIntervalOne and cGgsnThruputIntervalTwo. Once the cGgsnThruputIntervalOne is set to some valid value, the data throughput collections gets started. The data throughput collection is updated periodically for each expiry of configured throughput interval to the corresponding objects in the cGgsnThruputStatsTable. cGgsnThruputIntervalTwo is just an option for a second throughput collection for a different throughput interval time.')
cGgsnExtThruputStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtThruputInterval"))
if mibBuilder.loadTexts: cGgsnExtThruputStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputStatsEntry.setDescription('Creation of row(s) will happen when there is a valid value set to cGgsnThruputIntervalOne or cGgsnThruputIntervalTwo. Deletion of row(s) will happen when the throughput intervals (cGgsnThruputIntervalOne, cGgsnThruputIntervalTwo) are unset.')
cGgsnExtThruputInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes')
if mibBuilder.loadTexts: cGgsnExtThruputInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputInterval.setDescription('This object indicates the time interval at which the statistics are sampled. The objects cGgsnThruputIntervalOne and cGgsnThruputIntervalTwo in the CISCO-GGSN-MIB represent the configuration values of the intervals.')
cGgsnExtThruputLastCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtThruputLastCollected.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputLastCollected.setDescription('This object indicates the delta value between the time when this data is collected and the time it is been retrieved. It means the time elapsed after the previous collection/updation of the data.')
cGgsnExtUpstreamByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 3), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtUpstreamByteCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtUpstreamByteCount.setDescription('This object indicates the total number of upstream traffic bytes sent in the last sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtDownstreamByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 4), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtDownstreamByteCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDownstreamByteCount.setDescription('This object indicates the total number of downstream traffic bytes sent in the last sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtUpstreamPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 5), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtUpstreamPktCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtUpstreamPktCount.setDescription('This object indicates the number of upstream packets sent in the last sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtDownstreamPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 13, 1, 6), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtDownstreamPktCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDownstreamPktCount.setDescription('This object indicates the number of downstream packets sent in the last sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtPdpNonExistentMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 14), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtPdpNonExistentMsgs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtPdpNonExistentMsgs.setDescription('This object indicates the total number of PDP non-existent messages sent from the GGSN.')
cGgsnExtCallRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15), )
if mibBuilder.loadTexts: cGgsnExtCallRateStatsTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateStatsTable.setDescription('This table contains the global call rate statistics on this GGSN for a cindicatesonfigurable duration set in cGgsnExtCallRateInterval. When the cGgsnExtCallRateInterval is set to some valid value, the call rate data collections gets started. The call rate data is updated periodically for each expiry of the configured call rate interval to the corresponding objects in the cGgsnExtCallRateStatsTable.')
cGgsnExtCallRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtCallRateStatsInterval"))
if mibBuilder.loadTexts: cGgsnExtCallRateStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateStatsEntry.setDescription("An entry(conceptual row) in the 'cGgsnExtCallRateStatsTable'. There will always be a single entry in this table. The entry represents set of global call rate statistics at a given instance of time. The agent creates an entry in this table when there is a valid value set to cGgsnExtCallRateInterval. The agent destroys an entry in this table when the call rate interval cGgsnExtCallRateInterval is unset.")
cGgsnExtCallRateStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes')
if mibBuilder.loadTexts: cGgsnExtCallRateStatsInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateStatsInterval.setDescription('This object indicates the time interval at which the statistics are sampled. The object cGgsnExtCallRateInterval represents the configuration value of the interval.')
cGgsnExtCallRateLastCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtCallRateLastCollected.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateLastCollected.setDescription('This object indicates the time elapsed (in minutes) from the time when this data is collected and the time it is been retrieved.')
cGgsnExtCreatedPDPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15, 1, 3), Gauge32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtCreatedPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCreatedPDPs.setDescription('This object indicates the number of PDP contexts created in the last sampling period specified by cGgsnExtCallRateInterval.')
cGgsnExtDeletedPDPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 15, 1, 4), Gauge32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtDeletedPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDeletedPDPs.setDescription('This object indicates the number of PDP contexts deleted in the last sampling period specified by cGgsnExtCallRateInterval.')
cGgsnExtHistCallRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16), )
if mibBuilder.loadTexts: cGgsnExtHistCallRateStatsTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCallRateStatsTable.setDescription('This table contains the historical call rate statistics on this GGSN for a configurable duration set in cGgsnExtCallRateInterval.')
cGgsnExtHistCallRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtHistCallRateIndex"))
if mibBuilder.loadTexts: cGgsnExtHistCallRateStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCallRateStatsEntry.setDescription("An entry (conceptual row) in the 'cGgsnExtHistCallRateStatsTable'. Each entry represents a set of historical call rate statistics sampled at different instance of time. The agent creates an entry in to this table at the end of each interval set in cGgsnExtCallRateInterval and the existing entry in the cGgsnExtCallRateStatsTable will be inserted into the history table and the cGgsnExtCallRateStatsTable will be updated with new values. The agent deletes an entry from the table when the call rate history limit indicated by the object cGgsnExtCallRateHistory is reached. The oldest entries will be removed when the limit is reached.")
cGgsnExtHistCallRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: cGgsnExtHistCallRateIndex.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCallRateIndex.setDescription('This object indicates an arbitrary index number which uniquely identifies a history call rate entry in this table.')
cGgsnExtHistCallRateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1, 2), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistCallRateInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCallRateInterval.setDescription('This object indicates the time interval for which the statistics are sampled.')
cGgsnExtHistCallRateLastCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1, 3), TimeStamp()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistCallRateLastCollected.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCallRateLastCollected.setDescription('This object represents the time at which this data was collected.')
cGgsnExtHistCreatedPDPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1, 4), Counter32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistCreatedPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistCreatedPDPs.setDescription('This object indicates the historical number of PDP contexts created in a specific sampling period specified by cGgsnExtCallRateInterval.')
cGgsnExtHistDeletedPDPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 16, 1, 5), Counter32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistDeletedPDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistDeletedPDPs.setDescription('This object indicates the historical number of PDP contexts deleted in a specific sampling period specified by cGgsnExtCallRateInterval.')
cGgsnExtHistThruputStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17), )
if mibBuilder.loadTexts: cGgsnExtHistThruputStatsTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistThruputStatsTable.setDescription('This table contains the historical GTP throughput statistics on this GGSN for a configurable duration set in cGgsnThruputIntervalOne and cGgsnThruputIntervalTwo.')
cGgsnExtHistThruputStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtHistThruputIndex"), (0, "CISCO-GGSN-EXT-MIB", "cGgsnExtHistThruputInterval"))
if mibBuilder.loadTexts: cGgsnExtHistThruputStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistThruputStatsEntry.setDescription("An entry (conceptual row) in the 'cGgsnExtHistThruputStatsTable'. Each entry represents a a set of historical throughput statistics sampled at different instance of time. The agent creates an entry into this table at the end of each interval set in cGgsnThruputIntervalOne and cGgsnThruputIntervalTwo. The existing entry in the cGgsnExtThruputStatsTable will be inserted into the history table and then the cGgsnExtThruputStatsTable will be will be updated with new values. The agent deletes an entry of this table when the throughput history limit indicated by the object cGgsnExtThruputHistory is reached. The oldest entries will be removed when the limit is reached.")
cGgsnExtHistThruputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: cGgsnExtHistThruputIndex.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistThruputIndex.setDescription('This object indicates an arbitray index number which uniquely identify a entry in this table.')
cGgsnExtHistThruputInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 2), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes')
if mibBuilder.loadTexts: cGgsnExtHistThruputInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistThruputInterval.setDescription('This object indicates the time interval at which the statistics are sampled. The objects cGgsnThruputIntervalOne and cGgsnThruputIntervalTwo in the CISCO-GGSN-MIB represent the configuration values of the intervals.')
cGgsnExtHistThruputLastCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 3), TimeStamp()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistThruputLastCollected.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistThruputLastCollected.setDescription('This object indicates the time at which this data was collected.')
cGgsnExtHistUpstreamByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistUpstreamByteCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistUpstreamByteCount.setDescription('This object indicates the historical number of upstream traffic bytes sent from GGSN to PDN in a specific sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtHistDownstreamByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 5), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistDownstreamByteCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistDownstreamByteCount.setDescription('This object indicates the historical number of downstream traffic bytes sent from PDN to GGSN in a specific sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtHistUpstreamPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistUpstreamPktCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistUpstreamPktCount.setDescription('This object indicates the historical number of upstream packets sent in a specific sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtHistDownstreamPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 17, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtHistDownstreamPktCount.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtHistDownstreamPktCount.setDescription('This object represents the historical number of downstream packets sent in a specific sampling period specified by cGgsnExtThruputInterval.')
cGgsnExtSubscriberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18), )
if mibBuilder.loadTexts: cGgsnExtSubscriberTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberTable.setDescription('This table contains the details of the subscribers connected to the GGSN.')
cGgsnExtSubscriberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMsisdn"))
if mibBuilder.loadTexts: cGgsnExtSubscriberEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberEntry.setDescription('An entry (conceptual row) in the cGgsnExtSubscriberTable. The agent creates an entry into this table when a new PDP is created in GGSN in response to the create request from SGSN. The agent destroys an entry of this table when a PDP is deleted in GGSN.')
cGgsnExtSubscriberMsisdn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: cGgsnExtSubscriberMsisdn.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberMsisdn.setDescription('This object indicates a human readable string representing the Mobile Subscriber ISDN (MSISDN) value of the subscriber.')
cGgsnExtSubscriberTid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberTid.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberTid.setDescription('This object indicates a human readable string representing the Tunnel identifier of the Subscriber/PDP context in GGSN.')
cGgsnExtSubscriberMSAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberMSAddrType.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberMSAddrType.setDescription('This object indicates the address type of the object cGgsnExtSubscriberMSAddr.')
cGgsnExtSubscriberMSAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberMSAddr.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberMSAddr.setDescription('This object indicates the inet address of the Subscriber.')
cGgsnExtSubscriberSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("pdpAddrSrcNone", 1), ("pdpAddrSrcStatic", 2), ("pdpAddrSrcLocalPool", 3), ("pdpAddrSrcRadius", 4), ("pdpAddrSrcDhcp", 5), ("pdpAddrSrcIpcp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberSource.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberSource.setDescription('This object indicates the source from which the IP addr for the subscriber is assigned. pdpAddrSrcNone - None pdpAddrSrcStatic - static address specified by the MS pdpAddrSrcLocalPool - from the local pool pdpAddrSrcRadius - from Radius server pdpAddrSrcDhcp - from DHCP server pdpAddrSrcIpcp - from Ipcp')
cGgsnExtSubscriberSGSNAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberSGSNAddrType.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberSGSNAddrType.setDescription('This object indicates the address type of the object cGgsnExtSubscriberSGSNAddr.')
cGgsnExtSubscriberSGSNAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberSGSNAddr.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberSGSNAddr.setDescription("This object indicates the Inet address of the subscriber's SGSN.")
cGgsnExtSubscriberAPN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 18, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtSubscriberAPN.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberAPN.setDescription('This object indicates a human readable string representing the access point name in GGSN to which the subscriber is connected.')
cGgsnExtTotalCreatedv4v6Pdps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTotalCreatedv4v6Pdps.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTotalCreatedv4v6Pdps.setDescription('This object represents the total number of successfully created IPv4v6 PDP contexts. The counter is incremented whenever a IPv4v6 PDP contexts is created. This includes static, dynamic, IP, PPP PDPs.')
cGgsnExtTotalDeletedv4v6Pdps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTotalDeletedv4v6Pdps.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTotalDeletedv4v6Pdps.setDescription('This object represents the total number of IPv4v6 PDP contexts deleted. The counter is incremented whenever a IPv4v6 PDP contexts is deleted. This includes static, dynamic, IP, PPP PDPs.')
ciscoGgsnExtTraceStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21))
cGgsnExtTraceActivatedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceActivatedSessions.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceActivatedSessions.setDescription('This object represents the total number of sessions for which trace has been activated.')
cGgsnExtTraceSignalActivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceSignalActivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceSignalActivations.setDescription('This object represents the total number of sessions initiated trace with signaling activations.')
cGgsnExtTraceMgmtActivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceMgmtActivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceMgmtActivations.setDescription('This object represents the total number of sessions initiated trace with management interface activations.')
cGgsnExtTraceNewSesActivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceNewSesActivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceNewSesActivations.setDescription('This object represents the total number of traces initiated for new sessions.')
cGgsnExtTraceActSesActivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceActSesActivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceActSesActivations.setDescription('This object represents the total number of traces initiated for existing sessions.')
cGgsnExtTraceSignalActivFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceSignalActivFailures.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceSignalActivFailures.setDescription('This object represents the total number of sessions that failed to initiate trace by signaling activations.')
cGgsnExtTraceMgmtActivFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceMgmtActivFailures.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceMgmtActivFailures.setDescription('This object represents the total number of sessions that failed to initiate trace by management interface activations.')
cGgsnExtTraceDeactivatedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceDeactivatedSessions.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceDeactivatedSessions.setDescription('This object represents the total number of sessions that deactivated traces.')
cGgsnExtTraceSignalDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceSignalDeactivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceSignalDeactivations.setDescription('This object represents the total number of signaling initiated deactivation of traces.')
cGgsnExtTraceMgmtDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceMgmtDeactivations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceMgmtDeactivations.setDescription('This object represents the total number of management initiated deactivation of traces.')
cGgsnExtTraceSignalDeactivFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceSignalDeactivFailures.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceSignalDeactivFailures.setDescription('This object represents the total number of sessions that failed to deactivate trace by signaling initiated deactivations.')
cGgsnExtTraceMgmtDeactivFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 21, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceMgmtDeactivFailures.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceMgmtDeactivFailures.setDescription('This object represents the total number of sessions that failed to deactivate trace by management initiated deactivations.')
ciscoGgsnExtTraceXmlStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22))
cGgsnExtTraceTotalXmlFiles = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceTotalXmlFiles.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceTotalXmlFiles.setDescription('This object represents the total number of XML traced files.')
cGgsnExtTraceTotalXmlFailNotifFiles = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceTotalXmlFailNotifFiles.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceTotalXmlFailNotifFiles.setDescription('This object represents the total number of XML trace notification failed files.')
cGgsnExtTraceXmlFileTransSucc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSucc.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSucc.setDescription('This object represents the total number of successful XML file transfers.')
cGgsnExtTraceXmlFileTransPri = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransPri.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransPri.setDescription('This object represents the number of XML file transferred to the primary trace collection entity.')
cGgsnExtTraceXmlFileTransSec = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSec.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSec.setDescription('This object represents the number of XML file transferred to the secondary trace collection entity.')
cGgsnExtTraceXmlFileTotalTransFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTotalTransFails.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTotalTransFails.setDescription('This object represents the total number of failed XML file transfers.')
cGgsnExtTraceXmlFileTransPriFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransPriFails.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransPriFails.setDescription('This object represents the total number of failed XML file transfers to the primary trace collection entity.')
cGgsnExtTraceXmlFileTransRetries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransRetries.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransRetries.setDescription('This object represents the total number of XML file transfer retries made to the trace collection entity.')
cGgsnExtTraceXmlFileTransSecFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 22, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSecFails.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlFileTransSecFails.setDescription('This object represents the number of failed XML file transfers to the secondary trace collection entity.')
cGgsnExtConditionalIEMissingMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtConditionalIEMissingMsgs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtConditionalIEMissingMsgs.setDescription('This object represents the total number of response messages sent with the cause code of conditional IE missing.')
cGgsnExtInvalidReplyPeerMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtInvalidReplyPeerMsgs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtInvalidReplyPeerMsgs.setDescription('This object represents the total number of response messages sent with cause code of invalid reply from peers.')
cGgsnExtTraceNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 4, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtTraceNotifEnable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceNotifEnable.setDescription('This object represents whether cGgsnExtSubsTraceFailNotif is enabled or not. true - indicates that the notification is enabled. false - indicates that the notification is disabled.')
cGgsnExtSubscriberMcc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 5, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cGgsnExtSubscriberMcc.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberMcc.setDescription('MCC value of the subscriber, for which trace activation failure has occured.')
cGgsnExtSubscriberMnc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 5, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cGgsnExtSubscriberMnc.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberMnc.setDescription('MNC value of the subscriber, for which trace activation failure has occured.')
cGgsnExtSubscriberTraceId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 5, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceId.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceId.setDescription('Trace Identifier of the subscriber, for which trace activation failure has occured.')
cGgsnExtSubscrTraceFailReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 5, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cGgsnExtSubscrTraceFailReason.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscrTraceFailReason.setDescription('Reason for the trace activation failure.')
cGgsnExtAaaAccountInterPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(15, 71582), ))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtAaaAccountInterPeriod.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtAaaAccountInterPeriod.setDescription("This object specifies the global periodic accounting timer interval value. When this object is set to a value, 'interim' type accounting records will be sent at the specified interval for the PDP contexts.")
cGgsnExtDfpCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 75), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtDfpCpuLoad.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDfpCpuLoad.setDescription('This object specifies the value of the CPU load to be included in the DFP weight calculation.')
cGgsnExtDfpMemLoad = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 75), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtDfpMemLoad.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtDfpMemLoad.setDescription('This object specifies the value of the Memory Load to be included in the DFP weight calculation.')
cGgsnExtThruputHistory = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtThruputHistory.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputHistory.setDescription('This object specifies the number of throughput history entries to be maintained in the cGgsnExtHistThruputStatsTable.')
cGgsnExtCallRateInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 5), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtCallRateInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateInterval.setDescription('This object specifies the interval at which the call rate statistics needs to be collected in GGSN. When this object is set to a valid value, the call rate statistics are collected for the interval and updated in cGgsnExtCallRateStatsTable every time the interval expires. When the object is set to 0, the call rate statistics will not be collected.')
cGgsnExtCallRateHistory = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtCallRateHistory.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtCallRateHistory.setDescription('This object specifies the number of callrate history be maintained in the cGgsnExtHistCallRateStatsTable.')
cGgsnExtPrepaidStandAlone = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtPrepaidStandAlone.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtPrepaidStandAlone.setDescription("This object specifies whether GGSN can function as a standalone entity for prepaid quota management and enforcement. If the value of this object is 'true' then GGSN can function as a stand alone entity for prepaid quota management and enforcement. If the value of this object is set to 'false' then GGSN will depend on CSG2 for prepaid quota management and enforcement.")
cGgsnExtRedundancyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtRedundancyEnabled.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtRedundancyEnabled.setDescription('This object is used to enable redundancy for GGSN.')
cGgsnExtChargSyncWindowSvcSeqnum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtChargSyncWindowSvcSeqnum.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtChargSyncWindowSvcSeqnum.setDescription('This object specifies sync window size of the local sequence number. This object can assign value only when redundancy(cGgsnExtRedundancyEnabled) is enabled.')
cGgsnExtChargSyncWindowCdrSeqnum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtChargSyncWindowCdrSeqnum.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtChargSyncWindowCdrSeqnum.setDescription('This object specifies sync window size of the CDR record sequence number. This object can assign value only when redundancy(cGgsnExtRedundancyEnabled)is enabled.')
cGgsnExtChargSynWindowGtppSeqnum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtChargSynWindowGtppSeqnum.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtChargSynWindowGtppSeqnum.setDescription('This object specifies sync window size of the GTP packet sequence number. This object can assign value only when redundancy(cGgsnExtRedundancyEnabled)is enabled.')
cGgsnExtTraceBufferLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2000, 10000)).clone(3000)).setUnits('Bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtTraceBufferLimit.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceBufferLimit.setDescription('This object defines buffer limit when tracing is active for a subscriber.')
cGgsnExtTraceXmlTransferInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cGgsnExtTraceXmlTransferInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceXmlTransferInterval.setDescription('This object defines the trace XML file transfer interval when tracing is active for a subscriber.')
cGgsnExtSubscriberTraceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14), )
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceProfileTable.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceProfileTable.setDescription('This table contains a list of subscriber trace profiles configured on this gateway. The SNMP entity adds a conceptual row(s) to this table when the user configures a trace profile. The SNMP entity deletes a conceptual row(s) from this table when the user removes the trace profile. The SNMP entity modifies the conceptual row when the user changes any trace parameters of the profile.')
cGgsnExtSubscriberTraceProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtTraceProfile"))
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtSubscriberTraceProfileEntry.setDescription('Each entry in this table contains a set of trace parameter needed for tracing a subscriber.')
cGgsnExtTraceProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: cGgsnExtTraceProfile.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceProfile.setDescription('This object represents the subscriber trace policy name and it uniquely identifies a subscriber trace policy.')
cGgsnExtTracePrimaryUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cGgsnExtTracePrimaryUrl.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTracePrimaryUrl.setDescription('This object represents the primary URL to which the subscriber trace information needs to be transferred when the trace activated user anchors to the gateway.')
cGgsnExtTraceSecondaryUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cGgsnExtTraceSecondaryUrl.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceSecondaryUrl.setDescription('This object represents the secondary URL to which the subscriber trace information needs to be transferred when the primary URL is unreachable and the trace activated user anchors to the gateway.')
cGgsnExtTraceInfoTxFailRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cGgsnExtTraceInfoTxFailRetry.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceInfoTxFailRetry.setDescription('This object represents the number of times the gateway will retry to transfer the trace information in case of failure.')
cGgsnExtTraceInfoTxFailRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 180)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cGgsnExtTraceInfoTxFailRetryInterval.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceInfoTxFailRetryInterval.setDescription('This object represents the time interval between ever retry to transfer the trace information in case of failure.')
cGgsnExtTraceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 2, 14, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cGgsnExtTraceRowStatus.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceRowStatus.setDescription("This object is used to create a new row or delete an existing row in this table. To create a row, set this object to 'createAndGo'. To delete a row, set this object to 'destroy'.")
cGgsnExtGtpPppRegenCreatedIntfs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtGtpPppRegenCreatedIntfs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtGtpPppRegenCreatedIntfs.setDescription('This object represents the number of device specific interface constructs created for association with PPP-Regen PDP contexts.')
cGgsnExtGtpDtActivePDPs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 2), Gauge32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtGtpDtActivePDPs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtGtpDtActivePDPs.setDescription('This object represents the number of active PDP contexts with Direct tunnel enabled.')
cGgsnExtActivatedMs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtActivatedMs.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtActivatedMs.setDescription('This object indicates the current number of Mobile Stations with active PDP contexts.')
cGgsnExtActivatedv4v6Gtpv0Pdp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 4), Gauge32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6Gtpv0Pdp.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6Gtpv0Pdp.setDescription('This object represents the current number of active GTPv0 IPv4v6 PDP contexts.')
cGgsnExtActivatedv4v6Gtpv1Pdp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 5), Gauge32()).setUnits('PDP Context').setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6Gtpv1Pdp.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6Gtpv1Pdp.setDescription('This object represents the current number of active GTPv1 IPv4v6 PDP contexts.')
cGgsnExtActivatedv4v6MobileStations = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6MobileStations.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtActivatedv4v6MobileStations.setDescription('This object represents the current number of mobile stations with active IPv4v6 PDP contexts.')
ciscoGgsnExtTraceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7), )
if mibBuilder.loadTexts: ciscoGgsnExtTraceStatusTable.setStatus('current')
if mibBuilder.loadTexts: ciscoGgsnExtTraceStatusTable.setDescription('This table contains a list of subscribers and their tracing status on this gateway. The SNMP entity adds a conceptual row(s) to this table when a trace is begun for a subscriber. The SNMP entity deletes a conceptual row(s) from this table when a trace is stopped for a subscriber.')
ciscoGgsnExtTraceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-GGSN-EXT-MIB", "cGgsnExtTraceStatusImsi"))
if mibBuilder.loadTexts: ciscoGgsnExtTraceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoGgsnExtTraceStatusEntry.setDescription('Each entry in this table contains a set of trace parameters currently used by the subscriber along with his IMEI.')
cGgsnExtTraceStatusImsi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: cGgsnExtTraceStatusImsi.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceStatusImsi.setDescription('This object represents the IMSI of the subscriber who is being traced currently on this gateway.')
cGgsnExtTraceStatusImei = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceStatusImei.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceStatusImei.setDescription('This object represents the IMEI of the subscriber who is being traced currently on this gateway.')
cGgsnExtTraceStatusSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signaling", 1), ("management", 2))).clone('management')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceStatusSource.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceStatusSource.setDescription("This object indicates the source through which an equipment trace has activated on the gateway for a subscriber. 'signaling' - tracing has been activated by gtp signaling messages. 'management' - tracing has been activated by the user directly on the gateway using a gateway management tool.")
cGgsnExtTraceStatusReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 647, 1, 3, 7, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cGgsnExtTraceStatusReference.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtTraceStatusReference.setDescription('This object represents the trace reference of the subscriber who is being traced currently on this gateway.')
cGgsnExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1))
cGgsnExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2))
cGgsnExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1, 1)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtMIBCompliance = cGgsnExtMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtMIBCompliance.setDescription('The compliance statements for entities which implement the CISCO-GGSN-EXT-MIB. This is deprecated by cGgsnExtMIBComplianceRev1.')
cGgsnExtMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1, 2)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtMIBComplianceRev1 = cGgsnExtMIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtMIBComplianceRev1.setDescription('The compliance statements for entities which implement the CISCO-GGSN-EXT-MIB. This is deprecated by cGgsnExtMIBComplianceRev2.')
cGgsnExtMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1, 3)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1Sup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtMIBComplianceRev2 = cGgsnExtMIBComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtMIBComplianceRev2.setDescription('The compliance statements for entities which implement the CISCO-GGSN-EXT-MIB.This is deprecated by cGgsnExtMIBComplianceRev3.')
cGgsnExtMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1, 4)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1Sup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupSup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupSup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtMIBComplianceRev3 = cGgsnExtMIBComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtMIBComplianceRev3.setDescription('The compliance statements for entities which implement the CISCO-GGSN-EXT-MIB.')
cGgsnExtMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 1, 5)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1Sup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupSup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupSup1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupRev1"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatusGroupSup2"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtConfigurationsGroupRev1Sup2"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupSup2"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtNotificationsGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtNotificationInfoGroup"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtStatisticsGroupSup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtMIBComplianceRev4 = cGgsnExtMIBComplianceRev4.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtMIBComplianceRev4.setDescription('The compliance statements for entities which implement the CISCO-GGSN-EXT-MIB.')
cGgsnExtStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 1)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtNoWaitSgsnLocalDelPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtNoReqSgsnLocalDelPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSentPdpUpdateReqs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtRcvdSuccPdpUpdateResponses"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtRcvdCoaMsgs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDiscardedCoaMsgs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSentCoaUpdateReqs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSentErrorIndications"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtRcvdErrorIndications"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTotalDtEnabled"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtRcvdDtPdpErrorIndications"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTotalDtUpdFailDeletedPDPs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatisticsGroup = cGgsnExtStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatisticsGroup.setDescription('A collection of statistics objects in GGSN.')
cGgsnExtStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 2)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtGtpPppRegenCreatedIntfs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtGtpDtActivePDPs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatusGroup = cGgsnExtStatusGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtStatusGroup.setDescription('A collection of statistics objects in GGSN. This is deprecated by cGgsnExtStatusGroupRev1.')
cGgsnExtConfigurationsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 3)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtAaaAccountInterPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtConfigurationsGroup = cGgsnExtConfigurationsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cGgsnExtConfigurationsGroup.setDescription('A collection of configuration objects in GGSN. This is deprecated by cGgsnExtConfigurationsGroupRev1.')
cGgsnExtThruputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 4)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputLastCollected"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtUpstreamByteCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDownstreamByteCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtUpstreamPktCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDownstreamPktCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtThruputGroup = cGgsnExtThruputGroup.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtThruputGroup.setDescription('A collection of throughput statistics objects in GGSN.')
cGgsnExtStatusGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 5)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtGtpPppRegenCreatedIntfs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtGtpDtActivePDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtActivatedMs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatusGroupRev1 = cGgsnExtStatusGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatusGroupRev1.setDescription('A collection of statistics objects in GGSN.')
cGgsnExtConfigurationsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 6)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtAaaAccountInterPeriod"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDfpCpuLoad"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDfpMemLoad"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtThruputHistory"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtCallRateInterval"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtCallRateHistory"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtPrepaidStandAlone"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtConfigurationsGroupRev1 = cGgsnExtConfigurationsGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtConfigurationsGroupRev1.setDescription('A collection of configuration objects in GGSN.')
cGgsnExtStatisticsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 7)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtPdpNonExistentMsgs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtCallRateLastCollected"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtCreatedPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtDeletedPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistCallRateInterval"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistCallRateLastCollected"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistCreatedPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistDeletedPDPs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistThruputLastCollected"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistUpstreamByteCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistDownstreamByteCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistUpstreamPktCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtHistDownstreamPktCount"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberTid"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMSAddrType"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMSAddr"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberSource"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberSGSNAddrType"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberSGSNAddr"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberAPN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatisticsGroupRev1 = cGgsnExtStatisticsGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatisticsGroupRev1.setDescription('A collection of statistics objects in GGSN.')
cGgsnExtConfigurationsGroupRev1Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 8)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtRedundancyEnabled"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtChargSyncWindowSvcSeqnum"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtChargSyncWindowCdrSeqnum"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtChargSynWindowGtppSeqnum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtConfigurationsGroupRev1Sup1 = cGgsnExtConfigurationsGroupRev1Sup1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtConfigurationsGroupRev1Sup1.setDescription('A collection of configuration objects in GGSN. This is supplementary to cGgsnExtConfigurationsGroupRev1.')
cGgsnExtStatisticsGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 9)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtTotalCreatedv4v6Pdps"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTotalDeletedv4v6Pdps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatisticsGroupSup1 = cGgsnExtStatisticsGroupSup1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatisticsGroupSup1.setDescription('A collection of objects for GgsnExtStatistics for dual stack support.This group is supplementary to cGgsnExtStatisticsGroupRev1.')
cGgsnExtStatusGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 10)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtActivatedv4v6Gtpv0Pdp"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtActivatedv4v6Gtpv1Pdp"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtActivatedv4v6MobileStations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatusGroupSup1 = cGgsnExtStatusGroupSup1.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatusGroupSup1.setDescription('A collection of objects related to IPv4v6 objects for GTP v0/v1 PDP Contexts and Mobile stations.This group is supplementary to cGgsnExtStatusGroupRev1.')
cGgsnExtStatisticsGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 11)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceActivatedSessions"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceSignalActivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceMgmtActivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceNewSesActivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceActSesActivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceSignalActivFailures"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceMgmtActivFailures"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceDeactivatedSessions"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceSignalDeactivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceMgmtDeactivations"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceSignalDeactivFailures"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceMgmtDeactivFailures"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceTotalXmlFiles"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceTotalXmlFailNotifFiles"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransSucc"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransPri"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransSec"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTotalTransFails"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransPriFails"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransRetries"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlFileTransSecFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatisticsGroupSup2 = cGgsnExtStatisticsGroupSup2.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatisticsGroupSup2.setDescription('A collection of objects for GgsnExtStatistics for subscriber trace support.This group is supplementary to cGgsnExtStatisticsGroupRev1.')
cGgsnExtConfigurationsGroupRev1Sup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 12)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceBufferLimit"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceXmlTransferInterval"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceNotifEnable"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTracePrimaryUrl"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceSecondaryUrl"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceInfoTxFailRetry"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceInfoTxFailRetryInterval"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtConfigurationsGroupRev1Sup2 = cGgsnExtConfigurationsGroupRev1Sup2.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtConfigurationsGroupRev1Sup2.setDescription('A collection of configuration objects in this Gateway. This is supplementary to cGgsnExtConfigurationsGroupRev1.')
cGgsnExtStatusGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 13)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceStatusImei"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceStatusSource"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtTraceStatusReference"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatusGroupSup2 = cGgsnExtStatusGroupSup2.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatusGroupSup2.setDescription('A collection of objects related to subscriber tracing. This group is supplementary to cGgsnExtStatusGroupRev1.')
cGgsnExtNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 14)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtSubsTraceFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtNotificationsGroup = cGgsnExtNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtNotificationsGroup.setDescription('A notification group to support the subscriber equipment trace activation failure notification.')
cGgsnExtNotificationInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 15)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMcc"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberMnc"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscriberTraceId"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtSubscrTraceFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtNotificationInfoGroup = cGgsnExtNotificationInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtNotificationInfoGroup.setDescription('A collection of objects to be used by the subscriber equipment trace activation failure notification.')
cGgsnExtStatisticsGroupSup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 647, 2, 2, 16)).setObjects(("CISCO-GGSN-EXT-MIB", "cGgsnExtConditionalIEMissingMsgs"), ("CISCO-GGSN-EXT-MIB", "cGgsnExtInvalidReplyPeerMsgs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cGgsnExtStatisticsGroupSup3 = cGgsnExtStatisticsGroupSup3.setStatus('current')
if mibBuilder.loadTexts: cGgsnExtStatisticsGroupSup3.setDescription('A collection of objects for GgsnExtStatistics for failure cause code counters.This group is supplementary to cGgsnExtStatisticsGroupRev1.')
mibBuilder.exportSymbols("CISCO-GGSN-EXT-MIB", cGgsnExtTracePrimaryUrl=cGgsnExtTracePrimaryUrl, cGgsnExtTraceXmlTransferInterval=cGgsnExtTraceXmlTransferInterval, cGgsnExtActivatedv4v6Gtpv1Pdp=cGgsnExtActivatedv4v6Gtpv1Pdp, cGgsnExtTraceSignalDeactivations=cGgsnExtTraceSignalDeactivations, ciscoGgsnExtStatistics=ciscoGgsnExtStatistics, cGgsnExtSubscriberMSAddrType=cGgsnExtSubscriberMSAddrType, cGgsnExtMIBComplianceRev3=cGgsnExtMIBComplianceRev3, cGgsnExtSubsTraceFailNotif=cGgsnExtSubsTraceFailNotif, cGgsnExtTraceNotifEnable=cGgsnExtTraceNotifEnable, cGgsnExtTraceSignalActivFailures=cGgsnExtTraceSignalActivFailures, cGgsnExtHistThruputStatsTable=cGgsnExtHistThruputStatsTable, cGgsnExtGtpDtActivePDPs=cGgsnExtGtpDtActivePDPs, cGgsnExtCreatedPDPs=cGgsnExtCreatedPDPs, cGgsnExtActivatedMs=cGgsnExtActivatedMs, cGgsnExtCallRateStatsEntry=cGgsnExtCallRateStatsEntry, cGgsnExtTraceMgmtDeactivations=cGgsnExtTraceMgmtDeactivations, ciscoGgsnExtTraceStatusEntry=ciscoGgsnExtTraceStatusEntry, cGgsnExtTraceStatusReference=cGgsnExtTraceStatusReference, cGgsnExtStatusGroupSup2=cGgsnExtStatusGroupSup2, cGgsnExtHistCallRateIndex=cGgsnExtHistCallRateIndex, cGgsnExtTraceActivatedSessions=cGgsnExtTraceActivatedSessions, cGgsnExtMIBComplianceRev2=cGgsnExtMIBComplianceRev2, cGgsnExtStatisticsGroupSup1=cGgsnExtStatisticsGroupSup1, cGgsnExtThruputLastCollected=cGgsnExtThruputLastCollected, cGgsnExtHistDownstreamPktCount=cGgsnExtHistDownstreamPktCount, cGgsnExtConfigurationsGroupRev1Sup1=cGgsnExtConfigurationsGroupRev1Sup1, cGgsnExtStatusGroup=cGgsnExtStatusGroup, cGgsnExtMIBComplianceRev4=cGgsnExtMIBComplianceRev4, cGgsnExtSentErrorIndications=cGgsnExtSentErrorIndications, cGgsnExtUpstreamPktCount=cGgsnExtUpstreamPktCount, cGgsnExtTraceBufferLimit=cGgsnExtTraceBufferLimit, cGgsnExtHistUpstreamPktCount=cGgsnExtHistUpstreamPktCount, cGgsnExtTraceXmlFileTransSecFails=cGgsnExtTraceXmlFileTransSecFails, cGgsnExtSubscriberMsisdn=cGgsnExtSubscriberMsisdn, cGgsnExtCallRateInterval=cGgsnExtCallRateInterval, cGgsnExtConfigurationsGroupRev1=cGgsnExtConfigurationsGroupRev1, cGgsnExtMIBGroups=cGgsnExtMIBGroups, cGgsnExtSubscriberMcc=cGgsnExtSubscriberMcc, cGgsnExtConfigurationsGroupRev1Sup2=cGgsnExtConfigurationsGroupRev1Sup2, cGgsnExtThruputHistory=cGgsnExtThruputHistory, cGgsnExtRedundancyEnabled=cGgsnExtRedundancyEnabled, cGgsnExtHistUpstreamByteCount=cGgsnExtHistUpstreamByteCount, cGgsnExtStatisticsGroupRev1=cGgsnExtStatisticsGroupRev1, cGgsnExtHistCallRateLastCollected=cGgsnExtHistCallRateLastCollected, cGgsnExtActivatedv4v6MobileStations=cGgsnExtActivatedv4v6MobileStations, cGgsnExtSentCoaUpdateReqs=cGgsnExtSentCoaUpdateReqs, cGgsnExtTraceNewSesActivations=cGgsnExtTraceNewSesActivations, cGgsnExtTraceXmlFileTransSec=cGgsnExtTraceXmlFileTransSec, cGgsnExtThruputStatsEntry=cGgsnExtThruputStatsEntry, cGgsnExtTraceMgmtActivFailures=cGgsnExtTraceMgmtActivFailures, cGgsnExtSubscriberTraceProfileTable=cGgsnExtSubscriberTraceProfileTable, cGgsnExtDfpCpuLoad=cGgsnExtDfpCpuLoad, cGgsnExtStatusGroupSup1=cGgsnExtStatusGroupSup1, cGgsnExtDfpMemLoad=cGgsnExtDfpMemLoad, cGgsnExtHistThruputStatsEntry=cGgsnExtHistThruputStatsEntry, cGgsnExtSubscriberTable=cGgsnExtSubscriberTable, cGgsnExtRcvdDtPdpErrorIndications=cGgsnExtRcvdDtPdpErrorIndications, cGgsnExtAaaAccountInterPeriod=cGgsnExtAaaAccountInterPeriod, cGgsnExtSubscriberTraceId=cGgsnExtSubscriberTraceId, cGgsnExtTraceProfile=cGgsnExtTraceProfile, cGgsnExtThruputGroup=cGgsnExtThruputGroup, ciscoGgsnExtNotifInfo=ciscoGgsnExtNotifInfo, cGgsnExtTraceStatusImei=cGgsnExtTraceStatusImei, cGgsnExtNotificationInfoGroup=cGgsnExtNotificationInfoGroup, cGgsnExtConditionalIEMissingMsgs=cGgsnExtConditionalIEMissingMsgs, cGgsnExtTraceMgmtDeactivFailures=cGgsnExtTraceMgmtDeactivFailures, cGgsnExtSubscriberSGSNAddrType=cGgsnExtSubscriberSGSNAddrType, PYSNMP_MODULE_ID=ciscoGgsnExtMIB, cGgsnExtMIBComplianceRev1=cGgsnExtMIBComplianceRev1, cGgsnExtNoWaitSgsnLocalDelPDPs=cGgsnExtNoWaitSgsnLocalDelPDPs, cGgsnExtPrepaidStandAlone=cGgsnExtPrepaidStandAlone, cGgsnExtSubscriberAPN=cGgsnExtSubscriberAPN, cGgsnExtStatisticsGroup=cGgsnExtStatisticsGroup, cGgsnExtSubscriberTraceProfileEntry=cGgsnExtSubscriberTraceProfileEntry, ciscoGgsnExtMIBNotifs=ciscoGgsnExtMIBNotifs, cGgsnExtDownstreamPktCount=cGgsnExtDownstreamPktCount, cGgsnExtHistDeletedPDPs=cGgsnExtHistDeletedPDPs, cGgsnExtCallRateHistory=cGgsnExtCallRateHistory, ciscoGgsnExtNotifMgmt=ciscoGgsnExtNotifMgmt, cGgsnExtThruputStatsTable=cGgsnExtThruputStatsTable, cGgsnExtTotalDtUpdFailDeletedPDPs=cGgsnExtTotalDtUpdFailDeletedPDPs, cGgsnExtConfigurationsGroup=cGgsnExtConfigurationsGroup, cGgsnExtRcvdErrorIndications=cGgsnExtRcvdErrorIndications, cGgsnExtPdpNonExistentMsgs=cGgsnExtPdpNonExistentMsgs, cGgsnExtHistCreatedPDPs=cGgsnExtHistCreatedPDPs, cGgsnExtSubscriberMSAddr=cGgsnExtSubscriberMSAddr, cGgsnExtRcvdCoaMsgs=cGgsnExtRcvdCoaMsgs, cGgsnExtCallRateStatsInterval=cGgsnExtCallRateStatsInterval, cGgsnExtSubscriberEntry=cGgsnExtSubscriberEntry, cGgsnExtHistThruputLastCollected=cGgsnExtHistThruputLastCollected, cGgsnExtTraceTotalXmlFiles=cGgsnExtTraceTotalXmlFiles, ciscoGgsnExtTraceStatistics=ciscoGgsnExtTraceStatistics, cGgsnExtTraceStatusImsi=cGgsnExtTraceStatusImsi, cGgsnExtChargSyncWindowSvcSeqnum=cGgsnExtChargSyncWindowSvcSeqnum, cGgsnExtHistDownstreamByteCount=cGgsnExtHistDownstreamByteCount, cGgsnExtDiscardedCoaMsgs=cGgsnExtDiscardedCoaMsgs, cGgsnExtTraceXmlFileTransPri=cGgsnExtTraceXmlFileTransPri, cGgsnExtDeletedPDPs=cGgsnExtDeletedPDPs, ciscoGgsnExtStatus=ciscoGgsnExtStatus, cGgsnExtTraceXmlFileTotalTransFails=cGgsnExtTraceXmlFileTotalTransFails, cGgsnExtTraceSignalDeactivFailures=cGgsnExtTraceSignalDeactivFailures, cGgsnExtCallRateLastCollected=cGgsnExtCallRateLastCollected, cGgsnExtSubscriberSGSNAddr=cGgsnExtSubscriberSGSNAddr, cGgsnExtHistCallRateStatsTable=cGgsnExtHistCallRateStatsTable, cGgsnExtSentPdpUpdateReqs=cGgsnExtSentPdpUpdateReqs, cGgsnExtInvalidReplyPeerMsgs=cGgsnExtInvalidReplyPeerMsgs, cGgsnExtDownstreamByteCount=cGgsnExtDownstreamByteCount, cGgsnExtTraceDeactivatedSessions=cGgsnExtTraceDeactivatedSessions, cGgsnExtTraceXmlFileTransSucc=cGgsnExtTraceXmlFileTransSucc, cGgsnExtStatisticsGroupSup2=cGgsnExtStatisticsGroupSup2, cGgsnExtTraceInfoTxFailRetryInterval=cGgsnExtTraceInfoTxFailRetryInterval, cGgsnExtChargSynWindowGtppSeqnum=cGgsnExtChargSynWindowGtppSeqnum, cGgsnExtThruputInterval=cGgsnExtThruputInterval, cGgsnExtSubscrTraceFailReason=cGgsnExtSubscrTraceFailReason, cGgsnExtCallRateStatsTable=cGgsnExtCallRateStatsTable, cGgsnExtUpstreamByteCount=cGgsnExtUpstreamByteCount, cGgsnExtSubscriberSource=cGgsnExtSubscriberSource, cGgsnExtRcvdSuccPdpUpdateResponses=cGgsnExtRcvdSuccPdpUpdateResponses, cGgsnExtNotificationsGroup=cGgsnExtNotificationsGroup, cGgsnExtTraceRowStatus=cGgsnExtTraceRowStatus, ciscoGgsnExtTraceXmlStatistics=ciscoGgsnExtTraceXmlStatistics, cGgsnExtStatisticsGroupSup3=cGgsnExtStatisticsGroupSup3, cGgsnExtTraceTotalXmlFailNotifFiles=cGgsnExtTraceTotalXmlFailNotifFiles, cGgsnExtMIBCompliance=cGgsnExtMIBCompliance, ciscoGgsnExtMIBConform=ciscoGgsnExtMIBConform, cGgsnExtTotalCreatedv4v6Pdps=cGgsnExtTotalCreatedv4v6Pdps, cGgsnExtTraceInfoTxFailRetry=cGgsnExtTraceInfoTxFailRetry, ciscoGgsnExtMIB=ciscoGgsnExtMIB, cGgsnExtHistThruputInterval=cGgsnExtHistThruputInterval, cGgsnExtChargSyncWindowCdrSeqnum=cGgsnExtChargSyncWindowCdrSeqnum, cGgsnExtTraceSecondaryUrl=cGgsnExtTraceSecondaryUrl, cGgsnExtGtpPppRegenCreatedIntfs=cGgsnExtGtpPppRegenCreatedIntfs, cGgsnExtTraceMgmtActivations=cGgsnExtTraceMgmtActivations, cGgsnExtTraceXmlFileTransPriFails=cGgsnExtTraceXmlFileTransPriFails, cGgsnExtNoReqSgsnLocalDelPDPs=cGgsnExtNoReqSgsnLocalDelPDPs, cGgsnExtTraceSignalActivations=cGgsnExtTraceSignalActivations, cGgsnExtSubscriberTid=cGgsnExtSubscriberTid, ciscoGgsnExtMIBObjects=ciscoGgsnExtMIBObjects, ciscoGgsnExtTraceStatusTable=ciscoGgsnExtTraceStatusTable, cGgsnExtTraceActSesActivations=cGgsnExtTraceActSesActivations, cGgsnExtTraceXmlFileTransRetries=cGgsnExtTraceXmlFileTransRetries, ciscoGgsnExtConfigurations=ciscoGgsnExtConfigurations, cGgsnExtHistThruputIndex=cGgsnExtHistThruputIndex, cGgsnExtTraceStatusSource=cGgsnExtTraceStatusSource, cGgsnExtMIBCompliances=cGgsnExtMIBCompliances, cGgsnExtStatusGroupRev1=cGgsnExtStatusGroupRev1, cGgsnExtSubscriberMnc=cGgsnExtSubscriberMnc, cGgsnExtTotalDeletedv4v6Pdps=cGgsnExtTotalDeletedv4v6Pdps, cGgsnExtHistCallRateStatsEntry=cGgsnExtHistCallRateStatsEntry, cGgsnExtTotalDtEnabled=cGgsnExtTotalDtEnabled, cGgsnExtActivatedv4v6Gtpv0Pdp=cGgsnExtActivatedv4v6Gtpv0Pdp, cGgsnExtHistCallRateInterval=cGgsnExtHistCallRateInterval)
