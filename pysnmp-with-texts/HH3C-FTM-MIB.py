#
# PySNMP MIB module HH3C-FTM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-FTM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:27:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, TimeTicks, ModuleIdentity, MibIdentifier, iso, Integer32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Unsigned32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "ModuleIdentity", "MibIdentifier", "iso", "Integer32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Unsigned32", "Counter64", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cFtmManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1))
if mibBuilder.loadTexts: hh3cFtmManMIB.setLastUpdated('200401131055Z')
if mibBuilder.loadTexts: hh3cFtmManMIB.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cFtmManMIB.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cFtmManMIB.setDescription('this MIB will maintain Fabric topology management. The MIB includes unit-id, unit-name and fabric authentication information.')
hh3cFtm = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1))
hh3cFtmManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1))
hh3cFtmUnitTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cFtmUnitTable.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitTable.setDescription('A table of informations of XRN-Fabric Unit.')
hh3cFtmUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-FTM-MIB", "hh3cFtmIndex"))
if mibBuilder.loadTexts: hh3cFtmUnitEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitEntry.setDescription('An entry for configuring unit informations of XRN-Fabric.')
hh3cFtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cFtmIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmIndex.setDescription('The unique index of a unit.')
hh3cFtmUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtmUnitID.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitID.setDescription('Identifer of unit in fabric. Its value should be between 1 and the maximum which defines in product specification. An exception is described in description of hh3cFtmNumberMode. In that case, the value of this object remains its original value after set to zero. ')
hh3cFtmUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtmUnitName.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitName.setDescription('Name of unit in XRN-Fabric. It consists of no more than 64 characters.')
hh3cFtmUnitRole = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFtmUnitRole.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitRole.setDescription('Role of unit in XRN-Fabric. One unit in a XRN-Fabric acts as master role and others act as slave roles')
hh3cFtmNumberMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("automatic", 0), ("manual", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFtmNumberMode.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmNumberMode.setDescription('Numbering Mode of unit in XRN-Fabric. If the unit ID is assigned by the auto numbering algorithm, the numbering mode will be automatic numbering; if the unit ID (hh3cFtmUnitID) is assigned by the user, the numbering mode will be manual numbering; if hh3cFtmUnitID is set to be zero, the numbering mode will become automatic numbering.')
hh3cFtmAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ftm-none", 0), ("ftm-simple", 1), ("ftm-md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtmAuthMode.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmAuthMode.setDescription('Authentication mode of XRN-Fabric.')
hh3cFtmAuthValue = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtmAuthValue.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmAuthValue.setDescription('Authentication value of XRN-Fabric Feature. ftm_none mode means no authentication. In simple mode, the value is password of a string of 1 to 16 charactors. While in md5 mode, the value is key of a string within 16 charactors.')
hh3cFtmFabricVlanID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtmFabricVlanID.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmFabricVlanID.setDescription('The object is used for get and set the Fabric VlanID. Only is the equipment not in the stacking status, the value can be set.')
hh3cFtmFabricType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("outofStack", 1), ("line", 2), ("ring", 3), ("mesh", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFtmFabricType.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmFabricType.setDescription('Topology type of Fabric. outofStack means this unit is not in stack.')
hh3cFtmManMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 3))
hh3cFtmUnitIDChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 3, 1)).setObjects(("HH3C-FTM-MIB", "hh3cFtmIndex"), ("HH3C-FTM-MIB", "hh3cFtmUnitID"))
if mibBuilder.loadTexts: hh3cFtmUnitIDChange.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitIDChange.setDescription('When unit id changes in fabric, this trap is sent with unit index and its new id .')
hh3cFtmUnitNameChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 3, 2)).setObjects(("HH3C-FTM-MIB", "hh3cFtmIndex"), ("HH3C-FTM-MIB", "hh3cFtmUnitName"))
if mibBuilder.loadTexts: hh3cFtmUnitNameChange.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmUnitNameChange.setDescription('When unit name changes in fabric, this trap is sent with unit index and its new name.')
hh3cFtmManMIBComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2))
hh3cFtmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2, 1))
hh3cFtmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2, 1, 1)).setObjects(("HH3C-FTM-MIB", "hh3cFtmConfigGroup"), ("HH3C-FTM-MIB", "hh3cFtmNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cFtmMIBCompliance = hh3cFtmMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmMIBCompliance.setDescription('The compliance statement for FTM implementing the MIB.')
hh3cFtmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2, 2))
hh3cFtmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2, 2, 1)).setObjects(("HH3C-FTM-MIB", "hh3cFtmUnitID"), ("HH3C-FTM-MIB", "hh3cFtmUnitName"), ("HH3C-FTM-MIB", "hh3cFtmAuthMode"), ("HH3C-FTM-MIB", "hh3cFtmAuthValue"), ("HH3C-FTM-MIB", "hh3cFtmFabricVlanID"), ("HH3C-FTM-MIB", "hh3cFtmFabricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cFtmConfigGroup = hh3cFtmConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmConfigGroup.setDescription('The basic collection of objects for sending trap of FTM Management.')
hh3cFtmNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 25506, 2, 1, 1, 2, 2, 2)).setObjects(("HH3C-FTM-MIB", "hh3cFtmUnitIDChange"), ("HH3C-FTM-MIB", "hh3cFtmUnitNameChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cFtmNotificationGroup = hh3cFtmNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cFtmNotificationGroup.setDescription('The basic collection of objects for sending trap of FTM Management.')
mibBuilder.exportSymbols("HH3C-FTM-MIB", hh3cFtmUnitNameChange=hh3cFtmUnitNameChange, hh3cFtmConfigGroup=hh3cFtmConfigGroup, hh3cFtmManMIBNotification=hh3cFtmManMIBNotification, hh3cFtmUnitTable=hh3cFtmUnitTable, hh3cFtmUnitName=hh3cFtmUnitName, hh3cFtmAuthValue=hh3cFtmAuthValue, hh3cFtm=hh3cFtm, hh3cFtmFabricType=hh3cFtmFabricType, hh3cFtmUnitEntry=hh3cFtmUnitEntry, hh3cFtmAuthMode=hh3cFtmAuthMode, hh3cFtmNumberMode=hh3cFtmNumberMode, hh3cFtmIndex=hh3cFtmIndex, hh3cFtmUnitRole=hh3cFtmUnitRole, hh3cFtmMIBCompliance=hh3cFtmMIBCompliance, hh3cFtmManMIBObjects=hh3cFtmManMIBObjects, PYSNMP_MODULE_ID=hh3cFtmManMIB, hh3cFtmMIBCompliances=hh3cFtmMIBCompliances, hh3cFtmMIBGroups=hh3cFtmMIBGroups, hh3cFtmManMIB=hh3cFtmManMIB, hh3cFtmManMIBComformance=hh3cFtmManMIBComformance, hh3cFtmUnitID=hh3cFtmUnitID, hh3cFtmNotificationGroup=hh3cFtmNotificationGroup, hh3cFtmUnitIDChange=hh3cFtmUnitIDChange, hh3cFtmFabricVlanID=hh3cFtmFabricVlanID)
