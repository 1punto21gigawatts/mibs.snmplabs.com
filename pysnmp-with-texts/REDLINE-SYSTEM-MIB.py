#
# PySNMP MIB module REDLINE-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDLINE-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
redlineSystem, = mibBuilder.importSymbols("REDLINE-MIB", "redlineSystem")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, IpAddress, Bits, ModuleIdentity, Gauge32, Counter64, NotificationType, MibIdentifier, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "IpAddress", "Bits", "ModuleIdentity", "Gauge32", "Counter64", "NotificationType", "MibIdentifier", "Unsigned32", "TimeTicks")
RowStatus, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime")
redlineSystemMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1))
redlineSystemMib.setRevisions(('2005-03-31 15:43',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: redlineSystemMib.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: redlineSystemMib.setLastUpdated('200503311543Z')
if mibBuilder.loadTexts: redlineSystemMib.setOrganization('Redline Communications Inc.')
if mibBuilder.loadTexts: redlineSystemMib.setContactInfo('Marek Koziol email: mkoziol@redlinecommunications.com')
if mibBuilder.loadTexts: redlineSystemMib.setDescription('This MIB module contains Redline extensions to the SNMPv2 MIB System Group.')
redlineSystemSystemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1))
redlineSystemSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSerialNumber.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSerialNumber.setDescription('The serial number of the unit.')
redlineSystemSysControl = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 2))
redlineSystemSystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSystemReboot.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSystemReboot.setDescription('Setting this variable to 2 causes a reboot of the system.')
redlineSystemSysDhcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 3))
redlineSystemDHCPServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 3, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemDHCPServerIpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemDHCPServerIpAddressType.setDescription('The INET address type of Ip address of DHCP server. IPv4 type supported only.')
redlineSystemDHCPServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 3, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemDHCPServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemDHCPServerIpAddress.setDescription("The INET address of DHCP server. Note: This object can not be set if usage of DHCP server is disabled. An attempt to set the address will fail and return 'resourceUnavailable' error")
redlineSystemSysIpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4))
redlineSystemIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemIpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemIpAddressType.setDescription('The INET address type of Ip address of the system. IPv4 type supported only.')
redlineSystemIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemIpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemIpAddress.setDescription("The INET address of the system. Note: This object can not be set if usage of DHCP server is enabled. An attempt to set the address will fail and return 'resourceUnavailable' error")
redlineSystemSubnetMaskAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSubnetMaskAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSubnetMaskAddressType.setDescription('The INET address type of subnet mask of the system. IPv4 type supported only.')
redlineSystemSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSubnetMask.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSubnetMask.setDescription("The Subnet Mask of the system. Note: This object can not be set if usage of DHCP server is enabled. An attempt to set the address will fail and return 'resourceUnavailable' error")
redlineSystemDefGatewayAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemDefGatewayAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemDefGatewayAddressType.setDescription('The INET address type of the default gateway. IPv4 type supported only.')
redlineSystemDefGatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 4, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemDefGatewayAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemDefGatewayAddress.setDescription("The INET address of the default gateway. Note: This object can not be set if usage of DHCP server is enabled. An attempt to set the address will fail and return 'resourceUnavailable' error")
redlineSystemSysSyslogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 5))
redlineSystemSyslogServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 5, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSyslogServerIpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSyslogServerIpAddressType.setDescription('The INET address type of Ip address of Syslog server. IPv4 type supported only.')
redlineSystemSyslogServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 1, 5, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSyslogServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSyslogServerIpAddress.setDescription("The INET address of Syslog server. Note: Entering '0.0.0.0' as an address will indicate to the system that Syslog capability is not to be used.")
redlineSystemSoftwareObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2))
redlineSystemSwActiveVersion = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwActiveVersion.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwActiveVersion.setDescription('The s/w version of the active (running) image.')
redlineSystemSwAlternateVersion = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwAlternateVersion.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwAlternateVersion.setDescription('The s/w version of the alternate (non-active) image.')
redlineSystemSwActivateAlternate = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("activate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSwActivateAlternate.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwActivateAlternate.setDescription("Setting this to 2 triggers the switch-over to the alternate s/w image and reboot of the system. Before the switch-over a validation of the alternate image is performed and if it fails the 'inconsistentValue' error status is returned.")
redlineSystemSwSyncAlternateTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4), )
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateTable.setDescription("This table contains at most one entry representing a software synchronization process that is either currently in progress or one that was completed. When requested synchronization,the active s/w i image and the active configuration are copied to the alternate s/w image and configuration, respectively. A management station can create this entry if and only if either the table is empty or the only entry is for a synchronization that has already been completed. An attempt to create or write this entry when a synchronization is already in progress results in the 'resourceUnavailable' error status. The redlineSystemSwSyncAlternateStatus state object is used to control and monitor a s/w synchronization process. Setting it to the 'synchronizeAlternate' value starts a new synchronization if none is active at the time (otherwise an error status is returned).")
redlineSystemSwSyncAlternateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemSwSyncAlternateIndex"))
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateEntry.setDescription('This entry contains information about a current or last software synchronization.')
redlineSystemSwSyncAlternateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateIndex.setDescription('The index of the software isynchronization table. The only value allowed is 1.')
redlineSystemSwSyncAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("synchronizeAlternate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemSwSyncAlternate.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternate.setDescription('Setting it to 2 will synchronize the alternate s/w image and configuration database, i.e. the active s/w image and the active configuration are copied to the alternate s/w image and configuration, respectively.')
redlineSystemSwSyncAlternateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateStatus.setDescription('The status of the current or last software synchronization.')
redlineSystemSwSyncAlternateTimeEnded = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 4, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateTimeEnded.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwSyncAlternateTimeEnded.setDescription('The date and time this software synchronization finished.')
redlineSystemSwDownloadTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5), )
if mibBuilder.loadTexts: redlineSystemSwDownloadTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadTable.setDescription("This table contains at most one entry representing a software download process that is either currently in progress or one that was completed. A management station can create this entry if and only if either the table is empty or the only entry is for a download that has already been completed. An attempt to create or write this entry when a download is already in progress results in the 'resourceUnavailable' error status. The redlineSystemSwDownloadStatus state object is used to control and monitor a s/w download process. Setting it to the 'download' value starts a new download if none is active at the time (otherwise an error status is returned).")
redlineSystemSwDownloadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadIndex"))
if mibBuilder.loadTexts: redlineSystemSwDownloadEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadEntry.setDescription('This entry contains information about a current or last software download.')
redlineSystemSwDownloadIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: redlineSystemSwDownloadIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadIndex.setDescription('The index of the software download table. The only value allowed is 1.')
redlineSystemSwDownloadFtpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpAddressType.setDescription('The INET address type of the software upgrade FTP server. IPv4 type supported only.')
redlineSystemSwDownloadFtpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpAddress.setDescription('The INET address of the FTP server.')
redlineSystemSwDownloadFtpUser = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpUser.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpUser.setDescription('The FTP user name.')
redlineSystemSwDownloadFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpPassword.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpPassword.setDescription('The FTP user password. After this object is created it is not accessible.')
redlineSystemSwDownloadFtpFile = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpFile.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFtpFile.setDescription('The full software image file path name as required by the FTP server.')
redlineSystemSwDownloadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("download", 1), ("validate", 2), ("commit", 3), ("success", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwDownloadStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadStatus.setDescription('The status of the current or last software download.')
redlineSystemSwDownloadTimeEnded = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwDownloadTimeEnded.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadTimeEnded.setDescription('The date and time this software download finished.')
redlineSystemSwDownloadFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 2, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemSwDownloadFailureReason.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadFailureReason.setDescription('The short explanation of why software download failed. In a case of success this object will contain empty string.')
redlineSystemConfigurationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3))
redlineSystemConfigBackupTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1), )
if mibBuilder.loadTexts: redlineSystemConfigBackupTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupTable.setDescription("This table contains at most one entry representing a configuration backup process that is either currently in progress or one that was completed. A management station can create this entry if and only if either the table is empty or the only entry is for a backup that has already been completed. An attempt to create or write this entry when a backup is already in progress results in the 'resourceUnavailable' error status.")
redlineSystemConfigBackupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupIndex"))
if mibBuilder.loadTexts: redlineSystemConfigBackupEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupEntry.setDescription('This entry contains information about a current or last configuration backup.')
redlineSystemConfigBackupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: redlineSystemConfigBackupIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupIndex.setDescription('The index of the software download table. The only value allowed is 1.')
redlineSystemConfigBackupConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("alternate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupConfigType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupConfigType.setDescription('Specifies the type of configuration to be backup.')
redlineSystemConfigBackupFtpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpAddressType.setDescription('The INET address type of the configuration backup FTP server. IPv4 type supported only.')
redlineSystemConfigBackupFtpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpAddress.setDescription('The INET address of the FTP server.')
redlineSystemConfigBackupFtpUser = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpUser.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpUser.setDescription('The FTP user name.')
redlineSystemConfigBackupFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpPassword.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpPassword.setDescription('The FTP user password. After this object is created it is not accessible.')
redlineSystemConfigBackupFtpFile = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpFile.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFtpFile.setDescription('The full software image file path name as required by the FTP server.')
redlineSystemConfigBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("backup", 1), ("commit", 2), ("upload", 3), ("success", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemConfigBackupStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupStatus.setDescription('The status of the current or last configuration backup.')
redlineSystemConfigBackupFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemConfigBackupFailureReason.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigBackupFailureReason.setDescription('The short explanation of why configuration backup failed. In a case of success this object will contain empty string.')
redlineSystemConfigRestoreTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2), )
if mibBuilder.loadTexts: redlineSystemConfigRestoreTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreTable.setDescription("This table contains at most one entry representing a configuration restore process that is either currently in progress or one that was completed. A management station can create this entry if and only if either the table is empty or the only entry is for a restore that has already been completed. An attempt to create or write this entry when a restore is already in progress results in the 'resourceUnavailable' error status. After the process is finished with the status set to 'success', then (and only then) the system will be automatically rebooted in order for the newly restored parameters to become active.")
redlineSystemConfigRestoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreIndex"))
if mibBuilder.loadTexts: redlineSystemConfigRestoreEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreEntry.setDescription('This entry contains information about a current or last configuration restore.')
redlineSystemConfigRestoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: redlineSystemConfigRestoreIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreIndex.setDescription('The index of the software download table. The only value allowed is 1.')
redlineSystemConfigRestoreConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("alternate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreConfigType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreConfigType.setDescription('Specifies the type of configuration to be restored.')
redlineSystemConfigRestoreFtpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpAddressType.setDescription('The INET address type of the configuration restore FTP server. IPv4 type supported only.')
redlineSystemConfigRestoreFtpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpAddress.setDescription('The INET address of the FTP server.')
redlineSystemConfigRestoreFtpUser = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpUser.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpUser.setDescription('The FTP user name.')
redlineSystemConfigRestoreFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpPassword.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpPassword.setDescription('The FTP user password. After this object is created it is not accessible.')
redlineSystemConfigRestoreFtpFile = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpFile.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFtpFile.setDescription('The full software image file path name as required by the FTP server.')
redlineSystemConfigRestoreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("restore", 1), ("download", 2), ("write", 3), ("success", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemConfigRestoreStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreStatus.setDescription('The status of the current or last configuration restore.')
redlineSystemConfigRestoreFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 3, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redlineSystemConfigRestoreFailureReason.setStatus('current')
if mibBuilder.loadTexts: redlineSystemConfigRestoreFailureReason.setDescription('The short explanation of why configuration restore failed. In a case of success this object will contain empty string.')
redlineSystemNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4))
redlineSystemTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1))
redlineSystemTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 2))
redlineSystemTrapReceiverTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: redlineSystemTrapReceiverTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverTable.setDescription('This table contains information about provisioned trap receivers i.e. the trap receivers that this agent will send notifications to. The entries of this table are indexed by their IP address and port values. The maximum number of entries in this table is eight.')
redlineSystemTrapReceiverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverIndex"))
if mibBuilder.loadTexts: redlineSystemTrapReceiverEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverEntry.setDescription("This entry contains information about a provisioned trap receiver (a trap destination from the agent's point of view.")
redlineSystemTrapReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: redlineSystemTrapReceiverIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverIndex.setDescription('')
redlineSystemTrapReceiverAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemTrapReceiverAddressType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverAddressType.setDescription('The INET address type of the trap receiver.')
redlineSystemTrapReceiverAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemTrapReceiverAddress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverAddress.setDescription('The INET address of the trap receiver.')
redlineSystemTrapReceiverPort = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(162)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemTrapReceiverPort.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverPort.setDescription('The UDP port of the trap receiver.')
redlineSystemTrapReceiverCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemTrapReceiverCommunity.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverCommunity.setDescription('The community string of the trap receiver.')
redlineSystemTrapReceiverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemTrapReceiverStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapReceiverStatus.setDescription("This object is used to create and delete rows in the redlineSystemTrapReceiverTable table. Only the 'createAndGo' and 'destroy' values can be specified in a set operation when an entry is created or destroyed, respectively.")
redlineSystemTrapActivationTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 2), )
if mibBuilder.loadTexts: redlineSystemTrapActivationTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapActivationTable.setDescription('This table contains information about trap activation in the system i.e. the trap generation can be enabled or disabled. The entries of this table are indexed by the trap OID.')
redlineSystemTrapActivationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 2, 1), ).setIndexNames((1, "REDLINE-SYSTEM-MIB", "redlineSystemTrapObjectID"))
if mibBuilder.loadTexts: redlineSystemTrapActivationEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapActivationEntry.setDescription('This entry contains information about trap acgtivation state.')
redlineSystemTrapObjectID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 2, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: redlineSystemTrapObjectID.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapObjectID.setDescription('Identifies the trap which generation is to be controlled by this entry.')
redlineSystemTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemTrapEnable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemTrapEnable.setDescription('Indicates whether the system is permitted to generate traps specified by this entry.')
redlineSystemPingTrapTrigger = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 1, 999), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("ping", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redlineSystemPingTrapTrigger.setStatus('current')
if mibBuilder.loadTexts: redlineSystemPingTrapTrigger.setDescription('Causes a ping trap to be sent')
redlineSystemSwDownloadProgress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("initiated", 1), ("downloaded", 2), ("validated", 3), ("committed", 4), ("failed", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: redlineSystemSwDownloadProgress.setStatus('current')
if mibBuilder.loadTexts: redlineSystemSwDownloadProgress.setDescription('The software download progress states.')
redlineSystemTrapDefinitions = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 3))
redlineSWUpgradeStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 3, 1)).setObjects(("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadProgress"))
if mibBuilder.loadTexts: redlineSWUpgradeStatusTrap.setStatus('current')
if mibBuilder.loadTexts: redlineSWUpgradeStatusTrap.setDescription('Event that reports SW Upgrade progress and status changes.')
redlineSystemPingTrap = NotificationType((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 4, 3, 999))
if mibBuilder.loadTexts: redlineSystemPingTrap.setStatus('current')
if mibBuilder.loadTexts: redlineSystemPingTrap.setDescription('A ping trap notification.')
redlineSystemAccessControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5))
redlineSystemAccessCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5), )
if mibBuilder.loadTexts: redlineSystemAccessCtrlTable.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlTable.setDescription(" This table contains a list of hosts which are allowed to access the system. Each entry associated with the host, has ip address and read and write passwords. Only hosts identified by a right combination of ipAddress and password will be allowed to access the system. An entry can contain Ip address of '0.0.0.0'. In which case all hosts using password associated with this address will be granted access to the system. Initially, the table will contain only one entry with Ip address set to '0.0.0.0', read community set to 'public' and write community set to 'private'. The maximum number of entries in this table is eight")
redlineSystemAccessCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1), ).setIndexNames((0, "REDLINE-SYSTEM-MIB", "redlineSystemAccessCtrlIndex"))
if mibBuilder.loadTexts: redlineSystemAccessCtrlEntry.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlEntry.setDescription('This entry contains privacy information about a host allowed to access the system.')
redlineSystemAccessCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: redlineSystemAccessCtrlIndex.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlIndex.setDescription('The index of the Snmp Access Control table.')
redlineSystemAccessCtrlManagerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemAccessCtrlManagerIpAddrType.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlManagerIpAddrType.setDescription('The INET address type of the host allowed to access the system. IPv4 type supported only.')
redlineSystemAccessCtrlManagerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemAccessCtrlManagerIpAddr.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlManagerIpAddr.setDescription('The INET address of the host allowed to access the system.')
redlineSystemAccessCtrlReadCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemAccessCtrlReadCommunity.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlReadCommunity.setDescription('The read community string associated with redlineSystemAccessCtrlManagerIpAddress.')
redlineSystemAccessCtrlWriteCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemAccessCtrlWriteCommunity.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlWriteCommunity.setDescription('The write community string associated with redlineSystemAccessCtrlManagerIpAddress.')
redlineSystemAccessCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 5, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redlineSystemAccessCtrlStatus.setStatus('current')
if mibBuilder.loadTexts: redlineSystemAccessCtrlStatus.setDescription("This object is used to create and delete rows in the redlineSystemTrapReceiverTable table. Only the 'createAndGo' and 'destroy' values can be specified in a set operation when an entry is created or destroyed, respectively.")
redlineSystemConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6))
redlineSystemGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6, 1))
redlineSystemCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6, 2))
redlineSystemBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6, 1, 1)).setObjects(("REDLINE-SYSTEM-MIB", "redlineSystemSystemReboot"), ("REDLINE-SYSTEM-MIB", "redlineSystemSerialNumber"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverCommunity"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverStatus"), ("REDLINE-SYSTEM-MIB", "redlineSystemPingTrapTrigger"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFtpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFtpUser"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFtpPassword"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFtpFile"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadStatus"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFailureReason"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadTimeEnded"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadFtpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwActiveVersion"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwAlternateVersion"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwActivateAlternate"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapReceiverPort"), ("REDLINE-SYSTEM-MIB", "redlineSystemTrapEnable"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwSyncAlternate"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwSyncAlternateStatus"), ("REDLINE-SYSTEM-MIB", "redlineSystemDHCPServerIpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemDHCPServerIpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemIpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemIpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemSubnetMaskAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemSubnetMask"), ("REDLINE-SYSTEM-MIB", "redlineSystemDefGatewayAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemDefGatewayAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemSyslogServerIpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemSyslogServerIpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemSwDownloadProgress"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupConfigType"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFtpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFtpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFtpUser"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFtpPassword"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFtpFile"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupStatus"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigBackupFailureReason"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreConfigType"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFtpAddressType"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFtpAddress"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFtpUser"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFtpPassword"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFtpFile"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreStatus"), ("REDLINE-SYSTEM-MIB", "redlineSystemConfigRestoreFailureReason"), ("REDLINE-SYSTEM-MIB", "redlineSystemAccessCtrlManagerIpAddrType"), ("REDLINE-SYSTEM-MIB", "redlineSystemAccessCtrlManagerIpAddr"), ("REDLINE-SYSTEM-MIB", "redlineSystemAccessCtrlReadCommunity"), ("REDLINE-SYSTEM-MIB", "redlineSystemAccessCtrlWriteCommunity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineSystemBasicGroup = redlineSystemBasicGroup.setStatus('current')
if mibBuilder.loadTexts: redlineSystemBasicGroup.setDescription('Basic objects.')
redlineSystemNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6, 1, 2)).setObjects(("REDLINE-SYSTEM-MIB", "redlineSWUpgradeStatusTrap"), ("REDLINE-SYSTEM-MIB", "redlineSystemPingTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineSystemNotificationGroup = redlineSystemNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: redlineSystemNotificationGroup.setDescription('')
redlineSystemCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 10728, 2, 1, 1, 6, 2, 1)).setObjects(("REDLINE-SYSTEM-MIB", "redlineSystemBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineSystemCompliance = redlineSystemCompliance.setStatus('current')
if mibBuilder.loadTexts: redlineSystemCompliance.setDescription('The compliance statement for SNMP entities that implement this MIB module.')
mibBuilder.exportSymbols("REDLINE-SYSTEM-MIB", PYSNMP_MODULE_ID=redlineSystemMib, redlineSystemSwActiveVersion=redlineSystemSwActiveVersion, redlineSystemSwDownloadFtpAddress=redlineSystemSwDownloadFtpAddress, redlineSystemTrapActivationTable=redlineSystemTrapActivationTable, redlineSystemSwDownloadProgress=redlineSystemSwDownloadProgress, redlineSystemSyslogServerIpAddress=redlineSystemSyslogServerIpAddress, redlineSystemSwDownloadFtpAddressType=redlineSystemSwDownloadFtpAddressType, redlineSystemSyslogServerIpAddressType=redlineSystemSyslogServerIpAddressType, redlineSystemSwDownloadFtpFile=redlineSystemSwDownloadFtpFile, redlineSystemSwSyncAlternateEntry=redlineSystemSwSyncAlternateEntry, redlineSystemConformance=redlineSystemConformance, redlineSystemSwDownloadFtpPassword=redlineSystemSwDownloadFtpPassword, redlineSystemBasicGroup=redlineSystemBasicGroup, redlineSystemNotificationGroup=redlineSystemNotificationGroup, redlineSystemConfigRestoreConfigType=redlineSystemConfigRestoreConfigType, redlineSystemSwSyncAlternate=redlineSystemSwSyncAlternate, redlineSystemConfigRestoreTable=redlineSystemConfigRestoreTable, redlineSystemPingTrapTrigger=redlineSystemPingTrapTrigger, redlineSystemSerialNumber=redlineSystemSerialNumber, redlineSystemAccessCtrlManagerIpAddr=redlineSystemAccessCtrlManagerIpAddr, redlineSystemSysSyslogObjects=redlineSystemSysSyslogObjects, redlineSystemDHCPServerIpAddressType=redlineSystemDHCPServerIpAddressType, redlineSystemConfigRestoreStatus=redlineSystemConfigRestoreStatus, redlineSystemSwSyncAlternateStatus=redlineSystemSwSyncAlternateStatus, redlineSystemSwDownloadStatus=redlineSystemSwDownloadStatus, redlineSystemSwDownloadIndex=redlineSystemSwDownloadIndex, redlineSystemSwActivateAlternate=redlineSystemSwActivateAlternate, redlineSystemAccessCtrlManagerIpAddrType=redlineSystemAccessCtrlManagerIpAddrType, redlineSystemConfigRestoreFtpUser=redlineSystemConfigRestoreFtpUser, redlineSWUpgradeStatusTrap=redlineSWUpgradeStatusTrap, redlineSystemSwDownloadTimeEnded=redlineSystemSwDownloadTimeEnded, redlineSystemTrapReceiverAddressType=redlineSystemTrapReceiverAddressType, redlineSystemTrapObjects=redlineSystemTrapObjects, redlineSystemDHCPServerIpAddress=redlineSystemDHCPServerIpAddress, redlineSystemTrapReceiverIndex=redlineSystemTrapReceiverIndex, redlineSystemAccessCtrlReadCommunity=redlineSystemAccessCtrlReadCommunity, redlineSystemSwDownloadTable=redlineSystemSwDownloadTable, redlineSystemTrapEnable=redlineSystemTrapEnable, redlineSystemCompliance=redlineSystemCompliance, redlineSystemSwDownloadFailureReason=redlineSystemSwDownloadFailureReason, redlineSystemTrapReceiverEntry=redlineSystemTrapReceiverEntry, redlineSystemConfigRestoreFtpAddress=redlineSystemConfigRestoreFtpAddress, redlineSystemConfigBackupFtpFile=redlineSystemConfigBackupFtpFile, redlineSystemAccessCtrlTable=redlineSystemAccessCtrlTable, redlineSystemIpAddressType=redlineSystemIpAddressType, redlineSystemConfigBackupEntry=redlineSystemConfigBackupEntry, redlineSystemGroups=redlineSystemGroups, redlineSystemSysControl=redlineSystemSysControl, redlineSystemSysDhcpObjects=redlineSystemSysDhcpObjects, redlineSystemConfigBackupFailureReason=redlineSystemConfigBackupFailureReason, redlineSystemNotificationObjects=redlineSystemNotificationObjects, redlineSystemTrapReceiverPort=redlineSystemTrapReceiverPort, redlineSystemTrapObjectID=redlineSystemTrapObjectID, redlineSystemSwSyncAlternateIndex=redlineSystemSwSyncAlternateIndex, redlineSystemTrapActivationEntry=redlineSystemTrapActivationEntry, redlineSystemSwDownloadEntry=redlineSystemSwDownloadEntry, redlineSystemConfigBackupIndex=redlineSystemConfigBackupIndex, redlineSystemSwSyncAlternateTimeEnded=redlineSystemSwSyncAlternateTimeEnded, redlineSystemCompls=redlineSystemCompls, redlineSystemConfigRestoreFtpFile=redlineSystemConfigRestoreFtpFile, redlineSystemIpAddress=redlineSystemIpAddress, redlineSystemConfigurationObjects=redlineSystemConfigurationObjects, redlineSystemAccessCtrlEntry=redlineSystemAccessCtrlEntry, redlineSystemConfigBackupStatus=redlineSystemConfigBackupStatus, redlineSystemConfigBackupFtpAddressType=redlineSystemConfigBackupFtpAddressType, redlineSystemSoftwareObjects=redlineSystemSoftwareObjects, redlineSystemSwAlternateVersion=redlineSystemSwAlternateVersion, redlineSystemConfigRestoreEntry=redlineSystemConfigRestoreEntry, redlineSystemSysIpObjects=redlineSystemSysIpObjects, redlineSystemTrapReceiverAddress=redlineSystemTrapReceiverAddress, redlineSystemConfigBackupConfigType=redlineSystemConfigBackupConfigType, redlineSystemDefGatewayAddressType=redlineSystemDefGatewayAddressType, redlineSystemSwDownloadFtpUser=redlineSystemSwDownloadFtpUser, redlineSystemTrapReceiverStatus=redlineSystemTrapReceiverStatus, redlineSystemConfigRestoreFailureReason=redlineSystemConfigRestoreFailureReason, redlineSystemSystemObjects=redlineSystemSystemObjects, redlineSystemSystemReboot=redlineSystemSystemReboot, redlineSystemPingTrap=redlineSystemPingTrap, redlineSystemTrapReceiverTable=redlineSystemTrapReceiverTable, redlineSystemMib=redlineSystemMib, redlineSystemConfigRestoreFtpAddressType=redlineSystemConfigRestoreFtpAddressType, redlineSystemAccessCtrlWriteCommunity=redlineSystemAccessCtrlWriteCommunity, redlineSystemConfigBackupFtpPassword=redlineSystemConfigBackupFtpPassword, redlineSystemSwSyncAlternateTable=redlineSystemSwSyncAlternateTable, redlineSystemConfigRestoreFtpPassword=redlineSystemConfigRestoreFtpPassword, redlineSystemAccessControlObjects=redlineSystemAccessControlObjects, redlineSystemConfigBackupFtpAddress=redlineSystemConfigBackupFtpAddress, redlineSystemConfigBackupFtpUser=redlineSystemConfigBackupFtpUser, redlineSystemTrapControl=redlineSystemTrapControl, redlineSystemSubnetMaskAddressType=redlineSystemSubnetMaskAddressType, redlineSystemConfigRestoreIndex=redlineSystemConfigRestoreIndex, redlineSystemAccessCtrlIndex=redlineSystemAccessCtrlIndex, redlineSystemConfigBackupTable=redlineSystemConfigBackupTable, redlineSystemTrapReceiverCommunity=redlineSystemTrapReceiverCommunity, redlineSystemTrapDefinitions=redlineSystemTrapDefinitions, redlineSystemAccessCtrlStatus=redlineSystemAccessCtrlStatus, redlineSystemSubnetMask=redlineSystemSubnetMask, redlineSystemDefGatewayAddress=redlineSystemDefGatewayAddress)
