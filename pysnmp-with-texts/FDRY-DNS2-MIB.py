#
# PySNMP MIB module FDRY-DNS2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FDRY-DNS2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:13:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, IpAddress, Gauge32, Unsigned32, Bits, MibIdentifier, ObjectIdentity, ModuleIdentity, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "IpAddress", "Gauge32", "Unsigned32", "Bits", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Counter32", "iso")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
fdryDns2MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34))
fdryDns2MIB.setRevisions(('2010-06-02 00:00', '2009-01-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fdryDns2MIB.setRevisionsDescriptions(('Changed the ORGANIZATION, CONTACT-INFO and DESCRIPTION fields.', 'Initial version, obsoletes the earlier mib groups to resolve the mib conflicts. fdryDns2MIB obsoletes fdryDnsMIB, fdryDns2DomainName obsoletes fdryDnsDomainName, fdryDnsServer obsoletes fdryDnsServerAddress',))
if mibBuilder.loadTexts: fdryDns2MIB.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: fdryDns2MIB.setOrganization('Brocade Communications Systems, Inc.')
if mibBuilder.loadTexts: fdryDns2MIB.setContactInfo('Technical Support Center 130 Holger Way, San Jose, CA 95134 Email: ipsupport@brocade.com Phone: 1-800-752-8061 URL: www.brocade.com')
if mibBuilder.loadTexts: fdryDns2MIB.setDescription("The Brocade proprietary MIB module for Domain Name Service(DNS) It has new IPv4/IPv6 combined tables for Domain Name Service Address List and Name configuration. Copyright 1996-2010 Brocade Communications Systems, Inc. All rights reserved. This Brocade Communications Systems SNMP Management Information Base Specification embodies Brocade Communications Systems' confidential and proprietary intellectual property. Brocade Communications Systems retains all title and ownership in the Specification, including any revisions. This Specification is supplied AS IS, and Brocade Communications Systems makes no warranty, either express or implied, as to the use, operation, condition, or performance of the specification, and any unintended consequence it may on the user environment.")
fdryDns2DomainName = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1))
fdryDnsServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2))
fdryDns2DomainNameTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1), )
if mibBuilder.loadTexts: fdryDns2DomainNameTable.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameTable.setDescription('Domain Name Service domain name table.')
fdryDns2DomainNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1), ).setIndexNames((0, "FDRY-DNS2-MIB", "fdryDns2DomainNameIndex"))
if mibBuilder.loadTexts: fdryDns2DomainNameEntry.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameEntry.setDescription('An entry in the DNS domain name table.')
fdryDns2DomainNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: fdryDns2DomainNameIndex.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameIndex.setDescription('The index to the DNS name table.')
fdryDns2DomainNameAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameAddrType.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameAddrType.setDescription('DNS IP address Type. Supported address types are ipv4(1) and ipv6(2)')
fdryDns2DomainNameName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameName.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameName.setDescription('Domain Name Service Domain Name string.')
fdryDns2DomainNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDns2DomainNameRowStatus.setStatus('current')
if mibBuilder.loadTexts: fdryDns2DomainNameRowStatus.setDescription('This variable is used to create, modify, or delete a row in this table. When a row in this table is in active(1) state, no objects in that row can be modified except this object.')
fdryDnsServerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1), )
if mibBuilder.loadTexts: fdryDnsServerTable.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerTable.setDescription('DNS server table, listing the Ipv4/Ipv6 DNS server addresses')
fdryDnsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1), ).setIndexNames((0, "FDRY-DNS2-MIB", "fdryDnsServerAddrType"), (0, "FDRY-DNS2-MIB", "fdryDnsServerIndex"))
if mibBuilder.loadTexts: fdryDnsServerEntry.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerEntry.setDescription('An entry in the DNS server table.')
fdryDnsServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 1), InetAddressType().clone('ipv4'))
if mibBuilder.loadTexts: fdryDnsServerAddrType.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerAddrType.setDescription('The index to the DNS server table. DNS server IP address type. Supported address types are ipv4(1) and ipv6(2)')
fdryDnsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: fdryDnsServerIndex.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerIndex.setDescription('The index to the DNS server table. Currently, up to 4 DNS server entries each are supported for IPv4 and IPv6.')
fdryDnsServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDnsServerAddr.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerAddr.setDescription('DNS server IP address.')
fdryDnsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 34, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryDnsServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: fdryDnsServerRowStatus.setDescription('This variable is used to create, modify, or delete a row in this table. When a row in this table is in active(1) state, no objects in that row can be modified except this object.')
mibBuilder.exportSymbols("FDRY-DNS2-MIB", fdryDnsServerTable=fdryDnsServerTable, fdryDns2MIB=fdryDns2MIB, fdryDnsServerIndex=fdryDnsServerIndex, fdryDns2DomainNameIndex=fdryDns2DomainNameIndex, fdryDns2DomainNameEntry=fdryDns2DomainNameEntry, fdryDnsServerAddr=fdryDnsServerAddr, fdryDns2DomainName=fdryDns2DomainName, fdryDnsServerEntry=fdryDnsServerEntry, PYSNMP_MODULE_ID=fdryDns2MIB, fdryDnsServer=fdryDnsServer, fdryDns2DomainNameAddrType=fdryDns2DomainNameAddrType, fdryDns2DomainNameRowStatus=fdryDns2DomainNameRowStatus, fdryDnsServerRowStatus=fdryDnsServerRowStatus, fdryDnsServerAddrType=fdryDnsServerAddrType, fdryDns2DomainNameTable=fdryDns2DomainNameTable, fdryDns2DomainNameName=fdryDns2DomainNameName)
