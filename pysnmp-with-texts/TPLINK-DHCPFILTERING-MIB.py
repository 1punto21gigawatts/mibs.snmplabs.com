#
# PySNMP MIB module TPLINK-DHCPFILTERING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DHCPFILTERING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:24:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ModuleIdentity, Integer32, NotificationType, Gauge32, Unsigned32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ModuleIdentity", "Integer32", "NotificationType", "Gauge32", "Unsigned32", "MibIdentifier", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkDhcpFilteringMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 48))
tplinkDhcpFilteringMIB.setRevisions(('2012-12-17 10:14',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setLastUpdated('201212171014Z')
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkDhcpFilteringMIB.setDescription('Private MIB for DHCP Filtering configuration.')
tplinkDhcpFilteringMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1))
tplinkDhcpFilteringNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 2))
dhcpFilteringGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1))
dhcpFilteringPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3))
dhcpFilteringEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpFilteringEnable.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringEnable.setDescription('0. disable 1. enable Enable or disable the DHCP Filtering function globally.')
dhcpFilteringVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2), )
if mibBuilder.loadTexts: dhcpFilteringVlanConfigTable.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringVlanConfigTable.setDescription('Here you can view and modify the DHCP Filtering VLAN config table.')
dhcpFilteringVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1), ).setIndexNames((0, "TPLINK-DHCPFILTERING-MIB", "dhcpFilteringVlanId"))
if mibBuilder.loadTexts: dhcpFilteringVlanConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringVlanConfigEntry.setDescription('An entry contains of the DHCP Filtering function enable status information of a VLAN.')
dhcpFilteringVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpFilteringVlanId.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringVlanId.setDescription('Enter the ID number of VLAN,1-4094.')
dhcpFilteringVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpFilteringVlanStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringVlanStatus.setDescription('0. disable 1. enable Enable or disable DHCP Filtering function in specified VLAN. ')
dhcpFilteringPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1), )
if mibBuilder.loadTexts: dhcpFilteringPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringPortConfigTable.setDescription('A list of DHCP Filtering port config entries. Here you can configure the port parameters for the DHCP Filtering.')
dhcpFilteringPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dhcpFilteringPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringPortConfigEntry.setDescription('An entry contains of the information of DHCP Filtering port config.')
dhcpFilteringPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpFilteringPort.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringPort.setDescription('Display port number')
dhcpFilteringPortConfigTrustedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpFilteringPortConfigTrustedPort.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringPortConfigTrustedPort.setDescription('0. disable 1. enable Select Enable/Disable the port to be a Trusted Port. Only the Trusted Port can receive the DHCP packets from DHCP servers.')
dhcpFilteringPortConfigPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 48, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpFilteringPortConfigPortLag.setStatus('current')
if mibBuilder.loadTexts: dhcpFilteringPortConfigPortLag.setDescription('The LAG to which the port belongs to.')
mibBuilder.exportSymbols("TPLINK-DHCPFILTERING-MIB", dhcpFilteringVlanConfigEntry=dhcpFilteringVlanConfigEntry, dhcpFilteringPortConfig=dhcpFilteringPortConfig, dhcpFilteringPortConfigEntry=dhcpFilteringPortConfigEntry, dhcpFilteringVlanConfigTable=dhcpFilteringVlanConfigTable, dhcpFilteringVlanStatus=dhcpFilteringVlanStatus, tplinkDhcpFilteringMIBObjects=tplinkDhcpFilteringMIBObjects, dhcpFilteringPortConfigTable=dhcpFilteringPortConfigTable, dhcpFilteringVlanId=dhcpFilteringVlanId, dhcpFilteringPortConfigPortLag=dhcpFilteringPortConfigPortLag, dhcpFilteringGlobalConfig=dhcpFilteringGlobalConfig, tplinkDhcpFilteringMIB=tplinkDhcpFilteringMIB, dhcpFilteringEnable=dhcpFilteringEnable, PYSNMP_MODULE_ID=tplinkDhcpFilteringMIB, dhcpFilteringPortConfigTrustedPort=dhcpFilteringPortConfigTrustedPort, tplinkDhcpFilteringNotifications=tplinkDhcpFilteringNotifications, dhcpFilteringPort=dhcpFilteringPort)
