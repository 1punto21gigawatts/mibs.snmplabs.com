#
# PySNMP MIB module NNC-ATM-PROTOSTATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNC-ATM-PROTOSTATISTICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:22:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NncExtCounter64, nncExtensions = mibBuilder.importSymbols("NNCGNI0001-SMI", "NncExtCounter64", "nncExtensions")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Unsigned32, NotificationType, MibIdentifier, IpAddress, Gauge32, Bits, ModuleIdentity, Integer32, TimeTicks, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Unsigned32", "NotificationType", "MibIdentifier", "IpAddress", "Gauge32", "Bits", "ModuleIdentity", "Integer32", "TimeTicks", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nncAtmProtoStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 54))
if mibBuilder.loadTexts: nncAtmProtoStatistics.setLastUpdated('9604240330Z')
if mibBuilder.loadTexts: nncAtmProtoStatistics.setOrganization('Newbridge Networks Corporation')
if mibBuilder.loadTexts: nncAtmProtoStatistics.setContactInfo('Newbridge Networks Corporation Postal: 600 March Road Kanata, Ontario Canada K2K 2E6 Phone: +1 613 591 3600 Fax: +1 613 591 3680')
if mibBuilder.loadTexts: nncAtmProtoStatistics.setDescription(" This module contains definitions for performance monitoring of the ATM cell layers. This MIB module contains the following tables: ATM Cell Layer 15 Minute Current Table (per interface) ATM Cell Layer 15 Minute History Table (per interface) ATM Cell Layer 24 Hour Table (per interface) ATM Cell Layer Raw Table (per interface; unintervalized) Intervals: Statistics per interface are collected over a historical stratum of up to a maximum of M intervals. The value of M is a function of a product's storage capability. For example, on the 36170 product, M = 96. The intervals are 15 minutes aligned to the quarter of an hour. The current interval spans back to the last 15 minute tick on the wall clock. Continuing along the timeline from that point is the most recently completed interval and has an index of 1. The previous interval has an index of 2 and so on. Note that the oldest interval may be incomplete since the statistic collection may have been enabled offset to the quarter or one hour tick. t 0 -15min -30min -45min ==========|===========|===========|===========|=========== current N = 1 N = 2 N = 3 N = 4 ... N = M interval ")
nncAtmProtoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 54, 1))
nncAtmProtoGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 54, 2))
nncAtmProtoCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 54, 3))
nncAtmProtoCurrTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1), )
if mibBuilder.loadTexts: nncAtmProtoCurrTable.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrTable.setDescription('The ATM Cell Protocol Monitoring Current Data table.This table maintains per-interface statistics for the fifteen-minute interval currently being collected.')
nncAtmProtoCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncAtmProtoCurrEntry.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrEntry.setDescription('An entry in the ATM Cell Protocol Monitoring Current Data table. Each ATM interface (UNI, BICI, BISSI) automatically has an entry in this table associated with it.')
nncAtmProtoCurrValidInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1, 1), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoCurrValidInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrValidInCells.setDescription('Number of cells received with correct or corrected headers, and valid VPI/VCI on this interface, since the start of this interval')
nncAtmProtoCurrCorrHeaderInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoCurrCorrHeaderInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrCorrHeaderInCells.setDescription('Number of cells received with corrected header errors on this interface, since the start of this interval.')
nncAtmProtoCurrDisHECInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoCurrDisHECInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrDisHECInCells.setDescription('Number of received cells discarded due to uncorrectable header (HEC) errors on this interface, since the start of this interval.')
nncAtmProtoCurrDisInvalidVPIVCIInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoCurrDisInvalidVPIVCIInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrDisInvalidVPIVCIInCells.setDescription('Number of received cells discarded due to invalid VPI/VCI on this interface, since the start of this interval.')
nncAtmProtoCurrOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 1, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoCurrOutCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrOutCells.setDescription('Number of cells transmitted on this interface, since the start of this interval.')
nncAtmProtoHistTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2), )
if mibBuilder.loadTexts: nncAtmProtoHistTable.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistTable.setDescription('The ATM Cell Protocol Monitoring Current Data table.This table maintains per-interface statistics for the fifteen-minute interval currently being collected.')
nncAtmProtoHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistIndex"))
if mibBuilder.loadTexts: nncAtmProtoHistEntry.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistEntry.setDescription('An entry in the ATM Cell Protocol Monitoring History Data table.')
nncAtmProtoHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: nncAtmProtoHistIndex.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistIndex.setDescription('A number between 1 and 96, which identifies the interval for which the set of statistics in this entry was collected. The interval identified by 1 is the most recently completed 15 minute interval, and the interval identified by N is the interval immediately preceding the one identified by N-1.')
nncAtmProtoHistValidInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoHistValidInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistValidInCells.setDescription('Number of cells received with correct or corrected headers, and valid VPI/VCI on this interface for this 15-min interval.')
nncAtmProtoHistCorrHeaderInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoHistCorrHeaderInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistCorrHeaderInCells.setDescription('Number of cells received with corrected header errors on this interface.')
nncAtmProtoHistDisHECInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoHistDisHECInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistDisHECInCells.setDescription('Number of received cells discarded due to uncorrectable header (HEC) errors on this interface for this 15-min interval.')
nncAtmProtoHistDisInvalidVPIVCIInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoHistDisInvalidVPIVCIInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistDisInvalidVPIVCIInCells.setDescription('Number of received cells discarded due to invalid VPI/VCI on this interface for this 15-min interval.')
nncAtmProtoHistOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 2, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoHistOutCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistOutCells.setDescription('Number of cells transmitted on this interface, for this 15-min interval.')
nncAtmProtoTotalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3), )
if mibBuilder.loadTexts: nncAtmProtoTotalTable.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalTable.setDescription('The ATM Cell Protocol Monitoring Total 24 Hour Data table. This table maintains the cumulative sum of statistics per interface for the 24 hour period preceding the current interval.')
nncAtmProtoTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncAtmProtoTotalEntry.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalEntry.setDescription('An entry in the ATM Cell Protocol Monitoring Total 24 Hour Data table.')
nncAtmProtoTotalValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalValidIntervals.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalValidIntervals.setDescription('Number of valid intervals in the previous 24 hour')
nncAtmProtoTotalValidInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalValidInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalValidInCells.setDescription('Number of cells received with correct or corrected headers, and valid VPI/VCI on this interface, in the previous 24 hour interval.')
nncAtmProtoTotalCorrHeaderInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalCorrHeaderInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalCorrHeaderInCells.setDescription('Number of cells received with corrected header errors on this interface, in the previous 24 hour interval.')
nncAtmProtoTotalDisHECInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalDisHECInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalDisHECInCells.setDescription('Number of received cells discarded due to uncorrectable header (HEC) errors on this interface, in the previous 24 hour interval.')
nncAtmProtoTotalDisInvalidVPIVCIInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalDisInvalidVPIVCIInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalDisInvalidVPIVCIInCells.setDescription('Number of received cells discarded due to invalid VPI/VCI on this interface, in the previous 24 hour interval.')
nncAtmProtoTotalOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 3, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoTotalOutCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalOutCells.setDescription('Number of cells transmitted on this interface, in the previous 24 hour interval.')
nncAtmProtoRawTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4), )
if mibBuilder.loadTexts: nncAtmProtoRawTable.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawTable.setDescription('The ATM Cell Protocol Monitoring Raw Data table. This table maintains per-interface raw statistics.')
nncAtmProtoRawEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncAtmProtoRawEntry.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawEntry.setDescription('An entry in the ATM Cell Protocol Monitoring Raw Data table. Each ATM interface (UNI, BICI, BISSI) automatically has an entry in this table associated with it.')
nncAtmProtoRawValidInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoRawValidInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawValidInCells.setDescription('The number of cells received with correct or corrected headers, and valid VPI/VCI on this interface, since startup.')
nncAtmProtoRawCorrHeaderInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoRawCorrHeaderInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawCorrHeaderInCells.setDescription('The number of cells received with corrected header errors on this interface, since startup.')
nncAtmProtoRawDisHECInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoRawDisHECInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawDisHECInCells.setDescription('The number of received cells discarded due to uncorrectable header (HEC) errors on this interface, since startup.')
nncAtmProtoRawDisInvalidVPIVCIInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoRawDisInvalidVPIVCIInCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawDisInvalidVPIVCIInCells.setDescription('The number of received cells discarded due to invalid VPI/VCI on this interface, since startup.')
nncAtmProtoRawOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 54, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncAtmProtoRawOutCells.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawOutCells.setDescription('The number of cells transmitted on this interface, since startup.')
nncAtmProtoCurrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 54, 2, 1)).setObjects(("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrValidInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrCorrHeaderInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrDisHECInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrDisInvalidVPIVCIInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrOutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmProtoCurrGroup = nncAtmProtoCurrGroup.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCurrGroup.setDescription('A collection of objects providing 15 Min current monitoring data for a ATM interface.')
nncAtmProtoHistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 54, 2, 2)).setObjects(("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistIndex"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistValidInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistCorrHeaderInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistDisHECInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistDisInvalidVPIVCIInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistOutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmProtoHistGroup = nncAtmProtoHistGroup.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoHistGroup.setDescription('A collection of objects providing 15 Min history monitoring data for a ATM interface.')
nncAtmProtoTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 54, 2, 3)).setObjects(("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalValidIntervals"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalValidInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalCorrHeaderInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalDisHECInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalDisInvalidVPIVCIInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalOutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmProtoTotalGroup = nncAtmProtoTotalGroup.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoTotalGroup.setDescription('A collection of objects providing previous 24 hour monitoring data for a ATM interface.')
nncAtmProtoRawGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 54, 2, 4)).setObjects(("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawValidInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawCorrHeaderInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawDisHECInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawDisInvalidVPIVCIInCells"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawOutCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmProtoRawGroup = nncAtmProtoRawGroup.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoRawGroup.setDescription('A collection of objects providing raw monitoring data for a ATM interface.')
nncAtmProtoCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 54, 3, 1)).setObjects(("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoCurrGroup"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoHistGroup"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoTotalGroup"), ("NNC-ATM-PROTOSTATISTICS-MIB", "nncAtmProtoRawGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncAtmProtoCompliance = nncAtmProtoCompliance.setStatus('current')
if mibBuilder.loadTexts: nncAtmProtoCompliance.setDescription('The complicance statement for Newbridge SNMP entities which have ATM protocol monitoring data.')
mibBuilder.exportSymbols("NNC-ATM-PROTOSTATISTICS-MIB", nncAtmProtoHistOutCells=nncAtmProtoHistOutCells, nncAtmProtoCurrValidInCells=nncAtmProtoCurrValidInCells, nncAtmProtoCurrDisInvalidVPIVCIInCells=nncAtmProtoCurrDisInvalidVPIVCIInCells, nncAtmProtoRawValidInCells=nncAtmProtoRawValidInCells, nncAtmProtoTotalValidIntervals=nncAtmProtoTotalValidIntervals, nncAtmProtoRawDisInvalidVPIVCIInCells=nncAtmProtoRawDisInvalidVPIVCIInCells, nncAtmProtoGroups=nncAtmProtoGroups, nncAtmProtoRawTable=nncAtmProtoRawTable, nncAtmProtoCurrEntry=nncAtmProtoCurrEntry, nncAtmProtoCompliances=nncAtmProtoCompliances, nncAtmProtoCurrOutCells=nncAtmProtoCurrOutCells, nncAtmProtoRawCorrHeaderInCells=nncAtmProtoRawCorrHeaderInCells, nncAtmProtoTotalOutCells=nncAtmProtoTotalOutCells, nncAtmProtoTotalEntry=nncAtmProtoTotalEntry, nncAtmProtoCurrDisHECInCells=nncAtmProtoCurrDisHECInCells, nncAtmProtoTotalValidInCells=nncAtmProtoTotalValidInCells, nncAtmProtoTotalDisInvalidVPIVCIInCells=nncAtmProtoTotalDisInvalidVPIVCIInCells, nncAtmProtoHistCorrHeaderInCells=nncAtmProtoHistCorrHeaderInCells, nncAtmProtoObjects=nncAtmProtoObjects, nncAtmProtoStatistics=nncAtmProtoStatistics, nncAtmProtoCompliance=nncAtmProtoCompliance, nncAtmProtoHistTable=nncAtmProtoHistTable, nncAtmProtoHistIndex=nncAtmProtoHistIndex, nncAtmProtoTotalTable=nncAtmProtoTotalTable, PYSNMP_MODULE_ID=nncAtmProtoStatistics, nncAtmProtoHistEntry=nncAtmProtoHistEntry, nncAtmProtoHistDisInvalidVPIVCIInCells=nncAtmProtoHistDisInvalidVPIVCIInCells, nncAtmProtoCurrCorrHeaderInCells=nncAtmProtoCurrCorrHeaderInCells, nncAtmProtoCurrTable=nncAtmProtoCurrTable, nncAtmProtoHistGroup=nncAtmProtoHistGroup, nncAtmProtoHistValidInCells=nncAtmProtoHistValidInCells, nncAtmProtoRawOutCells=nncAtmProtoRawOutCells, nncAtmProtoCurrGroup=nncAtmProtoCurrGroup, nncAtmProtoRawGroup=nncAtmProtoRawGroup, nncAtmProtoTotalCorrHeaderInCells=nncAtmProtoTotalCorrHeaderInCells, nncAtmProtoTotalGroup=nncAtmProtoTotalGroup, nncAtmProtoRawEntry=nncAtmProtoRawEntry, nncAtmProtoRawDisHECInCells=nncAtmProtoRawDisHECInCells, nncAtmProtoHistDisHECInCells=nncAtmProtoHistDisHECInCells, nncAtmProtoTotalDisHECInCells=nncAtmProtoTotalDisHECInCells)
