#
# PySNMP MIB module INTEL-ES480-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-ES480-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:54:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
es480tAgent, = mibBuilder.importSymbols("INTEL-ES480-MIB", "es480tAgent")
es480tVlanIfIndex, = mibBuilder.importSymbols("INTEL-ES480-VLAN-MIB", "es480tVlanIfIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibIdentifier, TimeTicks, ModuleIdentity, Integer32, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, Counter64, IpAddress, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Integer32", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "Counter64", "IpAddress", "Counter32", "ObjectIdentity")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
es480tQos = ModuleIdentity((1, 3, 6, 1, 4, 1, 343, 6, 60, 3))
if mibBuilder.loadTexts: es480tQos.setLastUpdated('9803020000Z')
if mibBuilder.loadTexts: es480tQos.setOrganization('Intel Corp.')
if mibBuilder.loadTexts: es480tQos.setContactInfo('www.intel.com')
if mibBuilder.loadTexts: es480tQos.setDescription('Intel ES480T Quality-of-Service objects')
es480tQosCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1))
es480tQosMode = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosMode.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosMode.setDescription("Indicates which QoS mode the device should use. ingress(1) applies priority-based QoS based on the incoming packet's destination IP or MAC address, 802.1p priority, PACE(tm), Source Port or VLAN. egress(2) applies priority- and bandwidth-based QoS based on destination IP or MAC address or VLAN.")
es480tQosUnconfigure = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosUnconfigure.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosUnconfigure.setDescription('Setting this to true will reset all QoS settings in the device to factory defaults. Reads from this value return an undefined value.')
es480tQosProfileTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6), )
if mibBuilder.loadTexts: es480tQosProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileTable.setDescription('This table lists QoS profiles.')
es480tQosProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1), ).setIndexNames((0, "INTEL-ES480-QOS-MIB", "es480tQosProfileIndex"))
if mibBuilder.loadTexts: es480tQosProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileEntry.setDescription('An individual QoS profile Entry.')
es480tQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfileIndex.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileIndex.setDescription('An index that uniquely identifies an entry in the qos table.')
es480tQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfileName.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileName.setDescription('A unique qos profile name.')
es480tQosProfileMinBw = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfileMinBw.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileMinBw.setDescription('The minumum percentage of bandwidth that this queue requires. The Switch is required to provide the minumum amount of bandwidth to the queue. The lowest possible value is 0%.')
es480tQosProfileMaxBw = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfileMaxBw.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileMaxBw.setDescription('The maximum percentage of bandwidth that this queue is permitted to use')
es480tQosProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("low", 1), ("lowNormal", 2), ("normal", 3), ("normalMedium", 4), ("medium", 5), ("mediumHi", 6), ("high", 7), ("highHi", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfilePriority.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfilePriority.setDescription('The level of priority in which this queue will be serviced by the Switch.')
es480tQosProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosProfileRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosProfileRowStatus.setDescription('The status of the es480tQosProfile entry. This OBJECT can be set to: active(1) createAndGo(4) createAndWait(5) destroy(6) The following values may be read: active(1) notInService(2) notReady(3). Setting this object to createAndGo(4) causes the agent to attempt to create and commit the row based on the contents of the objects in the row. If all necessary information is present in the row and the values are acceptible to the agent, the agent will change the status to active(1). If any of the necessary objects are not available, the agent will reject the creation request. Setting this object to createAndWait(5) causes a row in this table to be created. The agent sets the status to notInService(2) if all of the information is present in the row and the values are acceptable to the agent; otherwise, the agent sets the status to notReady(3). Setting this object to active(1) is only valid when the current status is active(1) or notInService(2). When the state of the row transitions is set to active(1), the agent creates the corresponding row in the ifTable.. Setting this object to destroy(6) will remove the corresponding QoS Profile Entry. In order for a set of this object to destroy(6) to succeed, all dependencies on this row must have been removed. These will include any stacking dependencies in the ifStackTable and any protocol specific tables dependencies.')
es480tQosByVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 7), )
if mibBuilder.loadTexts: es480tQosByVlanMappingTable.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosByVlanMappingTable.setDescription('Table to associate a Vlan with the QoS profile that the Vlan is using. Every Vlan is assigned a Qos Profile and hence there is an entry in this table corresponding to every entry in the es480tVlanIfTable.')
es480tQosByVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 7, 1), ).setIndexNames((0, "INTEL-ES480-VLAN-MIB", "es480tVlanIfIndex"))
if mibBuilder.loadTexts: es480tQosByVlanMappingEntry.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosByVlanMappingEntry.setDescription('The QoS associated with a particular Vlan.')
es480tQosByVlanMappingQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 3, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tQosByVlanMappingQosProfileIndex.setStatus('mandatory')
if mibBuilder.loadTexts: es480tQosByVlanMappingQosProfileIndex.setDescription('Value of es480tQosProfileIndex that uniquely identifies a QoS Profile entry in es480tQosProfileTable. This indicates the QoS to be given to traffic for this Vlan in the absence of any other more specific configuration information for this traffic.')
mibBuilder.exportSymbols("INTEL-ES480-QOS-MIB", es480tQosProfileRowStatus=es480tQosProfileRowStatus, PYSNMP_MODULE_ID=es480tQos, es480tQosProfileIndex=es480tQosProfileIndex, es480tQosProfileName=es480tQosProfileName, es480tQosByVlanMappingQosProfileIndex=es480tQosByVlanMappingQosProfileIndex, es480tQos=es480tQos, es480tQosByVlanMappingEntry=es480tQosByVlanMappingEntry, es480tQosByVlanMappingTable=es480tQosByVlanMappingTable, es480tQosUnconfigure=es480tQosUnconfigure, es480tQosProfileEntry=es480tQosProfileEntry, es480tQosProfileTable=es480tQosProfileTable, es480tQosMode=es480tQosMode, es480tQosProfileMaxBw=es480tQosProfileMaxBw, es480tQosCommon=es480tQosCommon, es480tQosProfileMinBw=es480tQosProfileMinBw, es480tQosProfilePriority=es480tQosProfilePriority)
