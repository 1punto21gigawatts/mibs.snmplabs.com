#
# PySNMP MIB module PDN-UPLINK-TAGGING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-UPLINK-TAGGING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:39:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
pdn_common, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-common")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Integer32, NotificationType, Unsigned32, Counter32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, iso, ObjectIdentity, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "NotificationType", "Unsigned32", "Counter32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "iso", "ObjectIdentity", "Gauge32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pdnUplinkTagging = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37))
pdnUplinkTagging.setRevisions(('2003-03-12 00:00', '2002-05-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnUplinkTagging.setRevisionsDescriptions(("Deprecated the origional objects, ultBaseVlanTag and ultIndex. Added new objects as follows: 1. pdnUltIndex - This new object is basically an Unsigned32 that excludes '0'. It idea is that different implementations will support different maximum values of the index. As such, the syntax for this object will cover any implementation and actual implementation specific maximum values should be documented in something like the implementation's SNMP Op Spec. 2. pdnGenUltBaseVlanTag - This object allows a any base VLAN Tag to be defined. 3. pdn48UltBaseVlanTag - This object defines a set of enumerations for base VLAN Tags for chassis/units that contain 48 ports. 4. pdn24UltBaseVlanTag - This object defines a set of enumerations for base VLAN Tags for chassis/units that contain 24 ports.", 'Initial Release.',))
if mibBuilder.loadTexts: pdnUplinkTagging.setLastUpdated('200303120000Z')
if mibBuilder.loadTexts: pdnUplinkTagging.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnUplinkTagging.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editors Clay Sikes')
if mibBuilder.loadTexts: pdnUplinkTagging.setDescription("This MIB contains objects that are used to configure Uplink Tagging (ULT). Uplink Tagging is a term used to describe a feature that simplifies the setup and administration of networks where a service provider wants to use a unique VLAN per subscriber port. Ingress frames will get tagged with a VLAN and these tagged frame will be transmitted on the uplink port towards the WAN. In cases where the hardware implementation permits, multiple units can be interconnected together to form a 'Uplink Tagging Domain (ULT Domain)'. A ULT domain is defined as the set of interconnected Paradyne DSLAMs that share a common block of VLAN IDs. The maximum number of Paradyne DSLAMs that can be interconnected is implementation dependent. Generally, all DSLAMs in a ULT Domain will be configured with the same block of VLAN IDs. Each chassis/unit will be assigned a unique ULT Index within the ULT Domain. There are two parts of configuring Uplink Tagging: 1. Uplink Base VLAN Tag - This object specifies the beginning VLAN ID for a particular common block of VLAN IDs. This object will be defined as an enumeration whose values will depend on the number of port in a chassis/unit. 2. Uplink Tag Index - This object specifies the index within some block of VLAN IDs. Generally, this index can thought of a chassis/unit number as can be seen with the examples below.")
pdnUplinkTaggingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 1))
pdnUplinkTaggingObjectsR2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 3))
pdnUltIndex = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnUltIndex.setStatus('current')
if mibBuilder.loadTexts: pdnUltIndex.setDescription("This object represents VLAN tag index which is an index into a block of VLAN Tags the unit will use. Generally, this can be also thought of as the chassis/unit number in the case where multiple units are interconnected and form a ULT Domain described above. It is strongly encouraged that the upper limit for a particular implementation be clearly documented in the product's SNMP Op Spec.")
pdnGenUltBaseVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 3, 2), VlanId().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnGenUltBaseVlanTag.setStatus('current')
if mibBuilder.loadTexts: pdnGenUltBaseVlanTag.setDescription("This object can be used to allow any Uplink Tagging Base Index to be entered when they don't like the 'canned' list defined in the objects below.")
pdn48UltBaseVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ultBase16", 1), ("ultBase512", 2), ("ultBase1024", 3), ("ultBase1536", 4), ("ultBase2048", 5), ("ultBase2560", 6), ("ultBase3072", 7), ("ultBase3584", 8))).clone('ultBase16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdn48UltBaseVlanTag.setStatus('current')
if mibBuilder.loadTexts: pdn48UltBaseVlanTag.setDescription('This object represents Uplink Tagging base index which is the starting VLAN ID for a particular common block of VLAN IDs for chassis/units that contain 48 DSL subscriber ports.')
pdn24UltBaseVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("ultBase16", 1), ("ultBase256", 2), ("ultBase512", 3), ("ultBase768", 4), ("ultBase1024", 5), ("ultBase1280", 6), ("ultBase1536", 7), ("ultBase1792", 8), ("ultBase2048", 9), ("ultBase2304", 10), ("ultBase2560", 11), ("ultBase2816", 12), ("ultBase3072", 13), ("ultBase3328", 14), ("ultBase3584", 15), ("ultBase3840", 16))).clone('ultBase16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdn24UltBaseVlanTag.setStatus('current')
if mibBuilder.loadTexts: pdn24UltBaseVlanTag.setDescription('This object represents Uplink Tagging base index which is the starting VLAN ID for a particular common block of VLAN IDs for chassis/units that contain 24 DSL subscriber ports.')
ultBaseVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ultBase16", 1), ("ultBase512", 2), ("ultBase1024", 3), ("ultBase1536", 4), ("ultBase2048", 5), ("ultBase2560", 6), ("ultBase3072", 7), ("ultBase3584", 8))).clone('ultBase16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ultBaseVlanTag.setStatus('deprecated')
if mibBuilder.loadTexts: ultBaseVlanTag.setDescription('This object represents Uplink Tagging base index. This object has been deprecated. Please use an object defined in pdnUplinkTaggingObjectsR2.')
ultIndex = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ultIndex.setStatus('deprecated')
if mibBuilder.loadTexts: ultIndex.setDescription('This object represents VLAN tag index which represents an index into a block of VLAN Tags the unit will use. This object has been deprecated. Please use pdnUltIndex, which is more general below.')
pdnUplinkTaggingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2))
pdnUplinkTaggingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 1))
pdnUplinkTaggingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 2))
pdnUplinkTaggingDeprecatedGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 3))
pdn48PortUpLinkTaggingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 1, 1)).setObjects(("PDN-UPLINK-TAGGING-MIB", "pdnUltIndex"), ("PDN-UPLINK-TAGGING-MIB", "pdnGenUltBaseVlanTag"), ("PDN-UPLINK-TAGGING-MIB", "pdn48UltBaseVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdn48PortUpLinkTaggingGroup = pdn48PortUpLinkTaggingGroup.setStatus('current')
if mibBuilder.loadTexts: pdn48PortUpLinkTaggingGroup.setDescription('Uplink Tagging Objects for 48-Port chassis/units.')
pdn24PortUpLinkTaggingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 1, 2)).setObjects(("PDN-UPLINK-TAGGING-MIB", "pdnUltIndex"), ("PDN-UPLINK-TAGGING-MIB", "pdnGenUltBaseVlanTag"), ("PDN-UPLINK-TAGGING-MIB", "pdn24UltBaseVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdn24PortUpLinkTaggingGroup = pdn24PortUpLinkTaggingGroup.setStatus('current')
if mibBuilder.loadTexts: pdn24PortUpLinkTaggingGroup.setDescription('Uplink Tagging Objects for 24-Port chassis/units.')
upLinkTaggingDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 37, 2, 3, 1)).setObjects(("PDN-UPLINK-TAGGING-MIB", "ultBaseVlanTag"), ("PDN-UPLINK-TAGGING-MIB", "ultIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    upLinkTaggingDeprecatedGroup = upLinkTaggingDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: upLinkTaggingDeprecatedGroup.setDescription('Objects not to use.')
mibBuilder.exportSymbols("PDN-UPLINK-TAGGING-MIB", pdnUplinkTaggingObjectsR2=pdnUplinkTaggingObjectsR2, pdn24PortUpLinkTaggingGroup=pdn24PortUpLinkTaggingGroup, pdnGenUltBaseVlanTag=pdnGenUltBaseVlanTag, pdnUplinkTaggingCompliances=pdnUplinkTaggingCompliances, ultBaseVlanTag=ultBaseVlanTag, ultIndex=ultIndex, pdn48PortUpLinkTaggingGroup=pdn48PortUpLinkTaggingGroup, upLinkTaggingDeprecatedGroup=upLinkTaggingDeprecatedGroup, pdnUplinkTaggingConformance=pdnUplinkTaggingConformance, pdn48UltBaseVlanTag=pdn48UltBaseVlanTag, pdnUltIndex=pdnUltIndex, pdn24UltBaseVlanTag=pdn24UltBaseVlanTag, pdnUplinkTagging=pdnUplinkTagging, pdnUplinkTaggingObjects=pdnUplinkTaggingObjects, pdnUplinkTaggingDeprecatedGroup=pdnUplinkTaggingDeprecatedGroup, pdnUplinkTaggingGroups=pdnUplinkTaggingGroups, PYSNMP_MODULE_ID=pdnUplinkTagging)
