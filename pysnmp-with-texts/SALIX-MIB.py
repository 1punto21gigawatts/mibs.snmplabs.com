#
# PySNMP MIB module SALIX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, IpAddress, MibIdentifier, ModuleIdentity, Integer32, Bits, ObjectIdentity, Gauge32, TimeTicks, Unsigned32, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "IpAddress", "MibIdentifier", "ModuleIdentity", "Integer32", "Bits", "ObjectIdentity", "Gauge32", "TimeTicks", "Unsigned32", "Counter64", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
salixTechnologies = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158))
if mibBuilder.loadTexts: salixTechnologies.setLastUpdated('9810130000Z')
if mibBuilder.loadTexts: salixTechnologies.setOrganization('SALIX Technologies')
if mibBuilder.loadTexts: salixTechnologies.setContactInfo('904 Wind River Lane Suite 101 Gaithersburg, MD 20878 (301)-417-0017')
if mibBuilder.loadTexts: salixTechnologies.setDescription('The root of the SALIX Technologies enterprise')
salixMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 6))
salixExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 1))
if mibBuilder.loadTexts: salixExperimental.setStatus('current')
if mibBuilder.loadTexts: salixExperimental.setDescription("Provides a root for experimental MIB's")
salixGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 2))
if mibBuilder.loadTexts: salixGeneric.setStatus('current')
if mibBuilder.loadTexts: salixGeneric.setDescription('Provides a root for Generic Mibs that hold objects common to more than one product')
salixProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 3))
if mibBuilder.loadTexts: salixProducts.setStatus('current')
if mibBuilder.loadTexts: salixProducts.setDescription('Provides a root for Product Specific MIBS')
salixRegistrations = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 4))
if mibBuilder.loadTexts: salixRegistrations.setStatus('current')
if mibBuilder.loadTexts: salixRegistrations.setDescription('Provides Product Registrations for SALIX Technologies')
salixPlatforms = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 5))
if mibBuilder.loadTexts: salixPlatforms.setStatus('current')
if mibBuilder.loadTexts: salixPlatforms.setDescription('Provides a root for MIBS specific to SALIX platforms')
hybridSwitch = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 3, 1))
if mibBuilder.loadTexts: hybridSwitch.setStatus('current')
if mibBuilder.loadTexts: hybridSwitch.setDescription('All MIBS that are specific to the hybridSwitch family can be found here')
voip = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 3, 2))
if mibBuilder.loadTexts: voip.setStatus('current')
if mibBuilder.loadTexts: voip.setDescription('All MIBS that are specific to the voip family can be found here')
platform1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2158, 5, 1))
if mibBuilder.loadTexts: platform1.setStatus('current')
if mibBuilder.loadTexts: platform1.setDescription('All MIBS that are specific to the platform1 platform can be found here')
salixGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 6, 1))
salixCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 6, 2))
salixCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 6, 2, 1)).setObjects()

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixCompliance = salixCompliance.setStatus('current')
if mibBuilder.loadTexts: salixCompliance.setDescription('The basic implementation requirements for the SALIX-MIB.')
mibBuilder.exportSymbols("SALIX-MIB", salixProducts=salixProducts, salixExperimental=salixExperimental, salixMIBCompliance=salixMIBCompliance, platform1=platform1, salixGroups=salixGroups, salixGeneric=salixGeneric, salixTechnologies=salixTechnologies, voip=voip, PYSNMP_MODULE_ID=salixTechnologies, salixRegistrations=salixRegistrations, salixCompliance=salixCompliance, salixCompliances=salixCompliances, hybridSwitch=hybridSwitch, salixPlatforms=salixPlatforms)
