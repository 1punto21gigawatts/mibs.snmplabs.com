#
# PySNMP MIB module H3C-PPPOE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-PPPOE-SERVER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:23:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Gauge32, Integer32, ModuleIdentity, MibIdentifier, Bits, NotificationType, Counter32, iso, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Gauge32", "Integer32", "ModuleIdentity", "MibIdentifier", "Bits", "NotificationType", "Counter32", "iso", "Counter64", "IpAddress", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cPPPoEServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102))
h3cPPPoEServer.setRevisions(('2009-05-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cPPPoEServer.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: h3cPPPoEServer.setLastUpdated('200905060000Z')
if mibBuilder.loadTexts: h3cPPPoEServer.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cPPPoEServer.setContactInfo('Platform Team H3C Technologies Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip: 100085')
if mibBuilder.loadTexts: h3cPPPoEServer.setDescription('The MIB module is used for PPPoE server.')
h3cPPPoEServerObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1))
h3cPPPoEServerMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerMaxSessions.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoEServerMaxSessions.setDescription('The maximum sessions supported by PPPoE server.')
h3cPPPoEServerCurrSessions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerCurrSessions.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoEServerCurrSessions.setDescription('The number of current sessions on the PPPoE server.')
h3cPPPoEServerAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthRequests.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoEServerAuthRequests.setDescription('The number of authentication requests.')
h3cPPPoEServerAuthSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthSuccesses.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoEServerAuthSuccesses.setDescription('The number of authentication succeses.')
h3cPPPoEServerAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthFailures.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoEServerAuthFailures.setDescription('The number of authentication failure.')
h3cPPPoESAbnormOffsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsThreshold.setDescription('The threshold of abnormal offline count.')
h3cPPPoESAbnormOffPerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerThreshold.setDescription('The threshold of abnormal offline percent.')
h3cPPPoESNormOffPerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESNormOffPerThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESNormOffPerThreshold.setDescription('The threshold of normal offline percent.')
h3cPPPoEServerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2))
h3cPPPoeServerTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0))
h3cPPPoESAbnormOffsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 1))
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsAlarm.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsAlarm.setDescription('This trap is generated when the PPPoE server abnormal offline counts over threshold in five minutes.')
h3cPPPoESAbnormOffPerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 2))
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerAlarm.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerAlarm.setDescription('This trap is generated when the PPPoE server abnormal offline percent over threshold in five minutes.')
h3cPPPoESNormOffPerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 3))
if mibBuilder.loadTexts: h3cPPPoESNormOffPerAlarm.setStatus('current')
if mibBuilder.loadTexts: h3cPPPoESNormOffPerAlarm.setDescription('This trap is generated when the PPPoE server normal offline percent under threshold in five minutes.')
mibBuilder.exportSymbols("H3C-PPPOE-SERVER-MIB", h3cPPPoESAbnormOffPerAlarm=h3cPPPoESAbnormOffPerAlarm, h3cPPPoEServerAuthRequests=h3cPPPoEServerAuthRequests, h3cPPPoeServerTrapPrefix=h3cPPPoeServerTrapPrefix, PYSNMP_MODULE_ID=h3cPPPoEServer, h3cPPPoESNormOffPerAlarm=h3cPPPoESNormOffPerAlarm, h3cPPPoEServerObject=h3cPPPoEServerObject, h3cPPPoEServer=h3cPPPoEServer, h3cPPPoEServerTraps=h3cPPPoEServerTraps, h3cPPPoESAbnormOffsAlarm=h3cPPPoESAbnormOffsAlarm, h3cPPPoESNormOffPerThreshold=h3cPPPoESNormOffPerThreshold, h3cPPPoEServerAuthFailures=h3cPPPoEServerAuthFailures, h3cPPPoEServerAuthSuccesses=h3cPPPoEServerAuthSuccesses, h3cPPPoESAbnormOffPerThreshold=h3cPPPoESAbnormOffPerThreshold, h3cPPPoEServerMaxSessions=h3cPPPoEServerMaxSessions, h3cPPPoESAbnormOffsThreshold=h3cPPPoESAbnormOffsThreshold, h3cPPPoEServerCurrSessions=h3cPPPoEServerCurrSessions)
