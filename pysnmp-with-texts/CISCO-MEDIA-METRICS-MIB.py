#
# PySNMP MIB module CISCO-MEDIA-METRICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MEDIA-METRICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:07:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
cfmFlowId, cfmFlowMonitorId, cfmFlowMetricsIntNumber = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-MIB", "cfmFlowId", "cfmFlowMonitorId", "cfmFlowMetricsIntNumber")
FlowBitRateUnits, = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-TC-MIB", "FlowBitRateUnits")
ReportIntervalCount, = mibBuilder.importSymbols("CISCO-REPORT-INTERVAL-TC-MIB", "ReportIntervalCount")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, Counter64, Unsigned32, Counter32, ModuleIdentity, Integer32, IpAddress, NotificationType, Bits, ObjectIdentity, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "Counter64", "Unsigned32", "Counter32", "ModuleIdentity", "Integer32", "IpAddress", "NotificationType", "Bits", "ObjectIdentity", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp")
ciscoMediaMetricsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 771))
ciscoMediaMetricsMIB.setRevisions(('2011-03-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMediaMetricsMIB.setRevisionsDescriptions(('Latest version of this MIB module.',))
if mibBuilder.loadTexts: ciscoMediaMetricsMIB.setLastUpdated('201103230000Z')
if mibBuilder.loadTexts: ciscoMediaMetricsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMediaMetricsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoMediaMetricsMIB.setDescription('This MIB module defines objects that describe the quality metrics of Media streams. GLOSSARY ============ Flow Monitor - a hardware or software entity that classifies traffic flows, collects flow data, and periodically computes flow metrics. Flow Metric - a measurement that reflects the quality of a traffic flow. Measurement Interval - the length of time over which a flow monitor collects data related to a traffic flow, after which the flow monitor computes flow metrics using the collected data. Traffic Flow - a unidirectional stream of packets conforming to a classifier. For example, packets having a particular source IP address, destination IP address, protocol type, source port number, and destination port number. Traffic Flow Stream - when the monitor identifies multiple individual traffic flows based on the flow classificiation, the monitor aggregates the flows and represents them as a single entry in the cfmFlowTable. The individual traffic flows contributing to the metrics are called as individual traffic flow stream. The metrics for the traffic flow with multiple streams contributing, are determined either by aggregating metrics of all individual streams, for example, cumulative bit rate is computed by cumulative bits of all streams divided by total duration, or by selecting the metric for one of the individual stream, for example, maximum bit rate of an individual stream.')
ciscoMediaMetricsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 0))
ciscoMediaMetricsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 1))
ciscoMediaMetricsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 2))
ciscoMediaMetricsMIBIds = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 3))
ciscoMediaMetricsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 2, 1))
cfmMediaMetrics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1))
cfmMediaMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1), )
if mibBuilder.loadTexts: cfmMediaMetricsTable.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsTable.setDescription("This table contains aggregate data maintained by a flow monitor for traffic flows for which it is computing Media metrics. This table has an sparse dependent relationship on the cfmFlowMetricsTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsTable having a corresponding instance of cfmFlowMetricsCollected with the 'media' bit set to one.")
cfmMediaMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"))
if mibBuilder.loadTexts: cfmMediaMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsEntry.setDescription('An entry describes cumulative and aggregate Media metrics for a single traffic flow. The devices creates a row in the cfmMediaMetricsTable when a flow monitor starts monitoring a traffic flow and has been configured to compute Media metrics for the same traffic flow. Likewise, the device destroys a row in the cfmMediaMetricsTable when the corresponding flow monitor has ceased monitoring the traffic flow (e.g., when a traffic flow has timed out).')
cfmMediaMetricsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("pkts", 0), ("octets", 1), ("bitRate", 2), ("pktRate", 3), ("streamBitRate", 4), ("streamBitRateMax", 5), ("streamBitRateMin", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsValid.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsValid.setDescription("This object indicates which metrics are valid for the traffic flow: 'pkts' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsPkts is valid. 'octets' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsOctets is valid. 'bitRate' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsBitRateUnits and cfmMediaMetricsBitRate are valid. 'pktRate' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsPktRate is valid. 'streamBitRate' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsStreamBitRateUnits and cfmMediaMetricsStreamBitRate are valid. 'streamBitRateMax' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsStreamBitRateMaxUnits and cfmMediaMetricsStreamBitRateMax are valid. 'streamBitRateMin' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsStreamBitRateMinUnits and cfmMediaMetricsStreamBitRateMin are valid.")
cfmMediaMetricsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsPkts.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsPkts.setDescription('This object indicates the total number of packets, containing media payload, processed by the corresponding flow monitor for the corresponding traffic flow.')
cfmMediaMetricsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsOctets.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsOctets.setDescription('This object indicates the total number of octets representing media payload, processed by the corresponding flow monitor for the corresponding traffic flow.')
cfmMediaMetricsBitRateUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 4), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsBitRateUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsBitRateUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsBitRate.')
cfmMediaMetricsBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsBitRate.setDescription('This object indicates the average bit rate at which the corresponding flow monitor is processing data, containing media payload, for the corresponding traffic flow. This value is cumulative over the lifetime of the traffic flow.')
cfmMediaMetricsPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 6), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsPktRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsPktRate.setDescription('This object indicates the average packet rate at which the corresponding flow monitor is processing data, containing media payload, for the corresponding traffic flow. This value is cumulative over the lifetime of the traffic flow.')
cfmMediaMetricsStreamBitRateUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 7), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsStreamBitRate.')
cfmMediaMetricsStreamBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRate.setDescription("This object indicates the average of media bit rates of all the individual streams contributing to the traffic flow. This object is computed by dividing the average media bit rate, indicated by 'cfmMediaMetricsBitRate', by the number of streams which have contributed to the metrics over the lifetime of the traffic flow.")
cfmMediaMetricsStreamBitRateMaxUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 9), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMaxUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMaxUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsStreamBitRateMax.')
cfmMediaMetricsStreamBitRateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMax.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMax.setDescription('This object indicates the maximum media bit rate observed, among the individual streams, that have contributed to the metrics over the lifetime of the traffic flow.')
cfmMediaMetricsStreamBitRateMinUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 11), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMinUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMinUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsStreamBitRateMin.')
cfmMediaMetricsStreamBitRateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMin.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsStreamBitRateMin.setDescription('This object indicates the minimum media bit rate observed, among the individual streams, that have contributed to the metrics over the lifetime of the traffic flow.')
cfmMediaMetricsTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsTableChanged.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsTableChanged.setDescription('This object indicates the value of sysUpTime the last time the device created/destroyed a row in the cfmMediaMetricsTable.')
cfmMediaMetricsIntTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3), )
if mibBuilder.loadTexts: cfmMediaMetricsIntTable.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntTable.setDescription("This table contains historic Media metrics for the traffic flows monitored by each of the flow monitors supported by the device. This table has an sparse dependent relationship on the cfmFlowMetricsIntTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsIntTable having a corresponding instance of cfmFlowMetricsCollected with the 'media' bit set to one.")
cfmMediaMetricsIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMetricsIntNumber"))
if mibBuilder.loadTexts: cfmMediaMetricsIntEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntEntry.setDescription('An entry describes Media metrics collected for a previous measurement interval for a corresponding traffic flow.')
cfmMediaMetricsIntValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("pkts", 0), ("octets", 1), ("bitRate", 2), ("pktRate", 3), ("streamBitRate", 4), ("streamBitRateMax", 5), ("streamBitRateMin", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntValid.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntValid.setDescription("This object indicates which metrics are valid for the measurement interval: 'pkts' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsIntPkts is valid. 'octets' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsIntOctets is valid. 'bitRate' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsIntBitRateUnits and cfmMediaMetricsIntBitRate are valid. 'pktRate' If this bit is set to '1', then the corresponding instance of cfmMediaMetricsIntPktRate is valid. 'streamBitRate' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsIntStreamBitRateUnits and cfmMediaMetricsIntStreamBitRate are valid. 'streamBitRateMax' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsIntStreamBitRateMaxUnits and cfmMediaMetricsIntStreamBitRateMax are valid. 'streamBitRateMin' If this bit is set to '1', then the corresponding instances of cfmMediaMetricsIntStreamBitRateMinUnits and cfmMediaMetricsIntStreamBitRateMin are valid.")
cfmMediaMetricsIntPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 2), ReportIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntPkts.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntPkts.setDescription('This object indicates the total number of packets, containing media payload, processed by the corresponding flow monitor for the corresponding traffic flow during the measurement interval.')
cfmMediaMetricsIntOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 3), ReportIntervalCount()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntOctets.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntOctets.setDescription('This object indicates the total number of octets contained by the packets, representing media payload, processed by the corresponding flow monitor for the corresponding traffic flow during the measurement interval.')
cfmMediaMetricsIntBitRateUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 4), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntBitRateUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntBitRateUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsIntBitRate.')
cfmMediaMetricsIntBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 5), ReportIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntBitRate.setDescription('This object indicates the average bit rate at which the corresponding flow monitor processed data, containing media payload, for the corresponding traffic flow during the measurement interval.')
cfmMediaMetricsIntPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 6), ReportIntervalCount()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntPktRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntPktRate.setDescription('This object indicates the average packet rate at which the corresponding flow monitor processed data, containing media payload, for the corresponding traffic flow during the measurement interval.')
cfmMediaMetricsIntStreamBitRateUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 7), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsIntStreamBitRate.')
cfmMediaMetricsIntStreamBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 8), ReportIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRate.setDescription('This object indicates the average of media bit rates of all the individual streams which contributed to the traffic flow during measurement interval.')
cfmMediaMetricsIntStreamBitRateMaxUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 9), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMaxUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMaxUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsIntStreamBitRateMax.')
cfmMediaMetricsIntStreamBitRateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMax.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMax.setDescription('This object indicates the maximum media bit rate observed, among the individual streams, which contributed to the traffic flow during the measurement interval.')
cfmMediaMetricsIntStreamBitRateMinUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 11), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMinUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMinUnits.setDescription('This object indicates the units for the corresponding instance of cfmMediaMetricsIntStreamBitRateMin.')
cfmMediaMetricsIntStreamBitRateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 771, 1, 1, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMin.setStatus('current')
if mibBuilder.loadTexts: cfmMediaMetricsIntStreamBitRateMin.setDescription('This object indicates the minimum media bit rate observed, among the individual streams, which contributed to the traffic flow during the measurement interval.')
ciscoMediaMetricsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 771, 2, 2))
ciscoMediaMetricsMIBCompliance01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 771, 2, 1, 1)).setObjects(("CISCO-MEDIA-METRICS-MIB", "ciscoMediaMetricsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMediaMetricsMIBCompliance01 = ciscoMediaMetricsMIBCompliance01.setStatus('current')
if mibBuilder.loadTexts: ciscoMediaMetricsMIBCompliance01.setDescription('This compliance statement specifies the minimal requirements an implementation must meet in order to claim full compliance with the definition of the CISCO-MEDIA-METRICS-MIB.')
ciscoMediaMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 771, 2, 2, 1)).setObjects(("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsValid"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsPkts"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsOctets"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsBitRateUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsBitRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsPktRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRateUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRateMaxUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRateMax"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRateMinUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsStreamBitRateMin"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsTableChanged"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntValid"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntPkts"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntOctets"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntBitRateUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntBitRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntPktRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRateUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRate"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRateMaxUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRateMax"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRateMinUnits"), ("CISCO-MEDIA-METRICS-MIB", "cfmMediaMetricsIntStreamBitRateMin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMediaMetricsGroup = ciscoMediaMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoMediaMetricsGroup.setDescription('This group contains objects that describe Media metrics.')
mibBuilder.exportSymbols("CISCO-MEDIA-METRICS-MIB", cfmMediaMetricsIntStreamBitRateMin=cfmMediaMetricsIntStreamBitRateMin, cfmMediaMetricsOctets=cfmMediaMetricsOctets, cfmMediaMetricsIntBitRateUnits=cfmMediaMetricsIntBitRateUnits, cfmMediaMetricsIntOctets=cfmMediaMetricsIntOctets, cfmMediaMetricsStreamBitRateMax=cfmMediaMetricsStreamBitRateMax, ciscoMediaMetricsMIBIds=ciscoMediaMetricsMIBIds, cfmMediaMetricsPkts=cfmMediaMetricsPkts, cfmMediaMetricsTableChanged=cfmMediaMetricsTableChanged, cfmMediaMetricsStreamBitRateMaxUnits=cfmMediaMetricsStreamBitRateMaxUnits, PYSNMP_MODULE_ID=ciscoMediaMetricsMIB, cfmMediaMetricsIntTable=cfmMediaMetricsIntTable, cfmMediaMetricsIntPkts=cfmMediaMetricsIntPkts, cfmMediaMetricsIntStreamBitRateMinUnits=cfmMediaMetricsIntStreamBitRateMinUnits, ciscoMediaMetricsMIBCompliance01=ciscoMediaMetricsMIBCompliance01, cfmMediaMetricsIntPktRate=cfmMediaMetricsIntPktRate, cfmMediaMetricsIntStreamBitRate=cfmMediaMetricsIntStreamBitRate, cfmMediaMetricsEntry=cfmMediaMetricsEntry, cfmMediaMetricsPktRate=cfmMediaMetricsPktRate, ciscoMediaMetricsMIBCompliances=ciscoMediaMetricsMIBCompliances, ciscoMediaMetricsMIBNotifs=ciscoMediaMetricsMIBNotifs, cfmMediaMetricsStreamBitRateMinUnits=cfmMediaMetricsStreamBitRateMinUnits, ciscoMediaMetricsMIBObjects=ciscoMediaMetricsMIBObjects, cfmMediaMetricsIntStreamBitRateMax=cfmMediaMetricsIntStreamBitRateMax, cfmMediaMetricsIntEntry=cfmMediaMetricsIntEntry, ciscoMediaMetricsMIBGroups=ciscoMediaMetricsMIBGroups, cfmMediaMetricsBitRate=cfmMediaMetricsBitRate, cfmMediaMetricsStreamBitRateMin=cfmMediaMetricsStreamBitRateMin, ciscoMediaMetricsMIBConform=ciscoMediaMetricsMIBConform, cfmMediaMetricsIntStreamBitRateUnits=cfmMediaMetricsIntStreamBitRateUnits, ciscoMediaMetricsGroup=ciscoMediaMetricsGroup, cfmMediaMetricsStreamBitRateUnits=cfmMediaMetricsStreamBitRateUnits, cfmMediaMetricsStreamBitRate=cfmMediaMetricsStreamBitRate, cfmMediaMetricsTable=cfmMediaMetricsTable, ciscoMediaMetricsMIB=ciscoMediaMetricsMIB, cfmMediaMetricsBitRateUnits=cfmMediaMetricsBitRateUnits, cfmMediaMetrics=cfmMediaMetrics, cfmMediaMetricsValid=cfmMediaMetricsValid, cfmMediaMetricsIntBitRate=cfmMediaMetricsIntBitRate, cfmMediaMetricsIntStreamBitRateMaxUnits=cfmMediaMetricsIntStreamBitRateMaxUnits, cfmMediaMetricsIntValid=cfmMediaMetricsIntValid)
