#
# PySNMP MIB module EXTREME-SLB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
extremeSlb = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 14))
if mibBuilder.loadTexts: extremeSlb.setLastUpdated('0003080000Z')
if mibBuilder.loadTexts: extremeSlb.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeSlb.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeSlb.setDescription('Extreme Server Load Balancing information')
extremeSlbRealServerTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 14, 1), )
if mibBuilder.loadTexts: extremeSlbRealServerTable.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealServerTable.setDescription('This table contains information about a real server. It currently indicates only whether the server is up.')
extremeSlbRealServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 14, 1, 1), ).setIndexNames((0, "EXTREME-SLB-MIB", "extremeSlbRealServerIpAddress"))
if mibBuilder.loadTexts: extremeSlbRealServerEntry.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealServerEntry.setDescription('An entry in the table of real server information.')
extremeSlbRealServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 14, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: extremeSlbRealServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealServerIpAddress.setDescription('The IP address of the real server.')
extremeSlbRealServerUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 14, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSlbRealServerUp.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealServerUp.setDescription('Indicates whether the server is operational. If the server is up, the load balancer may send traffic to applications on the server. If the server is not up, the load balancer will send no traffic to the server. This status may be written by an external device that knows the state of the server.')
extremeSlbRealAppTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 14, 2), )
if mibBuilder.loadTexts: extremeSlbRealAppTable.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealAppTable.setDescription('This table contains information about an application on a particular TCP or UDP port of a real server. It currently indicates only whether the application is up.')
extremeSlbRealAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 14, 2, 1), ).setIndexNames((0, "EXTREME-SLB-MIB", "extremeSlbRealAppIpAddress"), (0, "EXTREME-SLB-MIB", "extremeSlbRealAppPort"))
if mibBuilder.loadTexts: extremeSlbRealAppEntry.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealAppEntry.setDescription('An entry in the table of real server application information.')
extremeSlbRealAppIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 14, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: extremeSlbRealAppIpAddress.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealAppIpAddress.setDescription('The IP address of the real server.')
extremeSlbRealAppPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: extremeSlbRealAppPort.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealAppPort.setDescription('The TCP or UDP port on the real server that the application is using.')
extremeSlbRealAppUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 14, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSlbRealAppUp.setStatus('current')
if mibBuilder.loadTexts: extremeSlbRealAppUp.setDescription('Indicates whether the application is operational. If the application is up, the load balancer may send traffic to it. If the application is not up, the load balancer will send no traffic to it, but the load balancer may send traffic to other applications on the same server.')
mibBuilder.exportSymbols("EXTREME-SLB-MIB", extremeSlbRealServerIpAddress=extremeSlbRealServerIpAddress, PYSNMP_MODULE_ID=extremeSlb, extremeSlbRealAppPort=extremeSlbRealAppPort, extremeSlbRealServerUp=extremeSlbRealServerUp, extremeSlbRealAppUp=extremeSlbRealAppUp, extremeSlb=extremeSlb, extremeSlbRealServerTable=extremeSlbRealServerTable, extremeSlbRealAppEntry=extremeSlbRealAppEntry, extremeSlbRealAppTable=extremeSlbRealAppTable, extremeSlbRealServerEntry=extremeSlbRealServerEntry, extremeSlbRealAppIpAddress=extremeSlbRealAppIpAddress)
