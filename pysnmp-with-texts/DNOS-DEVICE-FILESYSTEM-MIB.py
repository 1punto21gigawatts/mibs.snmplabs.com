#
# PySNMP MIB module DNOS-DEVICE-FILESYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-DEVICE-FILESYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:51:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, Gauge32, Counter64, ObjectIdentity, Unsigned32, iso, IpAddress, Integer32, ModuleIdentity, Bits, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "Gauge32", "Counter64", "ObjectIdentity", "Unsigned32", "iso", "IpAddress", "Integer32", "ModuleIdentity", "Bits", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
fastpathDeviceFileSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44))
fastpathDeviceFileSystem.setRevisions(('2011-01-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastpathDeviceFileSystem.setRevisionsDescriptions(('Postal address updated.',))
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setOrganization('Dell, Inc.')
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setContactInfo('')
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setDescription('The Broadcom Private MIB for DNOS DeviceFileSystem')
agentDeviceFileSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1))
agentDeviceFileSystemTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1), )
if mibBuilder.loadTexts: agentDeviceFileSystemTable.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemTable.setDescription('DeviceFileSystem Table')
agentDeviceFileSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1), ).setIndexNames((0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDeviceFileSystemIndex"))
if mibBuilder.loadTexts: agentDeviceFileSystemEntry.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemEntry.setDescription('DeviceFileSystem entry')
agentDeviceFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemIndex.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemIndex.setDescription('Describes the index of FileSystem device plugged into the switch.')
agentDeviceFileSystemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("invalid", 3))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemStatus.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemStatus.setDescription('Describes the current status of FileSystem device plugged into the switch.')
agentDeviceFileSystemVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemVendorID.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemVendorID.setDescription('DeviceFileSystem vendor ID.')
agentDeviceFileSystemProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemProductID.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemProductID.setDescription('DeviceFileSystem Product ID.')
agentDeviceFileSystemManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemManufacturer.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemManufacturer.setDescription('DeviceFileSystem Manufacturer.')
agentDeviceFileSystemSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemSerialNumber.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemSerialNumber.setDescription('DeviceFileSystem Serial Number.')
agentDeviceFileSystemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemVersion.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemVersion.setDescription('DeviceFileSystem Version.')
agentDeviceFileSystemProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemProtocol.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemProtocol.setDescription('DeviceFileSystem Protocol')
agentDeviceFileSystemClass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemClass.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemClass.setDescription('DeviceFileSystem Class.')
agentDeviceFileSystemSubclass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemSubclass.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemSubclass.setDescription('DeviceFileSystem SubClass.')
agentDeviceFileSystemTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemTotalSize.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemTotalSize.setDescription('DeviceFileSystem storage size')
agentDeviceFileSystemBytesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemBytesUsed.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemBytesUsed.setDescription('Indicates size of memory used on the DeviceFileSystem.')
agentDeviceFileSystemBytesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemBytesFree.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemBytesFree.setDescription('Indicates size of memory free on the USB flash drive device.')
agentDeviceFileSystemUnmount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("unmount", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDeviceFileSystemUnmount.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemUnmount.setDescription('Used to make the DeviceFileSystem Inactive by sending unmount(1). Get operation is invalid for this object. It just returns none(0)')
agentDeviceFileSystemContentTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2), )
if mibBuilder.loadTexts: agentDeviceFileSystemContentTable.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemContentTable.setDescription('Table display DeviceFileSystem contents')
agentDeviceFileSystemContentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1), ).setIndexNames((0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDevFileSystemIndex"), (0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDeviceFileSystemContentFileName"))
if mibBuilder.loadTexts: agentDeviceFileSystemContentEntry.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemContentEntry.setDescription('DeviceFileSystem Content, Refers to each File')
agentDevFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDevFileSystemIndex.setStatus('current')
if mibBuilder.loadTexts: agentDevFileSystemIndex.setDescription('Describes the index of FileSystem device plugged into the switch.')
agentDeviceFileSystemContentFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileName.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileName.setDescription(' Name of the file stored in DeviceFileSystem ')
agentDeviceFileSystemContentFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileSize.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileSize.setDescription(' Size of the file stored in DeviceFileSystem ')
agentDeviceFileSystemContentFileModificationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileModificationTime.setStatus('current')
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileModificationTime.setDescription(' Last modification time of the file stored in DeviceFileSystem ')
mibBuilder.exportSymbols("DNOS-DEVICE-FILESYSTEM-MIB", agentDeviceFileSystemSerialNumber=agentDeviceFileSystemSerialNumber, agentDeviceFileSystemManufacturer=agentDeviceFileSystemManufacturer, agentDeviceFileSystemContentFileModificationTime=agentDeviceFileSystemContentFileModificationTime, agentDeviceFileSystemContentTable=agentDeviceFileSystemContentTable, agentDeviceFileSystemBytesUsed=agentDeviceFileSystemBytesUsed, agentDeviceFileSystemIndex=agentDeviceFileSystemIndex, agentDeviceFileSystemVersion=agentDeviceFileSystemVersion, agentDeviceFileSystemClass=agentDeviceFileSystemClass, agentDeviceFileSystemBytesFree=agentDeviceFileSystemBytesFree, agentDeviceFileSystemContentFileSize=agentDeviceFileSystemContentFileSize, agentDeviceFileSystemProductID=agentDeviceFileSystemProductID, agentDeviceFileSystemSubclass=agentDeviceFileSystemSubclass, agentDeviceFileSystemTotalSize=agentDeviceFileSystemTotalSize, fastpathDeviceFileSystem=fastpathDeviceFileSystem, agentDeviceFileSystemVendorID=agentDeviceFileSystemVendorID, agentDeviceFileSystemEntry=agentDeviceFileSystemEntry, agentDeviceFileSystemUnmount=agentDeviceFileSystemUnmount, PYSNMP_MODULE_ID=fastpathDeviceFileSystem, agentDeviceFileSystemProtocol=agentDeviceFileSystemProtocol, agentDeviceFileSystemTable=agentDeviceFileSystemTable, agentDeviceFileSystemStatus=agentDeviceFileSystemStatus, agentDeviceFileSystemContentFileName=agentDeviceFileSystemContentFileName, agentDeviceFileSystemContentEntry=agentDeviceFileSystemContentEntry, agentDeviceFileSystemGroup=agentDeviceFileSystemGroup, agentDevFileSystemIndex=agentDevFileSystemIndex)
