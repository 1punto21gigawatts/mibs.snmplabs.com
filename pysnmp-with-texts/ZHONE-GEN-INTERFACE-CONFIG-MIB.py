#
# PySNMP MIB module ZHONE-GEN-INTERFACE-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-GEN-INTERFACE-CONFIG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:47:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Bits, Counter32, NotificationType, Integer32, Unsigned32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Bits", "Counter32", "NotificationType", "Integer32", "Unsigned32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Gauge32", "IpAddress")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
zhoneModules, zhoneInterfaceConfig = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneInterfaceConfig")
ZhoneAlarmSeverity, ZhoneRowStatus = mibBuilder.importSymbols("Zhone-TC", "ZhoneAlarmSeverity", "ZhoneRowStatus")
alarmConfigMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1))
alarmConfigMib.setRevisions(('2010-12-07 02:37', '2008-02-26 06:25',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alarmConfigMib.setRevisionsDescriptions(('V01.00.02 - Added alarmSeverity', 'V01.00.01 - adding alarmConfigTraps',))
if mibBuilder.loadTexts: alarmConfigMib.setLastUpdated('201012071714Z')
if mibBuilder.loadTexts: alarmConfigMib.setOrganization('Organization.')
if mibBuilder.loadTexts: alarmConfigMib.setContactInfo('Contact-info.')
if mibBuilder.loadTexts: alarmConfigMib.setDescription('Description.')
alarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1), )
if mibBuilder.loadTexts: alarmConfigTable.setStatus('current')
if mibBuilder.loadTexts: alarmConfigTable.setDescription('The alarm configuration table')
alarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: alarmConfigEntry.setStatus('current')
if mibBuilder.loadTexts: alarmConfigEntry.setDescription('An entry in the alarm configuration table.')
alarmConfigBitRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigBitRateThreshold.setStatus('current')
if mibBuilder.loadTexts: alarmConfigBitRateThreshold.setDescription('This field describes the enable status of the Bit Rate Threshold Alarm. If this field is true (1) then the Bit Rate Threshold alarm is enabled. If this field is false (2) then the Bit Rate Threshold Alarm is disabled.')
alarmConfigBitRateThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigBitRateThresholdValue.setStatus('current')
if mibBuilder.loadTexts: alarmConfigBitRateThresholdValue.setDescription('This field indicates the Bit Rate Threshold Value which will generate an alarm if the Bit Rate Threshold Alarm is enabled and the Bit Rate of this ifIndex drops below this value.')
alarmConfigBitRateThresholdHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigBitRateThresholdHoldtime.setStatus('current')
if mibBuilder.loadTexts: alarmConfigBitRateThresholdHoldtime.setDescription('This field indicates the Bit Rate Threshold Holdtime in seconds for which the Bit Rate of the ifIndex must remain below the Bit Rate Threshold Value before an alarm will be generated if the Bit Rate Threshold Alarm is enabled. ')
alarmConfigStatusTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigStatusTrap.setStatus('current')
if mibBuilder.loadTexts: alarmConfigStatusTrap.setDescription('This field describes the enable status of the Status Trap Alarm. If this field is true (1) then the Status Trap alarm is enabled. If this field is false (2) then the Status Trap Alarm is disabled.')
alarmConfigAdminUp = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigAdminUp.setStatus('current')
if mibBuilder.loadTexts: alarmConfigAdminUp.setDescription('This field describes the enable status of the Admin Up Alarm. If this field is true (1) then the Admin Up alarm is enabled. If this field is false (2) then the Admin Up Alarm is disabled.')
alarmConfigAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 6), ZhoneAlarmSeverity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: alarmConfigAlarmSeverity.setDescription("This object is used to override Trap, Central Alarm Manager and CLI 'LineAlarm' severity levels for the specified interface. ")
alarmConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 1, 1, 7), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmConfigRowStatus.setStatus('current')
if mibBuilder.loadTexts: alarmConfigRowStatus.setDescription('This object is used to create, delete or modify a row in this table. ')
alarmConfigTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 2))
alarmConfigTrapPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 2, 0))
if mibBuilder.loadTexts: alarmConfigTrapPrefix.setStatus('current')
if mibBuilder.loadTexts: alarmConfigTrapPrefix.setDescription('Description.')
zhoneAlarmConfigThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 2, 0, 1))
if mibBuilder.loadTexts: zhoneAlarmConfigThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: zhoneAlarmConfigThresholdTrap.setDescription('This Trap is generated when this ifIndex bandwidth drops below the alarmConfigBitRateThresholdValue for the time specified in alarmConfigBitRateThesholdHoldtime.')
zhoneAlarmConfigThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 13, 1, 2, 0, 2))
if mibBuilder.loadTexts: zhoneAlarmConfigThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: zhoneAlarmConfigThresholdClearTrap.setDescription('This trap is generated when this ifIndex bandwidth goes above the alarmConfigBitRateThresholdValue for the time specified in alarmConfigBitRateThresholdHoldtime.')
mibBuilder.exportSymbols("ZHONE-GEN-INTERFACE-CONFIG-MIB", alarmConfigRowStatus=alarmConfigRowStatus, alarmConfigMib=alarmConfigMib, zhoneAlarmConfigThresholdTrap=zhoneAlarmConfigThresholdTrap, alarmConfigBitRateThresholdHoldtime=alarmConfigBitRateThresholdHoldtime, alarmConfigStatusTrap=alarmConfigStatusTrap, alarmConfigAdminUp=alarmConfigAdminUp, alarmConfigBitRateThreshold=alarmConfigBitRateThreshold, alarmConfigEntry=alarmConfigEntry, alarmConfigBitRateThresholdValue=alarmConfigBitRateThresholdValue, alarmConfigTraps=alarmConfigTraps, alarmConfigAlarmSeverity=alarmConfigAlarmSeverity, alarmConfigTrapPrefix=alarmConfigTrapPrefix, PYSNMP_MODULE_ID=alarmConfigMib, zhoneAlarmConfigThresholdClearTrap=zhoneAlarmConfigThresholdClearTrap, alarmConfigTable=alarmConfigTable)
