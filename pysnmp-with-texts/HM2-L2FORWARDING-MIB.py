#
# PySNMP MIB module HM2-L2FORWARDING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-L2FORWARDING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:31:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
hm2ConfigurationMibs, HmEnabledStatus = mibBuilder.importSymbols("HM2-TC-MIB", "hm2ConfigurationMibs", "HmEnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Counter64, Integer32, Bits, MibIdentifier, ModuleIdentity, TimeTicks, Gauge32, Counter32, ObjectIdentity, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Counter64", "Integer32", "Bits", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Gauge32", "Counter32", "ObjectIdentity", "iso", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hm2L2ForwardingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 30))
hm2L2ForwardingMib.setRevisions(('2011-03-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hm2L2ForwardingMib.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: hm2L2ForwardingMib.setLastUpdated('201103160000Z')
if mibBuilder.loadTexts: hm2L2ForwardingMib.setOrganization('Hirschmann Automation and Control GmbH')
if mibBuilder.loadTexts: hm2L2ForwardingMib.setContactInfo('Postal: Stuttgarter Str. 45-51 72654 Neckartenzlingen Germany Phone: +49 7127 140 E-mail: hac.support@belden.com')
if mibBuilder.loadTexts: hm2L2ForwardingMib.setDescription('Hirschmann L2 Forwarding MIB. Copyright (C) 2011. All Rights Reserved.')
hm2L2ForwardingMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 30, 0))
hm2L2ForwardingMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 30, 1))
hm2L2ForwGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 1))
hm2L2ForwClassOfServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2))
hm2L2VlanUnawareModeAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2L2VlanUnawareModeAdminStatus.setStatus('current')
if mibBuilder.loadTexts: hm2L2VlanUnawareModeAdminStatus.setDescription('Enables or disables VLAN unaware mode for the switch unit.')
hm2L2VlanUnawareModeOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 1, 2), HmEnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2L2VlanUnawareModeOperStatus.setStatus('current')
if mibBuilder.loadTexts: hm2L2VlanUnawareModeOperStatus.setDescription('Shows if VLAN unaware mode for the switch unit is enables or disables.')
hm2TrafficClassTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 1), )
if mibBuilder.loadTexts: hm2TrafficClassTable.setReference('ISO/IEC 15802-3 Table 7-2')
if mibBuilder.loadTexts: hm2TrafficClassTable.setStatus('current')
if mibBuilder.loadTexts: hm2TrafficClassTable.setDescription('A table mapping evaluated User Priority to Traffic Class, for forwarding by the bridge. Traffic class is a number in the range (0..(dot1dPortNumTrafficClasses-1)).')
hm2TrafficClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 1, 1), ).setIndexNames((0, "HM2-L2FORWARDING-MIB", "hm2TrafficClassPriority"))
if mibBuilder.loadTexts: hm2TrafficClassEntry.setStatus('current')
if mibBuilder.loadTexts: hm2TrafficClassEntry.setDescription('User Priority to Traffic Class mapping.')
hm2TrafficClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hm2TrafficClassPriority.setStatus('current')
if mibBuilder.loadTexts: hm2TrafficClassPriority.setDescription('The Priority value determined for the received frame. This value is equivalent to the priority indicated in the tagged frame received, or one of the evaluated priorities, determined according to the media-type. For untagged frames received from Ethernet media, this value is equal to the dot1dPortDefaultUserPriority value for the ingress port.')
hm2TrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficClass.setStatus('current')
if mibBuilder.loadTexts: hm2TrafficClass.setDescription('The Traffic Class the received frame is mapped to.')
hm2CosMapIpDscpTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 2), )
if mibBuilder.loadTexts: hm2CosMapIpDscpTable.setStatus('current')
if mibBuilder.loadTexts: hm2CosMapIpDscpTable.setDescription('A table mapping evaluated IP DSCP to Traffic Class for a specific physical port. Traffic class is a number in the range (0..(dot1dPortNumTrafficClasses-1)).')
hm2CosMapIpDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 2, 1), ).setIndexNames((0, "HM2-L2FORWARDING-MIB", "hm2CosMapIpDscpValue"))
if mibBuilder.loadTexts: hm2CosMapIpDscpEntry.setStatus('current')
if mibBuilder.loadTexts: hm2CosMapIpDscpEntry.setDescription('IP DSCP to Traffic Class mapping for a port.')
hm2CosMapIpDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hm2CosMapIpDscpValue.setStatus('current')
if mibBuilder.loadTexts: hm2CosMapIpDscpValue.setDescription('The IP DSCP value contained in the received frame. This value is only indicated in IP packets, but is independent of both media-type and frame tagging. Non-IP packets are handled in accordance with the dot1dPortDefaultUserPriority value of the ingress port.')
hm2CosMapIpDscpTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 30, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CosMapIpDscpTrafficClass.setStatus('current')
if mibBuilder.loadTexts: hm2CosMapIpDscpTrafficClass.setDescription('Traffic class priority queue the received frame is mapped to.')
mibBuilder.exportSymbols("HM2-L2FORWARDING-MIB", hm2TrafficClassEntry=hm2TrafficClassEntry, hm2L2VlanUnawareModeAdminStatus=hm2L2VlanUnawareModeAdminStatus, hm2TrafficClassTable=hm2TrafficClassTable, hm2TrafficClass=hm2TrafficClass, hm2CosMapIpDscpTrafficClass=hm2CosMapIpDscpTrafficClass, hm2L2ForwardingMibObjects=hm2L2ForwardingMibObjects, hm2L2VlanUnawareModeOperStatus=hm2L2VlanUnawareModeOperStatus, hm2TrafficClassPriority=hm2TrafficClassPriority, hm2L2ForwGeneralGroup=hm2L2ForwGeneralGroup, hm2CosMapIpDscpValue=hm2CosMapIpDscpValue, hm2L2ForwardingMib=hm2L2ForwardingMib, hm2CosMapIpDscpTable=hm2CosMapIpDscpTable, hm2L2ForwardingMibNotifications=hm2L2ForwardingMibNotifications, hm2L2ForwClassOfServiceGroup=hm2L2ForwClassOfServiceGroup, PYSNMP_MODULE_ID=hm2L2ForwardingMib, hm2CosMapIpDscpEntry=hm2CosMapIpDscpEntry)
