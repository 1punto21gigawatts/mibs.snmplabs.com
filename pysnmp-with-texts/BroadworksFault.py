#
# PySNMP MIB module BroadworksFault (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BroadworksFault
# Produced by pysmi-0.3.4 at Wed May  1 11:42:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, NotificationType, Gauge32, iso, ObjectIdentity, TimeTicks, MibIdentifier, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, enterprises, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "NotificationType", "Gauge32", "iso", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "enterprises", "Counter32", "IpAddress")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
broadsoft = ModuleIdentity((1, 3, 6, 1, 4, 1, 6431))
broadsoft.setRevisions(('2000-09-19 14:31',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: broadsoft.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: broadsoft.setLastUpdated('200802220000Z')
if mibBuilder.loadTexts: broadsoft.setOrganization('Broadsoft, Inc')
if mibBuilder.loadTexts: broadsoft.setContactInfo('Broadsoft, Inc. 220 Perry Parkway Gaithersburg, MD 20877 301-977-9440')
if mibBuilder.loadTexts: broadsoft.setDescription('This document contains the management information that is common to all elements in a Broadworks system.')
broadworks = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1))
common = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 1))
systemFaults = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1))
faultFields = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1))
identifier = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 1), Counter32())
if mibBuilder.loadTexts: identifier.setStatus('current')
if mibBuilder.loadTexts: identifier.setDescription('A sequentially generated number, which can be used to uniquely identify the fault.')
timeStamp = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 2), DateAndTime())
if mibBuilder.loadTexts: timeStamp.setStatus('current')
if mibBuilder.loadTexts: timeStamp.setDescription('The date and time at which the fault was generated')
alarmName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 3), DisplayString())
if mibBuilder.loadTexts: alarmName.setStatus('current')
if mibBuilder.loadTexts: alarmName.setDescription('The name of the alarm that occurred. This name is also referenced in an alarm guide.')
systemName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 4), DisplayString())
if mibBuilder.loadTexts: systemName.setStatus('current')
if mibBuilder.loadTexts: systemName.setDescription('The hostname of the system')
severity = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("informational", 0), ("low", 1), ("medium", 2), ("high", 3), ("critical", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: severity.setStatus('current')
if mibBuilder.loadTexts: severity.setDescription('An indicator of the severity of the fault. informational: Not service affecting low: Losing redundant connectivity, but not service or capacity affecting. medium: ability to provide connectivity, but service level affecting. high: Inability to provide connectivity over a particular interface. critical: No basic calls can be processed without operator intervention.')
alarmState = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))))
if mibBuilder.loadTexts: alarmState.setStatus('current')
if mibBuilder.loadTexts: alarmState.setDescription('Flag that describes the state of the alarm OFF: alarm is off ON: alarm is on')
component = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("applicationserver", 0), ("mediaserver", 1), ("networkserver", 2), ("relayserver", 3), ("servicecontrolproxy", 4), ("elementmanagementsystem", 5), ("webserver", 6), ("calldetailserver", 7), ("clientmanagementprofileserver", 8), ("clientmanagementaccessserver", 9), ("xtendedservicesplatform", 10), ("profileserver", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: component.setStatus('current')
if mibBuilder.loadTexts: component.setDescription('Broadworks server that is reporting the fault. applicationserver: Application server component mediaserver: Media server component networkserver: Network server component servicecontrolproxy: Service control proxy component elementmanagementsystem: Element management system component clientmanagementprofileserver: Client Management Profile server component xtendedservicesplatform: Xtended Services Platform profileserver: Profile Server')
subcomponent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57))).clone(namedValues=NamedValues(("unspecified", 0), ("processmonitor", 1), ("webserver", 2), ("database", 3), ("sip", 4), ("ccp", 5), ("mgcp", 6), ("mcp", 7), ("smtp", 8), ("pop3", 9), ("rtcp", 10), ("conferencing", 11), ("rtp", 12), ("ivr", 13), ("filesystem", 14), ("callp", 15), ("nssynch", 16), ("mss", 17), ("transevent", 18), ("emergency", 19), ("smap", 20), ("loggingserver", 21), ("nslocation", 22), ("ims", 23), ("nrs", 24), ("oss", 25), ("accounting", 26), ("licensing", 27), ("ldap", 28), ("pmReporting", 29), ("smdi", 30), ("cpeDeviceManagement", 31), ("networkDeviceManagement", 32), ("externalAuthentication", 33), ("liveAudio", 34), ("servicePackMigration", 35), ("cap", 36), ("openClientServer", 37), ("voicePortal", 38), ("callLogs", 39), ("ociReporting", 40), ("bcct", 41), ("diameterServer", 42), ("cms", 43), ("taskMonitor", 44), ("tcp", 45), ("logging", 46), ("soap", 47), ("smpp", 48), ("mm", 49), ("dns", 50), ("diameterFrontNode", 51), ("sh", 52), ("snmpAgent", 53), ("xsp", 54), ("surveillance", 55), ("subscriberCache", 56), ("trunking", 57))))
if mibBuilder.loadTexts: subcomponent.setStatus('current')
if mibBuilder.loadTexts: subcomponent.setDescription('The subcomponent field identifies the subcomponent within the component that has triggered the alarm. unspecified: originated from an unspecified location processmonitor: originated from the process monitor The process monitor starts processes, monitors them for process deaths, and restarts them upon death. webserver: originated from the web server database: originated from the database sip: originated from the Session Initiation Protocol io subcomponent ccp: originated from the Call Client Protocol IO subcomponent. The Call Client Protocol provides a means for bi-directional communication between a BroadWorks Feature Server and a call control client. mgcp: originated from the Media Gateway Control Protocol io subcomponent mcp: originated from the Media Control Protocol io subcomponent. The MCP protocol is the means of communication between the application server and the media server. smtp: originated from the Simple Mail Transfer Protocol IO subcomponent pop3: originated from the POP3 IO subcomponent rtcp: originated from the Realtime Transport Control Protocol IO subcomponent conferencing: originated from the Conferencing subcomponent rtp: originated from the Realtime Transport Protocol IO subcomponent ivr: originated from the Interactive Voice Response subcomponent filesystem: originated from the filesystem subcomponent callp: originated from the Call Processing subcomponent nssynch: originated from the Network Server Synchronization subcomponent mss: originated from the Media Server Selection subcomponent accounting: originated from the Accounting (billing) subcomponent licensing: originated from the license management subcomponent ldap: originated from the ldap configuration interface subcomponent pmReporting: originated from the PM reporting subcomponent smdi: originated from the SMDI io sub component ccpeDeviceManagement: originated from the CPE device management subcomponent networkDeviceManagement: originated from the network device address mangement component externalAuthentication: originated by the external web server liveAudio: originated by the live audio subcomponent servicePackMigration: originated by the service pack migration subcomponent cap: originated by the call processing application protocol io subcomponent openClientServer: originated by the open client server process voicePortal: originated by the voice portal subcomponent callLogs: originated by the enhanced call logs subcomponent diameterServer: originated by the diameter server process (obsolete) cms: originated by the Client Management System (CMS) subcomponent taskMonitor: Originated by the task monitor sub system tcp: Originated by the TCP sub system soap: Originated by the SOAP subcomponent smpp: Originated by the SMPP subcomponent mm: Originated by the Mobility Manager subcomponent diameterFrontNode: originated by the Diameter Front Node process ')
problemText = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 9), DisplayString())
if mibBuilder.loadTexts: problemText.setStatus('current')
if mibBuilder.loadTexts: problemText.setDescription('Text describing the nature of the problem. The text consists of constant and variable portions.')
recommendedActionsText = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 1, 10), DisplayString())
if mibBuilder.loadTexts: recommendedActionsText.setStatus('current')
if mibBuilder.loadTexts: recommendedActionsText.setDescription('Text describing recommended actions to take in order to isolate the problem.')
broadsoftNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 0))
notification = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 2)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: notification.setStatus('current')
if mibBuilder.loadTexts: notification.setDescription('A notification indicates detection of an abnormal condition in the system.')
statefulAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 3)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: statefulAlarm.setStatus('current')
if mibBuilder.loadTexts: statefulAlarm.setDescription('A stateful alarm alerts to the onset and cleanup of an abnormal condition associated with a resource.')
softwareError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 4)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: softwareError.setStatus('current')
if mibBuilder.loadTexts: softwareError.setDescription('Internal error detected by software.')
bwGeneralSoftwareError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 5)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwGeneralSoftwareError.setStatus('current')
if mibBuilder.loadTexts: bwGeneralSoftwareError.setDescription('Internal error detected by software.')
bwPMtomcatLaunched = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 6)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMtomcatLaunched.setStatus('current')
if mibBuilder.loadTexts: bwPMtomcatLaunched.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMtomcatShutDown = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 7)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMtomcatShutDown.setStatus('current')
if mibBuilder.loadTexts: bwPMtomcatShutDown.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMtomcatRestarted = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 8)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMtomcatRestarted.setStatus('current')
if mibBuilder.loadTexts: bwPMtomcatRestarted.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMtomcatDeath = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 9)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMtomcatDeath.setStatus('current')
if mibBuilder.loadTexts: bwPMtomcatDeath.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwSystemHealthReport = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 10)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwSystemHealthReport.setStatus('current')
if mibBuilder.loadTexts: bwSystemHealthReport.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwDatabaseSyncReport = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 11)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwDatabaseSyncReport.setStatus('current')
if mibBuilder.loadTexts: bwDatabaseSyncReport.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwServerStateTransition = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 12)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwServerStateTransition.setStatus('current')
if mibBuilder.loadTexts: bwServerStateTransition.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwCounterThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 13)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCounterThreshold.setStatus('current')
if mibBuilder.loadTexts: bwCounterThreshold.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwGaugeLowLimitThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 14)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwGaugeLowLimitThreshold.setStatus('current')
if mibBuilder.loadTexts: bwGaugeLowLimitThreshold.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwGaugeHighLimitThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 15)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwGaugeHighLimitThreshold.setStatus('current')
if mibBuilder.loadTexts: bwGaugeHighLimitThreshold.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMReportingFTPConnectionError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 16)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMReportingFTPConnectionError.setStatus('current')
if mibBuilder.loadTexts: bwPMReportingFTPConnectionError.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwCPUIdleTimeLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 17)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCPUIdleTimeLimitReached.setStatus('current')
if mibBuilder.loadTexts: bwCPUIdleTimeLimitReached.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwMemoryLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 18)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwMemoryLimitReached.setStatus('current')
if mibBuilder.loadTexts: bwMemoryLimitReached.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwNetworkDeviceIsFailed = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 19)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwNetworkDeviceIsFailed.setStatus('current')
if mibBuilder.loadTexts: bwNetworkDeviceIsFailed.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwNetworkDeviceIsOnline = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 20)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwNetworkDeviceIsOnline.setStatus('current')
if mibBuilder.loadTexts: bwNetworkDeviceIsOnline.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMremotexlaLaunched = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 21)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMremotexlaLaunched.setStatus('current')
if mibBuilder.loadTexts: bwPMremotexlaLaunched.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMremotexlaShutDown = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 22)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMremotexlaShutDown.setStatus('current')
if mibBuilder.loadTexts: bwPMremotexlaShutDown.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMremotexlaRestarted = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 23)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMremotexlaRestarted.setStatus('current')
if mibBuilder.loadTexts: bwPMremotexlaRestarted.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMremotexlaDeath = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 24)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMremotexlaDeath.setStatus('current')
if mibBuilder.loadTexts: bwPMremotexlaDeath.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwLicenseFileNotFound = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 25)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLicenseFileNotFound.setStatus('current')
if mibBuilder.loadTexts: bwLicenseFileNotFound.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwSMAPConnectionFailure = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 26)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwSMAPConnectionFailure.setStatus('current')
if mibBuilder.loadTexts: bwSMAPConnectionFailure.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwMaximumFailedLoginAttempts = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 27)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwMaximumFailedLoginAttempts.setStatus('current')
if mibBuilder.loadTexts: bwMaximumFailedLoginAttempts.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwCommProtocolInitError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 28)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCommProtocolInitError.setStatus('current')
if mibBuilder.loadTexts: bwCommProtocolInitError.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwCommProtocolHostNotAllowed = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 29)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCommProtocolHostNotAllowed.setStatus('current')
if mibBuilder.loadTexts: bwCommProtocolHostNotAllowed.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwCommProtocolInterfaceNotAllowed = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 30)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCommProtocolInterfaceNotAllowed.setStatus('current')
if mibBuilder.loadTexts: bwCommProtocolInterfaceNotAllowed.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwSipTcpExceededMax = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 31)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwSipTcpExceededMax.setStatus('current')
if mibBuilder.loadTexts: bwSipTcpExceededMax.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwSipTcpExceededMaxPerPeer = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 32)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwSipTcpExceededMaxPerPeer.setStatus('current')
if mibBuilder.loadTexts: bwSipTcpExceededMaxPerPeer.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwSipTcpSocketError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 33)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwSipTcpSocketError.setStatus('current')
if mibBuilder.loadTexts: bwSipTcpSocketError.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwTaskMonitorWarning = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 34)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwTaskMonitorWarning.setStatus('current')
if mibBuilder.loadTexts: bwTaskMonitorWarning.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwTaskMonitorHungTask = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 35)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwTaskMonitorHungTask.setStatus('current')
if mibBuilder.loadTexts: bwTaskMonitorHungTask.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwTcpSubsystemFatalError = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 36)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwTcpSubsystemFatalError.setStatus('current')
if mibBuilder.loadTexts: bwTcpSubsystemFatalError.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwFileServerClusterUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 37)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwFileServerClusterUnreachable.setStatus('current')
if mibBuilder.loadTexts: bwFileServerClusterUnreachable.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwFileServerNodeUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 38)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwFileServerNodeUnreachable.setStatus('current')
if mibBuilder.loadTexts: bwFileServerNodeUnreachable.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwFileServerClusterUnreachableClear = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 39)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwFileServerClusterUnreachableClear.setStatus('current')
if mibBuilder.loadTexts: bwFileServerClusterUnreachableClear.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwFileServerNodeUnreachableClear = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 40)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwFileServerNodeUnreachableClear.setStatus('current')
if mibBuilder.loadTexts: bwFileServerNodeUnreachableClear.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwAlarmsDiscarded = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 41)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwAlarmsDiscarded.setStatus('current')
if mibBuilder.loadTexts: bwAlarmsDiscarded.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwLogQueueSizeLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 42)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLogQueueSizeLimitReached.setStatus('current')
if mibBuilder.loadTexts: bwLogQueueSizeLimitReached.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwLogQueueSizeLimitReachedClear = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 43)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLogQueueSizeLimitReachedClear.setStatus('current')
if mibBuilder.loadTexts: bwLogQueueSizeLimitReachedClear.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwLicenseFileExpiring = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 44)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLicenseFileExpiring.setStatus('current')
if mibBuilder.loadTexts: bwLicenseFileExpiring.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable date.')
bwLicenseFileExpired = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 45)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLicenseFileExpired.setStatus('current')
if mibBuilder.loadTexts: bwLicenseFileExpired.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable date.')
bwCallOverloadZoneTransition = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 3618)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCallOverloadZoneTransition.setStatus('current')
if mibBuilder.loadTexts: bwCallOverloadZoneTransition.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwNonCallOverloadZoneTransition = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 3619)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwNonCallOverloadZoneTransition.setStatus('current')
if mibBuilder.loadTexts: bwNonCallOverloadZoneTransition.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwCongestionManagementNeighborsInhibited = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 46)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwCongestionManagementNeighborsInhibited.setStatus('current')
if mibBuilder.loadTexts: bwCongestionManagementNeighborsInhibited.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
bwPMhttpdLaunched = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 48)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMhttpdLaunched.setStatus('current')
if mibBuilder.loadTexts: bwPMhttpdLaunched.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMhttpdShutDown = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 49)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMhttpdShutDown.setStatus('current')
if mibBuilder.loadTexts: bwPMhttpdShutDown.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMhttpdRestarted = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 50)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMhttpdRestarted.setStatus('current')
if mibBuilder.loadTexts: bwPMhttpdRestarted.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwPMhttpdDeath = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 51)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwPMhttpdDeath.setStatus('current')
if mibBuilder.loadTexts: bwPMhttpdDeath.setDescription('A notification indicates detection of an abnormal condition in the system.')
bwLicenseHWViolation = NotificationType((1, 3, 6, 1, 4, 1, 6431, 1, 1, 1, 3543)).setObjects(("BroadworksFault", "identifier"), ("BroadworksFault", "timeStamp"), ("BroadworksFault", "alarmName"), ("BroadworksFault", "systemName"), ("BroadworksFault", "severity"), ("BroadworksFault", "component"), ("BroadworksFault", "subcomponent"), ("BroadworksFault", "problemText"), ("BroadworksFault", "recommendedActionsText"))
if mibBuilder.loadTexts: bwLicenseHWViolation.setStatus('current')
if mibBuilder.loadTexts: bwLicenseHWViolation.setDescription('For the actual description, refer the BroadWorks FaultManagementGuide as it may contain variable data.')
mibBuilder.exportSymbols("BroadworksFault", statefulAlarm=statefulAlarm, bwNetworkDeviceIsOnline=bwNetworkDeviceIsOnline, bwSystemHealthReport=bwSystemHealthReport, bwLicenseFileNotFound=bwLicenseFileNotFound, bwPMhttpdDeath=bwPMhttpdDeath, identifier=identifier, bwLicenseHWViolation=bwLicenseHWViolation, bwFileServerClusterUnreachableClear=bwFileServerClusterUnreachableClear, bwPMtomcatLaunched=bwPMtomcatLaunched, bwTcpSubsystemFatalError=bwTcpSubsystemFatalError, faultFields=faultFields, bwGaugeLowLimitThreshold=bwGaugeLowLimitThreshold, bwCPUIdleTimeLimitReached=bwCPUIdleTimeLimitReached, bwPMhttpdRestarted=bwPMhttpdRestarted, timeStamp=timeStamp, PYSNMP_MODULE_ID=broadsoft, bwPMhttpdShutDown=bwPMhttpdShutDown, bwDatabaseSyncReport=bwDatabaseSyncReport, broadworks=broadworks, bwPMtomcatRestarted=bwPMtomcatRestarted, broadsoft=broadsoft, severity=severity, problemText=problemText, bwMaximumFailedLoginAttempts=bwMaximumFailedLoginAttempts, common=common, bwServerStateTransition=bwServerStateTransition, bwLogQueueSizeLimitReachedClear=bwLogQueueSizeLimitReachedClear, bwCallOverloadZoneTransition=bwCallOverloadZoneTransition, bwPMremotexlaShutDown=bwPMremotexlaShutDown, bwSipTcpSocketError=bwSipTcpSocketError, bwGaugeHighLimitThreshold=bwGaugeHighLimitThreshold, bwSMAPConnectionFailure=bwSMAPConnectionFailure, bwCommProtocolInitError=bwCommProtocolInitError, bwTaskMonitorWarning=bwTaskMonitorWarning, bwLicenseFileExpired=bwLicenseFileExpired, bwFileServerClusterUnreachable=bwFileServerClusterUnreachable, bwTaskMonitorHungTask=bwTaskMonitorHungTask, bwPMhttpdLaunched=bwPMhttpdLaunched, bwSipTcpExceededMaxPerPeer=bwSipTcpExceededMaxPerPeer, subcomponent=subcomponent, bwAlarmsDiscarded=bwAlarmsDiscarded, systemFaults=systemFaults, alarmName=alarmName, bwPMtomcatDeath=bwPMtomcatDeath, systemName=systemName, alarmState=alarmState, component=component, bwCommProtocolHostNotAllowed=bwCommProtocolHostNotAllowed, bwGeneralSoftwareError=bwGeneralSoftwareError, recommendedActionsText=recommendedActionsText, bwPMremotexlaLaunched=bwPMremotexlaLaunched, bwPMremotexlaRestarted=bwPMremotexlaRestarted, bwPMtomcatShutDown=bwPMtomcatShutDown, bwMemoryLimitReached=bwMemoryLimitReached, bwNetworkDeviceIsFailed=bwNetworkDeviceIsFailed, bwSipTcpExceededMax=bwSipTcpExceededMax, bwCounterThreshold=bwCounterThreshold, bwLogQueueSizeLimitReached=bwLogQueueSizeLimitReached, bwLicenseFileExpiring=bwLicenseFileExpiring, bwCongestionManagementNeighborsInhibited=bwCongestionManagementNeighborsInhibited, bwPMReportingFTPConnectionError=bwPMReportingFTPConnectionError, bwPMremotexlaDeath=bwPMremotexlaDeath, bwCommProtocolInterfaceNotAllowed=bwCommProtocolInterfaceNotAllowed, bwFileServerNodeUnreachableClear=bwFileServerNodeUnreachableClear, bwFileServerNodeUnreachable=bwFileServerNodeUnreachable, bwNonCallOverloadZoneTransition=bwNonCallOverloadZoneTransition, softwareError=softwareError, notification=notification, broadsoftNotifications=broadsoftNotifications)
