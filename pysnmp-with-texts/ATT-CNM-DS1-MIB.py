#
# PySNMP MIB module ATT-CNM-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATT-CNM-DS1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:31:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, iso, ModuleIdentity, Integer32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, IpAddress, enterprises, MibIdentifier, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "iso", "ModuleIdentity", "Integer32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "IpAddress", "enterprises", "MibIdentifier", "Counter64", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
att_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 74)).setLabel("att-2")
att_products = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1)).setLabel("att-products")
att_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2)).setLabel("att-mgmt")
att_cnmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1, 9)).setLabel("att-cnmAgent")
att_cnm = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15)).setLabel("att-cnm")
att_cnm_ds1 = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 3)).setLabel("att-cnm-ds1")
attCNMds1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1), )
if mibBuilder.loadTexts: attCNMds1ConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ConfigTable.setDescription('A list of entries containing configuration information for all DS1 interfaces managed by this system.')
attCNMds1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1), ).setIndexNames((0, "ATT-CNM-DS1-MIB", "attCNMds1ConfigIndex"))
if mibBuilder.loadTexts: attCNMds1ConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ConfigEntry.setDescription('An entry containing configuration information for a particular DS1 interface.')
attCNMds1ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ConfigIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ConfigIndex.setDescription('A unique value for each DS1 interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMds1LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ds1ESF", 2), ("ds1D4", 3), ("ds1ANSI-ESF", 4), ("ds1G704", 5), ("ds1G704-CRC", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1LineType.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1LineType.setDescription('This variable indicates the variety of DS1 frame format supported by this interface. For SMDS, this variable will have the value ds1ANSI-ESF, denoting that this interface supports the DS1 Extended Super Frame format as specified by ANSI.')
attCNMds1ZeroCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ds1JammedBit", 1), ("ds1B8ZS", 2), ("ds1InvertedHDLC", 3), ("ds1HDB3", 4), ("ds1ZBTSI", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ZeroCoding.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ZeroCoding.setDescription('This variable describes the variety of zero code suppression/substitution used on the DS1 interface.')
attCNMds1ErrorsMaxIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsMaxIntervals.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsMaxIntervals.setDescription('This variable identifies the maximum number of measurement intervals supported for the error counts maintained by this DS1 interface in the attCNMds1ErrorsTable.')
attCNMds1ErrorsIntervalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsIntervalLen.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsIntervalLen.setDescription('This variable identifies the number of seconds that make up one complete measurement interval for the error counts maintained by this DS1 interface in the attCNMds1ErrorsTable.')
attCNMds1StatusTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 2), )
if mibBuilder.loadTexts: attCNMds1StatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1StatusTable.setDescription('A list of entries containing status information for all DS1 interfaces managed by this system.')
attCNMds1StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 2, 1), ).setIndexNames((0, "ATT-CNM-DS1-MIB", "attCNMds1StatusIndex"))
if mibBuilder.loadTexts: attCNMds1StatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1StatusEntry.setDescription('An entry containing status information for a particular DS1 interface.')
attCNMds1StatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1StatusIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1StatusIndex.setDescription('A unique value for each DS1 interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMds1LineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1LineStatus.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1LineStatus.setDescription('This variable indicates the most Line Status of this interface. This object is a bit map represented as a sum, therefore, it can represent multiple failures (alarms) simultaneously. The various bit positions are: 1 No Alarm Present 2 Yellow Alarm 4 Near End Alarm-Indication-Signal (AIS) 8 Near End Loss-Of-Frame (LOF) 16 Near End Loss-Of-Signal (LOS) For example, for an interface that has LOF and LOS outstanding, this object will have a value of 24.')
attCNMds1ErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3), )
if mibBuilder.loadTexts: attCNMds1ErrorsTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsTable.setDescription('A list of entries containing protocol error counts, maintained during the specified measurement interval, for all DS1 interfaces managed by this system.')
attCNMds1ErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1), ).setIndexNames((0, "ATT-CNM-DS1-MIB", "attCNMds1ErrorsIndex"), (0, "ATT-CNM-DS1-MIB", "attCNMds1ErrorsInterval"))
if mibBuilder.loadTexts: attCNMds1ErrorsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsEntry.setDescription('An entry containing protocol error counts, maintained during the specified measurement interval, for a particular DS1 interface.')
attCNMds1ErrorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsIndex.setDescription('A unique value for each DS1 interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMds1ErrorsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsInterval.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsInterval.setDescription('This variable identifies the measurement interval number for which the measurement is provided. It is a number between 1 and XX, where 1 identifies the most recently completed measurement interval and XX is the least recently completed measurement interval. The value of XX is specified by the attCNMds1ErrorsMaxIntervals object given in the attCNMds1ConfigTable. The maximum length of each measurement interval is specified by the attCNMds1ErrorsIntervalLen object given in the attCNMds1ConfigTable.')
attCNMds1ErrorsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsTimeStamp.setDescription('The time stamp corresponding to the end of the specified measurement interval, as measured in seconds from 00:00:00 UTC (Coordinated Universal Time) January 1, 1970. Any fraction is rounded up.')
attCNMds1ErrorsLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ErrorsLocalTime.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ErrorsLocalTime.setDescription('The time stamp corresponding to the end of the specified measurement interval. Any fraction is rounded up. It is given as a printable ASCII string showing the local time at the end of the interval.')
attCNMds1LCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1LCVs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1LCVs.setDescription('The counter associated with the number of Line Code Violations encountered by a DS1 interface during the specified measurement interval. A Line Code Violation is the occurrence of a received Bipolar Violation that is not part of a zero-substitution code. The Bipolar Violation Rate is generally viewed as approximating the Bit Error Rate.')
attCNMds1LESs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1LESs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1LESs.setDescription('The counter associated with the number of Line Errored Seconds encountered by a DS1 interface during the specified measurement interval. A Line Errored Second is any second with at least one Line Code Violation.')
attCNMds1LSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1LSESs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1LSESs.setDescription('The counter associated with the number of Line Severely Errored Seconds encountered by a DS1 interface during the specified measurement interval. A Line Severely Errored Second is any second with 16 or more Lince Code Violations monitored at the DS1 rate.')
attCNMds1CVs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1CVs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1CVs.setDescription('The counter associated with the number of Code Violations encountered by a DS1 interface during the specified measurement interval. A Code Violation is the occurrence of a received CRC-6 code that is not identical to the corresponding locally-calculated code.')
attCNMds1ESs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1ESs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1ESs.setDescription('The counter associated with the number of Errored Seconds encountered by a DS1 interface during the specified measurement interval. An Errored Second is any second with at least one Code Violation.')
attCNMds1SESs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1SESs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1SESs.setDescription('The counter associated with the number of Severely Errored Seconds encountered by a DS1 interface during the specified measurement interval. A Severely Errored Second is any second with 15 or more Code Violations monitored at the DS1 rate.')
attCNMds1SEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1SEFSs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1SEFSs.setDescription('The counter associated with the number of Severely Errored Framing Seconds encountered by a DS1 interface during the specified measurement interval. A Severely Errored Framing Second is any second during which one or more Severely Errored Framing (SEF) events occurred.')
attCNMds1UASs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 3, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMds1UASs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMds1UASs.setDescription('The counter associated with the number of Unavailable Seconds encountered by a DS1 interface during the specified measurement interval. An Unavailable Second is any second during which the DS1 interface was unavailable to offer service.')
mibBuilder.exportSymbols("ATT-CNM-DS1-MIB", att_mgmt=att_mgmt, attCNMds1ConfigEntry=attCNMds1ConfigEntry, attCNMds1UASs=attCNMds1UASs, attCNMds1ErrorsTable=attCNMds1ErrorsTable, attCNMds1ZeroCoding=attCNMds1ZeroCoding, att_cnm=att_cnm, attCNMds1ErrorsEntry=attCNMds1ErrorsEntry, attCNMds1ErrorsIndex=attCNMds1ErrorsIndex, attCNMds1ErrorsIntervalLen=attCNMds1ErrorsIntervalLen, attCNMds1StatusTable=attCNMds1StatusTable, attCNMds1CVs=attCNMds1CVs, attCNMds1SEFSs=attCNMds1SEFSs, attCNMds1LineType=attCNMds1LineType, attCNMds1ConfigTable=attCNMds1ConfigTable, attCNMds1ErrorsMaxIntervals=attCNMds1ErrorsMaxIntervals, attCNMds1StatusEntry=attCNMds1StatusEntry, attCNMds1ErrorsInterval=attCNMds1ErrorsInterval, attCNMds1ConfigIndex=attCNMds1ConfigIndex, attCNMds1ESs=attCNMds1ESs, attCNMds1ErrorsTimeStamp=attCNMds1ErrorsTimeStamp, attCNMds1LineStatus=attCNMds1LineStatus, att_cnmAgent=att_cnmAgent, attCNMds1LSESs=attCNMds1LSESs, attCNMds1SESs=attCNMds1SESs, att_2=att_2, attCNMds1StatusIndex=attCNMds1StatusIndex, att_products=att_products, att_cnm_ds1=att_cnm_ds1, attCNMds1LCVs=attCNMds1LCVs, attCNMds1LESs=attCNMds1LESs, attCNMds1ErrorsLocalTime=attCNMds1ErrorsLocalTime)
