#
# PySNMP MIB module CISCO-VISM-RSRC-PART-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-RSRC-PART-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:18:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
vismPort, = mibBuilder.importSymbols("BASIS-MIB", "vismPort")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, MibIdentifier, Counter64, Counter32, ModuleIdentity, IpAddress, Integer32, Bits, Gauge32, Unsigned32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "MibIdentifier", "Counter64", "Counter32", "ModuleIdentity", "IpAddress", "Integer32", "Bits", "Gauge32", "Unsigned32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoVismRsrcPartMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 93))
ciscoVismRsrcPartMIB.setRevisions(('2003-12-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoVismRsrcPartMIB.setRevisionsDescriptions(('Initial version of the MIB. The content of this MIB was originally available in SMIv1 version. The MIB has been converted to SMIv2 version and descriptions of some of the objects have been modified.',))
if mibBuilder.loadTexts: ciscoVismRsrcPartMIB.setLastUpdated('200312090000Z')
if mibBuilder.loadTexts: ciscoVismRsrcPartMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoVismRsrcPartMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoVismRsrcPartMIB.setDescription('The MIB module containing Port Resource Partition information for VISM service module. ')
vismPortResPartCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2))
vismPortResPartCnfGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1), )
if mibBuilder.loadTexts: vismPortResPartCnfGrpTable.setStatus('current')
if mibBuilder.loadTexts: vismPortResPartCnfGrpTable.setDescription('The vismPortResPartCnfGrpTable contains the configuration of port resource partition. Currently this table contains a single row. ')
vismPortResPartCnfGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-VISM-RSRC-PART-MIB", "vismResPartPortNum"), (0, "CISCO-VISM-RSRC-PART-MIB", "vismResPartCtrlrNum"))
if mibBuilder.loadTexts: vismPortResPartCnfGrpEntry.setStatus('current')
if mibBuilder.loadTexts: vismPortResPartCnfGrpEntry.setDescription('An entry for port resource partition. ')
vismResPartPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismResPartPortNum.setStatus('current')
if mibBuilder.loadTexts: vismResPartPortNum.setDescription('This is the index to vismPortResPartCnfGrpTable. If PXM1(Processor Switch Module) is used on the shelf this object should be set to 1. For PXM1E this object should be set to 255. ')
vismResPartCtrlrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("par", 1), ("pnni", 2), ("tag", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismResPartCtrlrNum.setStatus('current')
if mibBuilder.loadTexts: vismResPartCtrlrNum.setDescription('This is index to vismPortResPartCnfGrpTable. ')
vismResPartRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartRowStatus.setStatus('current')
if mibBuilder.loadTexts: vismResPartRowStatus.setDescription("This will 'add', 'delete' or 'modify' the partition. To delete an entry, this object has to be set to 'del'. The resource partition can be deleted only after deleting all the connections Logical Channel Numbers(LCNs). ")
vismResPartNumOfLcnAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 380))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartNumOfLcnAvail.setStatus('current')
if mibBuilder.loadTexts: vismResPartNumOfLcnAvail.setDescription('This represents number of LCNs available for this controller and this port. The default value for this object is chosen based on the object vismMode (defined in CISCO-VISM-MODULE-MIB MIB) : ')
vismResPartLcnLow = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510)).clone(131)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartLcnLow.setStatus('current')
if mibBuilder.loadTexts: vismResPartLcnLow.setDescription('This represents low end of reserved LCN. The LCN identifies the local VCI(Virtual Channel Identifier) value on the VISM when adding a connection. ')
vismResPartLcnHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510)).clone(510)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartLcnHigh.setStatus('current')
if mibBuilder.loadTexts: vismResPartLcnHigh.setDescription('This represents high end of reserved LCN. The LCN identifies the local VCI value on the VISM when adding a connection. ')
vismResPartIngrPctBW = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartIngrPctBW.setStatus('current')
if mibBuilder.loadTexts: vismResPartIngrPctBW.setDescription('The percentage of total ingress bandwidth reserved. Since we have only one LCN for VoIP(Voice Over IP), the value is 100. ')
vismResPartEgrPctBW = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartEgrPctBW.setStatus('current')
if mibBuilder.loadTexts: vismResPartEgrPctBW.setDescription('The percentage of total egress bandwidth reserved Since we have only one LCN for VoIP, the value is 100. ')
vismResPartCtrlrID = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismResPartCtrlrID.setStatus('current')
if mibBuilder.loadTexts: vismResPartCtrlrID.setDescription('This is the controller identifier of the PNNI (Private Network to Network Interface) controller. ')
ciscoVismRsrcPartMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 93, 2))
ciscoVismRsrcPartMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 93, 2, 1))
ciscoVismRsrcPartMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 93, 2, 2))
ciscoVismRsrcPartCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 93, 2, 2, 1)).setObjects(("CISCO-VISM-RSRC-PART-MIB", "ciscoVismRsrcPartGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismRsrcPartCompliance = ciscoVismRsrcPartCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoVismRsrcPartCompliance.setDescription('The compliance statement for objects related to VISM Port Resource Partition configuration.')
ciscoVismRsrcPartGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 93, 2, 1, 1)).setObjects(("CISCO-VISM-RSRC-PART-MIB", "vismResPartPortNum"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartCtrlrNum"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartRowStatus"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartNumOfLcnAvail"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartLcnLow"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartLcnHigh"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartIngrPctBW"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartEgrPctBW"), ("CISCO-VISM-RSRC-PART-MIB", "vismResPartCtrlrID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismRsrcPartGroup = ciscoVismRsrcPartGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoVismRsrcPartGroup.setDescription('The collection of objects which are used to represent VISM Port Resource Partition configuration.')
mibBuilder.exportSymbols("CISCO-VISM-RSRC-PART-MIB", ciscoVismRsrcPartCompliance=ciscoVismRsrcPartCompliance, vismPortResPartCnfGrp=vismPortResPartCnfGrp, ciscoVismRsrcPartGroup=ciscoVismRsrcPartGroup, vismResPartCtrlrID=vismResPartCtrlrID, vismPortResPartCnfGrpTable=vismPortResPartCnfGrpTable, vismResPartNumOfLcnAvail=vismResPartNumOfLcnAvail, ciscoVismRsrcPartMIBGroups=ciscoVismRsrcPartMIBGroups, ciscoVismRsrcPartMIBCompliances=ciscoVismRsrcPartMIBCompliances, vismResPartIngrPctBW=vismResPartIngrPctBW, vismResPartRowStatus=vismResPartRowStatus, vismResPartCtrlrNum=vismResPartCtrlrNum, vismResPartLcnHigh=vismResPartLcnHigh, vismResPartLcnLow=vismResPartLcnLow, vismResPartEgrPctBW=vismResPartEgrPctBW, vismPortResPartCnfGrpEntry=vismPortResPartCnfGrpEntry, ciscoVismRsrcPartMIB=ciscoVismRsrcPartMIB, PYSNMP_MODULE_ID=ciscoVismRsrcPartMIB, ciscoVismRsrcPartMIBConformance=ciscoVismRsrcPartMIBConformance, vismResPartPortNum=vismResPartPortNum)
