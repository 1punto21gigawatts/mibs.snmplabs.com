#
# PySNMP MIB module HP-ICF-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-POE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:35:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hpicfCommon, = mibBuilder.importSymbols("HP-ICF-OID", "hpicfCommon")
pethMainPseEntry, pethPsePortEntry = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethMainPseEntry", "pethPsePortEntry")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, ObjectIdentity, Integer32, IpAddress, TimeTicks, MibIdentifier, Bits, Counter64, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "ObjectIdentity", "Integer32", "IpAddress", "TimeTicks", "MibIdentifier", "Bits", "Counter64", "iso", "Counter32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
hpicfPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1))
hpicfPoe.setRevisions(('2017-01-30 00:00', '2016-09-12 00:00', '2016-05-02 00:00', '2016-02-12 00:00', '2015-07-14 00:00', '2013-06-16 00:00', '2012-04-27 00:00', '2012-03-02 00:00', '2010-05-26 10:36', '2009-11-18 00:00', '2007-02-01 00:00', '2005-06-06 00:00', '2004-07-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfPoe.setRevisionsDescriptions(('Added a default type in hpicfPoePethPsePortPoePlusPowerValue.', 'Added a field in hpicfPoePethPsePortPoePlusPowerValue and modified the description.', 'Added following object,group and compliance. hpicfPoePethMainPsePdPowerDraw hpicfPoePethPseOperStateTableGroup1 hpicfPoeCompliance8 and deprecated hpicfPoePethPseOperStateTableGroup and hpicfPoeCompliance4.', 'Added hpicfPseCurrentPowerDraw, hpicfPoePethPsePortPowerType.', 'Added hpicfPoePethPsePortResetState.', 'Added hpicfPoePowerSupplyAuxCapacity, hpicfPoeAuxPowerSupplyGroup, hpicfPoePethPsePortLowPriority, hpicfPoeLowPowerPortGroup, hpicfPoeCompliance5. Added auxFault state to hpicfPoePowerSupplyType.', 'Add table for PSE Power usage features. Added following objects,group and compliance. hpicfPoePethPsePortOperStatus hpicfPoePethPsePortPowerMode hpicfPoePethPsePortAveragePower hpicfPoePethPsePortPeakPower hpicfPoePethPsePortPreStdDetect hpicfPoePethPseOperStateTable hpicfPoeMaxGuaranteedPower hpicfPoeRemainingGuaranteedPower hpicfPoePethPsePowerTable hpicfPoePethPsePowerTableGroup hpicfPoePethPseOperStateTableGroup hpicfPoePowerUsageGlobalGroup hpicfPseParamsGroup hpicfPoePethPsePortPreStdDetectGroup hpicfPoeCompliance3 hpicfPoeCompliance4 and deprecated hpicfPoeCompliance2 and hpicfPseFeaturesGroup.', 'Deprecate switch level pre std detect & add at port level.', 'Add table for PSE features, and deprecate scalar globals.', 'Add objects to support POE power parameters', 'Add objects to support POE allocation.', 'Add objects to support POE global characteristics.', 'Original creation of mib module.',))
if mibBuilder.loadTexts: hpicfPoe.setLastUpdated('201701300000Z')
if mibBuilder.loadTexts: hpicfPoe.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfPoe.setContactInfo(' Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfPoe.setDescription('This MIB module describes management objects that manage Power Source Equipment (PSE).')
hpicfPOE = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9))
hpicfPoePethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1), )
if mibBuilder.loadTexts: hpicfPoePethPsePortTable.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortTable.setDescription("This table supplements the table 'pethPsePortTable' in ieee802af.mib.")
hpicfPoePethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1), )
pethPsePortEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPsePortEntry"))
hpicfPoePethPsePortEntry.setIndexNames(*pethPsePortEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPsePortEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortEntry.setDescription("The fields in these entries will be used to supplement fields in 'pethPsePortEntry in ieee802af.mib.")
hpicfPoePethPsePortCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortCurrent.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortCurrent.setDescription('This field specifies the current supplied at this port. This value is specified in milli amperes(mA).')
hpicfPoePethPsePortVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortVoltage.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortVoltage.setDescription("This field specifies the Voltage supplied at this port. This value is specified in 10's of volts (dV)")
hpicfPoePethPsePortPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPower.setDescription('This field specifies the Power supplied at this port. This value is specified in milliwatts (mW).')
hpicfPoePethPsePortPowerAllocateBy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usage", 1), ("class", 2), ("value", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerAllocateBy.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerAllocateBy.setDescription('This field specifies the power allocation method for this port. The default value is usage.')
hpicfPoePethPsePortPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 17)).clone(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerValue.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerValue.setDescription('This field specifies the power allocation defined for this port. This value is specified in Watts (W).')
hpicfPoePethPsePortLLDPDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortLLDPDetect.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortLLDPDetect.setDescription('This field specifies if power should be allocated using LLDP advertised information regarding the PD.')
hpicfPoePethPsePortPoePlusPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(17)).setUnits('Watts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPoePlusPowerValue.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPoePlusPowerValue.setDescription('This field specifies the power allocation defined for this port. Use this object for equipment supporting high power, that is greater than 15 Watts. This value is specified in Watts (W). This object may only be read or written when hpicfPoePethPsePortPowerAllocateBy is set to value(3).')
hpicfPoePethPsePortActualPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 8), Integer32()).setUnits('milli-watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortActualPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortActualPower.setDescription('This field specifies the actual power drained by the device connected to this port.')
hpicfPoePethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("off", 2), ("on", 3))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortOperStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortOperStatus.setDescription('This field specifies the operational status of the port')
hpicfPoePethPsePortPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("disableWithFiber", 6))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerMode.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerMode.setDescription('This field specifies the power mode of the port whether enabled or disabled or disableWithFiber')
hpicfPoePethPsePortAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 11), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortAveragePower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortAveragePower.setDescription('This field specifies the average power supplied to this port which is used by the device connected to it.')
hpicfPoePethPsePortPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 12), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPeakPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPeakPower.setDescription('This field specifies the peak power supplied to this port which is used by the device connected to it.')
hpicfPoePethPsePortPreStdDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPreStdDetect.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPreStdDetect.setDescription('This field specifies the pre standard detect status for this port. A value of On - indicates that power pre-802.3af-standard devices. A value of Off - indicates that only pre-802.3af/at compliant devices are allowed. The default value is Off.')
hpicfPoePethPsePortLowPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortLowPriority.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortLowPriority.setDescription('This object indicates whether a particular port shuts down in the event of any PSU failure in the system. A value of (1) indicates a low priority port which shuts down in the event of any PSU failure. A value of (2) indicates a high priority port which is unaffected by the failure of any single PSU. The default value is high.')
hpicfPoePethPsePortResetState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noreset", 0), ("reset", 1))).clone('noreset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortResetState.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortResetState.setDescription('This object is used to reset the PoE controller HW to which the port is associated.')
hpicfPoePethPsePortPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("type0", -1), ("type1", 1), ("type2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerType.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerType.setDescription('This field specifies the PD type determined during physical layer classification. The default value is -1.')
hpicfPoeAllowPreStdDetect = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoeAllowPreStdDetect.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeAllowPreStdDetect.setDescription('This object is used to configure the default POE power detection mode. A value of TRUE - indicates that power pre-802.3af-standard devices. A value of FALSE - indicates that only pre-802.3af compliant devices are allowed. The default value is true. In a stack, this value pertains only to the commander switch.')
hpicfPoePowerRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("nPlus1", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePowerRedundancy.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoePowerRedundancy.setDescription('This object is used to configure the POE power redundancy mode. A value of none(1) - means that all available power can be allocated to powered devices. A value of nPlus1(2) - means that one of the highest power supplies is held in reserve and that in the event of a single power supply failure, no no powered devices will be shut down. A value of full(3) - means that half of the available power supplies are held in reserve. The default value is none(1). In a stack, this value pertains only to the commander switch.')
hpicfPoeExtPwrSupplyCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoeExtPwrSupplyCount.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeExtPwrSupplyCount.setDescription('This object is used to configure the number of external power supplies expected to be connected to the chassis. The default value is 1. In a stack, this value pertains only to the commander switch.')
hpicfPseFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6), )
if mibBuilder.loadTexts: hpicfPseFeaturesTable.setStatus('current')
if mibBuilder.loadTexts: hpicfPseFeaturesTable.setDescription('This table describes the features of each power source equipment (PSE). On standalone switches (both stackable and chassis switches) there shall be only one entry in this table. In a stack, there shall be one entry for each stack member.')
hpicfPseFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfPseFeaturesEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfPseFeaturesEntry.setDescription('A row in the PSE features table, signifying a single power source equipment.')
hpicfPseAllowPreStdDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPseAllowPreStdDetect.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPseAllowPreStdDetect.setDescription('This object is used to configure the default POE power detection mode for this power source equipment. A value of TRUE - indicates that power pre-802.3af-standard devices. A value of FALSE - indicates that only pre-802.3af compliant devices are allowed. The default value is true.')
hpicfPsePowerRedundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("nPlus1", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPsePowerRedundancy.setStatus('current')
if mibBuilder.loadTexts: hpicfPsePowerRedundancy.setDescription('This object is used to configure the POE power redundancy mode for this power source equipment. A value of none(1) - means that all available power can be allocated to powered devices. A value of nPlus1(2) - means that one of the highest power supplies is held in reserve and that in the event of a single power supply failure, no powered devices will be shut down. A value of full(3) - means that half of the available power supplies are held in reserve. The default value is none(1).')
hpicfPseExtPwrSupplyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPseExtPwrSupplyCount.setStatus('current')
if mibBuilder.loadTexts: hpicfPseExtPwrSupplyCount.setDescription('This object is used to configure the number of external power supplies expected to be connected to the Power Source Equipment. The default value is 1.')
hpicfPseAvailablePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseAvailablePower.setStatus('current')
if mibBuilder.loadTexts: hpicfPseAvailablePower.setDescription('This field specifies the total power available on this Power source equipment. This includes internal and external power supplies.')
hpicfPseUsedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseUsedPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPseUsedPower.setDescription('This field specifies the total power allocated on the Power Source Equipment. This is the sum of the power allocated to all the ports on the PSE.')
hpicfPseFailoverPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseFailoverPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPseFailoverPower.setDescription('This field specifies the failover power for this Power Source Equipment.')
hpicfPseRedundantPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseRedundantPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPseRedundantPower.setDescription('This field specifies the redundancy POE power available to the Power Source Equipment.')
hpicfPseCurrentPowerDraw = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseCurrentPowerDraw.setStatus('current')
if mibBuilder.loadTexts: hpicfPseCurrentPowerDraw.setDescription('This field specifies the redundancy POE power available to the Power Source Equipment.')
hpicfPoePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7), )
if mibBuilder.loadTexts: hpicfPoePowerSupplyTable.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyTable.setDescription('This table contains one row per power supply available to the switch.')
hpicfPoePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfPoePowerSupplyEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyEntry.setDescription('Information about a particular power supply. Each entry provides information about power supply whether it is external or internal, if it is poe/poePlus and the capacity of the power supply.')
hpicfPoePowerSupplySourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplySourceType.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplySourceType.setDescription('This field specifies whether the power supply is external or internal. Stackable switch has inbuilt power supply and can have upto 1 external power supply. Chassis switch can have upto 2 internal power supplies for 6 slot and upto 4 for 12 slot. Chassis switch can have upto 2 external power supplies.')
hpicfPoePowerSupplyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("poe", 1), ("poePlus", 2), ("notPresent", 3), ("fault", 4), ("auxFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyType.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyType.setDescription('This field specifies the type of the power supply, poe or poePlus.')
hpicfPoePowerSupplyCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyCapacity.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyCapacity.setDescription('This field specifies the capacity of the power supply.')
hpicfPoePowerSupplyAuxCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyAuxCapacity.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyAuxCapacity.setDescription('This MIB object specifies the capacity of the auxiliary power supply. The power supplies other than the model J9830A returns the value NULL.')
hpicfPoePethPseOperStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8), )
if mibBuilder.loadTexts: hpicfPoePethPseOperStateTable.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseOperStateTable.setDescription("This table supplements the table 'pethPsePortTable' in ieee802af.mib.")
hpicfPoePethPseOperStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1), )
pethMainPseEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateEntry"))
hpicfPoePethPseOperStateEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPseOperStateEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseOperStateEntry.setDescription("The fields in these entries will be used to supplement fields in 'pethPsePortEntry in ieee802af.mib.")
hpicfPoePethPseOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("poeOn", 1), ("poePlusOn", 2), ("off", 3), ("fault", 4))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseOperState.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseOperState.setDescription('This field specifies the operation status. The default value is on.')
hpicfPoePethPsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortNum.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortNum.setDescription('This field specifies the port number.')
hpicfPoePethMainPsePdPowerDraw = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethMainPsePdPowerDraw.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethMainPsePdPowerDraw.setDescription('This field specifies the total actual power that is used by all the ports on this slot or member.')
hpicfPoeMaxGuaranteedPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 9), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoeMaxGuaranteedPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeMaxGuaranteedPower.setDescription('This field specifies the guaranteed maximum PoE power, namely, the maximum power supplied to critical PSEs')
hpicfPoeRemainingGuaranteedPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 10), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoeRemainingGuaranteedPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeRemainingGuaranteedPower.setDescription('This field specifies the Remaining Guaranteed power. This is difference of Guaranteed Maximum PoE Power and the sum of maximum power of critical PSEs ')
hpicfPoePethPsePowerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11), )
if mibBuilder.loadTexts: hpicfPoePethPsePowerTable.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePowerTable.setDescription("This table supplements the table 'pethPsePortTable' in ieee802af.mib.")
hpicfPoePethPsePowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1), )
pethMainPseEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPsePowerEntry"))
hpicfPoePethPsePowerEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPsePowerEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePowerEntry.setDescription('The fields in these entries will be used to supplement fields in pethPsePortEntry in ieee802af.mib.')
hpicfPoePethPsePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 1), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePeakPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePeakPower.setDescription('This field specifies the peak power of the PSE.')
hpicfPoePethPseAvgPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 2), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseAvgPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseAvgPower.setDescription('This field specifies the average power of the PSE.')
hpicfPoePethPseRemGrntPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 3), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseRemGrntPower.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseRemGrntPower.setDescription('Guaranteed remaining power of PSEs')
hpicfPoeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2))
hpicfPoeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1))
hpicfPoeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2))
hpicfPoeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 1)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance = hpicfPoeCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeCompliance.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 2)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoeGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoeGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance1 = hpicfPoeCompliance1.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeCompliance1.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 3)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance2 = hpicfPoeCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeCompliance2.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 4)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance3 = hpicfPoeCompliance3.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeCompliance3.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 5)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance4 = hpicfPoeCompliance4.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeCompliance4.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 6)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeAuxPowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoeAuxPowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoeLowPowerPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance5 = hpicfPoeCompliance5.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeCompliance5.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 7)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance6 = hpicfPoeCompliance6.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeCompliance6.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 8)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance7 = hpicfPoeCompliance7.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeCompliance7.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoeCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 9)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance8 = hpicfPoeCompliance8.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeCompliance8.setDescription(' A compliance statement for HP Routing switches with PoE capability')
hpicfPoePethPsePortTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 1)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortCurrent"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortVoltage"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerAllocateBy"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerValue"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortLLDPDetect"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPoePlusPowerValue"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortActualPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortOperStatus"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerMode"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortAveragePower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPeakPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortTableGroup = hpicfPoePethPsePortTableGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortTableGroup.setDescription('A collection of objects allowing configuration of PoE PSE Port table')
hpicfPoeGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 2)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeAllowPreStdDetect"), ("HP-ICF-POE-MIB", "hpicfPoePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPoeExtPwrSupplyCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeGlobalGroup = hpicfPoeGlobalGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoeGlobalGroup.setDescription('A collection of objects related to the global configuration of POE on a given chassis.')
hpicfPseFeaturesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 3)).setObjects(("HP-ICF-POE-MIB", "hpicfPseAllowPreStdDetect"), ("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseFeaturesGroup = hpicfPseFeaturesGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPseFeaturesGroup.setDescription('A Collection of Object(s) that provide information about each power source equipment instance.')
hpicfPoePowerSupplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 4)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePowerSupplySourceType"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyType"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePowerSupplyGroup = hpicfPoePowerSupplyGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerSupplyGroup.setDescription(' A collection of objects related to Power Supply. ')
hpicfPoePethPseOperStateTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 5)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPseOperState"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPseOperStateTableGroup = hpicfPoePethPseOperStateTableGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPoePethPseOperStateTableGroup.setDescription(' A collection of objects related to Power Supply. ')
hpicfPoePethPsePowerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 6)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePeakPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPseAvgPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPseRemGrntPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePowerTableGroup = hpicfPoePethPsePowerTableGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePowerTableGroup.setDescription(' A collection of objects related to Power Usage parameters. ')
hpicfPoePowerUsageGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 7)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeMaxGuaranteedPower"), ("HP-ICF-POE-MIB", "hpicfPoeRemainingGuaranteedPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePowerUsageGlobalGroup = hpicfPoePowerUsageGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePowerUsageGlobalGroup.setDescription(' A collection of objects related to Power Usage parameters Globally. ')
hpicfPseParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 8)).setObjects(("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseParamsGroup = hpicfPseParamsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfPseParamsGroup.setDescription('A Collection of Object(s) that provide information about each power source equipment instance.')
hpicfPoePethPsePortPreStdDetectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 9)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortPreStdDetectGroup = hpicfPoePethPsePortPreStdDetectGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPreStdDetectGroup.setDescription('A collection of objects related to port pre std detect status. ')
hpicfPoeAuxPowerSupplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 10)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePowerSupplyAuxCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeAuxPowerSupplyGroup = hpicfPoeAuxPowerSupplyGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeAuxPowerSupplyGroup.setDescription('A collection of objects providing information about auxiliary power supply. ')
hpicfPoeLowPowerPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 11)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortLowPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeLowPowerPortGroup = hpicfPoeLowPowerPortGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoeLowPowerPortGroup.setDescription('A collection of objects providing information about low priority ports. ')
hpicfPseParamsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 12)).setObjects(("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"), ("HP-ICF-POE-MIB", "hpicfPseCurrentPowerDraw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseParamsGroup1 = hpicfPseParamsGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfPseParamsGroup1.setDescription('A Collection of Object(s) that provide information about each power source equipment instance.')
hpicfPoePethPsePortPowerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 13)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortPowerGroup = hpicfPoePethPsePortPowerGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerGroup.setDescription('A collection of objects providing information about port power type. ')
hpicfPoePethPseOperStateTableGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 14)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPseOperState"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortNum"), ("HP-ICF-POE-MIB", "hpicfPoePethMainPsePdPowerDraw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPseOperStateTableGroup1 = hpicfPoePethPseOperStateTableGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfPoePethPseOperStateTableGroup1.setDescription(' A collection of objects related to Power Supply. ')
mibBuilder.exportSymbols("HP-ICF-POE-MIB", hpicfPoePethPsePortPoePlusPowerValue=hpicfPoePethPsePortPoePlusPowerValue, hpicfPoePethPsePortPowerType=hpicfPoePethPsePortPowerType, hpicfPoePethPsePortNum=hpicfPoePethPsePortNum, hpicfPoePethPsePowerTableGroup=hpicfPoePethPsePowerTableGroup, hpicfPoePethPsePowerTable=hpicfPoePethPsePowerTable, hpicfPoePethPsePortLowPriority=hpicfPoePethPsePortLowPriority, hpicfPoePethPsePowerEntry=hpicfPoePethPsePowerEntry, hpicfPoePowerSupplySourceType=hpicfPoePowerSupplySourceType, hpicfPoeCompliance7=hpicfPoeCompliance7, hpicfPoePethPsePortEntry=hpicfPoePethPsePortEntry, hpicfPoeCompliance1=hpicfPoeCompliance1, hpicfPoePethMainPsePdPowerDraw=hpicfPoePethMainPsePdPowerDraw, hpicfPseExtPwrSupplyCount=hpicfPseExtPwrSupplyCount, hpicfPoePethPsePortPowerGroup=hpicfPoePethPsePortPowerGroup, hpicfPoePethPsePortResetState=hpicfPoePethPsePortResetState, hpicfPoePethPseOperStateEntry=hpicfPoePethPseOperStateEntry, hpicfPoePethPsePortPreStdDetectGroup=hpicfPoePethPsePortPreStdDetectGroup, hpicfPoePethPsePortPowerValue=hpicfPoePethPsePortPowerValue, hpicfPoePethPsePortCurrent=hpicfPoePethPsePortCurrent, hpicfPoeCompliance3=hpicfPoeCompliance3, hpicfPoeLowPowerPortGroup=hpicfPoeLowPowerPortGroup, hpicfPoeCompliances=hpicfPoeCompliances, hpicfPoePethPseOperStateTableGroup=hpicfPoePethPseOperStateTableGroup, hpicfPoePethPseRemGrntPower=hpicfPoePethPseRemGrntPower, hpicfPoeAllowPreStdDetect=hpicfPoeAllowPreStdDetect, hpicfPoeGlobalGroup=hpicfPoeGlobalGroup, hpicfPoeAuxPowerSupplyGroup=hpicfPoeAuxPowerSupplyGroup, hpicfPseParamsGroup=hpicfPseParamsGroup, hpicfPoePowerSupplyTable=hpicfPoePowerSupplyTable, hpicfPoePethPsePortVoltage=hpicfPoePethPsePortVoltage, hpicfPoePethPsePortTableGroup=hpicfPoePethPsePortTableGroup, hpicfPseParamsGroup1=hpicfPseParamsGroup1, hpicfPoePethPsePeakPower=hpicfPoePethPsePeakPower, hpicfPoePethPsePortPowerMode=hpicfPoePethPsePortPowerMode, hpicfPoePowerSupplyEntry=hpicfPoePowerSupplyEntry, hpicfPoePowerSupplyCapacity=hpicfPoePowerSupplyCapacity, hpicfPseCurrentPowerDraw=hpicfPseCurrentPowerDraw, hpicfPsePowerRedundancy=hpicfPsePowerRedundancy, hpicfPoeCompliance2=hpicfPoeCompliance2, hpicfPoePethPsePortLLDPDetect=hpicfPoePethPsePortLLDPDetect, hpicfPoeCompliance6=hpicfPoeCompliance6, hpicfPseFeaturesEntry=hpicfPseFeaturesEntry, hpicfPseRedundantPower=hpicfPseRedundantPower, hpicfPoePowerSupplyAuxCapacity=hpicfPoePowerSupplyAuxCapacity, hpicfPseUsedPower=hpicfPseUsedPower, hpicfPseFeaturesGroup=hpicfPseFeaturesGroup, hpicfPoePethPsePortActualPower=hpicfPoePethPsePortActualPower, hpicfPseFeaturesTable=hpicfPseFeaturesTable, hpicfPoePethPseOperStateTable=hpicfPoePethPseOperStateTable, hpicfPoePethPsePortAveragePower=hpicfPoePethPsePortAveragePower, hpicfPoePethPseOperState=hpicfPoePethPseOperState, hpicfPoeCompliance5=hpicfPoeCompliance5, hpicfPoeGroups=hpicfPoeGroups, hpicfPoePethPsePortPowerAllocateBy=hpicfPoePethPsePortPowerAllocateBy, hpicfPoeConformance=hpicfPoeConformance, hpicfPoePowerSupplyGroup=hpicfPoePowerSupplyGroup, hpicfPoeCompliance8=hpicfPoeCompliance8, hpicfPoePethPsePortPeakPower=hpicfPoePethPsePortPeakPower, hpicfPoePowerRedundancy=hpicfPoePowerRedundancy, hpicfPoePethPseOperStateTableGroup1=hpicfPoePethPseOperStateTableGroup1, hpicfPoePowerUsageGlobalGroup=hpicfPoePowerUsageGlobalGroup, hpicfPseFailoverPower=hpicfPseFailoverPower, hpicfPoePowerSupplyType=hpicfPoePowerSupplyType, hpicfPoeExtPwrSupplyCount=hpicfPoeExtPwrSupplyCount, hpicfPoePethPsePortTable=hpicfPoePethPsePortTable, hpicfPseAvailablePower=hpicfPseAvailablePower, hpicfPoeCompliance=hpicfPoeCompliance, hpicfPoeCompliance4=hpicfPoeCompliance4, PYSNMP_MODULE_ID=hpicfPoe, hpicfPoe=hpicfPoe, hpicfPoePethPsePortPower=hpicfPoePethPsePortPower, hpicfPoeMaxGuaranteedPower=hpicfPoeMaxGuaranteedPower, hpicfPoeRemainingGuaranteedPower=hpicfPoeRemainingGuaranteedPower, hpicfPoePethPseAvgPower=hpicfPoePethPseAvgPower, hpicfPoePethPsePortOperStatus=hpicfPoePethPsePortOperStatus, hpicfPoePethPsePortPreStdDetect=hpicfPoePethPsePortPreStdDetect, hpicfPOE=hpicfPOE, hpicfPseAllowPreStdDetect=hpicfPseAllowPreStdDetect)
