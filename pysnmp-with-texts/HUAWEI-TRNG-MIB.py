#
# PySNMP MIB module HUAWEI-TRNG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TRNG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, MibIdentifier, Counter32, iso, NotificationType, Gauge32, Bits, ObjectIdentity, Unsigned32, IpAddress, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Counter32", "iso", "NotificationType", "Gauge32", "Bits", "ObjectIdentity", "Unsigned32", "IpAddress", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString, TruthValue, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "DateAndTime", "RowStatus")
hwTRNG = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13))
hwTRNG.setRevisions(('2011-03-22 00:00', '2003-04-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwTRNG.setRevisionsDescriptions(('V1.01, modified the description of hwTimerangePeriodicEndTimes. modified the description of hwTrngCreateTimerangeTable, hwTrngAbsoluteTable and hwTrngPeriodicTable . modified the errors of the MIB file. modified the description of leaves. modified the datatype definition and the format of the MIB script.', 'V1.00, initial revision of this MIB module.',))
if mibBuilder.loadTexts: hwTRNG.setLastUpdated('201103220000Z')
if mibBuilder.loadTexts: hwTRNG.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwTRNG.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwTRNG.setDescription('The mib is used for configuring time range. When configuring the ACL rule, if you need to specify the time for the ACL rule to take effect, you need to run this command to configure a time range before specifying the time. After that, you can specify the time for an ACL to take effect by referring the time range name when configuring the ACL rule.')
hwTRNGMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1))
hwTrngCreateTimerangeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1), )
if mibBuilder.loadTexts: hwTrngCreateTimerangeTable.setStatus('current')
if mibBuilder.loadTexts: hwTrngCreateTimerangeTable.setDescription('Describes a time range. When configuring an ACL rule, set its effective time. To do so, configurate a time range first. After the configuration, the effective time is specified by referencing the time range when an ACL rule is being configured. An ACL time range can be a relative time range and an absolute time range. The index of this table is hwTrngIndex. ')
hwTrngCreateTimerangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TRNG-MIB", "hwTrngIndex"))
if mibBuilder.loadTexts: hwTrngCreateTimerangeEntry.setStatus('current')
if mibBuilder.loadTexts: hwTrngCreateTimerangeEntry.setDescription('Describes a time range. When configuring an ACL rule, set its effective time. To do so, configurate a time range first. After the configuration, the effective time is specified by referencing the time range when an ACL rule is being configured. An ACL time range can be a relative time range and an absolute time range. The index of this entry is hwTrngIndex. ')
hwTrngIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hwTrngIndex.setStatus('current')
if mibBuilder.loadTexts: hwTrngIndex.setDescription('Uniquely identifies a time range. Range: 1-256 ')
hwTrngName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrngName.setStatus('current')
if mibBuilder.loadTexts: hwTrngName.setDescription('Indicates the character string of a time range name. It is used to identify different time ranges. The character string consists of 1-32 characters of letters and digits. No other characters can be included. ')
hwTrngValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrngValidFlag.setStatus('current')
if mibBuilder.loadTexts: hwTrngValidFlag.setDescription('Describes whether the current time range is valid, that is, whether the current time is within the specified time range. Options: 1. true(1) -if the current time is within the specified time range, the value is true(1), which indicates validity. 2. false(2) -if the current time is not within the specified time range, the value is false(2), which indicates invalidity. ')
hwTrngCreateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrngCreateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwTrngCreateRowStatus.setDescription('Indicates the row status. Options: 1. active(1) -when this leaf is queried, the value is fixed to active(1). 2. createAndGo(4) -add a time range 3. destroy(6) -delete a time range It is used for adding or deleting a time range. To add a time range, you must bind hwTrngName and set hwTrngCreateRowStatus to createAndGo(4). To delete a time range, set hwTrngCreateRowStatus to destroy(6). When this leaf is queried, the value is fixed to active(1). ')
hwTrngAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2), )
if mibBuilder.loadTexts: hwTrngAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: hwTrngAbsoluteTable.setDescription('Describes an absolute time range. An absolute time range refers to the time range without a period. The time range is active from the specified start time and date to the end time and date. Otherwise, the time range is inactive. The indexes of this table are hwTrngAbsoluteNameIndex and hwTrngAbsoluteSubIndex. ')
hwTrngAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TRNG-MIB", "hwTrngAbsoluteNameIndex"), (0, "HUAWEI-TRNG-MIB", "hwTrngAbsoluteSubIndex"))
if mibBuilder.loadTexts: hwTrngAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: hwTrngAbsoluteEntry.setDescription('Describes an absolute time range. An absolute time range refers to the time range without a period. The time range is active from the specified start time and date to the end time and date. Otherwise, the time range is inactive. The indexes of this entry are hwTrngAbsoluteNameIndex and hwTrngAbsoluteSubIndex. ')
hwTrngAbsoluteNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hwTrngAbsoluteNameIndex.setStatus('current')
if mibBuilder.loadTexts: hwTrngAbsoluteNameIndex.setDescription('Uniquely identifies a time range. Range: 1-256 The specified time range must be created in hwTrngCreateTimerangeTable. ')
hwTrngAbsoluteSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hwTrngAbsoluteSubIndex.setStatus('current')
if mibBuilder.loadTexts: hwTrngAbsoluteSubIndex.setDescription('Uniquely identifies an absolute time range. Range: 1-12 ')
hwTimerangeAbsoluteStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangeAbsoluteStartTime.setStatus('current')
if mibBuilder.loadTexts: hwTimerangeAbsoluteStartTime.setDescription('Indicates the start time of an absolute time range. It is an 8-byte hexadecimal numeral, where, the first two bytes indicate the year, the third byte indicates the month, the fourth byte indicates the day, the fifth byte indicates the hour, the six byte indicates the minute, and the seventh and eighth digits are reserved, which are filled in 0. For example, if the start time is 2010-1-10,8:10, the value is presented as 0x07 0xDA 0x01 0x0A 0x08 0x0A 0x00 0x00. The time range that the device can identify is 1970/01/01 00:00-2099/12/31 23:59. Therefore, the time value must be within the time range. ')
hwTimerangeAbsoluteEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangeAbsoluteEndTime.setStatus('current')
if mibBuilder.loadTexts: hwTimerangeAbsoluteEndTime.setDescription('Indicates the end time of an absolute time range. The format is the same as that of hwTrngAbsoluteStartTime. The value of the end time must be larger than that of the start time. If the value is not specified, the system uses 2099/12/31 23:59 by default. ')
hwTimerangeAbsolueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangeAbsolueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwTimerangeAbsolueRowStatus.setDescription('Indicates the row status. Options: 1. active(1) -when this leaf is queried, the value is fixed to active(1). 2. createAndGo(4) -add an absolute time range 3. destroy(6) -delete an absolute time range It is used for adding or deleting an absolute time range. To add an absolute time range, enter hwTrngAbsoluteStartTime and set hwTrngAbsolueRowStatus to createAndGo(4). hwTrngAbsoluteEndTime is optional. To delete an absolute time range, set hwTrngAbsolueRowStatus to destroy(6). When this leaf is queried, the value is fixed to active(1). ')
hwTrngPeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3), )
if mibBuilder.loadTexts: hwTrngPeriodicTable.setStatus('current')
if mibBuilder.loadTexts: hwTrngPeriodicTable.setDescription('Describes a relative time range. A relative time range refers to the time range with a period. When a time range is already created, only the specific time is specified but the date is set to a day from Monday to Sunday. The time range is active at the specified time and date. Otherwise, the time range is inactive. The indexes of this table are hwTrngPeriodicNameIndex and hwTrngPeriodicSubIndex. ')
hwTrngPeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1), ).setIndexNames((0, "HUAWEI-TRNG-MIB", "hwTrngPeriodicNameIndex"), (0, "HUAWEI-TRNG-MIB", "hwTrngPeriodicSubIndex"))
if mibBuilder.loadTexts: hwTrngPeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: hwTrngPeriodicEntry.setDescription('Describes a relative time range. A relative time range refers to the time range with a period. When a time range is already created, only the specific time is specified but the date is set to a day from Monday to Sunday. The time range is active at the specified time and date. Otherwise, the time range is inactive. The indexes of this entry are hwTrngPeriodicNameIndex and hwTrngPeriodicSubIndex. ')
hwTrngPeriodicNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hwTrngPeriodicNameIndex.setStatus('current')
if mibBuilder.loadTexts: hwTrngPeriodicNameIndex.setDescription('Uniquely identifies a relative time range. Range: 1-256 The specified time range must be created in hwTrngCreateTimerangeTable. ')
hwTrngPeriodicSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwTrngPeriodicSubIndex.setStatus('current')
if mibBuilder.loadTexts: hwTrngPeriodicSubIndex.setDescription('Uniquely identifies a relative time range. Range: 1-32 ')
hwTrngPeriodicDayofWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrngPeriodicDayofWeek.setStatus('current')
if mibBuilder.loadTexts: hwTrngPeriodicDayofWeek.setDescription('Indicates the day of week within the periodic time range. The values are as follows: Sunday: 0x01 Monday: 0x02 Tuesday: 0x04 Wednesday: 0x08 Thursday: 0x10 Friday: 0x20 Saturday: 0x40 If the value is set to Sunday and Monday, perform the | operation to the values of Sunday and Monday, and the value is 0x03, and so on. ')
hwTimerangePeriodicStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangePeriodicStartTime.setStatus('current')
if mibBuilder.loadTexts: hwTimerangePeriodicStartTime.setDescription('Indicates the start time of a periodic time range. The format is the same as that of hwTrngAbsoluteStartTime in hwTrngAbsoluteTable. The periodic time needs only the hour and minute values, and thus only the fifth and sixth bytes are used, where, the fifth byte indicates the hour value of the start time and the sixth byte indicates the minute value. Other bytes are reserved and are filled in 0. For example, if the start time is 08:30, the value is presented as 0x00 0x00 0x00 0x00 0x08 0x1E 0x00 0x00. The time must be from 00:00 to 24:00. ')
hwTimerangePeriodicEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 5), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangePeriodicEndTime.setStatus('current')
if mibBuilder.loadTexts: hwTimerangePeriodicEndTime.setDescription('Indicates the end time of a periodic time range. The format is the same as that of hwTrngPeriodicStartTime. The value of the end time must be larger than that of the start time. The value must be from 00:00 to 24:00. The 7th byte is used only in the case of 23: 59: 60 to indicate the time 24: 00. ')
hwTimerangePeriodicRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTimerangePeriodicRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwTimerangePeriodicRowStatus.setDescription('Indicates the row status. Options: 1. active(1) -when this leaf is queried, the value is fixed to active(1). 2. createAndGo(4) -add a relative time range 3. destroy(6) -delete a relative time range It is used for adding or deleting a relative time range. To add a relative time range, enter hwTrngPeriodicStartTime and hwTrngPeriodicEndTime, and set hwTrngPeriodicRowStatus to createAndGo(4). To delete a relative time range, set hwTrngAbsolueRowStatus to destroy(6). When this leaf is queried, the value is fixed to active(1). ')
hwTRNGMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 3))
hwTRNGMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 3, 1))
hwTRNGMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 3, 1, 1)).setObjects(("HUAWEI-TRNG-MIB", "hwTRNGGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTRNGMibCompliance = hwTRNGMibCompliance.setStatus('current')
if mibBuilder.loadTexts: hwTRNGMibCompliance.setDescription('The compliance statement for entities which implement the Huawei Time-range MIB.')
hwTRNGMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 3, 2))
hwTRNGGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 13, 3, 2, 1)).setObjects(("HUAWEI-TRNG-MIB", "hwTrngName"), ("HUAWEI-TRNG-MIB", "hwTrngValidFlag"), ("HUAWEI-TRNG-MIB", "hwTrngCreateRowStatus"), ("HUAWEI-TRNG-MIB", "hwTimerangeAbsoluteStartTime"), ("HUAWEI-TRNG-MIB", "hwTimerangeAbsoluteEndTime"), ("HUAWEI-TRNG-MIB", "hwTimerangeAbsolueRowStatus"), ("HUAWEI-TRNG-MIB", "hwTrngPeriodicDayofWeek"), ("HUAWEI-TRNG-MIB", "hwTimerangePeriodicStartTime"), ("HUAWEI-TRNG-MIB", "hwTimerangePeriodicEndTime"), ("HUAWEI-TRNG-MIB", "hwTimerangePeriodicRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTRNGGroup = hwTRNGGroup.setStatus('current')
if mibBuilder.loadTexts: hwTRNGGroup.setDescription('A collection of objects providing mandatory time-range information.')
mibBuilder.exportSymbols("HUAWEI-TRNG-MIB", hwTrngAbsoluteSubIndex=hwTrngAbsoluteSubIndex, hwTrngCreateRowStatus=hwTrngCreateRowStatus, hwTrngPeriodicNameIndex=hwTrngPeriodicNameIndex, hwTRNGMibGroups=hwTRNGMibGroups, hwTrngAbsoluteNameIndex=hwTrngAbsoluteNameIndex, hwTrngIndex=hwTrngIndex, hwTimerangeAbsoluteStartTime=hwTimerangeAbsoluteStartTime, PYSNMP_MODULE_ID=hwTRNG, hwTrngPeriodicTable=hwTrngPeriodicTable, hwTrngAbsoluteEntry=hwTrngAbsoluteEntry, hwTRNG=hwTRNG, hwTRNGMibConformance=hwTRNGMibConformance, hwTrngPeriodicSubIndex=hwTrngPeriodicSubIndex, hwTrngPeriodicEntry=hwTrngPeriodicEntry, hwTrngValidFlag=hwTrngValidFlag, hwTrngPeriodicDayofWeek=hwTrngPeriodicDayofWeek, hwTRNGMibCompliance=hwTRNGMibCompliance, hwTrngCreateTimerangeTable=hwTrngCreateTimerangeTable, hwTrngName=hwTrngName, hwTimerangeAbsoluteEndTime=hwTimerangeAbsoluteEndTime, hwTimerangePeriodicEndTime=hwTimerangePeriodicEndTime, hwTRNGMibCompliances=hwTRNGMibCompliances, hwTimerangePeriodicRowStatus=hwTimerangePeriodicRowStatus, hwTRNGMibObjects=hwTRNGMibObjects, hwTrngCreateTimerangeEntry=hwTrngCreateTimerangeEntry, hwTRNGGroup=hwTRNGGroup, hwTimerangeAbsolueRowStatus=hwTimerangeAbsolueRowStatus, hwTrngAbsoluteTable=hwTrngAbsoluteTable, hwTimerangePeriodicStartTime=hwTimerangePeriodicStartTime)
