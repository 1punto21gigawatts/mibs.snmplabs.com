#
# PySNMP MIB module Juniper-RADIUS-Disconnect-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-RADIUS-Disconnect-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:04:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Counter32, ObjectIdentity, Counter64, TimeTicks, iso, NotificationType, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "NotificationType", "Bits", "MibIdentifier")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
juniRadiusDisconnectMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67))
juniRadiusDisconnectMIB.setRevisions(('2004-06-09 13:57', '2003-01-13 20:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniRadiusDisconnectMIB.setRevisionsDescriptions(('Obsoleted the MIB.', 'Initial version of this MIB module, derived from IETF Internet Drafts of RADIUS Disconnect.',))
if mibBuilder.loadTexts: juniRadiusDisconnectMIB.setLastUpdated('200406091357Z')
if mibBuilder.loadTexts: juniRadiusDisconnectMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniRadiusDisconnectMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniRadiusDisconnectMIB.setDescription('The RADIUS Disconnect MIB for the Juniper Networks enterprise.')
juniRadiusDisconnectObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1))
juniRadiusDisconnect = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1))
juniRadiusDisconnectInvalidClientAddresses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectInvalidClientAddresses.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectInvalidClientAddresses.setDescription('The number of RADIUS disconnect packets received from unknown addresses.')
juniRadiusDisconnectClientTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2), )
if mibBuilder.loadTexts: juniRadiusDisconnectClientTable.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectClientTable.setDescription('The (conceptual) table listing the RADIUS authentication servers with which the disconnect shares a secret.')
juniRadiusDisconnectClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectClientAddress"))
if mibBuilder.loadTexts: juniRadiusDisconnectClientEntry.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectClientEntry.setDescription('An entry (conceptual row) representing a RADIUS disconnect client with which the server shares a secret.')
juniRadiusDisconnectClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniRadiusDisconnectClientAddress.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectClientAddress.setDescription('The IP address of the RADIUS client referred to in this table entry. A value of 0.0.0.0 indicates this entry is not in use.')
juniRadiusDisconnectClientPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectClientPortNumber.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectClientPortNumber.setDescription('The UDP port the server is listening on to recieve disconnect requests from this client.')
juniRadiusDisconnectRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectRequests.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectRequests.setDescription('The number of RADIUS Disconnect packets received from this client.')
juniRadiusDisconnectAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectAccepts.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectAccepts.setDescription('The number of RADIUS Disconnects that were succesful.')
juniRadiusDisconnectRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectRejects.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectRejects.setDescription('The number of RADIUS Disconnects not successful.')
juniRadiusDisconnectNoSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectNoSecret.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectNoSecret.setDescription('The number of RADIUS Disconnect requests recieved from this client while no secret is set.')
juniRadiusDisconnectNoSessionIds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectNoSessionIds.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectNoSessionIds.setDescription('The number of RADIUS Disconnect requests recieved from this client with no session-id present.')
juniRadiusDisconnectBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectBadAuthenticators.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectBadAuthenticators.setDescription('The number of RADIUS disconnect packets containing invalid authenticators received from this client.')
juniRadiusDisconnectUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectUnknownTypes.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectUnknownTypes.setDescription('The number of RADIUS packets of unknown type which were received from this client on the authentication port.')
juniRadiusDisconnectPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniRadiusDisconnectPacketsDropped.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectPacketsDropped.setDescription('The number of RADIUS packets of which were received from this client on the authentication port and dropped for some other reason.')
juniRadiusDisconnectCfgClientTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3), )
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientTable.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientTable.setDescription('The (conceptual) table listing the RADIUS disconnect clients with which the server shares a secret.')
juniRadiusDisconnectCfgClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3, 1), ).setIndexNames((0, "Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectCfgClientAddress"))
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientEntry.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientEntry.setDescription('An entry (conceptual row) representing a RADIUS authentication server with which the disconnect shares a secret.')
juniRadiusDisconnectCfgClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientAddress.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientAddress.setDescription('The IP address of the RADIUS disconnect client referred to in this table entry.')
juniRadiusDisconnectCfgClientPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1700)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientPortNumber.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgClientPortNumber.setDescription('The UDP port the server is listening on to recieve disconnect requests from this client.')
juniRadiusDisconnectCfgKey = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusDisconnectCfgKey.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgKey.setDescription('The secret (RADIUS authenticator) used by the serevr during exchanges with this client. The default is a zero-length string, indicating no authenticator is used.')
juniRadiusDisconnectCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusDisconnectCfgRowStatus.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectCfgRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniRadiusDisconnectMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 2))
juniRadiusDisconnectMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 2, 1))
juniRadiusDisconnectMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 2, 2))
juniRadiusAuthDisconnectCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 2, 1, 1)).setObjects(("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusAuthDisconnectCompliance = juniRadiusAuthDisconnectCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusAuthDisconnectCompliance.setDescription('The compliance statement for entities which implement the Juniper RADIUS Disconnect MIB.')
juniRadiusDisconnectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 67, 2, 2, 1)).setObjects(("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectInvalidClientAddresses"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectClientPortNumber"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectRequests"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectAccepts"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectRejects"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectNoSecret"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectNoSessionIds"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectBadAuthenticators"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectUnknownTypes"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectPacketsDropped"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectCfgClientPortNumber"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectCfgKey"), ("Juniper-RADIUS-Disconnect-MIB", "juniRadiusDisconnectCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusDisconnectGroup = juniRadiusDisconnectGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniRadiusDisconnectGroup.setDescription('The basic collection of objects providing management of RADIUS Disconnect.')
mibBuilder.exportSymbols("Juniper-RADIUS-Disconnect-MIB", PYSNMP_MODULE_ID=juniRadiusDisconnectMIB, juniRadiusDisconnectClientPortNumber=juniRadiusDisconnectClientPortNumber, juniRadiusDisconnectObjects=juniRadiusDisconnectObjects, juniRadiusDisconnectClientAddress=juniRadiusDisconnectClientAddress, juniRadiusDisconnectBadAuthenticators=juniRadiusDisconnectBadAuthenticators, juniRadiusDisconnectGroup=juniRadiusDisconnectGroup, juniRadiusDisconnectNoSecret=juniRadiusDisconnectNoSecret, juniRadiusDisconnectCfgClientTable=juniRadiusDisconnectCfgClientTable, juniRadiusDisconnectNoSessionIds=juniRadiusDisconnectNoSessionIds, juniRadiusDisconnectUnknownTypes=juniRadiusDisconnectUnknownTypes, juniRadiusDisconnectPacketsDropped=juniRadiusDisconnectPacketsDropped, juniRadiusDisconnectCfgClientAddress=juniRadiusDisconnectCfgClientAddress, juniRadiusDisconnect=juniRadiusDisconnect, juniRadiusDisconnectCfgRowStatus=juniRadiusDisconnectCfgRowStatus, juniRadiusDisconnectInvalidClientAddresses=juniRadiusDisconnectInvalidClientAddresses, juniRadiusDisconnectRejects=juniRadiusDisconnectRejects, juniRadiusDisconnectCfgClientPortNumber=juniRadiusDisconnectCfgClientPortNumber, juniRadiusDisconnectClientEntry=juniRadiusDisconnectClientEntry, juniRadiusDisconnectMIBCompliances=juniRadiusDisconnectMIBCompliances, juniRadiusDisconnectMIBGroups=juniRadiusDisconnectMIBGroups, juniRadiusDisconnectCfgKey=juniRadiusDisconnectCfgKey, juniRadiusDisconnectClientTable=juniRadiusDisconnectClientTable, juniRadiusAuthDisconnectCompliance=juniRadiusAuthDisconnectCompliance, juniRadiusDisconnectMIB=juniRadiusDisconnectMIB, juniRadiusDisconnectMIBConformance=juniRadiusDisconnectMIBConformance, juniRadiusDisconnectCfgClientEntry=juniRadiusDisconnectCfgClientEntry, juniRadiusDisconnectRequests=juniRadiusDisconnectRequests, juniRadiusDisconnectAccepts=juniRadiusDisconnectAccepts)
