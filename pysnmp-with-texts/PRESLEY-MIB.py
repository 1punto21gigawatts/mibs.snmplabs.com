#
# PySNMP MIB module PRESLEY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PRESLEY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:41:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysName, sysContact, sysLocation = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysContact", "sysLocation")
ObjectIdentity, IpAddress, Bits, NotificationType, enterprises, Integer32, Gauge32, NotificationType, iso, Counter64, MibIdentifier, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Bits", "NotificationType", "enterprises", "Integer32", "Gauge32", "NotificationType", "iso", "Counter64", "MibIdentifier", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
generic = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10))
alertLed = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 23))
alertLedState = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 23, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertLedState.setStatus('mandatory')
if mibBuilder.loadTexts: alertLedState.setDescription('This Read-only object shows the state of the Alert LED.')
alertLedTrap = NotificationType((1, 3, 6, 1, 4, 1, 43) + (0,73)).setObjects(("PRESLEY-MIB", "alertLedState"), ("PRESLEY-MIB", "alertDescription"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: alertLedTrap.setDescription("When the Alert LED is Activated or Inactivated this trap is generated. The variables provided with it are the current state of the Alert LED and the alertDescription of the last Activated Alert LED condition, the name of the managed hub, it's location and contact information.")
alertTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 23, 3), )
if mibBuilder.loadTexts: alertTable.setStatus('mandatory')
if mibBuilder.loadTexts: alertTable.setDescription('A table of descriptive, status and configuration information about the Alert LED Conditions.')
alertTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1), ).setIndexNames((0, "PRESLEY-MIB", "alertIdentifier"))
if mibBuilder.loadTexts: alertTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: alertTableEntry.setDescription('An entry in the Alert LED table containing information about a single condition.')
alertIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("networkUtilization", 1), ("networkErrorRate", 2), ("utpPortPartitioned", 3), ("coaxPortPartitioned", 4), ("loginSecurityViolation", 5), ("snmpSecurityViolation", 6), ("portSecurityViolation", 7), ("stationConnectivity", 8), ("alertLedTest", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertIdentifier.setStatus('mandatory')
if mibBuilder.loadTexts: alertIdentifier.setDescription('This identifies a particular Alert LED Condition.')
alertDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertDescription.setStatus('mandatory')
if mibBuilder.loadTexts: alertDescription.setDescription('Description of Alert LED Condition.')
alertStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertStatus.setStatus('mandatory')
if mibBuilder.loadTexts: alertStatus.setDescription('Status of Alert LED Condition.')
alertType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("threshold", 1), ("state", 2), ("latched", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertType.setStatus('mandatory')
if mibBuilder.loadTexts: alertType.setDescription('Type of Alert LED Condition.')
alertConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 23, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("high", 3), ("medium", 4), ("low", 5), ("acknowledge", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alertConfiguration.setStatus('mandatory')
if mibBuilder.loadTexts: alertConfiguration.setDescription('Configuration of Alert LED Condition. For Threshold Conditions this can be High, Medium, Low or Disabled. For State Conditions it is Enabled or Disabled. For Latched Conditions it is Enabled, Disabled, or if the Condition is Active the additional option of Acknowledge.')
mibBuilder.exportSymbols("PRESLEY-MIB", generic=generic, alertIdentifier=alertIdentifier, alertDescription=alertDescription, alertTable=alertTable, a3Com=a3Com, alertType=alertType, alertLedTrap=alertLedTrap, alertStatus=alertStatus, alertConfiguration=alertConfiguration, alertTableEntry=alertTableEntry, alertLed=alertLed, alertLedState=alertLedState)
