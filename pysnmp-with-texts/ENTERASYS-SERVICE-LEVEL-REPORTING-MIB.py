#
# PySNMP MIB module ENTERASYS-SERVICE-LEVEL-REPORTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-SERVICE-LEVEL-REPORTING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, Integer32, Counter64, MibIdentifier, Bits, IpAddress, Counter32, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "Integer32", "Counter64", "MibIdentifier", "Bits", "IpAddress", "Counter32", "Gauge32", "ObjectIdentity")
RowStatus, TextualConvention, StorageType, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "StorageType", "DisplayString")
etsysServiceLevelReportingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39))
etsysServiceLevelReportingMIB.setRevisions(('2003-11-06 15:15', '2003-10-24 19:02', '2003-10-22 23:32',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysServiceLevelReportingMIB.setRevisionsDescriptions(('Corrected the postal code in the CONTACT-INFO clause.', "Changed the name of the bit at position zero in the EtsysSrvcLvlStandardMetrics textual convention from 'none' to 'reserved' and added a comment for it in the description clause.", 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysServiceLevelReportingMIB.setLastUpdated('200311061515Z')
if mibBuilder.loadTexts: etsysServiceLevelReportingMIB.setOrganization('Enterasys Networks Inc.')
if mibBuilder.loadTexts: etsysServiceLevelReportingMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysServiceLevelReportingMIB.setDescription('This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP-based internets. In particular, it specifies the objects used for managing the results of the service level metrics measurements.')
class EtsysSrvcLvlOwnerString(TextualConvention, OctetString):
    description = 'An OwnerString. The string length is limited to 32 octets.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class TimeUnit(TextualConvention, Integer32):
    description = 'A enumerated list of time units.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("year", 1), ("month", 2), ("week", 3), ("day", 4), ("hour", 5), ("second", 6), ("millisecond", 7), ("microsecond", 8), ("nanosecond", 9))

class EtsysSrvcLvlStandardMetrics(TextualConvention, Bits):
    description = " Each standard metric is identified below. In order to allow for several metrics to be calculated in a single measure, there is a need to describe in a bit string the metrics to be measured. This textual convention defines a BITS construct that gathers in a bit string a sequence of bits. The bit order corresponds to the order of the metric identifiers in the registry. The first bit (most significant bit) of the string has the index 0. The index 1 corresponds to the first metric of the registry (instantaneousUnidirectionalConnectivity ). Example: One-way-Delay(6) is identified as 6. One-way-Packet-Loss(12) is as 12. A network measure performing both One-way-Delay(6) and One-way-Packet-Loss(12) will be described as '0000001000001000'b, '208'B. Below is a list of defined metrics: reserved (0) Setting this reserved bit has no effect. instantUnidirectionConnectivity (1) The identifier for the Type-P-Instantaneous-Unidirectional- Connectivity metric. REFERENCE RFC2678, section 2. instantBidirectionConnectivity (2) The identifier for the Type-P-Instantaneous-Bidirectional- Connectivity metric. REFERENCE RFC2678, section 3. intervalUnidirectionConnectivity (3) The identifier for the Type-P-Interval-Unidirectional- Connectivity metric. REFERENCE RFC2678, section 4. intervalBidirectionConnectivity (4) The identifier for the Type-P-Interval-Bidirectional- Connectivity metric. REFERENCE RFC2678, section 5. intervalTemporalConnectivity (5) The identifier for the Type-P1-P2-Interval-Temporal- Connectivity metric. REFERENCE RFC2678, section 6. oneWayDelay (6) The identifier for the Type-P-One-way-Delay metric. REFERENCE RFC2679, section 3. oneWayDelayPoissonStream (7) The identifier for the Type-P-One-way-Delay-Poisson-Stream metric. REFERENCE RFC2679, section 4. oneWayDelayPercentile (8) The identifier for the Type-P-One-way-Delay-Percentile metric. REFERENCE RFC2679, section 5.1. oneWayDelayMedian (9) The identifier for the Type-P-One-way-Delay-Median metric. REFERENCE RFC2679, section 5.2. oneWayDelayMinimum (10) The identifier for the Type-P-One-way-Delay-Minimum metric. REFERENCE RFC2679, section 5.3. oneWayDelayInversePercentile (11) The identifier for the Type-P-One-way-Delay-Inverse- Percentile metric. REFERENCE RFC2679, section 5.4. oneWayPacketLoss (12) The identifier for the Type-P-One-way-Packet-Loss metric. REFERENCE RFC2680, section 2. oneWayPacketLossPoissonStream (13) The identifier for the Type-P-One-way-Packet-Loss-Poisson- Stream metric. REFERENCE RFC2680, section 3. oneWayPacketLossAverage (14) The identifier for the Type-P-One-way-Packet-Loss-Average metric. REFERENCE RFC2680, section 4. roundtripDelay (15) The identifier for the Type-P-Round-trip-Delay metric. REFERENCE section 2 of the rfc2681. roundtripDelayPoissonStream (16) The identifier for the Type-P-Round-trip-Delay-Poisson-Stream metric. REFERENCE RFC2681, section 4. roundtripDelayPercentile (17) The identifier for the Type-P-Round-trip-Delay-Percentile metric. REFERENCE RFC2681, section 4.1. roundtripDelayMedian (18) The identifier for the Type-P-Round-trip-Delay-Median metric. REFERENCE RFC2681, section 4.2. roundtripDelayMinimum (19) The identifier for the Type-P-Round-trip-Delay-Minimum metric. REFERENCE RFC2681, section 4.3. roundtripDelayInversePercentile (20) The identifier for the Type-P-Round-trip-Inverse-Percentile metric. REFERENCE RFC2681, section 4.4. oneWayLossDistanceStream (21) The identifier for the Type-P-One-Way-Loss-Distance-Stream metric. REFERENCE RFC3357, section 5.4.1. oneWayLossPeriodStream (22) The identifier for the Type-P-One-Way-Loss-Period-Stream metric. REFERENCE RFC3357, section 5.4.2. oneWayLossNoticeableRate (23) The identifier for the Type-P-One-Way-Loss-Noticeable-Rate metric. REFERENCE RFC3357, section 6.1. oneWayLossPeriodTotal (24) The identifier for the Type-P-One-Way-Loss-Period-Total metric. REFERENCE RFC3357, section 6.2. oneWayLossPeriodLengths (25) The identifier for the Type-P-One-Way-Loss-Period-Lengths metric. REFERENCE RFC3357, section 6.3. oneWayInterLossPeriodLengths (26) The identifier for the Type-P-One-Way-Inter-Loss-Period- Lengths metric. REFERENCE RFC3357, section 6.4. oneWayIpdv (27) The identifier for the Type-P-One-way-ipdv metric. REFERENCE RFC3393, section 2. oneWayIpdvPoissonStream (28) The identifier for the Type-P-One-way-ipdv-Poisson-stream metric. REFERENCE RFC3393, section 3. oneWayIpdvPercentile (29) The identifier for the Type-P-One-way-ipdv-percentile metric. REFERENCE RFC3393, section 4.3. oneWayIpdvInversePercentile (30) The identifier for the Type-P-One-way-ipdv-inverse-percentile metric. REFERENCE RFC3393, section 4.4. oneWayIpdvJitter (31) The identifier for the Type-P-One-way-ipdv-jitter metric. REFERENCE RFC3393, section 4.5. oneWayPeakToPeakIpdv (32) The identifier for the Type-P-One-way-peak-to-peak-ipdv metric. REFERENCE RFC3393, section 4.6. oneWayDelayPeriodicStream (33) The identifier for the Type-P-One-way-Delay-Periodic-Stream metric. REFERENCE RFC3432, section 4. roundtripDelayAverage (34) The identifier for the Type-P-Round-trip-Delay-Average metric. roundtripPacketLoss (35) The identifier for the Type-P-Round-trip-Packet-Loss metric. roundtripPacketLossAverage (36) The identifier for the Type-P-Round-trip-Packet-Loss-Average metric. roundtripIpdv (37) The identifier for the Type-P-Round-trip-ipdv metric."
    status = 'current'
    namedValues = NamedValues(("reserved", 0), ("instantUnidirectionConnectivity", 1), ("instantBidirectionConnectivity", 2), ("intervalUnidirectionConnectivity", 3), ("intervalBidirectionConnectivity", 4), ("intervalTemporalConnectivity", 5), ("oneWayDelay", 6), ("oneWayDelayPoissonStream", 7), ("oneWayDelayPercentile", 8), ("oneWayDelayMedian", 9), ("oneWayDelayMinimum", 10), ("oneWayDelayInversePercentile", 11), ("oneWayPacketLoss", 12), ("oneWayPacketLossPoissonStream", 13), ("oneWayPacketLossAverage", 14), ("roundtripDelay", 15), ("roundtripDelayPoissonStream", 16), ("roundtripDelayPercentile", 17), ("roundtripDelayMedian", 18), ("roundtripDelayMinimum", 19), ("roundtripDelayInversePercentile", 20), ("oneWayLossDistanceStream", 21), ("oneWayLossPeriodStream", 22), ("oneWayLossNoticeableRate", 23), ("oneWayLossPeriodTotal", 24), ("oneWayLossPeriodLengths", 25), ("oneWayInterLossPeriodLengths", 26), ("oneWayIpdv", 27), ("oneWayIpdvPoissonStream", 28), ("oneWayIpdvPercentile", 29), ("oneWayIpdvInversePercentile", 30), ("oneWayIpdvJitter", 31), ("oneWayPeakToPeakIpdv", 32), ("oneWayDelayPeriodicStream", 33), ("roundtripDelayAverage", 34), ("roundtripPacketLoss", 35), ("roundtripPacketLossAverage", 36), ("roundtripIpdv", 37))

class GMTTimeStamp(TextualConvention, OctetString):
    description = 'The value at which a specific occurrence happened. The specific occurrence must be defined in the description of any object defined using this type. field octets contents range ----- ------ -------- ----- 1 1-4 second since 1 Jan 2000 0H00* 0..2^31 - 1 2 5-8 fractional part of the second* 0..2^32 - 1 * the value is in network-byte order The timestamp format is directly inspired from the NTP timestamp format. It differs because it counts the second since 1 Jan 2000 0H00 instead of 1 Jan 1900 0H00. The most significant bit of the part that represents the second is reserved. It will wrap in year 2068 (The NTP timestamp will wrap in year 2036). This bit is set to indicate if the fractional part of the second contains a precision field and a synchronization field. When this bit is not set the resolution is maximal. The maximal resolution is close to 250 picoseconds. The precision of the timestamp is provided in etsysSrvcLvlSystemClockResolution.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class TypeP(TextualConvention, OctetString):
    description = "This textual convention is a display string used to describe the protocol encapsulation list of a packet, and is used as the value of the SYNTAX clause for the type of the Src and Dst of a measure. The RFC2895 specifies a macro named PROTOCOL-IDENTIFIER for the definition of protocol identifiers, while its companion document, the RFC2896 defines a set of protocol identifiers. TypeP is defined as a display string. It consists of a list of dot separated protocol names. Each protocol name has been previously defined using the macro PROTOCOL-IDENTIFIER of the RFC 2895. Examples: The RFC2896 defines the protocol identifiers 'ether2', 'ip', 'ipip4', 'udp', 'tcp', 'telnet'... The TypeP of the source address corresponding to telnet is the string 'ip.tcp.telnet'. The TypeP of the source address corresponding to UDP packets sent in an IP tunnel is the string 'ip.ipip4.udp'. Note: A performance measure is active, so generally a TypeP value does not describe the link layer (i.e. ether2...). Valid Internet packets are sent from Src to Dst. Then the choice of the link layer relies on the Internet stack."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 512)

class TypePaddress(TextualConvention, OctetString):
    description = "This textual convention is a Display string used to describe the parameters of the protocol encapsulation list of a packet, basically the address. TypePaddress is defined as a display string. It consists in a list of space separated parameter list. Each parameter in the list corresponds to a parameter of a PROTOCOL-IDENTIFIER of the TypeP. Example: The TypeP 'ip.ipip4' has 2 parameters. A valid TypePaddress value is '192.168.1.1 128.2.6.7'."
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 512)

etsysSrvcLvlConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1))
etsysSrvcLvlSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1))
etsysSrvcLvlOwners = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2))
etsysSrvcLvlHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3))
etsysSrvcLvlMeasure = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4))
etsysSrvcLvlSystemTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 1), GMTTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlSystemTime.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlSystemTime.setDescription('The current time of the system.')
etsysSrvcLvlSystemClockResolution = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 2), Integer32()).setUnits('picoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlSystemClockResolution.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlSystemClockResolution.setDescription('etsysSrvcLvlSystemClockResolution provides the precision of the clock used for the measures . The unit is the picosecond. For example, the clock on an old Unix host might advance only once every msec, and thus have a resolution of 1 msec. So its resolution is 1,000,000,000 picosecond and the value of etsysSrvcLvlSystemClockResolution is 1000000000.')
etsysSrvcLvlMetricTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3), )
if mibBuilder.loadTexts: etsysSrvcLvlMetricTable.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricTable.setDescription('This table is mandatory. It describes the current implementation. Each defined metric must be described in the table. etsysSrvcLvlMetricTable content is read only.')
etsysSrvcLvlMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1), ).setIndexNames((0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMetricIndex"))
if mibBuilder.loadTexts: etsysSrvcLvlMetricEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricEntry.setDescription('An entry describes the static capabilities of a metric implementation.')
etsysSrvcLvlMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("instantUnidirectionConnectivity", 1), ("instantBidirectionConnectivity", 2), ("intervalUnidirectionConnectivity", 3), ("intervalBidirectionConnectivity", 4), ("intervalTemporalConnectivity", 5), ("oneWayDelay", 6), ("oneWayDelayPoissonStream", 7), ("oneWayDelayPercentile", 8), ("oneWayDelayMedian", 9), ("oneWayDelayMinimum", 10), ("oneWayDelayInversePercentile", 11), ("oneWayPacketLoss", 12), ("oneWayPacketLossPoissonStream", 13), ("oneWayPacketLossAverage", 14), ("roundtripDelay", 15), ("roundtripDelayPoissonStream", 16), ("roundtripDelayPercentile", 17), ("roundtripDelayMedian", 18), ("roundtripDelayMinimum", 19), ("roundtripDelayInversePercentile", 20), ("oneWayLossDistanceStream", 21), ("oneWayLossPeriodStream", 22), ("oneWayLossNoticeableRate", 23), ("oneWayLossPeriodTotal", 24), ("oneWayLossPeriodLengths", 25), ("oneWayInterLossPeriodLengths", 26), ("oneWayIpdv", 27), ("oneWayIpdvPoissonStream", 28), ("oneWayIpdvPercentile", 29), ("oneWayIpdvInversePercentile", 30), ("oneWayIpdvJitter", 31), ("oneWayPeakToPeakIpdv", 32), ("oneWayDelayPeriodicStream", 33), ("roundtripDelayAverage", 34), ("roundtripPacketLoss", 35), ("roundtripPacketLossAverage", 36), ("roundtripIpdv", 37))))
if mibBuilder.loadTexts: etsysSrvcLvlMetricIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricIndex.setDescription("etsysSrvcLvlMetricIndex defines an unambiguous index for each standardized metric. It identifies a metric. Its value is defined above. This value is the same in any implementation of the ENTERASYS-SERVICE-LEVEL-REPORTING-MIB. See EtsysSrvcLvlStandardMetrics for description of the metrics. Example: onewayPacketLossAverage is defined as the 14. Consequently the index of the metric onewayPacketLossAverage in the EtsysSrvcLvlMetricTable will always be '14'")
etsysSrvcLvlMetricCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notImplemented", 0), ("implemented", 1))).clone('implemented')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlMetricCapabilities.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricCapabilities.setDescription('A value of notImplemented implies the metric is not implemented. A value of implemented implies the metric is implemented.')
etsysSrvcLvlMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network", 0), ("aggregated", 1))).clone('aggregated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlMetricType.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricType.setDescription('Indicates the metric type, whether it is network or aggregated')
etsysSrvcLvlMetricUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noUnit", 0), ("second", 1), ("millisecond", 2), ("microsecond", 3), ("nanosecond", 4), ("percentage", 5), ("packet", 6), ("byte", 7), ("kilobyte", 8), ("megabyte", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlMetricUnit.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricUnit.setDescription('The unit used in the current entity for the results of the measurement of this metric.')
etsysSrvcLvlMetricDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 1, 3, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlMetricDescription.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMetricDescription.setDescription('A textual description of the metric implementation following the exact name of this metric in the registry. For example: oneWayDelay: text .')
etsysSrvcLvlOwnersTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1), )
if mibBuilder.loadTexts: etsysSrvcLvlOwnersTable.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersTable.setDescription("A management entity wishing to create and activate remote EtsysSrvcLvl measurements in an agent must previously be registered in the etsysSrvcLvlOwnersTable. etsysSrvcLvlOwnersTable content is read-create. It contains at least the owner 'monitor'.")
etsysSrvcLvlOwnersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1), ).setIndexNames((0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersIndex"))
if mibBuilder.loadTexts: etsysSrvcLvlOwnersEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersEntry.setDescription("The description of the resources granted to an SNMP application. For example, an instance of etsysSrvcLvlOwnersOwner with an EtsysSrvcLvlOwnerString 'acme', which represents the 14th owner created in etsysSrvcLvlOwnersTable would be named etsysSrvcLvlOwnersEntryOwner.14. Notes: The etsysSrvcLvlOwnersIndex value is a local index managed directly by the agent. The management application must poll to get the next available index value. It is not used in anyway in other tables.")
etsysSrvcLvlOwnersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIndex.setDescription('An arbitrary index that identifies an entry in the owners table.')
etsysSrvcLvlOwnersOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 2), EtsysSrvcLvlOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersOwner.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersOwner.setDescription('The owner described by this entry.')
etsysSrvcLvlOwnersGrantedMetrics = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 3), EtsysSrvcLvlStandardMetrics()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersGrantedMetrics.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersGrantedMetrics.setDescription('Defines the metrics granted to an owner for which measurements can be performed.')
etsysSrvcLvlOwnersQuota = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersQuota.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersQuota.setDescription('The maximum number of records that this owner may have in the history table.')
etsysSrvcLvlOwnersIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIpAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIpAddressType.setDescription('The IP address type of the management entity corresponding to this owner. InetAddressType is restricted to ipv4(1),ipv6(2)and dns(16).')
etsysSrvcLvlOwnersIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIpAddress.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersIpAddress.setDescription('The IP address of the management entity corresponding to this owner.')
etsysSrvcLvlOwnersEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersEmail.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersEmail.setDescription('The email address of the management entity corresponding to this owner.')
etsysSrvcLvlOwnersSMS = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 8), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersSMS.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersSMS.setDescription('The SMS phone number of the management entity corresponding to this owner.')
etsysSrvcLvlOwnersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlOwnersStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersStatus.setDescription('The status of this table entry.')
etsysSrvcLvlHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1), )
if mibBuilder.loadTexts: etsysSrvcLvlHistoryTable.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryTable.setDescription('The table containing the measurement results.')
etsysSrvcLvlHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1), ).setIndexNames((0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryMeasureOwner"), (0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryMeasureIndex"), (0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryMetricIndex"), (0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryIndex"))
if mibBuilder.loadTexts: etsysSrvcLvlHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryEntry.setDescription('An etsysSrvcLvlHistoryEntry entry is one of the results of a measure identified by etsysSrvcLvlHistoryMeasureOwner, etsysSrvcLvlHistoryMeasureIndex, etsysSrvcLvlHistoryMetricIndex and etsysSrvcLvlHistoryIndex. In the index : + etsysSrvcLvlHistoryMeasureOwner identifies the owner of the measure + etsysSrvcLvlHistoryMeasureIndex identifies the measure in the owner namespace + etsysSrvcLvlHistoryMetricIndex identifies the metric measured by the measure. The metric is described in the corresponding entry of the n etsysSrvcLvlMetricTable + etsysSrvcLvlHistoryIndex is the local index of the result on the history table.')
etsysSrvcLvlHistoryMeasureOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 1), EtsysSrvcLvlOwnerString())
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMeasureOwner.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMeasureOwner.setDescription('The owner of the measure that produced this result.')
etsysSrvcLvlHistoryMeasureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMeasureIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMeasureIndex.setDescription(" The index (in owner's namespace) of the measure that produced this result.")
etsysSrvcLvlHistoryMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMetricIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryMetricIndex.setDescription(' etsysSrvcLvlHistoryMetricIndex identifies the metric measured by the measure. The metric is described in the corresponding entry of the etsysSrvcLvlMetricTable.')
etsysSrvcLvlHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryIndex.setDescription(' A local index that identifies a result in the history table.')
etsysSrvcLvlHistorySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlHistorySequence.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistorySequence.setDescription("etsysSrvcLvlHistorySequence is the sequence index of the measurement results for a metric. Network metrics: It's the sequence index of a measurement packet. Typically, it identifies the order of the packet in the stream of packets sends by the source. Aggregated metrics: It is the sequence index of the computed aggregated metric result.")
etsysSrvcLvlHistoryTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 6), GMTTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlHistoryTimestamp.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryTimestamp.setDescription('The timestamp when the measurement occurred.')
etsysSrvcLvlHistoryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlHistoryValue.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryValue.setDescription('The observed value of the measurement.')
etsysSrvcLvlNetMeasureTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1), )
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTable.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTable.setDescription('An entry is a measurement that performs network measures and provides results. It performs several metric measurements per packet exchange. Each step of a measure produces a singleton result per metric. The time of the measurement and the value of the metric are saved in the etsysSrvcLvlHistoryTable.')
etsysSrvcLvlNetMeasureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1), ).setIndexNames((0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureOwner"), (0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureIndex"))
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureEntry.setDescription('The EtsysSrvcLvlNetMeasureTable is mandatory. The etsysSrvcLvlNetMeasureMetrics is set to a list of metrics to be computed from the same raw packet exchange. Each step of measurement delivers a singleton per chosen metric. Results are timestamped and saved in the etsysSrvcLvlHistoryTable. The etsysSrvcLvlNetMeasureTable typical usage consists in providing network measure indices in order to allow aggregated measures to perform aggregation on the results of network measures.')
etsysSrvcLvlNetMeasureOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 1), EtsysSrvcLvlOwnerString())
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureOwner.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureOwner.setDescription('The owner of the network measurement.')
etsysSrvcLvlNetMeasureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureIndex.setDescription("The index (in owner's namespace) of the network measure. ")
etsysSrvcLvlNetMeasureName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureName.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureName.setDescription('The name of the metric instance. It illustrates the specificity of the metric and includes the metric and the TypeP. Example: IP-TCP-HTTP-One-way-Delay: free text ')
etsysSrvcLvlNetMeasureMetrics = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 4), EtsysSrvcLvlStandardMetrics()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMetrics.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMetrics.setDescription('Defines the metrics to compute within this measure. ONLY network metrics of the same type are allowed in this field. A measure may be configured for the result of different metric singletons to be archived in the etsysSrvcLvlHistoryTable. The etsysSrvcLvlMetricIndex of the created result has the value of the bit index of the corresponding etsysSrvcLvlMeasureMetrics as explained above in the etsysSrvcLvlMetricIndex definition. Example: A measure asking for One-way-Delay(6) and One-way-Packet-Loss(12) generated a flow of singletons which are logged in the etsysSrvcLvlHistoryTable. The singletons created for the One-way-Delay measure have a value of etsysSrvcLvlMetricIndex of 6 while the created singletons for the One-way-Packet-Loss measure have a value of etsysSrvcLvlMetricIndex of 12. One measure may perform simultaneously either several network metrics either several aggregated metrics')
etsysSrvcLvlNetMeasureBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 5), GMTTimeStamp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureBeginTime.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureBeginTime.setDescription('Specifies the time at which the measurement begins.')
etsysSrvcLvlNetMeasureDurationUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 6), TimeUnit().clone('second')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDurationUnit.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDurationUnit.setDescription('Specifies the measurement duration unit.')
etsysSrvcLvlNetMeasureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDuration.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDuration.setDescription('Specifies the measurement duration.')
etsysSrvcLvlNetMeasureHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureHistorySize.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureHistorySize.setDescription('Specifies the maximum number of results saved for each metric of this measure. Overflow condition will be managed by the object etsysSrvcLvlNetMeasureResultsMgmt.')
etsysSrvcLvlNetMeasureFailureMgmtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2), ("discarded", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureFailureMgmtMode.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureFailureMgmtMode.setDescription("This object defines whether this row is discarded on failure. 'auto' the failure is handled automatically depending on the implementation. 'manual' the entry should be discarded manually. 'discarded' the entry is discarded all the time.")
etsysSrvcLvlNetMeasureResultsMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wrap", 1), ("suspend", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureResultsMgmt.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureResultsMgmt.setDescription(" Action to take when the log is full. The user may choose to either wrap, in which case the agent writes over existing records. The user may choose to suspend writing to the log in the event that he wishes to archive the data. The delete action causes the agent to begin to write in the log, and assumes the data has been cleared. This object indicates the way the measurement results are managed when the owner quota has been exceeded: 'wrap' continue the measurement and erase the older entries in the history. 'suspend' stop the measure and keep the results in the history. 'delete' remove the results from the history.")
etsysSrvcLvlNetMeasureSrcTypeP = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 11), TypeP().clone('ip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSrcTypeP.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSrcTypeP.setDescription('Defines the type P of the source address of the packets sent by the measure.')
etsysSrvcLvlNetMeasureSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 12), TypePaddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSrc.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSrc.setDescription('Specifies the address of the source of the measure. It is represented as a list of parameters corresponding to those of the PROTOCOL IDENTIFIER sets in etsysSrvcLvlNetMeasureSrcTypeP.')
etsysSrvcLvlNetMeasureDstTypeP = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 13), TypeP().clone('ip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDstTypeP.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDstTypeP.setDescription('Defines the type P of the destination address of the packets sent by the measure.')
etsysSrvcLvlNetMeasureDst = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 14), TypePaddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDst.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDst.setDescription('Specifies the address of the destination of the measure. It is represented as a list of parameters corresponding to those of the PROTOCOL IDENTIFIER set in etsysSrvcLvlNetMeasureDstTypeP.')
etsysSrvcLvlNetMeasureTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("other", 0), ("periodic", 1), ("poisson", 2), ("multiburst", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxMode.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxMode.setDescription("The transmit mode used to send the packets: 'other' The rule used to send the packets is unknown. 'periodic' Packets are sent periodically at etsysSrvcLvlNetMeasureTxPacketRate rate. 'poisson' Packets are sent using a Poisson law, the median is the value of etsysSrvcLvlNetMeasureMedOrIntBurstSize, the deviation is etsysSrvcLvlNetMeasureDevtnOrBurstSize. 'multiburst' Packets are sent bursty at etsysSrvcLvlNetMeasureTxPacketRate. The size of the burst is made of etsysSrvcLvlNetMeasureDevtnOrBurstSize packets.")
etsysSrvcLvlNetMeasureTxPacketRateUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 16), TimeUnit()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxPacketRateUnit.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxPacketRateUnit.setDescription('The packet rate unit used to send the packets.')
etsysSrvcLvlNetMeasureTxPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxPacketRate.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureTxPacketRate.setDescription('The rate the packets are sent.')
etsysSrvcLvlNetMeasureDevtnOrBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDevtnOrBurstSize.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDevtnOrBurstSize.setDescription('Indicates the average number of packets per seconds sent using a poisson law.')
etsysSrvcLvlNetMeasureMedOrIntBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMedOrIntBurstSize.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMedOrIntBurstSize.setDescription('According to the transmit mode, this value indicates the average number of packets per seconds sent using a poisson law, or the number of packets to wait between consecutive bursts.')
etsysSrvcLvlNetMeasureLossTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 20), Integer32()).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureLossTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureLossTimeout.setDescription('Specifies the delay after which the packet is considered lost by the sink.')
etsysSrvcLvlNetMeasureL3PacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureL3PacketSize.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureL3PacketSize.setDescription("Specifies the size of the packets counted at the IP network layer in regards to the TypeP definition. Example: For a TypeP 'ip ipip4' the L3 size will be the size of the packet at ipip4 level.")
etsysSrvcLvlNetMeasureDataPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDataPattern.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureDataPattern.setDescription('The pattern used to fill the payload of the packet.')
etsysSrvcLvlNetMeasureMap = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 23), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMap.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureMap.setDescription('An administrative name of a network management map to which the measure belongs.')
etsysSrvcLvlNetMeasureSingletons = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSingletons.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureSingletons.setDescription('Reports the number of singletons performed per metric by the measure since the beginning of the measure. This parameters is required for aggregation.')
etsysSrvcLvlNetMeasureOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("running", 1), ("stopped", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureOperState.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlNetMeasureOperState.setDescription('Reports the operational status of the network measure.')
etsysSrvcLvlAggrMeasureTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2), )
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureTable.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureTable.setDescription(' An aggregated measure summarizes the results of previous network or aggregated measures. The results may be saved in the etsysSrvcLvlHistoryTable. Each step of the calculation for the measure produces a singleton result per metric.')
etsysSrvcLvlAggrMeasureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1), ).setIndexNames((0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureOwner"), (0, "ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureIndex"))
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureEntry.setDescription('Typically the configuration operation sets the value of the EtsysSrvcLvlAggrMeasureEntry. etsysSrvcLvlAggrMeasureTable is mandatory. The etsysSrvcLvlAggrMeasureMetrics defines the metric to compute. The results of the measure to summarize are identified by: + etsysSrvcLvlAggrMeasureHistoryOwner, + etsysSrvcLvlAggrMeasureHistoryOwnerIndex and + etsysSrvcLvlAggrMeasureHistoryMetric The aggregated task starts at etsysSrvcLvlAggrMeasureBeginTime and ends after etsysSrvcLvlAggrMeasureDuration. An aggregated result is performed and saved in the etsysSrvcLvlHistoryTable for each etsysSrvcLvlAggrMeasureAggrPeriod.')
etsysSrvcLvlAggrMeasureOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 1), EtsysSrvcLvlOwnerString())
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureOwner.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureOwner.setDescription('The owner who has configured this entry.')
etsysSrvcLvlAggrMeasureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureIndex.setDescription("The index (in owner's namespace) of the measure. The value is managed by the owner.")
etsysSrvcLvlAggrMeasureName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureName.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureName.setDescription('The name of the instance of the metric. It illustrates the specificity of the metric and includes the metric and the typeP. example: IP-port-HTTP-connectivity')
etsysSrvcLvlAggrMeasureMetrics = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 4), EtsysSrvcLvlStandardMetrics()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureMetrics.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureMetrics.setDescription('Defines the metrics to compute within this aggregated measure. ONLY aggregated metrics of the same type are allowed in this field. A measure may be configured for the result of different metric singletons to be archived in the etsysSrvcLvlHistoryTable. The etsysSrvcLvlMetricIndex of the created result has the value of the bit index of the corresponding etsysSrvcLvlAggrMeasureMetrics as explained above in the etsysSrvcLvlMetricIndex definition. Example: A measure asking for One-way-Delay(6) and One-way-Packet-Loss(12) generated a flow of singletons which are logged in the etsysSrvcLvlHistoryTable. The singletons created for the One-way-Delay measure have a value of etsysSrvcLvlMetricIndex of 6 while the created singletons for the One-way-Packet-Loss measure have a value of etsysSrvcLvlMetricIndex of 12.')
etsysSrvcLvlAggrMeasureBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 5), GMTTimeStamp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureBeginTime.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureBeginTime.setDescription('Specifies the time at which the aggregated measure starts.')
etsysSrvcLvlAggrMeasureAggrPeriodUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 6), TimeUnit().clone('second')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAggrPeriodUnit.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAggrPeriodUnit.setDescription('Specifies the unit of the aggregated measure period.')
etsysSrvcLvlAggrMeasureAggrPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAggrPeriod.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAggrPeriod.setDescription('Specifies the amount of time between 2 measurement action intervals. The action is specific to the semantic of the measure. They are performed periodically on a sequence of results of other measures. The period corresponds to the interval between two successive computations of the metric. The value of etsysSrvcLvlHistoryTimestamp result of a aggregated metric computed corresponds to the value of the etsysSrvcLvlHistoryTimestamp of the last metric result of the sequence used in to compute the aggregated metric.')
etsysSrvcLvlAggrMeasureDurationUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 8), TimeUnit().clone('second')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureDurationUnit.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureDurationUnit.setDescription('Specifies the unit of the measure duration.')
etsysSrvcLvlAggrMeasureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureDuration.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureDuration.setDescription('Specifies the duration of the measure.')
etsysSrvcLvlAggrMeasureHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistorySize.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistorySize.setDescription('Specifies the maximum number of results saved for each metric of this measure. Overflow condition will be managed by the object etsysSrvcLvlAggrMeasureResultsMgmt. ')
etsysSrvcLvlAggrMeasureStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 11), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureStorageType.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureStorageType.setDescription('This object defines whether this row and the corresponding entry in the etsysSrvcLvlNetMeasureTable is kept in volatile storage and lost upon reboot or if this row is backed up by non-volatile or permanent storage. Possible values are: other(1), volatile(2), nonVolatile(3), permanent(4), readOnly(5).')
etsysSrvcLvlAggrMeasureResultsMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wrap", 1), ("suspend", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureResultsMgmt.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureResultsMgmt.setDescription("This object displays the way the history of the aggregated measure is managed. 'wrap' continue the measure and erase the older entries in the history. 'suspend' stop the measure and keep the results in the history. ")
etsysSrvcLvlAggrMeasureHistoryOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 13), EtsysSrvcLvlOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryOwner.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryOwner.setDescription('The owner of the measure to summarize. ')
etsysSrvcLvlAggrMeasureHistoryOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryOwnerIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryOwnerIndex.setDescription("The index (in owner's namespace) of the measure to summarize. ")
etsysSrvcLvlAggrMeasureHistoryMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryMetric.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureHistoryMetric.setDescription('The metric of the measure to summarize. ')
etsysSrvcLvlAggrMeasureAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("start", 0), ("stop", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAdminState.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureAdminState.setDescription("This object controls the activity of the aggregated measure. 'start' The aggregated measure is started. 'stop' The aggregated measure is stopped. ")
etsysSrvcLvlAggrMeasureMap = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 17), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureMap.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureMap.setDescription('This object allows for classification of the measure. It is typically the name of an administrative map. ')
etsysSrvcLvlAggrMeasureStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 1, 4, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlAggrMeasureStatus.setDescription('The status of this table entry. Once the entry status is set to active, the associate entry cannot be modified. The creation of an aggregated measure forced the creation of the corresponding entry in etsysSrvcLvlNetMeasureTable.')
etsysSrvcLvlReportingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2))
etsysSrvcLvlReportingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 1))
etsysSrvcLvlReportingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 2))
etsysSrvcLvlSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 1, 1)).setObjects(("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlSystemTime"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlSystemClockResolution"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMetricCapabilities"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMetricType"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMetricUnit"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMetricDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSrvcLvlSystemGroup = etsysSrvcLvlSystemGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlSystemGroup.setDescription('The System Group.')
etsysSrvcLvlOwnersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 1, 2)).setObjects(("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersOwner"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersGrantedMetrics"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersQuota"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersIpAddressType"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersIpAddress"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersEmail"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersSMS"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSrvcLvlOwnersGroup = etsysSrvcLvlOwnersGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlOwnersGroup.setDescription('The Owners Group.')
etsysSrvcLvlHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 1, 3)).setObjects(("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistorySequence"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryTimestamp"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSrvcLvlHistoryGroup = etsysSrvcLvlHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlHistoryGroup.setDescription('The History Group.')
etsysSrvcLvlMeasureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 1, 4)).setObjects(("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureName"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureMetrics"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureBeginTime"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDurationUnit"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDuration"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureHistorySize"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureFailureMgmtMode"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureResultsMgmt"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureSrcTypeP"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureSrc"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDstTypeP"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDst"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureTxMode"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureTxPacketRateUnit"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureTxPacketRate"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDevtnOrBurstSize"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureMedOrIntBurstSize"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureLossTimeout"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureL3PacketSize"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureDataPattern"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureMap"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureSingletons"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlNetMeasureOperState"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureName"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureMetrics"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureBeginTime"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureAggrPeriodUnit"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureAggrPeriod"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureDurationUnit"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureDuration"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureHistorySize"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureStorageType"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureResultsMgmt"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureHistoryOwner"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureHistoryOwnerIndex"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureHistoryMetric"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureAdminState"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureMap"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlAggrMeasureStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSrvcLvlMeasureGroup = etsysSrvcLvlMeasureGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlMeasureGroup.setDescription('The Network and Aggregate Measures Group.')
etsysSrvcLvlReportingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 39, 2, 2, 1)).setObjects(("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlSystemGroup"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlOwnersGroup"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlHistoryGroup"), ("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", "etsysSrvcLvlMeasureGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSrvcLvlReportingCompliance = etsysSrvcLvlReportingCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysSrvcLvlReportingCompliance.setDescription('The compliance statement for devices that support the etsysSrvcLvlReportingMib.')
mibBuilder.exportSymbols("ENTERASYS-SERVICE-LEVEL-REPORTING-MIB", etsysSrvcLvlSystemTime=etsysSrvcLvlSystemTime, etsysSrvcLvlHistory=etsysSrvcLvlHistory, etsysSrvcLvlAggrMeasureDurationUnit=etsysSrvcLvlAggrMeasureDurationUnit, etsysSrvcLvlHistorySequence=etsysSrvcLvlHistorySequence, etsysSrvcLvlNetMeasureSrc=etsysSrvcLvlNetMeasureSrc, etsysSrvcLvlAggrMeasureAggrPeriod=etsysSrvcLvlAggrMeasureAggrPeriod, etsysSrvcLvlNetMeasureHistorySize=etsysSrvcLvlNetMeasureHistorySize, etsysSrvcLvlNetMeasureDstTypeP=etsysSrvcLvlNetMeasureDstTypeP, etsysSrvcLvlNetMeasureBeginTime=etsysSrvcLvlNetMeasureBeginTime, etsysSrvcLvlAggrMeasureOwner=etsysSrvcLvlAggrMeasureOwner, etsysSrvcLvlNetMeasureResultsMgmt=etsysSrvcLvlNetMeasureResultsMgmt, etsysSrvcLvlHistoryTimestamp=etsysSrvcLvlHistoryTimestamp, etsysSrvcLvlOwnersEmail=etsysSrvcLvlOwnersEmail, etsysSrvcLvlNetMeasureName=etsysSrvcLvlNetMeasureName, etsysSrvcLvlMetricCapabilities=etsysSrvcLvlMetricCapabilities, etsysSrvcLvlOwnersIpAddress=etsysSrvcLvlOwnersIpAddress, etsysSrvcLvlAggrMeasureResultsMgmt=etsysSrvcLvlAggrMeasureResultsMgmt, etsysSrvcLvlNetMeasureEntry=etsysSrvcLvlNetMeasureEntry, GMTTimeStamp=GMTTimeStamp, etsysSrvcLvlNetMeasureOperState=etsysSrvcLvlNetMeasureOperState, etsysSrvcLvlOwnersEntry=etsysSrvcLvlOwnersEntry, TypeP=TypeP, TypePaddress=TypePaddress, etsysSrvcLvlHistoryIndex=etsysSrvcLvlHistoryIndex, etsysSrvcLvlOwnersIndex=etsysSrvcLvlOwnersIndex, etsysSrvcLvlHistoryValue=etsysSrvcLvlHistoryValue, etsysSrvcLvlNetMeasureOwner=etsysSrvcLvlNetMeasureOwner, etsysSrvcLvlNetMeasureFailureMgmtMode=etsysSrvcLvlNetMeasureFailureMgmtMode, etsysSrvcLvlNetMeasureSrcTypeP=etsysSrvcLvlNetMeasureSrcTypeP, etsysSrvcLvlReportingConformance=etsysSrvcLvlReportingConformance, etsysSrvcLvlHistoryGroup=etsysSrvcLvlHistoryGroup, etsysSrvcLvlNetMeasureSingletons=etsysSrvcLvlNetMeasureSingletons, etsysSrvcLvlNetMeasureDst=etsysSrvcLvlNetMeasureDst, etsysSrvcLvlOwnersTable=etsysSrvcLvlOwnersTable, etsysSrvcLvlAggrMeasureHistoryOwnerIndex=etsysSrvcLvlAggrMeasureHistoryOwnerIndex, etsysSrvcLvlNetMeasureMap=etsysSrvcLvlNetMeasureMap, etsysSrvcLvlHistoryTable=etsysSrvcLvlHistoryTable, etsysSrvcLvlReportingCompliances=etsysSrvcLvlReportingCompliances, etsysSrvcLvlMetricEntry=etsysSrvcLvlMetricEntry, etsysSrvcLvlNetMeasureTxMode=etsysSrvcLvlNetMeasureTxMode, etsysSrvcLvlMeasure=etsysSrvcLvlMeasure, etsysSrvcLvlNetMeasureTxPacketRateUnit=etsysSrvcLvlNetMeasureTxPacketRateUnit, etsysSrvcLvlNetMeasureL3PacketSize=etsysSrvcLvlNetMeasureL3PacketSize, EtsysSrvcLvlStandardMetrics=EtsysSrvcLvlStandardMetrics, etsysSrvcLvlAggrMeasureDuration=etsysSrvcLvlAggrMeasureDuration, etsysSrvcLvlNetMeasureTable=etsysSrvcLvlNetMeasureTable, EtsysSrvcLvlOwnerString=EtsysSrvcLvlOwnerString, etsysSrvcLvlAggrMeasureHistoryMetric=etsysSrvcLvlAggrMeasureHistoryMetric, etsysSrvcLvlMeasureGroup=etsysSrvcLvlMeasureGroup, etsysSrvcLvlMetricType=etsysSrvcLvlMetricType, etsysSrvcLvlHistoryMetricIndex=etsysSrvcLvlHistoryMetricIndex, etsysSrvcLvlNetMeasureMetrics=etsysSrvcLvlNetMeasureMetrics, etsysSrvcLvlNetMeasureLossTimeout=etsysSrvcLvlNetMeasureLossTimeout, etsysSrvcLvlMetricDescription=etsysSrvcLvlMetricDescription, etsysSrvcLvlAggrMeasureStorageType=etsysSrvcLvlAggrMeasureStorageType, etsysSrvcLvlAggrMeasureStatus=etsysSrvcLvlAggrMeasureStatus, etsysSrvcLvlMetricIndex=etsysSrvcLvlMetricIndex, etsysSrvcLvlOwnersQuota=etsysSrvcLvlOwnersQuota, etsysSrvcLvlAggrMeasureMap=etsysSrvcLvlAggrMeasureMap, etsysSrvcLvlAggrMeasureName=etsysSrvcLvlAggrMeasureName, etsysSrvcLvlNetMeasureDevtnOrBurstSize=etsysSrvcLvlNetMeasureDevtnOrBurstSize, etsysSrvcLvlSystemGroup=etsysSrvcLvlSystemGroup, etsysSrvcLvlHistoryMeasureIndex=etsysSrvcLvlHistoryMeasureIndex, etsysSrvcLvlHistoryEntry=etsysSrvcLvlHistoryEntry, TimeUnit=TimeUnit, etsysSrvcLvlAggrMeasureHistoryOwner=etsysSrvcLvlAggrMeasureHistoryOwner, etsysServiceLevelReportingMIB=etsysServiceLevelReportingMIB, etsysSrvcLvlNetMeasureDataPattern=etsysSrvcLvlNetMeasureDataPattern, etsysSrvcLvlHistoryMeasureOwner=etsysSrvcLvlHistoryMeasureOwner, etsysSrvcLvlNetMeasureDuration=etsysSrvcLvlNetMeasureDuration, etsysSrvcLvlOwners=etsysSrvcLvlOwners, etsysSrvcLvlNetMeasureTxPacketRate=etsysSrvcLvlNetMeasureTxPacketRate, etsysSrvcLvlAggrMeasureAggrPeriodUnit=etsysSrvcLvlAggrMeasureAggrPeriodUnit, etsysSrvcLvlOwnersSMS=etsysSrvcLvlOwnersSMS, etsysSrvcLvlAggrMeasureAdminState=etsysSrvcLvlAggrMeasureAdminState, etsysSrvcLvlAggrMeasureTable=etsysSrvcLvlAggrMeasureTable, etsysSrvcLvlAggrMeasureIndex=etsysSrvcLvlAggrMeasureIndex, etsysSrvcLvlNetMeasureMedOrIntBurstSize=etsysSrvcLvlNetMeasureMedOrIntBurstSize, etsysSrvcLvlOwnersStatus=etsysSrvcLvlOwnersStatus, etsysSrvcLvlConfigObjects=etsysSrvcLvlConfigObjects, etsysSrvcLvlMetricTable=etsysSrvcLvlMetricTable, etsysSrvcLvlAggrMeasureHistorySize=etsysSrvcLvlAggrMeasureHistorySize, etsysSrvcLvlMetricUnit=etsysSrvcLvlMetricUnit, etsysSrvcLvlOwnersGrantedMetrics=etsysSrvcLvlOwnersGrantedMetrics, etsysSrvcLvlAggrMeasureEntry=etsysSrvcLvlAggrMeasureEntry, etsysSrvcLvlReportingCompliance=etsysSrvcLvlReportingCompliance, etsysSrvcLvlSystem=etsysSrvcLvlSystem, etsysSrvcLvlOwnersIpAddressType=etsysSrvcLvlOwnersIpAddressType, etsysSrvcLvlOwnersGroup=etsysSrvcLvlOwnersGroup, etsysSrvcLvlNetMeasureIndex=etsysSrvcLvlNetMeasureIndex, etsysSrvcLvlNetMeasureDurationUnit=etsysSrvcLvlNetMeasureDurationUnit, etsysSrvcLvlAggrMeasureMetrics=etsysSrvcLvlAggrMeasureMetrics, etsysSrvcLvlReportingGroups=etsysSrvcLvlReportingGroups, etsysSrvcLvlOwnersOwner=etsysSrvcLvlOwnersOwner, etsysSrvcLvlAggrMeasureBeginTime=etsysSrvcLvlAggrMeasureBeginTime, PYSNMP_MODULE_ID=etsysServiceLevelReportingMIB, etsysSrvcLvlSystemClockResolution=etsysSrvcLvlSystemClockResolution)
