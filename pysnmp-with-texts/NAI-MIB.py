#
# PySNMP MIB module NAI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NAI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, iso, MibIdentifier, NotificationType, Gauge32, ObjectIdentity, TimeTicks, NotificationType, Bits, Unsigned32, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "MibIdentifier", "NotificationType", "Gauge32", "ObjectIdentity", "TimeTicks", "NotificationType", "Bits", "Unsigned32", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Integer32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nai = MibIdentifier((1, 3, 6, 1, 4, 1, 3401))
naiStandardTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 3401, 1))
naiTrapAgent = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapAgent.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapAgent.setDescription('The name of the agent that generated the trap.')
naiTrapAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapAgentVersion.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapAgentVersion.setDescription('The version of the agent that generated the trap.')
naiTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inform", 1), ("warning", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapSeverity.setDescription('Additional information delivered with alarm messages and indicated the critical, Major, Minor, Warning and informational. Advanced management applications can make use of this information to better evaluate the severity of the situation. This variable is only intended for use with traps; no meaning should be assumed by a Manager to the value retrieved through a Get operation on this object.')
naiTrapDescription = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapDescription.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapDescription.setDescription('The alarm description.')
naiTrapAlarmSourceAddress = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapAlarmSourceAddress.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapAlarmSourceAddress.setDescription('This information identifies the piece of equipment which is casuing the alarm. If the information is not available, then this field can be left blank.')
naiTrapAlarmSourceDNSName = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapAlarmSourceDNSName.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapAlarmSourceDNSName.setDescription('The fully qualified DNS name of the piece of equipment which is casuing the alarm.This can contain the name of the machine that sent the trap, if DNS name is not available.')
naiTrapGMTTime = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapGMTTime.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapGMTTime.setDescription('The time that the condition or event occurred which caused generation of this alarm. This value is given in seconds since 00:00:00 Greenwich mean time (GMT) January 1, 1970.')
naiTrapLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapLocalTime.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapLocalTime.setDescription('The time that the condition or event occurred which caused generation of this alarm. This value is given in seconds since 00:00:00 Local time January 1, 1970.')
naiTrapURL = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapURL.setStatus('mandatory')
if mibBuilder.loadTexts: naiTrapURL.setDescription('A fully qualified URL link to an HTML page/FTP file for more information about the alarm.')
naiTrapPseudoID = MibScalar((1, 3, 6, 1, 4, 1, 3401, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: naiTrapPseudoID.setStatus('optional')
if mibBuilder.loadTexts: naiTrapPseudoID.setDescription('This information identifies the pseudo-Id of the trap being sent. If the information is not available, then this field can be left blank.')
mibBuilder.exportSymbols("NAI-MIB", naiTrapAgentVersion=naiTrapAgentVersion, nai=nai, naiTrapAgent=naiTrapAgent, naiTrapLocalTime=naiTrapLocalTime, naiTrapURL=naiTrapURL, naiTrapGMTTime=naiTrapGMTTime, naiTrapPseudoID=naiTrapPseudoID, naiTrapAlarmSourceAddress=naiTrapAlarmSourceAddress, naiTrapAlarmSourceDNSName=naiTrapAlarmSourceDNSName, naiTrapDescription=naiTrapDescription, naiStandardTrap=naiStandardTrap, naiTrapSeverity=naiTrapSeverity)
