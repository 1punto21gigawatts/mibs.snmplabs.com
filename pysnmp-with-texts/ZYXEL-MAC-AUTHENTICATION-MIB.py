#
# PySNMP MIB module ZYXEL-MAC-AUTHENTICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-MAC-AUTHENTICATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, Gauge32, Counter32, Integer32, ModuleIdentity, iso, Unsigned32, MibIdentifier, IpAddress, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "Gauge32", "Counter32", "Integer32", "ModuleIdentity", "iso", "Unsigned32", "MibIdentifier", "IpAddress", "Bits", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelMacAuthentication = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46))
if mibBuilder.loadTexts: zyxelMacAuthentication.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelMacAuthentication.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelMacAuthentication.setContactInfo('')
if mibBuilder.loadTexts: zyxelMacAuthentication.setDescription('The subtree for mac authentication')
zyxelMacAuthenticationSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1))
zyMacAuthenticationState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationState.setStatus('current')
if mibBuilder.loadTexts: zyMacAuthenticationState.setDescription('Enable/disable MAC authentication on the switch. MAC authentication works in a very similar way to IEEE 802.1x authentication. ')
zyMacAuthenticationNamePrefix = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationNamePrefix.setStatus('current')
if mibBuilder.loadTexts: zyMacAuthenticationNamePrefix.setDescription('Type the prefix that is appended to all MAC addresses sent to the RADIUS server for authentication.')
zyMacAuthenticationPassword = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationPassword.setStatus('current')
if mibBuilder.loadTexts: zyMacAuthenticationPassword.setDescription('Type the password the switch sends along with the MAC address of a client for authentication with the RADIUS server.')
zyMacAuthenticationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationTimeout.setStatus('current')
if mibBuilder.loadTexts: zyMacAuthenticationTimeout.setDescription('Specify the amount of time before the switch allows a client MAC address that fails authentication to try and authenticate again. Maximum time is 3000 seconds.')
zyxelMacAuthenticationPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5), )
if mibBuilder.loadTexts: zyxelMacAuthenticationPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelMacAuthenticationPortTable.setDescription('The table contains MAC authentication port configuration.')
zyxelMacAuthenticationPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMacAuthenticationPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelMacAuthenticationPortEntry.setDescription('An entry contains MAC authentication port configuration.')
zyMacAuthenticationPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationPortState.setStatus('current')
if mibBuilder.loadTexts: zyMacAuthenticationPortState.setDescription('Enable/disable MAC authentication on the port.')
mibBuilder.exportSymbols("ZYXEL-MAC-AUTHENTICATION-MIB", zyMacAuthenticationNamePrefix=zyMacAuthenticationNamePrefix, zyMacAuthenticationPortState=zyMacAuthenticationPortState, zyMacAuthenticationState=zyMacAuthenticationState, zyxelMacAuthentication=zyxelMacAuthentication, zyMacAuthenticationPassword=zyMacAuthenticationPassword, zyxelMacAuthenticationPortTable=zyxelMacAuthenticationPortTable, zyMacAuthenticationTimeout=zyMacAuthenticationTimeout, PYSNMP_MODULE_ID=zyxelMacAuthentication, zyxelMacAuthenticationSetup=zyxelMacAuthenticationSetup, zyxelMacAuthenticationPortEntry=zyxelMacAuthenticationPortEntry)
