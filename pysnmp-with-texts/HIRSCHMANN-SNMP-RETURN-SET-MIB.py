#
# PySNMP MIB module HIRSCHMANN-SNMP-RETURN-SET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HIRSCHMANN-SNMP-RETURN-SET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:31:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, enterprises, IpAddress, Bits, Integer32, Counter32, ObjectIdentity, iso, Counter64, TimeTicks, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "enterprises", "IpAddress", "Bits", "Integer32", "Counter32", "ObjectIdentity", "iso", "Counter64", "TimeTicks", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32")
TestAndIncr, TextualConvention, AutonomousType, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TestAndIncr", "TextualConvention", "AutonomousType", "DisplayString")
hmMgmtSEReturnSetGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1))
hmMgmtSEReturnSetGroup.setRevisions(('2010-09-14 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hmMgmtSEReturnSetGroup.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: hmMgmtSEReturnSetGroup.setLastUpdated('201009141200Z')
if mibBuilder.loadTexts: hmMgmtSEReturnSetGroup.setOrganization('Hirschmann Automation and Control GmbH')
if mibBuilder.loadTexts: hmMgmtSEReturnSetGroup.setContactInfo('Postal: Stuttgarter Str. 45-51 72654 Neckartenzlingen Germany Phone: +49 7127 140 E-mail: hac.support@belden.com')
if mibBuilder.loadTexts: hmMgmtSEReturnSetGroup.setDescription('The Hirschmann Private SNMP extension MIB. Copyright (C) 2010. All Rights Reserved.')
hirschmann = MibIdentifier((1, 3, 6, 1, 4, 1, 248))
hmMgmtSNMPExtensionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 16, 1))
hmMgmtSESReturns = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 1))
if mibBuilder.loadTexts: hmMgmtSESReturns.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESReturns.setDescription('Group')
hmMgmtSESOkReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 1, 1))
if mibBuilder.loadTexts: hmMgmtSESOkReturn.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESOkReturn.setDescription('Indicates no error.')
hmMgmtSESPendingReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 1, 2))
if mibBuilder.loadTexts: hmMgmtSESPendingReturn.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESPendingReturn.setDescription('Indicates that the Operation is still pending.')
hmMgmtSESFailureReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 1, 3))
if mibBuilder.loadTexts: hmMgmtSESFailureReturn.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESFailureReturn.setDescription('Indicates a generic error.')
hmMgmtSESTestReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 1, 100))
if mibBuilder.loadTexts: hmMgmtSESTestReturn.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESTestReturn.setDescription('Indicates an error on a write to the attribute hmMgmtSETestVar. Two parameters are expected. The fist parameter is the length of the value, the second parameter is the value itself. The parameter length is {0}. The parameter is {1}.')
hmMgmtSESpinLock = MibScalar((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmMgmtSESpinLock.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSESpinLock.setDescription('An advisory lock which is used as an generator to get a unique Identifier for a SET-PDU. This allows the Agent to write additional Information of the Status of the SET-PDU.')
hmMgmtSEReturnTable = MibTable((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 3), )
if mibBuilder.loadTexts: hmMgmtSEReturnTable.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEReturnTable.setDescription('The table of additional Information (enterprise specific Errors or pending) of a SET-PDU.')
hmMgmtSEReturnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 3, 1), ).setIndexNames((0, "HIRSCHMANN-SNMP-RETURN-SET-MIB", "hmMgmtSeReturnKey"))
if mibBuilder.loadTexts: hmMgmtSEReturnEntry.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEReturnEntry.setDescription('An entry in the HmMgmtSEReturnTable.')
hmMgmtSeReturnKey = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hmMgmtSeReturnKey.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSeReturnKey.setDescription('Contains the Value of hmMgmtSESpinLock of the corresponding SET-PDU which are responsible for this table entry.')
hmMgmtSeReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 3, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmMgmtSeReturnCode.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSeReturnCode.setDescription('Contains an additional Information to the SET-PDU. Can contain the ObjectIdentity under hmMgmtSESReturns or any other ObjectIdentity in enterprise specific MIBs.')
hmMgmtSEParameterTable = MibTable((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 4), )
if mibBuilder.loadTexts: hmMgmtSEParameterTable.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEParameterTable.setDescription('The table of additional Parameter the HmMgmtSEReturnTable for the specific message.')
hmMgmtSEParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 4, 1), ).setIndexNames((0, "HIRSCHMANN-SNMP-RETURN-SET-MIB", "hmMgmtSeReturnKey"), (0, "HIRSCHMANN-SNMP-RETURN-SET-MIB", "hmMgmtSEParameterID"))
if mibBuilder.loadTexts: hmMgmtSEParameterEntry.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEParameterEntry.setDescription('A Entry in the hmMgmtSEParameterTable.')
hmMgmtSEParameterID = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hmMgmtSEParameterID.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEParameterID.setDescription('A unique identifier (with hmMgmtSeReturnKey) for this entry.')
hmMgmtSEParameterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hmMgmtSEParameterValue.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSEParameterValue.setDescription('The Information for the Wildcard for the corresponding message. Link between these two tables is hmMgmtSeReturnKey. The hmMgmtSEParameterID denotes the wildcard position.')
hmMgmtSETestGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 100))
hmMgmtSETestVar = MibScalar((1, 3, 6, 1, 4, 1, 248, 16, 1, 1, 100, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hmMgmtSETestVar.setStatus('current')
if mibBuilder.loadTexts: hmMgmtSETestVar.setDescription('Test variable to check the functionality of extended error handling. Setting a value to this attribute MUST return hmMgmtSESTestReturn with specific parameter.')
mibBuilder.exportSymbols("HIRSCHMANN-SNMP-RETURN-SET-MIB", hmMgmtSNMPExtensionGroup=hmMgmtSNMPExtensionGroup, hmMgmtSESFailureReturn=hmMgmtSESFailureReturn, hmMgmtSEParameterValue=hmMgmtSEParameterValue, hmMgmtSESpinLock=hmMgmtSESpinLock, hmMgmtSEReturnSetGroup=hmMgmtSEReturnSetGroup, hirschmann=hirschmann, hmMgmtSeReturnCode=hmMgmtSeReturnCode, hmMgmtSESOkReturn=hmMgmtSESOkReturn, hmMgmtSEReturnEntry=hmMgmtSEReturnEntry, hmMgmtSeReturnKey=hmMgmtSeReturnKey, hmMgmtSEParameterID=hmMgmtSEParameterID, hmMgmtSESReturns=hmMgmtSESReturns, hmMgmtSEParameterEntry=hmMgmtSEParameterEntry, hmMgmtSEReturnTable=hmMgmtSEReturnTable, hmMgmtSESPendingReturn=hmMgmtSESPendingReturn, hmMgmtSETestGroup=hmMgmtSETestGroup, PYSNMP_MODULE_ID=hmMgmtSEReturnSetGroup, hmMgmtSEParameterTable=hmMgmtSEParameterTable, hmMgmtSESTestReturn=hmMgmtSESTestReturn, hmMgmtSETestVar=hmMgmtSETestVar)
