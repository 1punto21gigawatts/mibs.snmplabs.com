#
# PySNMP MIB module MY-ADDRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-ADDRESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
ConfigStatus, IfIndex = mibBuilder.importSymbols("MY-TC", "ConfigStatus", "IfIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Unsigned32, IpAddress, Gauge32, Counter64, ObjectIdentity, TimeTicks, Counter32, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Unsigned32", "IpAddress", "Gauge32", "Counter64", "ObjectIdentity", "TimeTicks", "Counter32", "Bits", "iso")
TextualConvention, RowStatus, TimeStamp, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TimeStamp", "TruthValue", "MacAddress", "DisplayString")
myAddressMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22))
myAddressMIB.setRevisions(('2002-03-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: myAddressMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: myAddressMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myAddressMIB.setOrganization('D-Link Crop.')
if mibBuilder.loadTexts: myAddressMIB.setContactInfo(' http://support.dlink.com')
if mibBuilder.loadTexts: myAddressMIB.setDescription('This module defines my address mibs.')
myAddressMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1))
myAddressManagementObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1))
myAddressNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2))
myDynamicAddressCurrentNum = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDynamicAddressCurrentNum.setStatus('current')
if mibBuilder.loadTexts: myDynamicAddressCurrentNum.setDescription('The currunt number of dynamic MAC address .')
myStaticAddressCurrentNum = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myStaticAddressCurrentNum.setStatus('current')
if mibBuilder.loadTexts: myStaticAddressCurrentNum.setDescription('The currunt number of static MAC address .')
myFilterAddressCurrentNum = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFilterAddressCurrentNum.setStatus('current')
if mibBuilder.loadTexts: myFilterAddressCurrentNum.setDescription('Current number of the filtering MAC address.')
myAddressAvailableNum = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAddressAvailableNum.setStatus('current')
if mibBuilder.loadTexts: myAddressAvailableNum.setDescription('Total Mac Address Space Available.')
myMacAddressTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5), )
if mibBuilder.loadTexts: myMacAddressTable.setStatus('current')
if mibBuilder.loadTexts: myMacAddressTable.setDescription('The table of address MAC address include dynamic mac address, static mac address and filter mac address.')
myMacAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1), ).setIndexNames((0, "MY-ADDRESS-MIB", "myMacAddressFdbId"), (0, "MY-ADDRESS-MIB", "myMacAddress"))
if mibBuilder.loadTexts: myMacAddressEntry.setStatus('current')
if mibBuilder.loadTexts: myMacAddressEntry.setDescription('The entry of MAC address table.')
myMacAddressFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacAddressFdbId.setStatus('current')
if mibBuilder.loadTexts: myMacAddressFdbId.setDescription('The VID of vlan which the Address address blongs to.')
myMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacAddress.setStatus('current')
if mibBuilder.loadTexts: myMacAddress.setDescription('The MAC address which will be address static address.')
myMacAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1, 3), IfIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myMacAddressPort.setStatus('current')
if mibBuilder.loadTexts: myMacAddressPort.setDescription("Interface(port or trunk) number of the port from which a frame must be received in order for this entry's filtering information to apply.")
myMacAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2), ("filter", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myMacAddressType.setStatus('current')
if mibBuilder.loadTexts: myMacAddressType.setDescription("Only 'static' and 'filter' allow to be set to this object.")
myMacAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myMacAddressStatus.setStatus('current')
if mibBuilder.loadTexts: myMacAddressStatus.setDescription('entry status of this entry. and the means in this enviraments can reffer to the text-convention definition of the RowStatus.')
myMacNotiGlobalEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myMacNotiGlobalEnabled.setStatus('current')
if mibBuilder.loadTexts: myMacNotiGlobalEnabled.setDescription('Indicates whether the MAC notification feature is currently running in the device. Setting this object to disabled(2) disables the MAC notification feature globally thus disabling the feature at each interface. Setting this object to enabled(1) will start the MAC notification feature running in the device. If the feature is already running, setting to enabled(1) has no effect. Once the MAC notification is enabled, whether the feature is running at each interface is controlled by the myMacNotiIfCfgTable.')
myMacNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myMacNotificationInterval.setStatus('current')
if mibBuilder.loadTexts: myMacNotificationInterval.setDescription('This object specifies the maximum interval of time in units of seconds between MacChangedNotifications being generated by the device. If the value of myMacNotiGlobalEnabled is eanbled(1), the device will send out the generated MacChangedNotifications and archive the MAC change notification events in the MyMacNotiHisTable. If the value of this object is equal to 0, the device will generate MacChangedNotifications and archive the MAC change notification events in the MyMacNotiHisTable as soon as there is MAC address learnt or removed by the device. If the value of this object is greater than 0, the device will wait for a period of time equal to the value of this object before generate the MacChangedNotifications and archive the MAC change notification events in the MyMacNotiHisTable.')
myMacNotiHisTableMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myMacNotiHisTableMaxLength.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisTableMaxLength.setDescription('The upper limit on the number of entries that the MyMacNotiHisTable may contain. A value of 0 will prevent any history from being retained. When this table is full, the oldest entry will be deleted and a new one will be created.')
myMacNotiHisTableCurrentLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacNotiHisTableCurrentLength.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisTableCurrentLength.setDescription('The number of entries that the MyMacNotiHisTable contain currently.')
myMacNotiHisTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 5), )
if mibBuilder.loadTexts: myMacNotiHisTable.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisTable.setDescription('This table will archive the dynamic MAC change notification events generated by this device.')
myMacNotiHisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 5, 1), ).setIndexNames((0, "MY-ADDRESS-MIB", "myMacNotiHisIndex"))
if mibBuilder.loadTexts: myMacNotiHisEntry.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisEntry.setDescription('A dynamic MAC change notification message that was previously generated by this device. Each entry is indexed by a message index.')
myMacNotiHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacNotiHisIndex.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisIndex.setDescription('An index that uniquely identifies a MAC change notification event previously generated by the device. This index mys at 1 and increases by one when a MAC change notification is generated. When it reaches the maximum value, the agent wraps the value back to 1.')
myMacNotiHisMacChangedMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacNotiHisMacChangedMsg.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisMacChangedMsg.setDescription("This object contains the information of a MAC change notification event. It consists of several sections packed together in the format of '<section1><section2>...'. Each tuple consist of 11 octets in the format of '<operation><VLAN><MAC><Interface>' where <operation> is of size 1 octet and supports the following values 0 - End of MIB object. 1 - MAC learnt. 2 - MAC removed. <VLAN> is vlan number of the VLAN which the MAC address is belonged to and has size of 2 octet. <MAC> is the Layer2 Mac Address and has size of 6 octets. <Interface> is the value for the interface from which the MAC address is learnt and has size of 2 octets.")
myMacNotiHisTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacNotiHisTimestamp.setStatus('current')
if mibBuilder.loadTexts: myMacNotiHisTimestamp.setDescription('The value of sysUpTime when the MacChangedNotification containing the information denoted by the myMacNotiHisMacChangedMsg object in this entry was generated.')
myMacNotiIfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 6), )
if mibBuilder.loadTexts: myMacNotiIfCfgTable.setStatus('current')
if mibBuilder.loadTexts: myMacNotiIfCfgTable.setDescription('This table enables or disables the generation of notification at each interface when MAC address is learnt or removed.')
myMacNotiIfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 6, 1), ).setIndexNames((0, "MY-ADDRESS-MIB", "myMacNotiIfIndex"))
if mibBuilder.loadTexts: myMacNotiIfCfgEntry.setStatus('current')
if mibBuilder.loadTexts: myMacNotiIfCfgEntry.setDescription('Each entry contains the configuration for enabling the MAC notification at each interface that supports this feature.')
myMacNotiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 6, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myMacNotiIfIndex.setStatus('current')
if mibBuilder.loadTexts: myMacNotiIfIndex.setDescription('IfIndex vale of interface.')
myIfMacAddrLearntEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 6, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfMacAddrLearntEnable.setStatus('current')
if mibBuilder.loadTexts: myIfMacAddrLearntEnable.setDescription('Indicates whether this interface is enabled to send MacChangedNotification when it learns a new MAC address. This variable has no effect when the value of myMacNotiGlobalEnabled object is disabled(2). Setting this object to enabled(1) enables the sending of MacChangedNotification when this interface learns a new MAC address. Setting this object to disabled(2) disables the sending of MacChangedNotification when this interface learns a new MAC address.')
myIfMacAddrRemovedEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 1, 2, 6, 1, 3), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfMacAddrRemovedEnable.setStatus('current')
if mibBuilder.loadTexts: myIfMacAddrRemovedEnable.setDescription('Indicates whether this interface is enabled to send MacChangedNotification when a MAC address which it learnt previously is removed from the forwarding table. This variable has no effect when the value of myMacNotiGlobalEnabled object is disabled(2). Setting this object to enabled(1) enables the sending of MacChangedNotification when a MAC address which this interface learnt previously is removed from the forwarding table. Setting this object to disabled(2) disables the sending of MacChangedNotification when a MAC address which this interface learnt previously is removed from the forwarding table.')
myAddressTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 2))
macChangedNotification = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 2, 1)).setObjects(("MY-ADDRESS-MIB", "myMacNotiHisMacChangedMsg"))
if mibBuilder.loadTexts: macChangedNotification.setStatus('current')
if mibBuilder.loadTexts: macChangedNotification.setDescription('This notification is generated when there is enough MAC address information to fully occupy a maximum size SNMP trap message. This notification is also generated when there is at least one MAC address changed or removed and the amount of time elapsed from the previous notification is greater than the maximum wait time denoted by myMacNotificationInterval object. If there are more MAC addresses information than can fit into one myMacNotiHisMacChangedMsg object, then multiple notifications will be generated.')
myAddressMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3))
myAddressMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3, 1))
myAddressMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3, 2))
myAddressMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3, 1, 1)).setObjects(("MY-ADDRESS-MIB", "myMacAddressMIBGroup"), ("MY-ADDRESS-MIB", "myAddressNotificationMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAddressMIBCompliance = myAddressMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: myAddressMIBCompliance.setDescription('The compliance statement for entities which implement the My MAC Address MIB')
myMacAddressMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3, 2, 1)).setObjects(("MY-ADDRESS-MIB", "myDynamicAddressCurrentNum"), ("MY-ADDRESS-MIB", "myStaticAddressCurrentNum"), ("MY-ADDRESS-MIB", "myFilterAddressCurrentNum"), ("MY-ADDRESS-MIB", "myAddressAvailableNum"), ("MY-ADDRESS-MIB", "myMacAddressFdbId"), ("MY-ADDRESS-MIB", "myMacAddress"), ("MY-ADDRESS-MIB", "myMacAddressPort"), ("MY-ADDRESS-MIB", "myMacAddressType"), ("MY-ADDRESS-MIB", "myMacAddressStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myMacAddressMIBGroup = myMacAddressMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myMacAddressMIBGroup.setDescription('A collection of objects providing address address to a My agent.')
myAddressNotificationMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 22, 3, 2, 2)).setObjects(("MY-ADDRESS-MIB", "myMacNotiGlobalEnabled"), ("MY-ADDRESS-MIB", "myMacNotificationInterval"), ("MY-ADDRESS-MIB", "myMacNotiHisTableMaxLength"), ("MY-ADDRESS-MIB", "myMacNotiHisTableCurrentLength"), ("MY-ADDRESS-MIB", "myMacNotiHisIndex"), ("MY-ADDRESS-MIB", "myMacNotiHisMacChangedMsg"), ("MY-ADDRESS-MIB", "myMacNotiHisTimestamp"), ("MY-ADDRESS-MIB", "myMacNotiIfIndex"), ("MY-ADDRESS-MIB", "myIfMacAddrLearntEnable"), ("MY-ADDRESS-MIB", "myIfMacAddrRemovedEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAddressNotificationMIBGroup = myAddressNotificationMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myAddressNotificationMIBGroup.setDescription('A collection of objects providing port address to a My agent.')
mibBuilder.exportSymbols("MY-ADDRESS-MIB", myMacNotiHisIndex=myMacNotiHisIndex, PYSNMP_MODULE_ID=myAddressMIB, myFilterAddressCurrentNum=myFilterAddressCurrentNum, myMacAddressStatus=myMacAddressStatus, myAddressMIBCompliances=myAddressMIBCompliances, myMacNotiGlobalEnabled=myMacNotiGlobalEnabled, myDynamicAddressCurrentNum=myDynamicAddressCurrentNum, myAddressNotificationMIBGroup=myAddressNotificationMIBGroup, myMacAddressEntry=myMacAddressEntry, myMacNotiHisMacChangedMsg=myMacNotiHisMacChangedMsg, myAddressNotificationObjects=myAddressNotificationObjects, myAddressMIBCompliance=myAddressMIBCompliance, myMacNotiHisTableMaxLength=myMacNotiHisTableMaxLength, myAddressMIB=myAddressMIB, myAddressMIBGroups=myAddressMIBGroups, myMacNotiHisTable=myMacNotiHisTable, myMacNotificationInterval=myMacNotificationInterval, myMacAddressType=myMacAddressType, myMacAddressPort=myMacAddressPort, myStaticAddressCurrentNum=myStaticAddressCurrentNum, myMacNotiIfIndex=myMacNotiIfIndex, macChangedNotification=macChangedNotification, myAddressMIBObjects=myAddressMIBObjects, myMacNotiHisTableCurrentLength=myMacNotiHisTableCurrentLength, myMacNotiIfCfgTable=myMacNotiIfCfgTable, myMacNotiIfCfgEntry=myMacNotiIfCfgEntry, myMacNotiHisTimestamp=myMacNotiHisTimestamp, myMacNotiHisEntry=myMacNotiHisEntry, myMacAddressTable=myMacAddressTable, myAddressMIBConformance=myAddressMIBConformance, myAddressTraps=myAddressTraps, myMacAddressFdbId=myMacAddressFdbId, myAddressManagementObjects=myAddressManagementObjects, myIfMacAddrLearntEnable=myIfMacAddrLearntEnable, myIfMacAddrRemovedEnable=myIfMacAddrRemovedEnable, myMacAddress=myMacAddress, myAddressAvailableNum=myAddressAvailableNum, myMacAddressMIBGroup=myMacAddressMIBGroup)
