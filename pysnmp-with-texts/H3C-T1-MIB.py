#
# PySNMP MIB module H3C-T1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-T1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:24:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Counter64, Unsigned32, MibIdentifier, TimeTicks, Counter32, ObjectIdentity, Integer32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Counter64", "Unsigned32", "MibIdentifier", "TimeTicks", "Counter32", "ObjectIdentity", "Integer32", "IpAddress", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3cT1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29))
h3cT1.setRevisions(('2009-06-08 17:41', '2004-12-01 14:36',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cT1.setRevisionsDescriptions(('To fix bugs in the MIB file.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: h3cT1.setLastUpdated('200906080000Z')
if mibBuilder.loadTexts: h3cT1.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cT1.setContactInfo('Platform Team H3C Technologies Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip: 100085')
if mibBuilder.loadTexts: h3cT1.setDescription('This MIB provides T1 interface information that are excluded by RFC 1213 and RFC 2233')
t1InterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1), )
if mibBuilder.loadTexts: t1InterfaceStatusTable.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceStatusTable.setDescription('This table contains interface packet statistics ')
t1InterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: t1InterfaceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceStatusEntry.setDescription('This entry contains interface packet statistics. The index of this Entry is ifIndex defined in ifTable of RFC1213-MIB')
t1InterfaceInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInErrs.setDescription('The total number of error received on this interface')
t1InterfaceInRuntsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInRuntsErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInRuntsErrs.setDescription('The number of Runts Error(too short packet) received on this interface')
t1InterfaceInGiantsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInGiantsErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInGiantsErrs.setDescription('The number of Giants Error(too long packet) received on this interface')
t1InterfaceInCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInCrcErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInCrcErrs.setDescription('The number of CRC Error received on this interface')
t1InterfaceInAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInAlignErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInAlignErrs.setDescription('The number of Align Error received on this interface')
t1InterfaceInOverRunsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInOverRunsErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInOverRunsErrs.setDescription('The number of Over Runs Error received on this interface')
t1InterfaceInDribblesErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInDribblesErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInDribblesErrs.setDescription('The number of dribble packets received')
t1InterfaceInAbortedSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInAbortedSeqErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInAbortedSeqErrs.setDescription('The number of AbortedSeq Error received on this interface')
t1InterfaceInNoBufferErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInNoBufferErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInNoBufferErrs.setDescription('The number of Error (no buffer available)')
t1InterfaceInFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInFramingErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceInFramingErrs.setDescription('The number of framing Errors')
t1InterfaceOutputErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutputErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceOutputErrs.setDescription('The number of total Error transmited on this interface')
t1InterfaceOutUnderRunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutUnderRunErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceOutUnderRunErrs.setDescription('The number of UnderRun Error transmited on this interface')
t1InterfaceOutCollisonsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutCollisonsErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceOutCollisonsErrs.setDescription('The number of Collisions Error transmited on this interface')
t1InterfaceOutDeferedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutDeferedErrs.setStatus('current')
if mibBuilder.loadTexts: t1InterfaceOutDeferedErrs.setDescription('The number of Deferred Error transmited on this interface')
h3ct1Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2), )
if mibBuilder.loadTexts: h3ct1Table.setStatus('current')
if mibBuilder.loadTexts: h3ct1Table.setDescription('A list of T1 interface entries.')
h3ct1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3ct1Entry.setStatus('current')
if mibBuilder.loadTexts: h3ct1Entry.setDescription('This entry contains T1 interface management information.')
class H3cT1TimeSlot(TextualConvention, OctetString):
    description = "Each octet within this value specifies a set of time slots, with the first octet specifying time slot 1 through 8, the second octet specifying time slots 9 through 16, etc. Within each octet, the most significant bit represents the highest numbered time slot, and the least significant bit represents the lowest numbered time slot. Thus, each time slot of the T1 is represented by a single bit within the value of this object. If that bit has a value of '1' then that time slot is included in the set of time slots; the time slot is not included if its bit has a value of '0'."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

h3ct1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 1), Bits().clone(namedValues=NamedValues(("voice", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1Type.setStatus('current')
if mibBuilder.loadTexts: h3ct1Type.setDescription('Specifies the type of the T1 interface.')
h3ct1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slave", 1), ("master", 2))).clone('slave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1Clock.setStatus('current')
if mibBuilder.loadTexts: h3ct1Clock.setDescription('Specifies the clock type used on the T1 interface.')
h3ct1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sf", 1), ("esf", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1FrameFormat.setStatus('current')
if mibBuilder.loadTexts: h3ct1FrameFormat.setDescription('Specifies the frame format used on the T1 interface.')
h3ct1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2))).clone('b8zs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1LineCode.setStatus('current')
if mibBuilder.loadTexts: h3ct1LineCode.setDescription('Specifies the line code type used on the T1 interface.')
h3ct1PriSetTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 5), H3cT1TimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1PriSetTimeSlot.setStatus('current')
if mibBuilder.loadTexts: h3ct1PriSetTimeSlot.setDescription('This is a bit-map of PRI time slots used on the T1 interface. It needs to administratively shut down the D channel of the T1 interface before cancelling PRI time slots.')
h3ct1DChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1DChannelIndex.setStatus('current')
if mibBuilder.loadTexts: h3ct1DChannelIndex.setDescription('This is the ifIndex of the D channel of the T1 interface.')
h3ct1SubScribLineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1SubScribLineChannelIndex.setStatus('current')
if mibBuilder.loadTexts: h3ct1SubScribLineChannelIndex.setDescription('This is the ifIndex of the subscriber-line channel of the T1 interface.')
h3ct1InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3), )
if mibBuilder.loadTexts: h3ct1InterfaceTable.setStatus('current')
if mibBuilder.loadTexts: h3ct1InterfaceTable.setDescription('A list of channels of T1 interface entries. Including D channels and subscriber-line channels.')
h3ct1InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3ct1InterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: h3ct1InterfaceEntry.setDescription('This entry contains channels of T1 interface management information. Including D channels and subscriber-line channels.')
h3ct1ControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1ControllerIndex.setStatus('current')
if mibBuilder.loadTexts: h3ct1ControllerIndex.setDescription('Which T1 interface is this channel belonged to.')
mibBuilder.exportSymbols("H3C-T1-MIB", t1InterfaceOutputErrs=t1InterfaceOutputErrs, t1InterfaceOutDeferedErrs=t1InterfaceOutDeferedErrs, h3ct1LineCode=h3ct1LineCode, h3ct1FrameFormat=h3ct1FrameFormat, h3ct1Table=h3ct1Table, t1InterfaceInAlignErrs=t1InterfaceInAlignErrs, t1InterfaceInFramingErrs=t1InterfaceInFramingErrs, h3ct1ControllerIndex=h3ct1ControllerIndex, h3ct1Type=h3ct1Type, h3ct1InterfaceTable=h3ct1InterfaceTable, t1InterfaceOutUnderRunErrs=t1InterfaceOutUnderRunErrs, h3ct1Clock=h3ct1Clock, t1InterfaceInAbortedSeqErrs=t1InterfaceInAbortedSeqErrs, t1InterfaceInGiantsErrs=t1InterfaceInGiantsErrs, t1InterfaceStatusTable=t1InterfaceStatusTable, h3cT1=h3cT1, t1InterfaceInCrcErrs=t1InterfaceInCrcErrs, h3ct1DChannelIndex=h3ct1DChannelIndex, H3cT1TimeSlot=H3cT1TimeSlot, t1InterfaceInDribblesErrs=t1InterfaceInDribblesErrs, t1InterfaceStatusEntry=t1InterfaceStatusEntry, t1InterfaceOutCollisonsErrs=t1InterfaceOutCollisonsErrs, PYSNMP_MODULE_ID=h3cT1, h3ct1Entry=h3ct1Entry, t1InterfaceInOverRunsErrs=t1InterfaceInOverRunsErrs, h3ct1InterfaceEntry=h3ct1InterfaceEntry, t1InterfaceInNoBufferErrs=t1InterfaceInNoBufferErrs, h3ct1PriSetTimeSlot=h3ct1PriSetTimeSlot, t1InterfaceInRuntsErrs=t1InterfaceInRuntsErrs, t1InterfaceInErrs=t1InterfaceInErrs, h3ct1SubScribLineChannelIndex=h3ct1SubScribLineChannelIndex)
