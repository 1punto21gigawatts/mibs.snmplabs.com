#
# PySNMP MIB module XIPMROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XIPMROUTE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:44:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Unsigned32, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Counter32, IpAddress, NotificationType, ObjectIdentity, experimental, Gauge32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Counter32", "IpAddress", "NotificationType", "ObjectIdentity", "experimental", "Gauge32", "Bits", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xipMRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 29))
if mibBuilder.loadTexts: xipMRouteMIB.setLastUpdated('9903120000Z')
if mibBuilder.loadTexts: xipMRouteMIB.setOrganization('Xedia Corp.')
if mibBuilder.loadTexts: xipMRouteMIB.setContactInfo('support@xedia.com')
if mibBuilder.loadTexts: xipMRouteMIB.setDescription('The MIB module for management of IP Multicast routing, but independent of the specific multicast routing protocol in use. XXX ')
xipMRouteMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 29, 1))
xipMRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1))
xipMRouteInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1), )
if mibBuilder.loadTexts: xipMRouteInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceTable.setDescription('The (conceptual) table containg multicast routing information specific to interfaces.')
xipMRouteInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1), ).setIndexNames((0, "XIPMROUTE-MIB", "xipMRouteInterfaceIfIndex"))
if mibBuilder.loadTexts: xipMRouteInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceEntry.setDescription('An entry (conceptual row) containing the multicast routing information for a particular interface.')
xipMRouteInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: xipMRouteInterfaceIfIndex.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceIfIndex.setDescription('The ifIndex value of the interface for which this entry contains information.')
xipMRouteInterfaceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 9))).clone(namedValues=NamedValues(("none", 0), ("dvmrp", 4), ("pimDenseMode", 9))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceProtocol.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceProtocol.setDescription('The routing protocol running on this interface.')
xipMRouteInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceAdminStatus.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceAdminStatus.setDescription('The status of this entry. Creating the entry enables multicast on the virtual interface; destroying the entry or setting it to notInService disables multicast on the virtual interface.')
xipMRouteInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceAddress.setStatus('current')
if mibBuilder.loadTexts: xipMRouteInterfaceAddress.setDescription('Interface address associated with the multicast protocol. When not specified (0.0.0.0), multicast protocols will be associated with the first address started on the interface.')
mibBuilder.exportSymbols("XIPMROUTE-MIB", PYSNMP_MODULE_ID=xipMRouteMIB, xipMRouteInterfaceTable=xipMRouteInterfaceTable, xipMRouteInterfaceAddress=xipMRouteInterfaceAddress, xipMRouteInterfaceAdminStatus=xipMRouteInterfaceAdminStatus, xipMRouteMIBObjects=xipMRouteMIBObjects, xipMRouteInterfaceIfIndex=xipMRouteInterfaceIfIndex, xipMRoute=xipMRoute, xipMRouteInterfaceEntry=xipMRouteInterfaceEntry, xipMRouteMIB=xipMRouteMIB, xipMRouteInterfaceProtocol=xipMRouteInterfaceProtocol)
