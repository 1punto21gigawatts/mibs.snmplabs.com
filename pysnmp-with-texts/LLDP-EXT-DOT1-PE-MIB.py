#
# PySNMP MIB module LLDP-EXT-DOT1-PE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LLDP-EXT-DOT1-PE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:08:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ifGeneralInformationGroup, = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup")
lldpXdot1StandAloneExtensions, = mibBuilder.importSymbols("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1StandAloneExtensions")
lldpV2RemTimeMark, lldpV2RemLocalIfIndex, lldpV2RemLocalDestMACAddress, lldpV2RemIndex, lldpV2Extensions, lldpV2PortConfigEntry, lldpV2LocPortIfIndex = mibBuilder.importSymbols("LLDP-V2-MIB", "lldpV2RemTimeMark", "lldpV2RemLocalIfIndex", "lldpV2RemLocalDestMACAddress", "lldpV2RemIndex", "lldpV2Extensions", "lldpV2PortConfigEntry", "lldpV2LocPortIfIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, iso, Gauge32, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, MibIdentifier, Counter32, Bits, Unsigned32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Gauge32", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "MibIdentifier", "Counter32", "Bits", "Unsigned32", "Counter64", "IpAddress")
DisplayString, MacAddress, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "TruthValue")
lldpXDot1PEExtensions = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2))
lldpXDot1PEExtensions.setRevisions(('2012-01-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lldpXDot1PEExtensions.setRevisionsDescriptions(('Initial version published as part of IEEE Std. 802.1BR-2012',))
if mibBuilder.loadTexts: lldpXDot1PEExtensions.setLastUpdated('201201230000Z')
if mibBuilder.loadTexts: lldpXDot1PEExtensions.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: lldpXDot1PEExtensions.setContactInfo('WG-URL: http://www.ieee802.org/1/ WG-EMail: stds-802-1-L@IEEE.ORG Contact: Tony Jeffree Postal: C/O IEEE 802.1 Working Group IEEE Standards Association 445 Hoes Lane Piscataway NJ 08854 USA E-mail: stds-802-1-L@IEEE.ORG')
if mibBuilder.loadTexts: lldpXDot1PEExtensions.setDescription('The LLDP Management Information Base extension module for IEEE 802.1 organizationally defined discovery information to support Port Extension. This MIB module is rooted under the lldpXdot1StandAloneExtensions OID arc, in order to allow it to be defined independently of other 802.1 LLDP extension MIBs. Unless otherwise indicated, the references in this MIB module are to IEEE Std 802.1BR-2012. Copyright (C) IEEE. This version of this MIB module is published as Annex B.5 of IEEE Std 802.1BR-2012; see the standard itself for full legal notices.')
lldpXdot1PeMIB = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1))
lldpXdot1PeObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1))
lldpXdot1PeConfig = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 1))
lldpXdot1PeLocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2))
lldpXdot1PeRemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3))
lldpXdot1PeConfigPortExtensionTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionTable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionTable.setDescription('A table that controls selection of LLDP Port Extension TLVs to be transmitted on individual ports.')
lldpXdot1PeConfigPortExtensionEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeConfigPortExtensionEntry"))
lldpXdot1PeConfigPortExtensionEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionEntry.setDescription('LLDP configuration information that specifies Port Exension configuration. This configuration object augments the lldpV2Xdot1LocPortExtensionEntry, therefore it is only present along with the associated lldpV2Xdot1LocPortExtensionEntry entry. Each active lldpV2Xdot1ConfigPortExensionEntry must be restored from non-volatile storage (along with the corresponding lldpV2Xdot1LocPortExtensionEntry) after a re-initialization of the management system.')
lldpXdot1PeConfigPortExtensionTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 1, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionTxEnable.setReference('D.8 of 802.1Q')
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionTxEnable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeConfigPortExtensionTxEnable.setDescription('The lldpXdot1PeConfigPortExtensionTxEnable, which is defined as a truth value and configured by the network management, determines whether the IEEE 802.1 organizationally defined Port Extension TLV transmission is allowed on a given LLDP transmission capable port. The value of this object must be restored from non-volatile storage after a re-initialization of the management system.')
lldpXdot1PeLocPortExtensionTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2, 1), )
if mibBuilder.loadTexts: lldpXdot1PeLocPortExtensionTable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeLocPortExtensionTable.setDescription('This table contains one row per port of Port Extension information (as a part of the LLDP 802.1 organizational extension) on the local system known to this agent.')
lldpXdot1PeLocPortExtensionEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpXdot1PeLocPortExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeLocPortExtensionEntry.setDescription('Port Extension information about a particular Port Extender Port.')
lldpXdot1PeLocPECascadePortPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1PeLocPECascadePortPriority.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeLocPECascadePortPriority.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeLocPECascadePortPriority.setDescription('Contains the cascade port priority.')
lldpXdot1PeLocPEAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1PeLocPEAddress.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeLocPEAddress.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeLocPEAddress.setDescription('This object contains the MAC address that uniquely identifies the Port Extender.')
lldpXdot1PeLocPECSPAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1PeLocPECSPAddress.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeLocPECSPAddress.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeLocPECSPAddress.setDescription('This object contains the MAC address to be used for the Port Extension control and status protocol.')
lldpXdot1PeRemPortExtensionTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3, 1), )
if mibBuilder.loadTexts: lldpXdot1PeRemPortExtensionTable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeRemPortExtensionTable.setDescription('This table contains Port Extension information (as a part of the LLDP IEEE 802.1 organizational extension) of the remote system.')
lldpXdot1PeRemPortExtensionEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpXdot1PeRemPortExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeRemPortExtensionEntry.setDescription('Port Extension information about remote systems port component.')
lldpXdot1PeRemPECascadePortPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1PeRemPECascadePortPriority.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeRemPECascadePortPriority.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeRemPECascadePortPriority.setDescription('The cascade port priority.')
lldpXdot1PeRemPEAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1PeRemPEAddress.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeRemPEAddress.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeRemPEAddress.setDescription('This object contains the MAC address that uniquely identifies the Port Extender.')
lldpXdot1PeRemPECSPAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 1, 1, 3, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXdot1PeRemPECSPAddress.setReference('D.8')
if mibBuilder.loadTexts: lldpXdot1PeRemPECSPAddress.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeRemPECSPAddress.setDescription('This object contains the MAC address to be used for the Port Extension Control and Status Protocol.')
lldpXdot1PeConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 2))
lldpXdot1PeCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 2, 1))
lldpXdot1PeGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 2, 2))
lldpXdot1PeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 2, 1, 1)).setObjects(("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeGroup"), ("LLDP-EXT-DOT1-PE-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1PeCompliance = lldpXdot1PeCompliance.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeCompliance.setDescription('A compliance statement for entities that implement the IEEE 802.1 organizationally defined Port Extension LLDP extension MIB. This group is mandatory for agents that implement the Port Extension peSet TLV set.')
lldpXdot1PeGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 2, 2, 2, 1)).setObjects(("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeConfigPortExtensionTxEnable"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeLocPECascadePortPriority"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeLocPEAddress"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeLocPECSPAddress"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeRemPECascadePortPriority"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeRemPEAddress"), ("LLDP-EXT-DOT1-PE-MIB", "lldpXdot1PeRemPECSPAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1PeGroup = lldpXdot1PeGroup.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1PeGroup.setDescription('The collection of objects that support the Port Extension peSet TLV set.')
mibBuilder.exportSymbols("LLDP-EXT-DOT1-PE-MIB", lldpXdot1PeConformance=lldpXdot1PeConformance, lldpXdot1PeRemPEAddress=lldpXdot1PeRemPEAddress, lldpXdot1PeCompliance=lldpXdot1PeCompliance, lldpXdot1PeRemPECSPAddress=lldpXdot1PeRemPECSPAddress, lldpXdot1PeLocPECascadePortPriority=lldpXdot1PeLocPECascadePortPriority, lldpXdot1PeLocPECSPAddress=lldpXdot1PeLocPECSPAddress, lldpXdot1PeGroup=lldpXdot1PeGroup, lldpXdot1PeConfigPortExtensionTxEnable=lldpXdot1PeConfigPortExtensionTxEnable, lldpXdot1PeConfig=lldpXdot1PeConfig, lldpXdot1PeLocPortExtensionTable=lldpXdot1PeLocPortExtensionTable, lldpXdot1PeConfigPortExtensionTable=lldpXdot1PeConfigPortExtensionTable, lldpXdot1PeGroups=lldpXdot1PeGroups, lldpXdot1PeObjects=lldpXdot1PeObjects, lldpXDot1PEExtensions=lldpXDot1PEExtensions, lldpXdot1PeRemoteData=lldpXdot1PeRemoteData, lldpXdot1PeLocPortExtensionEntry=lldpXdot1PeLocPortExtensionEntry, lldpXdot1PeRemPECascadePortPriority=lldpXdot1PeRemPECascadePortPriority, lldpXdot1PeCompliances=lldpXdot1PeCompliances, PYSNMP_MODULE_ID=lldpXDot1PEExtensions, lldpXdot1PeRemPortExtensionTable=lldpXdot1PeRemPortExtensionTable, lldpXdot1PeLocPEAddress=lldpXdot1PeLocPEAddress, lldpXdot1PeRemPortExtensionEntry=lldpXdot1PeRemPortExtensionEntry, lldpXdot1PeMIB=lldpXdot1PeMIB, lldpXdot1PeConfigPortExtensionEntry=lldpXdot1PeConfigPortExtensionEntry, lldpXdot1PeLocalData=lldpXdot1PeLocalData)
