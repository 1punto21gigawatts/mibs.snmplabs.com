#
# PySNMP MIB module T2000-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T2000-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Counter32, ModuleIdentity, IpAddress, TimeTicks, Gauge32, NotificationType, enterprises, ObjectIdentity, MibIdentifier, Bits, NotificationType, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Counter32", "ModuleIdentity", "IpAddress", "TimeTicks", "Gauge32", "NotificationType", "enterprises", "ObjectIdentity", "MibIdentifier", "Bits", "NotificationType", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
huawei = MibIdentifier((1, 3, 6, 1, 4, 1, 2011))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2))
hwNetManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15))
hwNmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1))
hwNmFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 3))
thirdNMSFaultFilter = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 3, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thirdNMSFaultFilter.setStatus('mandatory')
if mibBuilder.loadTexts: thirdNMSFaultFilter.setDescription('IP:Port:AlarmSeverityFilter:FaultFlagFilter AlarmSeverityFilter = xxxx (Critical, Major, Minor, Warning) (1 - filter , 0 -report) FaultFlagFilter = yyy (Event, Fault, Recovery) (1 - filter , 0 -report) Both AlarmSeverityFilter and FaultFlagFilter are optional and both or any one can be set E.g.: 10.18.17.28:9999:1001:011 Only events of major and minor severity will be send to the OSS [10.18.17.28:9999] and rest filtered. The format to specify only AlarmSeverityFilter is: 10.18.17.28:9999:1001 The format to specify only FaultFlagFilter is: 10.18.17.28:9999::011')
hwNmClearAlarms = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 3, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmClearAlarms.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmClearAlarms.setDescription('This provides the functionality of clearing alarms to third party NMS. The alarms can be cleared based on alarm serial number. Syntax: alarm serial numbers separated by comma (,).')
hwNmAcknowledgeAlarms = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 3, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmAcknowledgeAlarms.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmAcknowledgeAlarms.setDescription('This provides the functionality of acknowledging alarms to third party NMS. The alarms can be acknowledged based on alarm serial number. Syntax: alarm serial numbers separated by comma (,).')
hwNmUnAcknowledgeAlarms = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 3, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmUnAcknowledgeAlarms.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmUnAcknowledgeAlarms.setDescription('This provides the functionality of unacknowledging alarms to third party NMS. The alarms can be unacknowledged based on alarm serial number. Syntax: alarm serial numbers separated by comma (,).')
hwNmNorthboundEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7))
hwNmNorthboundEventInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1))
hwNmNorthboundNEName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundNEName.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundNEName.setDescription('The name of network element,string (255)')
hwNmNorthboundNEType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundNEType.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundNEType.setDescription('Device type of element,string(64)')
hwNmNorthboundObjectInstance = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundObjectInstance.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundObjectInstance.setDescription('Instance of element,such as number of Rack, Frame, Slot, Subslot, Port and so on,string(255)')
hwNmNorthboundEventType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventType.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventType.setDescription('Event type of Network management,string(64)')
hwNmNorthboundEventTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventTime.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventTime.setDescription('Alarm generate time,string(64),format: 2003/03/14 00:00:00')
hwNmNorthboundProbableCause = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundProbableCause.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundProbableCause.setDescription('Reason of Probable caused alarm, string(64)')
hwNmNorthboundSeverity = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundSeverity.setDescription('Level of Alarm, string(64)')
hwNmNorthboundEventDetail = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventDetail.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventDetail.setDescription('Alarm ID and detail information, format: ID+detail infomation, string(255)')
hwNmNorthboundAdditionalInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundAdditionalInfo.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundAdditionalInfo.setDescription('Additional infomation of device, such as Country, City and so on, string(255)')
hwNmNorthboundFaultFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundFaultFlag.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundFaultFlag.setDescription('The flag of the fault.Show whether the alarm is an event ,a fault alarm or a recovery alarm.')
hwNmNorthboundFaultFunction = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundFaultFunction.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundFaultFunction.setDescription("The function type of the alarm.It can be one of these values:'Power','Environment','Signal','Relay','Hardware','Software','Run','Communication','Service','Processerror','UNKNOWN_FUNC_TYPE'")
hwNmNorthboundDeviceIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundDeviceIP.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundDeviceIP.setDescription('The IP address of the device')
hwNmNorthboundSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundSerialNo.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundSerialNo.setDescription('The serial number of alarm.')
hwNmNorthboundProbableRepair = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundProbableRepair.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundProbableRepair.setDescription('The probable repair advice of the alarm.')
hwNmNorthboundResourceIDs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundResourceIDs.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundResourceIDs.setDescription('The ID of the resource.')
hwNmNorthboundsAdditionalVB1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB1.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB1.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB2.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB2.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB3.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB3.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB4 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB4.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB4.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB5 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB5.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB5.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB6 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB6.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB6.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB7 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB7.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB7.setDescription('Addtional information of the alarm')
hwNmNorthboundsAdditionalVB8 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB8.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundsAdditionalVB8.setDescription('Addtional information of the alarm')
hwNmNorthboundEventName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventName.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventName.setDescription('The name of event,string (255)')
hwNmNorthboundEventKeepAliveInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 2))
hwNmNorthboundEventSynchronization = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7))
hwNmNorthboundEventSynchronizationStart = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 1))
hwNmNorthboundEventSynchronizationQueryResult = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 2))
hwNmNorthboundEventSynchronizationEnd = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 3))
hwNmNorthboundEventSynchronizationEndStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normalEnd", 1), ("stopped", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationEndStatus.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationEndStatus.setDescription("It shows the result of alarm synchronization. 1 means the alarm synchronization successfully ended. 2 means the alarm synchronization is stopped by the NMS's command. 3 means some error occured during the alarm synchronization.")
hwNmNorthboundEventSynchronizationEndStatusDetail = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 3, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationEndStatusDetail.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationEndStatusDetail.setDescription('The detail description of the alarm synchronization end status.')
hwNmNorthboundEventSynchronizationCommandStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationCommandStart.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationCommandStart.setDescription("This node is to be set to start the alarm synchronization. The format to query alarms is:- 'IP:port:start time:end time' Query time can be UTC time, Local time or Local time with timezone. Syntax for start time and end time is - YYYYMMDDhhmmss. The interpretation of the start time and end time depends on the configuration file parameter. Query can be in any of the following formats: 1. UTC time: Format:- 'IP:port:start time:end time' Here, the start time and end time will be considered to be UTC format 2. Local time: Format:- IP:port:start time:end time Here, the start time and end time will be considered to be in local time format. 3. Local time with timezone: Format:- IP:port:start time:end time:timezone:dstflag Here, the user can mention the timezone and dst flag if dstflag is 0 - DST disabled, 1- DST enabled. timezone and DST are optional. Format to omit timezone:- IP:port:start time:end time::dstflag Format to omit dst flag:- IP:port:start time:end time:timezone The agent will send alarm synchronization result to the IP and port specified which were raised between start time and end time. If start time and end time are missing all alarms are reported. Start time and end time both are optional. If end time is missing current time of the EMS is taken as end time. If end time is present start time is not optional, it means you cannot provide end time without specifying the start time. If there is already a running alarm synchronization for that IP and port,it will return a commit fail error.")
hwNmNorthboundEventSynchronizationCommandStop = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationCommandStop.setStatus('mandatory')
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationCommandStop.setDescription("This node is to be set to stop the alarm synchronization. It should be set as NMS's IP:port,and the agent will stop alarm synchronization for the IP and port specified. If alarm synchronization is not in progress for the specified IP and port,it will return a commit fail error. ")
hwNmNorthboundEventNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,1)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotify.setDescription('Notification for real-time alarm.')
hwNmNorthboundEventKeepAlive = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 2) + (0,2))
if mibBuilder.loadTexts: hwNmNorthboundEventKeepAlive.setDescription('Notification for keep alive traps.')
hwNmNorthboundEventNotifyCritical = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,3)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyCritical.setDescription('Notification for real-time alarm whose level is Critical.')
hwNmNorthboundEventNotifyMajor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,4)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyMajor.setDescription('Notification for real-time alarm whose level is Major.')
hwNmNorthboundEventNotifyMinor = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,5)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyMinor.setDescription('Notification for real-time alarm whose level is Minor.')
hwNmNorthboundEventNotifyWarning = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,6)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyWarning.setDescription('Notification for real-time alarm whose level is Warning.')
hwNmNorthboundEventNotifyIndefinitely = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,7)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyIndefinitely.setDescription('Notification for real-time alarm whose level is Indefinitely.')
hwNmNorthboundEventNotifyUnknownSeverity = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 1) + (0,8)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventNotifyUnknownSeverity.setDescription('Notification for real-time alarm whose level is UnknownSeverity.')
hwNmNorthboundEventSynchronizationStartNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 1) + (0,9))
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationStartNotify.setDescription('Notification indicates the beginning of alarm synchronization.')
hwNmNorthboundEventSynchronizationQueryResultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 2) + (0,10)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundNEName"), ("T2000-TRAP-MIB", "hwNmNorthboundNEType"), ("T2000-TRAP-MIB", "hwNmNorthboundObjectInstance"), ("T2000-TRAP-MIB", "hwNmNorthboundEventType"), ("T2000-TRAP-MIB", "hwNmNorthboundEventTime"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableCause"), ("T2000-TRAP-MIB", "hwNmNorthboundSeverity"), ("T2000-TRAP-MIB", "hwNmNorthboundEventDetail"), ("T2000-TRAP-MIB", "hwNmNorthboundAdditionalInfo"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFlag"), ("T2000-TRAP-MIB", "hwNmNorthboundFaultFunction"), ("T2000-TRAP-MIB", "hwNmNorthboundDeviceIP"), ("T2000-TRAP-MIB", "hwNmNorthboundSerialNo"), ("T2000-TRAP-MIB", "hwNmNorthboundProbableRepair"), ("T2000-TRAP-MIB", "hwNmNorthboundResourceIDs"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB1"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB2"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB3"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB4"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB5"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB6"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB7"), ("T2000-TRAP-MIB", "hwNmNorthboundsAdditionalVB8"), ("T2000-TRAP-MIB", "hwNmNorthboundEventName"))
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationQueryResultNotify.setDescription('Notification carries the query result of alarm synchronization.')
hwNmNorthboundEventSynchronizationEndNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 15, 1, 7, 7, 3) + (0,11)).setObjects(("T2000-TRAP-MIB", "hwNmNorthboundEventSynchronizationEndStatus"), ("T2000-TRAP-MIB", "hwNmNorthboundEventSynchronizationEndStatusDetail"))
if mibBuilder.loadTexts: hwNmNorthboundEventSynchronizationEndNotify.setDescription('Notification indicates the end of alarm synchronization.')
mibBuilder.exportSymbols("T2000-TRAP-MIB", hwNmNorthboundEvent=hwNmNorthboundEvent, hwNmFault=hwNmFault, hwNetManagement=hwNetManagement, hwNmUnAcknowledgeAlarms=hwNmUnAcknowledgeAlarms, hwNmNorthboundEventSynchronization=hwNmNorthboundEventSynchronization, hwNmNorthboundFaultFlag=hwNmNorthboundFaultFlag, hwNmNorthboundEventSynchronizationEndNotify=hwNmNorthboundEventSynchronizationEndNotify, hwNmNorthboundsAdditionalVB1=hwNmNorthboundsAdditionalVB1, hwNmNorthboundsAdditionalVB5=hwNmNorthboundsAdditionalVB5, hwNmClearAlarms=hwNmClearAlarms, hwNmNorthboundObjectInstance=hwNmNorthboundObjectInstance, hwNmNorthboundEventSynchronizationStartNotify=hwNmNorthboundEventSynchronizationStartNotify, hwNmNorthboundsAdditionalVB8=hwNmNorthboundsAdditionalVB8, products=products, hwNmNorthboundEventName=hwNmNorthboundEventName, hwNmNorthboundEventNotifyUnknownSeverity=hwNmNorthboundEventNotifyUnknownSeverity, hwNmNorthboundEventSynchronizationEndStatus=hwNmNorthboundEventSynchronizationEndStatus, hwNmNorthboundEventTime=hwNmNorthboundEventTime, hwNmNorthboundSeverity=hwNmNorthboundSeverity, hwNmAcknowledgeAlarms=hwNmAcknowledgeAlarms, hwNmNorthboundEventNotifyMinor=hwNmNorthboundEventNotifyMinor, hwNmNorthboundEventNotifyWarning=hwNmNorthboundEventNotifyWarning, thirdNMSFaultFilter=thirdNMSFaultFilter, hwNmNorthboundAdditionalInfo=hwNmNorthboundAdditionalInfo, hwNmNorthboundsAdditionalVB2=hwNmNorthboundsAdditionalVB2, huawei=huawei, hwNmNorthboundEventSynchronizationCommandStart=hwNmNorthboundEventSynchronizationCommandStart, hwNmNorthboundEventNotify=hwNmNorthboundEventNotify, hwNmNorthboundsAdditionalVB4=hwNmNorthboundsAdditionalVB4, hwNmNorthboundDeviceIP=hwNmNorthboundDeviceIP, hwNmNorthboundProbableCause=hwNmNorthboundProbableCause, hwNmNorthboundSerialNo=hwNmNorthboundSerialNo, hwNmNorthboundEventSynchronizationEndStatusDetail=hwNmNorthboundEventSynchronizationEndStatusDetail, hwNmNorthboundEventNotifyMajor=hwNmNorthboundEventNotifyMajor, hwNmNorthboundEventSynchronizationQueryResultNotify=hwNmNorthboundEventSynchronizationQueryResultNotify, hwNmNorthboundEventSynchronizationEnd=hwNmNorthboundEventSynchronizationEnd, hwNmNorthboundEventSynchronizationQueryResult=hwNmNorthboundEventSynchronizationQueryResult, hwNmNorthboundNEName=hwNmNorthboundNEName, hwNmNorthboundEventDetail=hwNmNorthboundEventDetail, hwNmNorthboundsAdditionalVB6=hwNmNorthboundsAdditionalVB6, hwNmNorthboundEventKeepAlive=hwNmNorthboundEventKeepAlive, hwNmNorthboundNEType=hwNmNorthboundNEType, hwNmAgent=hwNmAgent, hwNmNorthboundProbableRepair=hwNmNorthboundProbableRepair, hwNmNorthboundEventInfo=hwNmNorthboundEventInfo, hwNmNorthboundEventNotifyIndefinitely=hwNmNorthboundEventNotifyIndefinitely, hwNmNorthboundsAdditionalVB3=hwNmNorthboundsAdditionalVB3, hwNmNorthboundEventSynchronizationStart=hwNmNorthboundEventSynchronizationStart, hwNmNorthboundEventType=hwNmNorthboundEventType, hwNmNorthboundResourceIDs=hwNmNorthboundResourceIDs, hwNmNorthboundsAdditionalVB7=hwNmNorthboundsAdditionalVB7, hwNmNorthboundEventSynchronizationCommandStop=hwNmNorthboundEventSynchronizationCommandStop, hwNmNorthboundFaultFunction=hwNmNorthboundFaultFunction, hwNmNorthboundEventKeepAliveInfo=hwNmNorthboundEventKeepAliveInfo, hwNmNorthboundEventNotifyCritical=hwNmNorthboundEventNotifyCritical)
