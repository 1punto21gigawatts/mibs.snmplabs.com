#
# PySNMP MIB module Novell-License-Server-Trap-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Novell-License-Server-Trap-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:31:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
InternationalDisplayString, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "InternationalDisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, NotificationType, iso, Gauge32, NotificationType, ModuleIdentity, Bits, Integer32, Unsigned32, enterprises, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "iso", "Gauge32", "NotificationType", "ModuleIdentity", "Bits", "Integer32", "Unsigned32", "enterprises", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
nlstrap_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 73)).setLabel("nlstrap-mib")
trapinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 73, 1))
serverName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 1), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: serverName.setStatus('mandatory')
if mibBuilder.loadTexts: serverName.setDescription('')
trapTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 2), Integer32())
if mibBuilder.loadTexts: trapTime.setStatus('mandatory')
if mibBuilder.loadTexts: trapTime.setDescription('The number of seconds since midnight of January 1,1970 GMT.')
appName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: appName.setStatus('mandatory')
if mibBuilder.loadTexts: appName.setDescription('The name of the licensed application')
userName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: userName.setStatus('mandatory')
if mibBuilder.loadTexts: userName.setDescription('The user requesting or releasing application Licenses')
networkAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4))
if mibBuilder.loadTexts: networkAddress.setStatus('mandatory')
if mibBuilder.loadTexts: networkAddress.setDescription('Four byte internal network number.')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: macAddress.setStatus('mandatory')
if mibBuilder.loadTexts: macAddress.setDescription('Six byte MAC address.')
lsRequestSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,1)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestSuccess.setDescription('NetWare License Server: LSRequest was completed successfully.')
lsRequestSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,2)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestSystemError.setDescription('NetWare License Server: LSRequest failed due to system unavailable.')
lsRequestResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,3)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestResourceError.setDescription('NetWare License Server: LSRequest failed due to resources unavailable.')
lsRequestAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,4)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestAuthError.setDescription('NetWare License Server: LSRequest failed due to security error.')
lsRequestBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,5)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestBadArg.setDescription('NetWare License Server: LSRequest failed due to bad parameter(s).')
lsRequestInsuffUnits = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,6)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestInsuffUnits.setDescription('NetWare License Server: LSRequest failed not enough installed license units.')
lsRequestLicUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,7)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestLicUnavail.setDescription('NetWare License Server: LSRequest failed due to license unavailable.')
lsRequestNetUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,8)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRequestNetUnavail.setDescription('NetWare License Server: LSRequest failed due to network unavailable.')
lsRelSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,9)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelSuccess.setDescription('NetWare License Server: LSRelease was completed successfully.')
lsRelSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,10)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelSystemError.setDescription('NetWare License Server: LSRelease failed due to system unavailable.')
lsRelResouceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,11)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelResouceError.setDescription('NetWare License Server: LSRelease failed due to resources unavailable.')
lsRelAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,12)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelAuthError.setDescription('NetWare License Server: LSRelease failed due to security error.')
lsRelBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,13)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelBadArg.setDescription('NetWare License Server: LSRelease failed due to bad parameter(s).')
lsRelBadHandle = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,14)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsRelBadHandle.setDescription('NetWare License Server: LSRelease failed due to invalid licensing handle.')
lsUpdateSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,15)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateSuccess.setDescription('NetWare License Server: LSUpdate was completed successfully.')
lsUpdateSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,16)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateSystemError.setDescription('NetWare License Server: LSUpdate failed due to system unavailable.')
lsUpdateResouceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,17)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateResouceError.setDescription('NetWare License Server: LSUpdate failed due to resources unavailable.')
lsUpdateAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,18)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateAuthError.setDescription('NetWare License Server: LSUpdate failed due to security error.')
lsUpdateBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,19)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateBadArg.setDescription('NetWare License Server: LSUpdate failed due to bad parameter(s).')
lsUpdateBadHandle = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,20)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateBadHandle.setDescription('NetWare License Server: LSUpdate failed due to invalid licensing handle.')
lsUpdateInsuffUnits = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,21)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateInsuffUnits.setDescription('NetWare License Server: LSUpdate failed not enough installed license units.')
lsUpdateLicUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,22)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateLicUnavail.setDescription('NetWare License Server: LSUpdate failed due to license unavailable.')
lsUpdateLicTerm = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,23)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateLicTerm.setDescription('NetWare License Server: LSUpdate failed due to license termination.')
lsUpdateLicExpired = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,24)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
if mibBuilder.loadTexts: lsUpdateLicExpired.setDescription('NetWare License Server: LSUpdate failed due to license expiration.')
addAssignSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,25)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addAssignSuccess.setDescription('NetWare License Server: Add assignment was completed successfully.')
addAssignSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,26)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addAssignSystemError.setDescription('NetWare License Server: Add assignment failed due to system unavailable.')
addAssignResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,27)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addAssignResourceError.setDescription('NetWare License Server: Add assignment failed due to resources unavailable.')
addAssignAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,28)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addAssignAuthError.setDescription('NetWare License Server: Add assignment failed due to security error.')
addAssignBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,29)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addAssignBadArg.setDescription('NetWare License Server: Add assignment failed due to bad parameter(s).')
removeAssignSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,30)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: removeAssignSuccess.setDescription('NetWare License Server: Remove assignment was completed successfully.')
removeAssignSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,31)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: removeAssignSystemError.setDescription('NetWare License Server: Remove assignment failed due to system unavailable.')
removeAssignResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,32)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: removeAssignResourceError.setDescription('NetWare License Server: Remove assignment failed due to resources unavailable.')
removeAssignAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,33)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: removeAssignAuthError.setDescription('NetWare License Server: Remove assignment failed due to security error.')
removeAssignBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,34)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: removeAssignBadArg.setDescription('NetWare License Server: Remove assignment failed due to bad parameter(s).')
installCertifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,35)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: installCertifSuccess.setDescription('NetWare License Server: certificate installation was completed successfully.')
installCertifSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,36)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: installCertifSystemError.setDescription('NetWare License Server: certificate installation failed due to system unavailable.')
installCertifResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,37)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: installCertifResourceError.setDescription('NetWare License Server: certificate installation failed due to resources unavailable.')
installCertifAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,38)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: installCertifAuthError.setDescription('NetWare License Server: certificate installation failed due to security error.')
installCertifBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,39)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: installCertifBadArg.setDescription('NetWare License Server: certificate installation failed due to bad parameter(s).')
deleteCertifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,40)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: deleteCertifSuccess.setDescription('NetWare License Server: certificate deletion was completed successfully.')
deleteCertifSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,41)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: deleteCertifSystemError.setDescription('NetWare License Server: certificate deletion failed due to system unavailable.')
deleteCertifResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,42)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: deleteCertifResourceError.setDescription('NetWare License Server: certificate deletion failed due to resources unavailable.')
deleteCertifAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,43)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: deleteCertifAuthError.setDescription('NetWare License Server: certificate deletion failed due to security error.')
deleteCertifBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,44)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: deleteCertifBadArg.setDescription('NetWare License Server: certificate deletion failed due to bad parameter(s).')
transOwnerSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,45)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: transOwnerSuccess.setDescription('NetWare License Server: License certificate ownership transfer was completed successfully.')
transOwnerSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,46)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: transOwnerSystemError.setDescription('NetWare License Server: License certificate ownership transfer failed due to system unavailable.')
transOwnerResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,47)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: transOwnerResourceError.setDescription('NetWare License Server: License certificate ownership transfer failed due to resources unavailable.')
transOwnerAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,48)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: transOwnerAuthError.setDescription('NetWare License Server: License certificate ownership transfer failed due to security error.')
transOwnerBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,49)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: transOwnerBadArg.setDescription('NetWare License Server: License certificate ownership transfer failed due to bad parameter(s).')
addProdInfoSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,50)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addProdInfoSuccess.setDescription('NetWare License Server: Product information addition was successfully.')
addProdInfoSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,51)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addProdInfoSystemError.setDescription('NetWare License Server: Product information addition failed due to system unavailable.')
addProdInfoResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,52)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addProdInfoResourceError.setDescription('NetWare License Server: Product information addition failed due to resources unavailable.')
addProdInfoAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,53)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addProdInfoAuthError.setDescription('NetWare License Server: Product information addition failed due to security error.')
addProdInfoBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,54)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
if mibBuilder.loadTexts: addProdInfoBadArg.setDescription('NetWare License Server: Product information addition failed due to bad parameter(s).')
nlsTrapLoaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,98)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"))
if mibBuilder.loadTexts: nlsTrapLoaded.setDescription('NetWare License Trap NLM loaded.')
nlsTrapUnloaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,99)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"))
if mibBuilder.loadTexts: nlsTrapUnloaded.setDescription('NetWare License Trap NLM loaded.')
mibBuilder.exportSymbols("Novell-License-Server-Trap-MIB", installCertifResourceError=installCertifResourceError, deleteCertifSystemError=deleteCertifSystemError, installCertifSuccess=installCertifSuccess, trapinfo=trapinfo, trapTime=trapTime, lsRequestResourceError=lsRequestResourceError, addProdInfoSystemError=addProdInfoSystemError, nlsTrapLoaded=nlsTrapLoaded, lsUpdateLicUnavail=lsUpdateLicUnavail, installCertifAuthError=installCertifAuthError, lsRequestNetUnavail=lsRequestNetUnavail, transOwnerAuthError=transOwnerAuthError, lsUpdateLicExpired=lsUpdateLicExpired, lsRequestLicUnavail=lsRequestLicUnavail, removeAssignSystemError=removeAssignSystemError, transOwnerSuccess=transOwnerSuccess, lsRelSystemError=lsRelSystemError, lsUpdateBadArg=lsUpdateBadArg, deleteCertifResourceError=deleteCertifResourceError, addProdInfoResourceError=addProdInfoResourceError, removeAssignBadArg=removeAssignBadArg, lsRequestInsuffUnits=lsRequestInsuffUnits, serverName=serverName, installCertifSystemError=installCertifSystemError, lsUpdateResouceError=lsUpdateResouceError, addProdInfoBadArg=addProdInfoBadArg, lsUpdateLicTerm=lsUpdateLicTerm, mibDoc=mibDoc, addAssignAuthError=addAssignAuthError, installCertifBadArg=installCertifBadArg, appName=appName, removeAssignSuccess=removeAssignSuccess, deleteCertifAuthError=deleteCertifAuthError, userName=userName, nlsTrapUnloaded=nlsTrapUnloaded, networkAddress=networkAddress, deleteCertifBadArg=deleteCertifBadArg, lsUpdateAuthError=lsUpdateAuthError, lsUpdateBadHandle=lsUpdateBadHandle, transOwnerBadArg=transOwnerBadArg, lsUpdateInsuffUnits=lsUpdateInsuffUnits, addAssignBadArg=addAssignBadArg, lsRelSuccess=lsRelSuccess, removeAssignResourceError=removeAssignResourceError, removeAssignAuthError=removeAssignAuthError, lsRequestSuccess=lsRequestSuccess, addAssignSystemError=addAssignSystemError, transOwnerSystemError=transOwnerSystemError, lsRelBadHandle=lsRelBadHandle, lsRequestSystemError=lsRequestSystemError, novell=novell, lsRequestBadArg=lsRequestBadArg, lsRelAuthError=lsRelAuthError, transOwnerResourceError=transOwnerResourceError, addProdInfoSuccess=addProdInfoSuccess, addAssignSuccess=addAssignSuccess, nlstrap_mib=nlstrap_mib, deleteCertifSuccess=deleteCertifSuccess, lsUpdateSystemError=lsUpdateSystemError, macAddress=macAddress, lsUpdateSuccess=lsUpdateSuccess, addProdInfoAuthError=addProdInfoAuthError, lsRelResouceError=lsRelResouceError, lsRequestAuthError=lsRequestAuthError, lsRelBadArg=lsRelBadArg, addAssignResourceError=addAssignResourceError)
