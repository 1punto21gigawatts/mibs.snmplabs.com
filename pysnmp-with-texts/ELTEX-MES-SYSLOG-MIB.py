#
# PySNMP MIB module ELTEX-MES-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:01:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
EltCPURateLimiterTrafficType, = mibBuilder.importSymbols("ELTEX-MES-SWITCH-RATE-LIMITER-MIB", "EltCPURateLimiterTrafficType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibIdentifier, Counter32, Gauge32, IpAddress, Unsigned32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "Counter32", "Gauge32", "IpAddress", "Unsigned32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "Integer32")
RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
eltMesSyslog = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10))
if mibBuilder.loadTexts: eltMesSyslog.setLastUpdated('201605110000Z')
if mibBuilder.loadTexts: eltMesSyslog.setOrganization('Eltex Ltd.')
if mibBuilder.loadTexts: eltMesSyslog.setContactInfo('eltex.nsk.ru')
if mibBuilder.loadTexts: eltMesSyslog.setDescription('The private MIB module definition for SYSLOG services in Eltex devices.')
eltSyslogCPURateLimiterTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 1), )
if mibBuilder.loadTexts: eltSyslogCPURateLimiterTable.setStatus('current')
if mibBuilder.loadTexts: eltSyslogCPURateLimiterTable.setDescription('Enable/disable logging per CPU rate limitter.')
eltSyslogCPURateLimiterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 1, 1), ).setIndexNames((0, "ELTEX-MES-SYSLOG-MIB", "eltSyslogCPURateLimiterIndex"))
if mibBuilder.loadTexts: eltSyslogCPURateLimiterEntry.setStatus('current')
if mibBuilder.loadTexts: eltSyslogCPURateLimiterEntry.setDescription('An entry containing enable/disable logging settings per CPU rate limitter.')
eltSyslogCPURateLimiterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 1, 1, 1), EltCPURateLimiterTrafficType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltSyslogCPURateLimiterIndex.setStatus('current')
if mibBuilder.loadTexts: eltSyslogCPURateLimiterIndex.setDescription('Traffic type')
eltSyslogCPURateLimiterEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltSyslogCPURateLimiterEnabled.setStatus('current')
if mibBuilder.loadTexts: eltSyslogCPURateLimiterEnabled.setDescription('Enable logging of rate-limiter events')
eltMesSyslogEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 2))
eltSyslogEventsVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 2, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltSyslogEventsVrrpTable.setStatus('current')
if mibBuilder.loadTexts: eltSyslogEventsVrrpTable.setDescription('Enable/disable logging of VRRP events.')
class EltSyslogEventsVRRPEventType(TextualConvention, Integer32):
    description = 'Types of VRRP events.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("eltSyslogEventsVRRPEventProtocolError", 1), ("eltSyslogEventsVRRPEventNewMaster", 2))

eltSyslogEventsVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 2, 1, 1), ).setMaxAccess("readwrite").setIndexNames((0, "ELTEX-MES-SYSLOG-MIB", "eltSyslogEventsVRRPEventIndex"))
if mibBuilder.loadTexts: eltSyslogEventsVrrpEntry.setStatus('current')
if mibBuilder.loadTexts: eltSyslogEventsVrrpEntry.setDescription('An entry containing enable/disable logging of VRRP events.')
eltSyslogEventsVRRPEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 2, 1, 1, 1), EltSyslogEventsVRRPEventType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltSyslogEventsVRRPEventIndex.setStatus('current')
if mibBuilder.loadTexts: eltSyslogEventsVRRPEventIndex.setDescription('Specify the index of VRRP event.')
eltSyslogEventsVRRPEventEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 2, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltSyslogEventsVRRPEventEnabled.setStatus('current')
if mibBuilder.loadTexts: eltSyslogEventsVRRPEventEnabled.setDescription('Enable logging of VRRP event.')
eltSyslogUserCmdEnable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 10, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltSyslogUserCmdEnable.setStatus('current')
if mibBuilder.loadTexts: eltSyslogUserCmdEnable.setDescription('User commands enter enable for syslog flash, syslog cache and syslog UDP. When set to true, generating syslog entry for user commands entered.')
mibBuilder.exportSymbols("ELTEX-MES-SYSLOG-MIB", eltSyslogCPURateLimiterEntry=eltSyslogCPURateLimiterEntry, eltMesSyslogEvents=eltMesSyslogEvents, EltSyslogEventsVRRPEventType=EltSyslogEventsVRRPEventType, eltSyslogEventsVrrpEntry=eltSyslogEventsVrrpEntry, eltSyslogEventsVRRPEventIndex=eltSyslogEventsVRRPEventIndex, eltSyslogEventsVrrpTable=eltSyslogEventsVrrpTable, eltSyslogCPURateLimiterTable=eltSyslogCPURateLimiterTable, eltSyslogUserCmdEnable=eltSyslogUserCmdEnable, eltSyslogCPURateLimiterIndex=eltSyslogCPURateLimiterIndex, eltSyslogCPURateLimiterEnabled=eltSyslogCPURateLimiterEnabled, PYSNMP_MODULE_ID=eltMesSyslog, eltMesSyslog=eltMesSyslog, eltSyslogEventsVRRPEventEnabled=eltSyslogEventsVRRPEventEnabled)
