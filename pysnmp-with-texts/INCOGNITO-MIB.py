#
# PySNMP MIB module INCOGNITO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INCOGNITO-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:53:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, Counter32, Counter64, Integer32, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, enterprises, iso, ModuleIdentity, Bits, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Counter32", "Counter64", "Integer32", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "enterprises", "iso", "ModuleIdentity", "Bits", "NotificationType", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
incognito = ModuleIdentity((1, 3, 6, 1, 4, 1, 3606))
if mibBuilder.loadTexts: incognito.setLastUpdated('200304151442Z')
if mibBuilder.loadTexts: incognito.setOrganization('Incognito Software Inc.')
if mibBuilder.loadTexts: incognito.setContactInfo('Incognito Software Inc. Customer Service Postal: 1128 Hornby St. Vancouver, BC, Canada V6Z 2L4 Tel: +1 604-688-4332 Fax: +1 604-688-4339 E-Mail: support@incognito.com')
if mibBuilder.loadTexts: incognito.setDescription('The root of the OID sub-tree assigned to Incognito Software Inc. by the Internet Assigned Numbers Authority (IANA).')
incognitoSNMPObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 1))
if mibBuilder.loadTexts: incognitoSNMPObjects.setStatus('obsolete')
if mibBuilder.loadTexts: incognitoSNMPObjects.setDescription('This sub-tree was used in earlier revisions of software and is no longer used.')
incognitoReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 2))
if mibBuilder.loadTexts: incognitoReg.setStatus('current')
if mibBuilder.loadTexts: incognitoReg.setDescription('Sub-tree for registrations')
incognitoGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 3))
if mibBuilder.loadTexts: incognitoGeneric.setStatus('current')
if mibBuilder.loadTexts: incognitoGeneric.setDescription('Sub-tree for common object and event definitions')
incognitoProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 4))
if mibBuilder.loadTexts: incognitoProducts.setStatus('current')
if mibBuilder.loadTexts: incognitoProducts.setDescription('Sub-tree for specific object and event definitions')
incognitoCaps = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 5))
if mibBuilder.loadTexts: incognitoCaps.setStatus('current')
if mibBuilder.loadTexts: incognitoCaps.setDescription('Sub-tree for agent profiles')
incognitoReqs = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 6))
if mibBuilder.loadTexts: incognitoReqs.setStatus('current')
if mibBuilder.loadTexts: incognitoReqs.setDescription('Sub-tree for management application requirements')
incognitoExpr = ObjectIdentity((1, 3, 6, 1, 4, 1, 3606, 7))
if mibBuilder.loadTexts: incognitoExpr.setStatus('current')
if mibBuilder.loadTexts: incognitoExpr.setDescription('Sub-tree for experimental definitions')
mibBuilder.exportSymbols("INCOGNITO-MIB", incognitoReqs=incognitoReqs, incognito=incognito, incognitoGeneric=incognitoGeneric, incognitoSNMPObjects=incognitoSNMPObjects, PYSNMP_MODULE_ID=incognito, incognitoExpr=incognitoExpr, incognitoReg=incognitoReg, incognitoCaps=incognitoCaps, incognitoProducts=incognitoProducts)
