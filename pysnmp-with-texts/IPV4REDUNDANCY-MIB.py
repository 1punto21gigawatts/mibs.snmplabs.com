#
# PySNMP MIB module IPV4REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPV4REDUNDANCY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:56:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
apIpv4Redundancy, = mibBuilder.importSymbols("APENT-MIB", "apIpv4Redundancy")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, Gauge32, Counter64, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, TimeTicks, Integer32, NotificationType, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Gauge32", "Counter64", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "TimeTicks", "Integer32", "NotificationType", "Unsigned32", "iso")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
ipv4RedundancyMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 1))
if mibBuilder.loadTexts: ipv4RedundancyMib.setLastUpdated('9711242000Z')
if mibBuilder.loadTexts: ipv4RedundancyMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: ipv4RedundancyMib.setContactInfo('Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: ipv4RedundancyMib.setDescription('This MIB module describes the ArrowPoint enterprise MIB support for IPv4 Redundancy')
apIpv4RedundancyVRConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2), )
if mibBuilder.loadTexts: apIpv4RedundancyVRConfigTable.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRConfigTable.setDescription('Virtual router entries table')
apIpv4RedundancyVRConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1), ).setIndexNames((0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyVRIntAddr"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyVRID"))
if mibBuilder.loadTexts: apIpv4RedundancyVRConfigEntry.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRConfigEntry.setDescription('Virtual router entry')
apIpv4RedundancyVRIntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVRIntAddr.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRIntAddr.setDescription("Virtual router's IP interface address.")
apIpv4RedundancyVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVRID.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRID.setDescription("Virtual router's identifier.")
apIpv4RedundancyConfigPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyConfigPriority.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyConfigPriority.setDescription("Virtual router's configured priority. ")
apIpv4RedundancyAdPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyAdPriority.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyAdPriority.setDescription("Virtual router's advertised priority. ")
apIpv4RedundancyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyName.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyName.setDescription("Virtual router's critical service Name.")
apIpv4RedundancyVRPreempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVRPreempt.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRPreempt.setDescription("Virtual router's preempt state.")
apIpv4RedundancyVRState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ifDown", 0), ("noService", 1), ("backup", 2), ("master", 3), ("idle", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVRState.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRState.setDescription("Virtual router's state.")
apIpv4RedundancyVRMasterIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVRMasterIP.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRMasterIP.setDescription("Master virtual router's IP address.")
apIpv4RedundancyVRLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVRLastChange.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRLastChange.setDescription("Time at virtual router's last state change.")
apIpv4RedundancyVRStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVRStateChanges.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRStateChanges.setDescription("Count of virtual router's state changes.")
apIpv4RedundancyVRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVRStatus.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVRStatus.setDescription('Row status.')
apIpv4RedundancyIntConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3), )
if mibBuilder.loadTexts: apIpv4RedundancyIntConfigTable.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntConfigTable.setDescription('Redundant interface address entries table.')
apIpv4RedundancyIntConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1), ).setIndexNames((0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyIntAddress"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyIntVipAddress"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyIntVRID"))
if mibBuilder.loadTexts: apIpv4RedundancyIntConfigEntry.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntConfigEntry.setDescription('Redundant interface address entry.')
apIpv4RedundancyIntAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyIntAddress.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntAddress.setDescription('Redundant interface address.')
apIpv4RedundancyIntVipAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyIntVipAddress.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntVipAddress.setDescription('Redundant VIP address.')
apIpv4RedundancyIntVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyIntVRID.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntVRID.setDescription('Virtual router Identifier.')
apIpv4RedundancyIntState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noVirtualRouter", 1), ("backup", 2), ("backupshared", 3), ("master", 4))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyIntState.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntState.setDescription('Virtual router state.')
apIpv4RedundancyIntMasterIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyIntMasterIP.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntMasterIP.setDescription('Master virtual router IP address.')
apIpv4RedundancyIntLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyIntLastChange.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntLastChange.setDescription("Time at virtual router's last state change.")
apIpv4RedundancyIntStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyIntStateChanges.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntStateChanges.setDescription("Count of virtual router's state changes.")
apIpv4RedundancyIntStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyIntStatus.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyIntStatus.setDescription('Row status.')
apIpv4RedundancyVIPConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4), )
if mibBuilder.loadTexts: apIpv4RedundancyVIPConfigTable.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPConfigTable.setDescription('Redundant VIP address entries table.')
apIpv4RedundancyVIPConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1), ).setIndexNames((0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyVIPIntAddress"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyVIPAddress"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyVIPVRID"))
if mibBuilder.loadTexts: apIpv4RedundancyVIPConfigEntry.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPConfigEntry.setDescription('Redundant VIP address entry.')
apIpv4RedundancyVIPIntAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPIntAddress.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPIntAddress.setDescription("Redundant VIP address' interface.")
apIpv4RedundancyVIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPAddress.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPAddress.setDescription('Redundant VIP address.')
apIpv4RedundancyVIPVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPVRID.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPVRID.setDescription('Virtual router identifier.')
apIpv4RedundancyVIPRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPRange.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPRange.setDescription("Redundant VIP address' address range.")
apIpv4RedundancyVIPSharedVIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPSharedVIP.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPSharedVIP.setDescription('Shared VIP.')
apIpv4RedundancyVIPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noVirtualRouter", 1), ("backup", 2), ("backupshared", 3), ("master", 4))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVIPState.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPState.setDescription("Virtual router's state.")
apIpv4RedundancyVIPMasterIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVIPMasterIP.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPMasterIP.setDescription("Master virtual router's IP address.")
apIpv4RedundancyVIPLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVIPLastChange.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPLastChange.setDescription("Time at virtual router's last state change.")
apIpv4RedundancyVIPStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyVIPStateChanges.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPStateChanges.setDescription("Count of virtual router's state changes.")
apIpv4RedundancyVIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 4, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyVIPStatus.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyVIPStatus.setDescription('Row status.')
apIpv4RedundancyServConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6), )
if mibBuilder.loadTexts: apIpv4RedundancyServConfigTable.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServConfigTable.setDescription('Virtual router entries table')
apIpv4RedundancyServConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1), ).setIndexNames((0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyServIntAddr"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyServVRID"), (0, "IPV4REDUNDANCY-MIB", "apIpv4RedundancyServName"))
if mibBuilder.loadTexts: apIpv4RedundancyServConfigEntry.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServConfigEntry.setDescription('Virtual router entry')
apIpv4RedundancyServIntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyServIntAddr.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServIntAddr.setDescription('Interface Address that the VRID of this server belongs to.')
apIpv4RedundancyServVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyServVRID.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServVRID.setDescription('VRID the this server belongs to.')
apIpv4RedundancyServName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyServName.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServName.setDescription('The Name of the service.')
apIpv4RedundancyServType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("uplink", 1), ("normal", 2), ("script", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyServType.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServType.setDescription('Type of service.')
apIpv4RedundancyServStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4RedundancyServStatus.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyServStatus.setDescription('Row status.')
apIpv4RedundancyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 9, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4RedundancyEnabled.setStatus('current')
if mibBuilder.loadTexts: apIpv4RedundancyEnabled.setDescription('Is VIP Redundancy configured on this box.')
mibBuilder.exportSymbols("IPV4REDUNDANCY-MIB", apIpv4RedundancyVIPConfigTable=apIpv4RedundancyVIPConfigTable, apIpv4RedundancyVRStatus=apIpv4RedundancyVRStatus, apIpv4RedundancyVRConfigEntry=apIpv4RedundancyVRConfigEntry, apIpv4RedundancyEnabled=apIpv4RedundancyEnabled, apIpv4RedundancyIntVipAddress=apIpv4RedundancyIntVipAddress, apIpv4RedundancyIntMasterIP=apIpv4RedundancyIntMasterIP, ipv4RedundancyMib=ipv4RedundancyMib, apIpv4RedundancyIntLastChange=apIpv4RedundancyIntLastChange, apIpv4RedundancyAdPriority=apIpv4RedundancyAdPriority, apIpv4RedundancyIntStateChanges=apIpv4RedundancyIntStateChanges, apIpv4RedundancyVRState=apIpv4RedundancyVRState, PYSNMP_MODULE_ID=ipv4RedundancyMib, apIpv4RedundancyVRPreempt=apIpv4RedundancyVRPreempt, apIpv4RedundancyVIPStateChanges=apIpv4RedundancyVIPStateChanges, apIpv4RedundancyServConfigTable=apIpv4RedundancyServConfigTable, apIpv4RedundancyVIPConfigEntry=apIpv4RedundancyVIPConfigEntry, apIpv4RedundancyVIPVRID=apIpv4RedundancyVIPVRID, apIpv4RedundancyVRID=apIpv4RedundancyVRID, apIpv4RedundancyIntVRID=apIpv4RedundancyIntVRID, apIpv4RedundancyServName=apIpv4RedundancyServName, apIpv4RedundancyVIPSharedVIP=apIpv4RedundancyVIPSharedVIP, apIpv4RedundancyServIntAddr=apIpv4RedundancyServIntAddr, apIpv4RedundancyVRMasterIP=apIpv4RedundancyVRMasterIP, apIpv4RedundancyConfigPriority=apIpv4RedundancyConfigPriority, apIpv4RedundancyIntState=apIpv4RedundancyIntState, apIpv4RedundancyVIPState=apIpv4RedundancyVIPState, apIpv4RedundancyIntAddress=apIpv4RedundancyIntAddress, apIpv4RedundancyVIPMasterIP=apIpv4RedundancyVIPMasterIP, apIpv4RedundancyVRConfigTable=apIpv4RedundancyVRConfigTable, apIpv4RedundancyVIPStatus=apIpv4RedundancyVIPStatus, apIpv4RedundancyName=apIpv4RedundancyName, apIpv4RedundancyVIPRange=apIpv4RedundancyVIPRange, apIpv4RedundancyServConfigEntry=apIpv4RedundancyServConfigEntry, apIpv4RedundancyVRIntAddr=apIpv4RedundancyVRIntAddr, apIpv4RedundancyServVRID=apIpv4RedundancyServVRID, apIpv4RedundancyIntStatus=apIpv4RedundancyIntStatus, apIpv4RedundancyVRLastChange=apIpv4RedundancyVRLastChange, apIpv4RedundancyServStatus=apIpv4RedundancyServStatus, apIpv4RedundancyVIPIntAddress=apIpv4RedundancyVIPIntAddress, apIpv4RedundancyServType=apIpv4RedundancyServType, apIpv4RedundancyVIPLastChange=apIpv4RedundancyVIPLastChange, apIpv4RedundancyVIPAddress=apIpv4RedundancyVIPAddress, apIpv4RedundancyVRStateChanges=apIpv4RedundancyVRStateChanges, apIpv4RedundancyIntConfigTable=apIpv4RedundancyIntConfigTable, apIpv4RedundancyIntConfigEntry=apIpv4RedundancyIntConfigEntry)
