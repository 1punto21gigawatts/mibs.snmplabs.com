#
# PySNMP MIB module STN-VTI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-VTI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:11:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Unsigned32, ModuleIdentity, Gauge32, Bits, iso, Integer32, ObjectIdentity, NotificationType, IpAddress, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Unsigned32", "ModuleIdentity", "Gauge32", "Bits", "iso", "Integer32", "ObjectIdentity", "NotificationType", "IpAddress", "MibIdentifier", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnRouterVTI, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterVTI")
stnVti = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1))
if mibBuilder.loadTexts: stnVti.setLastUpdated('0011270000Z')
if mibBuilder.loadTexts: stnVti.setOrganization('Spring Tide Networks')
if mibBuilder.loadTexts: stnVti.setContactInfo(' Spring Tide Networks, Inc. Customer Service Postal: 3 Clock Tower Place Suite 200 Maynard, MA 01754 USA Tel: +1 978 298 2000 Email: custserv@springtidenet.com ')
if mibBuilder.loadTexts: stnVti.setDescription('This MIB module describes managed objects of Spring Tide Networks Virtual Tunnel Interface.')
stnVtiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1))
stnVtiTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1), )
if mibBuilder.loadTexts: stnVtiTable.setStatus('current')
if mibBuilder.loadTexts: stnVtiTable.setDescription('A list of VTI entries.')
stnVtiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1), ).setIndexNames((0, "STN-VTI-MIB", "stnVtiIfIndex"))
if mibBuilder.loadTexts: stnVtiEntry.setStatus('current')
if mibBuilder.loadTexts: stnVtiEntry.setDescription('Entry contains information about a particular VTI .')
stnVtiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVtiIfIndex.setDescription('The ifIndex of the VTI Layer 2 Interface.')
stnVtiViId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiViId.setStatus('current')
if mibBuilder.loadTexts: stnVtiViId.setDescription('The instance of the configuration record corresponding to this VTI.')
stnVtiName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiName.setStatus('current')
if mibBuilder.loadTexts: stnVtiName.setDescription('The name configured for this VTI.')
stnVtiPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiPolicy.setStatus('current')
if mibBuilder.loadTexts: stnVtiPolicy.setDescription('The name of the policy configured for this VTI.')
stnVtiState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiState.setStatus('current')
if mibBuilder.loadTexts: stnVtiState.setDescription('The current registration state of the VTI. A value of up indicates that the VTI is registered for a tunnel. A value of down indicates that the VTI is waiting for a tunnel to be assigned.')
stnVtiLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiLastError.setStatus('current')
if mibBuilder.loadTexts: stnVtiLastError.setDescription('Error code indicating the last error that occured on the interface')
stnVtiProxyTunnelSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiProxyTunnelSerialNum.setStatus('current')
if mibBuilder.loadTexts: stnVtiProxyTunnelSerialNum.setDescription('Serial number of proxy tunnel associated with this VTI.')
stnVtiMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiMTU.setStatus('current')
if mibBuilder.loadTexts: stnVtiMTU.setDescription(' The Maximum Transfer Unit of this VTI.')
stnVtiSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiSpeed.setStatus('current')
if mibBuilder.loadTexts: stnVtiSpeed.setDescription(' The interface speed of this VTI.')
stnVtiL2MuxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 9, 1, 1, 1, 1, 10), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVtiL2MuxIdx.setStatus('current')
if mibBuilder.loadTexts: stnVtiL2MuxIdx.setDescription('The interface index of of the L2MUX associated with this VTI.')
mibBuilder.exportSymbols("STN-VTI-MIB", stnVtiProxyTunnelSerialNum=stnVtiProxyTunnelSerialNum, stnVtiIfIndex=stnVtiIfIndex, stnVtiTable=stnVtiTable, stnVtiViId=stnVtiViId, stnVtiSpeed=stnVtiSpeed, PYSNMP_MODULE_ID=stnVti, stnVtiEntry=stnVtiEntry, stnVti=stnVti, stnVtiMTU=stnVtiMTU, stnVtiState=stnVtiState, stnVtiName=stnVtiName, stnVtiL2MuxIdx=stnVtiL2MuxIdx, stnVtiLastError=stnVtiLastError, stnVtiObjects=stnVtiObjects, stnVtiPolicy=stnVtiPolicy)
