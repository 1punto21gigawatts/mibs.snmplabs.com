#
# PySNMP MIB module CISCO-UDLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UDLDP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:14:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifName, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, NotificationType, ObjectIdentity, Gauge32, iso, ModuleIdentity, MibIdentifier, Integer32, IpAddress, Bits, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "MibIdentifier", "Integer32", "IpAddress", "Bits", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoUdldpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 118))
ciscoUdldpMIB.setRevisions(('2009-11-09 09:00', '2007-11-27 00:00', '2003-02-21 00:00', '2002-10-10 00:00', '2000-04-10 00:00', '1998-11-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoUdldpMIB.setRevisionsDescriptions(('Add ciscoUdldpFastHelloGroup, and ciscoUdldpFastHelloNotificationGroup.', 'Added new object cudldpHelloIntervalExt.', "Changed enumerated integer labels in the cudldpInterfaceOperStatus object from 'bidirectional' to 'biDirectional' and 'notapplicable' to 'notApplicable'.", 'Added cudldpGlobalMode, cudldpInterfaceAdminMode and cudldpInterfaceOperMode objects. Removed default values for cudldpGlobalEnable, cudldpHelloInterval and udldpInterfaceEnable. Deprecated cudldpGlobalEnable and cudldpInterfaceEnable cudldpInterfaceAggressiveMode objects.', 'Added two UDLDP AggressiveMode objects', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoUdldpMIB.setLastUpdated('200911090900Z')
if mibBuilder.loadTexts: ciscoUdldpMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoUdldpMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoUdldpMIB.setDescription('Cisco Uni Direction Link Detection Protocol MIB')
ciscoUdldpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 0))
ciscoUdldpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 1))
cudldpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1))
cudldpInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2))
cudldpFastHello = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 3))
cudldpGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpGlobalEnable.setStatus('deprecated')
if mibBuilder.loadTexts: cudldpGlobalEnable.setDescription('This variable is used to enable(true)/disable(false) Uni Direction Link Detection Protocol on the device. cudldpGlobalEnable is deprecated and replaced with cudldpGlobalMode.')
cudldpHelloInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 90))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpHelloInterval.setStatus('current')
if mibBuilder.loadTexts: cudldpHelloInterval.setDescription('Indicates interval in seconds at which each port sends a hello packet to all of its neighbors at steady state when the link has been identified as bidirectional. For platforms which support cudldpHelloIntervalExt, when cudldpHelloIntervalExt reports a value less than the minimum value reportable by cudldpHelloInterval, then cudldpHelloInterval should report its minimum value of 7.')
cudldpGlobalMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("aggressive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpGlobalMode.setStatus('current')
if mibBuilder.loadTexts: cudldpGlobalMode.setDescription('Indicates the mode of UDLDP feature on the device. enable -- Uni Direction Link Detection Protocol is enabled on the device. disable -- Uni Directional Link Detection Protocol is disabled on the device. aggresive -- Uni Directional Link Detection protocol is enabled in aggressive mode on the device.')
cudldpHelloIntervalExt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 90))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpHelloIntervalExt.setStatus('current')
if mibBuilder.loadTexts: cudldpHelloIntervalExt.setDescription('Indicates interval in seconds at which each port sends a hello packet to all of its neighbors at steady state when the link has been identified as bidirectional.')
cudldpFastHelloLinkFailRptNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpFastHelloLinkFailRptNotifEnable.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloLinkFailRptNotifEnable.setDescription("This object specifies whether cudldpFastHelloLinkFailRptNotification is generated by the system. Setting this object value to 'true' will enable generation of cudldpFastHelloLinkFailRptNotification. Seting this object value to 'false' will disable generation of cudldpFastHelloLinkFailRptNotification.")
cudldpFastHelloStatusChangeNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpFastHelloStatusChangeNotifEnable.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloStatusChangeNotifEnable.setDescription("This object specifies whether cudldpFastHelloStatusChangeNotification is generated by the system. Setting this object value to 'true' will enable generation of cudldpFastHelloStatusChangeNotification. Seting this object value to 'false' will disable generation of cudldpFastHelloStatusChangeNotification.")
cudldpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1), )
if mibBuilder.loadTexts: cudldpInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: cudldpInterfaceTable.setDescription("The (conceptual) table containing the status of UDLDP on the device's interfaces.")
cudldpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cudldpInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: cudldpInterfaceEntry.setDescription('A conceptual row of cudldpInterfaceTable. An entry exists for each interface that supports UDLDP.')
cudldpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpInterfaceEnable.setStatus('deprecated')
if mibBuilder.loadTexts: cudldpInterfaceEnable.setDescription("This variable is used to enable UDLDP on this interface. If cudldpGlobalEnable is set to 'false' then this variable has no effect. cudldpInterfaceEnable is deprecated and replaced with cudldpInterfaceAdminMode.")
cudldpInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("shutdown", 1), ("indeterminant", 2), ("biDirectional", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpInterfaceOperStatus.setStatus('current')
if mibBuilder.loadTexts: cudldpInterfaceOperStatus.setDescription("This mib object contains the following values, which has the meaning as: 'shutdown' - An Uni-Direction link has been detected and the port has been disabled. 'indeterminant' - Uni-Direction Link Detection protocol has not collected enough information to determine if the link is bi directional or not. 'biDirectional' - A bi directional link has been detected. 'notApplicable' - Uni-Direction Link Detection Protocol is disabled.")
cudldpInterfaceAggressiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpInterfaceAggressiveMode.setStatus('deprecated')
if mibBuilder.loadTexts: cudldpInterfaceAggressiveMode.setDescription("An indication of whether the UDLDP aggressive mode is enabled on this interface. If the aggressive mode is set to 'true', an active port may be shutdown in case of the abrupt loss of its neighbor(s) because the loss of communication (heartbeat) with the neighbor(s) is assumed to be caused by a fault; thus, the cudldpInterfaceOperStatus of the active port will be 'shutdown'. Instead, when the aggressive mode is set to 'false', and if there is a loss of communication with the neighbor(s), then the cudldpInterfaceOperStatus of the active port will be 'indeterminant'. Therefore, this mode is recommended only for links that don't use hubs, media converters or similar devices, and where the unexpected loss of the port's neighbor is not an admissible condition. cudldpInterfaceAggressiveMode is deprecated and replaced with cudldpInterfaceAdminMode.")
cudldpInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("aggressive", 3), ("default", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpInterfaceAdminMode.setStatus('current')
if mibBuilder.loadTexts: cudldpInterfaceAdminMode.setDescription('Indicates the Administrative mode of Uni Direction Link Detection Protocol Feature configured on this interface. enable -- Uni Direction Link Detection Protocol is enabled on this interface. disable -- Uni Direction Link Detection Protocol is disabled on this interface. aggressive -- Uni Direction Link Detection protocol is enabled in aggressive mode on this interface. default -- Whether the Uni Directiona Link Detection protocol is enabled or not on this interface depends on the object value of cudldpGlobalMode.')
cudldpInterfaceOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("aggressive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpInterfaceOperMode.setStatus('current')
if mibBuilder.loadTexts: cudldpInterfaceOperMode.setDescription('Indicates the operational mode of Uni Direction Link Detection Protocol Feature on this interface.')
cudldpIfFastHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 6), Unsigned32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpIfFastHelloInterval.setStatus('current')
if mibBuilder.loadTexts: cudldpIfFastHelloInterval.setDescription('This object specifies the fast hello interval at which each port sends a hello packet to all of its neighbors at steady state. By setting this object to a positive value, this interface is enabled to send UDLD hello packet at a fast interval as specified by this object value. Setting this object to zero value, this interface is disabled to send UDLD hello packet at fast interval. Instead, the interface will send the UDLD hello packet at the interval as specified by cudldpHelloInterval object (or cudldpHelloIntervalExt if a platform supports cudldpHelloIntervalExt).')
cudldpIfOperHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpIfOperHelloInterval.setStatus('current')
if mibBuilder.loadTexts: cudldpIfOperHelloInterval.setDescription('This object indicates the operational interval value at which each port sends a hello packet to all of its neighbors at steady state.')
cudldpIfFastHelloOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("operational", 1), ("notOperational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpIfFastHelloOperStatus.setStatus('current')
if mibBuilder.loadTexts: cudldpIfFastHelloOperStatus.setDescription('This object indicates the operational status of fast hello UDLD at this interface.')
cudldpFastHelloErrorReportEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cudldpFastHelloErrorReportEnable.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloErrorReportEnable.setDescription("This object specifies whether error reporting is enabled or disabled when a fast hello UDLD link error is detected. 'true' specifies that when a fast hello UDLD link error is detected, the link remains in its current state and a cudldpFastHelloLinkFailRptNotification event will be triggered. 'false' specifies that when a fast hello UDLD link error is detected, the link will be automatically put in error-disable state and no error report will be generated.")
cudldpFastHelloMaxPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpFastHelloMaxPorts.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloMaxPorts.setDescription('This object indicates the maximum number of interfaces that fast hello UDLD can be enabled to run. When the value of cudldpFastHelloConfigPorts reaches this object value, enabling of fast hello UDLDP on additional interface will fail.')
cudldpFastHelloConfigPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpFastHelloConfigPorts.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloConfigPorts.setDescription('This object indicates the total number of interfaces that fast hello UDLD is currently enabled.')
cudldpFastHelloOperationalPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 118, 1, 3, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cudldpFastHelloOperationalPorts.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloOperationalPorts.setDescription('This object indicates the number of interfaces that fast hello UDLD is currently enabled and in operational state.')
cudldpFastHelloLinkFailRptNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 118, 0, 1)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: cudldpFastHelloLinkFailRptNotification.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloLinkFailRptNotification.setDescription("This notification is generated when UDLDP detects a link failure on a fast hello UDLD link and the value of cudldpFastHelloErrorReportEnable is 'true'. ifName identifies the interface where the link failure is detected.")
cudldpFastHelloStatusChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 118, 0, 2)).setObjects(("CISCO-UDLDP-MIB", "cudldpHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpIfFastHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpIfOperHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpIfFastHelloOperStatus"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: cudldpFastHelloStatusChangeNotification.setStatus('current')
if mibBuilder.loadTexts: cudldpFastHelloStatusChangeNotification.setDescription('This notification is generated when there is a change in the value of cudldpIfFastHelloOperStatus object. cudldpHelloInterval provides the hello interval configured at the device level. cudldpIfFastHelloInterval provides the fast hello interval configured at the interface level. cudldpIfOperHelloInterval indicates the hello interval that is currently operational at this interface. cudldpIfFastHelloOperStatus indicates the operational status of UDLD fast hello at this interface. ifName identifies the interface that trigger the generation of this notification.')
ciscoUdldpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 3))
ciscoUdldpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1))
ciscoUdldpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2))
ciscoUdldpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1, 1)).setObjects(("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBCompliance = ciscoUdldpMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpMIBCompliance.setDescription('The compliance statement for the CISCO-UDLDP-MIB.')
ciscoUdldpMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1, 2)).setObjects(("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup"), ("CISCO-UDLDP-MIB", "ciscoUdldpAggreModeOptionalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBComplianceRev1 = ciscoUdldpMIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpMIBComplianceRev1.setDescription('The compliance statement for the CISCO-UDLDP-MIB.')
ciscoUdldpMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1, 3)).setObjects(("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBComplianceRev2 = ciscoUdldpMIBComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpMIBComplianceRev2.setDescription('The compliance statement for the CISCO-UDLDP-MIB.')
ciscoUdldpMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1, 4)).setObjects(("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup2"), ("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBComplianceRev3 = ciscoUdldpMIBComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpMIBComplianceRev3.setDescription('The compliance statement for the CISCO-UDLDP-MIB. This compliance statement is deprecated and superceded by ciscoUdldpMIBComplianceRev4.')
ciscoUdldpMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 1, 5)).setObjects(("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup2"), ("CISCO-UDLDP-MIB", "ciscoUdldpMIBGroup3"), ("CISCO-UDLDP-MIB", "ciscoUdldpFastHelloGroup"), ("CISCO-UDLDP-MIB", "ciscoUdldpFastHelloNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBComplianceRev4 = ciscoUdldpMIBComplianceRev4.setStatus('current')
if mibBuilder.loadTexts: ciscoUdldpMIBComplianceRev4.setDescription('The compliance statement for the CISCO-UDLDP-MIB.')
ciscoUdldpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 1)).setObjects(("CISCO-UDLDP-MIB", "cudldpGlobalEnable"), ("CISCO-UDLDP-MIB", "cudldpInterfaceEnable"), ("CISCO-UDLDP-MIB", "cudldpInterfaceOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBGroup = ciscoUdldpMIBGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpMIBGroup.setDescription('A collection of objects for use with the Uni Direction Link Detection Protocol.')
ciscoUdldpAggreModeOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 2)).setObjects(("CISCO-UDLDP-MIB", "cudldpInterfaceAggressiveMode"), ("CISCO-UDLDP-MIB", "cudldpHelloInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpAggreModeOptionalGroup = ciscoUdldpAggreModeOptionalGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoUdldpAggreModeOptionalGroup.setDescription('A collection of optional objects providing UDLDP aggressive mode configuration information.')
ciscoUdldpMIBGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 3)).setObjects(("CISCO-UDLDP-MIB", "cudldpGlobalMode"), ("CISCO-UDLDP-MIB", "cudldpInterfaceAdminMode"), ("CISCO-UDLDP-MIB", "cudldpInterfaceOperMode"), ("CISCO-UDLDP-MIB", "cudldpHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpInterfaceOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBGroup2 = ciscoUdldpMIBGroup2.setStatus('current')
if mibBuilder.loadTexts: ciscoUdldpMIBGroup2.setDescription('A collection of objects providing Uni Direction Link Detection Protocol information.')
ciscoUdldpMIBGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 4)).setObjects(("CISCO-UDLDP-MIB", "cudldpHelloIntervalExt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpMIBGroup3 = ciscoUdldpMIBGroup3.setStatus('current')
if mibBuilder.loadTexts: ciscoUdldpMIBGroup3.setDescription('A collection of objects providing Uni Direction Link Detection Protocol information.')
ciscoUdldpFastHelloGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 5)).setObjects(("CISCO-UDLDP-MIB", "cudldpIfFastHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpIfOperHelloInterval"), ("CISCO-UDLDP-MIB", "cudldpIfFastHelloOperStatus"), ("CISCO-UDLDP-MIB", "cudldpFastHelloErrorReportEnable"), ("CISCO-UDLDP-MIB", "cudldpFastHelloLinkFailRptNotifEnable"), ("CISCO-UDLDP-MIB", "cudldpFastHelloStatusChangeNotifEnable"), ("CISCO-UDLDP-MIB", "cudldpFastHelloMaxPorts"), ("CISCO-UDLDP-MIB", "cudldpFastHelloConfigPorts"), ("CISCO-UDLDP-MIB", "cudldpFastHelloOperationalPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpFastHelloGroup = ciscoUdldpFastHelloGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUdldpFastHelloGroup.setDescription('A collection of objects which provides fast hello UDLD information in the device.')
ciscoUdldpFastHelloNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 118, 3, 2, 6)).setObjects(("CISCO-UDLDP-MIB", "cudldpFastHelloLinkFailRptNotification"), ("CISCO-UDLDP-MIB", "cudldpFastHelloStatusChangeNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUdldpFastHelloNotificationGroup = ciscoUdldpFastHelloNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUdldpFastHelloNotificationGroup.setDescription('A collection of notifications which provides fast hello UDLD notifications support in the device.')
mibBuilder.exportSymbols("CISCO-UDLDP-MIB", ciscoUdldpMIBNotifs=ciscoUdldpMIBNotifs, ciscoUdldpMIBCompliances=ciscoUdldpMIBCompliances, ciscoUdldpMIBComplianceRev2=ciscoUdldpMIBComplianceRev2, cudldpFastHelloLinkFailRptNotification=cudldpFastHelloLinkFailRptNotification, cudldpInterface=cudldpInterface, ciscoUdldpMIBObjects=ciscoUdldpMIBObjects, PYSNMP_MODULE_ID=ciscoUdldpMIB, cudldpGlobal=cudldpGlobal, cudldpFastHelloOperationalPorts=cudldpFastHelloOperationalPorts, cudldpInterfaceAggressiveMode=cudldpInterfaceAggressiveMode, ciscoUdldpMIB=ciscoUdldpMIB, cudldpInterfaceAdminMode=cudldpInterfaceAdminMode, ciscoUdldpMIBGroup3=ciscoUdldpMIBGroup3, ciscoUdldpMIBGroup=ciscoUdldpMIBGroup, ciscoUdldpFastHelloGroup=ciscoUdldpFastHelloGroup, ciscoUdldpAggreModeOptionalGroup=ciscoUdldpAggreModeOptionalGroup, cudldpGlobalMode=cudldpGlobalMode, cudldpFastHello=cudldpFastHello, cudldpInterfaceEntry=cudldpInterfaceEntry, ciscoUdldpMIBConformance=ciscoUdldpMIBConformance, cudldpFastHelloConfigPorts=cudldpFastHelloConfigPorts, ciscoUdldpMIBGroup2=ciscoUdldpMIBGroup2, cudldpInterfaceOperStatus=cudldpInterfaceOperStatus, ciscoUdldpMIBCompliance=ciscoUdldpMIBCompliance, cudldpFastHelloMaxPorts=cudldpFastHelloMaxPorts, cudldpFastHelloErrorReportEnable=cudldpFastHelloErrorReportEnable, ciscoUdldpMIBComplianceRev3=ciscoUdldpMIBComplianceRev3, cudldpFastHelloStatusChangeNotifEnable=cudldpFastHelloStatusChangeNotifEnable, cudldpIfFastHelloInterval=cudldpIfFastHelloInterval, ciscoUdldpMIBGroups=ciscoUdldpMIBGroups, cudldpInterfaceOperMode=cudldpInterfaceOperMode, ciscoUdldpFastHelloNotificationGroup=ciscoUdldpFastHelloNotificationGroup, cudldpGlobalEnable=cudldpGlobalEnable, cudldpHelloIntervalExt=cudldpHelloIntervalExt, cudldpIfOperHelloInterval=cudldpIfOperHelloInterval, cudldpFastHelloLinkFailRptNotifEnable=cudldpFastHelloLinkFailRptNotifEnable, cudldpIfFastHelloOperStatus=cudldpIfFastHelloOperStatus, cudldpFastHelloStatusChangeNotification=cudldpFastHelloStatusChangeNotification, ciscoUdldpMIBComplianceRev1=ciscoUdldpMIBComplianceRev1, cudldpHelloInterval=cudldpHelloInterval, ciscoUdldpMIBComplianceRev4=ciscoUdldpMIBComplianceRev4, cudldpInterfaceTable=cudldpInterfaceTable, cudldpInterfaceEnable=cudldpInterfaceEnable)
