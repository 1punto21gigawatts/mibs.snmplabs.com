#
# PySNMP MIB module CISCO-AAL5-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-AAL5-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:49:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
aal5VccEntry, = mibBuilder.importSymbols("ATM-MIB", "aal5VccEntry")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Counter32, Counter64, TimeTicks, NotificationType, ObjectIdentity, Bits, Unsigned32, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Counter32", "Counter64", "TimeTicks", "NotificationType", "ObjectIdentity", "Bits", "Unsigned32", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoAal5MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 66))
ciscoAal5MIB.setRevisions(('2003-09-22 00:00', '2002-10-17 00:00', '1996-11-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoAal5MIB.setRevisionsDescriptions(('Added following objects in cAal5VccTable: cAal5VccHCInPkts, cAal5VccHCOutPkts, cAal5VccHCInOctets, cAal5VccHCOutOctets', 'Latest version of this MIB module with extended support for vc drop stats.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoAal5MIB.setLastUpdated('200309220000Z')
if mibBuilder.loadTexts: ciscoAal5MIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoAal5MIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-atm@cisco.com')
if mibBuilder.loadTexts: ciscoAal5MIB.setDescription('Cisco Enterprise AAL5 MIB file that provide AAL5 specific information that are either excluded by RFC 1695 or specific to Cisco product.')
ciscoAal5MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 66, 1))
cAal5Connections = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1))
cAal5VccTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1), )
if mibBuilder.loadTexts: cAal5VccTable.setStatus('current')
if mibBuilder.loadTexts: cAal5VccTable.setDescription('This table contains AAL5 VCC performance parameters beyond that provided by aal5VccEntry defined in RFC1695.')
cAal5VccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1), )
aal5VccEntry.registerAugmentions(("CISCO-AAL5-MIB", "cAal5VccEntry"))
cAal5VccEntry.setIndexNames(*aal5VccEntry.getIndexNames())
if mibBuilder.loadTexts: cAal5VccEntry.setStatus('current')
if mibBuilder.loadTexts: cAal5VccEntry.setDescription('This list contains the additional AAL5 VCC performance parameters beyond that provided by aal5VccEntry defined in RFC1695.')
cAal5VccInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccInPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccInPkts.setDescription('The number of AAL5 CPCS PDUs received on this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccOutPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccOutPkts.setDescription('The number of AAL5 CPCS PDUs transmitted on this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 3), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccInOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccInOctets.setDescription('The number of AAL5 CPCS PDU octets received on this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 4), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccOutOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccOutOctets.setDescription('The number of AAL5 CPCS PDU octets transmitted on this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccInDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccInDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccInDroppedPkts.setDescription('The number of AAL5 CPCS PDUs dropped at the receive side of this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccOutDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccOutDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccOutDroppedPkts.setDescription('The number of AAL5 CPCS PDUs dropped at the transmit side of this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccInDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccInDroppedOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccInDroppedOctets.setDescription('The number of AAL5 CPCS PDU Octets dropped at the receive side of this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccOutDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccOutDroppedOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccOutDroppedOctets.setDescription('The number of AAL5 CPCS PDU Octets dropped at the transmit side of this AAL5 VCC at the interface associated with an AAL5 entity.')
cAal5VccHCInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccHCInPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccHCInPkts.setDescription('This is 64bit (High Capacity) version of cAal5VccInPkts counters.')
cAal5VccHCOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccHCOutPkts.setStatus('current')
if mibBuilder.loadTexts: cAal5VccHCOutPkts.setDescription('This is 64bit (High Capacity) version of cAal5VccOutPkts counters.')
cAal5VccHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccHCInOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccHCInOctets.setDescription('This is 64bit (High Capacity) version of cAal5VccInOctets counters.')
cAal5VccHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 66, 1, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAal5VccHCOutOctets.setStatus('current')
if mibBuilder.loadTexts: cAal5VccHCOutOctets.setDescription('This is 64bit (High Capacity) version of cAal5VccOutOctets counters.')
ciscoAal5MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 66, 3))
ciscoAal5MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 1))
ciscoAal5MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 2))
ciscoAal5MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 1, 1)).setObjects(("CISCO-AAL5-MIB", "ciscoAal5MIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5MIBCompliance = ciscoAal5MIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoAal5MIBCompliance.setDescription('The compliance statement for entities which implement this Cisco AAL5 MIB.')
ciscoAal5MIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 1, 2)).setObjects(("CISCO-AAL5-MIB", "ciscoAal5MIBGroup"), ("CISCO-AAL5-MIB", "ciscoAal5VcStatsExtMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5MIBComplianceRev1 = ciscoAal5MIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoAal5MIBComplianceRev1.setDescription('The compliance statement for entities which implement this Cisco AAL5 MIB.')
ciscoAal5MIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 1, 3)).setObjects(("CISCO-AAL5-MIB", "ciscoAal5MIBGroup"), ("CISCO-AAL5-MIB", "ciscoAal5VcStatsExtMIBGroup"), ("CISCO-AAL5-MIB", "ciscoAal5MIBHCGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5MIBComplianceRev2 = ciscoAal5MIBComplianceRev2.setStatus('current')
if mibBuilder.loadTexts: ciscoAal5MIBComplianceRev2.setDescription('The compliance statement for entities which implement 64bit counters for Vcc received/transmit PDU and octets objects for Cisco AAL5 MIB.')
ciscoAal5MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 2, 1)).setObjects(("CISCO-AAL5-MIB", "cAal5VccInPkts"), ("CISCO-AAL5-MIB", "cAal5VccOutPkts"), ("CISCO-AAL5-MIB", "cAal5VccInOctets"), ("CISCO-AAL5-MIB", "cAal5VccOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5MIBGroup = ciscoAal5MIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoAal5MIBGroup.setDescription('A collection of objects providing AAL5 related parameters.')
ciscoAal5VcStatsExtMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 2, 2)).setObjects(("CISCO-AAL5-MIB", "cAal5VccInDroppedPkts"), ("CISCO-AAL5-MIB", "cAal5VccOutDroppedPkts"), ("CISCO-AAL5-MIB", "cAal5VccInDroppedOctets"), ("CISCO-AAL5-MIB", "cAal5VccOutDroppedOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5VcStatsExtMIBGroup = ciscoAal5VcStatsExtMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoAal5VcStatsExtMIBGroup.setDescription('A collection of objects providing extension to AAL5 related vc drop statistics')
ciscoAal5MIBHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 66, 3, 2, 3)).setObjects(("CISCO-AAL5-MIB", "cAal5VccHCInPkts"), ("CISCO-AAL5-MIB", "cAal5VccHCOutPkts"), ("CISCO-AAL5-MIB", "cAal5VccHCInOctets"), ("CISCO-AAL5-MIB", "cAal5VccHCOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAal5MIBHCGroup = ciscoAal5MIBHCGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoAal5MIBHCGroup.setDescription('A collection of objects providing 64bit AAL5 related parameters.')
mibBuilder.exportSymbols("CISCO-AAL5-MIB", cAal5VccEntry=cAal5VccEntry, ciscoAal5MIBComplianceRev1=ciscoAal5MIBComplianceRev1, ciscoAal5MIBHCGroup=ciscoAal5MIBHCGroup, cAal5VccInDroppedPkts=cAal5VccInDroppedPkts, cAal5VccTable=cAal5VccTable, cAal5VccInOctets=cAal5VccInOctets, ciscoAal5MIBCompliances=ciscoAal5MIBCompliances, ciscoAal5MIB=ciscoAal5MIB, cAal5VccOutPkts=cAal5VccOutPkts, cAal5Connections=cAal5Connections, cAal5VccHCInOctets=cAal5VccHCInOctets, ciscoAal5MIBGroup=ciscoAal5MIBGroup, PYSNMP_MODULE_ID=ciscoAal5MIB, cAal5VccHCInPkts=cAal5VccHCInPkts, cAal5VccOutOctets=cAal5VccOutOctets, cAal5VccOutDroppedOctets=cAal5VccOutDroppedOctets, ciscoAal5VcStatsExtMIBGroup=ciscoAal5VcStatsExtMIBGroup, cAal5VccHCOutOctets=cAal5VccHCOutOctets, ciscoAal5MIBConformance=ciscoAal5MIBConformance, ciscoAal5MIBGroups=ciscoAal5MIBGroups, cAal5VccInPkts=cAal5VccInPkts, ciscoAal5MIBComplianceRev2=ciscoAal5MIBComplianceRev2, cAal5VccInDroppedOctets=cAal5VccInDroppedOctets, cAal5VccOutDroppedPkts=cAal5VccOutDroppedPkts, cAal5VccHCOutPkts=cAal5VccHCOutPkts, ciscoAal5MIBObjects=ciscoAal5MIBObjects, ciscoAal5MIBCompliance=ciscoAal5MIBCompliance)
