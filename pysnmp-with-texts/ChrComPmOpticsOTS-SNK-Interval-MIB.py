#
# PySNMP MIB module ChrComPmOpticsOTS-SNK-Interval-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmOpticsOTS-SNK-Interval-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:35:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmOptics, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmOptics")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, NotificationType, Counter64, iso, Bits, Counter32, Integer32, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Counter64", "iso", "Bits", "Counter32", "Integer32", "IpAddress", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
chrComPmOpticsOTS_SNK_IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2), ).setLabel("chrComPmOpticsOTS-SNK-IntervalTable")
if mibBuilder.loadTexts: chrComPmOpticsOTS_SNK_IntervalTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsOTS_SNK_IntervalTable.setDescription('')
chrComPmOpticsOTS_SNK_IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1), ).setLabel("chrComPmOpticsOTS-SNK-IntervalEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"), (0, "ChrComPmOpticsOTS-SNK-Interval-MIB", "chrComPmOpticsIntervalNumber"))
if mibBuilder.loadTexts: chrComPmOpticsOTS_SNK_IntervalEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsOTS_SNK_IntervalEntry.setDescription('')
chrComPmOpticsIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsIntervalNumber.setDescription('')
chrComPmOpticsSuspectedIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSuspectedIntrvl.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSuspectedIntrvl.setDescription('a flag marking the validity of the entry data')
chrComPmOpticsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsElapsedTime.setDescription('measurment duration, in 0.01 seconds')
chrComPmOpticsSuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSuppressedIntrvls.setDescription('invalid for first version. indicates how many all-zero periods have passed.')
chrComPmOpticsORS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsORS.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsORS.setDescription('')
chrComPmOpticsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSES.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSES.setDescription('')
chrComPmOpticsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsUAS.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsUAS.setDescription('')
chrComPmOpticsMean = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMean.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMean.setDescription('')
chrComPmOpticsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMax.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMax.setDescription('')
chrComPmOpticsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMin.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMin.setDescription('')
chrComPmOpticsSD = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSD.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSD.setDescription('')
mibBuilder.exportSymbols("ChrComPmOpticsOTS-SNK-Interval-MIB", chrComPmOpticsSD=chrComPmOpticsSD, chrComPmOpticsMin=chrComPmOpticsMin, chrComPmOpticsORS=chrComPmOpticsORS, chrComPmOpticsSuspectedIntrvl=chrComPmOpticsSuspectedIntrvl, chrComPmOpticsSuppressedIntrvls=chrComPmOpticsSuppressedIntrvls, chrComPmOpticsElapsedTime=chrComPmOpticsElapsedTime, chrComPmOpticsUAS=chrComPmOpticsUAS, chrComPmOpticsMean=chrComPmOpticsMean, chrComPmOpticsMax=chrComPmOpticsMax, chrComPmOpticsIntervalNumber=chrComPmOpticsIntervalNumber, chrComPmOpticsOTS_SNK_IntervalEntry=chrComPmOpticsOTS_SNK_IntervalEntry, chrComPmOpticsSES=chrComPmOpticsSES, chrComPmOpticsOTS_SNK_IntervalTable=chrComPmOpticsOTS_SNK_IntervalTable)
