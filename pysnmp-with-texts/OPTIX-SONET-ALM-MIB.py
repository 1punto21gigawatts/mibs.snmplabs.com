#
# PySNMP MIB module OPTIX-SONET-ALM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-ALM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:35:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
optixCommonSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixCommonSonet")
DirectionType, LocationType, AlarmEventType, AlmDataNtfcnCdeType, MOD2Type, AlmDataSrvEffType = mibBuilder.importSymbols("OPTIX-SONET-TC-MIB", "DirectionType", "LocationType", "AlarmEventType", "AlmDataNtfcnCdeType", "MOD2Type", "AlmDataSrvEffType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Counter32, MibIdentifier, ModuleIdentity, Integer32, Unsigned32, Bits, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "MibIdentifier", "ModuleIdentity", "Integer32", "Unsigned32", "Bits", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "IpAddress", "NotificationType")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
optixSonetAlarm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10))
optixSonetAlarm.setRevisions(('2006-02-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: optixSonetAlarm.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: optixSonetAlarm.setLastUpdated('200602250000Z')
if mibBuilder.loadTexts: optixSonetAlarm.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: optixSonetAlarm.setContactInfo('R&D Building Huawei Technologies Co., Ltd. Bantian, Longgang District Shenzhen, P. R. China http://www.huawei.com Zip:518129 E-mail:support@huawei.com ')
if mibBuilder.loadTexts: optixSonetAlarm.setDescription('Description.')
almData = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10))
almDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10), )
if mibBuilder.loadTexts: almDataTable.setStatus('current')
if mibBuilder.loadTexts: almDataTable.setDescription('Alarm data table')
almDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "almDataMOD2"), (0, "OPTIX-SONET-ALM-MIB", "almDataSlot"), (0, "OPTIX-SONET-ALM-MIB", "almDataPort"), (0, "OPTIX-SONET-ALM-MIB", "almDataPath"), (0, "OPTIX-SONET-ALM-MIB", "almDataVT"), (0, "OPTIX-SONET-ALM-MIB", "almDataNtfcnCde"), (0, "OPTIX-SONET-ALM-MIB", "almDataName"), (0, "OPTIX-SONET-ALM-MIB", "almDataSrvEff"), (0, "OPTIX-SONET-ALM-MIB", "almDataLocation"), (0, "OPTIX-SONET-ALM-MIB", "almDataDirection"))
if mibBuilder.loadTexts: almDataEntry.setStatus('current')
if mibBuilder.loadTexts: almDataEntry.setDescription('Alarm data table')
almDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataMOD2.setStatus('current')
if mibBuilder.loadTexts: almDataMOD2.setDescription('Signal mode.')
almDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataSlot.setStatus('current')
if mibBuilder.loadTexts: almDataSlot.setDescription('Slot number. This will indicate what is the slot of the object which raised this alarm. If not relevant to the alarm, will be zero.')
almDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataPort.setStatus('current')
if mibBuilder.loadTexts: almDataPort.setDescription('Port Number. This will indicate what is the Port of the object which raised this alarm. If not relevant to the alarm, will be zero.')
almDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataPath.setStatus('current')
if mibBuilder.loadTexts: almDataPath.setDescription('Path number. This will indicate what is the Path of the object which raised this alarm. If not relevant to the alarm, will be zero.')
almDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataVT.setStatus('current')
if mibBuilder.loadTexts: almDataVT.setDescription('VT path number. This will indicate what is the VT path of the object which raised this alarm. If not relevant to the alarm, will be zero.')
almDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 6), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataNtfcnCde.setStatus('current')
if mibBuilder.loadTexts: almDataNtfcnCde.setDescription('The notification code of the retrieved alarm. Only CR|MJ|MN will be represented here.')
almDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 7), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataName.setStatus('current')
if mibBuilder.loadTexts: almDataName.setDescription('Alarm name.')
almDataSrvEff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 8), AlmDataSrvEffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataSrvEff.setStatus('current')
if mibBuilder.loadTexts: almDataSrvEff.setDescription('The effect on service caused by the alarm condition. Only NSA(Nonservice-effecting)|SA(Service-effecting) will be represented here.')
almDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 9), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataLocation.setStatus('current')
if mibBuilder.loadTexts: almDataLocation.setDescription('Alarm location. Only NEND(Near end)|FEND(Far end)|ALL will be represented here.')
almDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 10), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDirection.setStatus('current')
if mibBuilder.loadTexts: almDataDirection.setDescription('Alarm direction. Only RCV(Receive direction)|TRMT(Transmit direction)|ALL will be represented here.')
almDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDateTime.setStatus('current')
if mibBuilder.loadTexts: almDataDateTime.setDescription('Alarm date and time.')
almDataDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDesc.setStatus('current')
if mibBuilder.loadTexts: almDataDesc.setDescription('Text message.')
almDataAiddet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataAiddet.setStatus('current')
if mibBuilder.loadTexts: almDataAiddet.setDescription('Supplementary equipment identification.')
condDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20), )
if mibBuilder.loadTexts: condDataTable.setStatus('current')
if mibBuilder.loadTexts: condDataTable.setDescription('MOD2 condition table.')
condDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "condDataMOD2"), (0, "OPTIX-SONET-ALM-MIB", "condDataSlot"), (0, "OPTIX-SONET-ALM-MIB", "condDataPort"), (0, "OPTIX-SONET-ALM-MIB", "condDataPath"), (0, "OPTIX-SONET-ALM-MIB", "condDataVT"), (0, "OPTIX-SONET-ALM-MIB", "condDataName"), (0, "OPTIX-SONET-ALM-MIB", "condDataLocation"), (0, "OPTIX-SONET-ALM-MIB", "condDataDirection"))
if mibBuilder.loadTexts: condDataEntry.setStatus('current')
if mibBuilder.loadTexts: condDataEntry.setDescription('MOD2 condition table.')
condDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataMOD2.setStatus('current')
if mibBuilder.loadTexts: condDataMOD2.setDescription('Signal mode.')
condDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataSlot.setStatus('current')
if mibBuilder.loadTexts: condDataSlot.setDescription('Slot number. This will indicate what is the slot of the object which raised this alarm. If not relevant to the alarm, will be zero.')
condDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataPort.setStatus('current')
if mibBuilder.loadTexts: condDataPort.setDescription('Port number. This will indicate what is the Port of the object which raised this alarm. If not relevant to the alarm, will be zero.')
condDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataPath.setStatus('current')
if mibBuilder.loadTexts: condDataPath.setDescription('Path number.')
condDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataVT.setStatus('current')
if mibBuilder.loadTexts: condDataVT.setDescription('VT path number. This will indicate what is the VT path of the object which raised this alarm. If not relevant to the alarm, will be zero.')
condDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 6), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataName.setStatus('current')
if mibBuilder.loadTexts: condDataName.setDescription('Condition name.')
condDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataLocation.setStatus('current')
if mibBuilder.loadTexts: condDataLocation.setDescription('Alarm location. Only NEND(Near end)|FEND(Far end)|ALL will be represented here.')
condDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDirection.setStatus('current')
if mibBuilder.loadTexts: condDataDirection.setDescription('Alarm direction. Only RCV(Receive direction)|TRMT(Transmit direction)|ALL will be represented here.')
condDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 9), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataNtfcnCde.setStatus('current')
if mibBuilder.loadTexts: condDataNtfcnCde.setDescription('The notification code of the retrieved alarm. Only NA|NR will be represented here.')
condDataSrvEff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 10), AlmDataSrvEffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataSrvEff.setStatus('current')
if mibBuilder.loadTexts: condDataSrvEff.setDescription('The effect on service caused by the alarm condition. Only NSA(Nonservice-effecting)|SA(Service-effecting) will be represented here.')
condDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDateTime.setStatus('current')
if mibBuilder.loadTexts: condDataDateTime.setDescription('Date and time when the triggering event occurred.')
condDataDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDesc.setStatus('current')
if mibBuilder.loadTexts: condDataDesc.setDescription('Text message.')
almEnvDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30), )
if mibBuilder.loadTexts: almEnvDataTable.setStatus('current')
if mibBuilder.loadTexts: almEnvDataTable.setDescription('environment alarm table')
almEnvDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "almEnvDataAid"), (0, "OPTIX-SONET-ALM-MIB", "almEnvDataNtfcnCde"), (0, "OPTIX-SONET-ALM-MIB", "almEnvDataName"))
if mibBuilder.loadTexts: almEnvDataEntry.setStatus('current')
if mibBuilder.loadTexts: almEnvDataEntry.setDescription('environment alarm table')
almEnvDataAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataAid.setStatus('current')
if mibBuilder.loadTexts: almEnvDataAid.setDescription('AID of the input switch for environment monitoring.')
almEnvDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 2), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataNtfcnCde.setStatus('current')
if mibBuilder.loadTexts: almEnvDataNtfcnCde.setDescription('The notification code of the retrieved alarm. Only CR|MJ|MN|NA will be represented here.')
almEnvDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 3), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataName.setStatus('current')
if mibBuilder.loadTexts: almEnvDataName.setDescription('Condition type.')
almEnvDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataDateTime.setStatus('current')
if mibBuilder.loadTexts: almEnvDataDateTime.setDescription('Date and time when the triggering event occurred.')
almEnvDataCondDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataCondDesc.setStatus('current')
if mibBuilder.loadTexts: almEnvDataCondDesc.setDescription('Text message.')
almSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11))
almSummaryCritical = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryCritical.setStatus('current')
if mibBuilder.loadTexts: almSummaryCritical.setDescription('Critical alarm count.')
almSummaryMajor = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryMajor.setStatus('current')
if mibBuilder.loadTexts: almSummaryMajor.setDescription('Major alarm count.')
almSummaryMinor = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryMinor.setStatus('current')
if mibBuilder.loadTexts: almSummaryMinor.setDescription('Minor alarm count.')
optixSonetAlarmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20))
optixSonetAlarmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 1))
optixSonetAlarmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 1, 1)).setObjects(("OPTIX-SONET-ALM-MIB", "almDataMOD2"), ("OPTIX-SONET-ALM-MIB", "almDataSlot"), ("OPTIX-SONET-ALM-MIB", "almDataPort"), ("OPTIX-SONET-ALM-MIB", "almDataPath"), ("OPTIX-SONET-ALM-MIB", "almDataVT"), ("OPTIX-SONET-ALM-MIB", "almDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "almDataName"), ("OPTIX-SONET-ALM-MIB", "almDataSrvEff"), ("OPTIX-SONET-ALM-MIB", "almDataLocation"), ("OPTIX-SONET-ALM-MIB", "almDataDirection"), ("OPTIX-SONET-ALM-MIB", "almDataDateTime"), ("OPTIX-SONET-ALM-MIB", "almDataDesc"), ("OPTIX-SONET-ALM-MIB", "almDataAiddet"), ("OPTIX-SONET-ALM-MIB", "condDataMOD2"), ("OPTIX-SONET-ALM-MIB", "condDataSlot"), ("OPTIX-SONET-ALM-MIB", "condDataPort"), ("OPTIX-SONET-ALM-MIB", "condDataPath"), ("OPTIX-SONET-ALM-MIB", "condDataVT"), ("OPTIX-SONET-ALM-MIB", "condDataName"), ("OPTIX-SONET-ALM-MIB", "condDataLocation"), ("OPTIX-SONET-ALM-MIB", "condDataDirection"), ("OPTIX-SONET-ALM-MIB", "condDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "condDataSrvEff"), ("OPTIX-SONET-ALM-MIB", "condDataDateTime"), ("OPTIX-SONET-ALM-MIB", "condDataDesc"), ("OPTIX-SONET-ALM-MIB", "almEnvDataAid"), ("OPTIX-SONET-ALM-MIB", "almEnvDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "almEnvDataName"), ("OPTIX-SONET-ALM-MIB", "almEnvDataDateTime"), ("OPTIX-SONET-ALM-MIB", "almEnvDataCondDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetAlarmObjectGroup = optixSonetAlarmObjectGroup.setStatus('current')
if mibBuilder.loadTexts: optixSonetAlarmObjectGroup.setDescription('Enter the description of the created OBJECT-GROUP.')
optixSonetAlarmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 2))
optixSonetAlarmBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 2, 1)).setObjects(("OPTIX-SONET-ALM-MIB", "optixSonetAlarmObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetAlarmBasicCompliance = optixSonetAlarmBasicCompliance.setStatus('current')
if mibBuilder.loadTexts: optixSonetAlarmBasicCompliance.setDescription('Enter the description of the created MODULE-COMPLIANCE.')
mibBuilder.exportSymbols("OPTIX-SONET-ALM-MIB", optixSonetAlarmCompliances=optixSonetAlarmCompliances, condDataEntry=condDataEntry, condDataDateTime=condDataDateTime, almDataLocation=almDataLocation, almDataMOD2=almDataMOD2, almDataTable=almDataTable, almEnvDataCondDesc=almEnvDataCondDesc, condDataName=condDataName, almEnvDataTable=almEnvDataTable, almDataEntry=almDataEntry, almEnvDataNtfcnCde=almEnvDataNtfcnCde, almSummaryCritical=almSummaryCritical, almEnvDataAid=almEnvDataAid, condDataDirection=condDataDirection, almDataDesc=almDataDesc, almDataName=almDataName, condDataVT=condDataVT, almSummary=almSummary, condDataPath=condDataPath, condDataNtfcnCde=condDataNtfcnCde, PYSNMP_MODULE_ID=optixSonetAlarm, condDataLocation=condDataLocation, optixSonetAlarm=optixSonetAlarm, condDataSrvEff=condDataSrvEff, almEnvDataDateTime=almEnvDataDateTime, almDataNtfcnCde=almDataNtfcnCde, almData=almData, condDataDesc=condDataDesc, optixSonetAlarmConformance=optixSonetAlarmConformance, almDataPath=almDataPath, almSummaryMinor=almSummaryMinor, optixSonetAlarmObjectGroup=optixSonetAlarmObjectGroup, condDataTable=condDataTable, almDataDateTime=almDataDateTime, almDataSlot=almDataSlot, almDataVT=almDataVT, optixSonetAlarmBasicCompliance=optixSonetAlarmBasicCompliance, almDataAiddet=almDataAiddet, almSummaryMajor=almSummaryMajor, almEnvDataEntry=almEnvDataEntry, almDataSrvEff=almDataSrvEff, almDataPort=almDataPort, optixSonetAlarmGroups=optixSonetAlarmGroups, condDataSlot=condDataSlot, almEnvDataName=almEnvDataName, condDataMOD2=condDataMOD2, almDataDirection=almDataDirection, condDataPort=condDataPort)
