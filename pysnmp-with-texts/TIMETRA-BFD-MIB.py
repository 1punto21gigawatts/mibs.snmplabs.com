#
# PySNMP MIB module TIMETRA-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-BFD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, IpAddress, Counter32, NotificationType, iso, Integer32, Unsigned32, ModuleIdentity, Counter64, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "Counter32", "NotificationType", "iso", "Integer32", "Unsigned32", "ModuleIdentity", "Counter64", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity")
TruthValue, TextualConvention, RowStatus, DisplayString, TimeInterval, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString", "TimeInterval", "TimeStamp")
tmnxSRNotifyPrefix, tmnxSRConfs, tmnxSRObjs, timetraSRMIBModules = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "tmnxSRConfs", "tmnxSRObjs", "timetraSRMIBModules")
TNamedItem, = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TNamedItem")
timetraBfdMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 85))
if mibBuilder.loadTexts: timetraBfdMIBModule.setLastUpdated('201206080000Z')
if mibBuilder.loadTexts: timetraBfdMIBModule.setOrganization('Alcatel-Lucent')
if mibBuilder.loadTexts: timetraBfdMIBModule.setContactInfo('Alcatel-Lucent SROS Support Web: http://support.alcatel-lucent.com')
if mibBuilder.loadTexts: timetraBfdMIBModule.setDescription("This document is the SNMP MIB module to manage and provision BFD templates on Alcatel-Lucent SROS equipment. Copyright 2012-2013 Alcatel-Lucent. All rights reserved. Reproduction of this document is authorized on the condition that the foregoing copyright notice is included. This SNMP MIB module (Specification) embodies Alcatel-Lucent's proprietary intellectual property. Alcatel-Lucent retains all title and ownership in the Specification, including any revisions. Alcatel-Lucent grants all interested parties a non-exclusive license to use and distribute an unmodified copy of this Specification in connection with management of Alcatel-Lucent products, and without fee, provided this copyright notice and license appear on all copies. This Specification is supplied 'as is', and Alcatel-Lucent makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
tmnxBfdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85))
tmnxBfdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 85))
tmnxBfdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 85, 1))
tmnxBfdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 85, 2))
tmnxBfdOperObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1))
tmnxBfdAdminObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2))
tmnxBfdAdminControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 1))
tmnxBfdAdminValueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2))
tmnxBfdAdminOwner = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBfdAdminOwner.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminOwner.setDescription('Who has last initialized the administrative tables, who is making all the changes, and who is expected to either commit or re-initialize (ABORT-TRANSACTION). tmnxBfdAdminOwner is advisory only. Before beginning a transaction, read tmnxBfdAdminOwner. If it is empty then proceed with the configuration. Set tmnxBfdAdminOwner after setting tmnxBfdAdminControlApply so that other users will be advised to not make changes to the Admin tables. Agent sets tmnxBfdAdminOwner to empty string after tmnxBfdAdminControlApply is set - either by user initializing or committing, or by agent timing out the uncommitted transactions (tmnxBfdAdminLastSetTimer).')
tmnxBfdAdminControlApply = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("initialize", 2), ("commit", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBfdAdminControlApply.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminControlApply.setDescription('This object controls the use of tmnxBfdAdminValueObjects tables. This object always reads none(1). When set to initialize(2), the objects in tmnxBfdAdminValueObjects tables are set to the current Operational values, from the corresponding tmnxBfdOperValueObjects tables. Any uncommitted changes are lost, so setting this value corresponds to both BEGIN-TRANSACTION and ABORT-TRANSACTION. When set to commit(3) (END-TRANSACTION), all of the objects from tmnxBfdAdminValueObjects tables are copied to the corresponding tmnxBfdOperValueObjects table objects.')
tmnxBfdAdminLastSetTimer = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 1, 3), TimeInterval()).setUnits('centiseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdAdminLastSetTimer.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminLastSetTimer.setDescription('The time remaining until the agent re-initializes the administrative tables. If tmnxBfdAdminControlApply is not set to commit(3) within tmnxBfdAdminLastSetTimeout centiseconds, the agent will set it to initialize(2) and all uncommitted changes will be lost. This way, uncommitted changes from failed (uncompleted) change sets will eventually be removed, and another transaction can safely begin. This object is reset to tmnxBfdAdminLastSetTimeout after SNMP SET operation to any of the tmnxBfdAdminValueObjects tables.')
tmnxBfdAdminLastSetTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 1, 4), TimeInterval().clone(180000)).setUnits('centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBfdAdminLastSetTimeout.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminLastSetTimeout.setDescription('Timeout for tmnxBfdAdminLastSetTimer. The value zero is not allowed.')
tmnxBfdAdminTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1), )
if mibBuilder.loadTexts: tmnxBfdAdminTemplateTable.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateTable.setDescription('Administrative value table for BFD templates.')
tmnxBfdAdminTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1), ).setIndexNames((0, "TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateName"))
if mibBuilder.loadTexts: tmnxBfdAdminTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateEntry.setDescription('Information about a particular BFD template. Entries are created by user. Entries are deleted by user.')
tmnxBfdAdminTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBfdAdminTemplateName.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateName.setDescription('The name of this BFD template that uniquely identifies an entry in this table.')
tmnxBfdAdminTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateRowStatus.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateRowStatus.setDescription('RowStatus for this row. Legal values to write are: active(1), createAndGo(4), createAndWait(5), destroy(6). To Create a row, set this object to createAndGo or createAndWait. When tmnxBfdAdminControlApply is set to commit(3), the row will actually be created in the tmnxBfdOperTemplateTable. To destroy a row, set this object to destroy(6). If there are no objects that refer to the entry, when tmnxBfdAdminControlApply is set to commit(3) the row will actually be removed from the tmnxBfdOperTemplateTable. If there are objects that refer to the entry, the destroy SET request will fail with an error.')
tmnxBfdAdminTemplateTxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateTxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateTxInt.setDescription('The value of tmnxBfdAdminTemplateTxInt specifies the transmit timers for the BFD packets.')
tmnxBfdAdminTemplateRxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateRxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateRxInt.setDescription('The value of tmnxBfdAdminTemplateRxInt specifies the receive timers for the BFD packets.')
tmnxBfdAdminTemplateMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateMultiplier.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateMultiplier.setDescription('The value of tmnxBfdAdminTemplateMultiplier specifies the number of consecutive BFD messages that must be missed from the peer before the BFD session state is changed to down and the upper level protocols (OSPF, IS-IS or PIM) are notified of the fault.')
tmnxBfdAdminTemplateEchoRxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100000)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateEchoRxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateEchoRxInt.setDescription('The value of tmnxBfdAdminTemplateEchoRxInt specifies the minimum echo recieve interval for a BFD session.')
tmnxBfdAdminTemplateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cpmNp", 1), ("auto", 2), ("iomHw", 3))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBfdAdminTemplateType.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdAdminTemplateType.setDescription("The value of tmnxBfdAdminTemplateType specifies the configured termination of a BFD session. The value of 'cpmNp(1)' specifies termination on the CPM card's Network Processor. The value of 'auto(2)' specifies a system-selected termination other than the CPM Network Processor.")
tmnxBfdOperValueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1))
tmnxBfdOperTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1), )
if mibBuilder.loadTexts: tmnxBfdOperTemplateTable.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateTable.setDescription('Operational value table for BFD templates.')
tmnxBfdOperTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1), ).setIndexNames((0, "TIMETRA-BFD-MIB", "tmnxBfdOperTemplateName"))
if mibBuilder.loadTexts: tmnxBfdOperTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateEntry.setDescription('Information about a particular BFD template. Entries are created by user via tmnxBfdAdminTemplateTable. Entries are deleted by user via tmnxBfdAdminTemplateTable.')
tmnxBfdOperTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBfdOperTemplateName.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateName.setDescription('The name of this BFD template that uniquely identifies an entry in this table.')
tmnxBfdOperTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateRowStatus.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateRowStatus.setDescription('RowStatus for this row. Values read will only be active(1). To create or destroy entries in this table, use the tmnxBfdAdminTemplateEntry.')
tmnxBfdOperTemplateTxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateTxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateTxInt.setDescription('The value of tmnxBfdOperTemplateTxInt indicates the transmit timers for the BFD packets.')
tmnxBfdOperTemplateRxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateRxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateRxInt.setDescription('The value of tmnxBfdOperTemplateTxInt indicates the recieve timers for the BFD packets.')
tmnxBfdOperTemplateMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateMultiplier.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateMultiplier.setDescription('The value of tmnxBfdOperTemplateMultiplier indicates the number of consecutive BFD messages that must be missed from the peer before the BFD session state is changed to down and the upper level protocols (OSPF, IS-IS or PIM) are notified of the fault.')
tmnxBfdOperTemplateEchoRxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateEchoRxInt.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateEchoRxInt.setDescription('The value of tmnxBfdOperTemplateEchoRxInt indicates the minimum echo recieve interval for a BFD session.')
tmnxBfdOperTemplateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 85, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cpmNp", 1), ("auto", 2), ("iomHw", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBfdOperTemplateType.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdOperTemplateType.setDescription("The value of tmnxBfdOperTemplateType indicates the configured termination of a BFD session. The value of 'cpmNp(1)' specifies termination on the CPM card's Network Processor. The value of 'auto(2)' specifies a system-selected termination other than the CPM Network Processor.")
tmnxBfdV11v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 85, 1, 1)).setObjects(("TIMETRA-BFD-MIB", "tmnxBfdV11v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBfdV11v0Compliance = tmnxBfdV11v0Compliance.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdV11v0Compliance.setDescription('The compliance statement for management of BFD features on version 11.0 of the Alcatel-Lucent SROS series systems.')
tmnxBfdV11v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 85, 2, 1)).setObjects(("TIMETRA-BFD-MIB", "tmnxBfdAdminOwner"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminControlApply"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminLastSetTimer"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminLastSetTimeout"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateRowStatus"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateTxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateRxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateMultiplier"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateEchoRxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdAdminTemplateType"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateRowStatus"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateTxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateRxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateMultiplier"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateEchoRxInt"), ("TIMETRA-BFD-MIB", "tmnxBfdOperTemplateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBfdV11v0Group = tmnxBfdV11v0Group.setStatus('current')
if mibBuilder.loadTexts: tmnxBfdV11v0Group.setDescription('The group of objects supporting management of BFD features on version 11.0 of the Alcatel-Lucent SROS series systems.')
mibBuilder.exportSymbols("TIMETRA-BFD-MIB", tmnxBfdOperTemplateEntry=tmnxBfdOperTemplateEntry, tmnxBfdOperValueObjects=tmnxBfdOperValueObjects, tmnxBfdOperTemplateType=tmnxBfdOperTemplateType, tmnxBfdCompliances=tmnxBfdCompliances, tmnxBfdOperTemplateRowStatus=tmnxBfdOperTemplateRowStatus, tmnxBfdAdminTemplateType=tmnxBfdAdminTemplateType, tmnxBfdAdminObjects=tmnxBfdAdminObjects, tmnxBfdOperTemplateTable=tmnxBfdOperTemplateTable, tmnxBfdConformance=tmnxBfdConformance, tmnxBfdOperTemplateTxInt=tmnxBfdOperTemplateTxInt, tmnxBfdAdminTemplateRxInt=tmnxBfdAdminTemplateRxInt, tmnxBfdV11v0Group=tmnxBfdV11v0Group, tmnxBfdAdminTemplateMultiplier=tmnxBfdAdminTemplateMultiplier, PYSNMP_MODULE_ID=timetraBfdMIBModule, tmnxBfdOperTemplateRxInt=tmnxBfdOperTemplateRxInt, tmnxBfdGroups=tmnxBfdGroups, timetraBfdMIBModule=timetraBfdMIBModule, tmnxBfdAdminOwner=tmnxBfdAdminOwner, tmnxBfdAdminLastSetTimeout=tmnxBfdAdminLastSetTimeout, tmnxBfdAdminTemplateRowStatus=tmnxBfdAdminTemplateRowStatus, tmnxBfdOperTemplateEchoRxInt=tmnxBfdOperTemplateEchoRxInt, tmnxBfdOperObjects=tmnxBfdOperObjects, tmnxBfdObjects=tmnxBfdObjects, tmnxBfdAdminTemplateTable=tmnxBfdAdminTemplateTable, tmnxBfdAdminTemplateEntry=tmnxBfdAdminTemplateEntry, tmnxBfdV11v0Compliance=tmnxBfdV11v0Compliance, tmnxBfdAdminTemplateTxInt=tmnxBfdAdminTemplateTxInt, tmnxBfdOperTemplateName=tmnxBfdOperTemplateName, tmnxBfdAdminValueObjects=tmnxBfdAdminValueObjects, tmnxBfdAdminTemplateEchoRxInt=tmnxBfdAdminTemplateEchoRxInt, tmnxBfdOperTemplateMultiplier=tmnxBfdOperTemplateMultiplier, tmnxBfdAdminControlObjects=tmnxBfdAdminControlObjects, tmnxBfdAdminLastSetTimer=tmnxBfdAdminLastSetTimer, tmnxBfdAdminTemplateName=tmnxBfdAdminTemplateName, tmnxBfdAdminControlApply=tmnxBfdAdminControlApply)
