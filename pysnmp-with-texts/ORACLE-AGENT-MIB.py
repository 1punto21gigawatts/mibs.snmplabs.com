#
# PySNMP MIB module ORACLE-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ORACLE-AGENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:35:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Gauge32, TimeTicks, ModuleIdentity, Unsigned32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, enterprises, Counter64, NotificationType, NotificationType, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Gauge32", "TimeTicks", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "enterprises", "Counter64", "NotificationType", "NotificationType", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DateAndTime(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 11)

oracle = MibIdentifier((1, 3, 6, 1, 4, 1, 111))
oraAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 111, 12))
oraAgentObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 111, 12, 1))
oraAgentEventTable = MibTable((1, 3, 6, 1, 4, 1, 111, 12, 1, 1), )
if mibBuilder.loadTexts: oraAgentEventTable.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventTable.setDescription('')
oraAgentEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1), ).setIndexNames((0, "ORACLE-AGENT-MIB", "oraAgentEventIndex"))
if mibBuilder.loadTexts: oraAgentEventEntry.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventEntry.setDescription('')
oraAgentEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventIndex.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventIndex.setDescription('')
oraAgentEventName = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventName.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventName.setDescription('The name of the event that occurred.')
oraAgentEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventID.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventID.setDescription('The ID of the registration that generated this event occurrence.')
oraAgentEventService = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventService.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventService.setDescription('The name of the service (database, SQL*Net listener, etc.) being monitored by this event.')
oraAgentEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventTime.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventTime.setDescription('The time at which this event was detected.')
oraAgentEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("warning", 1), ("alert", 2), ("clear", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventSeverity.setDescription('A relative measure of the severity of the event.')
oraAgentEventUser = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventUser.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventUser.setDescription('The name of the user who registered for this event.')
oraAgentEventAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventAppID.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventAppID.setDescription('The ID of the Enterprise Manager console application through which this event was registered.')
oraAgentEventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventMessage.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventMessage.setDescription("<Isn't this always blank right now?>.")
oraAgentEventArguments = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventArguments.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventArguments.setDescription('The arguments that were passed to the script that detected this event.')
oraAgentEventResults = MibTableColumn((1, 3, 6, 1, 4, 1, 111, 12, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraAgentEventResults.setStatus('mandatory')
if mibBuilder.loadTexts: oraAgentEventResults.setDescription('The results generated by the script that detected this event.')
oraAgentTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 111, 12, 2))
oraAgentEventOcc = NotificationType((1, 3, 6, 1, 4, 1, 111, 12, 2) + (0,2)).setObjects(("ORACLE-AGENT-MIB", "oraAgentEventName"), ("ORACLE-AGENT-MIB", "oraAgentEventID"), ("ORACLE-AGENT-MIB", "oraAgentEventService"), ("ORACLE-AGENT-MIB", "oraAgentEventTime"), ("ORACLE-AGENT-MIB", "oraAgentEventSeverity"), ("ORACLE-AGENT-MIB", "oraAgentEventUser"), ("ORACLE-AGENT-MIB", "oraAgentEventAppID"), ("ORACLE-AGENT-MIB", "oraAgentEventMessage"), ("ORACLE-AGENT-MIB", "oraAgentEventArguments"), ("ORACLE-AGENT-MIB", "oraAgentEventResults"))
if mibBuilder.loadTexts: oraAgentEventOcc.setDescription('The Enterprise Manager agent has detected an occurrence of an event for which it has no specific trap.')
mibBuilder.exportSymbols("ORACLE-AGENT-MIB", oraAgent=oraAgent, oraAgentEventName=oraAgentEventName, oraAgentEventMessage=oraAgentEventMessage, oraAgentEventUser=oraAgentEventUser, oraAgentEventID=oraAgentEventID, oraAgentEventResults=oraAgentEventResults, oraAgentEventEntry=oraAgentEventEntry, oraAgentEventSeverity=oraAgentEventSeverity, oraAgentEventAppID=oraAgentEventAppID, oraAgentEventIndex=oraAgentEventIndex, oraAgentTraps=oraAgentTraps, oracle=oracle, oraAgentEventArguments=oraAgentEventArguments, DateAndTime=DateAndTime, oraAgentEventService=oraAgentEventService, oraAgentEventTime=oraAgentEventTime, oraAgentObjects=oraAgentObjects, oraAgentEventTable=oraAgentEventTable, oraAgentEventOcc=oraAgentEventOcc)
