#
# PySNMP MIB module CYAN-FAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-FAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:33:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
CyanTypeTc, cyanEntityModules = mibBuilder.importSymbols("CYAN-MIB", "CyanTypeTc", "cyanEntityModules")
CyanLEDTc, CyanOpStateTc, CyanSecServiceStateTc, CyanAdminStateTc, CyanOpStateQualTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanLEDTc", "CyanOpStateTc", "CyanSecServiceStateTc", "CyanAdminStateTc", "CyanOpStateQualTc")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, IpAddress, MibIdentifier, Bits, iso, Integer32, Counter64, Gauge32, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "IpAddress", "MibIdentifier", "Bits", "iso", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanFanModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40))
cyanFanModule.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanFanModule.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanFanModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanFanModule.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanFanModule.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanFanModule.setDescription('MIB module for Fan')
cyanFanMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1))
cyanFanTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1), )
if mibBuilder.loadTexts: cyanFanTable.setStatus('current')
if mibBuilder.loadTexts: cyanFanTable.setDescription('A list of Fan entries.')
cyanFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1), ).setIndexNames((0, "CYAN-FAN-MIB", "cyanFanShelfId"), (0, "CYAN-FAN-MIB", "cyanFanFanId"))
if mibBuilder.loadTexts: cyanFanEntry.setStatus('current')
if mibBuilder.loadTexts: cyanFanEntry.setDescription('An entry of Fan.')
cyanFanShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanFanShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanFanShelfId.setDescription('Shelf Id')
cyanFanFanId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanFanFanId.setStatus('current')
if mibBuilder.loadTexts: cyanFanFanId.setDescription('Fan Module Id')
cyanFanAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 3), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanAdminState.setStatus('current')
if mibBuilder.loadTexts: cyanFanAdminState.setDescription('Administrative state')
cyanFanAlarmLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 4), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanAlarmLed.setStatus('current')
if mibBuilder.loadTexts: cyanFanAlarmLed.setDescription('Alarm LED status')
cyanFanAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanAssetTag.setStatus('current')
if mibBuilder.loadTexts: cyanFanAssetTag.setDescription('Asset Tag')
cyanFanAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanAutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanFanAutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanFanBaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanBaseMacAddress.setStatus('current')
if mibBuilder.loadTexts: cyanFanBaseMacAddress.setDescription('Base MAC address of a range of addresses')
cyanFanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanDescription.setStatus('current')
if mibBuilder.loadTexts: cyanFanDescription.setDescription('Description')
cyanFanHotSwapLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 9), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanHotSwapLed.setStatus('current')
if mibBuilder.loadTexts: cyanFanHotSwapLed.setDescription('Hot Swap LED status')
cyanFanIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanIdentifier.setStatus('current')
if mibBuilder.loadTexts: cyanFanIdentifier.setDescription('string OID')
cyanFanMacBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMacBlockSize.setStatus('current')
if mibBuilder.loadTexts: cyanFanMacBlockSize.setDescription('Number of MAC addresses allocated from the base MAC address')
cyanFanMfgCleiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgCleiCode.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgCleiCode.setDescription('Common Language Equipment Identifier')
cyanFanMfgEciCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgEciCode.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgEciCode.setDescription('Equipment Catalog Item')
cyanFanMfgModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgModuleId.setDescription('Module ID')
cyanFanMfgPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgPartNumber.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgPartNumber.setDescription('Manufacturing part number')
cyanFanMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgRevision.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgRevision.setDescription('Mfg revision number')
cyanFanMfgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanMfgSerialNumber.setStatus('current')
if mibBuilder.loadTexts: cyanFanMfgSerialNumber.setDescription('Mfg serial number')
cyanFanName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanName.setStatus('current')
if mibBuilder.loadTexts: cyanFanName.setDescription('Cyan name')
cyanFanOidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanOidClass.setStatus('current')
if mibBuilder.loadTexts: cyanFanOidClass.setDescription('OID Class')
cyanFanOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 20), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanOperState.setStatus('current')
if mibBuilder.loadTexts: cyanFanOperState.setDescription('Primary Operation State')
cyanFanOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 21), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanOperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanFanOperStateQual.setDescription('Operation state qualifier')
cyanFanOssLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanOssLabel.setStatus('current')
if mibBuilder.loadTexts: cyanFanOssLabel.setDescription('CyMS label')
cyanFanOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanOwner.setStatus('current')
if mibBuilder.loadTexts: cyanFanOwner.setDescription('Owner')
cyanFanPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanPartNumber.setStatus('current')
if mibBuilder.loadTexts: cyanFanPartNumber.setDescription('Cyan part number')
cyanFanPowerLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 25), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanPowerLed.setStatus('current')
if mibBuilder.loadTexts: cyanFanPowerLed.setDescription('Power LED status')
cyanFanSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 26), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanSecServState.setStatus('current')
if mibBuilder.loadTexts: cyanFanSecServState.setDescription('Secondary service state')
cyanFanType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 1, 1, 1, 27), CyanTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanFanType.setStatus('current')
if mibBuilder.loadTexts: cyanFanType.setDescription('Equipment type')
cyanFanObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 20)).setObjects(("CYAN-FAN-MIB", "cyanFanAdminState"), ("CYAN-FAN-MIB", "cyanFanAlarmLed"), ("CYAN-FAN-MIB", "cyanFanAssetTag"), ("CYAN-FAN-MIB", "cyanFanAutoinserviceSoakTimeSec"), ("CYAN-FAN-MIB", "cyanFanBaseMacAddress"), ("CYAN-FAN-MIB", "cyanFanDescription"), ("CYAN-FAN-MIB", "cyanFanHotSwapLed"), ("CYAN-FAN-MIB", "cyanFanIdentifier"), ("CYAN-FAN-MIB", "cyanFanMacBlockSize"), ("CYAN-FAN-MIB", "cyanFanMfgCleiCode"), ("CYAN-FAN-MIB", "cyanFanMfgEciCode"), ("CYAN-FAN-MIB", "cyanFanMfgModuleId"), ("CYAN-FAN-MIB", "cyanFanMfgPartNumber"), ("CYAN-FAN-MIB", "cyanFanMfgRevision"), ("CYAN-FAN-MIB", "cyanFanMfgSerialNumber"), ("CYAN-FAN-MIB", "cyanFanName"), ("CYAN-FAN-MIB", "cyanFanOidClass"), ("CYAN-FAN-MIB", "cyanFanOperState"), ("CYAN-FAN-MIB", "cyanFanOperStateQual"), ("CYAN-FAN-MIB", "cyanFanOssLabel"), ("CYAN-FAN-MIB", "cyanFanOwner"), ("CYAN-FAN-MIB", "cyanFanPartNumber"), ("CYAN-FAN-MIB", "cyanFanPowerLed"), ("CYAN-FAN-MIB", "cyanFanSecServState"), ("CYAN-FAN-MIB", "cyanFanType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanFanObjectGroup = cyanFanObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanFanObjectGroup.setDescription('Group of objects that comes with Fan module')
cyanFanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 40, 30)).setObjects(("CYAN-FAN-MIB", "cyanFanObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanFanCompliance = cyanFanCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanFanCompliance.setDescription('The basic info needed to be a cyan Fan')
mibBuilder.exportSymbols("CYAN-FAN-MIB", cyanFanOperStateQual=cyanFanOperStateQual, cyanFanMfgCleiCode=cyanFanMfgCleiCode, cyanFanEntry=cyanFanEntry, cyanFanCompliance=cyanFanCompliance, cyanFanMibObjects=cyanFanMibObjects, cyanFanBaseMacAddress=cyanFanBaseMacAddress, cyanFanPowerLed=cyanFanPowerLed, cyanFanSecServState=cyanFanSecServState, cyanFanMfgEciCode=cyanFanMfgEciCode, PYSNMP_MODULE_ID=cyanFanModule, cyanFanTable=cyanFanTable, cyanFanDescription=cyanFanDescription, cyanFanOidClass=cyanFanOidClass, cyanFanAdminState=cyanFanAdminState, cyanFanMacBlockSize=cyanFanMacBlockSize, cyanFanAutoinserviceSoakTimeSec=cyanFanAutoinserviceSoakTimeSec, cyanFanMfgRevision=cyanFanMfgRevision, cyanFanAlarmLed=cyanFanAlarmLed, cyanFanObjectGroup=cyanFanObjectGroup, cyanFanFanId=cyanFanFanId, cyanFanOperState=cyanFanOperState, cyanFanType=cyanFanType, cyanFanMfgSerialNumber=cyanFanMfgSerialNumber, cyanFanShelfId=cyanFanShelfId, cyanFanHotSwapLed=cyanFanHotSwapLed, cyanFanOwner=cyanFanOwner, cyanFanPartNumber=cyanFanPartNumber, cyanFanMfgModuleId=cyanFanMfgModuleId, cyanFanIdentifier=cyanFanIdentifier, cyanFanOssLabel=cyanFanOssLabel, cyanFanMfgPartNumber=cyanFanMfgPartNumber, cyanFanName=cyanFanName, cyanFanAssetTag=cyanFanAssetTag, cyanFanModule=cyanFanModule)
