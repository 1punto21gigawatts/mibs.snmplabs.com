#
# PySNMP MIB module FORCE10-TRAP-EVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FORCE10-TRAP-EVENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:14:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
f10Mgmt, = mibBuilder.importSymbols("FORCE10-SMI", "f10Mgmt")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, ObjectIdentity, Gauge32, iso, IpAddress, Counter64, Unsigned32, TimeTicks, NotificationType, Counter32, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Gauge32", "iso", "IpAddress", "Counter64", "Unsigned32", "TimeTicks", "NotificationType", "Counter32", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DateAndTime, RowPointer, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "RowPointer", "TextualConvention", "RowStatus", "DisplayString")
f10TrapEventMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 6))
if mibBuilder.loadTexts: f10TrapEventMib.setLastUpdated('200510050000Z')
if mibBuilder.loadTexts: f10TrapEventMib.setOrganization('Force10 Networks, Inc.')
if mibBuilder.loadTexts: f10TrapEventMib.setContactInfo('Force10 Networks, Inc 1440 McCarthy Blvd Milpitas, CA 95035 (408) 571-3500 support@force10networks.com http://www.force10networks.com')
if mibBuilder.loadTexts: f10TrapEventMib.setDescription("Force10 Trap Alarm MIB. Force10 Trap Event MIB allows users to track or to view the trap events logged by the system. There are two types of trap event tables, hostory trap event table and active trap event table. All the traps sent by the system are logged to history trap event table. The trap that need action will logged to active trap event table; 'Card down' trap event will go to the active trap event table, and the trap will be cleared as soon as 'Card Up' event is issued. ")
f10TrapEventObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1))
f10HistoryTrapEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1))
f10ActiveTrapEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2))
f10TrapVarbindEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3))
f10ChassisTrapEventId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10ChassisTrapEventId.setStatus('current')
if mibBuilder.loadTexts: f10ChassisTrapEventId.setDescription('The f10ChassisTrapEventId used the timestamp as the ID to uniquely identify the current trap event table. Each time a NMS connect to F10 Chassis, it should verify its f10ChassisTrapEventId. If the ID is different, it should refresh its history and active tables. But, if the f10ChassisTrapEventId is the same, then it should query the f10LastTrapEventSeqId and update its history and active tables from its own f10LastTrapEventSeqId to the chassis f10LastTrapEventSeqId. ')
f10LastTrapEventSeqId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10LastTrapEventSeqId.setStatus('current')
if mibBuilder.loadTexts: f10LastTrapEventSeqId.setDescription(' f10LastTrapEventSeqId is a sequential ID indicated the number of traps sent by the syatem since chassis is loaded. The same id can also be used as the index to the history and active tables. Anytime, if an NMS dropped its connection with F10 Chassis, it should sync up its history tables from its own f10LastTrapEventSeqId to the chassis f10LastTrapEventSeqId. ')
f10MaxHistoryTableSize = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10MaxHistoryTableSize.setStatus('current')
if mibBuilder.loadTexts: f10MaxHistoryTableSize.setDescription(' f10MaxHistoryTableSize is the maximum rows in history table. This also limits the active/varbind tables. Whenever there is a chance of overflow, the oldest entry will be deleted form the history table. Respective entry from active table also will be deleted and the corresponding varbind entries will be deleted from varbind table. ')
f10HistoryTrapEventTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4), )
if mibBuilder.loadTexts: f10HistoryTrapEventTable.setStatus('current')
if mibBuilder.loadTexts: f10HistoryTrapEventTable.setDescription('A table of history trap event table.')
f10HistoryTrapEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1), ).setIndexNames((0, "FORCE10-TRAP-EVENT-MIB", "historyTrapEventSeqId"))
if mibBuilder.loadTexts: f10HistoryTrapEventEntry.setStatus('current')
if mibBuilder.loadTexts: f10HistoryTrapEventEntry.setDescription('A table of history trap event table. ')
historyTrapEventSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: historyTrapEventSeqId.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventSeqId.setDescription(' historyTrapEventSeqId is a sequential ID and the index to history trap table. ')
historyTrapEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventSeverity.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventSeverity.setDescription(' The trap severity level. ')
historyTrapEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventType.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventType.setDescription(' The trap category type. ')
historyTrapEventMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventMsg.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventMsg.setDescription(' The message or the description of the trap. ')
historyTrapEventOid = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventOid.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventOid.setDescription(' The OID of this trap. ')
historyTrapEventSlotPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventSlotPort.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventSlotPort.setDescription(' The slot or port number that relate to this trap. for example if card is down, this field will have the card slot number. ')
historyTrapEventTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 1, 4, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyTrapEventTimeStamp.setStatus('current')
if mibBuilder.loadTexts: historyTrapEventTimeStamp.setDescription(' The timestamp when the trap is sent. ')
f10ActiveTrapEventTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1), )
if mibBuilder.loadTexts: f10ActiveTrapEventTable.setStatus('current')
if mibBuilder.loadTexts: f10ActiveTrapEventTable.setDescription('A table of active trap event table.')
f10ActiveTrapEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1), ).setIndexNames((0, "FORCE10-TRAP-EVENT-MIB", "activeTrapEventSeqId"))
if mibBuilder.loadTexts: f10ActiveTrapEventEntry.setStatus('current')
if mibBuilder.loadTexts: f10ActiveTrapEventEntry.setDescription('A table of active trap event table. ')
activeTrapEventSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: activeTrapEventSeqId.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventSeqId.setDescription(' activeTrapEventSeqId is a sequential ID and the index to active trap table. ')
activeTrapEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventSeverity.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventSeverity.setDescription(' The trap severity level. ')
activeTrapEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventType.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventType.setDescription(' The trap category type. ')
activeTrapEventMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventMsg.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventMsg.setDescription(' The message or the description of the trap. ')
activeTrapEventOid = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventOid.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventOid.setDescription(' The OID of this trap. ')
activeTrapEventSlotPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventSlotPort.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventSlotPort.setDescription(' The numeric iof slot or port that relate to this trap. for example if card is down, this field will have the card slot number. ')
activeTrapEventTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeTrapEventTimeStamp.setStatus('current')
if mibBuilder.loadTexts: activeTrapEventTimeStamp.setDescription(' The timestamp when the trap is sent. ')
f10TrapEventVarbindTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1), )
if mibBuilder.loadTexts: f10TrapEventVarbindTable.setStatus('current')
if mibBuilder.loadTexts: f10TrapEventVarbindTable.setDescription('A table of trap event varbind table.')
f10TrapEventVarbindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1), ).setIndexNames((0, "FORCE10-TRAP-EVENT-MIB", "trapEventVarbindSeqId"), (0, "FORCE10-TRAP-EVENT-MIB", "trapEventVarbindId"))
if mibBuilder.loadTexts: f10TrapEventVarbindEntry.setStatus('current')
if mibBuilder.loadTexts: f10TrapEventVarbindEntry.setDescription('A table of trap event varbind table. ')
trapEventVarbindSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: trapEventVarbindSeqId.setStatus('current')
if mibBuilder.loadTexts: trapEventVarbindSeqId.setDescription(' trapEventVarbindSeqId is a sequential ID and the index to varbind trap table. ')
trapEventVarbindId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: trapEventVarbindId.setStatus('current')
if mibBuilder.loadTexts: trapEventVarbindId.setDescription(' trapEventVarbindId is the ID and the index to history trap table. ')
trapEventVarbindOid = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventVarbindOid.setStatus('current')
if mibBuilder.loadTexts: trapEventVarbindOid.setDescription(' The OID of this trap. ')
trapEventVarbindType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventVarbindType.setStatus('current')
if mibBuilder.loadTexts: trapEventVarbindType.setDescription(' The trap category type. ')
trapEventVarbindValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 6, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventVarbindValue.setStatus('current')
if mibBuilder.loadTexts: trapEventVarbindValue.setDescription(' This is the result or data in this trap. ')
mibBuilder.exportSymbols("FORCE10-TRAP-EVENT-MIB", activeTrapEventTimeStamp=activeTrapEventTimeStamp, f10ChassisTrapEventId=f10ChassisTrapEventId, f10TrapEventVarbindEntry=f10TrapEventVarbindEntry, trapEventVarbindOid=trapEventVarbindOid, historyTrapEventSlotPort=historyTrapEventSlotPort, trapEventVarbindId=trapEventVarbindId, f10LastTrapEventSeqId=f10LastTrapEventSeqId, f10TrapEventMib=f10TrapEventMib, activeTrapEventMsg=activeTrapEventMsg, trapEventVarbindType=trapEventVarbindType, historyTrapEventTimeStamp=historyTrapEventTimeStamp, f10HistoryTrapEventTable=f10HistoryTrapEventTable, f10TrapEventObjects=f10TrapEventObjects, f10ActiveTrapEvent=f10ActiveTrapEvent, activeTrapEventType=activeTrapEventType, f10TrapEventVarbindTable=f10TrapEventVarbindTable, PYSNMP_MODULE_ID=f10TrapEventMib, activeTrapEventSeverity=activeTrapEventSeverity, trapEventVarbindSeqId=trapEventVarbindSeqId, f10ActiveTrapEventTable=f10ActiveTrapEventTable, activeTrapEventOid=activeTrapEventOid, historyTrapEventSeqId=historyTrapEventSeqId, trapEventVarbindValue=trapEventVarbindValue, historyTrapEventSeverity=historyTrapEventSeverity, f10HistoryTrapEvent=f10HistoryTrapEvent, f10TrapVarbindEvent=f10TrapVarbindEvent, f10ActiveTrapEventEntry=f10ActiveTrapEventEntry, historyTrapEventMsg=historyTrapEventMsg, historyTrapEventType=historyTrapEventType, activeTrapEventSeqId=activeTrapEventSeqId, f10HistoryTrapEventEntry=f10HistoryTrapEventEntry, f10MaxHistoryTableSize=f10MaxHistoryTableSize, activeTrapEventSlotPort=activeTrapEventSlotPort, historyTrapEventOid=historyTrapEventOid)
