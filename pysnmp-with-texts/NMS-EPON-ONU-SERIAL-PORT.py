#
# PySNMP MIB module NMS-EPON-ONU-SERIAL-PORT (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-EPON-ONU-SERIAL-PORT
# Produced by pysmi-0.3.4 at Wed May  1 14:21:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
nmsEPONGroup, = mibBuilder.importSymbols("NMS-SMI", "nmsEPONGroup")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, Bits, ModuleIdentity, MibIdentifier, NotificationType, IpAddress, iso, Counter32, Unsigned32, TimeTicks, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Bits", "ModuleIdentity", "MibIdentifier", "NotificationType", "IpAddress", "iso", "Counter32", "Unsigned32", "TimeTicks", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TruthValue, RowStatus, PhysAddress, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "PhysAddress", "MacAddress")
nmsEponOnuSerialPort = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27))
nmsEponOnuSerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1), )
if mibBuilder.loadTexts: nmsEponOnuSerialPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: nmsEponOnuSerialPortTable.setDescription('A list of epon ONU serial port table entries.')
nmsEponOnuSerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1), ).setIndexNames((0, "NMS-EPON-ONU-SERIAL-PORT", "llidIfIndex"), (0, "NMS-EPON-ONU-SERIAL-PORT", "onuSerialPortSeqNo"))
if mibBuilder.loadTexts: nmsEponOnuSerialPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nmsEponOnuSerialPortEntry.setDescription('A collection of additional objects in the epon ONU serial port table.')
llidIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llidIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: llidIfIndex.setDescription('LLID interface id, unique in system. The same value as NMS-EPON-LLID mib index.')
onuSerialPortSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(224, 239))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuSerialPortSeqNo.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortSeqNo.setDescription('ONU serial port sequence number, unique in one ONU.')
onuSerialPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 115200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortSpeed.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortSpeed.setDescription('ONU serial port speed. Default value is 9600.')
onuSerialPortDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataBits.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortDataBits.setDescription('ONU serial port data bits. Default value is 8.')
onuSerialPortHaltBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortHaltBits.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortHaltBits.setDescription('ONU serial port halt bits. Default value is 1.')
onuSerialPortParity = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortParity.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortParity.setDescription('ONU serial port parity. Default value is 0-none.')
onuSerialPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("software", 1), ("hardware", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortFlowControl.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortFlowControl.setDescription('ONU serial port parity. Default value is 0-none.')
onuSerialPortPropRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortPropRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortPropRowStatus.setDescription('ONU serial port properties row status.These five item are set together: onuSerialPortSpeed, onuSerialPortDataBits, onuSerialPortHaltBits, onuSerialPortParity, onuSerialPortFlowControl. ')
onuSerialPortDataReadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataReadInterval.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortDataReadInterval.setDescription('ONU serial port buffer data read interval. Unit is mili-second, and default value is 100 ms.')
onuSerialPortDataReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataReadBytes.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortDataReadBytes.setDescription('ONU serial port buffer data read bytes. When storage is up to limit, the bytes must be sent out. Default value is 100.')
onuSerialPortBufferRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortBufferRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortBufferRowStatus.setDescription('ONU serial port buffer setting row status.These two item are set together: onuSerialPortDataReadInterval, onuSerialPortDataReadBytes. ')
onuSerialPortKeepaliveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveMode.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortKeepaliveMode.setDescription('ONU serial port keepalive mode. 0-disable, 1-enable.')
onuSerialPortKeepaliveIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveIdle.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortKeepaliveIdle.setDescription('ONU serial port keepalive idle. if there is no r/x package in time of onuSerialPortKeepaliveIdle, system will send keepalive package to probe. Unit is second, and default value is 100 s.')
onuSerialPortKeepaliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortKeepaliveTimeout.setDescription('ONU serial port keepalive timeout. if there is no r/x package in time of onuSerialPortKeepaliveIdle, system will send keepalive package to probe. And if there is no rsponse package in onuSerialPortKeepaliveTimeout, this keepalive package is timeout. Unit is second, and default value is 100 s.')
onuSerialPortKeepaliveProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveProbeCount.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortKeepaliveProbeCount.setDescription('ONU serial port keepalive probing package sending count. Default value is 3.')
onuSerialPortKeepaliveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortKeepaliveRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortKeepaliveRowStatus.setDescription('ONU serial port keepalive setting value row status. These three items are set together: onuSerialPortKeepaliveIdle, onuSerialPortKeepaliveTimeout, onuSerialPortKeepaliveProbeCount.')
onuSerialPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortLoopback.setStatus('mandatory')
if mibBuilder.loadTexts: onuSerialPortLoopback.setDescription('ONU serial port loopback test.')
mibBuilder.exportSymbols("NMS-EPON-ONU-SERIAL-PORT", onuSerialPortPropRowStatus=onuSerialPortPropRowStatus, onuSerialPortKeepaliveRowStatus=onuSerialPortKeepaliveRowStatus, onuSerialPortKeepaliveIdle=onuSerialPortKeepaliveIdle, onuSerialPortSeqNo=onuSerialPortSeqNo, onuSerialPortParity=onuSerialPortParity, onuSerialPortKeepaliveProbeCount=onuSerialPortKeepaliveProbeCount, onuSerialPortKeepaliveTimeout=onuSerialPortKeepaliveTimeout, nmsEponOnuSerialPortTable=nmsEponOnuSerialPortTable, onuSerialPortSpeed=onuSerialPortSpeed, llidIfIndex=llidIfIndex, onuSerialPortBufferRowStatus=onuSerialPortBufferRowStatus, onuSerialPortDataBits=onuSerialPortDataBits, onuSerialPortDataReadInterval=onuSerialPortDataReadInterval, onuSerialPortHaltBits=onuSerialPortHaltBits, nmsEponOnuSerialPort=nmsEponOnuSerialPort, onuSerialPortDataReadBytes=onuSerialPortDataReadBytes, nmsEponOnuSerialPortEntry=nmsEponOnuSerialPortEntry, onuSerialPortFlowControl=onuSerialPortFlowControl, onuSerialPortLoopback=onuSerialPortLoopback, onuSerialPortKeepaliveMode=onuSerialPortKeepaliveMode)
