#
# PySNMP MIB module CISCO-ITP-SCCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-SCCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
cItpSpDisplayName, cItpSpCLLICode = mibBuilder.importSymbols("CISCO-ITP-SP-MIB", "cItpSpDisplayName", "cItpSpCLLICode")
CItpTcTableLoadStatus, CItpTcSubSystemNumber, CItpTcXuaName, CItpTcNumberingPlan, CItpTcGtaDisplayZB, CItpTcPointCode, CItpTcGtaAddr, CItpTcNAI, CItpTcDisplayPC, CItpTcGtaDisplay, CItpTcTranslationType = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcTableLoadStatus", "CItpTcSubSystemNumber", "CItpTcXuaName", "CItpTcNumberingPlan", "CItpTcGtaDisplayZB", "CItpTcPointCode", "CItpTcGtaAddr", "CItpTcNAI", "CItpTcDisplayPC", "CItpTcGtaDisplay", "CItpTcTranslationType")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, Integer32, Counter32, Bits, Gauge32, TimeTicks, ModuleIdentity, Counter64, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Integer32", "Counter32", "Bits", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter64", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType")
TruthValue, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp")
ciscoItpSccpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 233))
ciscoItpSccpMIB.setRevisions(('2003-02-03 00:00', '2002-04-02 00:00', '2002-02-28 00:00', '2001-09-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoItpSccpMIB.setRevisionsDescriptions(('The ability to allow multiple instances of Signalling Points to run in the same device has introduce a new index structure. All objects in this MIB will be deprecated and replaced by objects in the CISCO-ITP-GSCCP-MIB.my MIB.', 'Added the following objects: cItpSccpGttAppGrNumUsed cItpSccpGttGtaTTorSSNvalue Updated the following Textual Convention: CItpSccpGttRoutingInd Updated the description for following objects: cItpSccpGttGtaTTorSSN cItpSccpGttGtaRoutingInd.', 'Added the following objects: CItpSccpGttPrefName cItpSccpPrefConfigLastChanged cItpSccpGttPrePrefConv cItpSccpGttPostPrefConv cItpSccpGttGtaAddrDispZB cItpSccpGttGtaAddrLenZB cItpSccpGttGtaAsName Added the following Tables: cItpSccpGttAppGrTable cItpSccpGttPrefTable Updated the following Textual Conventions: CItpSccpGttAppType CItpSccpGttGtaResType Deprecated the following objects: CItpSccpGttGtaAddrLen cItpSccpGttGtaAddrDisp cItpSccpGttGtaAddrLen Deprecated the following Tables: cItpSccpGttAppTable', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoItpSccpMIB.setLastUpdated('200302030000Z')
if mibBuilder.loadTexts: ciscoItpSccpMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoItpSccpMIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoItpSccpMIB.setDescription('The MIB for Signaling Connection Control Part(SCCP) messages transported over Signalling System No. 7 (SS7) Network via Cisco IP Transfer Point. This MIB for provides information specified in ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network. The Cisco IP Transfer Point (ITP) is a hardware and software solution that transports SS7 traffic using IP. Each ITP node provides function similar to SS7 signaling point. The relevant ITU documents describing this technology is the ITU Q series, including ITU Q.700: Introduction to CCITT Signalling System No. 7 and ITU Q.701 Functional description of the message transfer part (MTP) of Signalling System No. 7. The IETF Working Group Signaling Transport (SIGTRAN) has defined MTP3 User Adaptation (M3UA) and SCCP User Adaptation (SUA) protocols. The drafts can be found at: http://www.ietf.org/html.charters/sigtran-charter.html This MIB consists of the following tables: Concerned Point Code List Table Mated Application (MAP) Table Global Title Translation (GTT) Selector Table Global Title Address (GTA) Table Application Group Table Prefix Conversion Table ')
cItpSccpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 0))
cItpSccpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1))
cItpSccpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 2))
cItpSccpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1))
cItpSccpGttConPc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2))
cItpSccpGttMap = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3))
cItpSccpGttSel = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4))
cItpSccpGttGta = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5))
cItpSccpGttApp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6))
cItpSccpGttAppGr = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7))
cItpSccpGttPref = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8))
class CItpSccpConPcListName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Concerned Point Code list name.'
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CItpSccpGttSelName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Selector.'
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 12)

class CItpSccpGttAppName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Application Group.'
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CItpSccpGttPrefName(TextualConvention, OctetString):
    description = 'The configured name associated with SCCP GTT Prefix Conversion table. This name is supported as octet string containing administrative information in human-readable form. The use of control codes should be avoided. The use of newline should be avoided. The use of leading or trailing white space should be avoided.'
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 12)

class CItpSccpGttDisplaySS(TextualConvention, OctetString):
    description = 'The subsystem number in display format.'
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 3)

class CItpSccpGttAppCost(TextualConvention, Unsigned32):
    description = 'The cost associated with an entry in SCCP GTT Application Group.'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 8)

class CItpSccpGttAppType(TextualConvention, Integer32):
    description = "The list of application types in Application Group 'pc' : The application type is a point code. 'pcssn' : The application type is a point code and subsystem number (SSN). 'as' : The application type is an M3UA or SUA Application Server (AS)."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pc", 1), ("pcssn", 2), ("as", 3))

class CItpSccpGttGtaAddrLen(TextualConvention, Unsigned32):
    description = 'The SCCP GTT Global Title Address length. It is now deprecated because GTA address length can also be zero.'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 15)

class CItpSccpGttGtaAddrLenZB(TextualConvention, Unsigned32):
    description = 'The SCCP GTT Global Title Address length. For the default GTA address, the length can be zero.'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 15)

class CItpSccpGttMapType(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated Application type 'Primary' : The mated application is primary 'Backup' : The mated application is backup."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("primary", 1), ("backup", 2))

class CItpSccpGttGtaResType(TextualConvention, Integer32):
    description = "The list of SCCP GTT Result Type 'pc' : The GTA translates to a point code. 'pcssn' : The GTA translates to a point code and optional SSN 'app' : The GTA translates to a GTT Application Group. 'as' : The GTA translates to an M3UA or SUA Application Server (AS) name."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("pc", 1), ("pcssn", 2), ("app", 3), ("as", 4))

class CItpSccpGttRoutingInd(TextualConvention, Integer32):
    description = "The SCCP GTT Routing Indicator 'ri2gt' : Set RI to GT 'ri2ssn' : Set RI to SSN 'ssnRI2ssn' : Replace SSN and set RI to GT 'ssnRI2gt' : Replace SSN and set RI to SSN 'replTT' : Replace the TT 'riNotAppl' : RI is not applicable 'riUndef' : RI is undefined."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("ri2gt", 1), ("ri2ssn", 2), ("ssnRI2gt", 3), ("ssnRI2ssn", 4), ("replTT", 5), ("riNotAppl", 6), ("riUndef", 7))

class CItpSccpGttMapPcStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App point code status 'Allowed' : The mated application is allowed 'Prohibited' : The mated application is prohibited."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("allowed", 1), ("prohibited", 2))

class CItpSccpGttMapSsStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App subssystem status 'Allowed' : The mated application is allowed 'Other' : The mated application is prohibited."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("allowed", 1), ("prohibited", 2))

class CItpSccpGttMultInd(TextualConvention, Integer32):
    description = "The list of SCCP GTT Multiplicity Indicator 'Solitary' : The application is solitary 'Shared' : The application is shared 'Dominant' : The application is dominant 'Cost' : The application uses cost."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("solitary", 1), ("shared", 2), ("dominant", 3), ("cost", 4))

class CItpSccpGttMapCongStatus(TextualConvention, Integer32):
    description = "The list of SCCP GTT Mated App congestion status 'NotCong' : The point code not congested 'CongLevel1' : The congestion level 1 'CongLevel2' : The congestion level 2 'CongLevel3' : The congestion level 3."
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notCong", 1), ("congLevel1", 2), ("congLevel2", 3), ("congLevel3", 4))

class CItpSccpGttTransType(TextualConvention, Unsigned32):
    description = 'The SCCP GTT Translation Type (TT).'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class CItpSccpGttQOS(TextualConvention, Unsigned32):
    description = 'The SCCP GTT Quality of Service (QOS).'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class CItpSccpGttGlobalTitleInd(TextualConvention, Unsigned32):
    reference = 'The Global Title Indicator is defined in the International Telecommunication Union standard Q.713: Specifications of Signalling System No. 7 - Signalling Connection Control Part (SCCP) section 3.4.1 Address Indicator.'
    description = 'The SCCP GTT Global Title Indicator (GTI). The following values are generally used: No global title included (0), For ITU, GT includes NAI only (1), For ANSI, GT includes TT, NP and encoding scheme (1), GT includes only TT (2), GT includes TT, NP and encoding scheme (3), GT includes TT, NP, encoding scheme, NAI (4), Maximum GTI (15), Invalid GTI (253), Wild GTI (254).'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

cItpSccpTotalMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpTotalMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpTotalMsgs.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpTotalMsgs.setDescription('This counter is incremented every time a message is handled from a local or remote subsystem(Q752/9.3).')
cItpSccpLocalMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpLocalMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpLocalMsgs.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpLocalMsgs.setDescription('This counter is incremented every time a message is handled from a local subsystem(Q752/9.4).')
cItpSccpTotalGttMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpTotalGttMsgs.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpTotalGttMsgs.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpTotalGttMsgs.setDescription('This counter is incremented every time a message requiring global title translation (Q752/9.5) is handled.')
cItpSccpUDTMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpUDTMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpUDTMsgsSent.setDescription('This counter is incremented every time a unitdata (UDT) message is sent (Q752/9 bis.1).')
cItpSccpUDTSMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpUDTSMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpUDTSMsgsSent.setDescription('This counter is incremented every time a unitdata service (UDTS) message is sent (Q752/9 bis.2).')
cItpSccpUDTMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpUDTMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpUDTMsgsRcvd.setDescription('This counter is incremented every time a unitdata (UDT) message is received (Q752/9 bis.3).')
cItpSccpUDTSMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpUDTSMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpUDTSMsgsRcvd.setDescription('This counter is incremented every time a unitdata service (UDTS) message is received (Q752/9 bis.4).')
cItpSccpXUDTMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpXUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpXUDTMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpXUDTMsgsSent.setDescription('This counter is incremented every time a extended unitdata (XUDT) message is sent (Q752/9 bis.13).')
cItpSccpXUDTSMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsSent.setDescription('This counter is incremented every time a extended unitdata service (XUDTS) message is sent (Q752/9 bis.14).')
cItpSccpXUDTMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpXUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpXUDTMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpXUDTMsgsRcvd.setDescription('This counter is incremented every time a extended unitdata (XUDT) message is received (Q752/9 bis.15).')
cItpSccpXUDTSMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpXUDTSMsgsRcvd.setDescription('This counter is incremented every time a extended unitdata service (XUDTS) message is received (Q752/9 bis.16).')
cItpSccpLUDTMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpLUDTMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpLUDTMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpLUDTMsgsSent.setDescription('This counter is incremented every time a long unitdata (LUDT) message is sent (Q752/9 bis.17).')
cItpSccpLUDTSMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsSent.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsSent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsSent.setDescription('This counter is incremented every time a long unitdata (LUDT) service message is sent (Q752/9 bis.18).')
cItpSccpLUDTMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpLUDTMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpLUDTMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpLUDTMsgsRcvd.setDescription('This counter is incremented every time a long unitdata (LUDT) message is received (Q752/9 bis.19).')
cItpSccpLUDTSMsgsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsRcvd.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsRcvd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpLUDTSMsgsRcvd.setDescription('This counter is incremented every time a long unitdata (LUDT) service message is received (Q752/9 bis.20).')
cItpSccpCrToMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpCrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpCrToMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpCrToMtp.setDescription('This counter is incremented every time a Connection Request(CR) messages sent to MTP. This count include ISDN-UP with embedded CRs (Q752/9 bis.5).')
cItpSccpCrefToMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpCrefToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpCrefToMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpCrefToMtp.setDescription('This counter is incremented every time a Connection Refusal (CREF) message is sent to MTP (Q752/9 bis.6).')
cItpSccpCrFromMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpCrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpCrFromMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpCrFromMtp.setDescription('This counter is incremented every time a Connection Reguest messages received from MTP. This count inlcudes ISDN- UP with embedded CRs (Q752/9 bis.7).')
cItpSccpCrefFromMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpCrefFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpCrefFromMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpCrefFromMtp.setDescription('This counter is incremented every time a Connection Refusal (CREF) message is received from MTP (Q752/9 bis.8).')
cItpSccpRsrToMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpRsrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpRsrToMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpRsrToMtp.setDescription('This counter is incremented every time a Reset Request (RSR) message is sent to MTP (Q752/9 bis.9).')
cItpSccpRsrFromMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpRsrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpRsrFromMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpRsrFromMtp.setDescription('This counter is incremented every time a Reset Request (RSR) message is received from MTP (Q752/9 bis.10).')
cItpSccpErrToMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpErrToMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpErrToMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpErrToMtp.setDescription('This counter is incremented every time a Error Message (ERR) message is sent to MTP (Q752/9 bis.11).')
cItpSccpErrFromMtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpErrFromMtp.setReference('ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network Table 9.')
if mibBuilder.loadTexts: cItpSccpErrFromMtp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpErrFromMtp.setDescription('This counter is incremented every time a Error Message (ERR) message is received from MTP (Q752/9 bis.12).')
cItpSccpCpcConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 24), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpCpcConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpCpcConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttConPcTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the Concerned Point Code Table.')
cItpSccpMapConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpMapConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpMapConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttMapTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the Mated Application Table.')
cItpSccpSelConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 26), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpSelConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpSelConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttSelTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the GTT Selector Table.')
cItpSccpGtaConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 27), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGtaConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGtaConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttGtaTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the GTT Global Title Address Table.')
cItpSccpAppConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 28), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpAppConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpAppConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttAppTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the GTT Application Group Table.')
cItpSccpGttMapStateNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cItpSccpGttMapStateNotifEnabled.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapStateNotifEnabled.setDescription("The SP linkset notification truth value. 'true' Indicates that the cItpSccpGttMapStateChange notification is to be generated when the state changes. That is, the notification generation is enabled. 'false' Indicates that the cItpSccpGttMapStateChange notification generation is disabled.")
cItpSccpPrefConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 30), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpPrefConfigLastChanged.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpPrefConfigLastChanged.setDescription('The value of sysUpTime at the time of the last creation or deletion of an entry in the cItpSccpGttPrefTable. If the local network management subsystem is re-initialization, then this object contains the sysUpTime at the time when this occurred. This value can be used to prevent unnecessary walks of the GTT Prefix Conversion Table.')
cItpSccpGttConfigLoad = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 31), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttConfigLoad.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConfigLoad.setDescription('The value of sysUpTime at the time of the last load of the GTT table using file format.')
cItpSccpGttConfigLoadStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 1, 32), CItpTcTableLoadStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttConfigLoadStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConfigLoadStatus.setDescription('The status of the deprecatedload or status from the prior load operation.')
cItpSccpGttConPcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2, 1), )
if mibBuilder.loadTexts: cItpSccpGttConPcTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPcTable.setDescription('A table of concerned point codes.')
cItpSccpGttConPcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttConPcListName"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttConPointCode"))
if mibBuilder.loadTexts: cItpSccpGttConPcTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPcTableEntry.setDescription('A list of concerned point codes.')
cItpSccpGttConPcListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2, 1, 1, 1), CItpSccpConPcListName())
if mibBuilder.loadTexts: cItpSccpGttConPcListName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPcListName.setDescription('The name of the Concerned Point Code list.')
cItpSccpGttConPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2, 1, 1, 2), CItpTcPointCode())
if mibBuilder.loadTexts: cItpSccpGttConPointCode.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPointCode.setDescription('The concerned point code for SCCP GTT.')
cItpSccpGttConPcRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttConPcRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPcRefCount.setDescription('The reference count for this list.')
cItpSccpGttMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1), )
if mibBuilder.loadTexts: cItpSccpGttMapTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapTable.setDescription('A table of SCCP GTT Mated Application (MAP) entries.')
cItpSccpGttMapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttMapPc"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSsn"))
if mibBuilder.loadTexts: cItpSccpGttMapTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapTableEntry.setDescription('A list of SCCP GTT MAP attributes.')
cItpSccpGttMapPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 1), CItpTcPointCode())
if mibBuilder.loadTexts: cItpSccpGttMapPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapPc.setDescription('The point code for GTT MAP entry.')
cItpSccpGttMapSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 2), CItpTcSubSystemNumber())
if mibBuilder.loadTexts: cItpSccpGttMapSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapSsn.setDescription('The subsystem number (SSN) for GTT MAP entry.')
cItpSccpGttMapDisplayPC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 3), CItpTcDisplayPC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapDisplayPC.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapDisplayPC.setDescription('The MAP point code in display format.')
cItpSccpGttMapDisplaySS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 4), CItpSccpGttDisplaySS()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapDisplaySS.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapDisplaySS.setDescription('The MAP subsystem number in display format.')
cItpSccpGttMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 5), CItpSccpGttMapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapType.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapType.setDescription('The GTT MAP subsystem type.')
cItpSccpGttMapPcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 6), CItpSccpGttMapPcStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapPcStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapPcStatus.setDescription('The GTT MAP point code status.')
cItpSccpGttMapSsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 7), CItpSccpGttMapSsStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapSsStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapSsStatus.setDescription('The GTT MAP subsystem status.')
cItpSccpGttMapMultInd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 8), CItpSccpGttMultInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapMultInd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapMultInd.setDescription('The GTT mated application multiplicity indicator.')
cItpSccpGttMapBackupPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 9), CItpTcPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapBackupPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapBackupPc.setDescription('The backup point code for the mated Application.')
cItpSccpGttMapBackupSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 10), CItpTcSubSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapBackupSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapBackupSsn.setDescription('The backup subsystem number for the mated Application.')
cItpSccpGttMapConPcList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 11), CItpSccpConPcListName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapConPcList.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapConPcList.setDescription('The concerned point code list for the mated Application.')
cItpSccpGttMapReRouteOnCong = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapReRouteOnCong.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapReRouteOnCong.setDescription("The GTT Mated App re-route on congestion truth value. 'true' Re-routing on congestion is enabled. 'false' Re-routing on congestion is disabled.")
cItpSccpGttMapAdjacent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapAdjacent.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapAdjacent.setDescription("The GTT Mated App Point Code adjacent truth value. 'true' Indicates that MAP PC is adjacent. 'false' Indicates that MAP PC is not adjacent.")
cItpSccpGttMapLastSsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapLastSsUsed.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapLastSsUsed.setDescription("The GTT MAP last subsystem used truth value. 'true' It is the last used subsystem. 'false' It is not the last used subsystem.")
cItpSccpGttMapUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 15), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapUsed.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapUsed.setDescription('This counter is incremented every time a message is routed by the GTT Mated Application.')
cItpSccpGttMapAltUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 16), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapAltUsed.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapAltUsed.setDescription('This counter is incremented every time a message is re-routed on congestion by the GTT Mated Application.')
cItpSccpGttMapSccpUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 17), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapSccpUnavail.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapSccpUnavail.setDescription('This counter is incremented every time a SCCP is unavailable at the GTT Mated Application.')
cItpSccpGttMapPcUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 18), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapPcUnavail.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapPcUnavail.setDescription('This counter is incremented every time a point code is unavailable at the GTT Mated Application.')
cItpSccpGttMapSsUnavail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 19), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapSsUnavail.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapSsUnavail.setDescription('This counter is incremented every time a subsystem is unavailable at the GTT Mated Application.')
cItpSccpGttMapPcCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 20), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapPcCongested.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapPcCongested.setDescription('This counter is incremented every time a point code is congested at the GTT Mated Application.')
cItpSccpGttMapSsCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 21), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapSsCongested.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapSsCongested.setDescription('This counter is incremented every time a subsystem is congested at the GTT Mated Application.')
cItpSccpGttMapMtp3Fail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 22), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapMtp3Fail.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapMtp3Fail.setDescription('This counter is incremented every time a the MTP3 layer failed at the GTT Mated Application.')
cItpSccpGttMapRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapRefCount.setDescription('The reference count for this MAP entry.')
cItpSccpGttMapCongStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 3, 1, 1, 24), CItpSccpGttMapCongStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttMapCongStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapCongStatus.setDescription('The status of congestion level for this MAP point code.')
cItpSccpGttSelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1), )
if mibBuilder.loadTexts: cItpSccpGttSelTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelTable.setDescription('A table of SCCP GTT Selector entries.')
cItpSccpGttSelTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttSelTT"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNAI"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNP"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttSelGTI"))
if mibBuilder.loadTexts: cItpSccpGttSelTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelTableEntry.setDescription('A list of SCCP GTT Selector attributes.')
cItpSccpGttSelTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 1), CItpSccpGttTransType())
if mibBuilder.loadTexts: cItpSccpGttSelTT.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelTT.setDescription('Translation Type (TT) for this GTT Selector.')
cItpSccpGttSelNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 2), CItpTcNAI())
if mibBuilder.loadTexts: cItpSccpGttSelNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelNAI.setDescription('Nature of Address Indicator (NAI) for GTT Selector.')
cItpSccpGttSelNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 3), CItpTcNumberingPlan())
if mibBuilder.loadTexts: cItpSccpGttSelNP.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelNP.setDescription('Numbering Plan (NP) for this GTT Selector.')
cItpSccpGttSelGTI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 4), CItpSccpGttGlobalTitleInd())
if mibBuilder.loadTexts: cItpSccpGttSelGTI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelGTI.setDescription('Global Title Indicator (GTI) for this GTT Selector.')
cItpSccpGttSelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 5), CItpSccpGttSelName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttSelName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelName.setDescription('The name of the GTT selector.')
cItpSccpGttSelNumPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttSelNumPerf.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelNumPerf.setDescription('This counter is incremented every time a global title translations is performed using this GTT Selector.')
cItpSccpGttSelNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttSelNotFound.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelNotFound.setDescription('This counter is incremented every time a global title title translations was required and a selector was not found.')
cItpSccpGttSelQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 8), CItpSccpGttQOS()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttSelQOS.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelQOS.setDescription('The SCCP GTT Selector specifies the QOS.')
cItpSccpGttSelRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttSelRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelRefCount.setDescription('The reference count for this GTT Selector.')
cItpSccpGttPrePrefConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 10), CItpSccpGttPrefName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrePrefConv.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrePrefConv.setDescription("The Prefix Conversion Table is used to convert GTA digits. This object specifies that the conversion occurs 'before' global title translation.")
cItpSccpGttPostPrefConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 4, 1, 1, 11), CItpSccpGttPrefName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPostPrefConv.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPostPrefConv.setDescription("The Prefix Conversion Table is used to convert GTA digits. This object specifies that the conversion occurs 'after' global title translation.")
cItpSccpGttGtaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1), )
if mibBuilder.loadTexts: cItpSccpGttGtaTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaTable.setDescription('A table of SCCP Global Title Address entries.')
cItpSccpGttGtaTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaTT"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaNAI"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaNP"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaGTI"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddr"))
if mibBuilder.loadTexts: cItpSccpGttGtaTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaTableEntry.setDescription('A list of SCCP Global Title Address attributes.')
cItpSccpGttGtaTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 1), CItpSccpGttTransType())
if mibBuilder.loadTexts: cItpSccpGttGtaTT.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaTT.setDescription('Translation Type (TT) for this Global Title Address.')
cItpSccpGttGtaNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 2), CItpTcNAI())
if mibBuilder.loadTexts: cItpSccpGttGtaNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaNAI.setDescription('Nature of Address Indicator (NAI) for Global Title Address.')
cItpSccpGttGtaNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 3), CItpTcNumberingPlan())
if mibBuilder.loadTexts: cItpSccpGttGtaNP.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaNP.setDescription('Numbering Plan (NP) for this Global Title Address.')
cItpSccpGttGtaGTI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 4), CItpSccpGttGlobalTitleInd())
if mibBuilder.loadTexts: cItpSccpGttGtaGTI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaGTI.setDescription('Global Title Indicator (GTI) for this Global Title Address.')
cItpSccpGttGtaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 5), CItpTcGtaAddr())
if mibBuilder.loadTexts: cItpSccpGttGtaAddr.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAddr.setDescription('The Global Title Address is 8 octets of the Called Party Address (CDPA).')
cItpSccpGttGtaAddrDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 6), CItpTcGtaDisplay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaAddrDisp.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAddrDisp.setDescription("The ASCII display string of Global Title Address of 15 hex digits of the Called Party Address (CDPA). This object is deprecated so as to allow a null display string for a 'default' GTA.")
cItpSccpGttGtaAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 7), CItpSccpGttGtaAddrLen()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaAddrLen.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAddrLen.setDescription('The number of hex digits in the Global Title Address of the Called Party Address (CDPA). This object is deprecated so as to allow a GTA address length equal to zero.')
cItpSccpGttGtaSelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 8), CItpSccpGttSelName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaSelName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaSelName.setDescription('The Global Title Address selector name from cItpSccpGttSelTable.')
cItpSccpGttGtaResType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 9), CItpSccpGttGtaResType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaResType.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaResType.setDescription('The SCCP Global Title Translation result type.')
cItpSccpGttGtaResPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 10), CItpTcPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaResPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaResPc.setDescription("When the GTA translates to a point code, it has a valid point code and cItpSccpGttGtaResType is 'pc'. Otherwise it is zero.")
cItpSccpGttGtaResMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 11), CItpTcPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaResMap.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaResMap.setDescription("When the GTA translates to a point code and an optional ssn, it has a valid point code and cItpSccpGttGtaResType is 'pcssn'. Otherwise it is zero.")
cItpSccpGttGtaResAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 12), CItpSccpGttAppName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaResAppGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaResAppGroup.setDescription("When the GTA translates to an application group, it has a valid application group name and cItpSccpGttGtaResType is 'app'.")
cItpSccpGttGtaTTorSSN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 13), CItpTcTranslationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaTTorSSN.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaTTorSSN.setDescription("When this object is 'tt', the object cItpSccpGttGtaTTorSSNvalue specifies the SCCP GTT Translation Type (TT). When this object is 'ssn', the object cItpSccpGttGtaTTorSSNvalue specifies the SCCP SubSystem Number (SSN).")
cItpSccpGttGtaRoutingInd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 14), CItpSccpGttRoutingInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaRoutingInd.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaRoutingInd.setDescription("The SCCP GTT GTA specifies the routing indicator. When cItpSccpGttGtaResType is 'pc' or 'pcssn', this object has a valid routing indicator. When cItpSccpGttGtaResType is 'app' or 'as', the routing indicator is not applicable.")
cItpSccpGttGtaQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 15), CItpSccpGttQOS()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaQOS.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaQOS.setDescription('The SCCP GTT GTA specifies the QOS.')
cItpSccpGttGtaAddrDispZB = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 16), CItpTcGtaDisplayZB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaAddrDispZB.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAddrDispZB.setDescription('The ASCII display string of Global Title Address of 15 hex digits of the Called Party Address (CDPA). A zero length string specifies a default GTA value for the selector.')
cItpSccpGttGtaAddrLenZB = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 17), CItpSccpGttGtaAddrLenZB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaAddrLenZB.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAddrLenZB.setDescription('The number of hex digits in the Global Title Address of the Called Party Address (CDPA). For a default GTA, the address length is zero.')
cItpSccpGttGtaAsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 18), CItpTcXuaName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaAsName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaAsName.setDescription("The Application Server (AS) name specified by the GTA. It is valid only when cItpSccpGttGtaResType is 'as'. Otherwise it is a zero length string.")
cItpSccpGttGtaTTorSSNvalue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 5, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttGtaTTorSSNvalue.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaTTorSSNvalue.setDescription("This object specifies SCCP GTT Translation Type (TT) value when cItpSccpGttGtaTTorSSN is 'tt'. It specifies SCCP SubSystem Number (SSN) value when cItpSccpGttGtaTTorSSN is 'ssn'. A zero value specifies that the TT or the SSN is not applicable for this GTA entry.")
cItpSccpGttAppTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1), )
if mibBuilder.loadTexts: cItpSccpGttAppTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppTable.setDescription('A table of SCCP GTT Application Group Table entries.')
cItpSccpGttAppTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttAppName"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttAppCost"))
if mibBuilder.loadTexts: cItpSccpGttAppTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppTableEntry.setDescription('A list of SCCP GTT Application Group attributes.')
cItpSccpGttAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 1), CItpSccpGttAppName())
if mibBuilder.loadTexts: cItpSccpGttAppName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppName.setDescription('The GTT Application Group name.')
cItpSccpGttAppCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 2), CItpSccpGttAppCost())
if mibBuilder.loadTexts: cItpSccpGttAppCost.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppCost.setDescription('The cost for the item in the GTT Application Group.')
cItpSccpGttAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 3), CItpSccpGttAppType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppType.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppType.setDescription('The type of the item in the GTT Application Group.')
cItpSccpGttAppPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 4), CItpTcPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppPc.setDescription('The point code specified by the item in the GTT Application Group.')
cItpSccpGttAppSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 5), CItpTcSubSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppSsn.setDescription("The subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cItpSccpGttAppItemType is 'pcssn'. Otherwise it is zero.")
cItpSccpGttAppRi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 6), CItpSccpGttRoutingInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppRi.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppRi.setDescription('The routing indicator (RI) specified by the item in the GTT Application Group.')
cItpSccpGttAppMult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 7), CItpSccpGttMultInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppMult.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppMult.setDescription('The multiplicity of the GTT Application Group.')
cItpSccpGttAppRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 6, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppRefCount.setDescription('The reference count for the GTT Application Group.')
cItpSccpGttAppGrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1), )
if mibBuilder.loadTexts: cItpSccpGttAppGrTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrTable.setDescription('A table of SCCP GTT Application Group Table entries.')
cItpSccpGttAppGrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrName"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrCost"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrEntNum"))
if mibBuilder.loadTexts: cItpSccpGttAppGrTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrTableEntry.setDescription('A list of SCCP GTT Application Group attributes.')
cItpSccpGttAppGrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 1), CItpSccpGttAppName())
if mibBuilder.loadTexts: cItpSccpGttAppGrName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrName.setDescription('The GTT Application Group name.')
cItpSccpGttAppGrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 2), CItpSccpGttAppCost())
if mibBuilder.loadTexts: cItpSccpGttAppGrCost.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrCost.setDescription('The cost for the item in the GTT Application Group.')
cItpSccpGttAppGrEntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cItpSccpGttAppGrEntNum.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrEntNum.setDescription('The entry number for the same cost for the item in the GTT Application Group.')
cItpSccpGttAppGrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 4), CItpSccpGttAppType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrType.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrType.setDescription('The type of the item in the GTT Application Group.')
cItpSccpGttAppGrPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 5), CItpTcPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrPc.setDescription('The point code specified by the item in the GTT Application Group.')
cItpSccpGttAppGrSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 6), CItpTcSubSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrSsn.setDescription("The subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cItpSccpGttAppItemType is 'pcssn'. Otherwise it is zero.")
cItpSccpGttAppGrRi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 7), CItpSccpGttRoutingInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrRi.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrRi.setDescription('The routing indicator (RI) specified by the item in the GTT Application Group.')
cItpSccpGttAppGrMult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 8), CItpSccpGttMultInd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrMult.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrMult.setDescription('The multiplicity of the GTT Application Group.')
cItpSccpGttAppGrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrRefCount.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrRefCount.setDescription('The reference count for the GTT Application Group.')
cItpSccpGttAppGrAsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 10), CItpTcXuaName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrAsName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrAsName.setDescription("The Application Server (AS) name specified by the item in the GTT Application Group. It is valid only when cItpSccpGttAppGrItemType is 'as'. Otherwise it is a zero length string.")
cItpSccpGttAppGrNewSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 11), CItpTcSubSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrNewSsn.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrNewSsn.setDescription("The new subsystem number (SSN) specified by the item in the GTT Application Group. It is valid only when cItpSccpGttAppGrItemType is 'as'. Otherwise it is zero.")
cItpSccpGttAppGrNumUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttAppGrNumUsed.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrNumUsed.setDescription('The number of times this item in the GTT Application Group is used successfully.')
cItpSccpGttPrefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1), )
if mibBuilder.loadTexts: cItpSccpGttPrefTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefTable.setDescription('A table of SCCP GTT Prefix Conversion Table entries. When a packet with GTA is received, it may need global title translation depending on Translation Type (TT), Numbering Plan (NP), Network Address Indicator (NAI) and Global Title Indicator (GTI) present in the packet. To perform the translation a selector (cItpSccpGttSelTable) corresponding to TT, NP, NAI and GTI is used. The selector also specifies prefix conversion of the GTA before (pre) performing the global title translation or after (post) performing the global title translation. A selector can specify any or both (pre and post) prefix conversion tables. The prefix conversion involves matching of GTA digits in the cItpSccpGttPrefInAddr and then replacing those digits with the digits in cItpSccpGttPrefOutAddr.')
cItpSccpGttPrefTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefName"), (0, "CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefInAddr"))
if mibBuilder.loadTexts: cItpSccpGttPrefTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefTableEntry.setDescription('A list of SCCP GTT Prefix Conversion attributes.')
cItpSccpGttPrefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 1), CItpSccpGttPrefName())
if mibBuilder.loadTexts: cItpSccpGttPrefName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefName.setDescription('The GTT Prefix Conversion table name.')
cItpSccpGttPrefInAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 2), CItpTcGtaAddr())
if mibBuilder.loadTexts: cItpSccpGttPrefInAddr.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefInAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in this object, then the prefix conversion is performed.')
cItpSccpGttPrefOutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 3), CItpTcGtaAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrefOutAddr.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefOutAddr.setDescription('If the GTA of the Called Party Address (CDPA) matches the digits in cItpSccpGttPrefInAddr then this object is used in the prefix conversion.')
cItpSccpGttPrefTblNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 4), CItpTcNAI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrefTblNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefTblNAI.setDescription('Nature of Address Indicator (NAI) for the Prefix Conversion Table.')
cItpSccpGttPrefTblNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 5), CItpTcNumberingPlan()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrefTblNP.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefTblNP.setDescription('Numbering Plan (NP) for the Prefix Conversion Table.')
cItpSccpGttPrefItemNAI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 6), CItpTcNAI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrefItemNAI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefItemNAI.setDescription('Nature of Address Indicator (NAI) for the deprecated item in this Prefix Conversion Table.')
cItpSccpGttPrefItemNP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 233, 1, 8, 1, 1, 7), CItpTcNumberingPlan()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpSccpGttPrefItemNP.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefItemNP.setDescription('Numbering Plan (NP) for the deprecateditem in this Prefix Conversion Table.')
cItpSccpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 0, 0))
cItpSccpGttMapStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 233, 0, 0, 1)).setObjects(("CISCO-ITP-SP-MIB", "cItpSpCLLICode"), ("CISCO-ITP-SP-MIB", "cItpSpDisplayName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapDisplayPC"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapDisplaySS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSsStatus"))
if mibBuilder.loadTexts: cItpSccpGttMapStateChange.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapStateChange.setDescription('The notification generated when a mated application subsystem changes to a new state. The value of cItpSccpGttMapSsStatus indicates the new state for the subsystem.')
cItpSccpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 1))
cItpSccpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2))
cItpSccpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 1, 1)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpScalarsGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttConPcGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpMIBCompliance = cItpSccpMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
cItpSccpMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 1, 2)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpScalarsGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttConPcGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpNotificationsGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpConfigStatusGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelGroupRev1"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaGroupRev1"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpMIBComplianceRev1 = cItpSccpMIBComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpMIBComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
cItpSccpMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 1, 3)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpScalarsGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttConPcGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpNotificationsGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpConfigStatusGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelGroupRev1"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaGroupRev2"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrGroupRev2"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpMIBComplianceRev2 = cItpSccpMIBComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpMIBComplianceRev2.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
cItpSccpScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 1)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpTotalMsgs"), ("CISCO-ITP-SCCP-MIB", "cItpSccpLocalMsgs"), ("CISCO-ITP-SCCP-MIB", "cItpSccpTotalGttMsgs"), ("CISCO-ITP-SCCP-MIB", "cItpSccpUDTMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpUDTSMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpUDTMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpUDTSMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpXUDTMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpXUDTSMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpXUDTMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpXUDTSMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpLUDTMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpLUDTSMsgsSent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpLUDTMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpLUDTSMsgsRcvd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpCrToMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpCrefToMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpCrFromMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpCrefFromMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpRsrToMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpRsrFromMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpErrToMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpErrFromMtp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpCpcConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpMapConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpSelConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGtaConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpAppConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapStateNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpScalarsGroup = cItpSccpScalarsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpScalarsGroup.setDescription('SCCP main objects.')
cItpSccpGttConPcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 2)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttConPcRefCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttConPcGroup = cItpSccpGttConPcGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttConPcGroup.setDescription('SCCP Concerned Point Code objects.')
cItpSccpGttMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 3)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapDisplayPC"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapDisplaySS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapPcStatus"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSsStatus"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapMultInd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapBackupPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapBackupSsn"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapConPcList"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapReRouteOnCong"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapAdjacent"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapLastSsUsed"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapUsed"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapAltUsed"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSccpUnavail"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapPcUnavail"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSsUnavail"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapPcCongested"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapSsCongested"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapMtp3Fail"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapRefCount"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapCongStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttMapGroup = cItpSccpGttMapGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttMapGroup.setDescription('SCCP GTT Mated Application objects.')
cItpSccpGttSelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 4)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNumPerf"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNotFound"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelQOS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelRefCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttSelGroup = cItpSccpGttSelGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelGroup.setDescription('SCCP GTT Selector objects.')
cItpSccpGttGtaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 5)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrDisp"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrLen"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaSelName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResMap"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResAppGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaTTorSSN"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaRoutingInd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaQOS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttGtaGroup = cItpSccpGttGtaGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaGroup.setDescription('SCCP GTT Global Title Address objects.')
cItpSccpGttAppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 6)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppSsn"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppRi"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppMult"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppRefCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttAppGroup = cItpSccpGttAppGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGroup.setDescription('SCCP GTT Application Group objects.')
cItpSccpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 7)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttMapStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpNotificationsGroup = cItpSccpNotificationsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpNotificationsGroup.setDescription('SCCP notification objects.')
cItpSccpConfigStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 8)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpPrefConfigLastChanged"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttConfigLoad"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttConfigLoadStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpConfigStatusGroup = cItpSccpConfigStatusGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpConfigStatusGroup.setDescription('Objects to provide information on configuration status and time when changes where made to the SCCP configuration.')
cItpSccpGttSelGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 9)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNumPerf"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelNotFound"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelQOS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttSelRefCount"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrePrefConv"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPostPrefConv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttSelGroupRev1 = cItpSccpGttSelGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttSelGroupRev1.setDescription('SCCP GTT Selector objects.')
cItpSccpGttGtaGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 10)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaSelName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResMap"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResAppGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaTTorSSN"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaRoutingInd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaQOS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrDispZB"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrLenZB"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAsName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttGtaGroupRev1 = cItpSccpGttGtaGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaGroupRev1.setDescription('SCCP GTT Global Title Address objects.')
cItpSccpGttAppGrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 11)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrSsn"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrRi"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrMult"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrRefCount"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrAsName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrNewSsn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttAppGrGroup = cItpSccpGttAppGrGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrGroup.setDescription('SCCP GTT Application Group objects.')
cItpSccpGttPrefGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 12)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefOutAddr"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefTblNAI"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefTblNP"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefItemNAI"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttPrefItemNP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttPrefGroup = cItpSccpGttPrefGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttPrefGroup.setDescription('SCCP GTT Prefix Conversion Table objects.')
cItpSccpGttGtaGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 13)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaSelName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResMap"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaResAppGroup"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaTTorSSN"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaRoutingInd"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaQOS"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrDispZB"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAddrLenZB"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaAsName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttGtaTTorSSNvalue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttGtaGroupRev2 = cItpSccpGttGtaGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttGtaGroupRev2.setDescription('SCCP GTT Global Title Address objects.')
cItpSccpGttAppGrGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 233, 2, 2, 14)).setObjects(("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrType"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrPc"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrSsn"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrRi"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrMult"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrRefCount"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrAsName"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrNewSsn"), ("CISCO-ITP-SCCP-MIB", "cItpSccpGttAppGrNumUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpSccpGttAppGrGroupRev2 = cItpSccpGttAppGrGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: cItpSccpGttAppGrGroupRev2.setDescription('SCCP GTT Application Group objects.')
mibBuilder.exportSymbols("CISCO-ITP-SCCP-MIB", CItpSccpGttTransType=CItpSccpGttTransType, CItpSccpGttGtaAddrLen=CItpSccpGttGtaAddrLen, CItpSccpGttMultInd=CItpSccpGttMultInd, cItpSccpGttConPcTable=cItpSccpGttConPcTable, cItpSccpGttSelGroup=cItpSccpGttSelGroup, cItpSccpGttAppMult=cItpSccpGttAppMult, cItpSccpGttPrefInAddr=cItpSccpGttPrefInAddr, cItpSccpGttSelNumPerf=cItpSccpGttSelNumPerf, cItpSccpGttMapSsStatus=cItpSccpGttMapSsStatus, cItpSccpGttConfigLoad=cItpSccpGttConfigLoad, cItpSccpGttConPcListName=cItpSccpGttConPcListName, cItpSccpGttGtaQOS=cItpSccpGttGtaQOS, cItpSccpLUDTSMsgsRcvd=cItpSccpLUDTSMsgsRcvd, cItpSccpGttMapStateNotifEnabled=cItpSccpGttMapStateNotifEnabled, cItpSccpGttAppGroup=cItpSccpGttAppGroup, cItpSccpGttGtaAddrLen=cItpSccpGttGtaAddrLen, cItpSccpGttSel=cItpSccpGttSel, cItpSccpGttConPcGroup=cItpSccpGttConPcGroup, cItpSccpConformance=cItpSccpConformance, cItpSccpGttPref=cItpSccpGttPref, cItpSccpGttGta=cItpSccpGttGta, cItpSccpGttGtaTTorSSN=cItpSccpGttGtaTTorSSN, cItpSccpScalarsGroup=cItpSccpScalarsGroup, CItpSccpGttDisplaySS=CItpSccpGttDisplaySS, cItpSccpNotifications=cItpSccpNotifications, CItpSccpGttMapType=CItpSccpGttMapType, cItpSccpAppConfigLastChanged=cItpSccpAppConfigLastChanged, cItpSccpGttPrefTableEntry=cItpSccpGttPrefTableEntry, cItpSccpGttMapRefCount=cItpSccpGttMapRefCount, cItpSccpUDTSMsgsSent=cItpSccpUDTSMsgsSent, CItpSccpGttAppName=CItpSccpGttAppName, CItpSccpGttSelName=CItpSccpGttSelName, cItpSccpUDTSMsgsRcvd=cItpSccpUDTSMsgsRcvd, cItpSccpMIBComplianceRev2=cItpSccpMIBComplianceRev2, cItpSccpGttPrefOutAddr=cItpSccpGttPrefOutAddr, cItpSccpGttAppGrType=cItpSccpGttAppGrType, cItpSccpGttGtaTT=cItpSccpGttGtaTT, cItpSccpLUDTMsgsRcvd=cItpSccpLUDTMsgsRcvd, cItpSccpGttGtaGTI=cItpSccpGttGtaGTI, cItpSccpCrefFromMtp=cItpSccpCrefFromMtp, cItpSccpCpcConfigLastChanged=cItpSccpCpcConfigLastChanged, cItpSccpGttGtaTable=cItpSccpGttGtaTable, cItpSccpGttConPcTableEntry=cItpSccpGttConPcTableEntry, cItpSccpGttPrefTblNAI=cItpSccpGttPrefTblNAI, CItpSccpConPcListName=CItpSccpConPcListName, cItpSccpRsrFromMtp=cItpSccpRsrFromMtp, cItpSccpGttAppGrGroupRev2=cItpSccpGttAppGrGroupRev2, cItpSccpGttGtaAddrDisp=cItpSccpGttGtaAddrDisp, cItpSccpXUDTSMsgsSent=cItpSccpXUDTSMsgsSent, cItpSccpGttConPointCode=cItpSccpGttConPointCode, cItpSccpGttMapLastSsUsed=cItpSccpGttMapLastSsUsed, cItpSccpGttAppGrGroup=cItpSccpGttAppGrGroup, cItpSccpGttConfigLoadStatus=cItpSccpGttConfigLoadStatus, cItpSccpGttMapSsn=cItpSccpGttMapSsn, cItpSccpXUDTMsgsRcvd=cItpSccpXUDTMsgsRcvd, cItpSccpGttGtaGroupRev1=cItpSccpGttGtaGroupRev1, cItpSccpCrToMtp=cItpSccpCrToMtp, cItpSccpXUDTMsgsSent=cItpSccpXUDTMsgsSent, cItpSccpGttMapPcStatus=cItpSccpGttMapPcStatus, cItpSccpGttPrefTblNP=cItpSccpGttPrefTblNP, cItpSccpSelConfigLastChanged=cItpSccpSelConfigLastChanged, cItpSccpGttMapTable=cItpSccpGttMapTable, cItpSccpGttGtaTTorSSNvalue=cItpSccpGttGtaTTorSSNvalue, cItpSccpGttMapMultInd=cItpSccpGttMapMultInd, cItpSccpGttSelTableEntry=cItpSccpGttSelTableEntry, CItpSccpGttGtaAddrLenZB=CItpSccpGttGtaAddrLenZB, cItpSccpGttGtaResPc=cItpSccpGttGtaResPc, cItpSccpGttPrefName=cItpSccpGttPrefName, cItpSccpLUDTMsgsSent=cItpSccpLUDTMsgsSent, CItpSccpGttMapCongStatus=CItpSccpGttMapCongStatus, cItpSccpErrToMtp=cItpSccpErrToMtp, cItpSccpCrefToMtp=cItpSccpCrefToMtp, CItpSccpGttQOS=CItpSccpGttQOS, cItpSccpGttAppPc=cItpSccpGttAppPc, cItpSccpGttSelNAI=cItpSccpGttSelNAI, cItpSccpGttAppTableEntry=cItpSccpGttAppTableEntry, cItpSccpGttConPc=cItpSccpGttConPc, cItpSccpMIBObjects=cItpSccpMIBObjects, cItpSccpGttPrefItemNP=cItpSccpGttPrefItemNP, cItpSccpGttAppRefCount=cItpSccpGttAppRefCount, cItpSccpGttAppGrRi=cItpSccpGttAppGrRi, cItpSccpMIBGroups=cItpSccpMIBGroups, cItpSccpRsrToMtp=cItpSccpRsrToMtp, cItpSccpGttMapBackupPc=cItpSccpGttMapBackupPc, cItpSccpTotalMsgs=cItpSccpTotalMsgs, PYSNMP_MODULE_ID=ciscoItpSccpMIB, CItpSccpGttGtaResType=CItpSccpGttGtaResType, cItpSccpGttAppSsn=cItpSccpGttAppSsn, cItpSccpGttPrefGroup=cItpSccpGttPrefGroup, cItpSccpGttGtaAddrLenZB=cItpSccpGttGtaAddrLenZB, cItpSccpUDTMsgsRcvd=cItpSccpUDTMsgsRcvd, cItpSccpGttPrefTable=cItpSccpGttPrefTable, cItpSccpGttGtaGroup=cItpSccpGttGtaGroup, cItpSccpGttSelName=cItpSccpGttSelName, cItpSccpGttMapGroup=cItpSccpGttMapGroup, cItpSccpPrefConfigLastChanged=cItpSccpPrefConfigLastChanged, cItpSccpGttMapMtp3Fail=cItpSccpGttMapMtp3Fail, cItpSccpGttSelQOS=cItpSccpGttSelQOS, cItpSccpLUDTSMsgsSent=cItpSccpLUDTSMsgsSent, cItpSccpGttMapPcCongested=cItpSccpGttMapPcCongested, cItpSccpGttAppGrCost=cItpSccpGttAppGrCost, cItpSccpGttAppGrNewSsn=cItpSccpGttAppGrNewSsn, cItpSccpGttSelNotFound=cItpSccpGttSelNotFound, cItpSccpGttMapCongStatus=cItpSccpGttMapCongStatus, cItpSccpGttAppGrTable=cItpSccpGttAppGrTable, cItpSccpScalars=cItpSccpScalars, cItpSccpGttGtaTableEntry=cItpSccpGttGtaTableEntry, cItpSccpGttGtaAsName=cItpSccpGttGtaAsName, cItpSccpGttAppName=cItpSccpGttAppName, CItpSccpGttMapSsStatus=CItpSccpGttMapSsStatus, cItpSccpGttSelNP=cItpSccpGttSelNP, CItpSccpGttAppCost=CItpSccpGttAppCost, cItpSccpGttSelTT=cItpSccpGttSelTT, cItpSccpGttSelGTI=cItpSccpGttSelGTI, cItpSccpGttSelRefCount=cItpSccpGttSelRefCount, cItpSccpTotalGttMsgs=cItpSccpTotalGttMsgs, cItpSccpNotificationsGroup=cItpSccpNotificationsGroup, cItpSccpGttMapPc=cItpSccpGttMapPc, cItpSccpUDTMsgsSent=cItpSccpUDTMsgsSent, cItpSccpGttMapAltUsed=cItpSccpGttMapAltUsed, cItpSccpGttPrePrefConv=cItpSccpGttPrePrefConv, cItpSccpGttPrefItemNAI=cItpSccpGttPrefItemNAI, cItpSccpGttAppGrPc=cItpSccpGttAppGrPc, ciscoItpSccpMIB=ciscoItpSccpMIB, cItpSccpGttMapAdjacent=cItpSccpGttMapAdjacent, CItpSccpGttRoutingInd=CItpSccpGttRoutingInd, cItpSccpGttAppGrMult=cItpSccpGttAppGrMult, cItpSccpLocalMsgs=cItpSccpLocalMsgs, cItpSccpGttGtaAddr=cItpSccpGttGtaAddr, cItpSccpGttMapTableEntry=cItpSccpGttMapTableEntry, cItpSccpGttMapSsCongested=cItpSccpGttMapSsCongested, cItpSccpGttGtaResType=cItpSccpGttGtaResType, cItpSccpGttPostPrefConv=cItpSccpGttPostPrefConv, CItpSccpGttPrefName=CItpSccpGttPrefName, CItpSccpGttMapPcStatus=CItpSccpGttMapPcStatus, cItpSccpMIBCompliance=cItpSccpMIBCompliance, cItpSccpGttAppGrSsn=cItpSccpGttAppGrSsn, cItpSccpGttMapReRouteOnCong=cItpSccpGttMapReRouteOnCong, cItpSccpGttAppGrEntNum=cItpSccpGttAppGrEntNum, cItpSccpGtaConfigLastChanged=cItpSccpGtaConfigLastChanged, cItpSccpGttMapConPcList=cItpSccpGttMapConPcList, cItpSccpGttGtaResMap=cItpSccpGttGtaResMap, cItpSccpGttAppCost=cItpSccpGttAppCost, cItpSccpGttMapPcUnavail=cItpSccpGttMapPcUnavail, cItpSccpGttMapDisplaySS=cItpSccpGttMapDisplaySS, cItpSccpGttApp=cItpSccpGttApp, cItpSccpErrFromMtp=cItpSccpErrFromMtp, CItpSccpGttGlobalTitleInd=CItpSccpGttGlobalTitleInd, cItpSccpMapConfigLastChanged=cItpSccpMapConfigLastChanged, CItpSccpGttAppType=CItpSccpGttAppType, cItpSccpGttAppGrName=cItpSccpGttAppGrName, cItpSccpGttGtaNP=cItpSccpGttGtaNP, cItpSccpGttMapType=cItpSccpGttMapType, cItpSccpGttMapBackupSsn=cItpSccpGttMapBackupSsn, cItpSccpGttAppGrAsName=cItpSccpGttAppGrAsName, cItpSccpGttConPcRefCount=cItpSccpGttConPcRefCount, cItpSccpGttAppRi=cItpSccpGttAppRi, cItpSccpGttAppGr=cItpSccpGttAppGr, cItpSccpGttMapSsUnavail=cItpSccpGttMapSsUnavail, cItpSccpGttAppGrTableEntry=cItpSccpGttAppGrTableEntry, cItpSccpGttAppGrRefCount=cItpSccpGttAppGrRefCount, cItpSccpGttGtaResAppGroup=cItpSccpGttGtaResAppGroup, cItpSccpGttMapSccpUnavail=cItpSccpGttMapSccpUnavail, cItpSccpGttGtaRoutingInd=cItpSccpGttGtaRoutingInd, cItpSccpMIBNotifs=cItpSccpMIBNotifs, cItpSccpGttGtaGroupRev2=cItpSccpGttGtaGroupRev2, cItpSccpGttMap=cItpSccpGttMap, cItpSccpGttAppGrNumUsed=cItpSccpGttAppGrNumUsed, cItpSccpGttGtaAddrDispZB=cItpSccpGttGtaAddrDispZB, cItpSccpGttMapDisplayPC=cItpSccpGttMapDisplayPC, cItpSccpMIBComplianceRev1=cItpSccpMIBComplianceRev1, cItpSccpGttMapStateChange=cItpSccpGttMapStateChange, cItpSccpConfigStatusGroup=cItpSccpConfigStatusGroup, cItpSccpCrFromMtp=cItpSccpCrFromMtp, cItpSccpGttAppType=cItpSccpGttAppType, cItpSccpGttGtaSelName=cItpSccpGttGtaSelName, cItpSccpGttGtaNAI=cItpSccpGttGtaNAI, cItpSccpMIBCompliances=cItpSccpMIBCompliances, cItpSccpGttAppTable=cItpSccpGttAppTable, cItpSccpGttSelTable=cItpSccpGttSelTable, cItpSccpXUDTSMsgsRcvd=cItpSccpXUDTSMsgsRcvd, cItpSccpGttSelGroupRev1=cItpSccpGttSelGroupRev1, cItpSccpGttMapUsed=cItpSccpGttMapUsed)
