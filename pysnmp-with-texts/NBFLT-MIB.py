#
# PySNMP MIB module NBFLT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NBFLT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:17:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ngen, = mibBuilder.importSymbols("NT-Reference-MIB", "ngen")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, IpAddress, Counter32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, iso, Bits, ObjectIdentity, Integer32, Unsigned32, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Counter32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "iso", "Bits", "ObjectIdentity", "Integer32", "Unsigned32", "MibIdentifier", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nGenBase = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1))
nbFltMngmt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5))
nbFltSNMPAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1))
nbFltSNMPAgentStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 1))
nbFltTrapOnAlarm = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbFltTrapOnAlarm.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltTrapOnAlarm.setDescription("Allows turning on or off forwarding of MAS alarms as traps. If this variable has the 'on' value, each alarm will be propagated as a trap. In case of the 'off' value it will not be.")
nbFltAgentRunningState = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notRegistered", 0), ("registered", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbFltAgentRunningState.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAgentRunningState.setDescription("Defines the current state of the interaction between the SNMP Agent and the MAS Fault Management system. If the MAS SNMP Agent is unable to register with the MAS Fault Mngmt system after startup, it will report a 'notRegistered' value. When registered, will report a 'registered' value.")
nbFltAlarmTrapFormat = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 2))
nbFltAlarmSymposiumTrapFormat = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbFltAlarmSymposiumTrapFormat.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmSymposiumTrapFormat.setDescription('Turns on or off generating traps in MAS format.')
nbFltAlarmCybeleTrapFormat = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbFltAlarmCybeleTrapFormat.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmCybeleTrapFormat.setDescription('Turns on or off generating traps in Cybele format.')
nbFltTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2))
nbFltAlarmTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1))
nbFltAlarmSequence = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 1), Counter32())
if mibBuilder.loadTexts: nbFltAlarmSequence.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmSequence.setDescription('This object defines the alarm sequence number')
nbFltAlarmTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: nbFltAlarmTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmTimeStamp.setDescription('This object defines the time when alarm was raised')
nbFltAlarmEventCode = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 3), Integer32())
if mibBuilder.loadTexts: nbFltAlarmEventCode.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmEventCode.setDescription('This object defines the MAS event code for the generated alarm.')
nbFltAlarmEventType = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("unknown", 0), ("set", 1), ("clear", 2), ("message", 4))))
if mibBuilder.loadTexts: nbFltAlarmEventType.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmEventType.setDescription('This object defines the type of the event.')
nbFltAlarmEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3))))
if mibBuilder.loadTexts: nbFltAlarmEventSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmEventSeverity.setDescription('This object defines the severity of the reported alarm.')
nbFltAlarmTenantID = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 6), Integer32())
if mibBuilder.loadTexts: nbFltAlarmTenantID.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmTenantID.setDescription('This object defines the tenant ID')
nbFltAlarmCustomerID = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 7), Integer32())
if mibBuilder.loadTexts: nbFltAlarmCustomerID.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmCustomerID.setDescription('This object defines the customer ID')
nbFltAlarmOriginator = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: nbFltAlarmOriginator.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmOriginator.setDescription('This object describes the subsystem which raised the alarm.')
nbFltAlarmDescription = MibScalar((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)))
if mibBuilder.loadTexts: nbFltAlarmDescription.setStatus('mandatory')
if mibBuilder.loadTexts: nbFltAlarmDescription.setDescription('This object describes what happened in the system, which caused the alarm to occur.')
nbFltTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 3))
nbSymposiumAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 3, 8, 1, 5, 3) + (0,1)).setObjects(("NBFLT-MIB", "nbFltAlarmSequence"), ("NBFLT-MIB", "nbFltAlarmTimeStamp"), ("NBFLT-MIB", "nbFltAlarmEventCode"), ("NBFLT-MIB", "nbFltAlarmEventType"), ("NBFLT-MIB", "nbFltAlarmEventSeverity"), ("NBFLT-MIB", "nbFltAlarmTenantID"), ("NBFLT-MIB", "nbFltAlarmCustomerID"), ("NBFLT-MIB", "nbFltAlarmOriginator"), ("NBFLT-MIB", "nbFltAlarmDescription"))
if mibBuilder.loadTexts: nbSymposiumAlarmTrap.setDescription('MAS Trap conveying information about raised alarm.')
mibBuilder.exportSymbols("NBFLT-MIB", nbFltAlarmEventCode=nbFltAlarmEventCode, nbFltAlarmSymposiumTrapFormat=nbFltAlarmSymposiumTrapFormat, nGenBase=nGenBase, nbFltAlarmDescription=nbFltAlarmDescription, nbFltAlarmOriginator=nbFltAlarmOriginator, nbFltAlarmTimeStamp=nbFltAlarmTimeStamp, nbFltMngmt=nbFltMngmt, nbFltAlarmEventType=nbFltAlarmEventType, nbFltAlarmSequence=nbFltAlarmSequence, nbFltAlarmEventSeverity=nbFltAlarmEventSeverity, nbFltAlarmCybeleTrapFormat=nbFltAlarmCybeleTrapFormat, nbSymposiumAlarmTrap=nbSymposiumAlarmTrap, nbFltAlarmTenantID=nbFltAlarmTenantID, nbFltTrapOnAlarm=nbFltTrapOnAlarm, nbFltAlarmTrapFormat=nbFltAlarmTrapFormat, nbFltSNMPAgentStatus=nbFltSNMPAgentStatus, nbFltAlarmTrapObjects=nbFltAlarmTrapObjects, nbFltTrapObjects=nbFltTrapObjects, nbFltTraps=nbFltTraps, nbFltAgentRunningState=nbFltAgentRunningState, nbFltAlarmCustomerID=nbFltAlarmCustomerID, nbFltSNMPAgent=nbFltSNMPAgent)
