#
# PySNMP MIB module NMS-QOS-QUEUE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-QOS-QUEUE
# Produced by pysmi-0.3.4 at Wed May  1 14:22:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
nmstemporary, = mibBuilder.importSymbols("NMS-SMI", "nmstemporary")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Bits, Gauge32, IpAddress, Integer32, Counter32, NotificationType, Unsigned32, Counter64, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Bits", "Gauge32", "IpAddress", "Integer32", "Counter32", "NotificationType", "Unsigned32", "Counter64", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nmsQosQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7))
nmsQosQueueTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1), )
if mibBuilder.loadTexts: nmsQosQueueTable.setStatus('mandatory')
if mibBuilder.loadTexts: nmsQosQueueTable.setDescription('A list of QoS queue related statistics table entries.')
nmsQosQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1), ).setIndexNames((0, "NMS-QOS-QUEUE", "ifIndex"), (0, "NMS-QOS-QUEUE", "queueNo"))
if mibBuilder.loadTexts: nmsQosQueueEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nmsQosQueueEntry.setDescription('A collection of additional objects in the Qos queue related statistics table.')
ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ifIndex.setDescription('QoS queue belonged interface id, unique in system.')
queueNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueNo.setStatus('mandatory')
if mibBuilder.loadTexts: queueNo.setDescription('QoS queue serial number.')
queueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueLen.setStatus('mandatory')
if mibBuilder.loadTexts: queueLen.setDescription('QoS queue length.')
queueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueDrops.setStatus('mandatory')
if mibBuilder.loadTexts: queueDrops.setDescription('QoS queue discarded package count.')
queueCross = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 3, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueCross.setStatus('mandatory')
if mibBuilder.loadTexts: queueCross.setDescription('QoS queue crossed package count.')
mibBuilder.exportSymbols("NMS-QOS-QUEUE", queueCross=queueCross, ifIndex=ifIndex, nmsQosQueue=nmsQosQueue, nmsQosQueueTable=nmsQosQueueTable, queueDrops=queueDrops, queueLen=queueLen, nmsQosQueueEntry=nmsQosQueueEntry, queueNo=queueNo)
