#
# PySNMP MIB module NCR-CORESSTSWARELOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NCR-CORESSTCOMMSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:17:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
TruthValue, = mibBuilder.importSymbols("RFC1253-MIB", "TruthValue")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, Unsigned32, IpAddress, Counter64, MibIdentifier, enterprises, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Integer32, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter64", "MibIdentifier", "enterprises", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ncr = MibIdentifier((1, 3, 6, 1, 4, 1, 191))
sst = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39))
sstCore = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 1))
sstProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13))
sstObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2))
sstGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 1))
sstDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 2))
sstApplic = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 3))
sstLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4))
sstSWareLogTable = MibTable((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9), )
if mibBuilder.loadTexts: sstSWareLogTable.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogTable.setDescription('This group defines the attributes of event entries in the SST software log.')
sstSWareLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1), ).setIndexNames((0, "NCR-CORESSTSWARELOG-MIB", "sstSWareLogIndex"))
if mibBuilder.loadTexts: sstSWareLogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogEntry.setDescription('This defines the contents of the table.')
sstSWareLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogIndex.setDescription('A unique number for every entry in the software log.')
sstSWareLogLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogLineNumber.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogLineNumber.setDescription('The line number in the source file where the event occurred.')
sstSWareLogSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogSourceName.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogSourceName.setDescription('The name of the source file where the event occurred.')
sstSWareLogProcName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogProcName.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogProcName.setDescription('The name of the process that generated the event.')
sstSWareLogThrdName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogThrdName.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogThrdName.setDescription('The name of the thread that generated the event.')
sstSWareLogDLLName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogDLLName.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogDLLName.setDescription('The name of the DLL that generated the event.')
sstSWareLogEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogEventId.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogEventId.setDescription('The identifier for the event.')
sstSWareLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogLevel.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogLevel.setDescription('The level of the log entry: information, warning or error.')
sstSWareLogReason = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogReason.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogReason.setDescription('The category of the event: a normal event, a system escape or a critical error.')
sstSWareLogBinaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogBinaryType.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogBinaryType.setDescription('This indicates the type of binary data.')
sstSWareLogBinaryData = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogBinaryData.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogBinaryData.setDescription('A description of the event in binary data format.')
sstSWareLogStrData = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 9, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstSWareLogStrData.setStatus('mandatory')
if mibBuilder.loadTexts: sstSWareLogStrData.setDescription('Information about the cause of the event.')
mibBuilder.exportSymbols("NCR-CORESSTSWARELOG-MIB", sstSWareLogBinaryType=sstSWareLogBinaryType, sstSWareLogDLLName=sstSWareLogDLLName, sstProduct=sstProduct, sstApplic=sstApplic, sstDevice=sstDevice, sstSWareLogBinaryData=sstSWareLogBinaryData, sstSWareLogThrdName=sstSWareLogThrdName, sstSWareLogEventId=sstSWareLogEventId, sstSWareLogTable=sstSWareLogTable, sstSWareLogEntry=sstSWareLogEntry, sstObjs=sstObjs, sstCore=sstCore, sstGeneral=sstGeneral, sstLogs=sstLogs, sstSWareLogLevel=sstSWareLogLevel, sstSWareLogLineNumber=sstSWareLogLineNumber, ncr=ncr, sstSWareLogSourceName=sstSWareLogSourceName, sstSWareLogStrData=sstSWareLogStrData, sstSWareLogProcName=sstSWareLogProcName, sstSWareLogReason=sstSWareLogReason, sst=sst, sstSWareLogIndex=sstSWareLogIndex)
