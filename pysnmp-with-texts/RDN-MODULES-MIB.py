#
# PySNMP MIB module RDN-MODULES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-MODULES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:54:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
rdnDefinitions, = mibBuilder.importSymbols("RDN-DEFINITIONS-MIB", "rdnDefinitions")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, Bits, iso, Counter64, Gauge32, IpAddress, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Bits", "iso", "Counter64", "Gauge32", "IpAddress", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Counter32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rdnModules = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4))
rdnModules.setRevisions(('2008-08-08 00:00', '2003-11-05 00:00', '2003-04-29 00:00', '2001-04-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rdnModules.setRevisionsDescriptions(("Added Copyright Statement into MIB modules's description.", '+ Updated the CONTACT-INFO. + Reorder REVISION/DESCRIPTION in required reverse chronological order.', "This `corrects past mistakes' where ASN.1 allowed hyphens but SMIv2 states that hyphens are not allowed in identifiers for objects or for labels on enumerated integer values. Hyphens where removed from object identifiers in this MIB. Also cleans up the CONTACT-INFO.", 'Initial creation.',))
if mibBuilder.loadTexts: rdnModules.setLastUpdated('200808080000Z')
if mibBuilder.loadTexts: rdnModules.setOrganization('Motorola')
if mibBuilder.loadTexts: rdnModules.setContactInfo('Motorola Customer Service 101 Tournament Drive Horsham, PA 19044 US Tel: +1 888 944 4357 Int Tel: +1 215 323 0044 Fax: +1 215 323 1502 Email: CPSSupport@Motorola.com')
if mibBuilder.loadTexts: rdnModules.setDescription('MIB module for Motorola Module definitions. Copyright (C) 2001, 2008 by Motorola, Inc. All rights reserved.')
rdnModulesUnknown = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 0))
if mibBuilder.loadTexts: rdnModulesUnknown.setStatus('current')
if mibBuilder.loadTexts: rdnModulesUnknown.setDescription('This object ID is used to identify an unknown Module.')
rdnModulesSrm = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 1))
if mibBuilder.loadTexts: rdnModulesSrm.setStatus('current')
if mibBuilder.loadTexts: rdnModulesSrm.setDescription('This object ID is used to identify the Motorola, SRM Module.')
rdnModulesCmts = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 2))
if mibBuilder.loadTexts: rdnModulesCmts.setStatus('current')
if mibBuilder.loadTexts: rdnModulesCmts.setDescription('This object ID is used to identify the Motorola, CMTS Module.')
rdnModulesHsim2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 3))
if mibBuilder.loadTexts: rdnModulesHsim2.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2.setDescription('This object ID is used to identify the Motorola, HSIM2 Module.')
rdnModulesHsim2PosEth = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 4))
if mibBuilder.loadTexts: rdnModulesHsim2PosEth.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2PosEth.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with one POS port and one fast ethernet port.')
rdnModulesHsim2Pos2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 5))
if mibBuilder.loadTexts: rdnModulesHsim2Pos2.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2Pos2.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with two POS ports.')
rdnModulesHsim2PosOc48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 6))
if mibBuilder.loadTexts: rdnModulesHsim2PosOc48.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2PosOc48.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with one OC48 port.')
rdnModulesHsim2PosDoc48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 7))
if mibBuilder.loadTexts: rdnModulesHsim2PosDoc48.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2PosDoc48.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with two OC48 ports.')
rdnModulesHsim2PosAtm = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 8))
if mibBuilder.loadTexts: rdnModulesHsim2PosAtm.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2PosAtm.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with one ATM port.')
rdnModulesHsim2Eth8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 9))
if mibBuilder.loadTexts: rdnModulesHsim2Eth8.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2Eth8.setDescription('This object ID is used to identify the Motorola, HSIM2 Module with eight fast ethernet ports.')
rdnModulesHsim2Gige = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 10))
if mibBuilder.loadTexts: rdnModulesHsim2Gige.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2Gige.setDescription('This object ID is used to identify the Motorola, HSIM2 Single Mode GigE Module with one GIGE port.')
rdnModulesOsr = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 11))
if mibBuilder.loadTexts: rdnModulesOsr.setStatus('current')
if mibBuilder.loadTexts: rdnModulesOsr.setDescription('This object ID is used to identify the Motorola OSR.')
rdnModulesBsr1000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 12))
if mibBuilder.loadTexts: rdnModulesBsr1000.setStatus('current')
if mibBuilder.loadTexts: rdnModulesBsr1000.setDescription('This object ID is used to identify the Motorola BSR 1000.')
rdnModulesHsim2GigeMM = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 13))
if mibBuilder.loadTexts: rdnModulesHsim2GigeMM.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim2GigeMM.setDescription('This object ID is used to identify the Motorola, HSIM2 Multimode GigE Module with one GigE port.')
rdnModulesHsim4GigeEth8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 4981, 4, 4, 15))
if mibBuilder.loadTexts: rdnModulesHsim4GigeEth8.setStatus('current')
if mibBuilder.loadTexts: rdnModulesHsim4GigeEth8.setDescription('This object ID is used to identify the Motorola, HSIM4 Module with eight fast ethernet ports and two GigE ports.')
mibBuilder.exportSymbols("RDN-MODULES-MIB", PYSNMP_MODULE_ID=rdnModules, rdnModulesSrm=rdnModulesSrm, rdnModulesUnknown=rdnModulesUnknown, rdnModulesHsim2Eth8=rdnModulesHsim2Eth8, rdnModulesHsim2PosEth=rdnModulesHsim2PosEth, rdnModulesHsim2PosDoc48=rdnModulesHsim2PosDoc48, rdnModulesBsr1000=rdnModulesBsr1000, rdnModules=rdnModules, rdnModulesHsim2Pos2=rdnModulesHsim2Pos2, rdnModulesHsim2=rdnModulesHsim2, rdnModulesHsim2PosOc48=rdnModulesHsim2PosOc48, rdnModulesHsim2PosAtm=rdnModulesHsim2PosAtm, rdnModulesOsr=rdnModulesOsr, rdnModulesHsim2GigeMM=rdnModulesHsim2GigeMM, rdnModulesCmts=rdnModulesCmts, rdnModulesHsim4GigeEth8=rdnModulesHsim4GigeEth8, rdnModulesHsim2Gige=rdnModulesHsim2Gige)
