#
# PySNMP MIB module LIEBERT-GP-NOTIFICATIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIEBERT-GP-NOTIFICATIONS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:06:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
lgpConditionTableRowRef, lgpConditionTableRef, lgpConditionId, lgpConditionTime, lgpConditionDescr = mibBuilder.importSymbols("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTableRowRef", "lgpConditionTableRef", "lgpConditionId", "lgpConditionTime", "lgpConditionDescr")
liebertNotificationsModuleReg, lgpNotifications = mibBuilder.importSymbols("LIEBERT-GP-REGISTRATION-MIB", "liebertNotificationsModuleReg", "lgpNotifications")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
Unsigned32, NotificationType, Integer32, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Gauge32, IpAddress, Counter32, Counter64, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Integer32", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Gauge32", "IpAddress", "Counter32", "Counter64", "ModuleIdentity", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
liebertGlobalProductsNotificationsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 4, 1))
liebertGlobalProductsNotificationsModule.setRevisions(('2008-07-02 00:00', '2008-05-15 00:00', '2008-01-10 00:00', '2006-08-15 00:00', '2006-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: liebertGlobalProductsNotificationsModule.setRevisionsDescriptions((' o Added Notifications for PDU devices (power on/off). o Added lgpEventParameters branch for defining notification payload that specifically identifies objects that are contained in tables. o Added new varbind to the lgpEventConditionEntryAdded and lgpEventConditionEntryRemoved notifications. o Fixed minor SMIv2 warnings and issues ', ' o Added Notifications for PDU devices (power on/off). o Added lgpEventParameters branch for defining notification payload that specifically identifies objects that are contained in tables. o Added new varbind to the lgpEventConditionEntryAdded and lgpEventConditionEntryRemoved notifications. o Fixed minor SMIv2 warnings and issues ', 'Modified contact email address and deprecated both: o lgpEventAgentFirmwareUpdateSuccessful o lgpEventAgentFirmwareCorrupt which were moved to the LIEBERT-GP-AGENT-MIB document.', 'Added events for firmware update successful and for firmware corrupt.', 'Added support for Liebert DS Unit.',))
if mibBuilder.loadTexts: liebertGlobalProductsNotificationsModule.setLastUpdated('200807020000Z')
if mibBuilder.loadTexts: liebertGlobalProductsNotificationsModule.setOrganization('Liebert Corporation')
if mibBuilder.loadTexts: liebertGlobalProductsNotificationsModule.setContactInfo('Contact: Technical Support Postal: Liebert Corporation 1050 Dearborn Drive P.O. Box 29186 Columbus OH, 43229 US Tel: +1 (800) 222-5877 E-mail: liebert.monitoring@emerson.com Web: www.liebert.com Author: Craig S. Ward')
if mibBuilder.loadTexts: liebertGlobalProductsNotificationsModule.setDescription("The MIB module used to register Liebert SNMP OIDs. Copyright 2000-2008 Liebert Corporation. All rights reserved. Reproduction of this document is authorized on the condition that the forgoing copyright notice is included. This Specification is supplied 'AS IS' and Liebert Corporation makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
lgpEventNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0))
if mibBuilder.loadTexts: lgpEventNotifications.setStatus('current')
if mibBuilder.loadTexts: lgpEventNotifications.setDescription('Notifications for Liebert Global Products.')
lgpEventParameters = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 10))
if mibBuilder.loadTexts: lgpEventParameters.setStatus('current')
if mibBuilder.loadTexts: lgpEventParameters.setDescription('This sub tree describes various parameters/data that are carried in the payload of some notifications.')
lgpEventParmTableRef = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 10, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpEventParmTableRef.setStatus('current')
if mibBuilder.loadTexts: lgpEventParmTableRef.setDescription("This object will be included as a varbind in some lgpEventNotifications. It is a reference to a table object in the MIB. The value of this object will be the OID of a table that the object that the notification applies to is defined. The notification containing this object will also contain a varbind 'lgpEventParmTableRowRef' that will specify which instance (row) in the table the object is defined in. Example: NOTIFICATION: lgpEventConditionEntryAdded varbind: lgpConditionId 6 varbind: lgpConditionDescr lgpConditionRcpBranchBreakerOpen varbind: lgpConditionTime 393884848 varbind: lgpEventParmTableRef lgpPduRbTable varbind: lgpEventParmTableRowRef lgpPduRbEntryId.1.4 In the above example the breaker opened for a Receptacle branch. The specific receptacle branch is specified by the additional varbind (lgpEventParmTableRowRef). In this case the notification is for the 4th receptacle branch on the 1st PDU in the PDU cluster. ")
lgpEventParmTableRowRef = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 10, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpEventParmTableRowRef.setStatus('current')
if mibBuilder.loadTexts: lgpEventParmTableRowRef.setDescription('This is a reference to the intersection of a row and column (cell) in the table specified by the companion varbind (lgpEventParmTableRef) in this notification. The row in the table where this cell exists represents the object that this notification applies to. Example: NOTIFICATION: lgpEventRcpPowerStateChangeOff varbind: sysUpTime 393885975 varbind: lgpEventParmTableRef lgpPduRcpTable varbind: lgpEventParmTableRowRef lgpPduRcpEntryId.2.4.5 In the above example the power state changed for a Receptacle. The table containing the definition of the receptacle (lgpPduRcpTable) is given by the varbind (lgpEventParmTableRef) The specific receptacle is specified by the varbind (lgpEventParmTableRowRef). In this case the notification is for the 5th receptacle on the 4th receptacle branch on the 2nd PDU in the PDU cluster. If one wanted to retrieve the user assigned label for this receptacle the OID would be: lgpPduRcpEntryUsrLabel.2.4.5 ')
lgpEventConditionEntryAdded = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 1)).setObjects(("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionId"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionDescr"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTableRef"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTableRowRef"))
if mibBuilder.loadTexts: lgpEventConditionEntryAdded.setStatus('current')
if mibBuilder.loadTexts: lgpEventConditionEntryAdded.setDescription('This notification is sent each time a condition is inserted into the conditions table.')
lgpEventConditionEntryRemoved = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 2)).setObjects(("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionId"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionDescr"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTableRef"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionTableRowRef"))
if mibBuilder.loadTexts: lgpEventConditionEntryRemoved.setStatus('current')
if mibBuilder.loadTexts: lgpEventConditionEntryRemoved.setDescription('This notification is sent each time a condition is removed from the conditions table.')
lgpEventLowBatteryWarning = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 3)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventLowBatteryWarning.setStatus('current')
if mibBuilder.loadTexts: lgpEventLowBatteryWarning.setDescription("The battery's remaining charge is less than or equal to the agent's configured low threshold 'lgpPwrConfigLowBatteryWarningTime'.")
lgpEventLoadTransferedToBypass = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 4)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventLoadTransferedToBypass.setStatus('current')
if mibBuilder.loadTexts: lgpEventLoadTransferedToBypass.setDescription('The device has transferred the load to the bypass source.')
lgpEventInternalFault = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventInternalFault.setStatus('current')
if mibBuilder.loadTexts: lgpEventInternalFault.setDescription('The device has reported an internal fault.')
lgpEventBatteryTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventBatteryTestFailed.setStatus('current')
if mibBuilder.loadTexts: lgpEventBatteryTestFailed.setDescription('The device has reported a battery self-test failure.')
lgpEventOutputOverload = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 7)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventOutputOverload.setStatus('current')
if mibBuilder.loadTexts: lgpEventOutputOverload.setDescription('The device has reported an output overload condition.')
lgpEventEstablishedPowerRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 8)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventEstablishedPowerRedundancy.setStatus('current')
if mibBuilder.loadTexts: lgpEventEstablishedPowerRedundancy.setDescription('The device has transitioned to the user defined redundant state.')
lgpEventLostPowerRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 9)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventLostPowerRedundancy.setStatus('current')
if mibBuilder.loadTexts: lgpEventLostPowerRedundancy.setDescription('The device as transitioned to a non-redundant power state as defined by the user configured threshold.')
lgpEventPowerModuleFailure = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 10)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventPowerModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpEventPowerModuleFailure.setDescription('Device power module failure.')
lgpEventBatteryModuleFailure = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 11)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventBatteryModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpEventBatteryModuleFailure.setDescription('Device battery module failure.')
lgpEventControlModuleFailure = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 12)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventControlModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpEventControlModuleFailure.setDescription('Device control module failure.')
lgpEventPowerModuleWarning = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 13)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventPowerModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpEventPowerModuleWarning.setDescription('Device power module warning.')
lgpEventBatteryModuleWarning = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 14)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventBatteryModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpEventBatteryModuleWarning.setDescription('Device battery module warning.')
lgpEventControlModuleWarning = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 15)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventControlModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpEventControlModuleWarning.setDescription('Device control module warning.')
lgpEventAgentFirmwareUpdateSuccessful = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 16)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventAgentFirmwareUpdateSuccessful.setStatus('deprecated')
if mibBuilder.loadTexts: lgpEventAgentFirmwareUpdateSuccessful.setDescription('The firmware update to the agent card has completed successfully. This element has been relocated to lgpAgentFirmwareUpdateSuccessful in the LIEBERT-GP-AGENT-MIB document.')
lgpEventAgentFirmwareCorrupt = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 17)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpEventAgentFirmwareCorrupt.setStatus('deprecated')
if mibBuilder.loadTexts: lgpEventAgentFirmwareCorrupt.setDescription('The firmware update to the agent card has failed and the firmware is now corrupt. This element has been relocated to lgpAgentFirmwareCorrupt in the LIEBERT-GP-AGENT-MIB document.')
lgpEventConfigModified = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 18)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventConfigModified.setStatus('current')
if mibBuilder.loadTexts: lgpEventConfigModified.setDescription('Configuration for the referenced PDU has been modified.')
lgpEventModuleAdded = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 19)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventModuleAdded.setStatus('current')
if mibBuilder.loadTexts: lgpEventModuleAdded.setDescription('A hot-swappable module has been added to the object specified by the lgpEventParmTableRef and lgpEventParmTableRowRef.')
lgpEventModuleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 20)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventModuleRemoved.setStatus('current')
if mibBuilder.loadTexts: lgpEventModuleRemoved.setDescription('A hot-swappable module has been removed from the object specified by the lgpEventParmTableRef and lgpEventParmTableRowRef.')
lgpEventRcpPowerStateChangeOn = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 21)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventRcpPowerStateChangeOn.setStatus('current')
if mibBuilder.loadTexts: lgpEventRcpPowerStateChangeOn.setDescription("Receptacle's power state has been changed from OFF to ON.")
lgpEventRcpPowerStateChangeOff = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 22)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventRcpPowerStateChangeOff.setStatus('current')
if mibBuilder.loadTexts: lgpEventRcpPowerStateChangeOff.setDescription("Receptacle's power state has been changed from ON to OFF.")
lgpEventRcpLoadAdded = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 23)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventRcpLoadAdded.setStatus('current')
if mibBuilder.loadTexts: lgpEventRcpLoadAdded.setDescription("The receptacle's load started drawing power. This notification is asserted when the receptacle power is ON and the associated load was previously not drawing power but is now drawing power. This event is not asserted as a result of turning the receptacle power ON.")
lgpEventRcpLoadRemoved = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3, 0, 24)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRef"), ("LIEBERT-GP-NOTIFICATIONS-MIB", "lgpEventParmTableRowRef"))
if mibBuilder.loadTexts: lgpEventRcpLoadRemoved.setStatus('current')
if mibBuilder.loadTexts: lgpEventRcpLoadRemoved.setDescription("The receptacle's load stopped drawing power. This notification is asserted when the receptacle power is ON and the associated load was previously drawing power but is now no longer drawing power. This event is not asserted as a result of turning the receptacle power OFF.")
mibBuilder.exportSymbols("LIEBERT-GP-NOTIFICATIONS-MIB", lgpEventBatteryModuleWarning=lgpEventBatteryModuleWarning, lgpEventOutputOverload=lgpEventOutputOverload, lgpEventEstablishedPowerRedundancy=lgpEventEstablishedPowerRedundancy, lgpEventLostPowerRedundancy=lgpEventLostPowerRedundancy, lgpEventControlModuleFailure=lgpEventControlModuleFailure, lgpEventModuleRemoved=lgpEventModuleRemoved, lgpEventBatteryModuleFailure=lgpEventBatteryModuleFailure, liebertGlobalProductsNotificationsModule=liebertGlobalProductsNotificationsModule, lgpEventInternalFault=lgpEventInternalFault, lgpEventLowBatteryWarning=lgpEventLowBatteryWarning, lgpEventParmTableRef=lgpEventParmTableRef, lgpEventParmTableRowRef=lgpEventParmTableRowRef, lgpEventAgentFirmwareUpdateSuccessful=lgpEventAgentFirmwareUpdateSuccessful, lgpEventConfigModified=lgpEventConfigModified, lgpEventConditionEntryAdded=lgpEventConditionEntryAdded, lgpEventAgentFirmwareCorrupt=lgpEventAgentFirmwareCorrupt, lgpEventControlModuleWarning=lgpEventControlModuleWarning, lgpEventRcpPowerStateChangeOff=lgpEventRcpPowerStateChangeOff, lgpEventRcpLoadRemoved=lgpEventRcpLoadRemoved, lgpEventPowerModuleWarning=lgpEventPowerModuleWarning, lgpEventNotifications=lgpEventNotifications, lgpEventConditionEntryRemoved=lgpEventConditionEntryRemoved, lgpEventRcpLoadAdded=lgpEventRcpLoadAdded, lgpEventLoadTransferedToBypass=lgpEventLoadTransferedToBypass, lgpEventPowerModuleFailure=lgpEventPowerModuleFailure, lgpEventBatteryTestFailed=lgpEventBatteryTestFailed, lgpEventModuleAdded=lgpEventModuleAdded, lgpEventParameters=lgpEventParameters, lgpEventRcpPowerStateChangeOn=lgpEventRcpPowerStateChangeOn, PYSNMP_MODULE_ID=liebertGlobalProductsNotificationsModule)
