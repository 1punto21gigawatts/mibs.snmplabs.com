#
# PySNMP MIB module ALCATEL-IND1-RIPNG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-RIPNG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:19:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1Ripng, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Ripng")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
Ipv6Address, Ipv6AddressPrefix = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6AddressPrefix")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Integer32, Gauge32, IpAddress, ObjectIdentity, Counter32, iso, TimeTicks, ModuleIdentity, MibIdentifier, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Integer32", "Gauge32", "IpAddress", "ObjectIdentity", "Counter32", "iso", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Bits")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
alcatelIND1RIPNGMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1))
alcatelIND1RIPNGMIB.setRevisions(('2007-04-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alcatelIND1RIPNGMIB.setRevisionsDescriptions(('The latest version of this MIB Module.',))
if mibBuilder.loadTexts: alcatelIND1RIPNGMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIB.setOrganization('Alcatel-Lucent')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIB.setContactInfo(' Please consult with Customer Service to ensure the most appropriate version of this document is used with the products in question: Alcatel-Lucent, Enterprise Solutions Division (Formerly Alcatel Internetworking, Incorporated) 26801 West Agoura Road Agoura Hills, CA 91301-5122 United States Of America Telephone: North America +1 800 995 2696 Latin America +1 877 919 9526 Europe +31 23 556 0100 Asia +65 394 7933 All Other +1 818 878 4507 Electronic Mail: support@ind.alcatel.com World Wide Web: http://alcatel-lucent.com/wps/portal/enterprise File Transfer Protocol: ftp://ftp.ind.alcatel.com/pub/products/mibs')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIB.setDescription('This module describes an authoritative enterprise-specific Simple Network Management Protocol (SNMP) Management Information Base (MIB): For the Birds Of Prey Product Line Configuration Of Global RIPNG Configuration Parameters. The right to make changes in specification and other information contained in this document without prior notice is reserved. No liability shall be assumed for any incidental, indirect, special, or consequential damages whatsoever arising from or related to this document or the information contained herein. Vendors, end-users, and other interested parties are granted non-exclusive license to use this specification in connection with management of the products for which it is intended to be used. Copyright (C) 1995-2007 Alcatel-Lucent ALL RIGHTS RESERVED WORLDWIDE')
alcatelIND1RIPNGMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1))
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBObjects.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBObjects.setDescription('Branch for Routing Information Protocol (RIPNG) Subsystem Managed Objects.')
alcatelIND1RIPNGMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2))
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBConformance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBConformance.setDescription('Branch for Routing Information Protocol (RIPNG) Subsystem Conformance Information.')
alcatelIND1RIPNGMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBGroups.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBGroups.setDescription('Branch for Routing Information Protocol (RIPNG) Subsystem Units Of Conformance.')
alcatelIND1RIPNGMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBCompliances.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1RIPNGMIBCompliances.setDescription('Branch for Routing Information Protocol (RIPNG) Subsystem Compliance Statements.')
alaProtocolRipng = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1))
alaRipngProtoStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngProtoStatus.setStatus('current')
if mibBuilder.loadTexts: alaRipngProtoStatus.setDescription('Global administration status of RIPng.')
alaRipngUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngUpdateInterval.setStatus('current')
if mibBuilder.loadTexts: alaRipngUpdateInterval.setDescription('Interval (in seconds) that RIPng routing updates will be sent out. The value must be less than or equal to one-third the the invalid timer and greater or equal to two times the jitter value.')
alaRipngInvalidTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 360)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInvalidTimer.setStatus('current')
if mibBuilder.loadTexts: alaRipngInvalidTimer.setDescription('Time in seconds that a route will remain active in RIB before being moved to the invalid state. The value must be at least three times the update interval. The defined range of 1 to 360 allows backwards compatibility with older devices which do not enforce the three-times constraint. For newer devices which enforce the three-times constraint with the update interval, the minimum allowed value of the invalid timer is 3.')
alaRipngHolddownTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngHolddownTimer.setStatus('current')
if mibBuilder.loadTexts: alaRipngHolddownTimer.setDescription('Time to keep a route in the holddown state.')
alaRipngGarbageTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngGarbageTimer.setStatus('current')
if mibBuilder.loadTexts: alaRipngGarbageTimer.setDescription('Time to keep a route before garbage collection.')
alaRipngRouteCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteCount.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteCount.setDescription('The number of network routes in RIPng routing table.')
alaRipngGlobalRouteTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngGlobalRouteTag.setStatus('current')
if mibBuilder.loadTexts: alaRipngGlobalRouteTag.setDescription('The route tag that will be added to all RIPng entries')
alaRipngTriggeredSends = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("onlyupdated", 2), ("off", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngTriggeredSends.setStatus('current')
if mibBuilder.loadTexts: alaRipngTriggeredSends.setDescription('Controls whether trigged updates contain entire RIB or just changes.')
alaRipngJitter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngJitter.setStatus('current')
if mibBuilder.loadTexts: alaRipngJitter.setDescription('Jitter to use when sending updates. The value must be less than one-half the update interval.')
alaRipngPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngPort.setStatus('current')
if mibBuilder.loadTexts: alaRipngPort.setDescription('Port to send/receive packets on.')
alaRipngDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2))
alaRipngDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugLevel.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugLevel.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebur Configuration')
alaRipngDebugError = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugError.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugError.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugError MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugWarn = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugWarn.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugWarn.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugWarning MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugRecv = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugRecv.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugRecv.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugRecv MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugSend = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugSend.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugSend.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugSend MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugRdb = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugRdb.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugRdb.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugRdb MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugAge = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugAge.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugAge.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugAge MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugMip = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugMip.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugMip.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugMip MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugInfo = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugInfo.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugInfo.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugInfo MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugSetup = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugSetup.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugSetup.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugSetup MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugTime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugTime.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugTime.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugTime MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugTm = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugTm.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugTm.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugTm MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugRouteFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugRouteFilter.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugRouteFilter.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugRouteFilter MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugNexthopFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugNexthopFilter.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugNexthopFilter.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugNexthopFilter MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugSummary = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugSummary.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugSummary.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugSummary MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngDebugAll = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngDebugAll.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngDebugAll.setDescription('This Object is deprecated in favour of alaDrcTmRipngDebugAll MIB Object of alaDrcTmRipngDebug Configuration')
alaRipngInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11), )
if mibBuilder.loadTexts: alaRipngInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceTable.setDescription('RIPng interfaces.')
alaRipngInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceIndex"))
if mibBuilder.loadTexts: alaRipngInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceEntry.setDescription('Each individual interface.')
alaRipngInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 1), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceStatus.setDescription('Create/delete RIPng interfaces.')
alaRipngInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 2), Integer32())
if mibBuilder.loadTexts: alaRipngInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceIndex.setDescription('IPv6 index of this interface.')
alaRipngInterfaceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceMetric.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceMetric.setDescription('Metric used on this interface.')
alaRipngInterfaceRecvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceRecvStatus.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceRecvStatus.setDescription('Controls whether or not to recv updates on this intf.')
alaRipngInterfaceSendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceSendStatus.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceSendStatus.setDescription('Controls whether or not to send updates on this intf.')
alaRipngInterfaceHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("onlysplit", 2), ("poison", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceHorizon.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceHorizon.setDescription('Controls use of split horizon on this interface.')
alaRipngInterfacePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngInterfacePacketsSent.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfacePacketsSent.setDescription('# of packets sent on this interface.')
alaRipngInterfacePacketsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngInterfacePacketsRcvd.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfacePacketsRcvd.setDescription('# of packets received on this interface.')
alaRipngInterfaceMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngInterfaceMTU.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceMTU.setDescription('Max Transfer size of RIPng packets on this interface')
alaRipngInterfaceNextUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngInterfaceNextUpdate.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceNextUpdate.setDescription('Seconds remaining for the next update on this interface')
alaRipngInterfaceJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngInterfaceJitter.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngInterfaceJitter.setDescription('Deprecated in favour of alaRipngJitter')
alaRipngNexthopFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 12), )
if mibBuilder.loadTexts: alaRipngNexthopFilterTable.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngNexthopFilterTable.setDescription('RIPng Nexthop filters.')
alaRipngNexthopFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngNexthopFilterAddress"))
if mibBuilder.loadTexts: alaRipngNexthopFilterEntry.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngNexthopFilterEntry.setDescription('Each individual Nexthop filter.')
alaRipngNexthopFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 12, 1, 1), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngNexthopFilterStatus.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngNexthopFilterStatus.setDescription('Create/delete RIPng Nexthop Filter.')
alaRipngNexthopFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 12, 1, 2), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngNexthopFilterAddress.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngNexthopFilterAddress.setDescription('Address of router to filter routes from.')
alaRipngSummarizationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13), )
if mibBuilder.loadTexts: alaRipngSummarizationTable.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationTable.setDescription('RIPng Nexthop filters.')
alaRipngSummarizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationSourcePrefix"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationSourcePrefixLen"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationPrefix"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationPrefixLen"))
if mibBuilder.loadTexts: alaRipngSummarizationEntry.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationEntry.setDescription('Each individual Nexthop filter.')
alaRipngSummarizationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 1), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationStatus.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationStatus.setDescription('Create/delete RIPng Summarization Filter.')
alaRipngSummarizationSourcePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 2), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationSourcePrefix.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationSourcePrefix.setDescription('Prefix of network to use a the source of a summarization.')
alaRipngSummarizationSourcePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationSourcePrefixLen.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationSourcePrefixLen.setDescription('Prefix length of source prefix.')
alaRipngSummarizationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 4), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationPrefix.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationPrefix.setDescription('Prefix of summarized route.')
alaRipngSummarizationPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationPrefixLen.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationPrefixLen.setDescription('Prefix length of summarized route.')
alaRipngSummarizationSubnets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("donotinclude", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngSummarizationSubnets.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngSummarizationSubnets.setDescription('Include subnets?')
alaRipngRouteFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14), )
if mibBuilder.loadTexts: alaRipngRouteFilterTable.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterTable.setDescription('RIPng route filters.')
alaRipngRouteFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterPrefix"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterPrefixLen"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterDirection"))
if mibBuilder.loadTexts: alaRipngRouteFilterEntry.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterEntry.setDescription('Each individual route filter.')
alaRipngRouteFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1, 1), RowStatus().clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngRouteFilterStatus.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterStatus.setDescription('Create/delete RIPng route Filter.')
alaRipngRouteFilterPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1, 2), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngRouteFilterPrefix.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterPrefix.setDescription('Prefix of filter.')
alaRipngRouteFilterPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngRouteFilterPrefixLen.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterPrefixLen.setDescription('Prefix length of filter.')
alaRipngRouteFilterDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngRouteFilterDirection.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterDirection.setDescription('Which way to apply the filter.')
alaRipngRouteFilterSubnets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("donotinclude", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipngRouteFilterSubnets.setStatus('deprecated')
if mibBuilder.loadTexts: alaRipngRouteFilterSubnets.setDescription('Include subnets?')
alaRipngPeerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15), )
if mibBuilder.loadTexts: alaRipngPeerTable.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerTable.setDescription('RIPng peers.')
alaRipngPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerAddress"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerIndex"))
if mibBuilder.loadTexts: alaRipngPeerEntry.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerEntry.setDescription('Each individual peer.')
alaRipngPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaRipngPeerAddress.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerAddress.setDescription('Address of peer.')
alaRipngPeerLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngPeerLastUpdate.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerLastUpdate.setDescription('Last Update received.')
alaRipngPeerNumUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngPeerNumUpdates.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerNumUpdates.setDescription('Total # of updates received from this peer.')
alaRipngPeerNumRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngPeerNumRoutes.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerNumRoutes.setDescription('Total # of routes received from this peer.')
alaRipngPeerBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngPeerBadPackets.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerBadPackets.setDescription('Total # of bad packets received.')
alaRipngPeerBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngPeerBadRoutes.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerBadRoutes.setDescription('Total # of bad routes received.')
alaRipngPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 15, 1, 7), Integer32())
if mibBuilder.loadTexts: alaRipngPeerIndex.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerIndex.setDescription('IPv6 index of the interface on which this peer is seen')
alaRipngRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16), )
if mibBuilder.loadTexts: alaRipngRouteTable.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteTable.setDescription('Ripng routing table which contains the routes.')
alaRipngRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRoutePrefix"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRoutePrefixLen"), (0, "ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteNextHop"))
if mibBuilder.loadTexts: alaRipngRouteEntry.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteEntry.setDescription('Ripng routing table which contains the network routes')
alaRipngRoutePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: alaRipngRoutePrefix.setStatus('current')
if mibBuilder.loadTexts: alaRipngRoutePrefix.setDescription('The destination IP address of this route.')
alaRipngRoutePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: alaRipngRoutePrefixLen.setStatus('current')
if mibBuilder.loadTexts: alaRipngRoutePrefixLen.setDescription('The prefix length for this route.')
alaRipngRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 3), Ipv6Address())
if mibBuilder.loadTexts: alaRipngRouteNextHop.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteNextHop.setDescription('The address of the next hop to reach this route.')
alaRipngRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("rip", 2), ("redist", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteType.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteType.setDescription('The type of route.')
alaRipngRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteAge.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteAge.setDescription('The number of seconds since this route was last updated or otherwise determined to be correct.')
alaRipngRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteTag.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteTag.setDescription('The associated route tag')
alaRipngRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteMetric.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteMetric.setDescription('The routing metric for this route.')
alaRipngRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteStatus.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteStatus.setDescription('The row status variable, used according to row installation and removal conventions.')
alaRipngRouteFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("garbage", 2), ("holddown", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteFlags.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteFlags.setDescription('The assocated flags for this route.')
alaRipngRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 1, 1, 16, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipngRouteIndex.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteIndex.setDescription('IPv6 index of the interface on which the route gateway can be reached')
alcatelIND1RIPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngGlobalGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngNexthopFilterGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerGroup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1RIPMIBCompliance = alcatelIND1RIPMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1RIPMIBCompliance.setDescription('Compliance statement for RIPng subsystem.')
alaRipngGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngProtoStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngUpdateInterval"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInvalidTimer"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngHolddownTimer"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngGarbageTimer"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteCount"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngGlobalRouteTag"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngTriggeredSends"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngGlobalGroup = alaRipngGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngGlobalGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngDebugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugLevel"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugError"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugWarn"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugRecv"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugSend"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugRdb"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugAge"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugMip"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugInfo"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugSetup"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugTime"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugTm"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngDebugAll"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngDebugGroup = alaRipngDebugGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngDebugGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceMetric"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceRecvStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceSendStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceHorizon"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfacePacketsSent"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfacePacketsRcvd"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceMTU"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceNextUpdate"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngInterfaceJitter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngInterfaceGroup = alaRipngInterfaceGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngInterfaceGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngNexthopFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngNexthopFilterStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngNexthopFilterAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngNexthopFilterGroup = alaRipngNexthopFilterGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngNexthopFilterGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngSummarizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationSourcePrefix"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationSourcePrefixLen"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationPrefix"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationPrefixLen"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngSummarizationSubnets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngSummarizationGroup = alaRipngSummarizationGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngSummarizationGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngRouteFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterPrefix"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterPrefixLen"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterDirection"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFilterSubnets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngRouteFilterGroup = alaRipngRouteFilterGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteFilterGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerLastUpdate"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerNumUpdates"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerNumRoutes"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerBadPackets"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngPeerBadRoutes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngPeerGroup = alaRipngPeerGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngPeerGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alaRipngRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteType"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteAge"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteTag"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteMetric"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteStatus"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteFlags"), ("ALCATEL-IND1-RIPNG-MIB", "alaRipngRouteIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipngRouteGroup = alaRipngRouteGroup.setStatus('current')
if mibBuilder.loadTexts: alaRipngRouteGroup.setDescription('Collection of Miscellaneous objects for management of RIP.')
alcatelIND1RIPNGTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 3))
alcatelIND1RIPNGTrapsRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 3, 0))
ripngRouteMaxLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 12, 1, 3, 0, 1))
if mibBuilder.loadTexts: ripngRouteMaxLimitReached.setStatus('current')
if mibBuilder.loadTexts: ripngRouteMaxLimitReached.setDescription(' This notification is generated as RIPng database reached supported maximum entries. RIPng will discard any new updates.')
mibBuilder.exportSymbols("ALCATEL-IND1-RIPNG-MIB", alaRipngRouteFilterPrefixLen=alaRipngRouteFilterPrefixLen, alaRipngSummarizationSubnets=alaRipngSummarizationSubnets, alaRipngNexthopFilterGroup=alaRipngNexthopFilterGroup, alaRipngPeerBadPackets=alaRipngPeerBadPackets, alaRipngTriggeredSends=alaRipngTriggeredSends, alcatelIND1RIPNGMIBObjects=alcatelIND1RIPNGMIBObjects, alaRipngDebug=alaRipngDebug, alaRipngInterfaceEntry=alaRipngInterfaceEntry, alaRipngPeerEntry=alaRipngPeerEntry, alaRipngInterfaceJitter=alaRipngInterfaceJitter, alaRipngDebugSend=alaRipngDebugSend, alaRipngRouteGroup=alaRipngRouteGroup, alaRipngSummarizationTable=alaRipngSummarizationTable, alaRipngDebugLevel=alaRipngDebugLevel, alaRipngRouteTable=alaRipngRouteTable, alcatelIND1RIPNGMIBGroups=alcatelIND1RIPNGMIBGroups, alaRipngDebugTm=alaRipngDebugTm, alaRipngInterfaceHorizon=alaRipngInterfaceHorizon, alaRipngRouteFilterEntry=alaRipngRouteFilterEntry, alcatelIND1RIPNGTraps=alcatelIND1RIPNGTraps, alaRipngRouteEntry=alaRipngRouteEntry, alaRipngProtoStatus=alaRipngProtoStatus, alaRipngDebugSetup=alaRipngDebugSetup, alaRipngDebugNexthopFilter=alaRipngDebugNexthopFilter, alaRipngInterfaceMetric=alaRipngInterfaceMetric, alaRipngRouteFilterTable=alaRipngRouteFilterTable, alaRipngDebugWarn=alaRipngDebugWarn, alcatelIND1RIPNGMIB=alcatelIND1RIPNGMIB, alaRipngRouteAge=alaRipngRouteAge, alaRipngRoutePrefix=alaRipngRoutePrefix, alaRipngRoutePrefixLen=alaRipngRoutePrefixLen, alaRipngJitter=alaRipngJitter, alaRipngPeerNumRoutes=alaRipngPeerNumRoutes, alaRipngDebugAge=alaRipngDebugAge, alaRipngRouteIndex=alaRipngRouteIndex, alaRipngInterfaceSendStatus=alaRipngInterfaceSendStatus, alaRipngInterfaceMTU=alaRipngInterfaceMTU, alaRipngDebugInfo=alaRipngDebugInfo, alaRipngPeerBadRoutes=alaRipngPeerBadRoutes, alaRipngSummarizationSourcePrefix=alaRipngSummarizationSourcePrefix, alcatelIND1RIPNGMIBCompliances=alcatelIND1RIPNGMIBCompliances, alaRipngRouteType=alaRipngRouteType, alaProtocolRipng=alaProtocolRipng, alaRipngNexthopFilterStatus=alaRipngNexthopFilterStatus, alaRipngRouteNextHop=alaRipngRouteNextHop, alaRipngInterfaceStatus=alaRipngInterfaceStatus, alaRipngInterfaceIndex=alaRipngInterfaceIndex, alaRipngGlobalRouteTag=alaRipngGlobalRouteTag, alaRipngSummarizationEntry=alaRipngSummarizationEntry, alaRipngRouteTag=alaRipngRouteTag, alaRipngPeerGroup=alaRipngPeerGroup, alaRipngGarbageTimer=alaRipngGarbageTimer, alaRipngSummarizationPrefixLen=alaRipngSummarizationPrefixLen, alaRipngUpdateInterval=alaRipngUpdateInterval, alaRipngRouteFilterPrefix=alaRipngRouteFilterPrefix, alaRipngPeerNumUpdates=alaRipngPeerNumUpdates, alaRipngRouteFilterDirection=alaRipngRouteFilterDirection, alcatelIND1RIPNGTrapsRoot=alcatelIND1RIPNGTrapsRoot, alaRipngInterfaceTable=alaRipngInterfaceTable, alaRipngInterfaceNextUpdate=alaRipngInterfaceNextUpdate, alaRipngSummarizationGroup=alaRipngSummarizationGroup, alaRipngInterfacePacketsRcvd=alaRipngInterfacePacketsRcvd, alaRipngSummarizationPrefix=alaRipngSummarizationPrefix, PYSNMP_MODULE_ID=alcatelIND1RIPNGMIB, alaRipngRouteMetric=alaRipngRouteMetric, alaRipngRouteCount=alaRipngRouteCount, alaRipngInterfaceGroup=alaRipngInterfaceGroup, alaRipngDebugMip=alaRipngDebugMip, alaRipngDebugTime=alaRipngDebugTime, alaRipngInvalidTimer=alaRipngInvalidTimer, alaRipngPeerLastUpdate=alaRipngPeerLastUpdate, alaRipngDebugRecv=alaRipngDebugRecv, alaRipngInterfacePacketsSent=alaRipngInterfacePacketsSent, alaRipngNexthopFilterTable=alaRipngNexthopFilterTable, alaRipngNexthopFilterEntry=alaRipngNexthopFilterEntry, alcatelIND1RIPNGMIBConformance=alcatelIND1RIPNGMIBConformance, alcatelIND1RIPMIBCompliance=alcatelIND1RIPMIBCompliance, alaRipngDebugSummary=alaRipngDebugSummary, alaRipngRouteFilterGroup=alaRipngRouteFilterGroup, alaRipngSummarizationSourcePrefixLen=alaRipngSummarizationSourcePrefixLen, alaRipngRouteFilterSubnets=alaRipngRouteFilterSubnets, alaRipngPort=alaRipngPort, alaRipngNexthopFilterAddress=alaRipngNexthopFilterAddress, alaRipngDebugError=alaRipngDebugError, ripngRouteMaxLimitReached=ripngRouteMaxLimitReached, alaRipngHolddownTimer=alaRipngHolddownTimer, alaRipngGlobalGroup=alaRipngGlobalGroup, alaRipngPeerAddress=alaRipngPeerAddress, alaRipngDebugRdb=alaRipngDebugRdb, alaRipngDebugRouteFilter=alaRipngDebugRouteFilter, alaRipngPeerTable=alaRipngPeerTable, alaRipngRouteStatus=alaRipngRouteStatus, alaRipngPeerIndex=alaRipngPeerIndex, alaRipngDebugAll=alaRipngDebugAll, alaRipngDebugGroup=alaRipngDebugGroup, alaRipngRouteFilterStatus=alaRipngRouteFilterStatus, alaRipngSummarizationStatus=alaRipngSummarizationStatus, alaRipngInterfaceRecvStatus=alaRipngInterfaceRecvStatus, alaRipngRouteFlags=alaRipngRouteFlags)
