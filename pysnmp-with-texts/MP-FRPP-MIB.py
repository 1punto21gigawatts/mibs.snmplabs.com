#
# PySNMP MIB module MP-FRPP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MP-FRPP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:13:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, MibIdentifier, IpAddress, ModuleIdentity, ObjectIdentity, Gauge32, NotificationType, Integer32, iso, NotificationType, mgmt, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "MibIdentifier", "IpAddress", "ModuleIdentity", "ObjectIdentity", "Gauge32", "NotificationType", "Integer32", "iso", "NotificationType", "mgmt", "Counter64")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
class NetPrefix(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(13, 13)
    fixedLength = 13

class DisplayString(OctetString):
    pass

class DateAndTime(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), )
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class PhysAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
nec = MibIdentifier((1, 3, 6, 1, 4, 1, 119))
necProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 1))
datax = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 1, 3))
mmpf = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 1, 3, 13))
mmn9110 = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 1, 3, 13, 1))
mmn9120 = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 1, 3, 13, 2))
nec_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2)).setLabel("nec-mib")
necProductDepend = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3))
datax_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3)).setLabel("datax-mib")
mmpf_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13)).setLabel("mmpf-mib")
mpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 1))
mpIfCard = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 2))
mpEtherPort = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 3))
mpVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 4))
mpBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 5))
mpDbAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 6))
mpEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 7))
mpUiSession = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 8))
mpFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 9))
mpDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 10))
mpIp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 11))
mpRip = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 12))
mpSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 13))
mpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 14))
mpCli = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 15))
mpAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 16))
mpLis = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 17))
mpDns = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 18))
mpLec = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 19))
mpMpc = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 20))
mpStp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 21))
mpLlc = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 22))
mpOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 23))
mpObsCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 101))
mpCardInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 102))
mpInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 103))
mpPvoice = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 104))
mpAtmCallCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 110))
mpCes = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 111))
mpIpsw = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 112))
mpInsCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 113))
mpFfr = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 114))
mpIpswAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 115))
mpPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 120))
mpPos = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 121))
mpFrpp = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123))
mpFrppTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 1))
mpFrppTrapInfoMccid = MibScalar((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppTrapInfoMccid.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppTrapInfoMccid.setDescription('A unique value to identify a multi channel(MCC-ID).')
mpFrppTrapInfoDlci = MibScalar((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppTrapInfoDlci.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppTrapInfoDlci.setDescription('A unique value to identify a data link(DLCI).')
mpFrppMccCfgTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2), )
if mibBuilder.loadTexts: mpFrppMccCfgTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgTable.setDescription('This is the table type object of the Mcc FrameRelay Chanel configuration.')
mpFrppMccCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppMccCfgIfIndex"))
if mibBuilder.loadTexts: mpFrppMccCfgEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgEntry.setDescription('This is the table entry of mpFrppMccCfgTable.')
mpFrppMccCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccCfgIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgIfIndex.setDescription('The value of this object identifies the MCC-ID (Mcc Channel number) .')
mpFrppMccCfgL2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccCfgL2Status.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgL2Status.setDescription('The value of this object identifies the layer 2 status.')
mpFrppMccCfgLmiProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ansi", 1), ("itu", 2), ("noLmi", 3))).clone('ansi')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgLmiProtocol.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgLmiProtocol.setDescription('The value of this object identifies the link management interface protocol.')
mpFrppMccCfgUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2))).clone('dte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgUniType.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgUniType.setDescription('The value of this object identifies the frame relay user Network Interface type.')
mpFrppMccCfgMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgMonitoredEvents.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgMonitoredEvents.setDescription('The value of this object identifies the monitored events count(N393).')
mpFrppMccCfgErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgErrorThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgErrorThreshold.setDescription('The value of this object identifies the error threshold(N392).')
mpFrppMccCfgFullEnqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgFullEnqInterval.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgFullEnqInterval.setDescription('The value of this object identifies the i full status (status of all PVCs) polling counter(N391).')
mpFrppMccCfgLmiProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uniDirectional", 1), ("biDirectional", 2))).clone('uniDirectional')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgLmiProcedure.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgLmiProcedure.setDescription('The value of this object identifies the link management interface (LMI) procedure.')
mpFrppMccCfgNetPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgNetPollInterval.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgNetPollInterval.setDescription('The value of this object identifies the polling verification timer(T392).')
mpFrppMccCfgUsrPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgUsrPollInterval.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgUsrPollInterval.setDescription('The value of this object identifies the link integrity verification polling timer(T391).')
mpFrppMccCfgAsync = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgAsync.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgAsync.setDescription('The value of this object identifies the Async Flag.')
mpFrppMccCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppMccCfgRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgRowStatus.setDescription('An entry in MCC Channel management table.')
mpFrppMccCfgErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("normal", 1), ("parameterNotEnough", 2), ("badValue", 3), ("badIndexValue", 4), ("correlationError", 5), ("memoryAllocateFailure", 6), ("mbufHuntFailure", 7), ("relationalConfigExist", 8), ("lowLayerConfigNotRegistered", 9), ("mappingDataAlreadyExist", 10), ("ipAddressNotDeleted", 11), ("mccIdHuntFailure", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccCfgErrInfo.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccCfgErrInfo.setDescription('The value of this object indicates error information that became an error set to MIB in this table.')
mpFrppFrppCfgTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3), )
if mibBuilder.loadTexts: mpFrppFrppCfgTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgTable.setDescription('This is the table type object of the Mcc FrameRelay FRPP configuration.')
mpFrppFrppCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppFrppCfgIfIndex"), (0, "MP-FRPP-MIB", "mpFrppFrppCfgMccidIndex"), (0, "MP-FRPP-MIB", "mpFrppFrppCfgDlciIndex"))
if mibBuilder.loadTexts: mpFrppFrppCfgEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgEntry.setDescription('This is the table entry of mpFrppFrppCfgTable.')
mpFrppFrppCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgIfIndex.setDescription('The value of this object identifies the FRPP_NO (FRPP number) .')
mpFrppFrppCfgMccidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgMccidIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgMccidIndex.setDescription('The value of this object is the mccid for this entry.')
mpFrppFrppCfgDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgDlciIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgDlciIndex.setDescription('The value of this object is the Dlci for this entry.')
mpFrppFrppCfgFrppName = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgFrppName.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgFrppName.setDescription('The textual name of the interface on the Frpp.')
mpFrppFrppCfgIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgIpadd.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgIpadd.setDescription('The value of this object is the FRPP IP address for this entry.')
mpFrppFrppCfgSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgSubnet.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgSubnet.setDescription('The value of this object is the FRPP IP address for this entry.')
mpFrppFrppCfgMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1280, 9180)).clone(9180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgMtuSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgMtuSize.setDescription('The value of this object identifies the max frame length on this port.')
mpFrppFrppCfgInterWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipoverfr", 1), ("macoverfr", 2))).clone('ipoverfr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgInterWorkType.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgInterWorkType.setDescription('The value of this object indicates the FRPP InterWorkType.')
mpFrppFrppCfgCrtpSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("support", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpSupport.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpSupport.setDescription('The value of this object indicates the CRTP Support Flag.')
mpFrppFrppCfgCrtpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpLimit.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpLimit.setDescription('The value of this object indicates the CRTP Limit.')
mpFrppFrppCfgCrtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("through", 1), ("discard", 2))).clone('through')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpMode.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpMode.setDescription('The value of this object indicates the CRTP Mode.')
mpFrppFrppCfgCrtpAging = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpAging.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCrtpAging.setDescription('The value of this object indicates the CRTP Aging Time.')
mpFrppFrppCfgCtcpSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("support", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpSupport.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpSupport.setDescription('The value of this object indicates the CTCP Support Flag.')
mpFrppFrppCfgCtcpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpLimit.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpLimit.setDescription('The value of this object indicates the CTCP Limit.')
mpFrppFrppCfgCtcpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("through", 1), ("discard", 2))).clone('through')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpMode.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpMode.setDescription('The value of this object indicates the CTCP Mode.')
mpFrppFrppCfgCtcpAging = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpAging.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgCtcpAging.setDescription('The value of this object indicates the CTCP Aging Time.')
mpFrppFrppCfgHwSticFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgHwSticFlag.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgHwSticFlag.setDescription('The value of this object indicates the Statistics Request Flag.')
mpFrppDlciCfgMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciCfgMtuSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgMtuSize.setDescription('The value of this object identifies the inside maximum frame size(Mtu) in octets for this frame relay logical port(DLCI). This value shall not exceed the value of mpFrCktMtuSize.')
mpFrppDlciCfgBecn = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgBecn.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgBecn.setDescription('The value of this object indicates mode of BECN.')
mpFrppDlciCfgEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nec", 1), ("cisco", 2))).clone('nec')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgEncap.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgEncap.setDescription('The value of this object identifies the Mode of VoIp.')
mpFrppDlciCfgDe = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgDe.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgDe.setDescription('The value of this object identifies the DE bit marking.')
mpFrppDlciCfgPln = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciCfgPln.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgPln.setDescription('The value of this object identifies the protocol addressing.')
mpFrppDlciCfgFragSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgFragSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgFragSize.setDescription('The value of this object identifies the FRF.12 flagment size. within the range of 0,16 - 1600.')
mpFrppDlciCfgMir = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgMir.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgMir.setDescription('The value of this object identifies the Mir .')
mpFrppDlciCfgPerInc = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgPerInc.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgPerInc.setDescription('The value of this object identifies the percent increment.')
mpFrppDlciCfgPerDec = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgPerDec.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgPerDec.setDescription('The value of this object identifies the percent decrement.')
mpFrppDlciCfgMincir = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgMincir.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgMincir.setDescription('The value of this object identifies the MinCir.')
mpFrppDlciCfgCir = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgCir.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgCir.setDescription('The value of this object identifies the Committed Information Rate (CIR) is rate (expressed in bits/second) that the network commits to deliver under normal network conditions. ')
mpFrppDlciCfgSnapFlg = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgSnapFlg.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgSnapFlg.setDescription('The value of this object identifies configration status for this table.')
mpFrppDlciQueueLenH = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueLenH.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueLenH.setDescription('The value of this object identifies configration High queue length. ')
mpFrppDlciQueueLenU = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueLenU.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueLenU.setDescription('The value of this object identifies configration Urgent queue length. ')
mpFrppDlciQueueLenL = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueLenL.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueLenL.setDescription('The value of this object identifies configration Low queue length. ')
mpFrppDlciQueueLenN = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueLenN.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueLenN.setDescription('The value of this object identifies configration Normal queue length. ')
mpFrppDlciQueueByteH = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueByteH.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueByteH.setDescription('The value of this object identifies configration High queue length. within the range of 0,16 - 1600.')
mpFrppDlciQueueByteU = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueByteU.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueByteU.setDescription('The value of this object identifies configration Urgent queue length. within the range of 0,16 - 1600 .')
mpFrppDlciQueueByteL = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueByteL.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueByteL.setDescription('The value of this object identifies configration Low queue length. within the range of 0,16 - 1600.')
mpFrppDlciQueueByteN = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciQueueByteN.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciQueueByteN.setDescription('The value of this object identifies configration Normal queue length. within the range of 0,16 - 1600 .')
mpFrppDlciIpQosClassAf3 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf3.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf3.setDescription('The value of this object identifies configration IP-Qos/AF3 mapping Class . ')
mpFrppDlciIpQosClassAf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf2.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf2.setDescription('The value of this object identifies configration IP-Qos/AF2 mapping Class . ')
mpFrppDlciIpQosClassAf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf1.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf1.setDescription('The value of this object identifies configration IP-Qos/AF1 mapping Class . ')
mpFrppDlciIpQosClassBe = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassBe.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassBe.setDescription('The value of this object identifies configration IP-Qos/Be mapping Class . ')
mpFrppDlciIpQosClassEf3 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('urgent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf3.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf3.setDescription('The value of this object identifies configration IP-Qos/Ef3 mapping Class . ')
mpFrppDlciIpQosClassEf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('urgent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf2.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf2.setDescription('The value of this object identifies configration IP-Qos/EF2 mapping Class . ')
mpFrppDlciIpQosClassEf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('urgent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf1.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassEf1.setDescription('The value of this object identifies configration IP-Qos/Ef1 mapping Class . ')
mpFrppDlciIpQosClassAf4 = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("urgent", 1), ("high", 2), ("normal", 3), ("low", 4))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf4.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciIpQosClassAf4.setDescription('The value of this object identifies configration IP-Qos/AF4 mapping Class . ')
mpFrppDlciCfgInarpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("passive", 2))).clone('passive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgInarpMode.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgInarpMode.setDescription('The value of this object identifies configration Inverse Arp mode .')
mpFrppDlciCfgTrapFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("no", 1), ("up", 2), ("down", 3), ("up-down", 4))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppDlciCfgTrapFilter.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciCfgTrapFilter.setDescription('The value of this object indicates the DLCi Trap Filter status.')
mpFrppFrppCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 48), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppFrppCfgRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgRowStatus.setDescription('An entry in MCC Channel management table.')
mpFrppFrppCfgErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 3, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("normal", 1), ("parameterNotEnough", 2), ("badValue", 3), ("badIndexValue", 4), ("correlationError", 5), ("memoryAllocateFailure", 6), ("mbufHuntFailure", 7), ("relationalConfigExist", 8), ("lowLayerConfigNotRegistered", 9), ("mappingDataAlreadyExist", 10), ("ipAddressNotDeleted", 11), ("mccIdHuntFailure", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppCfgErrInfo.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppCfgErrInfo.setDescription('The value of this object indicates error information that became an error set to MIB in this table.')
mpFrppInfoTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4), )
if mibBuilder.loadTexts: mpFrppInfoTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoTable.setDescription('This is the table type object of the FRPP information.')
mpFrppInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppInfoIndex"))
if mibBuilder.loadTexts: mpFrppInfoEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoEntry.setDescription('This is the table entry of mpFrppInfoTable.')
mpFrppInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoIndex.setDescription('The value of this object identifies the Frpp No (Frpp number) .')
mpFrppInfoFrppAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpFrppInfoFrppAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoFrppAdminStatus.setDescription('The value of this object indicates the Frpp administration status.')
mpFrppInfoFrppOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoFrppOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoFrppOperStatus.setDescription('The value of this object indicates the Frpp operational status.')
mpFrppInfoFrppLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoFrppLastChange.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoFrppLastChange.setDescription('The value of sysUpTime at the time the Frpp entered its current operational state.')
mpFrppInfoDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoDlci.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoDlci.setDescription('The value of this object is equal to the Data Link Connection Identifer(DLCi) value for index to this mpFrDlcStatisticsTable table.')
mpFrppInfoDlciAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoDlciAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoDlciAdminStatus.setDescription('The value of this object indicates the Dlci administration status.')
mpFrppInfoDlciOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoDlciOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoDlciOperStatus.setDescription('The value of this object indicates the DLCi operational status.')
mpFrppInfoDlciLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoDlciLastChange.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoDlciLastChange.setDescription('The value of sysUpTime at the time the DLCI entered its current operational state.')
mpFrppInfoDlciOperDownEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("dlcidown", 2), ("lmierror", 3), ("lmiStatusInactiveReceived", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppInfoDlciOperDownEvent.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppInfoDlciOperDownEvent.setDescription('The value of this object indicates error information that became an error set to MIB in this table.')
mpFrppMccIdStatTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5), )
if mibBuilder.loadTexts: mpFrppMccIdStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdStatTable.setDescription('This is the table type object of the Frpp Mccid statistics information.')
mpFrppMccIdStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppMccIdStatIfIndex"))
if mibBuilder.loadTexts: mpFrppMccIdStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdStatEntry.setDescription('This is the table entry of mpFrppMccIdStatTable.')
mpFrppMccIdStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdStatIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdStatIfIndex.setDescription('The value of this object identifies the mccid number.')
mpFrppMccIdRcvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvOctets.setDescription('The value of this object indicates the total number of octets received on this port.')
mpFrppMccIdRcvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvFrames.setDescription('The value of this object indicates the total number of frames received on this port.')
mpFrppMccIdRcvFrameMinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvFrameMinSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvFrameMinSize.setDescription('The value of this object indicates the minimum size of frames received on this port.')
mpFrppMccIdRcvFrameMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvFrameMaxSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvFrameMaxSize.setDescription('The value of this object indicates the maximum size of frames received on this port.')
mpFrppMccIdRcvDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvDiscardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvDiscardFrames.setDescription('The value of this object indicates the total number of discard frames received on this port.')
mpFrppMccIdRcvFecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvFecnFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvFecnFrames.setDescription('The value of this object indicates the number of frames received with the FECN bit set.')
mpFrppMccIdRcvBecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvBecnFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvBecnFrames.setDescription('The value of this object indicates the number of frames received with the BECN bit set.')
mpFrppMccIdRcvDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvDeFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvDeFrames.setDescription('The value of this object indicates the number of frames received with the DE bit set.')
mpFrppMccIdRcvInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvInvalidFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvInvalidFrames.setDescription('The value of this object indicates the total number of invalid frames received on this port.')
mpFrppMccIdRcvLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvLongFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvLongFrames.setDescription('The value of this object indicates the total number of long frames received on this port.')
mpFrppMccIdRcvShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvShortFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvShortFrames.setDescription('The value of this object indicates the total number of short frames received on this port.')
mpFrppMccIdXmtOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtOctets.setDescription('The value of this object indicates the total number of octets sent on this port.')
mpFrppMccIdXmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtFrames.setDescription('The value of this object indicates the total number of frames sent on this port.')
mpFrppMccIdXmtFrameMinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtFrameMinSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtFrameMinSize.setDescription('The value of this object indicates the minimum size of frames sent on this port.')
mpFrppMccIdXmtFrameMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtFrameMaxSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtFrameMaxSize.setDescription('The value of this object indicates the maximum size of frames sent on this port.')
mpFrppMccIdXmtDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtDiscardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtDiscardFrames.setDescription('The value of this object indicates the total number of discard frames sent on this port.')
mpFrppMccIdXmtFecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtFecnFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtFecnFrames.setDescription('The value of this object indicates the number of frames sent with the FECN bit set.')
mpFrppMccIdXmtBecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtBecnFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtBecnFrames.setDescription('The value of this object indicates the number of frames sent with the BECN bit set.')
mpFrppMccIdXmtDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtDeFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtDeFrames.setDescription('The value of this object indicates the number of frames sent with the DE bit set.')
mpFrppMccIdRcvCllmFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvCllmFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvCllmFrames.setDescription('The value of this object indicates the total number of CLLM frames received on this port.')
mpFrppMccIdLmiStatTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6), )
if mibBuilder.loadTexts: mpFrppMccIdLmiStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdLmiStatTable.setDescription('This is the table type object of the Frpp Port LMI statitics information.')
mpFrppMccIdLmiStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppMccIdLmiStatIfIndex"))
if mibBuilder.loadTexts: mpFrppMccIdLmiStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdLmiStatEntry.setDescription('This is the table entry of mpFrppMccIdLmiStatTable.')
mpFrppMccIdLmiStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdLmiStatIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdLmiStatIfIndex.setDescription('The value of this object identifies the mccid number.')
mpFrppMccIdRcvLmiStatEnqs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvLmiStatEnqs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvLmiStatEnqs.setDescription('The value of this object indicates the total number of status enquiry frames received on this port.')
mpFrppMccIdXmtLmiStatEnqs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtLmiStatEnqs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtLmiStatEnqs.setDescription('The value of this object indicates the total number of status enquiry frames sent on this port.')
mpFrppMccIdRcvLmiStats = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvLmiStats.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvLmiStats.setDescription('The value of this object indicates the total number of status frames received on this port.')
mpFrppMccIdXmtLmiStats = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdXmtLmiStats.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdXmtLmiStats.setDescription('The value of this object indicates the total number of status frames sent on this port.')
mpFrppMccIdUsrLmiLinkRelErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiLinkRelErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiLinkRelErrs.setDescription('The value of this object indicates the number of user-side local in-channel signaling link reliability errors for this port.')
mpFrppMccIdUsrLmiT391Tos = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiT391Tos.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiT391Tos.setDescription('The value of this object indicates the number of user-side not receive status for this port.')
mpFrppMccIdUsrLmiSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiSeqErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiSeqErrs.setDescription('The value of this object indicates the number of Sequens Errors.')
mpFrppMccIdUsrLmiProtErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiProtErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiProtErrs.setDescription('The value of this object indicates the number of network-side local in-channel signaling protocol errors for this port.')
mpFrppMccIdUsrLmiChInacts = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiChInacts.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdUsrLmiChInacts.setDescription('The value of this object indicates the number of times the network-side channel was declared inactive (i.e., N392 errors in N393 events) for this port.')
mpFrppMccIdNetLmiLinkRelErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdNetLmiLinkRelErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdNetLmiLinkRelErrs.setDescription('The value of this object indicates the number of user-side local in-channel signaling link reliability errors for this port.')
mpFrppMccIdNetLmiT392Tos = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdNetLmiT392Tos.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdNetLmiT392Tos.setDescription('The value of this object indicates the number of user-side not receive status for this port.')
mpFrppMccIdNetLmiSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdNetLmiSeqErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdNetLmiSeqErrs.setDescription('The value of this object indicates the number of Sequens Errors.')
mpFrppMccIdNetLmiErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdNetLmiErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdNetLmiErrs.setDescription('The value of this object indicates the number of network-side local in-channel signaling protocol errors for this port.')
mpFrppMccIdNetChInacts = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdNetChInacts.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdNetChInacts.setDescription('The value of this object indicates the number of times the network-side channel was declared inactive (i.e., N392 errors in N393 events) for this port.')
mpFrppMccIdRcvAsyncFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppMccIdRcvAsyncFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppMccIdRcvAsyncFrms.setDescription('The value of this object indicates the number of Async Frames for this port.')
mpFrppFrppStatTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7), )
if mibBuilder.loadTexts: mpFrppFrppStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatTable.setDescription('This is the table type object of the Frpp Frpp statistics information.')
mpFrppFrppStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppFrppStatIndex"))
if mibBuilder.loadTexts: mpFrppFrppStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatEntry.setDescription('This is the table entry of mpFrppFrppStatTable.')
mpFrppFrppStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatIndex.setDescription('The value of this object identifies the Frpp number.')
mpFrppFrppStatRcvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatRcvFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatRcvFrames.setDescription('The value of this object indicates the total number of frames received on this port.')
mpFrppFrppStatXmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatXmtFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatXmtFrames.setDescription('The value of this object indicates the total number of frames sent on this port.')
mpFrppFrppStatRcvDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatRcvDiscardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatRcvDiscardFrames.setDescription('The value of this object indicates the total number of discarded frames received on this port.')
mpFrppFrppStatXmtDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatXmtDiscardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatXmtDiscardFrames.setDescription('The value of this object indicates the total number of discarded frames sent on this port.')
mpFrppFrppStatRcvEncapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatRcvEncapErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatRcvEncapErrors.setDescription('The value of this object indicates the total number of Payload header conversion errors received on this port.')
mpFrppFrppStatXmtEncapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatXmtEncapErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatXmtEncapErrors.setDescription('The value of this object indicates the total number of Payload header conversion errors sent on this port.')
mpFrppFrppStatRcvArpTransErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatRcvArpTransErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatRcvArpTransErrors.setDescription('The value of this object indicates the number of APR packet conversion error sends received on this port.')
mpFrppFrppStatXmtArpTransErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatXmtArpTransErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatXmtArpTransErrors.setDescription('The value of this object indicates the number of ARP packet conversion error sends sent on this port.')
mpFrppFrppStatReassembleErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatReassembleErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatReassembleErrors.setDescription('The value of this object indicates the total number of Reassemble conversion errors.')
mpFrppFrppStatPriorityQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatPriorityQueues.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatPriorityQueues.setDescription('The value of this object indicates the total number of priority queue length excess frames.')
mpFrppFrppStatPriorityBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppFrppStatPriorityBytes.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppFrppStatPriorityBytes.setDescription('The value of this object indicates the total number of priority byte length excess frames.')
mpFrppDlcStatTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8), )
if mibBuilder.loadTexts: mpFrppDlcStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlcStatTable.setDescription('This is the table type object of the Frpp DLCI statistics information.')
mpFrppDlcStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppDlciStatIfIndex"))
if mibBuilder.loadTexts: mpFrppDlcStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlcStatEntry.setDescription('This is the table entry of mpFrppDlcStatTable.')
mpFrppDlciStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatIfIndex.setDescription('The value of this object identifies the frpp number.')
mpFrppDlciStatRcvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvOctets.setDescription('The value of this object indicates the total number of octets received for this Dlci.')
mpFrppDlciStatRcvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrames.setDescription('The value of this object indicates the total number of frames received for this Dlci.')
mpFrppDlciStatRcvFrameMinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrameMinSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrameMinSize.setDescription('The value of this object indicates the minimum size of frames received for this Dlci.')
mpFrppDlciStatRcvFrameMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrameMaxSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvFrameMaxSize.setDescription('The value of this object indicates the maximum size of frames received for this Dlci.')
mpFrppDlciStatRcvFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvFECNFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvFECNFrames.setDescription('The value of this object indicates the number of frames received with the FECN bit set.')
mpFrppDlciStatRcvBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvBECNFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvBECNFrames.setDescription('The value of this object indicates the number of frames received with the BECN bit set.')
mpFrppDlciStatRcvDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvDEFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvDEFrames.setDescription('The value of this object indicates the number of frames received with the DE bit set.')
mpFrppDlciStatRcvTaggedDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvTaggedDEFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvTaggedDEFrames.setDescription('The value of this object indicates the number of DE tagged frames received from this port.')
mpFrppDlciStatXmtOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtOctets.setDescription('The value of this object indicates the total number of octets sent for this DLci.')
mpFrppDlciStatXmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrames.setDescription('The value of this object indicates the total number of frames sent for this dlci.')
mpFrppDlciStatXmtFrameMinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrameMinSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrameMinSize.setDescription('The value of this object indicates the minimum size of frames sent for this dlci.')
mpFrppDlciStatXmtFrameMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrameMaxSize.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtFrameMaxSize.setDescription('The value of this object indicates the maximum size of frames sent for this dlci.')
mpFrppDlciStatXmtDEDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtDEDiscardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtDEDiscardFrames.setDescription('The value of this object indicates the total number of discard DE frames sent for this dlci.')
mpFrppDlciStatXmtFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtFECNFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtFECNFrames.setDescription('The value of this object indicates the number of frames sent with the FECN bit set.')
mpFrppDlciStatXmtBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtBECNFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtBECNFrames.setDescription('The value of this object indicates the number of frames sent with the BECN bit set.')
mpFrppDlciStatXmtDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtDEFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtDEFrames.setDescription('The value of this object indicates the number of frames sent with the DE bit set.')
mpFrppDlciStatXmtTaggedDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtTaggedDEFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtTaggedDEFrames.setDescription('The value of this object indicates the number of DE tagged frames sent to this port.')
mpFrppDlciStatRcvInArpReqFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvInArpReqFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvInArpReqFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtInArpReqFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtInArpReqFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtInArpReqFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatRcvInArpRlyFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvInArpRlyFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvInArpRlyFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtInArpRlyFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtInArpRlyFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtInArpRlyFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatFNUnrecognizHeaders = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatFNUnrecognizHeaders.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatFNUnrecognizHeaders.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatNFUnrecognizHeaders = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatNFUnrecognizHeaders.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatNFUnrecognizHeaders.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatFNArpTranslationErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatFNArpTranslationErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatFNArpTranslationErrs.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatNFArpTranslationErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatNFArpTranslationErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatNFArpTranslationErrs.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtVQFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtVQFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtVQFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtUQFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtUQFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtUQFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedUQLenFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedUQLenFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedUQLenFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedUQByteFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedUQByteFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedUQByteFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtHQFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtHQFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtHQFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedHQLenFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedHQLenFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedHQLenFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedHQByteFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedHQByteFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedHQByteFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtNQFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtNQFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtNQFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedNQLenFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedNQLenFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedNQLenFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedNQByteFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedNQByteFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedNQByteFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtLQFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtLQFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtLQFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedLQLenFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedLQLenFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedLQLenFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatXmtXceedLQByteFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedLQByteFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtXceedLQByteFrms.setDescription('The value of this object indicates the number of frames sent with the InArp.')
mpFrppDlciStatRcvNPBDe0Frms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDe0Frms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDe0Frms.setDescription('The value of this object indicates the number of frames received from SAR with the CLP bit set to 0.')
mpFrppDlciStatRcvNPBDe1Frms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDe1Frms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDe1Frms.setDescription('The value of this object indicates the number of frames received from SAR with the CLP bit set to 1.')
mpFrppDlciStatRcvNPBDiscardFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDiscardFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatRcvNPBDiscardFrms.setDescription('The value of this object indicates the total number of discard frames sent on this port.')
mpFrppDlciStatXmtNPBFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtNPBFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtNPBFrms.setDescription('The value of this object indicates the total number of discard frames sent on this port.')
mpFrppDlciStatXmtNPBDiscardFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 8, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciStatXmtNPBDiscardFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciStatXmtNPBDiscardFrms.setDescription('The value of this object indicates the total number of discard frames sent on this port.')
mpFrppDlciWkStatTable = MibTable((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9), )
if mibBuilder.loadTexts: mpFrppDlciWkStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatTable.setDescription('This is the table type object of the Frpp DLCI Work statistics information.')
mpFrppDlciWkStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1), ).setIndexNames((0, "MP-FRPP-MIB", "mpFrppDlciWkStatIfIndex"))
if mibBuilder.loadTexts: mpFrppDlciWkStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatEntry.setDescription('This is the table entry of mpFrppDlciWkStatTable.')
mpFrppDlciWkStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatIfIndex.setDescription('The value of this object identifies the frpp number.')
mpFrppDlciWkStatFNEncapNones = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapNones.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapNones.setDescription('The value of this object indicates the total number of non capsule for this Dlci.')
mpFrppDlciWkStatFNEncapBridgeds = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBridgeds.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBridgeds.setDescription('The value of this object indicates the total number of MACoFR(802.3/ETHER) non FCS for this Dlci.')
mpFrppDlciWkStatFNEncapBridgedFCSs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBridgedFCSs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBridgedFCSs.setDescription('The value of this object indicates the total number of MACoFR(802.3/ETHER) for this Dlci.')
mpFrppDlciWkStatFNEncapBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBPDUs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapBPDUs.setDescription('The value of this object indicates the total number of MACoFR(802.3d/802.3g) for this dlci.')
mpFrppDlciWkStatFNEncapRoutedIPs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapRoutedIPs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapRoutedIPs.setDescription('The value of this object indicates the total number of IPoFR(NLPID) for this dlci.')
mpFrppDlciWkStatFNEncapRoutedIPSNAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapRoutedIPSNAPs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapRoutedIPSNAPs.setDescription('The value of this object indicates the total number of IPoFR with SNAP for this dlci.')
mpFrppDlciWkStatFNEncapVOIP0s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP0s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP0s.setDescription('The value of this object indicates the total number of VoIP (cmp udp) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP1s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP1s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP1s.setDescription('The value of this object indicates the total number of VoIP (cmp rtp) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP2s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP2s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP2s.setDescription('The value of this object indicates the total number of VoIP (ful hdr)for this dlci.')
mpFrppDlciWkStatFNEncapVOIP3s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP3s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP3s.setDescription('The value of this object indicates the total number of VoIP (ful ctx) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP4s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP4s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP4s.setDescription('The value of this object indicates the total number of VoIP (cmp rtp) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP5s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP5s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP5s.setDescription('The value of this object indicates the total number of VoIP (ful hdr) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP6s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP6s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP6s.setDescription('The value of this object indicates the total number of VoIP(ful ctx) for this dlci.')
mpFrppDlciWkStatFNEncapVOIP7s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP7s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP7s.setDescription('The value of this object indicates the total number of VoIP for this dlci.(reserve)')
mpFrppDlciWkStatFNEncapVOIP8s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP8s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP8s.setDescription('The value of this object indicates the total number of VoIP for this dlci.(reserve)')
mpFrppDlciWkStatFNEncapVOIP9s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP9s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFNEncapVOIP9s.setDescription('The value of this object indicates the total number of VoIP for this dlci.(reserve)')
mpFrppDlciWkStatNFEncapNones = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapNones.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapNones.setDescription('The value of this object indicates the total number of None capsulation for this dlci.')
mpFrppDlciWkStatNFEncapBridgeds = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBridgeds.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBridgeds.setDescription('The value of this object indicates the total number of MACoFR(802.3/ETHER) non FSC for this dlci.')
mpFrppDlciWkStatNFEncapBridgedFCSs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBridgedFCSs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBridgedFCSs.setDescription('The value of this object indicates the total number of MACoFR(802.3/ETHER) for this dlci.')
mpFrppDlciWkStatNFEncapBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBPDUs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapBPDUs.setDescription('The value of this object indicates the total number of MACoFR(802.3d/802.3g) for this dlci.')
mpFrppDlciWkStatNFEncapRoutedIPs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapRoutedIPs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapRoutedIPs.setDescription('The value of this object indicates the total number of IPoFR(NLPID) for this dlci.')
mpFrppDlciWkStatNFEncapRoutedIPSNAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapRoutedIPSNAPs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapRoutedIPSNAPs.setDescription('The value of this object indicates the total number of IPoFR with SNAP for this dlci.')
mpFrppDlciWkStatNFEncapVOIP0s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP0s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP0s.setDescription('The value of this object indicates the total number of VoIP (cmp udp) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP1s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP1s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP1s.setDescription('The value of this object indicates the total number of VoIP (cmp rtp) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP2s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP2s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP2s.setDescription('The value of this object indicates the total number of VoIP (ful hdr) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP3s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP3s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP3s.setDescription('The value of this object indicates the total number of VoIP (ful ctx) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP4s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP4s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP4s.setDescription('The value of this object indicates the total number of VoIP (cmp rtp) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP5s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP5s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP5s.setDescription('The value of this object indicates the total number of VoIP (ful hdr) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP6s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP6s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP6s.setDescription('The value of this object indicates the total number of VoIP (ful ctx) for this dlci.')
mpFrppDlciWkStatNFEncapVOIP7s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP7s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP7s.setDescription('The value of this object indicates the total number of VoIP for this dlci.')
mpFrppDlciWkStatNFEncapVOIP8s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP8s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP8s.setDescription('The value of this object indicates the total number of VoIP for this dlci.')
mpFrppDlciWkStatNFEncapVOIP9s = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP9s.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatNFEncapVOIP9s.setDescription('The value of this object indicates the total number of VoIP for this dlci.')
mpFrppDlciWkStatRcvFragFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatRcvFragFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatRcvFragFrms.setDescription('The value of this object indicates the total number of FRF.12 Fragment for this dlci.')
mpFrppDlciWkStatRasmCompleteds = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatRasmCompleteds.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatRasmCompleteds.setDescription('The value of this object indicates the total number of FRF.12 RasmCompleted for this dlci.')
mpFrppDlciWkStatFragSequenceErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFragSequenceErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFragSequenceErrs.setDescription('The value of this object indicates the total number of FRF.12 FragSequenceErr for this dlci.')
mpFrppDlciWkStatFragBitErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFragBitErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFragBitErrs.setDescription('The value of this object indicates the total number of FRF.12 BitErr for this dlci.')
mpFrppDlciWkStatRasmFrmSizeErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatRasmFrmSizeErrs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatRasmFrmSizeErrs.setDescription('The value of this object indicates the total number of FRF.12 SizeErr for this dlci.')
mpFrppDlciWkStatInvalidFragFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatInvalidFragFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatInvalidFragFrms.setDescription('The value of this object indicates the total number of FRF.12 InvalidFragFrms for this dlci.')
mpFrppDlciWkStatFragBufhuntNgs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFragBufhuntNgs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFragBufhuntNgs.setDescription('The value of this object indicates the total number of FRF.12 Buffer Hunt NG for this dlci.')
mpFrppDlciWkStatFragSndNgs = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatFragSndNgs.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatFragSndNgs.setDescription('The value of this object indicates the total number of FRF.12 send flg err for this dlci.')
mpFrppDlciWkStatXmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatXmtFrames.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatXmtFrames.setDescription('The value of this object indicates the total number of FRF.12 rev flg ng for this dlci.')
mpFrppDlciWkStatXmtDiscardFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 119, 2, 3, 3, 13, 123, 9, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpFrppDlciWkStatXmtDiscardFrms.setStatus('mandatory')
if mibBuilder.loadTexts: mpFrppDlciWkStatXmtDiscardFrms.setDescription('The value of this object indicates the total number of FRF.12 DiscardFrms for this dlci.')
mibBuilder.exportSymbols("MP-FRPP-MIB", mpFrppFrppCfgIfIndex=mpFrppFrppCfgIfIndex, mpEventLog=mpEventLog, mpFrppDlciStatFNArpTranslationErrs=mpFrppDlciStatFNArpTranslationErrs, mpIpsw=mpIpsw, mpFrppMccCfgFullEnqInterval=mpFrppMccCfgFullEnqInterval, mpFrppFrppStatRcvArpTransErrors=mpFrppFrppStatRcvArpTransErrors, mpFrppDlciWkStatFNEncapVOIP5s=mpFrppDlciWkStatFNEncapVOIP5s, mpFrppMccIdRcvBecnFrames=mpFrppMccIdRcvBecnFrames, mpFrppDlciWkStatFragBufhuntNgs=mpFrppDlciWkStatFragBufhuntNgs, mpFrppDlciQueueLenU=mpFrppDlciQueueLenU, mpFrppFrppCfgDlciIndex=mpFrppFrppCfgDlciIndex, DisplayString=DisplayString, mpFrppDlciCfgFragSize=mpFrppDlciCfgFragSize, mpFrppDlciIpQosClassAf3=mpFrppDlciIpQosClassAf3, mpFrppDlciStatXmtDEDiscardFrames=mpFrppDlciStatXmtDEDiscardFrames, necProductDepend=necProductDepend, mpFrppFrppCfgRowStatus=mpFrppFrppCfgRowStatus, mpFrppFrppStatIndex=mpFrppFrppStatIndex, mpFrppFrppCfgEntry=mpFrppFrppCfgEntry, mpFrppFrppCfgCtcpMode=mpFrppFrppCfgCtcpMode, mpFrppDlciWkStatFNEncapBridgeds=mpFrppDlciWkStatFNEncapBridgeds, mpFrppDlciQueueLenL=mpFrppDlciQueueLenL, mpFrppDlciStatXmtXceedUQLenFrms=mpFrppDlciStatXmtXceedUQLenFrms, necProduct=necProduct, mpFrppDlciStatRcvNPBDe0Frms=mpFrppDlciStatRcvNPBDe0Frms, mpFrppMccCfgEntry=mpFrppMccCfgEntry, mpFrppDlciStatRcvBECNFrames=mpFrppDlciStatRcvBECNFrames, mpFrppDlciStatXmtVQFrms=mpFrppDlciStatXmtVQFrms, mpFrppDlciWkStatFNEncapVOIP7s=mpFrppDlciWkStatFNEncapVOIP7s, mpAtm=mpAtm, mpFrppFrppCfgCtcpSupport=mpFrppFrppCfgCtcpSupport, mpFrppFrppStatRcvFrames=mpFrppFrppStatRcvFrames, mpFrppDlciWkStatXmtFrames=mpFrppDlciWkStatXmtFrames, mpFrppMccIdRcvOctets=mpFrppMccIdRcvOctets, mpFrpp=mpFrpp, mpFrppMccIdUsrLmiChInacts=mpFrppMccIdUsrLmiChInacts, mpFrppDlciStatXmtNPBFrms=mpFrppDlciStatXmtNPBFrms, NetPrefix=NetPrefix, mpFrppMccIdRcvInvalidFrames=mpFrppMccIdRcvInvalidFrames, mpFrppDlciStatXmtNQFrms=mpFrppDlciStatXmtNQFrms, mpFrppTrapInfo=mpFrppTrapInfo, mpFrppFrppStatTable=mpFrppFrppStatTable, mpFrppDlciWkStatFNEncapVOIP8s=mpFrppDlciWkStatFNEncapVOIP8s, mpFrppDlciWkStatNFEncapVOIP6s=mpFrppDlciWkStatNFEncapVOIP6s, mpFrppDlciWkStatXmtDiscardFrms=mpFrppDlciWkStatXmtDiscardFrms, mpFrppFrppStatXmtEncapErrors=mpFrppFrppStatXmtEncapErrors, mpFrppDlciStatXmtUQFrms=mpFrppDlciStatXmtUQFrms, mpFrppMccIdRcvFrameMaxSize=mpFrppMccIdRcvFrameMaxSize, mpFrppDlciWkStatNFEncapVOIP2s=mpFrppDlciWkStatNFEncapVOIP2s, mpFrppDlciCfgTrapFilter=mpFrppDlciCfgTrapFilter, mpFrppFrppCfgMtuSize=mpFrppFrppCfgMtuSize, mpFrppFrppStatRcvEncapErrors=mpFrppFrppStatRcvEncapErrors, mpFrppDlciStatRcvNPBDiscardFrms=mpFrppDlciStatRcvNPBDiscardFrms, mpFrppDlciStatRcvInArpReqFrms=mpFrppDlciStatRcvInArpReqFrms, mpFrppInfoDlciLastChange=mpFrppInfoDlciLastChange, mpFrppFrppStatXmtDiscardFrames=mpFrppFrppStatXmtDiscardFrames, mpFrppMccIdNetLmiLinkRelErrs=mpFrppMccIdNetLmiLinkRelErrs, mpFrppFrppCfgCtcpLimit=mpFrppFrppCfgCtcpLimit, mpMpc=mpMpc, mpFrppMccCfgErrorThreshold=mpFrppMccCfgErrorThreshold, mpFrppMccCfgL2Status=mpFrppMccCfgL2Status, mpFrppDlciCfgMincir=mpFrppDlciCfgMincir, mpFrppDlciQueueLenN=mpFrppDlciQueueLenN, mpFrppDlciWkStatNFEncapNones=mpFrppDlciWkStatNFEncapNones, mpCardInfo=mpCardInfo, mpFrppDlciQueueByteL=mpFrppDlciQueueByteL, mpLis=mpLis, mpVlan=mpVlan, mpFrppFrppCfgCrtpMode=mpFrppFrppCfgCrtpMode, mpObsCtl=mpObsCtl, mpFrppFrppStatRcvDiscardFrames=mpFrppFrppStatRcvDiscardFrames, mpFrppDlciWkStatFNEncapBridgedFCSs=mpFrppDlciWkStatFNEncapBridgedFCSs, mpFrppDlciStatNFUnrecognizHeaders=mpFrppDlciStatNFUnrecognizHeaders, mpFrppDlciWkStatInvalidFragFrms=mpFrppDlciWkStatInvalidFragFrms, mmn9120=mmn9120, mpFrppFrppCfgErrInfo=mpFrppFrppCfgErrInfo, mpFrppDlciStatIfIndex=mpFrppDlciStatIfIndex, mpFrppDlciQueueByteH=mpFrppDlciQueueByteH, mpFrppDlciWkStatFragSequenceErrs=mpFrppDlciWkStatFragSequenceErrs, mpFrppFrppStatPriorityQueues=mpFrppFrppStatPriorityQueues, mpFrppDlciCfgEncap=mpFrppDlciCfgEncap, mpFrppMccIdRcvLmiStats=mpFrppMccIdRcvLmiStats, dod=dod, mpFrppDlciQueueByteN=mpFrppDlciQueueByteN, mpFrppDlciStatXmtXceedLQLenFrms=mpFrppDlciStatXmtXceedLQLenFrms, mpFrppDlciStatRcvFrameMinSize=mpFrppDlciStatRcvFrameMinSize, mpFrppDlciWkStatIfIndex=mpFrppDlciWkStatIfIndex, mpInterface=mpInterface, mpFrppDlciCfgPerInc=mpFrppDlciCfgPerInc, mpFrppDlciStatRcvFECNFrames=mpFrppDlciStatRcvFECNFrames, mpFrppDlciWkStatRasmFrmSizeErrs=mpFrppDlciWkStatRasmFrmSizeErrs, mpFrppDlciWkStatNFEncapBridgedFCSs=mpFrppDlciWkStatNFEncapBridgedFCSs, mpFrppDlciStatXmtInArpReqFrms=mpFrppDlciStatXmtInArpReqFrms, mpFrppTrapInfoMccid=mpFrppTrapInfoMccid, mpFrppDlciCfgPerDec=mpFrppDlciCfgPerDec, mpFrppInfoDlciOperStatus=mpFrppInfoDlciOperStatus, mpFrppMccIdRcvLongFrames=mpFrppMccIdRcvLongFrames, mpDhcp=mpDhcp, mpFrppMccCfgIfIndex=mpFrppMccCfgIfIndex, mpSystem=mpSystem, mpFrppMccIdXmtDiscardFrames=mpFrppMccIdXmtDiscardFrames, mpFrppDlciWkStatFNEncapVOIP9s=mpFrppDlciWkStatFNEncapVOIP9s, mpFrppDlciStatRcvDEFrames=mpFrppDlciStatRcvDEFrames, mpFrppDlciWkStatNFEncapRoutedIPSNAPs=mpFrppDlciWkStatNFEncapRoutedIPSNAPs, mpSnmp=mpSnmp, internet=internet, mpFrppMccCfgErrInfo=mpFrppMccCfgErrInfo, mpFrppInfoTable=mpFrppInfoTable, mpFrppMccCfgLmiProcedure=mpFrppMccCfgLmiProcedure, MacAddress=MacAddress, mpFrppFrppCfgCrtpLimit=mpFrppFrppCfgCrtpLimit, mpFrppDlciStatXmtFrameMaxSize=mpFrppDlciStatXmtFrameMaxSize, mpInsCtl=mpInsCtl, mpFrppMccIdUsrLmiLinkRelErrs=mpFrppMccIdUsrLmiLinkRelErrs, mpFfr=mpFfr, mpFrppMccIdStatIfIndex=mpFrppMccIdStatIfIndex, mpFrppDlciStatXmtNPBDiscardFrms=mpFrppDlciStatXmtNPBDiscardFrms, private=private, mpFrppDlciWkStatRcvFragFrms=mpFrppDlciWkStatRcvFragFrms, mpFrppInfoFrppOperStatus=mpFrppInfoFrppOperStatus, enterprises=enterprises, mpUiSession=mpUiSession, mpIp=mpIp, mpFrppMccIdRcvCllmFrames=mpFrppMccIdRcvCllmFrames, mpFrppDlciStatFNUnrecognizHeaders=mpFrppDlciStatFNUnrecognizHeaders, mpFrppFrppStatXmtFrames=mpFrppFrppStatXmtFrames, mpFrppInfoFrppLastChange=mpFrppInfoFrppLastChange, mpLec=mpLec, mpIfCard=mpIfCard, mpFrppMccIdXmtFrameMaxSize=mpFrppMccIdXmtFrameMaxSize, mpFrppMccIdRcvDeFrames=mpFrppMccIdRcvDeFrames, mpFrppFrppStatXmtArpTransErrors=mpFrppFrppStatXmtArpTransErrors, mpFrppMccIdRcvFecnFrames=mpFrppMccIdRcvFecnFrames, mpFrppDlciStatXmtFrames=mpFrppDlciStatXmtFrames, nec=nec, mpFrppMccCfgNetPollInterval=mpFrppMccCfgNetPollInterval, mpFrppDlciStatNFArpTranslationErrs=mpFrppDlciStatNFArpTranslationErrs, mpFrppDlciStatXmtXceedNQByteFrms=mpFrppDlciStatXmtXceedNQByteFrms, mpFrppDlciIpQosClassBe=mpFrppDlciIpQosClassBe, mpFrppMccIdXmtDeFrames=mpFrppMccIdXmtDeFrames, mpFrppDlciWkStatFNEncapVOIP2s=mpFrppDlciWkStatFNEncapVOIP2s, mpPvoice=mpPvoice, mpFrppInfoDlciAdminStatus=mpFrppInfoDlciAdminStatus, mpFrppFrppCfgMccidIndex=mpFrppFrppCfgMccidIndex, DateAndTime=DateAndTime, mpFrppInfoIndex=mpFrppInfoIndex, mpFrppInfoFrppAdminStatus=mpFrppInfoFrppAdminStatus, mpFrppDlciWkStatFNEncapVOIP4s=mpFrppDlciWkStatFNEncapVOIP4s, mpOspf=mpOspf, mpFrppDlciCfgPln=mpFrppDlciCfgPln, mpFrppDlciStatXmtFrameMinSize=mpFrppDlciStatXmtFrameMinSize, mpFrppMccIdXmtFecnFrames=mpFrppMccIdXmtFecnFrames, mpFrppFrppCfgCrtpAging=mpFrppFrppCfgCrtpAging, mpFrppDlciWkStatFragBitErrs=mpFrppDlciWkStatFragBitErrs, mpFrppFrppCfgIpadd=mpFrppFrppCfgIpadd, mpFrppDlciStatXmtTaggedDEFrames=mpFrppDlciStatXmtTaggedDEFrames, mpFrppMccIdUsrLmiSeqErrs=mpFrppMccIdUsrLmiSeqErrs, mpFrppDlciWkStatNFEncapVOIP7s=mpFrppDlciWkStatNFEncapVOIP7s, mpFrppMccCfgLmiProtocol=mpFrppMccCfgLmiProtocol, mpLlc=mpLlc, mpFrppMccCfgRowStatus=mpFrppMccCfgRowStatus, mpFrppMccIdUsrLmiT391Tos=mpFrppMccIdUsrLmiT391Tos, nec_mib=nec_mib, datax=datax, mpFrppMccIdNetLmiErrs=mpFrppMccIdNetLmiErrs, mpFrppMccCfgTable=mpFrppMccCfgTable, mpFrppDlciWkStatNFEncapVOIP9s=mpFrppDlciWkStatNFEncapVOIP9s, mpFrppDlciQueueLenH=mpFrppDlciQueueLenH, mpFrppMccIdXmtBecnFrames=mpFrppMccIdXmtBecnFrames, mpFrppTrapInfoDlci=mpFrppTrapInfoDlci, org=org, mpIpswAtm=mpIpswAtm, mpFrppDlciWkStatNFEncapRoutedIPs=mpFrppDlciWkStatNFEncapRoutedIPs, mpFrppDlciIpQosClassAf4=mpFrppDlciIpQosClassAf4, mpFrppMccIdXmtLmiStatEnqs=mpFrppMccIdXmtLmiStatEnqs, mpFrppInfoDlci=mpFrppInfoDlci, mpFrppDlciStatXmtBECNFrames=mpFrppDlciStatXmtBECNFrames, mpFrppDlciIpQosClassAf2=mpFrppDlciIpQosClassAf2, mpFrppFrppCfgSubnet=mpFrppFrppCfgSubnet, mpFrppDlciIpQosClassAf1=mpFrppDlciIpQosClassAf1, mpFrppDlciCfgDe=mpFrppDlciCfgDe, mpFrppMccIdRcvFrames=mpFrppMccIdRcvFrames, mpFrppDlciStatXmtFECNFrames=mpFrppDlciStatXmtFECNFrames, mpFrppDlciStatRcvNPBDe1Frms=mpFrppDlciStatRcvNPBDe1Frms, mpEtherPort=mpEtherPort, mpFrppInfoEntry=mpFrppInfoEntry, mpFrppDlciCfgBecn=mpFrppDlciCfgBecn, mpFrppDlciStatRcvTaggedDEFrames=mpFrppDlciStatRcvTaggedDEFrames, mpFrppDlciWkStatFNEncapVOIP0s=mpFrppDlciWkStatFNEncapVOIP0s, mpFrppMccIdLmiStatIfIndex=mpFrppMccIdLmiStatIfIndex, mpFrppDlciWkStatFNEncapRoutedIPs=mpFrppDlciWkStatFNEncapRoutedIPs, mpFrppDlciStatXmtXceedHQByteFrms=mpFrppDlciStatXmtXceedHQByteFrms, PhysAddress=PhysAddress, mpFrppDlciWkStatFNEncapBPDUs=mpFrppDlciWkStatFNEncapBPDUs, mmn9110=mmn9110, mpCes=mpCes, mpFrppFrppCfgTable=mpFrppFrppCfgTable, mpFrppDlciIpQosClassEf1=mpFrppDlciIpQosClassEf1, mpFrppDlciCfgCir=mpFrppDlciCfgCir, mpFrppMccCfgUsrPollInterval=mpFrppMccCfgUsrPollInterval, mpFrppMccIdNetLmiSeqErrs=mpFrppMccIdNetLmiSeqErrs, mpFrppDlciStatXmtInArpRlyFrms=mpFrppDlciStatXmtInArpRlyFrms, mpFrppDlciStatXmtLQFrms=mpFrppDlciStatXmtLQFrms, mpFrppDlciStatXmtXceedLQByteFrms=mpFrppDlciStatXmtXceedLQByteFrms, mpFrppDlcStatTable=mpFrppDlcStatTable, mpFrppDlciWkStatFNEncapVOIP1s=mpFrppDlciWkStatFNEncapVOIP1s, mpDns=mpDns, mpFrppMccIdRcvAsyncFrms=mpFrppMccIdRcvAsyncFrms, mpFrppDlciWkStatFNEncapNones=mpFrppDlciWkStatFNEncapNones, mpFrppDlciIpQosClassEf2=mpFrppDlciIpQosClassEf2, mpFrppMccIdLmiStatTable=mpFrppMccIdLmiStatTable, mpFrppDlciStatRcvInArpRlyFrms=mpFrppDlciStatRcvInArpRlyFrms, mpFrppMccIdStatEntry=mpFrppMccIdStatEntry, mpFrppDlciWkStatNFEncapBridgeds=mpFrppDlciWkStatNFEncapBridgeds, mpFrppDlciWkStatNFEncapVOIP4s=mpFrppDlciWkStatNFEncapVOIP4s, mpFrppDlciCfgMtuSize=mpFrppDlciCfgMtuSize, mpFrppMccIdNetChInacts=mpFrppMccIdNetChInacts, mpFrppMccCfgAsync=mpFrppMccCfgAsync, mpFrppMccIdLmiStatEntry=mpFrppMccIdLmiStatEntry, mpFrppFrppCfgHwSticFlag=mpFrppFrppCfgHwSticFlag, mpFrppMccIdRcvLmiStatEnqs=mpFrppMccIdRcvLmiStatEnqs, mpFrppFrppStatEntry=mpFrppFrppStatEntry, mpPos=mpPos, mpFrppDlciStatXmtHQFrms=mpFrppDlciStatXmtHQFrms, mpFrppDlciWkStatEntry=mpFrppDlciWkStatEntry, mpFrppFrppCfgCrtpSupport=mpFrppFrppCfgCrtpSupport, mpFrppMccIdStatTable=mpFrppMccIdStatTable, mpFrppDlciStatRcvFrameMaxSize=mpFrppDlciStatRcvFrameMaxSize, mpPpp=mpPpp, mpFtp=mpFtp, mpAtmCallCtl=mpAtmCallCtl, mpCli=mpCli, mpFrppFrppStatPriorityBytes=mpFrppFrppStatPriorityBytes, mpStp=mpStp, mmpf=mmpf, mpFrppFrppCfgCtcpAging=mpFrppFrppCfgCtcpAging, mpFrppDlciStatXmtXceedNQLenFrms=mpFrppDlciStatXmtXceedNQLenFrms, mpFrppMccIdXmtFrameMinSize=mpFrppMccIdXmtFrameMinSize, mpFrppDlciQueueByteU=mpFrppDlciQueueByteU, mpFrppDlciWkStatNFEncapVOIP1s=mpFrppDlciWkStatNFEncapVOIP1s, mpBridge=mpBridge, mpStats=mpStats, mpFrppDlciCfgSnapFlg=mpFrppDlciCfgSnapFlg, mpFrppFrppCfgFrppName=mpFrppFrppCfgFrppName, mpFrppMccIdUsrLmiProtErrs=mpFrppMccIdUsrLmiProtErrs, mpFrppMccIdNetLmiT392Tos=mpFrppMccIdNetLmiT392Tos, mpFrppInfoDlciOperDownEvent=mpFrppInfoDlciOperDownEvent, mpDbAccess=mpDbAccess, mpFrppMccIdXmtOctets=mpFrppMccIdXmtOctets, mpFrppFrppStatReassembleErrors=mpFrppFrppStatReassembleErrors, mpFrppDlciIpQosClassEf3=mpFrppDlciIpQosClassEf3, mpFrppDlcStatEntry=mpFrppDlcStatEntry, mpFrppMccIdXmtFrames=mpFrppMccIdXmtFrames, mpFrppDlciStatXmtDEFrames=mpFrppDlciStatXmtDEFrames)
mibBuilder.exportSymbols("MP-FRPP-MIB", mpFrppDlciWkStatFNEncapVOIP3s=mpFrppDlciWkStatFNEncapVOIP3s, mpFrppDlciWkStatFNEncapVOIP6s=mpFrppDlciWkStatFNEncapVOIP6s, mpFrppDlciWkStatNFEncapVOIP3s=mpFrppDlciWkStatNFEncapVOIP3s, mpFrppDlciWkStatNFEncapVOIP8s=mpFrppDlciWkStatNFEncapVOIP8s, mpFrppDlciWkStatFragSndNgs=mpFrppDlciWkStatFragSndNgs, mpFrppMccIdXmtLmiStats=mpFrppMccIdXmtLmiStats, mpFrppMccIdRcvShortFrames=mpFrppMccIdRcvShortFrames, mpFrppMccCfgUniType=mpFrppMccCfgUniType, mpFrppDlciCfgMir=mpFrppDlciCfgMir, mpFrppMccCfgMonitoredEvents=mpFrppMccCfgMonitoredEvents, mpFrppDlciStatXmtOctets=mpFrppDlciStatXmtOctets, mpFrppDlciStatXmtXceedHQLenFrms=mpFrppDlciStatXmtXceedHQLenFrms, mpFrppDlciWkStatNFEncapBPDUs=mpFrppDlciWkStatNFEncapBPDUs, mpFrppDlciStatRcvOctets=mpFrppDlciStatRcvOctets, mpFrppDlciWkStatNFEncapVOIP5s=mpFrppDlciWkStatNFEncapVOIP5s, mpFrppDlciCfgInarpMode=mpFrppDlciCfgInarpMode, mpFrppDlciStatRcvFrames=mpFrppDlciStatRcvFrames, mpFrppDlciWkStatTable=mpFrppDlciWkStatTable, mpFrppDlciWkStatNFEncapVOIP0s=mpFrppDlciWkStatNFEncapVOIP0s, mmpf_mib=mmpf_mib, mpFrppDlciWkStatRasmCompleteds=mpFrppDlciWkStatRasmCompleteds, mpFrppMccIdRcvFrameMinSize=mpFrppMccIdRcvFrameMinSize, mpFrppFrppCfgInterWorkType=mpFrppFrppCfgInterWorkType, mpFrppDlciStatXmtXceedUQByteFrms=mpFrppDlciStatXmtXceedUQByteFrms, mpFrppDlciWkStatFNEncapRoutedIPSNAPs=mpFrppDlciWkStatFNEncapRoutedIPSNAPs, mpRip=mpRip, mpFrppMccIdRcvDiscardFrames=mpFrppMccIdRcvDiscardFrames, datax_mib=datax_mib)
