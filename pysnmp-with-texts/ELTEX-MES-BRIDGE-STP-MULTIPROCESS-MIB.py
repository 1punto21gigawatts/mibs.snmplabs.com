#
# PySNMP MIB module ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:01:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
BridgeId, Timeout, dot1dBasePort = mibBuilder.importSymbols("BRIDGE-MIB", "BridgeId", "Timeout", "dot1dBasePort")
eltMesBridgeExtMIBObjects, = mibBuilder.importSymbols("ELTEX-MES-BRIDGE-EXT-MIB", "eltMesBridgeExtMIBObjects")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
VlanIdOrNone, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, Unsigned32, Counter64, Counter32, IpAddress, MibIdentifier, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter64", "Counter32", "IpAddress", "MibIdentifier", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "NotificationType", "Bits")
RowStatus, TruthValue, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "MacAddress")
eltMesStpMultiProcessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2))
if mibBuilder.loadTexts: eltMesStpMultiProcessMIB.setLastUpdated('1310250000Z')
if mibBuilder.loadTexts: eltMesStpMultiProcessMIB.setOrganization('Eltex Ltd.')
if mibBuilder.loadTexts: eltMesStpMultiProcessMIB.setContactInfo('http://www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltMesStpMultiProcessMIB.setDescription('The MIB module for managing STP multiprocess extension.')
eltMesDot1dStpMultiProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1))
eltMesDot1sMstpMultiProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2))
eltdot1dStpMultiProcessTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1), )
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTable.setDescription('A table that contains per-process Stp specific information for the Spanning Tree Protocol.')
eltdot1dStpMultiProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1), ).setIndexNames((0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1dStpMultiProcessId"))
if mibBuilder.loadTexts: eltdot1dStpMultiProcessEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessEntry.setDescription('A list of information maintained by every instance about the multiple Spanning Tree Protocol state for that instance.')
eltdot1dStpMultiProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessId.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessId.setDescription('The Process index.')
eltdot1dStpMultiProcessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPriority.setReference('IEEE 802.1D-1990: Section 4.5.3.7')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPriority.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPriority.setDescription('The value of the write-able portion of the Bridge ID, i.e., the first two octets of the (8 octet long) Bridge ID. The other (last) 6 octets of the Bridge ID are given by the value of dot1dBaseBridgeAddress.')
eltdot1dStpMultiProcessBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 3), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.8')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeMaxAge.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeMaxAge.setDescription('The value that all bridges use for MaxAge when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of eltdot1dStpMultiProcessBridgeHelloTime. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
eltdot1dStpMultiProcessBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 4), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.9')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeHelloTime.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeHelloTime.setDescription('The value that all bridges use for HelloTime when this bridge is acting as the root. The granularity of this timer is specified by 802.1D- 1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
eltdot1dStpMultiProcessBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 5), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.10')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeForwardDelay.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessBridgeForwardDelay.setDescription('The value that all bridges use for ForwardDelay when this bridge is acting as the root. Note that 802.1D-1990 specifies that the range for this parameter is related to the value of eltdot1dStpMultiProcessBridgeMaxAge. The granularity of this timer is specified by 802.1D-1990 to be 1 second. An agent may return a badValue error if a set is attempted to a value which is not a whole number of seconds.')
eltdot1dStpMultiProcessVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stpCompatible", 0), ("rstp", 2), ("mstp", 3))).clone('rstp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessVersion.setReference('IEEE 802.1w clause 14.8.1, 17.12, 17.16.1')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessVersion.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessVersion.setDescription("The version of Spanning Tree Protocol the bridge is currently running. The value 'stpCompatible(0)' indicates the Spanning Tree Protocol specified in IEEE 802.1D and 'rstp(2)' indicates the Rapid Spanning Tree Protocol specified in IEEE 802.1w. New value may be defined as future versions of the protocol become available.")
eltdot1dStpMultiProcessTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTimeSinceTopologyChange.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTimeSinceTopologyChange.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTimeSinceTopologyChange.setDescription('The time (in hundredths of a second) since the last time a topology change was detected by the bridge entity.')
eltdot1dStpMultiProcessTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTopChanges.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTopChanges.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessTopChanges.setDescription('The total number of topology changes detected by this bridge since the management entity was last reset or initialized.')
eltdot1dStpMultiProcessDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 9), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessDesignatedRoot.setReference('IEEE 802.1D-1990: Section 4.5.3.1')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessDesignatedRoot.setDescription('The bridge identifier of the root of the spanning tree as determined by the Spanning Tree Protocol as executed by this node. This value is used as the Root Identifier parameter in all Configuration Bridge PDUs originated by this node.')
eltdot1dStpMultiProcessRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootCost.setReference('IEEE 802.1D-1990: Section 4.5.3.2')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootCost.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootCost.setDescription('The cost of the path to the root as seen from this bridge.')
eltdot1dStpMultiProcessRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootPort.setReference('IEEE 802.1D-1990: Section 4.5.3.3')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootPort.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRootPort.setDescription('The port number of the port which offers the lowest cost path from this bridge to the root bridge.')
eltdot1dStpMultiProcessMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 12), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.4')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessMaxAge.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessMaxAge.setDescription('The maximum age of Spanning Tree Protocol information learned from the network on any port before it is discarded, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
eltdot1dStpMultiProcessHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 13), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.5')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHelloTime.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHelloTime.setDescription('The amount of time between the transmission of Configuration bridge PDUs by this node on any port when it is the root of the spanning tree or trying to become so, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
eltdot1dStpMultiProcessHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHoldTime.setReference('IEEE 802.1D-1990: Section 4.5.3.14')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHoldTime.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessHoldTime.setDescription('This time value determines the interval length during which no more than two Configuration bridge PDUs shall be transmitted by this node, in units of hundredths of a second.')
eltdot1dStpMultiProcessForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 15), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.6')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessForwardDelay.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessForwardDelay.setDescription('This time value, measured in units of hundredths of a second, controls how fast a port changes its spanning state when moving towards the Forwarding state. The value determines how long the port stays in each of the Listening and Learning states, which precede the Forwarding state. This value is also used, when a topology change has been detected and is underway, to age all dynamic entries in the Forwarding Database. [Note that this value is the one that this bridge is currently using, in contrast to eltdot1dStpMultiProcessBridgeForwardDelay which is the value that this bridge and all others would start using if/when this bridge were to become the root.]')
eltdot1dStpMultiProcessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 16), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRowStatus.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessRowStatus.setDescription('Process entry row status.')
eltdot1dStpMultiProcessLastTopologyChangePort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessLastTopologyChangePort.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessLastTopologyChangePort.setDescription("This value contains port's ifIndex from which the request about the last change of topology came. If value is 0 - topology wasn't changed yet.")
eltdot1dStpMultiProcessPortTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2), )
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortTable.setDescription('A table that contains extended pair port specific information.')
eltdot1dStpMultiProcessPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1), ).setIndexNames((0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1dStpMultiProcessPortPort"))
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortEntry.setDescription('A list of information maintained by every port about the Spanning Tree Protocol state for that port.')
eltdot1dStpMultiProcessPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortPort.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortPort.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortPort.setDescription('The port number of the port for which this entry contains Spanning Tree Protocol management information.')
eltdot1dStpMultiProcessPortProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortProcessId.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortProcessId.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortProcessId.setDescription('Native process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId1 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId1.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId1.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId1.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId2.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId2.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId2.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId3 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId3.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId3.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId3.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId4 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId4.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId4.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId4.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId5 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId5.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId5.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId5.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId6 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId6.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId6.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId6.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId7 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId7.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId7.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId7.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId8 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId8.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId8.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId8.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId9 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId9.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId9.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId9.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortSharedProcessId10 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId10.setReference('')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId10.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortSharedProcessId10.setDescription('Shared process the port belongs to.')
eltdot1dStpMultiProcessPortListTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 3), )
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListTable.setDescription('A table that contains per-process port lists.')
eltdot1dStpMultiProcessPortListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 3, 1), ).setIndexNames((0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1dStpMultiProcessPortListProcessId"))
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListEntry.setDescription('Entry.')
eltdot1dStpMultiProcessPortListProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListProcessId.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortListProcessId.setDescription('The Process index.')
eltdot1dStpMultiProcessPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 1, 3, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortList.setStatus('current')
if mibBuilder.loadTexts: eltdot1dStpMultiProcessPortList.setDescription('The list of ports that belong to this process.')
eltdot1sMstpMultiProcessInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1), )
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTable.setDescription('A table that contains per-process Mstp instance specific information for the Multiple Spanning Tree Protocol.')
eltdot1sMstpMultiProcessInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1), ).setIndexNames((0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1sMstpMultiProcessInstanceProcessId"), (0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1sMstpMultiProcessInstanceId"))
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceEntry.setDescription('A list of information maintained by every instance about the multiple Spanning Tree Protocol state for that instance.')
eltdot1sMstpMultiProcessInstanceProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceProcessId.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceProcessId.setDescription('The Process index.')
eltdot1sMstpMultiProcessInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceId.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceId.setDescription('The Instance index.')
eltdot1sMstpMultiProcessInstanceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceEnable.setReference(' ?? ')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceEnable.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceEnable.setDescription('Specifies whether this Instance is STP enable or disable')
eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange.setDescription('The time (in hundredths of a second) since the last time a topology change was detected by the Mstp Instance .')
eltdot1sMstpMultiProcessInstanceTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTopChanges.setReference('IEEE 802.1D-1990: Section 6.8.1.1.3')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTopChanges.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceTopChanges.setDescription('The total number of topology changes detected by this Instance since the management entity was last reset or initialized.')
eltdot1sMstpMultiProcessInstanceDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceDesignatedRoot.setReference('IEEE 802.1D-1990: Section 4.5.3.1')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceDesignatedRoot.setDescription('The bridge identifier of the root of the spanning tree as determined by the Muliple Spanning Tree Protocol as executed by this node. This value is used as the Root Identifier parameter in all Configuration Bridge PDUs originated by this node.')
eltdot1sMstpMultiProcessInstanceRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootCost.setReference('IEEE 802.1D-1990: Section 4.5.3.2')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootCost.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootCost.setDescription('The cost of the path to the root as seen from this bridge.')
eltdot1sMstpMultiProcessInstanceRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootPort.setReference('IEEE 802.1D-1990: Section 4.5.3.3')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootPort.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRootPort.setDescription('The port number of the port which offers the lowest cost path from this bridge to the root bridge.')
eltdot1sMstpMultiProcessInstanceMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 9), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceMaxAge.setReference('IEEE 802.1D-1990: Section 4.5.3.4')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceMaxAge.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceMaxAge.setDescription('The maximum age of Spanning Tree Protocol information learned from the network on any port before it is discarded, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
eltdot1sMstpMultiProcessInstanceHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 10), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHelloTime.setReference('IEEE 802.1D-1990: Section 4.5.3.5')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHelloTime.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHelloTime.setDescription('The amount of time between the transmission of Configuration bridge PDUs by this node on any port when it is the root of the spanning tree or trying to become so, in units of hundredths of a second. This is the actual value that this bridge is currently using.')
eltdot1sMstpMultiProcessInstanceHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHoldTime.setReference('IEEE 802.1D-1990: Section 4.5.3.14')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHoldTime.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceHoldTime.setDescription('This time value determines the interval length during which no more than two Configuration bridge PDUs shall be transmitted by this node, in units of hundredths of a second.')
eltdot1sMstpMultiProcessInstanceForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 12), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceForwardDelay.setReference('IEEE 802.1D-1990: Section 4.5.3.6')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceForwardDelay.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceForwardDelay.setDescription('This time value, measured in units of hundredths of a second, controls how fast a port changes its spanning state when moving towards the Forwarding state. The value determines how long the port stays in each of the Listening and Learning states, which precede the Forwarding state. This value is also used, when a topology change has been detected and is underway, to age all dynamic entries in the Forwarding Database. [Note that this value is the one that this bridge is currently using, in contrast to eltdot1dStpMultiProcessBridgeForwardDelay which is the value that this bridge and all others would start using if/when this bridge were to become the root.]')
eltdot1sMstpMultiProcessInstancePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstancePriority.setReference('IEEE 802.1S-2001: Section 13.24.2')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstancePriority.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstancePriority.setDescription('The value of the write-able portion of the Bridge ID, i.e., the first four bits of the first octet of the (8 octet long) Bridge ID.The value is a product of 4096. The next 12 bit are the msti id . The other (last) 6 octets of the Bridge ID are given by the value of dot1dBaseBridgeAddress.')
eltdot1sMstpMultiProcessInstanceRemainingHopes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRemainingHopes.setReference('IEEE 802.1D-1990: Section 4.5.3.14')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRemainingHopes.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceRemainingHopes.setDescription('This count value determines the amount of hopes the information transmited by this bridge on this instance can travel.')
eltdot1sMstpMultiProcessInstanceLastTopologyChangePort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceLastTopologyChangePort.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessInstanceLastTopologyChangePort.setDescription("This value contains port's ifIndex from which the request about the last change of topology came. If value is 0 - topology wasn't changed yet.")
eltdot1sMstpMultiProcessTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2), )
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessTable.setDescription('A table that contains per-process information for the Multiple Spanning Tree Protocol.')
eltdot1sMstpMultiProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1), ).setIndexNames((0, "ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", "eltdot1sMstpMultiProcessId"))
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessEntry.setDescription('A list of information maintained by every process about the multiple Spanning Tree Protocol state for that process.')
eltdot1sMstpMultiProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessId.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessId.setDescription('The Process index.')
eltdot1sMstpMultiProcessMaxHopes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessMaxHopes.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessMaxHopes.setDescription('Max number of hopes that an MST BPDU will travel inside a region.')
eltdot1sMstpMultiProcessDesignatedMaxHopes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessDesignatedMaxHopes.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessDesignatedMaxHopes.setDescription('Max number of hopes that an MST BPDU will travel inside a region.')
eltdot1sMstpMultiProcessRegionalRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRoot.setReference('IEEE 802.1S-2002: Section 13.16.4')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRoot.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRoot.setDescription('CIST Regional Root Identifier (13.16.4). The Bridge Identifier of the current CIST Regional Root.')
eltdot1sMstpMultiProcessRegionalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRootCost.setReference('IEEE 802.1S-2002: Section 12.8.1.1.3')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRootCost.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRegionalRootCost.setDescription('The CIST path cost from the transmitting Bridge to the CIST Regional Root.')
eltdot1sMstpMultiProcessRemainingHops = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 401, 0, 2, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRemainingHops.setStatus('current')
if mibBuilder.loadTexts: eltdot1sMstpMultiProcessRemainingHops.setDescription('This count value determines the amount of hops the information transmitted by this bridge can travel.')
mibBuilder.exportSymbols("ELTEX-MES-BRIDGE-STP-MULTIPROCESS-MIB", eltdot1dStpMultiProcessMaxAge=eltdot1dStpMultiProcessMaxAge, eltdot1dStpMultiProcessTopChanges=eltdot1dStpMultiProcessTopChanges, eltdot1dStpMultiProcessPortEntry=eltdot1dStpMultiProcessPortEntry, eltdot1dStpMultiProcessPortSharedProcessId4=eltdot1dStpMultiProcessPortSharedProcessId4, eltdot1dStpMultiProcessTimeSinceTopologyChange=eltdot1dStpMultiProcessTimeSinceTopologyChange, eltdot1dStpMultiProcessPortSharedProcessId3=eltdot1dStpMultiProcessPortSharedProcessId3, eltdot1sMstpMultiProcessInstanceRemainingHopes=eltdot1sMstpMultiProcessInstanceRemainingHopes, eltdot1sMstpMultiProcessInstanceMaxAge=eltdot1sMstpMultiProcessInstanceMaxAge, eltdot1sMstpMultiProcessTable=eltdot1sMstpMultiProcessTable, eltdot1dStpMultiProcessPriority=eltdot1dStpMultiProcessPriority, eltdot1dStpMultiProcessPortPort=eltdot1dStpMultiProcessPortPort, eltdot1dStpMultiProcessPortSharedProcessId6=eltdot1dStpMultiProcessPortSharedProcessId6, eltdot1dStpMultiProcessPortListTable=eltdot1dStpMultiProcessPortListTable, eltdot1dStpMultiProcessPortSharedProcessId5=eltdot1dStpMultiProcessPortSharedProcessId5, eltdot1dStpMultiProcessPortListEntry=eltdot1dStpMultiProcessPortListEntry, eltdot1sMstpMultiProcessInstanceTable=eltdot1sMstpMultiProcessInstanceTable, eltdot1dStpMultiProcessBridgeForwardDelay=eltdot1dStpMultiProcessBridgeForwardDelay, eltdot1sMstpMultiProcessDesignatedMaxHopes=eltdot1sMstpMultiProcessDesignatedMaxHopes, eltdot1dStpMultiProcessForwardDelay=eltdot1dStpMultiProcessForwardDelay, eltdot1dStpMultiProcessTable=eltdot1dStpMultiProcessTable, eltdot1sMstpMultiProcessRemainingHops=eltdot1sMstpMultiProcessRemainingHops, eltdot1dStpMultiProcessPortSharedProcessId7=eltdot1dStpMultiProcessPortSharedProcessId7, eltdot1sMstpMultiProcessInstanceHelloTime=eltdot1sMstpMultiProcessInstanceHelloTime, eltdot1dStpMultiProcessBridgeMaxAge=eltdot1dStpMultiProcessBridgeMaxAge, eltdot1sMstpMultiProcessMaxHopes=eltdot1sMstpMultiProcessMaxHopes, eltdot1dStpMultiProcessPortSharedProcessId10=eltdot1dStpMultiProcessPortSharedProcessId10, eltdot1dStpMultiProcessDesignatedRoot=eltdot1dStpMultiProcessDesignatedRoot, eltMesDot1sMstpMultiProcess=eltMesDot1sMstpMultiProcess, eltdot1sMstpMultiProcessInstanceTopChanges=eltdot1sMstpMultiProcessInstanceTopChanges, eltdot1dStpMultiProcessEntry=eltdot1dStpMultiProcessEntry, eltdot1dStpMultiProcessHelloTime=eltdot1dStpMultiProcessHelloTime, eltdot1dStpMultiProcessPortSharedProcessId1=eltdot1dStpMultiProcessPortSharedProcessId1, eltdot1sMstpMultiProcessInstanceEnable=eltdot1sMstpMultiProcessInstanceEnable, eltdot1dStpMultiProcessRootCost=eltdot1dStpMultiProcessRootCost, eltdot1sMstpMultiProcessInstanceProcessId=eltdot1sMstpMultiProcessInstanceProcessId, eltdot1sMstpMultiProcessEntry=eltdot1sMstpMultiProcessEntry, eltdot1dStpMultiProcessPortSharedProcessId8=eltdot1dStpMultiProcessPortSharedProcessId8, eltdot1dStpMultiProcessPortTable=eltdot1dStpMultiProcessPortTable, eltdot1dStpMultiProcessPortListProcessId=eltdot1dStpMultiProcessPortListProcessId, eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange=eltdot1sMstpMultiProcessInstanceTimeSinceTopologyChange, eltdot1sMstpMultiProcessRegionalRootCost=eltdot1sMstpMultiProcessRegionalRootCost, eltMesStpMultiProcessMIB=eltMesStpMultiProcessMIB, eltdot1dStpMultiProcessRootPort=eltdot1dStpMultiProcessRootPort, eltdot1sMstpMultiProcessInstanceForwardDelay=eltdot1sMstpMultiProcessInstanceForwardDelay, eltdot1dStpMultiProcessId=eltdot1dStpMultiProcessId, eltdot1dStpMultiProcessLastTopologyChangePort=eltdot1dStpMultiProcessLastTopologyChangePort, eltdot1dStpMultiProcessPortSharedProcessId2=eltdot1dStpMultiProcessPortSharedProcessId2, eltdot1sMstpMultiProcessInstanceLastTopologyChangePort=eltdot1sMstpMultiProcessInstanceLastTopologyChangePort, eltdot1sMstpMultiProcessInstancePriority=eltdot1sMstpMultiProcessInstancePriority, eltdot1sMstpMultiProcessId=eltdot1sMstpMultiProcessId, eltdot1dStpMultiProcessRowStatus=eltdot1dStpMultiProcessRowStatus, eltdot1sMstpMultiProcessInstanceRootCost=eltdot1sMstpMultiProcessInstanceRootCost, eltdot1sMstpMultiProcessInstanceId=eltdot1sMstpMultiProcessInstanceId, eltdot1dStpMultiProcessBridgeHelloTime=eltdot1dStpMultiProcessBridgeHelloTime, eltdot1sMstpMultiProcessRegionalRoot=eltdot1sMstpMultiProcessRegionalRoot, PYSNMP_MODULE_ID=eltMesStpMultiProcessMIB, eltdot1sMstpMultiProcessInstanceDesignatedRoot=eltdot1sMstpMultiProcessInstanceDesignatedRoot, eltdot1sMstpMultiProcessInstanceHoldTime=eltdot1sMstpMultiProcessInstanceHoldTime, eltdot1dStpMultiProcessPortList=eltdot1dStpMultiProcessPortList, eltdot1dStpMultiProcessHoldTime=eltdot1dStpMultiProcessHoldTime, eltMesDot1dStpMultiProcess=eltMesDot1dStpMultiProcess, eltdot1dStpMultiProcessPortProcessId=eltdot1dStpMultiProcessPortProcessId, eltdot1sMstpMultiProcessInstanceEntry=eltdot1sMstpMultiProcessInstanceEntry, eltdot1dStpMultiProcessPortSharedProcessId9=eltdot1dStpMultiProcessPortSharedProcessId9, eltdot1dStpMultiProcessVersion=eltdot1dStpMultiProcessVersion, eltdot1sMstpMultiProcessInstanceRootPort=eltdot1sMstpMultiProcessInstanceRootPort)
