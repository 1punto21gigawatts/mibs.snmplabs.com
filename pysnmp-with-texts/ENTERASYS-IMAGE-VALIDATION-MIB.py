#
# PySNMP MIB module ENTERASYS-IMAGE-VALIDATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-IMAGE-VALIDATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, Bits, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Counter32, MibIdentifier, Gauge32, ModuleIdentity, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Bits", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Counter32", "MibIdentifier", "Gauge32", "ModuleIdentity", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
etsysImageValidationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47))
etsysImageValidationMIB.setRevisions(('2004-04-02 21:34',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysImageValidationMIB.setRevisionsDescriptions(('The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysImageValidationMIB.setLastUpdated('200404022134Z')
if mibBuilder.loadTexts: etsysImageValidationMIB.setOrganization('Enterasys Networks')
if mibBuilder.loadTexts: etsysImageValidationMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysImageValidationMIB.setDescription("This MIB module defines a portion of the SNMP MIB under Enterasys Networks' enterprise OID pertaining to new image validation and recovery.")
etsysImageValidationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1))
etsysImageValidationConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1))
etsysImageValidationEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationEnable.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationEnable.setDescription('The enabled/disabled status of the New Image Validation feature.')
etsysImageValidationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 2), Unsigned32().clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationPeriod.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationPeriod.setDescription('The maximum number of seconds to monitor the new image after it has booted. If any of the selected validation operations are not successfully completed within this interval, a reset will be issued to load the prior operational image.')
etsysImageValidationOperations = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 3), Bits().clone(namedValues=NamedValues(("etsysImageValidationConfig", 0), ("etsysImageValidationIcmp", 1), ("etsysImageValidationSnmp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationOperations.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationOperations.setDescription('The operations that will be used to validate the new image during the etsysImageValidationPeriod. etsysImageValidationConfig - The successful loading of the start-up configuration. etsysImageValidationIcmp - The successful reception of an ICMP echo reply from the host specified in etsysImageValidationIcmpAddress. etsysImageValidationSnmp - The successful reception of an SNMP request from the host specified in etsysImageValidationSnmpAddress. If a host is not specified, an SNMP request from any host will be considered a success. If all of the selected validation operations are not successfully completed within the etsysImageValidationPeriod, a reset will be issued to load the prior operational image.')
etsysImageValidationIcmpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationIcmpAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationIcmpAddressType.setDescription('The address type of the etsysImageValidationIcmpAddress object. These objects are used when the ICMP echo reply validation operation has been selected.')
etsysImageValidationIcmpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 5), InetAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationIcmpAddress.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationIcmpAddress.setDescription('The address of the host that should respond to the ICMP echo request. If an ICMP echo reply has NOT been received from this host by the end of the etsysImageValidationPeriod, a reset will be initiated to load the prior operational image.')
etsysImageValidationSnmpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 6), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationSnmpAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationSnmpAddressType.setDescription('The address type of the etsysImageValidationSnmpAddress object. These objects are used when the SNMP request validation operation has been selected.')
etsysImageValidationSnmpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 1, 1, 7), InetAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysImageValidationSnmpAddress.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationSnmpAddress.setDescription('The address of the host that we should receive an SNMP request from. If this object contains its default value then an SNMP request from any station will be considered a success. If an SNMP request has NOT been received from this host by the end of the etsysImageValidationPeriod, a reset will be initiated to load the prior operational image.')
etsysImageValidationConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 2))
etsysImageValidationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 2, 1))
etsysImageValidationCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 2, 2))
etsysImageValidationConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 2, 1, 1)).setObjects(("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationEnable"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationPeriod"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationOperations"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationIcmpAddressType"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationIcmpAddress"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationSnmpAddressType"), ("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationSnmpAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysImageValidationConfigGroup = etsysImageValidationConfigGroup.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationConfigGroup.setDescription('Objects that provide a means to validate a new image.')
etsysImageValidationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 47, 2, 2, 1)).setObjects(("ENTERASYS-IMAGE-VALIDATION-MIB", "etsysImageValidationConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysImageValidationCompliance = etsysImageValidationCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysImageValidationCompliance.setDescription('The compliance statement for entities which implement the Enterasys Image Validation MIB.')
mibBuilder.exportSymbols("ENTERASYS-IMAGE-VALIDATION-MIB", etsysImageValidationCompliances=etsysImageValidationCompliances, etsysImageValidationPeriod=etsysImageValidationPeriod, etsysImageValidationSnmpAddressType=etsysImageValidationSnmpAddressType, etsysImageValidationMIB=etsysImageValidationMIB, etsysImageValidationObjects=etsysImageValidationObjects, etsysImageValidationGroups=etsysImageValidationGroups, etsysImageValidationSnmpAddress=etsysImageValidationSnmpAddress, etsysImageValidationIcmpAddressType=etsysImageValidationIcmpAddressType, etsysImageValidationIcmpAddress=etsysImageValidationIcmpAddress, etsysImageValidationConformance=etsysImageValidationConformance, etsysImageValidationCompliance=etsysImageValidationCompliance, etsysImageValidationConfig=etsysImageValidationConfig, etsysImageValidationEnable=etsysImageValidationEnable, etsysImageValidationOperations=etsysImageValidationOperations, PYSNMP_MODULE_ID=etsysImageValidationMIB, etsysImageValidationConfigGroup=etsysImageValidationConfigGroup)
