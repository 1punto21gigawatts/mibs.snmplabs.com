#
# PySNMP MIB module TIARA-NETWORKS-ENVIRONMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-NETWORKS-ENVIRONMENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, TimeTicks, Counter64, Gauge32, MibIdentifier, iso, Counter32, ObjectIdentity, IpAddress, NotificationType, Bits, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "TimeTicks", "Counter64", "Gauge32", "MibIdentifier", "iso", "Counter32", "ObjectIdentity", "IpAddress", "NotificationType", "Bits", "NotificationType", "Integer32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
tiaraMgmt, = mibBuilder.importSymbols("TIARA-NETWORKS-SMI", "tiaraMgmt")
tiaraEnvironmentMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 3))
tiaraEnvironmentMib.setRevisions(('1900-08-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tiaraEnvironmentMib.setRevisionsDescriptions(('Initial version of Environment MIB.',))
if mibBuilder.loadTexts: tiaraEnvironmentMib.setLastUpdated('0008180000Z')
if mibBuilder.loadTexts: tiaraEnvironmentMib.setOrganization('Tiara Networks, Inc.')
if mibBuilder.loadTexts: tiaraEnvironmentMib.setContactInfo(' Tiara Networks Customer Support 525 Race Street, Suite 100, San Jose, CA 95126 USA Tel: +1 408-216-4700 Fax: +1 408-216-4701 Email: support@tiaranetworks.com')
if mibBuilder.loadTexts: tiaraEnvironmentMib.setDescription('')
class EnvState(TextualConvention, Integer32):
    description = 'Represents the state of a device being monitored.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("normal", 1), ("warning", 2), ("critical", 3), ("fail", 4), ("turned-off", 5))

class EnvInstalled(TextualConvention, Integer32):
    description = 'Installed flag for power supply.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("not-installed", 1), ("installed", 2))

class EnvStatus(TextualConvention, Integer32):
    description = 'Installed flag for power supply.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class EnvType(TextualConvention, Integer32):
    description = 'Installed flag for power supply.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unknown", 1), ("minus48VDC", 2))

envObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1))
envNotificationEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 3, 2))
envNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3))
envTempSensorTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 1), )
if mibBuilder.loadTexts: envTempSensorTable.setStatus('current')
if mibBuilder.loadTexts: envTempSensorTable.setDescription('A list of module entries. The number of entries is given by the value of chassisNumSlots.')
envTempSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-ENVIRONMENT-MIB", "envTempSensorUnitIndex"))
if mibBuilder.loadTexts: envTempSensorEntry.setStatus('current')
if mibBuilder.loadTexts: envTempSensorEntry.setDescription('Entry containing information about a temperature sensor within the chassis.')
envTempSensorUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: envTempSensorUnitIndex.setStatus('current')
if mibBuilder.loadTexts: envTempSensorUnitIndex.setDescription('The index to access an entry in the table.')
envTempSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envTempSensorValue.setStatus('current')
if mibBuilder.loadTexts: envTempSensorValue.setDescription(' The current value of the temperature sensor. ')
envTempSensorState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 1, 1, 3), EnvState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envTempSensorState.setStatus('current')
if mibBuilder.loadTexts: envTempSensorState.setDescription(' The current state of the temperature sensor. ')
envFanTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 2), )
if mibBuilder.loadTexts: envFanTable.setStatus('current')
if mibBuilder.loadTexts: envFanTable.setDescription('A list of fan unit entries.')
envFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 2, 1), ).setIndexNames((0, "TIARA-NETWORKS-ENVIRONMENT-MIB", "envFanUnitIndex"))
if mibBuilder.loadTexts: envFanEntry.setStatus('current')
if mibBuilder.loadTexts: envFanEntry.setDescription('Entry containing information about a fan within the chassis.')
envFanUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: envFanUnitIndex.setStatus('current')
if mibBuilder.loadTexts: envFanUnitIndex.setDescription('The index to access an entry in the table. ')
envFanState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 2, 1, 2), EnvState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envFanState.setStatus('current')
if mibBuilder.loadTexts: envFanState.setDescription(' The current state of fan 0, normal/fail. ')
envPwrsupPowerFailCount = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupPowerFailCount.setStatus('current')
if mibBuilder.loadTexts: envPwrsupPowerFailCount.setDescription('Number of failures of either power supply since boot-up.')
envPwrsupTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4), )
if mibBuilder.loadTexts: envPwrsupTable.setStatus('current')
if mibBuilder.loadTexts: envPwrsupTable.setDescription('A list of power supply status information.')
envPwrsupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1), ).setIndexNames((0, "TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupIndex"))
if mibBuilder.loadTexts: envPwrsupEntry.setStatus('current')
if mibBuilder.loadTexts: envPwrsupEntry.setDescription('Entry containing power supply information.')
envPwrsupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: envPwrsupIndex.setStatus('current')
if mibBuilder.loadTexts: envPwrsupIndex.setDescription('Index to access entry.')
envPwrsupInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 2), EnvInstalled()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupInstalled.setStatus('current')
if mibBuilder.loadTexts: envPwrsupInstalled.setDescription('Power supply installed flag.')
envPwrsupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 3), EnvStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupStatus.setStatus('current')
if mibBuilder.loadTexts: envPwrsupStatus.setDescription('Power supply up/down status.')
envPwrsupType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 4), EnvType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupType.setStatus('current')
if mibBuilder.loadTexts: envPwrsupType.setDescription('Power supply type.')
envPwrsupUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupUptime.setStatus('current')
if mibBuilder.loadTexts: envPwrsupUptime.setDescription('Seconds since power supply came up.')
envPwrsupDowntime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 3, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envPwrsupDowntime.setStatus('current')
if mibBuilder.loadTexts: envPwrsupDowntime.setDescription('Seconds since power supply went down.')
envEnableTemperatureNotification = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 3, 2, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: envEnableTemperatureNotification.setStatus('current')
if mibBuilder.loadTexts: envEnableTemperatureNotification.setDescription('Indicates whether the system produces the envTemperatureNotification. The default is yes. Note: implementation is TBD. ')
envEnableFanNotification = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 3, 2, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: envEnableFanNotification.setStatus('current')
if mibBuilder.loadTexts: envEnableFanNotification.setDescription('Indicates whether the system produces the envFanNotification. The default is yes. ')
envEnablePowerNotification = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 3, 2, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: envEnablePowerNotification.setStatus('current')
if mibBuilder.loadTexts: envEnablePowerNotification.setDescription('Indicates whether the system produces the envPowerNotification. The default is yes. ')
envTemperatureNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,1)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envTempSensorUnitIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envTempSensorValue"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envTempSensorState"))
if mibBuilder.loadTexts: envTemperatureNotification.setDescription(' An envTemeratureNotification is sent if the environmental monitoring detects that the temperature is at a critical state. This may cause the system to shut down. This notification is sent only if envEnableTemperatureNotification is set to true. ')
envFanNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,2)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envFanUnitIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envFanState"))
if mibBuilder.loadTexts: envFanNotification.setDescription(' An envFanNotification is sent if the environmental monitoring detects that a fan is in a critical state. This may cause the system to shut down. This notification is sent only if envEnableFanNotification is set to true. ')
envPowerSupply1DownNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,3)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupPowerFailCount"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupInstalled"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupStatus"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupType"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupUptime"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupDowntime"))
if mibBuilder.loadTexts: envPowerSupply1DownNotification.setDescription(' An envPowerNotification is sent if the environmental monitoring detects that a power supply has changed status. This notification is sent only if envEnablePowerNotification is set to true. ')
envPowerSupply1UpNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,4)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupPowerFailCount"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupInstalled"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupStatus"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupType"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupUptime"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupDowntime"))
if mibBuilder.loadTexts: envPowerSupply1UpNotification.setDescription(' An envPowerNotification is sent if the environmental monitoring detects that a power supply has changed status. This notification is sent only if envEnablePowerNotification is set to true. ')
envPowerSupply2DownNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,5)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupPowerFailCount"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupInstalled"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupStatus"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupType"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupUptime"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupDowntime"))
if mibBuilder.loadTexts: envPowerSupply2DownNotification.setDescription(' An envPowerNotification is sent if the environmental monitoring detects that a power supply has changed status. This notification is sent only if envEnablePowerNotification is set to true. ')
envPowerSupply2UpNotification = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 3, 3) + (0,6)).setObjects(("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupPowerFailCount"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupIndex"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupInstalled"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupStatus"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupType"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupUptime"), ("TIARA-NETWORKS-ENVIRONMENT-MIB", "envPwrsupDowntime"))
if mibBuilder.loadTexts: envPowerSupply2UpNotification.setDescription(' An envPowerNotification is sent if the environmental monitoring detects that a power supply has changed status. This notification is sent only if envEnablePowerNotification is set to true. ')
mibBuilder.exportSymbols("TIARA-NETWORKS-ENVIRONMENT-MIB", envPowerSupply1UpNotification=envPowerSupply1UpNotification, envObjects=envObjects, envEnablePowerNotification=envEnablePowerNotification, envPwrsupDowntime=envPwrsupDowntime, envPwrsupType=envPwrsupType, envEnableTemperatureNotification=envEnableTemperatureNotification, envPwrsupPowerFailCount=envPwrsupPowerFailCount, PYSNMP_MODULE_ID=tiaraEnvironmentMib, envFanTable=envFanTable, envPowerSupply2UpNotification=envPowerSupply2UpNotification, EnvType=EnvType, envFanUnitIndex=envFanUnitIndex, envPwrsupEntry=envPwrsupEntry, envPwrsupInstalled=envPwrsupInstalled, envNotificationEnables=envNotificationEnables, tiaraEnvironmentMib=tiaraEnvironmentMib, envTempSensorEntry=envTempSensorEntry, envNotifications=envNotifications, envPwrsupIndex=envPwrsupIndex, envPowerSupply1DownNotification=envPowerSupply1DownNotification, envPwrsupStatus=envPwrsupStatus, envTempSensorValue=envTempSensorValue, envPowerSupply2DownNotification=envPowerSupply2DownNotification, envFanEntry=envFanEntry, envFanNotification=envFanNotification, envEnableFanNotification=envEnableFanNotification, EnvInstalled=EnvInstalled, envPwrsupTable=envPwrsupTable, envTempSensorState=envTempSensorState, envTemperatureNotification=envTemperatureNotification, envTempSensorUnitIndex=envTempSensorUnitIndex, envPwrsupUptime=envPwrsupUptime, EnvStatus=EnvStatus, EnvState=EnvState, envFanState=envFanState, envTempSensorTable=envTempSensorTable)
