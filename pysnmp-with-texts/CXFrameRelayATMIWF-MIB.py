#
# PySNMP MIB module CXFrameRelayATMIWF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXFrameRelayATMIWF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:32:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
SapIndex, cxFrameRelay = mibBuilder.importSymbols("CXProduct-SMI", "SapIndex", "cxFrameRelay")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, NotificationType, IpAddress, Counter32, Counter64, Gauge32, ObjectIdentity, Unsigned32, MibIdentifier, iso, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "IpAddress", "Counter32", "Counter64", "Gauge32", "ObjectIdentity", "Unsigned32", "MibIdentifier", "iso", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frpAtmIWFMibLevel = MibScalar((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frpAtmIWFMibLevel.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmIWFMibLevel.setDescription('Used to determine current MIB module release supported by the agent. Object is in decimal.')
frpAtmConnectTimer = MibScalar((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frpAtmConnectTimer.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmConnectTimer.setDescription('Determines the number of seconds between attempts to establish a connection for a Frame Relay to ATM circuit mapping. Configuration Changed: operative')
frpAtmNISapTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52), )
if mibBuilder.loadTexts: frpAtmNISapTable.setReference('The Frame Relay Forum: Document Number FRF.5 ')
if mibBuilder.loadTexts: frpAtmNISapTable.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapTable.setDescription('A table containing configuration and state information about each FR /ATM Network Interworking service access point.')
frpAtmNISapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1), ).setIndexNames((0, "CXFrameRelayATMIWF-MIB", "frpAtmNISapNumber"))
if mibBuilder.loadTexts: frpAtmNISapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapEntry.setDescription('The parameters for a particular frame relay/ATM Network Interworking service access point.')
frpAtmNISapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 1), SapIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frpAtmNISapNumber.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapNumber.setDescription('Indicates the row containing objects for configuring and monitoring a FR/ATM connection. The value of the object is the same as the SAP in frpSapTable. The row is automatically created when the object frpSapMode in frpSapTable has the value of 3. If the value of object frpSapMode is changed to a value different than 3, the row will also be deleted automatically. Default Value: none')
frpAtmNISapState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("offLine", 1), ("notConnected", 2), ("inProgress", 3), ("connected", 4), ("connectFlowOff", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frpAtmNISapState.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapState.setDescription('Identifies the current status of the connection between the FR sap and the ATM sap. Options: offLine (1): Indicates that the SAP is offline. notConnected (2): Indicates that the remote destination does not exist, or has refused the connection. inProgress (3): Indicates that the connection is in the process of being established. This is a transient state. connected (4): Indicates that the connection is established and is ready for data transfer. connectionFlowOff (5): Indicates that the connection is established but data flow has been stopped.')
frpAtmNIFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 18))).clone(namedValues=NamedValues(("noFailure", 1), ("internalError", 2), ("localAllocFailure", 3), ("remoteAllocFailure", 4), ("localNoAccess", 5), ("remoteNoAccess", 6), ("remotePvcDown", 8), ("remotePvcBusy", 10), ("localFcnFailure", 11), ("remoteFcnFailure", 12), ("localDsnFailure", 13), ("remoteAliasNotFound", 15), ("remoteNoPvcService", 16), ("routeStalled", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frpAtmNIFailureReason.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNIFailureReason.setDescription('Indicates the status of a failed connection. The value of this object is only valid only between attempts to establish the connection, and may or may not change after successive failed attempts. Options: noFailure (1): Once a system route has been successfully connected, this value is maintained for the duration of the connection. internalError (2): An internal error has occurred. localAllocFailure (3): There is insufficient memory available for ATM DXI to establish this connection. remoteAllocFailure (4): There is insufficient memory available for the destination protocol layer to establish this connection. localNoAccess (5): This route is associated with a SAP that does not exist. remoteNoAccess (6): This route is associated with a SAP that does not exist at the destination layer. remotePvcDown (8): The PVC at the destination protocol layer is down. remotePvcBusy (10): The destination associated with this route is already connected. This typically occurs when the route is a non-MPE (PVC consolidating) circuit. localFcnFailure (11): Flow control negotiation failed. remoteFcnFailure (12): Flow control negotiation failed at the destination protocol layer. localDsnFailure (13): Data size negotiation failed. remoteAliasNotFound (15): The destination alias (atmDxiSRDestAlias) does not exist. remoteNoPvcService (16): The destination protocol layer does not support PVC service. routeStalled (18): An invalid control packet exchange has occurred during the route setup procedure. The route is temporarily stalled but will recover within 5 seconds.')
frpAtmNISapDEtoCLPMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode1", 1), ("mode2", 2))).clone('mode1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frpAtmNISapDEtoCLPMapping.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapDEtoCLPMapping.setDescription('Determines which mode will be selected for loss priority mapping in the FR to ATM direction. Options: mode1 (1): The Discard Eligibility ( DE ) field in the Q.922 core frame shall be copied unchanged into DE field in the FR-SSCS PDU header and mapped to the ATM Cell Loss Priority( CLP ) of every ATM cell generated by the segmentation process of that frame. mode2 (2): The DE field in the Q.922 core frame shall be copied unchanged into the DE field in the FR-SSCS PDU header and the ATM Cell Loss Priority of every ATM cell generated by the segmentation process of that fame shall be set to a constant value( either 0 or 1 ). The value is decided when the connection is set up, and is used for all cell generated from the segmentation process of every frame, until the ATM connect characteristics are changed. Default Value: mode1 Configuration Changed: operative')
frpAtmNISapCLPtoDEMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode1", 1), ("mode2", 2))).clone('mode1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frpAtmNISapCLPtoDEMapping.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapCLPtoDEMapping.setDescription("Determines which mode will be selected for loss priority mapping in the ATM to FR direction. Options: mode1 (1): If one or more ATM cells belonging to a frame has it's CLP field set to one or if the DE field of the FR-SSCS PDU is set to one, the DE field of the Q.922 core frame should be set. mode2 (2): No mapping is performed from the ATM layer to Q.922 core layer. The FR-SSCS PDU DE field is copied unchanged to the Q.922 core frame DE field, independent of CLP indications received at the ATM layer. Default Value: mode1 Configuration Changed: operative")
frpAtmNISapCLPBit = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 3, 52, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zero", 1), ("one", 2))).clone('zero')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frpAtmNISapCLPBit.setStatus('mandatory')
if mibBuilder.loadTexts: frpAtmNISapCLPBit.setDescription('Determines which value of Cell Loss Priority (CLP) will pass to the ATM cell level if the mode2 of frpAtmNISapDEtoCLPMapping is selected. The object is not valid if the mode1 of frpAtmNISapDEtoCLPMappingmode is selected. Options: zero (1): The CLP bit will be set to 0 at the ATM cell level. one (2): The CLP bit will be set to 1 at the ATM cell level. Default Value: zero Configuration Changed: operative')
mibBuilder.exportSymbols("CXFrameRelayATMIWF-MIB", frpAtmConnectTimer=frpAtmConnectTimer, frpAtmNIFailureReason=frpAtmNIFailureReason, frpAtmNISapState=frpAtmNISapState, frpAtmNISapCLPBit=frpAtmNISapCLPBit, frpAtmNISapTable=frpAtmNISapTable, frpAtmNISapNumber=frpAtmNISapNumber, frpAtmIWFMibLevel=frpAtmIWFMibLevel, frpAtmNISapDEtoCLPMapping=frpAtmNISapDEtoCLPMapping, frpAtmNISapEntry=frpAtmNISapEntry, frpAtmNISapCLPtoDEMapping=frpAtmNISapCLPtoDEMapping)
