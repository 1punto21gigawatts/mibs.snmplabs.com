#
# PySNMP MIB module CERENT-OPTICAL-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CERENT-OPTICAL-MONITOR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
cerentModules, cerentGeneric, cerentRequirements = mibBuilder.importSymbols("CERENT-GLOBAL-REGISTRY", "cerentModules", "cerentGeneric", "cerentRequirements")
CerentPeriod, = mibBuilder.importSymbols("CERENT-TC", "CerentPeriod")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Gauge32, NotificationType, Bits, ModuleIdentity, Integer32, MibIdentifier, Counter64, ObjectIdentity, iso, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "NotificationType", "Bits", "ModuleIdentity", "Integer32", "MibIdentifier", "Counter64", "ObjectIdentity", "iso", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
cerentOpticalMonitorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3607, 1, 10, 70))
cerentOpticalMonitorMIB.setRevisions(('1902-11-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cerentOpticalMonitorMIB.setRevisionsDescriptions(('The initial revision of this MIB.',))
if mibBuilder.loadTexts: cerentOpticalMonitorMIB.setLastUpdated('0211110000Z')
if mibBuilder.loadTexts: cerentOpticalMonitorMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: cerentOpticalMonitorMIB.setContactInfo('support@Cisco.com Postal: Cisco Systems 1450 N. McDowell Blvd. Petaluma, CA 94954 Tel: +1-877-323-7368')
if mibBuilder.loadTexts: cerentOpticalMonitorMIB.setDescription('This MIB module defines objects to monitor optical characteristics and set corresponding thresholds, on the optical interfaces in a network element. This module is an adaptation of CISCO-OPTICAL-MONITOR-MIB. ')
class OpticalParameterType(TextualConvention, Integer32):
    description = 'This value indicates the optical parameter that is being monitored. Valid values are - power (1) : Optical Power (AC + DC). acPower (2) : Optical AC Power. apdTemp (3) : Avalanche Photo Detector Temperature. laserTemp (4) : Laser Temperature. biasCurrent (5) : Laser bias current. peltierCurrent (6) : Laser peltier current. xcvrVoltage (7) : Transceiver voltage. voa (8) : Variable Optical Attenuation Failure & Degrade Th. gain (9) : Optical amplifier gain Failure & Degrade Th. oscPower (10) : OSC Optical Power addPower (11) : Add Optical Power '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("power", 1), ("acPower", 2), ("apdTemp", 3), ("laserTemp", 4), ("biasCurrent", 5), ("peltierCurrent", 6), ("xcvrVoltage", 7), ("voa", 8), ("gain", 9), ("oscPower", 10), ("addPower", 11))

class OpticalParameterValue(TextualConvention, Integer32):
    description = "The value of the optical parameter that is being monitored. The range of values varies depending on the type of optical parameter being monitored, as identified by a corresponding object with syntax OpticalParameterType. when the optical parameter being monitored is 'power' or 'acpower', the supported range is from -1000 to 1000, in 1/10ths of dBm. Example: Actual power of -40 dbm is represented as -400. Actual power level of +30 dBm is represented as 300. When the optical parameter being monitored is 'laserTemp' or 'apdTemp', the supported range is from -10000 to 30000, in 1/100ths of degrees centigrade. Example: A value of 2355 represents a temperature reading of 23.55 degrees C. When the optical parameter being monitored is 'biasCurrent', the supported range is from 0 to 1000, in 1/10ths of percentage (%). Example: A value of 500 represents a bias current threshold of 50.0 %. When the optical parameter being monitored is 'peltierCurrent', the supported range is from 0 to 10000, in milliamperes. When the optical parameter being monitored is 'xcvrVoltage', the supported range is from 0 to 100000, in 1/10ths of millivolts. Example: A Value of 115 represents a transceiver voltage reading of 11.5 millivolts. The distinguished value of '-1000000' indicates that the object has not yet been initialized or does not apply. "
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1000000, 1000000)

class OpticalIfDirection(TextualConvention, Integer32):
    description = 'This value indicates the direction being monitored at the optical interface. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("receive", 1), ("transmit", 2), ("notApplicable", 3))

cerentOpticalMonitorMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 2, 30))
cerentOpticalMonGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1))
cerentOpticalPMGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2))
cOpticalMonTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1), )
if mibBuilder.loadTexts: cOpticalMonTable.setStatus('current')
if mibBuilder.loadTexts: cOpticalMonTable.setDescription('This table provides objects to monitor optical parameters in a network element. It also provides objects for setting high and low threshold levels, with configurable severities, on these monitored parameters.')
cOpticalMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalMonDirection"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalMonParameterType"))
if mibBuilder.loadTexts: cOpticalMonEntry.setStatus('current')
if mibBuilder.loadTexts: cOpticalMonEntry.setDescription('An entry in the cOpticalMonTable provides objects to monitor an optical parameter and set threshold levels on that parameter, at an optical interface. Note that the set of monitored optical parameters may vary based on interface type and direction. Examples of interfaces that can have an entry in this table include optical transceivers optical amplifiers, and optical attenuators.')
cOpticalMonDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 1), OpticalIfDirection())
if mibBuilder.loadTexts: cOpticalMonDirection.setStatus('current')
if mibBuilder.loadTexts: cOpticalMonDirection.setDescription('This object is an index into the cOpticalMonTable and indicates the direction monitored for the optical interface, in this entry.')
cOpticalMonParameterType = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 2), OpticalParameterType())
if mibBuilder.loadTexts: cOpticalMonParameterType.setStatus('current')
if mibBuilder.loadTexts: cOpticalMonParameterType.setDescription('This object is an index into the cOpticalMonTable and specifies the optical parameter that is being monitored, in this entry.')
cOpticalParameterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 3), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalParameterValue.setStatus('current')
if mibBuilder.loadTexts: cOpticalParameterValue.setDescription('This object gives the value measured for the particular optical parameter specified by the cOpticalMonParameterType object.')
cOpticalParamHighAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 4), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamHighAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamHighAlarmThresh.setDescription("This object is used to set a high alarm threshold on the optical parameter being monitored. If the measured value of the parameter,is greater than the value configured in this object, an alarm will be raised. When the cOpticalMonParameterType object is set to 'power' for the receive direction at a transceiver, this object specifies the receiver saturation level.")
cOpticalParamHighWarning15MinThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 5), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamHighWarning15MinThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamHighWarning15MinThresh.setDescription('This object is used to set a high warning 15 minute threshold on the optical parameter being monitored. If the measured value of the parameter,is greater than the value configured in this object, an alarm may be raised.')
cOpticalParamHighWarning1DayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 6), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamHighWarning1DayThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamHighWarning1DayThresh.setDescription('This object is used to set a high warning 1 day threshold on the optical parameter being monitored. If the measured value of the parameter,is greater than the value configured in this object, an alarm may be raised.')
cOpticalParamLowAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 7), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamLowAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamLowAlarmThresh.setDescription("This object is used to set a low alarm threshold on the optical parameter being monitored. If the measured value of the parameter,goes lower than the value configured in this object, an alarm will be raised. When the cOpticalMonParameterType object is set to 'power' for the receive direction and when the interface supports alarms based on loss of light, this object specifies the optical power threshold for declaring loss of light. Also, when optical amplifiers are present in the network, in the receive direction, this value may need to be configured, since the noise floor may be higher than the minimum sensitivity of the receiver.")
cOpticalParamLowWarning15MinThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 8), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamLowWarning15MinThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamLowWarning15MinThresh.setDescription('This object is used to set a low warning 15 minute threshold on the optical parameter being monitored. If the measured value of the parameter,goes lower than the value configured in this object, an alarm will be raised.')
cOpticalParamLowWarning1DayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 9), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamLowWarning1DayThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamLowWarning1DayThresh.setDescription('This object is used to set a low warning 1 day threshold on the optical parameter being monitored. If the measured value of the parameter,goes lower than the value configured in this object, an alarm will be raised.')
cOpticalParamLowDegradeThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 10), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamLowDegradeThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamLowDegradeThresh.setDescription('This object is used to set a low degrade threshold on the optical parameter being monitored. If the measured value of the parameter,goes lower than the value configured in this object, a degrade alarm will be raised.')
cOpticalParamHighDegradeThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 1, 1, 1, 11), OpticalParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOpticalParamHighDegradeThresh.setStatus('current')
if mibBuilder.loadTexts: cOpticalParamHighDegradeThresh.setDescription('This object is used to set a high degrade threshold on the optical parameter being monitored. If the measured value of the parameter,goes lower than the value configured in this object, a degrade alarm will be raised.')
cOpticalPMCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1), )
if mibBuilder.loadTexts: cOpticalPMCurrentTable.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentTable.setDescription('This table stores performance monitoring data for the various optical parameters, collected over the current interval.')
cOpticalPMCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentDirection"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentParamType"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentPeriod"))
if mibBuilder.loadTexts: cOpticalPMCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentEntry.setDescription('An entry in the cOpticalPMCurrentTable. It contains performance monitoring data for an optical parameter, collected over the current interval. Note that the set of monitored optical parameters may vary based on interface type and direction. Examples of interfaces that can have an entry in this table include optical transceivers, optical amplifiers, and optical attenuators.')
cOpticalPMCurrentDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 1), OpticalIfDirection())
if mibBuilder.loadTexts: cOpticalPMCurrentDirection.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentDirection.setDescription('This object is an index into the cOpticalPMCurrentTable and indicates the direction monitored for the optical interface, in this entry.')
cOpticalPMCurrentParamType = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 2), OpticalParameterType())
if mibBuilder.loadTexts: cOpticalPMCurrentParamType.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentParamType.setDescription('This object is an index into the cOpticalPMCurrentTable and specifies the optical parameter that is being monitored, in this entry.')
cOpticalPMCurrentPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 3), CerentPeriod())
if mibBuilder.loadTexts: cOpticalPMCurrentPeriod.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentPeriod.setDescription('This object is an index into the cOpticalPMCurrentTable and indicates whether the optical parameter values given in this entry, are collected over a period of 15 minutes or 24 hours.')
cOpticalPMCurrentMaxParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 4), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMCurrentMaxParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentMaxParam.setDescription('This object gives the maximum value measured for the optical parameter, in the current 15 minute or 24 hour interval.')
cOpticalPMCurrentMinParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 5), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMCurrentMinParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentMinParam.setDescription('This object gives the minimum value measured for the optical parameter, in the current 15 minute or 24 hour interval.')
cOpticalPMCurrentMeanParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 1, 1, 6), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMCurrentMeanParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMCurrentMeanParam.setDescription('This object gives the average value of the measured optical parameter, in the current 15 minute or 24 hour interval.')
cOpticalPMIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2), )
if mibBuilder.loadTexts: cOpticalPMIntervalTable.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalTable.setDescription('This table stores performance monitoring data for the various optical parameters, collected over current and previous intervals. This table can have entries for up to 96 complete 15 minute intervals.')
cOpticalPMIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalDirection"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalParamType"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalPeriod"), (0, "CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalNumber"))
if mibBuilder.loadTexts: cOpticalPMIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalEntry.setDescription('An entry in the cOpticalPMIntervalTable. It contains performance monitoring data for an optical parameter, collected over current and previous intervals. Note that the set of monitored optical parameters may vary based on interface type and direction. Examples of interfaces that can have an entry in this table include optical transceivers, optical amplifiers, and optical attenuators.')
cOpticalPMIntervalDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 1), OpticalIfDirection())
if mibBuilder.loadTexts: cOpticalPMIntervalDirection.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalDirection.setDescription('This object is an index into the cOpticalPMIntervalTable and indicates the direction monitored for the optical interface, in this entry.')
cOpticalPMIntervalParamType = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 2), OpticalParameterType())
if mibBuilder.loadTexts: cOpticalPMIntervalParamType.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalParamType.setDescription('This object is an index into the cOpticalPMIntervalTable and specifies the optical parameter that is being monitored, in this entry.')
cOpticalPMIntervalPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 3), CerentPeriod())
if mibBuilder.loadTexts: cOpticalPMIntervalPeriod.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalPeriod.setDescription('This object is an index into the cOpticalPMIntervalTable and indicates whether the optical parameter values given in this entry, are collected over a period of 15 minutes or 24 hours.')
cOpticalPMIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cOpticalPMIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalNumber.setDescription('This object is an index into the cOpticalPMIntervalTable. It is a number between 1 and 96, which identifies the interval for which the set of optical parameter values is available. The interval identified by 1 is the most recent 15 minute or 24 hour interval, and the interval identified by N is the interval immediately preceding the one identified by N-1.')
cOpticalPMIntervalMaxParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 5), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMIntervalMaxParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalMaxParam.setDescription('This object gives the maximum value measured for the optical parameter, in a particular 15 minute or 24 hour interval.')
cOpticalPMIntervalMinParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 6), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMIntervalMinParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalMinParam.setDescription('This object gives the minimum value measured for the optical parameter, in a particular 15 minute or 24 hour interval.')
cOpticalPMIntervalMeanParam = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 7), OpticalParameterValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMIntervalMeanParam.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalMeanParam.setDescription('This object gives the average value of the measured optical parameter, in a particular 15 minute or 24 hour interval.')
cOpticalPMIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 30, 2, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOpticalPMIntervalValidData.setStatus('current')
if mibBuilder.loadTexts: cOpticalPMIntervalValidData.setDescription('This variable indicates if the data for this interval is valid.')
cerentOpticalMonitorMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 20))
cerentOpticalMonitorMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 20, 1))
cerentOpticalMonitorMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3607, 5, 20, 2))
cerentOpticalMonitorMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3607, 5, 20, 1, 1)).setObjects(("CERENT-OPTICAL-MONITOR-MIB", "cerentOpticalMIBMonGroup"), ("CERENT-OPTICAL-MONITOR-MIB", "cerentOpticalMIBThresholdGroup"), ("CERENT-OPTICAL-MONITOR-MIB", "cerentOpticalMIBPMGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentOpticalMonitorMIBCompliance = cerentOpticalMonitorMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cerentOpticalMonitorMIBCompliance.setDescription('The compliance statement for network elements that monitor optical characteristics and set thresholds on the optical interfaces in a network element.')
cerentOpticalMIBMonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 20, 2, 1)).setObjects(("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParameterValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentOpticalMIBMonGroup = cerentOpticalMIBMonGroup.setStatus('current')
if mibBuilder.loadTexts: cerentOpticalMIBMonGroup.setDescription('A mandatory object that provides monitoring of optical characteristics.')
cerentOpticalMIBThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 20, 2, 2)).setObjects(("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighAlarmThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighWarning15MinThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighWarning1DayThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowAlarmThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowWarning15MinThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowWarning1DayThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentOpticalMIBThresholdGroup = cerentOpticalMIBThresholdGroup.setStatus('current')
if mibBuilder.loadTexts: cerentOpticalMIBThresholdGroup.setDescription('A collection of objects that support thresholds on optical parameters and provide status information when the thresholds are exceeded or cleared.')
cerentOpticalMIBPMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 20, 2, 3)).setObjects(("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentMaxParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentMinParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMCurrentMeanParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalMaxParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalMinParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalMeanParam"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalPMIntervalValidData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentOpticalMIBPMGroup = cerentOpticalMIBPMGroup.setStatus('current')
if mibBuilder.loadTexts: cerentOpticalMIBPMGroup.setDescription('A collection of objects that provide optical performance monitoring data for 15 minute and 24 hour intervals.')
cerentOpticalDwdmNetworkMIBThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 20, 2, 4)).setObjects(("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighAlarmThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighWarning15MinThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighWarning1DayThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowAlarmThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowWarning15MinThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowWarning1DayThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamLowDegradeThresh"), ("CERENT-OPTICAL-MONITOR-MIB", "cOpticalParamHighDegradeThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentOpticalDwdmNetworkMIBThresholdGroup = cerentOpticalDwdmNetworkMIBThresholdGroup.setStatus('current')
if mibBuilder.loadTexts: cerentOpticalDwdmNetworkMIBThresholdGroup.setDescription('A collection of objects that support thresholds on optical DWDM Network parameters and provide status information when the thresholds are exceeded or cleared.')
mibBuilder.exportSymbols("CERENT-OPTICAL-MONITOR-MIB", cerentOpticalMonitorMIBConformance=cerentOpticalMonitorMIBConformance, cOpticalPMIntervalPeriod=cOpticalPMIntervalPeriod, cOpticalPMCurrentDirection=cOpticalPMCurrentDirection, cOpticalPMCurrentPeriod=cOpticalPMCurrentPeriod, cOpticalPMIntervalDirection=cOpticalPMIntervalDirection, cOpticalPMIntervalValidData=cOpticalPMIntervalValidData, cOpticalPMCurrentParamType=cOpticalPMCurrentParamType, cOpticalMonTable=cOpticalMonTable, cerentOpticalMonGroup=cerentOpticalMonGroup, cOpticalPMIntervalMaxParam=cOpticalPMIntervalMaxParam, cOpticalParamLowAlarmThresh=cOpticalParamLowAlarmThresh, cerentOpticalDwdmNetworkMIBThresholdGroup=cerentOpticalDwdmNetworkMIBThresholdGroup, cOpticalPMIntervalMeanParam=cOpticalPMIntervalMeanParam, cerentOpticalPMGroup=cerentOpticalPMGroup, cOpticalParameterValue=cOpticalParameterValue, cOpticalPMIntervalParamType=cOpticalPMIntervalParamType, cOpticalMonParameterType=cOpticalMonParameterType, cerentOpticalMonitorMIBCompliances=cerentOpticalMonitorMIBCompliances, cerentOpticalMonitorMIBCompliance=cerentOpticalMonitorMIBCompliance, cerentOpticalMIBMonGroup=cerentOpticalMIBMonGroup, cOpticalMonDirection=cOpticalMonDirection, cOpticalParamLowWarning15MinThresh=cOpticalParamLowWarning15MinThresh, cOpticalPMCurrentMaxParam=cOpticalPMCurrentMaxParam, cOpticalParamLowWarning1DayThresh=cOpticalParamLowWarning1DayThresh, cerentOpticalMIBPMGroup=cerentOpticalMIBPMGroup, cOpticalPMCurrentMeanParam=cOpticalPMCurrentMeanParam, cOpticalParamLowDegradeThresh=cOpticalParamLowDegradeThresh, cOpticalPMCurrentTable=cOpticalPMCurrentTable, cerentOpticalMIBThresholdGroup=cerentOpticalMIBThresholdGroup, cOpticalPMCurrentEntry=cOpticalPMCurrentEntry, cOpticalPMIntervalNumber=cOpticalPMIntervalNumber, cOpticalParamHighAlarmThresh=cOpticalParamHighAlarmThresh, OpticalIfDirection=OpticalIfDirection, cerentOpticalMonitorMIBObjects=cerentOpticalMonitorMIBObjects, cOpticalPMIntervalMinParam=cOpticalPMIntervalMinParam, cOpticalParamHighDegradeThresh=cOpticalParamHighDegradeThresh, cOpticalPMIntervalTable=cOpticalPMIntervalTable, cOpticalParamHighWarning1DayThresh=cOpticalParamHighWarning1DayThresh, cerentOpticalMonitorMIB=cerentOpticalMonitorMIB, OpticalParameterType=OpticalParameterType, cOpticalParamHighWarning15MinThresh=cOpticalParamHighWarning15MinThresh, cerentOpticalMonitorMIBGroups=cerentOpticalMonitorMIBGroups, OpticalParameterValue=OpticalParameterValue, cOpticalMonEntry=cOpticalMonEntry, cOpticalPMCurrentMinParam=cOpticalPMCurrentMinParam, cOpticalPMIntervalEntry=cOpticalPMIntervalEntry, PYSNMP_MODULE_ID=cerentOpticalMonitorMIB)
