#
# PySNMP MIB module PDN-IFEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-IFEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdnIfExt, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdnIfExt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, TimeTicks, Bits, Gauge32, ModuleIdentity, MibIdentifier, NotificationType, Unsigned32, Counter32, Integer32, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "TimeTicks", "Bits", "Gauge32", "ModuleIdentity", "MibIdentifier", "NotificationType", "Unsigned32", "Counter32", "Integer32", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
pdnIfExtConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1))
pdnIfExtTestConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2))
pdnIfExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1), )
if mibBuilder.loadTexts: pdnIfExtTable.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTable.setDescription('The Paradyne IF-MIB Table Augment.')
pdnIfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1, 1), ).setIndexNames((0, "PDN-IFEXT-MIB", "pdnIfExtIndex"))
if mibBuilder.loadTexts: pdnIfExtEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtEntry.setDescription('An entry in the Paradyne If-MIB Interface Config Table.')
pdnIfExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfExtIndex.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtIndex.setDescription('The index value which uniquely identifies the interface for which this entry contains information on interface tests. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex from the Interfaces table of MIB II (RFC 1213).')
pdnIfExtInOctetRollovers = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfExtInOctetRollovers.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtInOctetRollovers.setDescription('The number of times that the associated instance of the ifInOctets object has overflowed or incremented from the value 2^^32-1 to zero.')
pdnIfExtOutOctetRollovers = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfExtOutOctetRollovers.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtOutOctetRollovers.setDescription('The number of times that the associated instance of the ifOutOctets object has overflowed or incremented from the value 2^^32-1 to zero.')
pdnIfExtTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfExtTotalUASs.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTotalUASs.setDescription('The number of Unavailable Seconds encountered by this interface.')
pdnIfExtTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2, 1), )
if mibBuilder.loadTexts: pdnIfExtTestConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTestConfigTable.setDescription('The Paradyne Interface Test Table')
pdnIfExtTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2, 1, 1), ).setIndexNames((0, "PDN-IFEXT-MIB", "pdnIfExtTestConfigIfIndex"))
if mibBuilder.loadTexts: pdnIfExtTestConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTestConfigEntry.setDescription('An entry in the Paradyne Interface Test Config Table.')
pdnIfExtTestConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfExtTestConfigIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTestConfigIfIndex.setDescription('The index value which uniquely identifies the interface for which this entry contains information on interface tests. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex from the Interfaces table of MIB II (RFC 1213).')
pdnIfExtTestConfigNearTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnIfExtTestConfigNearTimer.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTestConfigNearTimer.setDescription('This object is used to specify a near end timer primarily used as a timeout for a local loopback. The time is in seconds.')
pdnIfExtTestConfigFarTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnIfExtTestConfigFarTimer.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfExtTestConfigFarTimer.setDescription('This object is used to specify a far end timer, primarily used as a timeout from a far end initiated loopback. The time is in seconds.')
pdnIfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 2), )
if mibBuilder.loadTexts: pdnIfTable.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfTable.setDescription(' This table that contains additional interface configuration information. ')
pdnIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-IFEXT-MIB", "pdnIfAddr"))
if mibBuilder.loadTexts: pdnIfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfEntry.setDescription(' There will be one of these rows for each IP address assigned ot an interface, and one for an unnumbered interface.')
pdnIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIfAddr.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfAddr.setDescription(' The value of this object specifies an interface IP Address. The value 0.0.0.0 means that the interface is unnumbered.')
pdnIfAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnIfAddrMask.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfAddrMask.setDescription(' The value of this object specifies the subnet mask associated with the corresponding interface IP Address. The value of this object along with corresponding interface IP address, determines a subnet address for the interface.')
pdnIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 12, 1, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnIfStatus.setStatus('mandatory')
if mibBuilder.loadTexts: pdnIfStatus.setDescription(' This object is used to create a new row or delete an existing row in this table.')
mibBuilder.exportSymbols("PDN-IFEXT-MIB", pdnIfExtOutOctetRollovers=pdnIfExtOutOctetRollovers, pdnIfEntry=pdnIfEntry, pdnIfTable=pdnIfTable, pdnIfStatus=pdnIfStatus, pdnIfExtIndex=pdnIfExtIndex, pdnIfExtInOctetRollovers=pdnIfExtInOctetRollovers, pdnIfExtTestConfig=pdnIfExtTestConfig, pdnIfExtTable=pdnIfExtTable, pdnIfExtTestConfigNearTimer=pdnIfExtTestConfigNearTimer, pdnIfExtTestConfigIfIndex=pdnIfExtTestConfigIfIndex, pdnIfExtTotalUASs=pdnIfExtTotalUASs, pdnIfAddr=pdnIfAddr, pdnIfAddrMask=pdnIfAddrMask, pdnIfExtTestConfigEntry=pdnIfExtTestConfigEntry, pdnIfExtTestConfigFarTimer=pdnIfExtTestConfigFarTimer, pdnIfExtTestConfigTable=pdnIfExtTestConfigTable, pdnIfExtConfig=pdnIfExtConfig, pdnIfExtEntry=pdnIfExtEntry)
