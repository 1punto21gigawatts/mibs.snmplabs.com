#
# PySNMP MIB module MSSCOMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSSCOMMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Counter64, iso, ModuleIdentity, enterprises, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Gauge32, NotificationType, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Counter64", "iso", "ModuleIdentity", "enterprises", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Gauge32", "NotificationType", "Counter32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
nwaysMSS = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118))
mssCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1))
mssCommonHWVPD = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1))
mssHardwareVPDTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1), )
if mibBuilder.loadTexts: mssHardwareVPDTable.setStatus('mandatory')
if mibBuilder.loadTexts: mssHardwareVPDTable.setDescription("A table of the first hardware component's vpd.")
mssHardwareVPDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1, 1), ).setIndexNames((0, "MSSCOMMON-MIB", "vpdHwComponentIndex"), (0, "MSSCOMMON-MIB", "vpdIndex"))
if mibBuilder.loadTexts: mssHardwareVPDEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mssHardwareVPDEntry.setDescription('A vpd entry containing objects to describe the hardware component.')
vpdHwComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpdHwComponentIndex.setStatus('mandatory')
if mibBuilder.loadTexts: vpdHwComponentIndex.setDescription('The index of the hardware component. The hardware components are not in any type of ordering. An examples of a hardware component are the Wormwood mother board inside the standalone or the PCI adapters attached to the standalone.')
vpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpdIndex.setStatus('mandatory')
if mibBuilder.loadTexts: vpdIndex.setDescription('The index of the vdp entry for the hardware component.')
vpdKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpdKeyword.setStatus('mandatory')
if mibBuilder.loadTexts: vpdKeyword.setDescription('The keyword identifier for the vpd data. Some of the possible values are Adapter Type(keyword = AT), Description(DS), FRU number(FN), Part Number(PN), Maintenance Level(ML), Engineering Change(EC), Manufacturer(MF), Serial Number(SN), Network Address(NA), Rom Level(RM), Type and Model(TM), Feature Number(F#), Option Number(O#), Assembly Number(AN), Box Serial Number(BS), Recycle Count(RC), User Supplied Data(US), Manufacturer ID(MN), Product Specific(Zx where x equals 0,1,2,3...).')
vpdData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpdData.setStatus('mandatory')
if mibBuilder.loadTexts: vpdData.setDescription('The data field of the vpd that corresponds with the keyword.')
mibBuilder.exportSymbols("MSSCOMMON-MIB", mssCommonHWVPD=mssCommonHWVPD, nwaysMSS=nwaysMSS, mssHardwareVPDEntry=mssHardwareVPDEntry, vpdData=vpdData, vpdHwComponentIndex=vpdHwComponentIndex, mssCommon=mssCommon, vpdKeyword=vpdKeyword, vpdIndex=vpdIndex, ibm=ibm, ibmProd=ibmProd, mssHardwareVPDTable=mssHardwareVPDTable)
