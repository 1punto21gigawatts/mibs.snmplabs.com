#
# PySNMP MIB module ALCATEL-IND1-AUTO-FABRIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-AUTO-FABRIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1AutoFabric, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1AutoFabric")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, NotificationType, Integer32, Bits, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, Counter32, MibIdentifier, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "NotificationType", "Integer32", "Bits", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "Counter32", "MibIdentifier", "iso", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alcatelIND1AUTOFABRICMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1))
alcatelIND1AUTOFABRICMIB.setRevisions(('2012-11-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIB.setRevisionsDescriptions(('The AUTOFABRIC MIB defines a set of AUTOFABRIC related management objects for ports that support Autofabric feature. AUTOFABRIC as a feature provides mechanisms to automatically detect and configure LACP aggregates, SPB adjacencies and enables MVRP for automatically learning VLANs advertised by other switches This MIB comprises proprietary managed objects as well the objects required for conforming to the feature.',))
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIB.setLastUpdated('201211260000Z')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIB.setOrganization('Alcatel - Architects Of An Internet World')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIB.setContactInfo('Please consult with Customer Service to insure the most appropriate version of this document is used with the products in question: Alcatel Internetworking, Incorporated (Division 1, Formerly XYLAN Corporation) 26801 West Agoura Road Agoura Hills, CA 91301-5122 United States Of America Telephone: North America +1 800 995 2696 Latin America +1 877 919 9526 Europe +31 23 556 0100 Asia +65 394 7933 All Other +1 818 878 4507 Electronic Mail: support@ind.alcatel.com World Wide Web: http://www.ind.alcatel.com File Transfer Protocol: ftp://ftp.ind.alcatel.com/pub/products/mibs')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIB.setDescription('This module describes an authoritative enterprise-specific Simple Network Management Protocol (SNMP) Management Information Base (MIB): For the Birds Of Prey Product Line AUTOFABRIC for automatic detection and configuration of LACP, SPB and MVRP. The right to make changes in specification and other information contained in this document without prior notice is reserved. No liability shall be assumed for any incidental, indirect, special, or consequential damages whatsoever arising from or related to this document or the information contained herein. Vendors, end-users, and other interested parties are granted non-exclusive license to use this specification in connection with management of the products for which it is intended to be used. Copyright (C) 1995-2002 Alcatel Internetworking, Incorporated ALL RIGHTS RESERVED WORLDWIDE')
alcatelIND1AUTOFABRICMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1))
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBObjects.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBObjects.setDescription('Branch For AUTO-FABRIC Subsystem Managed Objects.')
alcatelIND1AUTOFABRICMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2))
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBConformance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBConformance.setDescription('Branch for AUTOFABRIC Module MIB Subsystem Conformance Information.')
alcatelIND1AUTOFABRICMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBGroups.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBGroups.setDescription('Branch for AUTOFABRIC Module MIB Subsystem Units of Conformance.')
alcatelIND1AUTOFABRICMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBCompliances.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBCompliances.setDescription('Branch for AUTOFABRIC Module MIB Subsystem Compliance Statements.')
alaAutoFabricGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalStatus.setDescription('This variable is used to enable or diable Autofabric on the switch. The value enable (1) indicates that Autofabric should be enabled on the switch. The value disable (2) is used to disable Autofabric on the switch. By default, Autofabric is enabled on the switch.')
alaAutoFabricGlobalDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("restart", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalDiscovery.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalDiscovery.setDescription('Defines the global discovery window control for Autofabric. The value restart (2) indicates that Autofabric should restart global discovery window. By default, this object contains a zero value.')
alaAutoFabricGlobalLACPProtocolStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalLACPProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalLACPProtocolStatus.setDescription('This variable is used to enable or diable AutoFabric LACP discovery. on the switch. The value enable (1) indicates that during discovery the switch will attempt to create LACP link aggregates. The value disable (2) indicates that there would be no attempt to create LACP link aggregates during the discovery phase. By default LACP is enabled on the switch')
alaAutoFabricGlobalSPBProtocolStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalSPBProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalSPBProtocolStatus.setDescription('This variable is used to enable or diable AutoFabric SPB discovery. on the switch. The value enable (1) indicates that during discovery the switch will attempt to create SPB adjacencies. The value disable (2) indicates that there would be no attempt to create SPB adjacencies during the discovery phase. By default SPB is enabled on the switch')
alaAutoFabricGlobalMVRPProtocolStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalMVRPProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalMVRPProtocolStatus.setDescription('This variable is used to enable or diable AutoFabric MVRP discovery. on the switch. The value enable (1) indicates that during discovery the switch will enable MVRP and attempt to propagate and learn VLANs. The value disable (2) indicates that MVRP would not be enabled in discovery phase. By default MVRP is enabled on the switch')
alaAutoFabricGlobalConfigSaveTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalConfigSaveTimer.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalConfigSaveTimer.setDescription('Maximum period of time after which configuration built up by AutoFabric would get written to the boot.cfg or vcboot.cfg. The range supported is 60-3600 seconds.')
alaAutoFabricGlobalConfigSaveTimerStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalConfigSaveTimerStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalConfigSaveTimerStatus.setDescription('This variable is used to enable or diable AutoFabric config save timer on the switch. The value enable (1) indicates that after the expiry of the config save timer, all AutoFabric configurations would get written to the boot.cfg ot the vcboot.cfg The value disable (2) would disable the config save timer. By default it is enabled')
alaAutoFabricGlobalDiscoveryTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricGlobalDiscoveryTimer.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricGlobalDiscoveryTimer.setDescription('This variable is used to specify auto-fabric auto discovery interval, zero disables it, configurable Value is from 1 to 3600 minutes.')
alaAutoFabricRemoveGlobalConfig = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("removeGlobalConfig", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricRemoveGlobalConfig.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricRemoveGlobalConfig.setDescription('This variable is used to remove the auto fabric global configuration when the user chooses to disable auto fabric')
alaAutoFabricPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9))
alaAutoFabricPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1), )
if mibBuilder.loadTexts: alaAutoFabricPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortConfigTable.setDescription('A table containing Autofabric port configuration information.')
alaAutoFabricPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortConfigIfIndex"))
if mibBuilder.loadTexts: alaAutoFabricPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortConfigEntry.setDescription('An AutoFabric port configuration entry.')
alaAutoFabricPortConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaAutoFabricPortConfigIfIndex.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortConfigIfIndex.setDescription('The ifindex of the port on which AutoFabric is running')
alaAutoFabricPortConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricPortConfigStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortConfigStatus.setDescription('This variable is used to enable or diable AutoFabric on the interface. The value enable (1) indicates that AutoFabric should be enabled on the interface. The value disable (2) is used to disable AutoFabric on the interface. By default, AutoFabric is enabled on the interface.')
alaAutoFabricPortLACPProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricPortLACPProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortLACPProtocolStatus.setDescription('This variable is used to enable LACP in the AutoFabric discovery on this port. The value enable (1) indicates during discovery window this port will attempt to form LACP link aggregates. The value disable (2) indicates this port will not participate in LACP discovery phase. By default it is enabled')
alaAutoFabricPortSPBProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricPortSPBProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortSPBProtocolStatus.setDescription('This variable is used to enable SPB in the AutoFabric discovery on this port. The value enable (1) indicates during discovery window this port will attempt to form SPB adjacencies. The value disable (2) indicates this port will not participate in SPB discovery phase. By default it is enabled')
alaAutoFabricPortMVRPProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAutoFabricPortMVRPProtocolStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortMVRPProtocolStatus.setDescription('This variable is used to enable MVRP in the AutoFabric discovery on this port. The value enable (1) indicates during discovery window this port will enable MVRP and attempt to learn and propagate VLANs. The value disable (2) indicates this port will not participate in MVRP discovery phase. By default it is enabled')
alaAutoFabricPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("pending", 2), ("complete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaAutoFabricPortStatus.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortStatus.setDescription('The state of the Autofabric discovery window on the port.')
alcatelIND1AUTOFABRICMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricBaseGroup"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1AUTOFABRICMIBCompliance = alcatelIND1AUTOFABRICMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1AUTOFABRICMIBCompliance.setDescription('Compliance statement for AUTOFABRIC.')
alaAutoFabricBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalDiscovery"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalLACPProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalSPBProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalMVRPProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalConfigSaveTimer"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalConfigSaveTimerStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricGlobalDiscoveryTimer"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricRemoveGlobalConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAutoFabricBaseGroup = alaAutoFabricBaseGroup.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricBaseGroup.setDescription('Collection of objects for management of AutoFabric Base Group.')
alaAutoFabricPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 75, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortConfigStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortLACPProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortSPBProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortMVRPProtocolStatus"), ("ALCATEL-IND1-AUTO-FABRIC-MIB", "alaAutoFabricPortStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAutoFabricPortConfigGroup = alaAutoFabricPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: alaAutoFabricPortConfigGroup.setDescription('Collection of objects for management of AutoFabric Port Configuration Table.')
mibBuilder.exportSymbols("ALCATEL-IND1-AUTO-FABRIC-MIB", alcatelIND1AUTOFABRICMIBCompliance=alcatelIND1AUTOFABRICMIBCompliance, alaAutoFabricPortSPBProtocolStatus=alaAutoFabricPortSPBProtocolStatus, alaAutoFabricPortStatus=alaAutoFabricPortStatus, alaAutoFabricPortConfigTable=alaAutoFabricPortConfigTable, alaAutoFabricPortConfigEntry=alaAutoFabricPortConfigEntry, alaAutoFabricGlobalConfigSaveTimerStatus=alaAutoFabricGlobalConfigSaveTimerStatus, alcatelIND1AUTOFABRICMIBGroups=alcatelIND1AUTOFABRICMIBGroups, alaAutoFabricPortConfigStatus=alaAutoFabricPortConfigStatus, alaAutoFabricBaseGroup=alaAutoFabricBaseGroup, alaAutoFabricGlobalLACPProtocolStatus=alaAutoFabricGlobalLACPProtocolStatus, PYSNMP_MODULE_ID=alcatelIND1AUTOFABRICMIB, alaAutoFabricGlobalMVRPProtocolStatus=alaAutoFabricGlobalMVRPProtocolStatus, alcatelIND1AUTOFABRICMIB=alcatelIND1AUTOFABRICMIB, alaAutoFabricGlobalStatus=alaAutoFabricGlobalStatus, alaAutoFabricGlobalDiscovery=alaAutoFabricGlobalDiscovery, alaAutoFabricPortLACPProtocolStatus=alaAutoFabricPortLACPProtocolStatus, alaAutoFabricGlobalConfigSaveTimer=alaAutoFabricGlobalConfigSaveTimer, alcatelIND1AUTOFABRICMIBCompliances=alcatelIND1AUTOFABRICMIBCompliances, alaAutoFabricRemoveGlobalConfig=alaAutoFabricRemoveGlobalConfig, alaAutoFabricPortMVRPProtocolStatus=alaAutoFabricPortMVRPProtocolStatus, alcatelIND1AUTOFABRICMIBObjects=alcatelIND1AUTOFABRICMIBObjects, alaAutoFabricPortConfig=alaAutoFabricPortConfig, alaAutoFabricGlobalSPBProtocolStatus=alaAutoFabricGlobalSPBProtocolStatus, alaAutoFabricPortConfigGroup=alaAutoFabricPortConfigGroup, alaAutoFabricPortConfigIfIndex=alaAutoFabricPortConfigIfIndex, alcatelIND1AUTOFABRICMIBConformance=alcatelIND1AUTOFABRICMIBConformance, alaAutoFabricGlobalDiscoveryTimer=alaAutoFabricGlobalDiscoveryTimer)
