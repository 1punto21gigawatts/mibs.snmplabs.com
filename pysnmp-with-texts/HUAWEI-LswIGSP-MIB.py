#
# PySNMP MIB module HUAWEI-LswIGSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-LswIGSP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:46:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
lswCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "lswCommon")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, NotificationType, Bits, Gauge32, Unsigned32, Counter32, IpAddress, ModuleIdentity, MibIdentifier, Integer32, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "NotificationType", "Bits", "Gauge32", "Unsigned32", "Counter32", "IpAddress", "ModuleIdentity", "MibIdentifier", "Integer32", "TimeTicks", "ObjectIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hwLswIgmpsnoopingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7))
hwLswIgmpsnoopingMib.setRevisions(('2001-06-29 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwLswIgmpsnoopingMib.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: hwLswIgmpsnoopingMib.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hwLswIgmpsnoopingMib.setOrganization('')
if mibBuilder.loadTexts: hwLswIgmpsnoopingMib.setContactInfo('')
if mibBuilder.loadTexts: hwLswIgmpsnoopingMib.setDescription('')
class EnabledStatus(TextualConvention, Integer32):
    description = 'A simple status value for the object.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hwLswIgmpsnoopingMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1))
hwIgmpSnoopingStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingStatus.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingStatus.setDescription('Configure to enable IGMP Snooping.')
hwIgmpSnoopingRouterPortAge = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(105)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingRouterPortAge.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingRouterPortAge.setDescription('Configure the aging time of the router port.')
hwIgmpSnoopingResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingResponseTime.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingResponseTime.setDescription('Configure the maximum query response time.')
hwIgmpSnoopingHostTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingHostTime.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingHostTime.setDescription('Configure the aging time of the multicast group port.')
hwIgmpSnoopingGroupLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 5), )
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitTable.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitTable.setDescription('The table lists the maximum group number that one interface could do IGMP Snooping.')
hwIgmpSnoopingGroupLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 5, 1), ).setIndexNames((0, "HUAWEI-LswIGSP-MIB", "hwIgmpSnoopingGroupIfIndex"))
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitEntry.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitEntry.setDescription('An entry (conceptual row) representing the maximum group number on an interface which IGMP Snooping operation is enabled.')
hwIgmpSnoopingGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIgmpSnoopingGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupIfIndex.setDescription('The ifIndex value of the port on which IGMP snooping is enabled.')
hwIgmpSnoopingGroupLimitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 5, 1, 2), Unsigned32().clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitNumber.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupLimitNumber.setDescription('The maxmum group number of IGMP Snooping on a port.')
hwIgmpSnoopingFastLeaveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 6), )
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveTable.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveTable.setDescription('The table specifies the fast leave status on those ports that do IGMP Snooping.')
hwIgmpSnoopingFastLeaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 6, 1), ).setIndexNames((0, "HUAWEI-LswIGSP-MIB", "hwIgmpSnoopingFastLeaveIfIndex"))
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveEntry.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveEntry.setDescription('An entry specifies the fast leave status on those ports that do IGMP Snooping.')
hwIgmpSnoopingFastLeaveIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveIfIndex.setDescription('The ifIndex value of the port on which IGMP snooping is enabled.')
hwIgmpSnoopingFastLeaveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 6, 1, 2), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveStatus.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingFastLeaveStatus.setDescription('The fast leave status of the port on which IGMP Snooping is enabled.')
hwIgmpSnoopingGroupPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7), )
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyTable.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyTable.setDescription('This is a table specifies the group policy parameter and Vlan ID of the IGMP Snooping port.')
hwIgmpSnoopingGroupPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7, 1), ).setIndexNames((0, "HUAWEI-LswIGSP-MIB", "hwIgmpSnoopingGroupPolicyIfIndex"), (0, "HUAWEI-LswIGSP-MIB", "hwIgmpSnoopingGroupPolicyVlanID"))
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyEntry.setDescription('An entry representing the group policy parameter and Vlan ID of a port on which IGMP Snooping operation is enabled.')
hwIgmpSnoopingGroupPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyIfIndex.setDescription('The ifIndex value of the port on which IGMP Snooping is enabled.')
hwIgmpSnoopingGroupPolicyVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyVlanID.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyVlanID.setDescription('The Vlan ID which the IGMP Snooping port is attached to.')
hwIgmpSnoopingGroupPolicyParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyParameter.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyParameter.setDescription('The ACL Number which is used as the group policy parameter of the IGMP Snooping port.')
hwIgmpSnoopingGroupPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingGroupPolicyStatus.setDescription('This object is used to create or delete a row and represent the current status of this row. Now support three state:CreateAndGo,Active,Destroy.')
hwIgmpSnoopingNonFloodingStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingNonFloodingStatus.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingNonFloodingStatus.setDescription('Configure to disable multicast flooding when no member exists in the destinated group. To use this function,IGMP snooping must be enabled.')
hwIgmpSnoopingVlanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 9), )
if mibBuilder.loadTexts: hwIgmpSnoopingVlanStatusTable.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingVlanStatusTable.setDescription('The table used to enable or disable IGMP snooping on the specified VLAN.')
hwIgmpSnoopingVlanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 9, 1), ).setIndexNames((0, "HUAWEI-LswIGSP-MIB", "hwIgmpSnoopingVlanID"))
if mibBuilder.loadTexts: hwIgmpSnoopingVlanStatusEntry.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingVlanStatusEntry.setDescription('An entry representing the IGMP snooping status on the specified VLAN.')
hwIgmpSnoopingVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwIgmpSnoopingVlanID.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingVlanID.setDescription('An index uniquely identifies on which VLAN IGMP snooping is enabled or disabled. ')
hwIgmpSnoopingVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 9, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingVlanEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingVlanEnabled.setDescription('Indicating whether IGMP snooping is enabled on this VLAN.')
hwIgmpSnoopingStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10))
hwRecvIGMPGQueryNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvIGMPGQueryNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvIGMPGQueryNum.setDescription('The statistics of IGMP general query packets received on the device.')
hwRecvIGMPSQueryNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvIGMPSQueryNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvIGMPSQueryNum.setDescription('The statistics of IGMP specific query packets received on the device.')
hwRecvIGMPV1ReportNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvIGMPV1ReportNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvIGMPV1ReportNum.setDescription('The statistics of IGMP V1 report packets received on the device.')
hwRecvIGMPV2ReportNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvIGMPV2ReportNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvIGMPV2ReportNum.setDescription('The statistics of IGMP V2 report packets received on the device.')
hwRecvIGMPLeaveNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvIGMPLeaveNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvIGMPLeaveNum.setDescription('The statistics of IGMP leave packets received on the device.')
hwRecvErrorIGMPPacketNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRecvErrorIGMPPacketNum.setStatus('current')
if mibBuilder.loadTexts: hwRecvErrorIGMPPacketNum.setDescription('The statistics of error IGMP packets received on the device.')
hwSentIGMPSQueryNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSentIGMPSQueryNum.setStatus('current')
if mibBuilder.loadTexts: hwSentIGMPSQueryNum.setDescription('The statistics of IGMP specific query packets sent from the device.')
hwIgmpSnoopingClearStats = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 7, 1, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("counting", 2))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingClearStats.setStatus('current')
if mibBuilder.loadTexts: hwIgmpSnoopingClearStats.setDescription('The configuration to clear the statistics of IGMP packets.')
mibBuilder.exportSymbols("HUAWEI-LswIGSP-MIB", hwIgmpSnoopingGroupPolicyEntry=hwIgmpSnoopingGroupPolicyEntry, hwIgmpSnoopingVlanID=hwIgmpSnoopingVlanID, hwRecvIGMPGQueryNum=hwRecvIGMPGQueryNum, hwIgmpSnoopingGroupPolicyStatus=hwIgmpSnoopingGroupPolicyStatus, hwIgmpSnoopingClearStats=hwIgmpSnoopingClearStats, hwIgmpSnoopingFastLeaveTable=hwIgmpSnoopingFastLeaveTable, hwIgmpSnoopingNonFloodingStatus=hwIgmpSnoopingNonFloodingStatus, PYSNMP_MODULE_ID=hwLswIgmpsnoopingMib, hwIgmpSnoopingGroupLimitNumber=hwIgmpSnoopingGroupLimitNumber, hwRecvIGMPV1ReportNum=hwRecvIGMPV1ReportNum, hwLswIgmpsnoopingMib=hwLswIgmpsnoopingMib, hwIgmpSnoopingGroupPolicyVlanID=hwIgmpSnoopingGroupPolicyVlanID, hwRecvIGMPLeaveNum=hwRecvIGMPLeaveNum, hwIgmpSnoopingHostTime=hwIgmpSnoopingHostTime, EnabledStatus=EnabledStatus, hwIgmpSnoopingStatsObjects=hwIgmpSnoopingStatsObjects, hwIgmpSnoopingGroupLimitTable=hwIgmpSnoopingGroupLimitTable, hwIgmpSnoopingFastLeaveIfIndex=hwIgmpSnoopingFastLeaveIfIndex, hwIgmpSnoopingGroupIfIndex=hwIgmpSnoopingGroupIfIndex, hwIgmpSnoopingGroupPolicyParameter=hwIgmpSnoopingGroupPolicyParameter, hwIgmpSnoopingGroupLimitEntry=hwIgmpSnoopingGroupLimitEntry, hwIgmpSnoopingFastLeaveEntry=hwIgmpSnoopingFastLeaveEntry, hwRecvIGMPSQueryNum=hwRecvIGMPSQueryNum, hwSentIGMPSQueryNum=hwSentIGMPSQueryNum, hwIgmpSnoopingVlanStatusEntry=hwIgmpSnoopingVlanStatusEntry, hwIgmpSnoopingRouterPortAge=hwIgmpSnoopingRouterPortAge, hwIgmpSnoopingGroupPolicyIfIndex=hwIgmpSnoopingGroupPolicyIfIndex, hwLswIgmpsnoopingMibObject=hwLswIgmpsnoopingMibObject, hwIgmpSnoopingFastLeaveStatus=hwIgmpSnoopingFastLeaveStatus, hwIgmpSnoopingGroupPolicyTable=hwIgmpSnoopingGroupPolicyTable, hwIgmpSnoopingVlanStatusTable=hwIgmpSnoopingVlanStatusTable, hwIgmpSnoopingStatus=hwIgmpSnoopingStatus, hwIgmpSnoopingVlanEnabled=hwIgmpSnoopingVlanEnabled, hwRecvErrorIGMPPacketNum=hwRecvErrorIGMPPacketNum, hwRecvIGMPV2ReportNum=hwRecvIGMPV2ReportNum, hwIgmpSnoopingResponseTime=hwIgmpSnoopingResponseTime)
