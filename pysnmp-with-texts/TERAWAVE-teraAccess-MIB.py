#
# PySNMP MIB module TERAWAVE-teraAccess-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraAccess-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, ModuleIdentity, enterprises, iso, Bits, MibIdentifier, ObjectIdentity, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "ModuleIdentity", "enterprises", "iso", "Bits", "MibIdentifier", "ObjectIdentity", "Counter64", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 24))
teraUserProfilesTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 24, 1), )
if mibBuilder.loadTexts: teraUserProfilesTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfilesTable.setDescription(' table teraUserProfilesTable')
teraUserProfileClear = MibScalar((1, 3, 6, 1, 4, 1, 4513, 24, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraUserProfileClear.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfileClear.setDescription(' Next index to the table.')
teraUserProfilesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1), ).setIndexNames((0, "TERAWAVE-teraAccess-MIB", "teraUserProfileIndex"))
if mibBuilder.loadTexts: teraUserProfilesTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfilesTableEntry.setDescription(' table entry teraUserProfilesTableEntry ')
teraUserProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraUserProfileIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfileIndex.setDescription('')
teraUserProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraUserProfileName.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfileName.setDescription('')
teraUserProfilePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraUserProfilePassword.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfilePassword.setDescription('')
teraUserProfileAccessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("admin", 1), ("oper", 2), ("test", 3), ("view", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraUserProfileAccessLevel.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfileAccessLevel.setDescription('')
teraUserProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 24, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraUserProfileStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraUserProfileStatus.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-teraAccess-MIB", teraUserProfilePassword=teraUserProfilePassword, teraUserProfileClear=teraUserProfileClear, teraUserProfilesTableEntry=teraUserProfilesTableEntry, teraUserProfileStatus=teraUserProfileStatus, teraUserProfileAccessLevel=teraUserProfileAccessLevel, terawave=terawave, teraUserProfileName=teraUserProfileName, teraUserProfileIndex=teraUserProfileIndex, teraUserProfilesTable=teraUserProfilesTable, teraAccess=teraAccess)
