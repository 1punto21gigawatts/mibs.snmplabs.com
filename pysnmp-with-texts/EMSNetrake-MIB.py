#
# PySNMP MIB module EMSNetrake-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EMSNetrake-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, TimeTicks, ModuleIdentity, NotificationType, Bits, Counter32, Unsigned32, enterprises, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "TimeTicks", "ModuleIdentity", "NotificationType", "Bits", "Counter32", "Unsigned32", "enterprises", "MibIdentifier")
DisplayString, RowStatus, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "DateAndTime")
netrake = ModuleIdentity((1, 3, 6, 1, 4, 1, 10950))
netrake.setRevisions(('2001-09-20 10:05',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netrake.setRevisionsDescriptions(('0.1',))
if mibBuilder.loadTexts: netrake.setLastUpdated('9909201005Z')
if mibBuilder.loadTexts: netrake.setOrganization('Netrake')
if mibBuilder.loadTexts: netrake.setContactInfo('Netrake Corporation')
if mibBuilder.loadTexts: netrake.setDescription('www.netrake.com')
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 10950, 1))
ems = MibIdentifier((1, 3, 6, 1, 4, 1, 10950, 1, 2))
managedDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1))
activeAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2))
managedDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1), )
if mibBuilder.loadTexts: managedDevicesTable.setStatus('current')
if mibBuilder.loadTexts: managedDevicesTable.setDescription('This table contains the list of devices being managed by this EMS')
managedDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1), ).setIndexNames((0, "EMSNetrake-MIB", "deviceName"))
if mibBuilder.loadTexts: managedDevicesEntry.setStatus('current')
if mibBuilder.loadTexts: managedDevicesEntry.setDescription('Row Description')
deviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('current')
if mibBuilder.loadTexts: deviceName.setDescription('Name assigned to the device')
deviceSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSerialNumber.setStatus('current')
if mibBuilder.loadTexts: deviceSerialNumber.setDescription('Serial number of device')
deviceModel = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceModel.setStatus('current')
if mibBuilder.loadTexts: deviceModel.setDescription('Model number of device')
deviceMgmtIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceMgmtIpAddress.setStatus('current')
if mibBuilder.loadTexts: deviceMgmtIpAddress.setDescription("Device's management IP address")
deviceAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("clear", 5), ("info", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: deviceAlarmStatus.setDescription('Overall alarm status of the device based on highest severity alarm active on the device')
deviceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceOperState.setStatus('current')
if mibBuilder.loadTexts: deviceOperState.setDescription('Operational state of the device')
deviceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceRowStatus.setStatus('current')
if mibBuilder.loadTexts: deviceRowStatus.setDescription('Column Description')
deviceDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceDisplayName.setStatus('current')
if mibBuilder.loadTexts: deviceDisplayName.setDescription('Name displayed on the EMS GUI Hierarchy')
deviceChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 10950, 1, 2, 1, 2)).setObjects(("EMSNetrake-MIB", "deviceAlarmStatus"), ("EMSNetrake-MIB", "deviceDisplayName"), ("EMSNetrake-MIB", "deviceMgmtIpAddress"), ("EMSNetrake-MIB", "deviceModel"), ("EMSNetrake-MIB", "deviceName"), ("EMSNetrake-MIB", "deviceOperState"), ("EMSNetrake-MIB", "deviceRowStatus"), ("EMSNetrake-MIB", "deviceSerialNumber"))
if mibBuilder.loadTexts: deviceChangeTrap.setStatus('current')
if mibBuilder.loadTexts: deviceChangeTrap.setDescription('This trap is sent whenever a change occurs on the device or a device is added or removed')
emsActiveAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1), )
if mibBuilder.loadTexts: emsActiveAlarmTable.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmTable.setDescription('This table contains the list of active alarms')
emsActiveAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1), ).setIndexNames((0, "EMSNetrake-MIB", "emsActiveAlarmId"), (0, "EMSNetrake-MIB", "emsActiveAlarmDeviceName"))
if mibBuilder.loadTexts: emsActiveAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmEntry.setDescription('Row Description')
emsActiveAlarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmId.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmId.setDescription('Unique identifier for instance of alarm')
emsActiveAlarmDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmDeviceName.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmDeviceName.setDescription('Name of the device that is associated with this alarm')
emsActiveAlarmDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmDateTime.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmDateTime.setDescription('Date/time that the alarm was detected')
emsActiveAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("clear", 5), ("info", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmSeverity.setDescription('Severity of the alarm')
emsActiveAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmDescription.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmDescription.setDescription('Description of alarm')
emsActiveAlarmNumOccurances = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmNumOccurances.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmNumOccurances.setDescription('Number of occurances of the alarmable condition since it became active')
emsActiveAlarmServiceAffecting = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("serviceAffecting", 1), ("notServiceAffecting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmServiceAffecting.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmServiceAffecting.setDescription('Indicates whether the alarm is service affecting')
emsActiveAlarmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 8), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmRowStatus.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmRowStatus.setDescription('Row Status of active alarm table')
emsActiveAlarmTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: emsActiveAlarmTypeID.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmTypeID.setDescription('Alarm type id - maps to documentation')
emsActiveAlarmChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 10950, 1, 2, 2, 2)).setObjects(("EMSNetrake-MIB", "emsActiveAlarmDateTime"), ("EMSNetrake-MIB", "emsActiveAlarmDescription"), ("EMSNetrake-MIB", "emsActiveAlarmDeviceName"), ("EMSNetrake-MIB", "emsActiveAlarmId"), ("EMSNetrake-MIB", "emsActiveAlarmNumOccurances"), ("EMSNetrake-MIB", "emsActiveAlarmRowStatus"), ("EMSNetrake-MIB", "emsActiveAlarmServiceAffecting"), ("EMSNetrake-MIB", "emsActiveAlarmSeverity"), ("EMSNetrake-MIB", "emsActiveAlarmTypeID"))
if mibBuilder.loadTexts: emsActiveAlarmChangeTrap.setStatus('current')
if mibBuilder.loadTexts: emsActiveAlarmChangeTrap.setDescription('This trap is sent whenever an alarm is changed, added, or deleted')
mibBuilder.exportSymbols("EMSNetrake-MIB", emsActiveAlarmNumOccurances=emsActiveAlarmNumOccurances, activeAlarm=activeAlarm, ems=ems, deviceChangeTrap=deviceChangeTrap, deviceSerialNumber=deviceSerialNumber, managedDevicesTable=managedDevicesTable, dod=dod, netrake=netrake, emsActiveAlarmServiceAffecting=emsActiveAlarmServiceAffecting, emsActiveAlarmTable=emsActiveAlarmTable, managedDevices=managedDevices, deviceRowStatus=deviceRowStatus, enterprises=enterprises, deviceOperState=deviceOperState, emsActiveAlarmDeviceName=emsActiveAlarmDeviceName, deviceName=deviceName, emsActiveAlarmDescription=emsActiveAlarmDescription, deviceAlarmStatus=deviceAlarmStatus, PYSNMP_MODULE_ID=netrake, emsActiveAlarmTypeID=emsActiveAlarmTypeID, managedDevicesEntry=managedDevicesEntry, emsActiveAlarmId=emsActiveAlarmId, org=org, private=private, emsActiveAlarmRowStatus=emsActiveAlarmRowStatus, emsActiveAlarmChangeTrap=emsActiveAlarmChangeTrap, emsActiveAlarmEntry=emsActiveAlarmEntry, deviceModel=deviceModel, emsActiveAlarmDateTime=emsActiveAlarmDateTime, emsActiveAlarmSeverity=emsActiveAlarmSeverity, products=products, deviceMgmtIpAddress=deviceMgmtIpAddress, deviceDisplayName=deviceDisplayName, internet=internet)
