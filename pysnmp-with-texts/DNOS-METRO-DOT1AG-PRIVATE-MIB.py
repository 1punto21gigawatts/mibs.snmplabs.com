#
# PySNMP MIB module DNOS-METRO-DOT1AG-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-METRO-DOT1AG-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:51:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, TimeTicks, NotificationType, ModuleIdentity, IpAddress, Counter32, Unsigned32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "TimeTicks", "NotificationType", "ModuleIdentity", "IpAddress", "Counter32", "Unsigned32", "Integer32", "Gauge32")
RowPointer, TruthValue, RowStatus, DisplayString, MacAddress, StorageType, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "TruthValue", "RowStatus", "DisplayString", "MacAddress", "StorageType", "TextualConvention")
fastPathDot1agPrivateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45))
fastPathDot1agPrivateMIB.setRevisions(('2011-01-26 00:00', '2008-05-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathDot1agPrivateMIB.setRevisionsDescriptions(('Postal address updated.', 'Initial vertion.',))
if mibBuilder.loadTexts: fastPathDot1agPrivateMIB.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathDot1agPrivateMIB.setOrganization('Dell, Inc.')
if mibBuilder.loadTexts: fastPathDot1agPrivateMIB.setContactInfo('')
if mibBuilder.loadTexts: fastPathDot1agPrivateMIB.setDescription('The Broadcom Private MIB for DNOS Dot1ag')
dot1agGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1))
dot1agMipConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2))
dot1agRMepConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3))
agentDot1agGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1, 1))
agentDot1agCfmStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agCfmStatus.setStatus('current')
if mibBuilder.loadTexts: agentDot1agCfmStatus.setDescription('Enable or Disable Global CFM Mode.')
agentDot1agCfmArchieveHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agCfmArchieveHoldTime.setStatus('current')
if mibBuilder.loadTexts: agentDot1agCfmArchieveHoldTime.setDescription('Specify Archieve Hold Time in Seconds. Time to hold the inactive Remote MEPs')
agentDot1agCfmClearRemoteMEPs = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agCfmClearRemoteMEPs.setStatus('current')
if mibBuilder.loadTexts: agentDot1agCfmClearRemoteMEPs.setDescription('Clear ALL Remote MEPs')
agentDot1agCfmClearTraceRouteCache = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agCfmClearTraceRouteCache.setStatus('current')
if mibBuilder.loadTexts: agentDot1agCfmClearTraceRouteCache.setDescription('Clear TraceRoute Cache')
agentDot1agMipConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1))
agentDot1agMipTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1, 1), )
if mibBuilder.loadTexts: agentDot1agMipTable.setStatus('current')
if mibBuilder.loadTexts: agentDot1agMipTable.setDescription('A table entries specifying the Dot1ag CFM MIP Details')
agentDot1agMipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1, 1, 1), ).setIndexNames((0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agMipMdIndex"), (0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agMipIfIndex"))
if mibBuilder.loadTexts: agentDot1agMipEntry.setStatus('current')
if mibBuilder.loadTexts: agentDot1agMipEntry.setDescription('Represents a Dot1ag MIP Table.')
agentDot1agMipMdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: agentDot1agMipMdIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agMipMdIndex.setDescription(' The index of the Maintenance Domain in the agentDot1agMipTable to which the MP is associated. ')
agentDot1agMipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: agentDot1agMipIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agMipIfIndex.setDescription('Dot1ag CFM MIP Interface Index.')
agentDot1agMipMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDot1agMipMode.setStatus('current')
if mibBuilder.loadTexts: agentDot1agMipMode.setDescription('Enable or Disable MIP CFM Mode.')
agentDot1agRMepConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1))
agentDot1agRMepTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1), )
if mibBuilder.loadTexts: agentDot1agRMepTable.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepTable.setDescription('A table to configure the Dot1ag CFM Remote MEP entries')
agentDot1agRMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1), ).setIndexNames((0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agRMepMdIndex"), (0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agRMepMaIndex"), (0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agRMepMepIdIndex"), (0, "DNOS-METRO-DOT1AG-PRIVATE-MIB", "agentDot1agRMepIdentifier"))
if mibBuilder.loadTexts: agentDot1agRMepEntry.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepEntry.setDescription('Represents a Dot1ag Remote MEP Table.')
agentDot1agRMepMdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentDot1agRMepMdIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepMdIndex.setDescription('The index of the Maintenance Domain in the agentDot1agRMepTable to which the Remote MEP is associated.')
agentDot1agRMepMaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: agentDot1agRMepMaIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepMaIndex.setDescription('The index of the Maintenance Association in the agentDot1agRMepTable to which the Remote MEP is associated.')
agentDot1agRMepMepIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), )))
if mibBuilder.loadTexts: agentDot1agRMepMepIdIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepMepIdIndex.setDescription('The index of the Maintenance End point in the agentDot1agRMepTable to which the Remote MEP is associated.')
agentDot1agRMepIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDot1agRMepIdentifier.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepIdentifier.setDescription('The index of the Remote Maintenance End point in the agentDot1agRMepTable.')
agentDot1agRMepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agRMepIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepIfIndex.setDescription('Interface Index in the agentDot1agRMepTable to which Remote MEP is associated')
agentDot1agRMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot1agRMepMacAddress.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepMacAddress.setDescription('The MAC address of the remote MEP in the agentDot1agRMepTable')
agentDot1agRMepRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 45, 3, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDot1agRMepRowStatus.setStatus('current')
if mibBuilder.loadTexts: agentDot1agRMepRowStatus.setDescription('The status of the row. The writable columns in a row can not be changed if the row is active. All columns must have a valid value before a row can be activated. ')
mibBuilder.exportSymbols("DNOS-METRO-DOT1AG-PRIVATE-MIB", agentDot1agMipEntry=agentDot1agMipEntry, agentDot1agRMepMdIndex=agentDot1agRMepMdIndex, agentDot1agMipMdIndex=agentDot1agMipMdIndex, fastPathDot1agPrivateMIB=fastPathDot1agPrivateMIB, agentDot1agRMepIfIndex=agentDot1agRMepIfIndex, agentDot1agRMepMaIndex=agentDot1agRMepMaIndex, agentDot1agMipIfIndex=agentDot1agMipIfIndex, agentDot1agMipTable=agentDot1agMipTable, agentDot1agRMepMacAddress=agentDot1agRMepMacAddress, agentDot1agRMepConfigGroup=agentDot1agRMepConfigGroup, PYSNMP_MODULE_ID=fastPathDot1agPrivateMIB, dot1agRMepConfigGroup=dot1agRMepConfigGroup, agentDot1agCfmClearTraceRouteCache=agentDot1agCfmClearTraceRouteCache, agentDot1agCfmStatus=agentDot1agCfmStatus, dot1agGlobalConfigGroup=dot1agGlobalConfigGroup, agentDot1agRMepIdentifier=agentDot1agRMepIdentifier, agentDot1agCfmClearRemoteMEPs=agentDot1agCfmClearRemoteMEPs, agentDot1agCfmArchieveHoldTime=agentDot1agCfmArchieveHoldTime, agentDot1agRMepMepIdIndex=agentDot1agRMepMepIdIndex, dot1agMipConfigGroup=dot1agMipConfigGroup, agentDot1agMipMode=agentDot1agMipMode, agentDot1agRMepEntry=agentDot1agRMepEntry, agentDot1agRMepRowStatus=agentDot1agRMepRowStatus, agentDot1agMipConfigGroup=agentDot1agMipConfigGroup, agentDot1agRMepTable=agentDot1agRMepTable, agentDot1agGlobalConfigGroup=agentDot1agGlobalConfigGroup)
