#
# PySNMP MIB module HPN-ICF-MIRRORGROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MIRRORGROUP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:40:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, MibIdentifier, Bits, ModuleIdentity, Counter64, Gauge32, Unsigned32, Integer32, Counter32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "Bits", "ModuleIdentity", "Counter64", "Gauge32", "Unsigned32", "Integer32", "Counter32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hpnicfMirrGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68))
hpnicfMirrGroup.setRevisions(('2006-01-10 19:03',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfMirrGroup.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfMirrGroup.setLastUpdated('200601131403Z')
if mibBuilder.loadTexts: hpnicfMirrGroup.setOrganization('')
if mibBuilder.loadTexts: hpnicfMirrGroup.setContactInfo('')
if mibBuilder.loadTexts: hpnicfMirrGroup.setDescription('This MIB defines objects for managing mirror group.')
hpnicfMGInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1))
hpnicfMGObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1))
hpnicfMGTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfMGTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGTable.setDescription('A list of mirror group entries.')
hpnicfMGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"))
if mibBuilder.loadTexts: hpnicfMGEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGEntry.setDescription('A list of parameters that describe a mirror group to be created.')
hpnicfMGID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfMGID.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGID.setDescription('An index that uniquely identifies an entry in the mirror group table.')
hpnicfMGType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remoteSource", 2), ("remoteDestination", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGType.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGType.setDescription('GroupType.')
hpnicfMGStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMGStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGStatus.setDescription('The status of a mirror group. A mirror group is inactive when it was created. The status of a mirror group can be changed automatically from inactive to active when appropriate conditions were met. Also, it can be changed automatically from active to inactive when these conditions disappeared. Followings are conditions for a mirror group to become active: group type conditions ============================================================================ local any source (mirroring-port, mirroring-VLAN, or mirroring-CPU), monitor-port remoteSource If one of the three conditions is satisfied, remoteSource group would be active. 1) any source (mirroring-port, mirroring-VLAN, or mirroring-CPU), remote-probe VLAN, configurable reflector-port (which is not supported on some devices) 2) any source (mirroring-port, mirroring-VLAN, or mirroring-CPU), remote-probe VLAN, egress-port (which is not supported on some devices) 3) any source (mirroring-port, mirroring-VLAN, or mirroring-CPU), remote-probe VLAN, fixed reflector-port(which is not supported on some devices) remoteDestination monitor-port, remote-probe VLAN ')
hpnicfMGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGRowStatus.setDescription('RowStatus')
hpnicfMGMirrorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2))
hpnicfMGMirrorIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfMGMirrorIfTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorIfTable.setDescription('A list of mirror group mirroring-port entries.')
hpnicfMGMirrorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMirrorIfIndex"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMirrorDirection"))
if mibBuilder.loadTexts: hpnicfMGMirrorIfEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorIfEntry.setDescription('A list of parameters that describe a mirroring-port to be added to a mirror group.')
hpnicfMGMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMGMirrorIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorIfIndex.setDescription('IfIndex of mirror group mirroring-port.')
hpnicfMGMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: hpnicfMGMirrorDirection.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorDirection.setDescription('Mirror direction of mirroring-port.')
hpnicfMGMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMirrorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorRowStatus.setDescription('RowStatus')
hpnicfMGMonitorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 3))
hpnicfMGMonitorIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfMGMonitorIfTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMonitorIfTable.setDescription('A list of mirror group monitor-port entries.')
hpnicfMGMonitorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMonitorIfIndex"))
if mibBuilder.loadTexts: hpnicfMGMonitorIfEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMonitorIfEntry.setDescription('A list of parameters that describe a monitor-port to be added to a mirror group.')
hpnicfMGMonitorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMGMonitorIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMonitorIfIndex.setDescription('IfIndex of mirror group monitor-port.')
hpnicfMGMonitorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMonitorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMonitorRowStatus.setDescription('RowStatus')
hpnicfMGReflectorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 4))
hpnicfMGReflectorIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 4, 1), )
if mibBuilder.loadTexts: hpnicfMGReflectorIfTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGReflectorIfTable.setDescription('A list of mirror group reflector-port entries.')
hpnicfMGReflectorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGReflectorIfIndex"))
if mibBuilder.loadTexts: hpnicfMGReflectorIfEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGReflectorIfEntry.setDescription('A list of parameters that describe a reflector-port to be added to a mirror group.')
hpnicfMGReflectorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMGReflectorIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGReflectorIfIndex.setDescription('IfIndex of mirror group reflector-port.')
hpnicfMGReflectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGReflectorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGReflectorRowStatus.setDescription('RowStatus')
hpnicfMGRprobeVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 5))
hpnicfMGRprobeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 5, 1), )
if mibBuilder.loadTexts: hpnicfMGRprobeVlanTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGRprobeVlanTable.setDescription('A list of mirror group remote-probe vlan entries.')
hpnicfMGRprobeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 5, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGRprobeVlanID"))
if mibBuilder.loadTexts: hpnicfMGRprobeVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGRprobeVlanEntry.setDescription('A list of parameters that describe a remote-probe vlan to be added to a mirror group. Details about remote-probe vlan please refer to mirror group manual.')
hpnicfMGRprobeVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hpnicfMGRprobeVlanID.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGRprobeVlanID.setDescription('An index that uniquely identifies an entry in the remote-probe vlan table.')
hpnicfMGRprobeVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGRprobeVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGRprobeVlanRowStatus.setDescription('RowStatus')
hpnicfMGEgressIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 6))
hpnicfMGEgressIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 6, 1), )
if mibBuilder.loadTexts: hpnicfMGEgressIfTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGEgressIfTable.setDescription('A list of mirror group egress-port entries.')
hpnicfMGEgressIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 6, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGEgressIfIndex"))
if mibBuilder.loadTexts: hpnicfMGEgressIfEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGEgressIfEntry.setDescription('A list of parameters that describe an egress-port to be added to a mirror group.')
hpnicfMGEgressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfMGEgressIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGEgressIfIndex.setDescription('IfIndex of mirror group egress-port.')
hpnicfMGEgressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGEgressRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGEgressRowStatus.setDescription('RowStatus')
hpnicfMGMirrorVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7))
hpnicfMGMirrorVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7, 1), )
if mibBuilder.loadTexts: hpnicfMGMirrorVlanTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorVlanTable.setDescription('A list of mirror group mirroring-VLAN entries.')
hpnicfMGMirrorVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMirrorVlanID"))
if mibBuilder.loadTexts: hpnicfMGMirrorVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorVlanEntry.setDescription('A list of parameters that describe a mirroring-VLAN to be added to a mirror group.')
hpnicfMGMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hpnicfMGMirrorVlanID.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorVlanID.setDescription('Mirror group mirroring-VLAN ID.')
hpnicfMGMirrorVlanDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMirrorVlanDirection.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorVlanDirection.setDescription('Mirror direction of mirroring-VLAN.')
hpnicfMGMirrorVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 7, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMirrorVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorVlanRowStatus.setDescription('RowStatus')
hpnicfMGMirrorCpuObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8))
hpnicfMGMirrorCpuTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1), )
if mibBuilder.loadTexts: hpnicfMGMirrorCpuTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuTable.setDescription('A list of mirror group mirroring-CPU entries.')
hpnicfMGMirrorCpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1, 1), ).setIndexNames((0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGID"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMirrorCpuChassis"), (0, "HPN-ICF-MIRRORGROUP-MIB", "hpnicfMGMirrorCpuSlot"))
if mibBuilder.loadTexts: hpnicfMGMirrorCpuEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuEntry.setDescription('A list of parameters that describe a mirroring-CPU to be added to a mirror group.')
hpnicfMGMirrorCpuChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfMGMirrorCpuChassis.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuChassis.setDescription('Chassis ID of mirroring-CPU. On a centralized device, centralized IRF device, or distributed device in standalone mode, the value for this node is always zero.')
hpnicfMGMirrorCpuSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hpnicfMGMirrorCpuSlot.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuSlot.setDescription('Slot ID of mirroring-CPU. On a centralized device, the value for this node is always zero.')
hpnicfMGMirrorCpuDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMirrorCpuDirection.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuDirection.setDescription('Mirror direction of mirroring-CPU.')
hpnicfMGMirrorCpuRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 68, 1, 8, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMGMirrorCpuRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfMGMirrorCpuRowStatus.setDescription('RowStatus')
mibBuilder.exportSymbols("HPN-ICF-MIRRORGROUP-MIB", hpnicfMGMirrorIfObjects=hpnicfMGMirrorIfObjects, hpnicfMGMirrorDirection=hpnicfMGMirrorDirection, hpnicfMGEgressIfEntry=hpnicfMGEgressIfEntry, hpnicfMGEgressIfIndex=hpnicfMGEgressIfIndex, hpnicfMGMirrorVlanRowStatus=hpnicfMGMirrorVlanRowStatus, hpnicfMGObjects=hpnicfMGObjects, hpnicfMGMirrorIfEntry=hpnicfMGMirrorIfEntry, hpnicfMGMirrorVlanID=hpnicfMGMirrorVlanID, hpnicfMGMirrorCpuSlot=hpnicfMGMirrorCpuSlot, hpnicfMGReflectorIfTable=hpnicfMGReflectorIfTable, PYSNMP_MODULE_ID=hpnicfMirrGroup, hpnicfMGMirrorVlanDirection=hpnicfMGMirrorVlanDirection, hpnicfMGRprobeVlanID=hpnicfMGRprobeVlanID, hpnicfMGEgressIfObjects=hpnicfMGEgressIfObjects, hpnicfMGMirrorCpuTable=hpnicfMGMirrorCpuTable, hpnicfMGRprobeVlanTable=hpnicfMGRprobeVlanTable, hpnicfMGStatus=hpnicfMGStatus, hpnicfMirrGroup=hpnicfMirrGroup, hpnicfMGRprobeVlanEntry=hpnicfMGRprobeVlanEntry, hpnicfMGMirrorIfTable=hpnicfMGMirrorIfTable, hpnicfMGMirrorCpuObjects=hpnicfMGMirrorCpuObjects, hpnicfMGInfoObjects=hpnicfMGInfoObjects, hpnicfMGEgressIfTable=hpnicfMGEgressIfTable, hpnicfMGMirrorCpuDirection=hpnicfMGMirrorCpuDirection, hpnicfMGReflectorIfEntry=hpnicfMGReflectorIfEntry, hpnicfMGMirrorIfIndex=hpnicfMGMirrorIfIndex, hpnicfMGMirrorVlanEntry=hpnicfMGMirrorVlanEntry, hpnicfMGMonitorRowStatus=hpnicfMGMonitorRowStatus, hpnicfMGReflectorRowStatus=hpnicfMGReflectorRowStatus, hpnicfMGRprobeVlanObjects=hpnicfMGRprobeVlanObjects, hpnicfMGRowStatus=hpnicfMGRowStatus, hpnicfMGMonitorIfIndex=hpnicfMGMonitorIfIndex, hpnicfMGMonitorIfTable=hpnicfMGMonitorIfTable, hpnicfMGMonitorIfObjects=hpnicfMGMonitorIfObjects, hpnicfMGMirrorVlanTable=hpnicfMGMirrorVlanTable, hpnicfMGMirrorCpuEntry=hpnicfMGMirrorCpuEntry, hpnicfMGMirrorCpuChassis=hpnicfMGMirrorCpuChassis, hpnicfMGReflectorIfObjects=hpnicfMGReflectorIfObjects, hpnicfMGEntry=hpnicfMGEntry, hpnicfMGReflectorIfIndex=hpnicfMGReflectorIfIndex, hpnicfMGTable=hpnicfMGTable, hpnicfMGID=hpnicfMGID, hpnicfMGEgressRowStatus=hpnicfMGEgressRowStatus, hpnicfMGMirrorCpuRowStatus=hpnicfMGMirrorCpuRowStatus, hpnicfMGRprobeVlanRowStatus=hpnicfMGRprobeVlanRowStatus, hpnicfMGMirrorVlanObjects=hpnicfMGMirrorVlanObjects, hpnicfMGMonitorIfEntry=hpnicfMGMonitorIfEntry, hpnicfMGType=hpnicfMGType, hpnicfMGMirrorRowStatus=hpnicfMGMirrorRowStatus)
