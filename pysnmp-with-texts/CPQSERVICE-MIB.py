#
# PySNMP MIB module CPQSERVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQSERVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:28:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
compaq, = mibBuilder.importSymbols("CPQHOST-MIB", "compaq")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
NotificationType, iso, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Counter64, Counter32, Gauge32, ObjectIdentity, Unsigned32, NotificationType, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Counter64", "Counter32", "Gauge32", "ObjectIdentity", "Unsigned32", "NotificationType", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqService = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 164))
cpqServiceMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 164, 1))
cpqServiceIncident = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 164, 2))
cpqServiceMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceMibRevMajor.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceMibRevMajor.setDescription('The Major Revision level of the MIB. A change in the major revision level represents a major change in the architecture of the MIB. A change in the major revision level may indicate a significant change in the information supported and/or the meaning of the supported information. Correct interpretation of data may require a MIB document with the same major revision level.')
cpqServiceMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceMibRevMinor.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceMibRevMinor.setDescription('The Minor Revision level of the MIB. A change in the minor revision level may represent some minor additional support, no changes to any pre-existing information has occurred.')
cpqServiceIncidentSeverity = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("important", 1), ("informational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentSeverity.setStatus('deprecated')
if mibBuilder.loadTexts: cpqServiceIncidentSeverity.setDescription('The severity of the service incident.')
cpqServiceIncidentStatus = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("intransit", 2), ("delivered", 3), ("undelivered", 4), ("assigned", 5), ("closed", 6), ("submitted-to-ISEE", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentStatus.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentStatus.setDescription('The status of the service incident.')
cpqServiceIncidentInformation = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentInformation.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentInformation.setDescription('Provides the URL to the event analysis report. ')
cpqServiceIncidentEvent = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentEvent.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentEvent.setDescription('Brief description of the event that initiated the service incident.')
cpqServiceIncidentUniqueID = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentUniqueID.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentUniqueID.setDescription('Unique Event Analysis Identifier assigned to the incident.')
cpqServiceIncidentTimeofOriginalEvent = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentTimeofOriginalEvent.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentTimeofOriginalEvent.setDescription('Time of the original event this service event relates to.')
cpqServiceIncidentSourceSystemName = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentSourceSystemName.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentSourceSystemName.setDescription('Name of the system this service event relates to.')
cpqServiceIncidentIPAddessOfSource = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentIPAddessOfSource.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentIPAddessOfSource.setDescription('IP Address of the system this service event relates to.')
cpqServiceISEEIncidentInformation = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceISEEIncidentInformation.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceISEEIncidentInformation.setDescription('This is a URL pointing to the Service Incident status in ISEE if available.')
cpqServiceIncidentIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentIdentifier.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentIdentifier.setDescription('Service Incident Identifier assigned to the incident report by the ISEE client.')
cpqServiceIncidentReceiveTrapOID = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentReceiveTrapOID.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceIncidentReceiveTrapOID.setDescription('The ID of the originally received event.')
cpqServiceIncidentFilterOID = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentFilterOID.setStatus('deprecated')
if mibBuilder.loadTexts: cpqServiceIncidentFilterOID.setDescription('The OID of the value that is used by the OSEM filter.')
cpqServiceIncidentFilterValue = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceIncidentFilterValue.setStatus('deprecated')
if mibBuilder.loadTexts: cpqServiceIncidentFilterValue.setDescription('The value contained in the Filter OID.')
cpqServiceRecommendedAction1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceRecommendedAction1.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceRecommendedAction1.setDescription('Recommended action.')
cpqServiceRecommendedAction2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceRecommendedAction2.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceRecommendedAction2.setDescription('Recommended action continued')
cpqServiceRecommendedAction3 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceRecommendedAction3.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceRecommendedAction3.setDescription('Recommended action continued')
cpqServiceCustomerSelfRepairInstructionURL = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceCustomerSelfRepairInstructionURL.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceCustomerSelfRepairInstructionURL.setDescription('A URL pointing to additional repair information')
cpqServiceEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("informational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceEventSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceEventSeverity.setDescription('The severity of the service incident.')
cpqServiceAnalyzerSystemName = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceAnalyzerSystemName.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceAnalyzerSystemName.setDescription('Name of the system this service event was analyzed on.')
cpqServiceFRUList1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceFRUList1.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceFRUList1.setDescription('Replaceable Unit information')
cpqServiceFRUList2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceFRUList2.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceFRUList2.setDescription('Replaceable Unit information continued')
cpqServiceFRUList3 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceFRUList3.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceFRUList3.setDescription('Replaceable Unit information continued')
cpqServiceFRUList4 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceFRUList4.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceFRUList4.setDescription('Replaceable Unit information continued')
cpqServiceLocation1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceLocation1.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceLocation1.setDescription('Replaceable Unit location')
cpqServiceLocation2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 164, 2, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqServiceLocation2.setStatus('mandatory')
if mibBuilder.loadTexts: cpqServiceLocation2.setDescription('Replaceable Unit location continued')
cpqServiceInformation = NotificationType((1, 3, 6, 1, 4, 1, 232, 164) + (0,164001)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQSERVICE-MIB", "cpqServiceIncidentSeverity"), ("CPQSERVICE-MIB", "cpqServiceIncidentStatus"), ("CPQSERVICE-MIB", "cpqServiceIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentEvent"), ("CPQSERVICE-MIB", "cpqServiceIncidentUniqueID"), ("CPQSERVICE-MIB", "cpqServiceIncidentTimeofOriginalEvent"), ("CPQSERVICE-MIB", "cpqServiceIncidentSourceSystemName"), ("CPQSERVICE-MIB", "cpqServiceIncidentIPAddessOfSource"), ("CPQSERVICE-MIB", "cpqServiceISEEIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentIdentifier"), ("CPQSERVICE-MIB", "cpqServiceIncidentReceiveTrapOID"), ("CPQSERVICE-MIB", "cpqServiceIncidentFilterOID"), ("CPQSERVICE-MIB", "cpqServiceIncidentFilterValue"))
if mibBuilder.loadTexts: cpqServiceInformation.setDescription('This trap will be sent any time a service incident is logged or updated. A service incident is generated when it is determined that a service event has occurred based upon an analysis of system initiated event traps or an update to a service event has occurred. User Action: None Required')
cpqService2Information = NotificationType((1, 3, 6, 1, 4, 1, 232, 164) + (0,164002)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQSERVICE-MIB", "cpqServiceIncidentStatus"), ("CPQSERVICE-MIB", "cpqServiceIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentEvent"), ("CPQSERVICE-MIB", "cpqServiceIncidentUniqueID"), ("CPQSERVICE-MIB", "cpqServiceIncidentTimeofOriginalEvent"), ("CPQSERVICE-MIB", "cpqServiceIncidentSourceSystemName"), ("CPQSERVICE-MIB", "cpqServiceIncidentIPAddessOfSource"), ("CPQSERVICE-MIB", "cpqServiceISEEIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentIdentifier"), ("CPQSERVICE-MIB", "cpqServiceIncidentReceiveTrapOID"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction1"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction2"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction3"), ("CPQSERVICE-MIB", "cpqServiceCustomerSelfRepairInstructionURL"))
if mibBuilder.loadTexts: cpqService2Information.setDescription('This event will be sent any time a service incident is reported. A service incident is generated when it is determined that a serviceable event has occurred based upon analysis of system-initiated events. User Action: Refer to the Recommended Action section under the event details section')
cpqService3Information = NotificationType((1, 3, 6, 1, 4, 1, 232, 164) + (0,164003)).setObjects(("CPQSERVICE-MIB", "cpqServiceIncidentSourceSystemName"), ("CPQSERVICE-MIB", "cpqServiceIncidentIPAddessOfSource"), ("CPQSERVICE-MIB", "cpqServiceEventSeverity"), ("CPQSERVICE-MIB", "cpqServiceIncidentStatus"), ("CPQSERVICE-MIB", "cpqServiceIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentEvent"), ("CPQSERVICE-MIB", "cpqServiceIncidentUniqueID"), ("CPQSERVICE-MIB", "cpqServiceIncidentTimeofOriginalEvent"), ("CPQSERVICE-MIB", "cpqServiceAnalyzerSystemName"), ("CPQSERVICE-MIB", "cpqServiceISEEIncidentInformation"), ("CPQSERVICE-MIB", "cpqServiceIncidentIdentifier"), ("CPQSERVICE-MIB", "cpqServiceIncidentReceiveTrapOID"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction1"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction2"), ("CPQSERVICE-MIB", "cpqServiceRecommendedAction3"), ("CPQSERVICE-MIB", "cpqServiceFRUList1"), ("CPQSERVICE-MIB", "cpqServiceFRUList2"), ("CPQSERVICE-MIB", "cpqServiceFRUList3"), ("CPQSERVICE-MIB", "cpqServiceFRUList4"), ("CPQSERVICE-MIB", "cpqServiceLocation1"), ("CPQSERVICE-MIB", "cpqServiceLocation2"), ("CPQSERVICE-MIB", "cpqServiceCustomerSelfRepairInstructionURL"))
if mibBuilder.loadTexts: cpqService3Information.setDescription('This event will be sent any time a service incident is reported. A service incident is generated when it is determined that a serviceable event has occurred based upon analysis of system-initiated events. User Action: Refer to the Recommended Action section under the event details section')
mibBuilder.exportSymbols("CPQSERVICE-MIB", cpqServiceIncidentIdentifier=cpqServiceIncidentIdentifier, cpqServiceISEEIncidentInformation=cpqServiceISEEIncidentInformation, cpqServiceFRUList4=cpqServiceFRUList4, cpqServiceFRUList1=cpqServiceFRUList1, cpqServiceIncidentIPAddessOfSource=cpqServiceIncidentIPAddessOfSource, cpqServiceRecommendedAction2=cpqServiceRecommendedAction2, cpqServiceInformation=cpqServiceInformation, cpqServiceIncident=cpqServiceIncident, cpqServiceFRUList3=cpqServiceFRUList3, cpqServiceLocation1=cpqServiceLocation1, cpqServiceAnalyzerSystemName=cpqServiceAnalyzerSystemName, cpqServiceLocation2=cpqServiceLocation2, cpqServiceIncidentFilterOID=cpqServiceIncidentFilterOID, cpqServiceRecommendedAction1=cpqServiceRecommendedAction1, cpqServiceFRUList2=cpqServiceFRUList2, cpqServiceMibRevMinor=cpqServiceMibRevMinor, cpqServiceIncidentSourceSystemName=cpqServiceIncidentSourceSystemName, cpqServiceIncidentInformation=cpqServiceIncidentInformation, cpqServiceIncidentStatus=cpqServiceIncidentStatus, cpqServiceIncidentReceiveTrapOID=cpqServiceIncidentReceiveTrapOID, cpqServiceIncidentTimeofOriginalEvent=cpqServiceIncidentTimeofOriginalEvent, cpqServiceIncidentFilterValue=cpqServiceIncidentFilterValue, cpqService2Information=cpqService2Information, cpqServiceIncidentEvent=cpqServiceIncidentEvent, cpqServiceIncidentSeverity=cpqServiceIncidentSeverity, cpqServiceMibRev=cpqServiceMibRev, cpqServiceRecommendedAction3=cpqServiceRecommendedAction3, cpqServiceIncidentUniqueID=cpqServiceIncidentUniqueID, cpqServiceEventSeverity=cpqServiceEventSeverity, cpqServiceCustomerSelfRepairInstructionURL=cpqServiceCustomerSelfRepairInstructionURL, cpqService=cpqService, cpqService3Information=cpqService3Information, cpqServiceMibRevMajor=cpqServiceMibRevMajor)
