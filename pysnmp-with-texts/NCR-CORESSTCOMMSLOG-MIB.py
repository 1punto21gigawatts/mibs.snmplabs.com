#
# PySNMP MIB module NCR-CORESSTCOMMSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NCR-CORESSTCOMMSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:17:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
TruthValue, = mibBuilder.importSymbols("RFC1253-MIB", "TruthValue")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, Unsigned32, IpAddress, Counter64, MibIdentifier, enterprises, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Integer32, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter64", "MibIdentifier", "enterprises", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ncr = MibIdentifier((1, 3, 6, 1, 4, 1, 191))
sst = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39))
sstCore = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 1))
sstProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13))
sstObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2))
sstGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 1))
sstDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 2))
sstApplic = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 3))
sstLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4))
sstCommsLogTable = MibTable((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8), )
if mibBuilder.loadTexts: sstCommsLogTable.setStatus('mandatory')
if mibBuilder.loadTexts: sstCommsLogTable.setDescription('This group defines the attributes of event entries in the SST comms log.')
sstLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1), ).setIndexNames((0, "NCR-CORESSTCOMMSLOG-MIB", "sstLogIndex"))
if mibBuilder.loadTexts: sstLogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogEntry.setDescription('This defines the contents of the table.')
sstLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogIndex.setDescription('A unique number for every entry in the comms log.')
sstLogDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogDeviceName.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogDeviceName.setDescription('The name of the device that generated the event.')
sstLogServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogServiceName.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogServiceName.setDescription('The name of the service associated with the device.')
sstLogTCode = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogTCode.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogTCode.setDescription('The transaction code reported from the device.')
sstLogSData = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogSData.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogSData.setDescription('The severity information reported from the device.')
sstLogMData = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogMData.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogMData.setDescription('The maintenance information reported from the device.')
sstLogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 191, 39, 13, 2, 4, 8, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sstLogDescription.setStatus('mandatory')
if mibBuilder.loadTexts: sstLogDescription.setDescription('Additional information about the event.')
mibBuilder.exportSymbols("NCR-CORESSTCOMMSLOG-MIB", ncr=ncr, sstGeneral=sstGeneral, sstCommsLogTable=sstCommsLogTable, sstLogTCode=sstLogTCode, sstLogSData=sstLogSData, sstProduct=sstProduct, sstApplic=sstApplic, sstObjs=sstObjs, sstCore=sstCore, sstLogIndex=sstLogIndex, sstLogDeviceName=sstLogDeviceName, sstLogMData=sstLogMData, sstLogDescription=sstLogDescription, sstDevice=sstDevice, sst=sst, sstLogs=sstLogs, sstLogServiceName=sstLogServiceName, sstLogEntry=sstLogEntry)
