#
# PySNMP MIB module TPLINK-PORTMIRROR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-PORTMIRROR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, Counter32, Gauge32, IpAddress, Unsigned32, Counter64, Bits, iso, ObjectIdentity, MibIdentifier, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter32", "Gauge32", "IpAddress", "Unsigned32", "Counter64", "Bits", "iso", "ObjectIdentity", "MibIdentifier", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkPortMirrorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 11))
tplinkPortMirrorMIB.setRevisions(('2012-12-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkPortMirrorMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkPortMirrorMIB.setLastUpdated('201212140000Z')
if mibBuilder.loadTexts: tplinkPortMirrorMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkPortMirrorMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkPortMirrorMIB.setDescription('The config of the port mirror.')
tplinkPortMirrorMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1))
tplinkPortMirrorMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 11, 2))
tpPortMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1), )
if mibBuilder.loadTexts: tpPortMirrorTable.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorTable.setDescription('')
tpPortMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1), ).setIndexNames((0, "TPLINK-PORTMIRROR-MIB", "tpPortMirrorSession"))
if mibBuilder.loadTexts: tpPortMirrorEntry.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorEntry.setDescription('')
tpPortMirrorSession = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPortMirrorSession.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorSession.setDescription('This object indicates the session number of the mirror group.')
tpPortMirrorDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPortMirrorDestination.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorDestination.setDescription(' This object indicates a destination port which monitors specified ports on the switch, should be given as 1/0/1. Note: The member of LAG cannot be assigned as a destination port.')
tpPortMirrorIngressSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPortMirrorIngressSource.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorIngressSource.setDescription(" This object indicates a list of the source ports. Any packets received from these ports will be copyed to the assigned destination port. This should be given as 1/0/1,1/0/2-12. Note: The ports in other sessions and destination port can't add to this list.")
tpPortMirrorEgressSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPortMirrorEgressSource.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorEgressSource.setDescription(" This object indicates a list of the source ports. Any packets sended out from these ports will be copyed to the assigned destination ports.This should be given as 1/0/1,1/0/2-12. Note: The ports in other sessions and destination port can't add to this list.")
tpPortMirrorBothSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPortMirrorBothSource.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorBothSource.setDescription(" This object indicates a list of the source ports. Any packets received or sended out from these ports will be copyed to the assigned destination ports.This should be given as 1/0/1,1/0/2-12. Note: The ports in other sessions and destination port can't add to this list.")
tpPortMirrorSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 11, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("negative", 1), ("active", 2), ("clear", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPortMirrorSessionState.setStatus('current')
if mibBuilder.loadTexts: tpPortMirrorSessionState.setDescription(' This object indicates the state of mirror session.If a session has been assigned both destination port and source ports, then the value of this object changes to active(2). Otherwise the value of this object is to be negative(1). When the value of this object is assigned to clear(3), then the configuration of this session will be cleared, and the state changes to negative(1). Be aware of that only clear(3) can be assigned to this object.')
mibBuilder.exportSymbols("TPLINK-PORTMIRROR-MIB", tpPortMirrorIngressSource=tpPortMirrorIngressSource, tpPortMirrorTable=tpPortMirrorTable, tpPortMirrorBothSource=tpPortMirrorBothSource, tplinkPortMirrorMIBNotifications=tplinkPortMirrorMIBNotifications, tpPortMirrorEgressSource=tpPortMirrorEgressSource, tpPortMirrorSessionState=tpPortMirrorSessionState, tplinkPortMirrorMIBObjects=tplinkPortMirrorMIBObjects, tpPortMirrorEntry=tpPortMirrorEntry, tpPortMirrorDestination=tpPortMirrorDestination, tplinkPortMirrorMIB=tplinkPortMirrorMIB, tpPortMirrorSession=tpPortMirrorSession, PYSNMP_MODULE_ID=tplinkPortMirrorMIB)
