#
# PySNMP MIB module INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:55:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Unsigned32, Counter64, MibIdentifier, iso, NotificationType, Counter32, Gauge32, Integer32, Bits, IpAddress, TimeTicks, enterprises, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Counter64", "MibIdentifier", "iso", "NotificationType", "Counter32", "Gauge32", "Integer32", "Bits", "IpAddress", "TimeTicks", "enterprises", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DmiInteger(Integer32):
    pass

class DmiDisplaystring(DisplayString):
    pass

class DmiDateX(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(28, 28)
    fixedLength = 28

class DmiComponentIndex(Integer32):
    pass

intel = MibIdentifier((1, 3, 6, 1, 4, 1, 343))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2))
server_management = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10)).setLabel("server-management")
software = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3))
lra = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1))
dmtfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1))
tComponentid = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1), )
if mibBuilder.loadTexts: tComponentid.setStatus('mandatory')
if mibBuilder.loadTexts: tComponentid.setDescription('This group defines attributes common to all components. This group is required.')
eComponentid = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eComponentid.setStatus('mandatory')
if mibBuilder.loadTexts: eComponentid.setDescription('')
a1Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Manufacturer.setStatus('mandatory')
if mibBuilder.loadTexts: a1Manufacturer.setDescription('The organization that produced this component')
a1Product = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Product.setStatus('mandatory')
if mibBuilder.loadTexts: a1Product.setDescription('The name of this component or product')
a1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Version.setStatus('mandatory')
if mibBuilder.loadTexts: a1Version.setDescription('MIF Version')
a1SerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1SerialNumber.setStatus('mandatory')
if mibBuilder.loadTexts: a1SerialNumber.setDescription('The serial number for this component')
a1Installation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 5), DmiDateX()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Installation.setStatus('mandatory')
if mibBuilder.loadTexts: a1Installation.setDescription('The time and date of the last install of the component on this system')
a1Verify = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("vAnErrorOccurredCheckStatusCode", 0), ("vThisComponentDoesNotExist", 1), ("vVerificationIsNotSupported", 2), ("vReserved", 3), ("vThisComponentExistsButTheFunctionalityI", 4), ("vThisComponentExistsButTheFunctionality1", 5), ("vThisComponentExistsAndIsNotFunctioningC", 6), ("vThisComponentExistsAndIsFunctioningCorr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Verify.setStatus('mandatory')
if mibBuilder.loadTexts: a1Verify.setDescription('The verification level for this component')
tNameTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 2), )
if mibBuilder.loadTexts: tNameTable.setStatus('mandatory')
if mibBuilder.loadTexts: tNameTable.setDescription('Maps a component Name to a MIF ID')
eNameTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 2, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a2MifId"))
if mibBuilder.loadTexts: eNameTable.setStatus('mandatory')
if mibBuilder.loadTexts: eNameTable.setDescription('')
a2MifId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vLsiScsi211", 12), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2MifId.setStatus('mandatory')
if mibBuilder.loadTexts: a2MifId.setDescription('The MIF Id that corresponds to the component Name. This is used further in Action Table')
a2ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 2, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2ComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: a2ComponentName.setDescription('The component Name that will be matched to a MIF Id')
tActionsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4), )
if mibBuilder.loadTexts: tActionsTable.setStatus('mandatory')
if mibBuilder.loadTexts: tActionsTable.setDescription('LRA Event Response Configuration')
eActionsTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4RelatedMif"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4Group"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4Instance"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4Attribute"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4Value"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a4Severity"))
if mibBuilder.loadTexts: eActionsTable.setStatus('mandatory')
if mibBuilder.loadTexts: eActionsTable.setDescription('')
a4RelatedMif = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vLsiScsi211", 12), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4RelatedMif.setStatus('mandatory')
if mibBuilder.loadTexts: a4RelatedMif.setDescription('This field identifies that the row in this group corresponds to BASEBOARD MIF or something else. This is for a future expansion.')
a4Group = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Group.setStatus('mandatory')
if mibBuilder.loadTexts: a4Group.setDescription('This is the Group ID that caused the error.')
a4Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Instance.setStatus('mandatory')
if mibBuilder.loadTexts: a4Instance.setDescription('The Row in the Group that caused the error.')
a4Attribute = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Attribute.setStatus('mandatory')
if mibBuilder.loadTexts: a4Attribute.setDescription('The Attribute ID (within the Group) that caused the error')
a4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Value.setStatus('mandatory')
if mibBuilder.loadTexts: a4Value.setDescription('The value of the attribute causing the error')
a4Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Severity.setStatus('mandatory')
if mibBuilder.loadTexts: a4Severity.setDescription('The value of the Error Status attribute from the Error Control Group')
a4BeepSpeaker = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 7), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4BeepSpeaker.setStatus('mandatory')
if mibBuilder.loadTexts: a4BeepSpeaker.setDescription('Beep the Speaker on the local Server')
a4DisplayAlertMessageOnConsole = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 8), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4DisplayAlertMessageOnConsole.setStatus('mandatory')
if mibBuilder.loadTexts: a4DisplayAlertMessageOnConsole.setDescription('Write a Text message on the local server console')
a4LogToDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 9), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4LogToDisk.setStatus('mandatory')
if mibBuilder.loadTexts: a4LogToDisk.setDescription('Log a message into standard system log')
a4WriteToLcd = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 10), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4WriteToLcd.setStatus('mandatory')
if mibBuilder.loadTexts: a4WriteToLcd.setDescription('Write a text message to LCD display on local server')
a4ShutdownTheOs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 11), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownTheOs.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownTheOs.setDescription('Shutdown the Operating System')
a4ShutdownAndPowerOffTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 12), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownAndPowerOffTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownAndPowerOffTheSystem.setDescription('Shutdown the Operating System and then Power Off the machine')
a4ShutdownAndResetTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 13), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownAndResetTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownAndResetTheSystem.setDescription('Shutdown the Operating System and then do a Hardware Reset')
a4ImmediatePowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 14), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ImmediatePowerOff.setStatus('mandatory')
if mibBuilder.loadTexts: a4ImmediatePowerOff.setDescription('Do an immediate Power Off. No attempt is made to shutdown the OS. Data may be lost')
a4ImmediateReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 15), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ImmediateReset.setStatus('mandatory')
if mibBuilder.loadTexts: a4ImmediateReset.setDescription('Do a hardware reset. No attempt is made to shutdown the OS. Data may be lost')
a4BroadcastMessageOnNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 16), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4BroadcastMessageOnNetwork.setStatus('mandatory')
if mibBuilder.loadTexts: a4BroadcastMessageOnNetwork.setDescription('Broadcast a message on Network. On NetWare, this will be to Supervisor/Admin. On Windows NT, this will be to everyone in domain. ')
a4AmsAlertName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 17), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AmsAlertName.setStatus('mandatory')
if mibBuilder.loadTexts: a4AmsAlertName.setDescription('Name of the AMS Alert that will be generated')
a4Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 4, 1, 30), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: a4Enabled.setDescription('The Flag indicating if the actions are enabled')
tActionsTableForStandardIndications = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10), )
if mibBuilder.loadTexts: tActionsTableForStandardIndications.setStatus('mandatory')
if mibBuilder.loadTexts: tActionsTableForStandardIndications.setDescription('LRA Event Response Configuration')
eActionsTableForStandardIndications = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10RelatedMif"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10EventGenerationGroup"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10EventType"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10Instance"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10Reserved"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10Severity"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10EventSystem"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "a10EventSub-system"))
if mibBuilder.loadTexts: eActionsTableForStandardIndications.setStatus('mandatory')
if mibBuilder.loadTexts: eActionsTableForStandardIndications.setDescription('')
a10RelatedMif = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vLsiScsi211", 12), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10RelatedMif.setStatus('mandatory')
if mibBuilder.loadTexts: a10RelatedMif.setDescription('This field identifies that the row in this group corresponds to BASEBOARD MIF or something else. ')
a10EventGenerationGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventGenerationGroup.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventGenerationGroup.setDescription('This is the Group ID of the Event generation Group sending the indication.')
a10EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventType.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventType.setDescription('This is the ID number for the reported event in the enumeration list of possible events.')
a10Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Instance.setStatus('mandatory')
if mibBuilder.loadTexts: a10Instance.setDescription('The Row in the Group that caused the error.')
a10Reserved = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Reserved.setStatus('mandatory')
if mibBuilder.loadTexts: a10Reserved.setDescription('This attribute is reserved for future use. ')
a10Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Severity.setStatus('mandatory')
if mibBuilder.loadTexts: a10Severity.setDescription('The severity of the Error ')
a10BeepSpeaker = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 7), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10BeepSpeaker.setStatus('mandatory')
if mibBuilder.loadTexts: a10BeepSpeaker.setDescription('Beep the Speaker on the local Server')
a10DisplayAlertMessageOnConsole = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 8), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10DisplayAlertMessageOnConsole.setStatus('mandatory')
if mibBuilder.loadTexts: a10DisplayAlertMessageOnConsole.setDescription('Write a Text message on the local server console')
a10LogToDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 9), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10LogToDisk.setStatus('mandatory')
if mibBuilder.loadTexts: a10LogToDisk.setDescription('Log a message into standard system log')
a10WriteToLcd = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 10), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10WriteToLcd.setStatus('mandatory')
if mibBuilder.loadTexts: a10WriteToLcd.setDescription('Write a text message to LCD display on local server')
a10ShutdownTheOs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 11), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownTheOs.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownTheOs.setDescription('Shutdown the Operating System')
a10ShutdownAndPowerOffTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 12), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownAndPowerOffTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownAndPowerOffTheSystem.setDescription('Shutdown the Operating System and then Power Off the machine')
a10ShutdownAndResetTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 13), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownAndResetTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownAndResetTheSystem.setDescription('Shutdown the Operating System and then do a Hardware Reset')
a10ImmediatePowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 14), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediatePowerOff.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediatePowerOff.setDescription('Do an immediate Power Off. No attempt is made to shutdown the OS. Data may be lost')
a10ImmediateReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 15), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediateReset.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediateReset.setDescription('Do a hardware reset. No attempt is made to shutdown the OS. Data may be lost')
a10BroadcastMessageOnNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 16), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10BroadcastMessageOnNetwork.setStatus('mandatory')
if mibBuilder.loadTexts: a10BroadcastMessageOnNetwork.setDescription('Broadcast a message on Network. On NetWare, this will be to Supervisor/Admin. On Windows NT, this will be to everyone in domain. ')
a10AmsAlertName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 17), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10AmsAlertName.setStatus('mandatory')
if mibBuilder.loadTexts: a10AmsAlertName.setDescription('Name of the AMS Alert that will be generated')
a10ImmediateNmi = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 18), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediateNmi.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediateNmi.setDescription('Issue a hardware NMI (Non-Maskable Interrupt) to the system.On certain Operating Systems, this will cause a system crash dump. ')
a10Page = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 19), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Page.setStatus('mandatory')
if mibBuilder.loadTexts: a10Page.setDescription('Issue a page request')
a10Email = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 20), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Email.setStatus('mandatory')
if mibBuilder.loadTexts: a10Email.setDescription('Send an e-mail Alert')
a10Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 30), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: a10Enabled.setDescription('The Flag indicating if the actions are enabled')
a10EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 31), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventSystem.setDescription('The value of Event System attribute in the indication ')
a10EventSub_system = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 10, 1, 32), DmiInteger()).setLabel("a10EventSub-system").setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventSub_system.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventSub_system.setDescription('The value of Event Sub-System attribute in the indication ')
tMiftomib = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 99), )
if mibBuilder.loadTexts: tMiftomib.setStatus('mandatory')
if mibBuilder.loadTexts: tMiftomib.setDescription('This group defines attributes required for DMI to SNMP translati n.')
eMiftomib = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 99, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eMiftomib.setStatus('mandatory')
if mibBuilder.loadTexts: eMiftomib.setDescription('')
a99MibName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 99, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a99MibName.setStatus('mandatory')
if mibBuilder.loadTexts: a99MibName.setDescription('The MIB name that defines this MIF')
a99MibOid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 99, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a99MibOid.setStatus('mandatory')
if mibBuilder.loadTexts: a99MibOid.setDescription('The MIB OID that corresponds to this MIF')
a99DisableTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 1, 1, 99, 1, 3), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a99DisableTrap.setStatus('mandatory')
if mibBuilder.loadTexts: a99DisableTrap.setDescription('This attribute can be changed to disable sending oftraps from this component')
mibBuilder.exportSymbols("INTELLANDESKSERVERMANAGER-LOCALRESPONSEA-MIB", a4AmsAlertName=a4AmsAlertName, a10ImmediatePowerOff=a10ImmediatePowerOff, a10EventType=a10EventType, DmiComponentIndex=DmiComponentIndex, a99MibName=a99MibName, a10Severity=a10Severity, software=software, tNameTable=tNameTable, a4BroadcastMessageOnNetwork=a4BroadcastMessageOnNetwork, products=products, a4ImmediatePowerOff=a4ImmediatePowerOff, a4ShutdownAndResetTheSystem=a4ShutdownAndResetTheSystem, a4DisplayAlertMessageOnConsole=a4DisplayAlertMessageOnConsole, a10Email=a10Email, DmiDateX=DmiDateX, a4RelatedMif=a4RelatedMif, eComponentid=eComponentid, a4WriteToLcd=a4WriteToLcd, server_management=server_management, a10BeepSpeaker=a10BeepSpeaker, a1Manufacturer=a1Manufacturer, a4Group=a4Group, tComponentid=tComponentid, a4Attribute=a4Attribute, a10ImmediateReset=a10ImmediateReset, a10ShutdownTheOs=a10ShutdownTheOs, a10DisplayAlertMessageOnConsole=a10DisplayAlertMessageOnConsole, a2MifId=a2MifId, a10AmsAlertName=a10AmsAlertName, a2ComponentName=a2ComponentName, a10Enabled=a10Enabled, DmiDisplaystring=DmiDisplaystring, tMiftomib=tMiftomib, a99MibOid=a99MibOid, a4Value=a4Value, a1Version=a1Version, a10Instance=a10Instance, a10WriteToLcd=a10WriteToLcd, a4ImmediateReset=a4ImmediateReset, a10ShutdownAndResetTheSystem=a10ShutdownAndResetTheSystem, a10EventSub_system=a10EventSub_system, tActionsTableForStandardIndications=tActionsTableForStandardIndications, a4LogToDisk=a4LogToDisk, dmtfGroups=dmtfGroups, a10RelatedMif=a10RelatedMif, a10ImmediateNmi=a10ImmediateNmi, a4BeepSpeaker=a4BeepSpeaker, eMiftomib=eMiftomib, a4Instance=a4Instance, DmiInteger=DmiInteger, a1Product=a1Product, a4ShutdownTheOs=a4ShutdownTheOs, a1SerialNumber=a1SerialNumber, a10Reserved=a10Reserved, a1Verify=a1Verify, eActionsTableForStandardIndications=eActionsTableForStandardIndications, lra=lra, a4Severity=a4Severity, intel=intel, tActionsTable=tActionsTable, a4Enabled=a4Enabled, a10EventGenerationGroup=a10EventGenerationGroup, a99DisableTrap=a99DisableTrap, a10Page=a10Page, a4ShutdownAndPowerOffTheSystem=a4ShutdownAndPowerOffTheSystem, a10ShutdownAndPowerOffTheSystem=a10ShutdownAndPowerOffTheSystem, a10BroadcastMessageOnNetwork=a10BroadcastMessageOnNetwork, a1Installation=a1Installation, eActionsTable=eActionsTable, a10EventSystem=a10EventSystem, eNameTable=eNameTable, a10LogToDisk=a10LogToDisk)
