#
# PySNMP MIB module TRANGO-APEX-MODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRANGO-APEX-MODEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:26:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, Integer32, iso, IpAddress, NotificationType, Unsigned32, ObjectIdentity, Bits, Counter64, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Opaque = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Integer32", "iso", "IpAddress", "NotificationType", "Unsigned32", "ObjectIdentity", "Bits", "Counter64", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Opaque")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ModuleIdentity, apex, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("TRANGO-APEX-MIB", "ModuleIdentity", "apex", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
modem = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2))
modemLoopbackMode = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("OFF", 0), ("DIGITAL", 1), ("IF", 2), ("RFGEN", 3), ("RFREFL", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemLoopbackMode.setStatus('current')
if mibBuilder.loadTexts: modemLoopbackMode.setDescription('Set/Display the Loopback Mode')
modemDataPattern = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("EXT", 0), ("INT", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemDataPattern.setStatus('current')
if mibBuilder.loadTexts: modemDataPattern.setDescription('Set/Display the current Loopback Pattern (source)')
modemBER = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemBER.setStatus('current')
if mibBuilder.loadTexts: modemBER.setDescription('Read current Bit Error Rate')
modemMSE = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemMSE.setStatus('current')
if mibBuilder.loadTexts: modemMSE.setDescription('Read current Mean Squared Error')
modemFER = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemFER.setStatus('current')
if mibBuilder.loadTexts: modemFER.setDescription('Read current Mean Squared Error')
lock = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6))
modemLockStatus = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("UNLOCKED", 0), ("LOCKED", 1), ("PROGRESS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemLockStatus.setStatus('current')
if mibBuilder.loadTexts: modemLockStatus.setDescription('Read current Internal Automatic Gain Correction')
modemTimingLock = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("NOTLOCKED", 0), ("LOCKED", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemTimingLock.setStatus('current')
if mibBuilder.loadTexts: modemTimingLock.setDescription('Indicate RX Timing Lock status')
modemPreambleLock = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("NOTLOCKED", 0), ("LOCKED", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemPreambleLock.setStatus('current')
if mibBuilder.loadTexts: modemPreambleLock.setDescription('Indicate Preamble Lock status')
modemLdpcLock = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("NOTLOCKED", 0), ("LOCKED", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemLdpcLock.setStatus('current')
if mibBuilder.loadTexts: modemLdpcLock.setDescription('Indicate LDPC Lock status')
modemReserved = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemReserved.setStatus('current')
if mibBuilder.loadTexts: modemReserved.setDescription('Reserved')
acm = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7))
modemACMEnable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMEnable.setStatus('current')
if mibBuilder.loadTexts: modemACMEnable.setDescription('Enable/Disable Adaptive Modulation feature')
acmprofile = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2))
modemACMProfileQPSKEnable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQPSKEnable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQPSKEnable.setDescription('Enable/Disable ACM QPSK profile')
modemACMProfileQAM16Enable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQAM16Enable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQAM16Enable.setDescription('Enable/Disable ACM QAM16 profile')
modemACMProfileQAM32Enable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQAM32Enable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQAM32Enable.setDescription('Enable/Disable ACM QAM32 profile')
modemACMProfileQAM64Enable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQAM64Enable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQAM64Enable.setDescription('Enable/Disable ACM QAM64 profile')
modemACMProfileQAM128Enable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQAM128Enable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQAM128Enable.setDescription('Enable/Disable ACM QAM128 profile')
modemACMProfileQAM256Enable = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("DISABLED", 0), ("ENABLED", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMProfileQAM256Enable.setStatus('current')
if mibBuilder.loadTexts: modemACMProfileQAM256Enable.setDescription('Enable/Disable ACM QAM256 profile')
acmMSEImprove = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3))
modemACMQPSKMSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 1), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQPSKMSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQPSKMSEImprove.setDescription('MSE Improve threshold for QPSK profile')
modemACMQAM16MSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 2), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM16MSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM16MSEImprove.setDescription('MSE Improve threshold for QAM16 profile')
modemACMQAM32MSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 3), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM32MSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM32MSEImprove.setDescription('MSE Improve threshold for QAM32 profile')
modemACMQAM64MSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 4), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM64MSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM64MSEImprove.setDescription('MSE Improve threshold for QAM64 profile')
modemACMQAM128MSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM128MSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM128MSEImprove.setDescription('MSE Improve threshold for QAM128 profile')
modemACMQAM256MSEImprove = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 3, 6), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM256MSEImprove.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM256MSEImprove.setDescription('MSE Improve threshold for QAM256 profile')
acmMSEDegrade = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4))
modemACMQPSKMSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 1), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQPSKMSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQPSKMSEDegrade.setDescription('MSE Degrade threshold for QPSK profile')
modemACMQAM16MSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 2), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM16MSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM16MSEDegrade.setDescription('MSE Degrade threshold for QAM16 profile')
modemACMQAM32MSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 3), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM32MSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM32MSEDegrade.setDescription('MSE Degrade threshold for QAM32 profile')
modemACMQAM64MSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 4), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM64MSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM64MSEDegrade.setDescription('MSE Degrade threshold for QAM64 profile')
modemACMQAM128MSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM128MSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM128MSEDegrade.setDescription('MSE Degrade threshold for QAM128 profile')
modemACMQAM256MSEDegrade = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 7, 4, 6), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMQAM256MSEDegrade.setStatus('current')
if mibBuilder.loadTexts: modemACMQAM256MSEDegrade.setDescription('MSE Degrade threshold for QAM256 profile')
profile = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 8))
modemACMTxProfile = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMTxProfile.setStatus('current')
if mibBuilder.loadTexts: modemACMTxProfile.setDescription('ACM Tx Profile')
modemACMRxProfile = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 60, 2, 8, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemACMRxProfile.setStatus('current')
if mibBuilder.loadTexts: modemACMRxProfile.setDescription('ACM Rx Profile')
mibBuilder.exportSymbols("TRANGO-APEX-MODEM-MIB", profile=profile, modemFER=modemFER, modemACMQPSKMSEImprove=modemACMQPSKMSEImprove, modemACMQAM32MSEDegrade=modemACMQAM32MSEDegrade, modemACMQAM256MSEImprove=modemACMQAM256MSEImprove, modemACMQAM16MSEDegrade=modemACMQAM16MSEDegrade, modemTimingLock=modemTimingLock, modemMSE=modemMSE, acm=acm, modemACMProfileQPSKEnable=modemACMProfileQPSKEnable, modemReserved=modemReserved, modemDataPattern=modemDataPattern, modemACMEnable=modemACMEnable, modemACMRxProfile=modemACMRxProfile, lock=lock, modemACMQAM64MSEImprove=modemACMQAM64MSEImprove, modemACMProfileQAM16Enable=modemACMProfileQAM16Enable, modem=modem, modemBER=modemBER, modemACMProfileQAM256Enable=modemACMProfileQAM256Enable, acmprofile=acmprofile, modemACMQAM16MSEImprove=modemACMQAM16MSEImprove, modemACMQAM256MSEDegrade=modemACMQAM256MSEDegrade, acmMSEImprove=acmMSEImprove, modemACMTxProfile=modemACMTxProfile, modemACMQAM128MSEImprove=modemACMQAM128MSEImprove, modemACMQAM128MSEDegrade=modemACMQAM128MSEDegrade, modemACMProfileQAM128Enable=modemACMProfileQAM128Enable, modemACMQPSKMSEDegrade=modemACMQPSKMSEDegrade, modemLdpcLock=modemLdpcLock, modemLockStatus=modemLockStatus, modemACMQAM64MSEDegrade=modemACMQAM64MSEDegrade, modemACMQAM32MSEImprove=modemACMQAM32MSEImprove, modemACMProfileQAM32Enable=modemACMProfileQAM32Enable, modemACMProfileQAM64Enable=modemACMProfileQAM64Enable, acmMSEDegrade=acmMSEDegrade, modemLoopbackMode=modemLoopbackMode, modemPreambleLock=modemPreambleLock)
