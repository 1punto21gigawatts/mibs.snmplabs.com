#
# PySNMP MIB module HPN-ICF-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, Unsigned32, IpAddress, Integer32, ObjectIdentity, ModuleIdentity, iso, Bits, MibIdentifier, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Unsigned32", "IpAddress", "Integer32", "ObjectIdentity", "ModuleIdentity", "iso", "Bits", "MibIdentifier", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TextualConvention, TruthValue, TAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "TAddress", "RowStatus")
hpnicfSyslog = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63))
hpnicfSyslog.setRevisions(('2010-06-09 10:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfSyslog.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfSyslog.setLastUpdated('201006091050Z')
if mibBuilder.loadTexts: hpnicfSyslog.setOrganization('')
if mibBuilder.loadTexts: hpnicfSyslog.setContactInfo('')
if mibBuilder.loadTexts: hpnicfSyslog.setDescription('All the configuration of the syslog can be managed by syslog Mib.')
class MessageLevelType(TextualConvention, Integer32):
    description = 'Specify severity level of message.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("informational", 7), ("debug", 8), ("invalid", 9))

class TimeStampType(TextualConvention, Integer32):
    description = 'Specify operation types on time stamp of message. none: no time stamp information in message. date: the time stamp type of message is date. boot: the time stamp type of message is the time from uptime of system. dateWithoutYear: the time stamp type of message is date without year information.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("date", 2), ("boot", 3), ("dateWithoutYear", 4))

class FacilityType(TextualConvention, Integer32):
    description = 'Specify loghost facility which generates messages.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("kernel", 0), ("userLevel", 1), ("mailSystem", 2), ("systemDaemons", 3), ("securityAuthorization", 4), ("internallyMessages", 5), ("linePrinter", 6), ("networkNews", 7), ("uucp", 8), ("clockDaemon", 9), ("securityAuthorization2", 10), ("ftpDaemon", 11), ("ntp", 12), ("logAudit", 13), ("logAlert", 14), ("clockDaemon2", 15), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23))

hpnicfSyslogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1))
hpnicfSyslogObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1))
hpnicfSyslogState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogState.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogState.setDescription('The state of syslog: true(1):enable. false(2):disable.')
hpnicfSyslogMaxLoghost = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSyslogMaxLoghost.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogMaxLoghost.setDescription('The object shows the maximum number of rows in hpnicfLoghostTable.')
hpnicfSyslogMaxChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSyslogMaxChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogMaxChannel.setDescription('The object shows the maximum number of channels in hpnicfSyslogChannelTable.')
hpnicfSyslogMaxLogbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSyslogMaxLogbufferSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogMaxLogbufferSize.setDescription('The maximum number of messages that can be stored in logbuffer.')
hpnicfSyslogMaxTrapbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSyslogMaxTrapbufferSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogMaxTrapbufferSize.setDescription('The maximum number of messages that can be stored in trapbuffer.')
hpnicfSyslogState2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogState2.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogState2.setDescription('Status of syslog, on for enabled or off for disabled. This node differs from hpnicfSyslogState in value.')
hpnicfSyslogConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 2))
hpnicfSyslogConsoleChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogConsoleChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogConsoleChannel.setDescription('The channel number of console.')
hpnicfSyslogMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 3))
hpnicfSyslogMonitorChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 3, 1), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogMonitorChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogMonitorChannel.setDescription('The channel number of monitor.')
hpnicfSyslogSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 4))
hpnicfSyslogSnmpChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 4, 1), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogSnmpChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogSnmpChannel.setDescription('The channel number of snmp.')
hpnicfSyslogLogbuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5))
hpnicfSyslogLogbufferChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 1), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLogbufferChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufferChannel.setDescription('The channel number of logbuffer.')
hpnicfSyslogLogbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 2), Integer32().clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLogbufferSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufferSize.setDescription('The capacity of logbuffer which can be customized by users. The valid range is from 0 to hpnicfSyslogMaxLogbufferSize.')
hpnicfSyslogLogbufferTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3), )
if mibBuilder.loadTexts: hpnicfSyslogLogbufferTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufferTable.setDescription('The table of logbuffer.')
hpnicfSyslogLogbufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfLogbufferIndex"))
if mibBuilder.loadTexts: hpnicfSyslogLogbufferEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufferEntry.setDescription('The logbuffer entry of syslog.')
hpnicfLogbufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfLogbufferIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufferIndex.setDescription('The index of this table.')
hpnicfLogbufferCurrentMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLogbufferCurrentMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufferCurrentMessages.setDescription('The number of log messages stored in logbuffer.')
hpnicfLogbufferOverwrittenMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLogbufferOverwrittenMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufferOverwrittenMessages.setDescription('The number of log messages overwritten in logbuffer.')
hpnicfLogbufferDroppedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLogbufferDroppedMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufferDroppedMessages.setDescription('The number of log messages dropped in logbuffer.')
hpnicfSyslogLogbufContTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 4), )
if mibBuilder.loadTexts: hpnicfSyslogLogbufContTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufContTable.setDescription('The table of logbuffer contents.')
hpnicfSyslogLogbufContEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 4, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfLogbufContIndex"))
if mibBuilder.loadTexts: hpnicfSyslogLogbufContEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogbufContEntry.setDescription('The contens entry of logbuffer.')
hpnicfLogbufContIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfLogbufContIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufContIndex.setDescription('The index of this table.')
hpnicfLogbufContDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 5, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLogbufContDescription.setStatus('current')
if mibBuilder.loadTexts: hpnicfLogbufContDescription.setDescription('The contents of logbuffer.')
hpnicfSyslogTrapbuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6))
hpnicfSyslogTrapbufferChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 1), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferChannel.setDescription('The channel number of trapbuffer.')
hpnicfSyslogTrapbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 2), Integer32().clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferSize.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferSize.setDescription('The capacity of the trapbuffer which can be customized by users. The valid range is from 0 to hpnicfSyslogMaxTrapbufferSize.')
hpnicfSyslogTrapbufferTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3), )
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferTable.setDescription('The table of trapbuffer.')
hpnicfSyslogTrapbufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfTrapbufferIndex"))
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapbufferEntry.setDescription('The trapbuffer entry of syslog.')
hpnicfTrapbufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfTrapbufferIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrapbufferIndex.setDescription('The index of this table.')
hpnicfTrapbufferCurrentMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrapbufferCurrentMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrapbufferCurrentMessages.setDescription('The number of trap messages stored in trapbuffer.')
hpnicfTrapbufferOverwrittenMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrapbufferOverwrittenMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrapbufferOverwrittenMessages.setDescription('The number of trap messages overwritten in trapbuffer.')
hpnicfTrapbufferDroppedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 6, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrapbufferDroppedMessages.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrapbufferDroppedMessages.setDescription('The number of trap messages dropped in trapbuffer.')
hpnicfSyslogLoghost = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7))
hpnicfSyslogLoghostSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLoghostSourceInterface.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostSourceInterface.setDescription('The source interface which sends message to loghost. All loghosts use the same source interface.')
hpnicfSyslogLoghostTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 2), TimeStampType().clone('date')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLoghostTimestampType.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostTimestampType.setDescription('Time stamp type of message sent to loghost.')
hpnicfSyslogLoghostTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3), )
if mibBuilder.loadTexts: hpnicfSyslogLoghostTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostTable.setDescription('The table of loghost.')
hpnicfSyslogLoghostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogLoghostIndex"))
if mibBuilder.loadTexts: hpnicfSyslogLoghostEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostEntry.setDescription('The loghost entry of syslog.')
hpnicfSyslogLoghostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfSyslogLoghostIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostIndex.setDescription('The index of this table.')
hpnicfSyslogLoghostChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 2), Integer32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostChannel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostChannel.setDescription('The channel number of loghost.')
hpnicfSyslogLoghostIpaddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddressType.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddressType.setDescription('The ip address type of loghost.')
hpnicfSyslogLoghostIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddress.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddress.setDescription('The ip address of loghost.')
hpnicfSyslogLoghostFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 5), FacilityType().clone('local7')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostFacility.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostFacility.setDescription('The operations staff can selectively filter the messages with priority which consists of facility that generates the message and severity of the message. ')
hpnicfSyslogLoghostLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chinese", 1), ("english", 2))).clone('english')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostLanguage.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostLanguage.setDescription('The language of the message sent to the loghost.')
hpnicfSyslogLoghostOperateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostOperateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostOperateRowStatus.setDescription('The status of this table entry.')
hpnicfSyslogLoghostIpaddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddressPort.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostIpaddressPort.setDescription('The loghost server port.')
hpnicfSyslogLoghostTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 7, 3, 1, 9), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLoghostTAddress.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLoghostTAddress.setDescription('The loghost server transport address.')
hpnicfSyslogChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 8))
hpnicfSyslogChannelTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 8, 1), )
if mibBuilder.loadTexts: hpnicfSyslogChannelTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogChannelTable.setDescription('A table of syslog channel.')
hpnicfSyslogChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 8, 1, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogChannelIndex"))
if mibBuilder.loadTexts: hpnicfSyslogChannelEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogChannelEntry.setDescription('The channel entry of syslog.')
hpnicfSyslogChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 8, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfSyslogChannelIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogChannelIndex.setDescription('The index of this table.')
hpnicfSyslogChannelName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogChannelName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogChannelName.setDescription('The name of channel. The channel name must be different from each other.')
hpnicfSyslogModule = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 9))
hpnicfSyslogModuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 9, 1), )
if mibBuilder.loadTexts: hpnicfSyslogModuleTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogModuleTable.setDescription('A table of syslog module.')
hpnicfSyslogModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 9, 1, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogModuleIndex"))
if mibBuilder.loadTexts: hpnicfSyslogModuleEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogModuleEntry.setDescription('The module entry of syslog.')
hpnicfSyslogModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 9, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfSyslogModuleIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogModuleIndex.setDescription('The index of this table.')
hpnicfSyslogModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSyslogModuleName.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogModuleName.setDescription('The name of module.')
hpnicfSyslogLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10))
hpnicfSyslogLogTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 1), TimeStampType().clone('date')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLogTimestampType.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogTimestampType.setDescription('Time stamp type of log message.')
hpnicfSyslogLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 2), )
if mibBuilder.loadTexts: hpnicfSyslogLogTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogTable.setDescription('A table of syslog module.')
hpnicfSyslogLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 2, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogChannelIndex"), (0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogModuleIndex"))
if mibBuilder.loadTexts: hpnicfSyslogLogEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogEntry.setDescription('The log entry of syslog.')
hpnicfSyslogLogState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 2, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLogState.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogState.setDescription('The switch state of log.')
hpnicfSyslogLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 2, 1, 2), MessageLevelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLogLevel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogLevel.setDescription('The level of log message.')
hpnicfSyslogLogRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogLogRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogRowStatus.setDescription('The status of this table entry.')
hpnicfSyslogLogGlobalLevel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 3), MessageLevelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLogGlobalLevel.setStatus('obsolete')
if mibBuilder.loadTexts: hpnicfSyslogLogGlobalLevel.setDescription('The global level of log message. This object is replaced by hpnicfSyslogLogGlobalLevelRfc because its value does not accord with RFC5424.')
hpnicfSyslogLogGlobalLevelRfc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("informational", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogLogGlobalLevelRfc.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogLogGlobalLevelRfc.setDescription('The global level of log message. This object replaces hpnicfSyslogLogGlobalLevel because it observes the terms of RFC5424.')
hpnicfSyslogTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11))
hpnicfSyslogTrapTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 1), TimeStampType().clone('date')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogTrapTimestampType.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapTimestampType.setDescription('Time stamp type of trap message.')
hpnicfSyslogTrapTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 2), )
if mibBuilder.loadTexts: hpnicfSyslogTrapTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapTable.setDescription('A table of syslog module.')
hpnicfSyslogTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 2, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogChannelIndex"), (0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogModuleIndex"))
if mibBuilder.loadTexts: hpnicfSyslogTrapEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapEntry.setDescription('The trap entry of syslog.')
hpnicfSyslogTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 2, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogTrapState.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapState.setDescription('The switch state of trap.')
hpnicfSyslogTrapLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 2, 1, 2), MessageLevelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogTrapLevel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapLevel.setDescription('The level of trap message.')
hpnicfSyslogTrapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 11, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogTrapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogTrapRowStatus.setDescription('The status of this table entry.')
hpnicfSyslogDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12))
hpnicfSyslogDebugTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 1), TimeStampType().clone('boot')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSyslogDebugTimestampType.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugTimestampType.setDescription('Time stamp type of debug message.')
hpnicfSyslogDebugTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 2), )
if mibBuilder.loadTexts: hpnicfSyslogDebugTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugTable.setDescription('A table of syslog module.')
hpnicfSyslogDebugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 2, 1), ).setIndexNames((0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogChannelIndex"), (0, "HPN-ICF-SYSLOG-MIB", "hpnicfSyslogModuleIndex"))
if mibBuilder.loadTexts: hpnicfSyslogDebugEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugEntry.setDescription('The debug entry of syslog.')
hpnicfSyslogDebugState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 2, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogDebugState.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugState.setDescription('The switch state of debug.')
hpnicfSyslogDebugLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 2, 1, 2), MessageLevelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogDebugLevel.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugLevel.setDescription('The level of debug message.')
hpnicfSyslogDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 63, 1, 12, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSyslogDebugRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfSyslogDebugRowStatus.setDescription('The status of this table entry.')
mibBuilder.exportSymbols("HPN-ICF-SYSLOG-MIB", hpnicfSyslogLoghost=hpnicfSyslogLoghost, hpnicfSyslogLogbufferChannel=hpnicfSyslogLogbufferChannel, hpnicfSyslogTrapState=hpnicfSyslogTrapState, hpnicfSyslogLoghostLanguage=hpnicfSyslogLoghostLanguage, hpnicfSyslogLog=hpnicfSyslogLog, hpnicfSyslogLogbuffer=hpnicfSyslogLogbuffer, hpnicfSyslogTrapbufferTable=hpnicfSyslogTrapbufferTable, hpnicfSyslogDebug=hpnicfSyslogDebug, hpnicfSyslogTrapbufferChannel=hpnicfSyslogTrapbufferChannel, hpnicfTrapbufferCurrentMessages=hpnicfTrapbufferCurrentMessages, hpnicfLogbufContIndex=hpnicfLogbufContIndex, hpnicfSyslogLoghostSourceInterface=hpnicfSyslogLoghostSourceInterface, hpnicfSyslogMaxLogbufferSize=hpnicfSyslogMaxLogbufferSize, hpnicfSyslogLogGlobalLevel=hpnicfSyslogLogGlobalLevel, hpnicfSyslogConsoleChannel=hpnicfSyslogConsoleChannel, hpnicfSyslogLoghostChannel=hpnicfSyslogLoghostChannel, hpnicfSyslogDebugTimestampType=hpnicfSyslogDebugTimestampType, hpnicfSyslogModuleTable=hpnicfSyslogModuleTable, hpnicfTrapbufferDroppedMessages=hpnicfTrapbufferDroppedMessages, hpnicfSyslogState2=hpnicfSyslogState2, hpnicfSyslogLogLevel=hpnicfSyslogLogLevel, hpnicfSyslogTrapbufferEntry=hpnicfSyslogTrapbufferEntry, hpnicfSyslogLoghostIpaddressPort=hpnicfSyslogLoghostIpaddressPort, hpnicfSyslogConsole=hpnicfSyslogConsole, FacilityType=FacilityType, hpnicfSyslogLogTimestampType=hpnicfSyslogLogTimestampType, hpnicfSyslogTrapLevel=hpnicfSyslogTrapLevel, hpnicfSyslogMonitorChannel=hpnicfSyslogMonitorChannel, hpnicfSyslogLoghostTimestampType=hpnicfSyslogLoghostTimestampType, hpnicfSyslogTrapbuffer=hpnicfSyslogTrapbuffer, hpnicfSyslogChannelEntry=hpnicfSyslogChannelEntry, TimeStampType=TimeStampType, hpnicfSyslogTrap=hpnicfSyslogTrap, hpnicfSyslogModuleEntry=hpnicfSyslogModuleEntry, hpnicfLogbufContDescription=hpnicfLogbufContDescription, hpnicfSyslogMonitor=hpnicfSyslogMonitor, hpnicfSyslogModuleIndex=hpnicfSyslogModuleIndex, hpnicfSyslogDebugState=hpnicfSyslogDebugState, hpnicfSyslogDebugRowStatus=hpnicfSyslogDebugRowStatus, hpnicfSyslogTrapTable=hpnicfSyslogTrapTable, hpnicfTrapbufferIndex=hpnicfTrapbufferIndex, hpnicfSyslogTrapRowStatus=hpnicfSyslogTrapRowStatus, hpnicfSyslogLogbufferEntry=hpnicfSyslogLogbufferEntry, hpnicfSyslogModule=hpnicfSyslogModule, hpnicfSyslogLogbufferTable=hpnicfSyslogLogbufferTable, hpnicfSyslogLogEntry=hpnicfSyslogLogEntry, hpnicfSyslogDebugEntry=hpnicfSyslogDebugEntry, hpnicfSyslogTrapEntry=hpnicfSyslogTrapEntry, hpnicfSyslogLogState=hpnicfSyslogLogState, hpnicfSyslogMaxTrapbufferSize=hpnicfSyslogMaxTrapbufferSize, hpnicfTrapbufferOverwrittenMessages=hpnicfTrapbufferOverwrittenMessages, hpnicfSyslogChannelTable=hpnicfSyslogChannelTable, hpnicfSyslogState=hpnicfSyslogState, hpnicfSyslogModuleName=hpnicfSyslogModuleName, hpnicfSyslogLoghostOperateRowStatus=hpnicfSyslogLoghostOperateRowStatus, hpnicfSyslogLoghostFacility=hpnicfSyslogLoghostFacility, hpnicfSyslogLoghostTAddress=hpnicfSyslogLoghostTAddress, hpnicfSyslogDebugTable=hpnicfSyslogDebugTable, hpnicfLogbufferDroppedMessages=hpnicfLogbufferDroppedMessages, hpnicfSyslogChannelName=hpnicfSyslogChannelName, hpnicfSyslogSnmp=hpnicfSyslogSnmp, hpnicfSyslogObjects=hpnicfSyslogObjects, hpnicfLogbufferIndex=hpnicfLogbufferIndex, hpnicfLogbufferCurrentMessages=hpnicfLogbufferCurrentMessages, hpnicfLogbufferOverwrittenMessages=hpnicfLogbufferOverwrittenMessages, hpnicfSyslogLogbufContTable=hpnicfSyslogLogbufContTable, hpnicfSyslogLogbufferSize=hpnicfSyslogLogbufferSize, hpnicfSyslog=hpnicfSyslog, hpnicfSyslogLoghostIndex=hpnicfSyslogLoghostIndex, hpnicfSyslogLoghostTable=hpnicfSyslogLoghostTable, hpnicfSyslogLoghostEntry=hpnicfSyslogLoghostEntry, hpnicfSyslogTrapTimestampType=hpnicfSyslogTrapTimestampType, hpnicfSyslogChannelIndex=hpnicfSyslogChannelIndex, hpnicfSyslogTrapbufferSize=hpnicfSyslogTrapbufferSize, hpnicfSyslogObject=hpnicfSyslogObject, hpnicfSyslogLogGlobalLevelRfc=hpnicfSyslogLogGlobalLevelRfc, hpnicfSyslogLogRowStatus=hpnicfSyslogLogRowStatus, MessageLevelType=MessageLevelType, hpnicfSyslogLogTable=hpnicfSyslogLogTable, hpnicfSyslogMaxLoghost=hpnicfSyslogMaxLoghost, hpnicfSyslogMaxChannel=hpnicfSyslogMaxChannel, hpnicfSyslogDebugLevel=hpnicfSyslogDebugLevel, hpnicfSyslogLogbufContEntry=hpnicfSyslogLogbufContEntry, PYSNMP_MODULE_ID=hpnicfSyslog, hpnicfSyslogLoghostIpaddress=hpnicfSyslogLoghostIpaddress, hpnicfSyslogLoghostIpaddressType=hpnicfSyslogLoghostIpaddressType, hpnicfSyslogSnmpChannel=hpnicfSyslogSnmpChannel, hpnicfSyslogChannel=hpnicfSyslogChannel)
