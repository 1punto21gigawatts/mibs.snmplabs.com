#
# PySNMP MIB module CISCO-MGC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MGC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:52:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
cmgwSignalProtocolIndex, cmgwIndex = mibBuilder.importSymbols("CISCO-MEDIA-GATEWAY-MIB", "cmgwSignalProtocolIndex", "cmgwIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, TimeTicks, Integer32, ModuleIdentity, NotificationType, ObjectIdentity, Bits, Counter32, Unsigned32, iso, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Bits", "Counter32", "Unsigned32", "iso", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
ciscoMgcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 321))
ciscoMgcMIB.setRevisions(('2003-04-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMgcMIB.setRevisionsDescriptions(('Initial version of the MIB',))
if mibBuilder.loadTexts: ciscoMgcMIB.setLastUpdated('200304180000Z')
if mibBuilder.loadTexts: ciscoMgcMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMgcMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-voice-gateway@cisco.com')
if mibBuilder.loadTexts: ciscoMgcMIB.setDescription('This MIB is used to support MGC(call agent) and MGC Group configuration. The MGC or MGC group configuration is performed under a specific gateway(cmgwIndex). The call agent is an external element (outside of gateway) with call control intelligence to control call connection in gateway. The protocols used for communication between voice gateway and call agent included SGCP, MGCP, ... Multiple IP addresses can be associated with one call agent. An MGC group is a logical grouping of several MGCs into one group. MGC redundancy is used to support multi call agent for one gateway. With MGC redundancy, a voice gateway can send gateway-initiated-commands to the next MGC in the MGC group if it fails to receive response from any IP address(es) associated to the current MGC. To use MGC redundancy in gateway: Step 1: add individual entry (in any order) for profile MGC Step 2: make association between the entries 1 IP with MGC 2 MGC with MGC group 1/2 protocol with MGC group 3 MGC group with profile or MGC group with gateway Only if a MGC group at least is associated with one profile or gateway, then the MGC group can be used, otherwise the MGC group is useless. To delete the following entries, it is needed to do de-association first: profile MGC When do de-association, the order is opposite to that of association. ')
cMgcMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 0))
cMgcMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 1))
cMgcConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1))
cMgcGroupConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2))
class CMgcGroupIndex(TextualConvention, Integer32):
    description = 'A unique value, greater than zero which is used to identify index of MGC group.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 12)

class CMgcGroupIndexOrZero(TextualConvention, Integer32):
    description = 'This textual convention is used to indicate association between profile or gateway and MGC group. The value, greater than zero which is used to identify index of MGC group (same as CMgcGroupIndex) which is associated with profile or gateway. The mapping between MGC group and profile or gateway is 1 to N. The value, equal to zero which means there is no association between profile or gateway and MGC group.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 12)

cMgcConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1), )
if mibBuilder.loadTexts: cMgcConfigTable.setStatus('current')
if mibBuilder.loadTexts: cMgcConfigTable.setDescription('This table is used for configuring MGC related parameters.')
cMgcConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-MGC-MIB", "cMgcIndex"))
if mibBuilder.loadTexts: cMgcConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cMgcConfigEntry.setDescription("Each entry represents a call agent(MGC). Each entry in this table should have a unique domain name representing a call agent. Adding/deleting entry in this table is controlled by 'cMediaGwDomainNameConfigTable' of CISCO-MEDIA-GATEWAY-MIB: 1. Entry creation An entry in this table is created when its associated entry in the 'cMediaGwDomainNameConfigTable' is created with the value of 'mgc(3)' in the cmgwConfigDomainNameEntity object. The 'cmgwConfigDomainName' of the associated entry in the 'cMediaGwDomainNameConfigTable' will be taken as 'cMgcDomainName' of the new entry. 2. Entry deletion An entry of this table is deleted when its associated entry in 'cMediaGwDomainNameConfigTable' is deleted. ")
cMgcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: cMgcIndex.setStatus('current')
if mibBuilder.loadTexts: cMgcIndex.setDescription('A unique index to identify each MGC which will communicate with this media gateway. ')
cMgcDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcDomainName.setStatus('current')
if mibBuilder.loadTexts: cMgcDomainName.setDescription("This object contains the same name as the one in the 'cMgcDomainName object' of the associated entry in 'cMediaGwDomainNameConfigTable'. ")
cMgcNumMgcGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcNumMgcGroups.setStatus('current')
if mibBuilder.loadTexts: cMgcNumMgcGroups.setDescription('This object is used to indicate number of MGC group with which this MGC associated. The value zero means this MGC is not associated with any MGC Group. If this value greater than zero, then the MGC entry can not be deleted. ')
cMgcNumIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcNumIP.setStatus('current')
if mibBuilder.loadTexts: cMgcNumIP.setDescription("This object is used to indicate number of IP addresses are associated with this MGC. The value zero means there is no IP address associated with this MGC. The MGC can not be deleted if the value of this object is non-zero and cMgcResolution is configured to 'internalOnly'. ")
cMgcResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internalOnly", 1), ("externalOnly", 2))).clone('internalOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cMgcResolution.setStatus('current')
if mibBuilder.loadTexts: cMgcResolution.setDescription("This object determines the kind of resolution to be applied for this MGC. 'internalOnly' means that the gateway will not try to resolve the IP address for this domain name using external DNS name server. 'externalOnly' means the IP address for this domain name will be resolved externally using DNS name server. The request to change from 'internalOnly' to 'externalOnly' will be rejected if the DNS name server is not available for gateway. The IP addresses related to the same MGC should have the same cMgcResolution. The value of the MGC associated objects in the cMgcIpConfigTable can not be modified by NMS if the value of cMgcResolution for the MGC is 'externalOnly'. The following are the behavior of changing the value of this object. [1] changing the value from 'externalOnly' to 'internalOnly' 1) precondition MGC is not associated with any MGC group (value of cMgcNumMgcGroups is zero). 2) behavior If the value of this object is changed successfully, all existing IP addresses in cMgcIpConfigTable that are associated to the MGC will be removed automatically. Note that MGW can't communicate with MGC if NMS does not add static IP address into cMgcIpConfigTable for the MGC. [2] changing the value from 'internalOnly' to 'externalOnly' 1) precondition All MGC associated statically configured IP addresses must be removed from cMgcIpConfigTable by NMS before setting 'externalOnly' value to this object. An inconsistentValue error is generated for setting 'externalOnly' value if the MGC associated IP addresses are not removed. 2) behavior After successfully setting 'externalOnly' value to this object, the MGC domain name will be resolved by MGW software using external DNS name server and the resulting IP addresses will be added to cMgcIpConfigTable automatically. ")
cMgcIpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2), )
if mibBuilder.loadTexts: cMgcIpConfigTable.setStatus('current')
if mibBuilder.loadTexts: cMgcIpConfigTable.setDescription("This table contains MGC related IP addresses. MGC index(cMgcIndex) is a part of index of this table, so IP address in this table is automatically associated with the MGC. Multiple IP addresses can be associated with the same MGC. Under the same MGC (cMgcIndex is same) all IP addresses are equivalent. all IP addresses will share the same domain name: 'cMgcDomainName' in cMgcConfigTable. ")
cMgcIpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-MGC-MIB", "cMgcIndex"), (0, "CISCO-MGC-MIB", "cMgcIpIndex"))
if mibBuilder.loadTexts: cMgcIpConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cMgcIpConfigEntry.setDescription("Each entry represents an IP address which is associated with the MGC(cMgcIndex). When cMgcResolution is configured to 'externalOnly', user cannot add/delete/modify any entry. ")
cMgcIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cMgcIpIndex.setStatus('current')
if mibBuilder.loadTexts: cMgcIpIndex.setDescription('A unique index to identify the address of a specific MGC. The MGC is represented by cMgcIndex. ')
cMgcIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcIpAddressType.setStatus('current')
if mibBuilder.loadTexts: cMgcIpAddressType.setDescription('This object is the IP address type for cMgcIpAddress.')
cMgcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcIpAddress.setStatus('current')
if mibBuilder.loadTexts: cMgcIpAddress.setDescription('This object represents the configured IP address. After adding the entry, this object can not be modified. ')
cMgcIpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcIpPreference.setStatus('current')
if mibBuilder.loadTexts: cMgcIpPreference.setDescription('This object represents preference of the cMgcIpAddress in the given MGC. The lower the number the higher the preference. i.e. 1 will have higher preference than 2. IF more than one IP have the same preference, gateway will select them one by one. ')
cMgcIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcIpRowStatus.setStatus('current')
if mibBuilder.loadTexts: cMgcIpRowStatus.setDescription("This object is used to create/modify/delete entry. In order to delete an entry, following conditions need to be met: 1. The MGC to which this IP address is being added, should be existing. 2. The MGC's resolution (cMgcResolution) should be 'internal only'. 3. the mandatory object is cMgcIpAddress After the IP address added to the MGC the related 'cMgcNumIP' in MGC table will be incremented by 1. In order to delete an entry, following conditions need to be met: 1. The MGC's resolution (cMgcResolution) should be 'internal only'. 2. The IP address should not be the only one in the MGC while the MGC is associated with MGC group. This means if the value of 'cMgcNumIP' is equal to 1 and the value of 'cMgcNumMgcGroups' is non-zero, this IP address is the only one associated with the MGC and it is possible that this IP address is also the only one associated with MGC group. Therefore this IP address can not be deleted. After deleting the IP address from the MGC the related 'cMgcNumIP' in MGC table will be decremented by 1. ")
cMgcGrpParamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1), )
if mibBuilder.loadTexts: cMgcGrpParamTable.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpParamTable.setDescription('This table containing information about MGC group related profile/protocol association and parameters.')
cMgcGrpParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-MGC-MIB", "cMgcGrpIndex"))
if mibBuilder.loadTexts: cMgcGrpParamEntry.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpParamEntry.setDescription('Entry of cMgcGrpParamTable. Each entry includes the information shared by a group of MGC')
cMgcGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1, 1), CMgcGroupIndex())
if mibBuilder.loadTexts: cMgcGrpIndex.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpIndex.setDescription('A unique index to identify a MGC group. ')
cMgcGrpNumMgc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcGrpNumMgc.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpNumMgc.setDescription('This object is used to indicate number of MGCs to be associated with this MGC Group. The value zero means there is no MGC in the MGC Group. When the entry create, this value is set to 0. Adding/deleting MGC to/from MGC group is through cMgcGrpTable. After a MGC added/deleted to/from this MGC group, the value of this object will be incremented/decremented by 1. If the value of this object is zero, it is not allowed to associate this MGC group with any profile or gateway. ')
cMgcGrpAssociationInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcGrpAssociationInfo.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpAssociationInfo.setDescription('This object indicates the association between MGC group and profile/gateway with bitmap format. It is 1:N mapping, e.g., each profile or gateway can only have one MGC group, but one MGC group can be associated with multi profile and gateway. The possible bit positions used in the bitmap are listed as follows: Bit profile/gateway value --------------------------------------------------------------- 0 profile 1 0: the MGC group is not associated with it 1: the MGC group is associated with it 1 profile 2 0: the MGC group is not associated with it 1: the MGC group is associated with it 2 profile 3 0: the MGC group is not associated with it 1: the MGC group is associated with it 3 profile 4 0: the MGC group is not associated with it 1: the MGC group is associated with it ... ... 30 profile 31 0: the MGC group is not associated with it 1: the MGC group is associated with it 31 gateway 0: the MGC group is not associated with it 1: the MGC group is associated with it The value zero means the MGC Group is not associated with any profile or gateway. ')
cMgcGrpNumProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cMgcGrpNumProtocol.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpNumProtocol.setDescription('This object is used to indicate number of protocols associated with this MGC group. The value zero means there is no protocol associated with this MGC group. When the entry create, this object is set to 0. The association between protocol and MGC group is configured via cMgcGrpProtocolTable. After a protocol is associated/de-associated with this MGC group, this object will be incremented/decremented by 1. If this object is zero, it is not allowed to associate the MGC group with any profile or gateway. ')
cMgcGrpStateChangeNtfy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cMgcGrpStateChangeNtfy.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpStateChangeNtfy.setDescription('This object enables or disables sending gateway state change notifications to call agent. ')
cMgcGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 2), )
if mibBuilder.loadTexts: cMgcGrpTable.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpTable.setDescription('This table represents the association of MGCs and MGC group. Each MGC group consists of one or more MGCs and each MGC can belong to one or more MGC groups. Therefore it is an N to N mapping. ')
cMgcGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-MGC-MIB", "cMgcGrpIndex"), (0, "CISCO-MGC-MIB", "cMgcIndex"))
if mibBuilder.loadTexts: cMgcGrpEntry.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpEntry.setDescription('The entry is represented an association of a MGC with a MGC group. ')
cMgcGrpMgcPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcGrpMgcPreference.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpMgcPreference.setDescription('The preference of the MGC in the MGC group. The lower the number the higher the preference. i.e. 1 will have higher preference than 2.')
cMgcGrpMgcUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 2, 1, 2), CiscoPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcGrpMgcUdpPort.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpMgcUdpPort.setDescription('The UDP port of the MGC in the MGC group. The zero means there is no specific UDP port, the UDP port in the protocol table will be used. ')
cMgcGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcGrpRowStatus.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpRowStatus.setDescription('This object is used to create a new row or modify or delete an existing row in this table. In order to add an MGC to a MGC group, the following conditions need to be met: 1. the MGC and the MGC group should be existing 2. at least one IP address is associated with the MGC if the MGC is configured for internal resolution. After the MGC added to the MGC group, the related cMgcGrpNumMgc will be incremented by 1. cMgcNumMgcGroups will be incremented by 1. In order to delete an MGC from MGC group, the following conditions need to be met: The MGC is not the only MGC associated with the MGC group if the MGC group is associated with gateway or one or more profiles. After the MGC added to the MGC group, the related cMgcGrpNumMgc will be decremented by 1. cMgcNumMgcGroups will be decremented by 1. ')
cMgcGrpProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 3), )
if mibBuilder.loadTexts: cMgcGrpProtocolTable.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpProtocolTable.setDescription('cMgcGrpProtocolTable is used to add protocol to MGC group. This table is designed to support multi protocol for MGC group. The MGC group to protocol is N to N mapping. ')
cMgcGrpProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-MGC-MIB", "cMgcGrpIndex"), (0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwSignalProtocolIndex"))
if mibBuilder.loadTexts: cMgcGrpProtocolEntry.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpProtocolEntry.setDescription('Entry of cMgcGrpProtocolTable. ')
cMgcGrpProtocolPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcGrpProtocolPreference.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpProtocolPreference.setDescription('The preference of the Protocol in the MGC group. The lower the number the higher the preference. i.e. 1 will have higher preference than 2. When gateway does not know which protocol is used by a call agent the preference is used to make the decision. But if gateway knows which protocol used by a call agent, gateway will use that protocol (as long as the protocol is added to the MGC group, irrespective of the preference) to communicate with the call agent. For example: when gateway return a call agent message, gateway will use the protocol which used by the call agent to send the message. ')
cMgcGrpProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 321, 1, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cMgcGrpProtocolRowStatus.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpProtocolRowStatus.setDescription('This object is used to create a new row or modify or delete an existing row in this table. In order to add a protocol to MGC group, the following condition need to be met: Both the protocol and the MGC group should be existing After the protocol added to the MGC group, the related cMgcGrpNumProtocol will be incremented by 1. In order to delete a protocol from MGC group, the following condition need to be met: The protocol to be deleted should not be the only one in the MGC group when the MGC group is used by a gateway or a profile. This means if the value of cMgcGrpNumProtocol is equal to 1 and the value of cMgcGrpAssociationInfo is non-zero, this protocol is the only one associated with the MGC group which is still in use by gateways or some profiles. Therefore this protocol can not be deleted. After the protocol deleted from the MGC group, the related cMgcGrpNumProtocol will be decremented by 1. ')
cMgcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 2))
cMgcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 1))
cMgcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2))
cMgcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 1, 1)).setObjects(("CISCO-MGC-MIB", "cMgcMIBGroup"), ("CISCO-MGC-MIB", "cMgcIpMIBGroup"), ("CISCO-MGC-MIB", "cMgcGrpParamGroup"), ("CISCO-MGC-MIB", "cMgcGrpGroup"), ("CISCO-MGC-MIB", "cMgcGrpProtocolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcMIBCompliance = cMgcMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cMgcMIBCompliance.setDescription('Compliance statement for CISCO-MGC-MIB.')
cMgcMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2, 1)).setObjects(("CISCO-MGC-MIB", "cMgcDomainName"), ("CISCO-MGC-MIB", "cMgcNumMgcGroups"), ("CISCO-MGC-MIB", "cMgcNumIP"), ("CISCO-MGC-MIB", "cMgcResolution"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcMIBGroup = cMgcMIBGroup.setStatus('current')
if mibBuilder.loadTexts: cMgcMIBGroup.setDescription('A collection of objects providing per MGC basis configuration information.')
cMgcIpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2, 2)).setObjects(("CISCO-MGC-MIB", "cMgcIpAddress"), ("CISCO-MGC-MIB", "cMgcIpAddressType"), ("CISCO-MGC-MIB", "cMgcIpPreference"), ("CISCO-MGC-MIB", "cMgcIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcIpMIBGroup = cMgcIpMIBGroup.setStatus('current')
if mibBuilder.loadTexts: cMgcIpMIBGroup.setDescription('A collection of objects providing IP (in MGC) configuration information.')
cMgcGrpParamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2, 3)).setObjects(("CISCO-MGC-MIB", "cMgcGrpNumMgc"), ("CISCO-MGC-MIB", "cMgcGrpAssociationInfo"), ("CISCO-MGC-MIB", "cMgcGrpNumProtocol"), ("CISCO-MGC-MIB", "cMgcGrpStateChangeNtfy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcGrpParamGroup = cMgcGrpParamGroup.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpParamGroup.setDescription('A collection of objects providing per MGC group configuration information.')
cMgcGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2, 4)).setObjects(("CISCO-MGC-MIB", "cMgcGrpMgcPreference"), ("CISCO-MGC-MIB", "cMgcGrpMgcUdpPort"), ("CISCO-MGC-MIB", "cMgcGrpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcGrpGroup = cMgcGrpGroup.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpGroup.setDescription('A collection of objects providing MGC (in MGC group) configuration information. ')
cMgcGrpProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 321, 2, 2, 5)).setObjects(("CISCO-MGC-MIB", "cMgcGrpProtocolPreference"), ("CISCO-MGC-MIB", "cMgcGrpProtocolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cMgcGrpProtocolGroup = cMgcGrpProtocolGroup.setStatus('current')
if mibBuilder.loadTexts: cMgcGrpProtocolGroup.setDescription('A collection of objects providing Protocol (in MGC group) configuration information.')
mibBuilder.exportSymbols("CISCO-MGC-MIB", cMgcMibObjects=cMgcMibObjects, cMgcGroupConfig=cMgcGroupConfig, cMgcIpAddress=cMgcIpAddress, cMgcIpConfigTable=cMgcIpConfigTable, cMgcGrpNumProtocol=cMgcGrpNumProtocol, cMgcMibNotifications=cMgcMibNotifications, cMgcIpIndex=cMgcIpIndex, cMgcGrpParamTable=cMgcGrpParamTable, cMgcMIBCompliance=cMgcMIBCompliance, cMgcConfigTable=cMgcConfigTable, cMgcGrpProtocolRowStatus=cMgcGrpProtocolRowStatus, cMgcGrpAssociationInfo=cMgcGrpAssociationInfo, cMgcGrpProtocolGroup=cMgcGrpProtocolGroup, cMgcGrpNumMgc=cMgcGrpNumMgc, cMgcIpPreference=cMgcIpPreference, ciscoMgcMIB=ciscoMgcMIB, cMgcMIBGroups=cMgcMIBGroups, cMgcIpRowStatus=cMgcIpRowStatus, cMgcGrpRowStatus=cMgcGrpRowStatus, CMgcGroupIndexOrZero=CMgcGroupIndexOrZero, cMgcIpMIBGroup=cMgcIpMIBGroup, cMgcMIBGroup=cMgcMIBGroup, cMgcNumMgcGroups=cMgcNumMgcGroups, cMgcIpAddressType=cMgcIpAddressType, PYSNMP_MODULE_ID=ciscoMgcMIB, cMgcMIBConformance=cMgcMIBConformance, cMgcGrpEntry=cMgcGrpEntry, cMgcIndex=cMgcIndex, cMgcGrpParamEntry=cMgcGrpParamEntry, cMgcConfig=cMgcConfig, cMgcConfigEntry=cMgcConfigEntry, cMgcGrpProtocolPreference=cMgcGrpProtocolPreference, cMgcMIBCompliances=cMgcMIBCompliances, cMgcGrpGroup=cMgcGrpGroup, cMgcResolution=cMgcResolution, cMgcNumIP=cMgcNumIP, cMgcDomainName=cMgcDomainName, cMgcGrpParamGroup=cMgcGrpParamGroup, cMgcGrpMgcPreference=cMgcGrpMgcPreference, cMgcGrpMgcUdpPort=cMgcGrpMgcUdpPort, cMgcGrpStateChangeNtfy=cMgcGrpStateChangeNtfy, cMgcGrpProtocolTable=cMgcGrpProtocolTable, cMgcIpConfigEntry=cMgcIpConfigEntry, CMgcGroupIndex=CMgcGroupIndex, cMgcGrpIndex=cMgcGrpIndex, cMgcGrpProtocolEntry=cMgcGrpProtocolEntry, cMgcGrpTable=cMgcGrpTable)
