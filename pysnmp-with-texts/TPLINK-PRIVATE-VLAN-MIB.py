#
# PySNMP MIB module TPLINK-PRIVATE-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-PRIVATE-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, ObjectIdentity, TimeTicks, Integer32, iso, ModuleIdentity, IpAddress, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Integer32", "iso", "ModuleIdentity", "IpAddress", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkPrivateVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 18))
tplinkPrivateVlanMIB.setRevisions(('2010-12-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkPrivateVlanMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkPrivateVlanMIB.setLastUpdated('201012200000Z')
if mibBuilder.loadTexts: tplinkPrivateVlanMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkPrivateVlanMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkPrivateVlanMIB.setDescription('Implementation of the privlan is mandatory for the swtich.')
tplinkPrivateVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1))
tplinkPrivateVlanMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 18, 2))
privateVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1), )
if mibBuilder.loadTexts: privateVlanTable.setStatus('current')
if mibBuilder.loadTexts: privateVlanTable.setDescription('A list of private VLAN control entries.')
privateVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1), ).setIndexNames((0, "TPLINK-PRIVATE-VLAN-MIB", "secondaryVlan"))
if mibBuilder.loadTexts: privateVlanEntry.setStatus('current')
if mibBuilder.loadTexts: privateVlanEntry.setDescription('PVLAN (Private Virtual Local Area Network) technology is developed for saving VLANs of uplink devices and decrease broadcast message . Private VLAN can enhance performance by conserving bandwidth, and improve security by decreasing broadcast .')
secondaryVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secondaryVlan.setStatus('current')
if mibBuilder.loadTexts: secondaryVlan.setDescription('The ID number of the Secondary VLAN.')
primaryVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: primaryVlan.setStatus('current')
if mibBuilder.loadTexts: primaryVlan.setDescription('The ID number of the Primary VLAN.')
privateVlanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: privateVlanPort.setStatus('current')
if mibBuilder.loadTexts: privateVlanPort.setDescription('Displays the Port number of the Private VLAN.')
privateVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("community", 1), ("isolated", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: privateVlanType.setStatus('current')
if mibBuilder.loadTexts: privateVlanType.setDescription('The Port Type for the port. 1. promiscuous 2. host')
privateVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 1, 1, 5), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: privateVlanStatus.setStatus('current')
if mibBuilder.loadTexts: privateVlanStatus.setDescription('the following two values are states: these values may be read or written active(1), notInService(2), the following value is a state: this value may be read, but not written notReady(3), the following three values are actions: these values may be written, but are never read createAndGo(4), createAndWait(5), destroy(6)')
privateVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2), )
if mibBuilder.loadTexts: privateVlanPortTable.setStatus('current')
if mibBuilder.loadTexts: privateVlanPortTable.setDescription('A list of vlan port type control entries.')
privateVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: privateVlanPortEntry.setStatus('current')
if mibBuilder.loadTexts: privateVlanPortEntry.setDescription('The PVLAN provides two Port Types for the ports, Promiscuous and Host. Usually, the Promiscuous port is used to connect to uplink devices while the Host port is used to connect to the he terminal hosts, such as PC and Server.')
portNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portNum.setStatus('current')
if mibBuilder.loadTexts: portNum.setDescription('The port id.')
portType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("promiscuous", 1), ("host", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portType.setStatus('current')
if mibBuilder.loadTexts: portType.setDescription('The Port Type for the port. 1. promiscuous 2. host')
portConfigPrimaryVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portConfigPrimaryVlan.setStatus('current')
if mibBuilder.loadTexts: portConfigPrimaryVlan.setDescription('Specify the Primary VLAN the port belongs to.')
portConfigsecondaryVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portConfigsecondaryVlan.setStatus('current')
if mibBuilder.loadTexts: portConfigsecondaryVlan.setDescription('Specify the Secondary VLAN the port belongs to.')
vlanPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 18, 1, 2, 1, 5), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanPortStatus.setStatus('current')
if mibBuilder.loadTexts: vlanPortStatus.setDescription('the following two values are states: these values may be read or written active(1), notInService(2), the following value is a state: this value may be read, but not written notReady(3), the following three values are actions: these values may be written, but are never read createAndGo(4), createAndWait(5), destroy(6)')
mibBuilder.exportSymbols("TPLINK-PRIVATE-VLAN-MIB", privateVlanTable=privateVlanTable, portConfigsecondaryVlan=portConfigsecondaryVlan, portType=portType, primaryVlan=primaryVlan, tplinkPrivateVlanMIBNotifications=tplinkPrivateVlanMIBNotifications, tplinkPrivateVlanMIB=tplinkPrivateVlanMIB, secondaryVlan=secondaryVlan, tplinkPrivateVlanMIBObjects=tplinkPrivateVlanMIBObjects, privateVlanStatus=privateVlanStatus, portConfigPrimaryVlan=portConfigPrimaryVlan, vlanPortStatus=vlanPortStatus, PYSNMP_MODULE_ID=tplinkPrivateVlanMIB, privateVlanPortTable=privateVlanPortTable, portNum=portNum, privateVlanPort=privateVlanPort, privateVlanEntry=privateVlanEntry, privateVlanType=privateVlanType, privateVlanPortEntry=privateVlanPortEntry)
