#
# PySNMP MIB module ZhoneProductRegistrations (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZhoneProductRegistrations
# Produced by pysmi-0.3.4 at Wed May  1 15:52:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, IpAddress, Integer32, Gauge32, Counter64, Counter32, Unsigned32, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "IpAddress", "Integer32", "Gauge32", "Counter64", "Counter32", "Unsigned32", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
zhoneModules, zhoneRegMux, zhoneRegistrations, zhoneRegMalc, zhoneRegCpe, zhoneRegPls, zhoneRegSechtor = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneRegMux", "zhoneRegistrations", "zhoneRegMalc", "zhoneRegCpe", "zhoneRegPls", "zhoneRegSechtor")
zhoneRegistrationsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 1))
zhoneRegistrationsModule.setRevisions(('2012-08-01 16:11', '2011-11-30 11:56', '2011-08-15 07:13', '2011-05-13 05:14', '2010-09-23 14:40', '2010-08-03 10:12', '2010-02-11 15:38', '2009-08-13 14:04', '2008-10-28 13:44', '2007-11-15 12:08', '2007-10-31 13:13', '2007-06-27 11:54', '2007-06-11 16:12', '2007-05-11 16:00', '2007-05-09 10:56', '2007-04-03 10:48', '2007-03-09 14:13', '2006-10-26 15:17', '2006-08-31 20:02', '2006-07-13 16:07', '2006-05-22 16:01', '2006-05-05 15:42', '2006-04-28 13:36', '2006-04-27 13:23', '2006-04-24 12:06', '2006-04-18 17:43', '2006-03-27 11:14', '2005-12-09 14:14', '2004-09-08 17:28', '2004-08-30 11:07', '2004-05-25 12:30', '2004-05-21 14:25', '2004-05-21 13:26', '2004-04-06 01:45', '2004-03-17 10:54', '2004-03-02 14:00', '2003-10-31 14:26', '2003-07-10 12:19', '2003-05-16 17:04', '2003-02-11 14:58', '2002-10-23 10:18', '2002-10-10 09:43', '2002-10-10 09:42', '2001-06-26 17:04', '2001-06-07 11:59', '2001-05-15 11:53', '2001-02-01 13:10', '2000-09-28 16:48', '2000-09-12 10:55',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: zhoneRegistrationsModule.setRevisionsDescriptions(('Add znidNextGen node for ZNID-26xx products.', 'add mx1Ux80 TP-RJ45 new modules', 'Change description of mx1U19x family.', 'Add mx1U19x family', 'Add znidNextGen OIDs for 21xx, 24xx, 94xx, 97xx and FiberJack models.', 'Add the MX1Ux6x and MX1Ux80 products', 'Added mx319.', 'Add znid and znidNextGen nodes.', 'Add SysObjectID values for Raptor-XP-170 flavors', 'Added RaptorXP and MalcXP indoor and outdoor units', 'V01.00.37 - Add SkyZhone 1xxx, EtherXtend 30xxx, and EtherXtend 31xxx nodes.', 'V01.00.36 - Add node FiberSLAM 101.', 'V01.00.35 - Change gigaMux100 node identity name to FiberSLAM 105.', '- Add new card type raptorXP160 in zhoneRegistrations->zhoneRegMalc->raptorXP, - Obsolete the following card types: r100adsl2Pxxx/r100adsl2pgm r100adsl2Pxxx/r100adsl2pgte m100/m100adsl2pgm m100/m100Vdsl2xxx - the whole tree r100Vdsl2xx - the whole tree ', 'Added card types malcXP350A and raptorXP350A', 'V01.00.32 - Add nodes for Raptor XP and MALC XP family definitions. Add raptorXP105A and malcXP150A leaves.', 'V01.00.31 - Add Raptor-XP-150-A definition.', 'Added zhoneRegMalcNextGen node.', 'V01.00.29 - Add m100Adsl2pAnxB', 'V01.00.28 - Add r100Adsl2pAnxB', 'V01.00.27 - Correct case of new onbject names', 'V01.00.26 - Add r100Adsl2pGte', 'V01.00.25 - Add m100Vdsl2Gm', 'V01.00.24 - Add r100Vdsl2Gm', 'V01.00.23 - Add m100Adsl2pGm', ' ', 'V01.00.20 - Add new ethX products.', 'V01.00.19 - added M100 product tree.', 'V01.00.18 -- Add r100Adsl2PGigE definition.', 'V01.00.17 -- Add zrg8xx series.', 'V01.00.17 -- Add zrg6xx series.', 'V01.00.16 - Add r100adsl2p family of products.', 'add zrg700 ODU', 'V01.00.14 - Add isc303 product.', 'V01.00.13 - Add IDU/ODU for ZRG300 and ZRG500 products', 'V01.00.12 - Add raptor50LP product', 'V01.00.11 - Add Zhone Residential Gateway (ZRG) products.', 'V01.00.11 - Added ZEDGE 6200 products', 'V01.00.10 - add raptor100LP product. Modified raptor100A description.', 'V01.00.09 - Added REBEL MALC oids.', 'V01.00.08 -- change malc100 to malc319', 'V01.00.07 - add malc100 product', 'V01.00.06 -- added for skyzhone', 'V01.00.05 - Added malc19 and malc23 Product to the malc product family ', 'V01.00.04 - Expanded 23GHz family to 4 sub-bands per product. Corrected name of 5.7GHz family.', "V01.00.03 - changed zhoneRegZwt to zhoneRegWtn. Added sysObjId's for skyzhone155 and skyzhone8x.", 'V01.00.02 - added sysObjectID assignments for Sechtor 100 models.', 'V01.00.01 - added Wireless Transport Node product type and the DS3 Wireless Transport Node product model.', 'V01.00.00 - Initial Release',))
if mibBuilder.loadTexts: zhoneRegistrationsModule.setLastUpdated('201208011611Z')
if mibBuilder.loadTexts: zhoneRegistrationsModule.setOrganization('Zhone Technologies')
if mibBuilder.loadTexts: zhoneRegistrationsModule.setContactInfo(' Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com')
if mibBuilder.loadTexts: zhoneRegistrationsModule.setDescription('This mib describes the per product registrations that are then used for the sysObjectId field. The format is 1.3.6.1.4.1.5504.1.x.y.z where 5504 is our enterprise ID. X is the product type so: X = 1 - PLS X = 2 - CPE X = 3 - MUX Y is the product model type: Y = 1 - BAN (for the PLS product) Etc. Y = 1 - IAD-50 (for CPE equipment) Etc. Z is just an incremental field which needs to be documented what value maps to which product model. For example, an IAD-50 could be .1.3.6.1.4.1.5504.1.2.1.1. A new model of the iad-50 that for some reason we would want to differentiate functionality would be .1.3.6.1.4.1.5504.2.1.2. ')
ban_2000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 1, 1)).setLabel("ban-2000")
if mibBuilder.loadTexts: ban_2000.setStatus('current')
if mibBuilder.loadTexts: ban_2000.setDescription('BAN-2000 sysObjectId.')
zedge64 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 1))
if mibBuilder.loadTexts: zedge64.setStatus('current')
if mibBuilder.loadTexts: zedge64.setDescription('zedge64 CPE equipment product registrations. The zedge64 has four flavours with diffrenet features so four child node are created under this node. The oid of these child node will be the sysObjectId of the corresponding product.')
zedge64_SHDSL_FXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 1, 1)).setLabel("zedge64-SHDSL-FXS")
if mibBuilder.loadTexts: zedge64_SHDSL_FXS.setStatus('current')
if mibBuilder.loadTexts: zedge64_SHDSL_FXS.setDescription('zedge64-SHDSL-FXS sysObjectId.')
zedge64_SHDSL_BRI = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 1, 2)).setLabel("zedge64-SHDSL-BRI")
if mibBuilder.loadTexts: zedge64_SHDSL_BRI.setStatus('current')
if mibBuilder.loadTexts: zedge64_SHDSL_BRI.setDescription('zedge64-SHDSL-BRI sysObjectId.')
zedge64_T1_FXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 1, 3)).setLabel("zedge64-T1-FXS")
if mibBuilder.loadTexts: zedge64_T1_FXS.setStatus('current')
if mibBuilder.loadTexts: zedge64_T1_FXS.setDescription('zedge64-T1-FXS sysObjectId.')
zedge64_E1_FXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 1, 4)).setLabel("zedge64-E1-FXS")
if mibBuilder.loadTexts: zedge64_E1_FXS.setStatus('current')
if mibBuilder.loadTexts: zedge64_E1_FXS.setDescription('zedge64-E1-FXS sysObjectId.')
zedge6200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 2))
if mibBuilder.loadTexts: zedge6200.setStatus('current')
if mibBuilder.loadTexts: zedge6200.setDescription('zedge6200 CPE equipment product registrations. The zedge6200 has 3 flavours with diffrenet features so 3 child nodes are created under this node. The oid of these child node will be the sysObjectId of the corresponding product.')
zedge6200_IP_T1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 2, 1)).setLabel("zedge6200-IP-T1")
if mibBuilder.loadTexts: zedge6200_IP_T1.setStatus('current')
if mibBuilder.loadTexts: zedge6200_IP_T1.setDescription('zedge6200(ipIad) sysObjectId.')
zedge6200_IP_EM = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 2, 2)).setLabel("zedge6200-IP-EM")
if mibBuilder.loadTexts: zedge6200_IP_EM.setStatus('current')
if mibBuilder.loadTexts: zedge6200_IP_EM.setDescription('zedge6200EM sysObjectId.')
zedge6200_IP_FXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 2, 3)).setLabel("zedge6200-IP-FXS")
if mibBuilder.loadTexts: zedge6200_IP_FXS.setStatus('current')
if mibBuilder.loadTexts: zedge6200_IP_FXS.setDescription('zedge6200FXS sysObjectId.')
zrg3xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 3))
if mibBuilder.loadTexts: zrg3xx.setStatus('current')
if mibBuilder.loadTexts: zrg3xx.setDescription('Zhone Residential Gateway ADSL 300 series.')
zrg300_IDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 3, 1)).setLabel("zrg300-IDU")
if mibBuilder.loadTexts: zrg300_IDU.setStatus('current')
if mibBuilder.loadTexts: zrg300_IDU.setDescription('1 Lifeline Pots port. 2 Derived voice FXS ports. 1 Ethernet port. 0-4 video decoders. Indoor Unit.')
zrg300_ODU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 3, 2)).setLabel("zrg300-ODU")
if mibBuilder.loadTexts: zrg300_ODU.setStatus('current')
if mibBuilder.loadTexts: zrg300_ODU.setDescription('1 Lifeline Pots port. 2 Derived voice FXS ports. 1 Ethernet port. 0-4 video decoders. Outdoor Unit.')
zrg5xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 4))
if mibBuilder.loadTexts: zrg5xx.setStatus('current')
if mibBuilder.loadTexts: zrg5xx.setDescription('Zhone Residential Gateway VDSL 500 series.')
zrg500_IDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 4, 1)).setLabel("zrg500-IDU")
if mibBuilder.loadTexts: zrg500_IDU.setStatus('current')
if mibBuilder.loadTexts: zrg500_IDU.setDescription('1 Lifeline Pots port. 2 Derived voice FXS ports. 1 Ethernet port. 0-4 video decoders. Indoor Unit. ')
zrg500_ODU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 4, 2)).setLabel("zrg500-ODU")
if mibBuilder.loadTexts: zrg500_ODU.setStatus('current')
if mibBuilder.loadTexts: zrg500_ODU.setDescription('1 Lifeline Pots port. 2 Derived voice FXS ports. 1 Ethernet port. 0-4 video decoders. Outdoor Unit.')
zrg7xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 5))
if mibBuilder.loadTexts: zrg7xx.setStatus('current')
if mibBuilder.loadTexts: zrg7xx.setDescription('Zhone Residential Gateway PON 700 series.')
zrg700_IDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 5, 1)).setLabel("zrg700-IDU")
if mibBuilder.loadTexts: zrg700_IDU.setStatus('current')
if mibBuilder.loadTexts: zrg700_IDU.setDescription('4 voice ports 1 multicast video port 1 ethernet channel')
zrg700_ODU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 5, 2)).setLabel("zrg700-ODU")
if mibBuilder.loadTexts: zrg700_ODU.setStatus('current')
if mibBuilder.loadTexts: zrg700_ODU.setDescription('4 voice ports 1 multicast video port 1 ethernet channel')
zrg6xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 6))
if mibBuilder.loadTexts: zrg6xx.setStatus('current')
if mibBuilder.loadTexts: zrg6xx.setDescription('Zhone Resedential Gateway 600 series.')
zrg600_IDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 6, 1)).setLabel("zrg600-IDU")
if mibBuilder.loadTexts: zrg600_IDU.setStatus('current')
if mibBuilder.loadTexts: zrg600_IDU.setDescription('Description.')
zrg600_ODU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 6, 2)).setLabel("zrg600-ODU")
if mibBuilder.loadTexts: zrg600_ODU.setStatus('current')
if mibBuilder.loadTexts: zrg600_ODU.setDescription('Description.')
zrg8xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 7))
if mibBuilder.loadTexts: zrg8xx.setStatus('current')
if mibBuilder.loadTexts: zrg8xx.setDescription('Description.')
zrg800_IDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 7, 1)).setLabel("zrg800-IDU")
if mibBuilder.loadTexts: zrg800_IDU.setStatus('current')
if mibBuilder.loadTexts: zrg800_IDU.setDescription('Zrg800 is like a PON (zrg700) with the addition of video set-top boards like those on the zrg3xx. It has a PON uplink, a local 10/100 network, 2 built-in video decoders, and a 2-port Circuit Emulation board.')
zrg800_ODU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 7, 2)).setLabel("zrg800-ODU")
if mibBuilder.loadTexts: zrg800_ODU.setStatus('current')
if mibBuilder.loadTexts: zrg800_ODU.setDescription('Zrg800 is like a PON (zrg700) with the addition of video set-top boards like those on the zrg3xx. It has a PON uplink, a local 10/100 network, 2 built-in video decoders, and a 2-port Circuit Emulation board.')
ethXtendxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8))
if mibBuilder.loadTexts: ethXtendxx.setStatus('current')
if mibBuilder.loadTexts: ethXtendxx.setDescription('Zhone Ethernet First Mile CPE devices.')
ethXtendShdsl = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8, 1))
if mibBuilder.loadTexts: ethXtendShdsl.setStatus('current')
if mibBuilder.loadTexts: ethXtendShdsl.setDescription('Zhone Ethernet First Mile runnig on SHDSL.')
ethXtendT1E1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8, 2))
if mibBuilder.loadTexts: ethXtendT1E1.setStatus('current')
if mibBuilder.loadTexts: ethXtendT1E1.setDescription('Zhone Ethernet First Mile running on T1 or E1.')
ethXtend30xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8, 3))
if mibBuilder.loadTexts: ethXtend30xx.setStatus('current')
if mibBuilder.loadTexts: ethXtend30xx.setDescription('Zhone Ethernet First Mile over SHDSL 30xx product family.')
ethXtend31xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8, 4))
if mibBuilder.loadTexts: ethXtend31xx.setStatus('current')
if mibBuilder.loadTexts: ethXtend31xx.setDescription('Zhone Ethernet First Mile over SHDSL with T1/E1 PWE 31xx product family.')
ethXtend32xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 8, 5))
if mibBuilder.loadTexts: ethXtend32xx.setStatus('current')
if mibBuilder.loadTexts: ethXtend32xx.setDescription('Zhone Ethernet First Mile over SHDSL with Voice Ports 32xx product family.')
znid = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9))
if mibBuilder.loadTexts: znid.setStatus('current')
if mibBuilder.loadTexts: znid.setDescription('Zhone Network Interface Device (ZNID) heritage product family.')
znid42xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9, 1))
if mibBuilder.loadTexts: znid42xx.setStatus('current')
if mibBuilder.loadTexts: znid42xx.setDescription('Zhone Network Interface Device (ZNID) heritage product family which includes the 421x and 422x models in the heritage housing.')
znidGPON42xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9, 1, 2))
if mibBuilder.loadTexts: znidGPON42xx.setStatus('current')
if mibBuilder.loadTexts: znidGPON42xx.setDescription('Zhone Network Interface Device (ZNID) heritage GPON 421x and 422x RFOG products.')
znidEth422x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9, 1, 3))
if mibBuilder.loadTexts: znidEth422x.setStatus('current')
if mibBuilder.loadTexts: znidEth422x.setDescription('Zhone Network Interface Device (ZNID) heritage Active Ethernet 422x products.')
znid420x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9, 2))
if mibBuilder.loadTexts: znid420x.setStatus('current')
if mibBuilder.loadTexts: znid420x.setDescription('Zhone Network Interface Device (ZNID) heritage 420x product family in the next generation housing.')
znidGPON420x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 9, 2, 1))
if mibBuilder.loadTexts: znidGPON420x.setStatus('current')
if mibBuilder.loadTexts: znidGPON420x.setDescription('Zhone Network Interface Device (ZNID) heritage GPON 420x products in the next generation housing.')
znidNextGen = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10))
if mibBuilder.loadTexts: znidNextGen.setStatus('current')
if mibBuilder.loadTexts: znidNextGen.setDescription('Zhone Network Interface Device (ZNID) next generation product family.')
znidNextGen22xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 1))
if mibBuilder.loadTexts: znidNextGen22xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen22xx.setDescription('Zhone Network Interface Device (ZNID) next generation indoor 22xx product family.')
znidNextGenGE22xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 1, 1))
if mibBuilder.loadTexts: znidNextGenGE22xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE22xx.setDescription('Zhone Network Interface Device (ZNID) next generation 22xx Indoor Active GigE products.')
znidNextGen42xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 2))
if mibBuilder.loadTexts: znidNextGen42xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen42xx.setDescription('Zhone Network Interface Device (ZNID) next generation 42xx product family.')
znidNextGenGPON42xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 2, 1))
if mibBuilder.loadTexts: znidNextGenGPON42xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON42xx.setDescription('Zhone Network Interface Device (ZNID) next generation Outdoor 42xx GPON products.')
znidNextGenGE42xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 2, 2))
if mibBuilder.loadTexts: znidNextGenGE42xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE42xx.setDescription('Zhone Network Interface Device (ZNID) next generation Outdoor 42xx Active GigE products.')
znidNextGen9xxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3))
if mibBuilder.loadTexts: znidNextGen9xxx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen9xxx.setDescription('Zhone Network Interface Device (ZNID) next generation 9xxx product family.')
znidNextGenGPON9xxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 1))
if mibBuilder.loadTexts: znidNextGenGPON9xxx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON9xxx.setDescription('Zhone Network Interface Device (ZNID) next generation 9xxx Outdoor GPON products.')
znidNextGenGE9xxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 2))
if mibBuilder.loadTexts: znidNextGenGE9xxx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE9xxx.setDescription('Zhone Network Interface Device (ZNID) next generation 9xxx Outdoor Active GigE products.')
znidNextGenGPON94xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 3))
if mibBuilder.loadTexts: znidNextGenGPON94xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON94xx.setDescription('Zhone Network Interface Device (ZNID) next generation 94xx Outdoor GPON Pseudo-Wire Emulation products.')
znidNextGenGE94xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 4))
if mibBuilder.loadTexts: znidNextGenGE94xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE94xx.setDescription('Zhone Network Interface Device (ZNID) next generation 94xx Outdoor Active GigE Pseudo-Wire Emulation products.')
znidNextGenGPON97xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 5))
if mibBuilder.loadTexts: znidNextGenGPON97xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON97xx.setDescription('Zhone Network Interface Device (ZNID) next generation 97xx Outdoor GPON VDSL products.')
znidNextGenGE97xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 3, 6))
if mibBuilder.loadTexts: znidNextGenGE97xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE97xx.setDescription('Zhone Network Interface Device (ZNID) next generation 97xx Outdoor Active GigE VDSL products.')
fiberJack = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 4))
if mibBuilder.loadTexts: fiberJack.setStatus('current')
if mibBuilder.loadTexts: fiberJack.setDescription('Integrated GPON Uplink Module.')
znidNextGen21xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 5))
if mibBuilder.loadTexts: znidNextGen21xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen21xx.setDescription('Zhone Network Interface Device (ZNID) next generation indoor 21xx product family.')
znidNextGenGPON21xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 5, 1))
if mibBuilder.loadTexts: znidNextGenGPON21xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON21xx.setDescription('Zhone Network Interface Device (ZNID) next generation 21xx Indoor GPON products without voice.')
znidNextGenGE21xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 5, 2))
if mibBuilder.loadTexts: znidNextGenGE21xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE21xx.setDescription('Zhone Network Interface Device (ZNID) next generation 21xx Indoor Active GigE products without voice.')
znidNextGen24xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 6))
if mibBuilder.loadTexts: znidNextGen24xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen24xx.setDescription('Zhone Network Interface Device (ZNID) next generation indoor 24xx product family.')
znidNextGenGPON24xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 6, 1))
if mibBuilder.loadTexts: znidNextGenGPON24xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON24xx.setDescription('Zhone Network Interface Device (ZNID) next generation 24xx Indoor GPON products.')
znidNextGenGE24xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 6, 2))
if mibBuilder.loadTexts: znidNextGenGE24xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE24xx.setDescription('Zhone Network Interface Device (ZNID) next generation 24xx Indoor Active GigE products.')
znidNextGen26xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 7))
if mibBuilder.loadTexts: znidNextGen26xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGen26xx.setDescription('Zhone Network Interface Device (ZNID) 26xx series Indoor 26xx product family.')
znidNextGenGPON26xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 7, 1))
if mibBuilder.loadTexts: znidNextGenGPON26xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGPON26xx.setDescription('Zhone Network Interface Device (ZNID) 26xx series Indoor GPON products.')
znidNextGenGE26xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 2, 10, 7, 2))
if mibBuilder.loadTexts: znidNextGenGE26xx.setStatus('current')
if mibBuilder.loadTexts: znidNextGenGE26xx.setDescription('Zhone Network Interface Device (ZNID) 26xx series Indoor Active GigE products.')
z_plex10B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 3, 1)).setLabel("z-plex10B")
if mibBuilder.loadTexts: z_plex10B.setStatus('current')
if mibBuilder.loadTexts: z_plex10B.setDescription('Z-Plex10B CPE equipment product registrations. The z-plex has two flavours with diffrenet features so two child node are created under this node.The oid of these child node will be the sysObjectId of the corresponding z-plex product.')
z_plex10B_FXS_FXO = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 3, 1, 1)).setLabel("z-plex10B-FXS-FXO")
if mibBuilder.loadTexts: z_plex10B_FXS_FXO.setStatus('current')
if mibBuilder.loadTexts: z_plex10B_FXS_FXO.setDescription('z-plex10B-FXS-FXO sysObjectId.')
z_plex10B_FXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 3, 1, 2)).setLabel("z-plex10B-FXS")
if mibBuilder.loadTexts: z_plex10B_FXS.setStatus('current')
if mibBuilder.loadTexts: z_plex10B_FXS.setDescription('z-plex10B-FXS sysObjectId.')
sechtor_100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 4, 1)).setLabel("sechtor-100")
if mibBuilder.loadTexts: sechtor_100.setStatus('current')
if mibBuilder.loadTexts: sechtor_100.setDescription('Sechtor-100 sysObjectId.')
s100_ATM_SM_16T1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 4, 1, 1)).setLabel("s100-ATM-SM-16T1")
if mibBuilder.loadTexts: s100_ATM_SM_16T1.setStatus('current')
if mibBuilder.loadTexts: s100_ATM_SM_16T1.setDescription('sysObjectID for S100-ATM-SM-16T1.')
s100_ATM_SM_16E1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 4, 1, 2)).setLabel("s100-ATM-SM-16E1")
if mibBuilder.loadTexts: s100_ATM_SM_16E1.setStatus('current')
if mibBuilder.loadTexts: s100_ATM_SM_16E1.setDescription('sysObjectID for S100-ATM-SM-16E1.')
sechtor_300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 4, 2)).setLabel("sechtor-300")
if mibBuilder.loadTexts: sechtor_300.setStatus('current')
if mibBuilder.loadTexts: sechtor_300.setDescription('Sechtor-300 sysObjectId.')
zhoneRegWtn = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5))
if mibBuilder.loadTexts: zhoneRegWtn.setStatus('current')
if mibBuilder.loadTexts: zhoneRegWtn.setDescription('Zhone Wireless Transport Registration.')
node5700Mhz = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 1))
if mibBuilder.loadTexts: node5700Mhz.setStatus('current')
if mibBuilder.loadTexts: node5700Mhz.setDescription('sysObjectId Family for Wireless Transport Node with 5.7Ghz radio.')
skyZhone45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 1, 1))
if mibBuilder.loadTexts: skyZhone45.setStatus('current')
if mibBuilder.loadTexts: skyZhone45.setDescription('Unit contains a built in (not modular) ds3 interface on the wireline side.')
oduTypeA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 1, 1, 1))
if mibBuilder.loadTexts: oduTypeA.setStatus('current')
if mibBuilder.loadTexts: oduTypeA.setDescription('Unit transmits at 5735Mhz, receives at 5260Mhz (channel 1). Also known as ODU type A.')
oduTypeB = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 1, 1, 2))
if mibBuilder.loadTexts: oduTypeB.setStatus('current')
if mibBuilder.loadTexts: oduTypeB.setDescription('Unit transmits at 5260Mhz, receives at 5735Mhz (channel 1). Also known as ODU type B.')
node23000Mhz = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2))
if mibBuilder.loadTexts: node23000Mhz.setStatus('current')
if mibBuilder.loadTexts: node23000Mhz.setDescription('sysObjectId Family for Wireless Transport Node with 23Ghz radio in accordance with ITU-R F.637-3 Specifications.')
skyZhone8e1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 1))
if mibBuilder.loadTexts: skyZhone8e1.setStatus('current')
if mibBuilder.loadTexts: skyZhone8e1.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeE1A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 1, 1))
if mibBuilder.loadTexts: oduTypeE1A.setStatus('current')
if mibBuilder.loadTexts: oduTypeE1A.setDescription('Unit transmits at 21200-21500Mhz, receives at 22400-22700Mhz.')
oduTypeE1B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 1, 2))
if mibBuilder.loadTexts: oduTypeE1B.setStatus('current')
if mibBuilder.loadTexts: oduTypeE1B.setDescription('Unit transmits at 22400-22700Mhz, receives at 21200-21500Mhz.')
skyZhone8e2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 2))
if mibBuilder.loadTexts: skyZhone8e2.setStatus('current')
if mibBuilder.loadTexts: skyZhone8e2.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeE2A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 2, 1))
if mibBuilder.loadTexts: oduTypeE2A.setStatus('current')
if mibBuilder.loadTexts: oduTypeE2A.setDescription('Unit transmits at 21500-21800Mhz, receives at 22700-23000Mhz.')
oduTypeE2B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 2, 2))
if mibBuilder.loadTexts: oduTypeE2B.setStatus('current')
if mibBuilder.loadTexts: oduTypeE2B.setDescription('Unit transmits at 22700-23000Mhz, receives at 21500-21800Mhz.')
skyZhone8e3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 3))
if mibBuilder.loadTexts: skyZhone8e3.setStatus('current')
if mibBuilder.loadTexts: skyZhone8e3.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeE3A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 3, 1))
if mibBuilder.loadTexts: oduTypeE3A.setStatus('current')
if mibBuilder.loadTexts: oduTypeE3A.setDescription('Unit transmits at 21800-22100Mhz, receives at 23000-23300Mhz.')
oduTypeE3B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 3, 2))
if mibBuilder.loadTexts: oduTypeE3B.setStatus('current')
if mibBuilder.loadTexts: oduTypeE3B.setDescription('Unit transmits at 23000-23300Mhz, receives at 21800-22100Mhz.')
skyZhone8e4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 4))
if mibBuilder.loadTexts: skyZhone8e4.setStatus('current')
if mibBuilder.loadTexts: skyZhone8e4.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeE4A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 4, 1))
if mibBuilder.loadTexts: oduTypeE4A.setStatus('current')
if mibBuilder.loadTexts: oduTypeE4A.setDescription('Unit transmits at 22100-22400Mhz, receives at 23300-23600Mhz.')
oduTypeE4B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 4, 2))
if mibBuilder.loadTexts: oduTypeE4B.setStatus('current')
if mibBuilder.loadTexts: oduTypeE4B.setDescription('Unit transmits at 23300-23600Mhz, receives at 22100-22400Mhz.')
skyZhone8t1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 5))
if mibBuilder.loadTexts: skyZhone8t1.setStatus('current')
if mibBuilder.loadTexts: skyZhone8t1.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeT1A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 5, 1))
if mibBuilder.loadTexts: oduTypeT1A.setStatus('current')
if mibBuilder.loadTexts: oduTypeT1A.setDescription('Unit transmits at 21200-21500Mhz, receives at 22400-22700Mhz.')
oduTypeT1B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 5, 2))
if mibBuilder.loadTexts: oduTypeT1B.setStatus('current')
if mibBuilder.loadTexts: oduTypeT1B.setDescription('Unit transmits at 22400-22700Mhz, receives at 21200-21500Mhz.')
skyZhone8t2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 6))
if mibBuilder.loadTexts: skyZhone8t2.setStatus('current')
if mibBuilder.loadTexts: skyZhone8t2.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeT2A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 6, 1))
if mibBuilder.loadTexts: oduTypeT2A.setStatus('current')
if mibBuilder.loadTexts: oduTypeT2A.setDescription('Unit transmits at 21500-21800Mhz, receives at 22700-23000Mhz.')
oduTypeT2B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 6, 2))
if mibBuilder.loadTexts: oduTypeT2B.setStatus('current')
if mibBuilder.loadTexts: oduTypeT2B.setDescription('Unit transmits at 22700-23000Mhz, receives at 21500-21800Mhz.')
skyZhone8t3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 7))
if mibBuilder.loadTexts: skyZhone8t3.setStatus('current')
if mibBuilder.loadTexts: skyZhone8t3.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeT3A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 7, 1))
if mibBuilder.loadTexts: oduTypeT3A.setStatus('current')
if mibBuilder.loadTexts: oduTypeT3A.setDescription('Unit transmits at 21800-22100Mhz, receives at 23000-23300Mhz.')
oduTypeT3B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 7, 2))
if mibBuilder.loadTexts: oduTypeT3B.setStatus('current')
if mibBuilder.loadTexts: oduTypeT3B.setDescription('Unit transmits at 23000-23300Mhz, receives at 21800-22100Mhz.')
skyZhone8t4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 8))
if mibBuilder.loadTexts: skyZhone8t4.setStatus('current')
if mibBuilder.loadTexts: skyZhone8t4.setDescription('Variant of transport node with E1/T1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 14Mhz Channel separation.')
oduTypeT4A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 8, 1))
if mibBuilder.loadTexts: oduTypeT4A.setStatus('current')
if mibBuilder.loadTexts: oduTypeT4A.setDescription('Unit transmits at 22100-22400Mhz, receives at 23300-23600Mhz.')
oduTypeT4B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 8, 2))
if mibBuilder.loadTexts: oduTypeT4B.setStatus('current')
if mibBuilder.loadTexts: oduTypeT4B.setDescription('Unit transmits at 23300-23600Mhz, receives at 22100-22400Mhz.')
skyZhone155s1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 9))
if mibBuilder.loadTexts: skyZhone155s1.setStatus('current')
if mibBuilder.loadTexts: skyZhone155s1.setDescription('Variant of transport node with STM-1 interface which operates a link at frequency bands 21.2-21.8Ghz and 22.4-23Ghz. 28Mhz Channel separation.')
oduTypeS1A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 9, 1))
if mibBuilder.loadTexts: oduTypeS1A.setStatus('current')
if mibBuilder.loadTexts: oduTypeS1A.setDescription('Unit transmits at 21200-21500Mhz, receives at 22400-22700Mhz.')
oduTypeS1B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 9, 2))
if mibBuilder.loadTexts: oduTypeS1B.setStatus('current')
if mibBuilder.loadTexts: oduTypeS1B.setDescription('Unit transmits at 22400-22700Mhz, receives at 21200-21500Mhz.')
skyZhone155s2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 10))
if mibBuilder.loadTexts: skyZhone155s2.setStatus('current')
if mibBuilder.loadTexts: skyZhone155s2.setDescription('Variant of transport node with STM-1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 28Mhz Channel separation.')
oduTypeS2A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 10, 1))
if mibBuilder.loadTexts: oduTypeS2A.setStatus('current')
if mibBuilder.loadTexts: oduTypeS2A.setDescription('Unit transmits at 21500-21800Mhz, receives at 22700-23000Mhz.')
oduTypeS2B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 10, 2))
if mibBuilder.loadTexts: oduTypeS2B.setStatus('current')
if mibBuilder.loadTexts: oduTypeS2B.setDescription('Unit transmits at 22700-23000Mhz, receives at 21500-21800Mhz.')
skyZhone155s3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 11))
if mibBuilder.loadTexts: skyZhone155s3.setStatus('current')
if mibBuilder.loadTexts: skyZhone155s3.setDescription('Variant of transport node with STM-1 interface which operates a link at frequency bands 21.2-21.8Ghz and 22.4-23Ghz. 28Mhz Channel separation.')
oduTypeS3A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 11, 1))
if mibBuilder.loadTexts: oduTypeS3A.setStatus('current')
if mibBuilder.loadTexts: oduTypeS3A.setDescription('Unit transmits at 21800-22100Mhz, receives at 23000-23300Mhz.')
oduTypeS3B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 11, 2))
if mibBuilder.loadTexts: oduTypeS3B.setStatus('current')
if mibBuilder.loadTexts: oduTypeS3B.setDescription('Unit transmits at 23000-23300Mhz, receives at 21800-22100Mhz.')
skyZhone155s4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 12))
if mibBuilder.loadTexts: skyZhone155s4.setStatus('current')
if mibBuilder.loadTexts: skyZhone155s4.setDescription('Variant of transport node with STM-1 interface which operates a link at frequency bands 21.8-22.4Ghz and 23.0-23.6Ghz. 28Mhz Channel separation.')
oduTypeS4A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 12, 1))
if mibBuilder.loadTexts: oduTypeS4A.setStatus('current')
if mibBuilder.loadTexts: oduTypeS4A.setDescription('Unit transmits at 22100-22400Mhz, receives at 23300-23600Mhz.')
oduTypeS4B = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 2, 12, 2))
if mibBuilder.loadTexts: oduTypeS4B.setStatus('current')
if mibBuilder.loadTexts: oduTypeS4B.setDescription('Unit transmits at 23300-23600Mhz, receives at 22100-22400Mhz.')
skyZhone1xxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 5, 3))
if mibBuilder.loadTexts: skyZhone1xxx.setStatus('current')
if mibBuilder.loadTexts: skyZhone1xxx.setDescription('SkyZhone 802.11 a/b/g/n Wifi Access Points product family.')
malc19 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 1))
if mibBuilder.loadTexts: malc19.setStatus('current')
if mibBuilder.loadTexts: malc19.setDescription('Multiple Access Loop Concentrator with 19 inch rack mount cabinet product identifier.')
malc23 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 2))
if mibBuilder.loadTexts: malc23.setStatus('current')
if mibBuilder.loadTexts: malc23.setDescription('Multiple Access Loop Concentrator with 23 inch rack mount cabinet product identifier.')
malc319 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 3))
if mibBuilder.loadTexts: malc319.setStatus('current')
if mibBuilder.loadTexts: malc319.setDescription('Multiple Access Loop Concentrator with 10 inch rack mount cabinet product identifier.')
raptor319A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 4))
if mibBuilder.loadTexts: raptor319A.setStatus('current')
if mibBuilder.loadTexts: raptor319A.setDescription('Raptor MALC with 10 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor319I = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 5))
if mibBuilder.loadTexts: raptor319I.setStatus('current')
if mibBuilder.loadTexts: raptor319I.setDescription('Raptor MALC with IP termination, with 10 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor719A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 6))
if mibBuilder.loadTexts: raptor719A.setStatus('current')
if mibBuilder.loadTexts: raptor719A.setDescription('Raptor MALC with 19 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor719I = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 7))
if mibBuilder.loadTexts: raptor719I.setStatus('current')
if mibBuilder.loadTexts: raptor719I.setDescription('Raptor MALC with IP termination, with 10 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor723A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 8))
if mibBuilder.loadTexts: raptor723A.setStatus('current')
if mibBuilder.loadTexts: raptor723A.setDescription('Raptor MALC with 23 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor723I = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 9))
if mibBuilder.loadTexts: raptor723I.setStatus('current')
if mibBuilder.loadTexts: raptor723I.setDescription('Raptor MALC with IP termination, with 10 inch rack mount cabinet product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor100A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 10))
if mibBuilder.loadTexts: raptor100A.setStatus('current')
if mibBuilder.loadTexts: raptor100A.setDescription('RAPTOR-100A in a single board configuration. The RAPTOR 100A is a single-board MALC with up to 4 T1/E1 IMA/UNI uplinks and 24 ADSL lines. It is offered with or without a splitter daughter-board. The RAPTOR-100A does not offer any subscriber voice services.')
raptor100I = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 11))
if mibBuilder.loadTexts: raptor100I.setStatus('current')
if mibBuilder.loadTexts: raptor100I.setDescription('Raptor MALC in single-board configuration with IP termination product identifier. The Raptor differs from the standard MALC in that it does not have any subscriber voice capability.')
raptor100LP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 12))
if mibBuilder.loadTexts: raptor100LP.setStatus('current')
if mibBuilder.loadTexts: raptor100LP.setDescription('RAPTOR-100 Line Powered in a single board configuration. The RAPTOR-100 Line-Powered is a single-board MALC with up to four GSHDSL uplinks and 16 ADSL lines. It is offered with or without a splitter daughter-board. The RAPTOR-100 LP does not offer any subscriber voice services.')
raptor50Gshdsl = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 13))
if mibBuilder.loadTexts: raptor50Gshdsl.setStatus('current')
if mibBuilder.loadTexts: raptor50Gshdsl.setDescription('RAPTOR-100 Line Powered in a single board configuration. The RAPTOR-100 Line-Powered is a single-board MALC with up to four GSHDSL uplinks and 16 ADSL lines. It is offered with or without a splitter daughter-board. The RAPTOR-100 LP does not offer any subscriber voice services.')
isc303 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 14))
if mibBuilder.loadTexts: isc303.setStatus('current')
if mibBuilder.loadTexts: isc303.setDescription('ISC-303 ADSL subsystem based on modified legacy ISC-303 TDM platform. The ISC-303 ADSL system provides up to 60 ADSL ports spread over 24 line cards. The system is fed by two T1 lines. The T1 IMA uplink operates on half of the eCTU card and the ADSL operates on half of each of the ADSL line cards. This system does not offer any subscriber voice services.')
r100adsl2Pxxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15))
if mibBuilder.loadTexts: r100adsl2Pxxx.setStatus('current')
if mibBuilder.loadTexts: r100adsl2Pxxx.setDescription('R100 ADSL2P family of products.')
r100adsl2pip = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 1))
if mibBuilder.loadTexts: r100adsl2pip.setStatus('current')
if mibBuilder.loadTexts: r100adsl2pip.setDescription('R100 ADSL2P IP.')
r100adsl2phdsl4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 2))
if mibBuilder.loadTexts: r100adsl2phdsl4.setStatus('current')
if mibBuilder.loadTexts: r100adsl2phdsl4.setDescription('R100 ADSL2P HDSL4.')
r100adsl2pt1ima = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 3))
if mibBuilder.loadTexts: r100adsl2pt1ima.setStatus('current')
if mibBuilder.loadTexts: r100adsl2pt1ima.setDescription('R100 ADSL2P T1IMA.')
r100adsl2pgige = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 4))
if mibBuilder.loadTexts: r100adsl2pgige.setStatus('current')
if mibBuilder.loadTexts: r100adsl2pgige.setDescription('R100 ADSL2P GigE.')
r100adsl2pgm = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 5))
if mibBuilder.loadTexts: r100adsl2pgm.setStatus('obsolete')
if mibBuilder.loadTexts: r100adsl2pgm.setDescription('R100 Adsl2P Gm')
r100adsl2pgte = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 6))
if mibBuilder.loadTexts: r100adsl2pgte.setStatus('obsolete')
if mibBuilder.loadTexts: r100adsl2pgte.setDescription('R100 ADSL2P GTE')
r100adsl2panxb = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 15, 7))
if mibBuilder.loadTexts: r100adsl2panxb.setStatus('current')
if mibBuilder.loadTexts: r100adsl2panxb.setDescription('R100 ADSL2P ANXB')
m100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16))
if mibBuilder.loadTexts: m100.setStatus('current')
if mibBuilder.loadTexts: m100.setDescription('M100.')
m100adsl2pxxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 1))
if mibBuilder.loadTexts: m100adsl2pxxx.setStatus('current')
if mibBuilder.loadTexts: m100adsl2pxxx.setDescription('M100 ADSL2P.')
m100adsl2pgige = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 1, 1))
if mibBuilder.loadTexts: m100adsl2pgige.setStatus('current')
if mibBuilder.loadTexts: m100adsl2pgige.setDescription('M100 ADSL2P GigE.')
m100adsl2pgm = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 1, 2))
if mibBuilder.loadTexts: m100adsl2pgm.setStatus('obsolete')
if mibBuilder.loadTexts: m100adsl2pgm.setDescription('M100 Adsl2p Gm')
m100Adsl2pAnxB = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 1, 3))
if mibBuilder.loadTexts: m100Adsl2pAnxB.setStatus('current')
if mibBuilder.loadTexts: m100Adsl2pAnxB.setDescription('MALC 100 ADSL2P ANXB')
m100Vdsl2xxx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 2))
if mibBuilder.loadTexts: m100Vdsl2xxx.setStatus('obsolete')
if mibBuilder.loadTexts: m100Vdsl2xxx.setDescription('M100 Vdsl2')
m100vdsl2gm = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 16, 2, 1))
if mibBuilder.loadTexts: m100vdsl2gm.setStatus('obsolete')
if mibBuilder.loadTexts: m100vdsl2gm.setDescription('M100 Vdsl2 Gm')
r100Vdsl2xx = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 17))
if mibBuilder.loadTexts: r100Vdsl2xx.setStatus('obsolete')
if mibBuilder.loadTexts: r100Vdsl2xx.setDescription('Raptor 100 Vdsl2 series')
r100vdsl2gm = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 17, 1))
if mibBuilder.loadTexts: r100vdsl2gm.setStatus('obsolete')
if mibBuilder.loadTexts: r100vdsl2gm.setDescription('R100 VDSL2 GM')
fiberSlam = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 18))
if mibBuilder.loadTexts: fiberSlam.setStatus('current')
if mibBuilder.loadTexts: fiberSlam.setDescription('FiberSLAM series.')
fs105 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 18, 1))
if mibBuilder.loadTexts: fs105.setStatus('current')
if mibBuilder.loadTexts: fs105.setDescription('fiberslam-105 provides datacom (2xGigE, 2x10/100) and telecom (16xT1/E1, 3xDS3/E3) traffic mapping over SONET/SDH at 2.5Gbps.')
fs101 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 18, 2))
if mibBuilder.loadTexts: fs101.setStatus('current')
if mibBuilder.loadTexts: fs101.setDescription('fiberslam-101 provides datacom (2xGigE, 2x10/100) and telecom (16xT1/E1) traffic mapping over SONET/SDH at 2.5Gbps.')
raptorXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19))
if mibBuilder.loadTexts: raptorXP.setStatus('current')
if mibBuilder.loadTexts: raptorXP.setDescription('Raptor XP family')
raptorXP150A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 1))
if mibBuilder.loadTexts: raptorXP150A.setStatus('current')
if mibBuilder.loadTexts: raptorXP150A.setDescription('Raptor-XP-150-A, the Raptor Adsl2 board')
raptorXP150A_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 1, 1))
if mibBuilder.loadTexts: raptorXP150A_ISP.setStatus('current')
if mibBuilder.loadTexts: raptorXP150A_ISP.setDescription('Raptor-150A Indoor Unit')
raptorXP150A_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 1, 2))
if mibBuilder.loadTexts: raptorXP150A_OSP.setStatus('current')
if mibBuilder.loadTexts: raptorXP150A_OSP.setDescription('Raptor-150A Outdoor Unit')
raptorXP350A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 2))
if mibBuilder.loadTexts: raptorXP350A.setStatus('current')
if mibBuilder.loadTexts: raptorXP350A.setDescription('Raptor-XP-350-A, the Raptor Adsl2 T1/E1 board')
raptorXP350A_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 2, 1))
if mibBuilder.loadTexts: raptorXP350A_ISP.setStatus('current')
if mibBuilder.loadTexts: raptorXP350A_ISP.setDescription('Raptor-XP-350A Indoor Unit')
raptorXP350A_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 2, 2))
if mibBuilder.loadTexts: raptorXP350A_OSP.setStatus('current')
if mibBuilder.loadTexts: raptorXP350A_OSP.setDescription('Raptor-XP-350A Outdoor Unit')
raptorXP160 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 3))
if mibBuilder.loadTexts: raptorXP160.setStatus('current')
if mibBuilder.loadTexts: raptorXP160.setDescription('Raptor-XP-160, the Raptor Vdsl2 board')
raptorXP160_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 3, 1))
if mibBuilder.loadTexts: raptorXP160_ISP.setStatus('current')
if mibBuilder.loadTexts: raptorXP160_ISP.setDescription('Raptor-XP-160 Indoor Unit')
raptorXP160_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 3, 2))
if mibBuilder.loadTexts: raptorXP160_OSP.setStatus('current')
if mibBuilder.loadTexts: raptorXP160_OSP.setDescription('Raptor-XP-160 Outdoor Unit')
raptorXP170 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4))
if mibBuilder.loadTexts: raptorXP170.setStatus('current')
if mibBuilder.loadTexts: raptorXP170.setDescription('Raptor-XP-170, the Raptor SHDSL board')
raptorXP170_WC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 1))
if mibBuilder.loadTexts: raptorXP170_WC.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_WC.setDescription('Raptor-XP-170 with Wetting Current')
raptorXP170_ISP_WC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 1, 1))
if mibBuilder.loadTexts: raptorXP170_ISP_WC.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_ISP_WC.setDescription('Raptor-XP-170 Indoor Unit with Wetting Current')
raptorXP170_OSP_WC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 1, 2))
if mibBuilder.loadTexts: raptorXP170_OSP_WC.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_OSP_WC.setDescription('Raptor-XP-170 Outdoor Unit with Wetting Current')
raptorXP170_WC_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 2))
if mibBuilder.loadTexts: raptorXP170_WC_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_WC_SD.setDescription('Raptor-XP-170 with Wetting Current and SELT/DELT')
raptorXP170_ISP_WC_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 2, 1))
if mibBuilder.loadTexts: raptorXP170_ISP_WC_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_ISP_WC_SD.setDescription('Raptor-XP-170 Indoor Unit with Wetting Current and SELT/DELT')
raptorXP170_OSP_WC_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 2, 2))
if mibBuilder.loadTexts: raptorXP170_OSP_WC_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_OSP_WC_SD.setDescription('Raptor-XP-170 Outdoor Unit with Wetting Current and SELT/DELT')
raptorXP170_LP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 3))
if mibBuilder.loadTexts: raptorXP170_LP.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_LP.setDescription('Raptor-XP-170 with Line Power')
raptorXP170_ISP_LP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 3, 1))
if mibBuilder.loadTexts: raptorXP170_ISP_LP.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_ISP_LP.setDescription('Raptor-XP-170 Indoor Unit with Line Power')
raptorXP170_OSP_LP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 3, 2))
if mibBuilder.loadTexts: raptorXP170_OSP_LP.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_OSP_LP.setDescription('Raptor-XP-170 Outdoor Unit with Line Power')
raptorXP170_LP_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 4))
if mibBuilder.loadTexts: raptorXP170_LP_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_LP_SD.setDescription('Raptor-XP-170 with Line Power and SELT/DELT')
raptorXP170_ISP_LP_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 4, 1))
if mibBuilder.loadTexts: raptorXP170_ISP_LP_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_ISP_LP_SD.setDescription('Raptor-XP-170 Indoor Unit with Line Power and SELT/DELT')
raptorXP170_OSP_LP_SD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 19, 4, 4, 2))
if mibBuilder.loadTexts: raptorXP170_OSP_LP_SD.setStatus('current')
if mibBuilder.loadTexts: raptorXP170_OSP_LP_SD.setDescription('Raptor-XP-170 Outdoor Unit with Line Power and SELT/DELT')
malcXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20))
if mibBuilder.loadTexts: malcXP.setStatus('current')
if mibBuilder.loadTexts: malcXP.setDescription('Malc-XP family')
malcXP150A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 1))
if mibBuilder.loadTexts: malcXP150A.setStatus('current')
if mibBuilder.loadTexts: malcXP150A.setDescription('Malc-XP-150-A, the Raptor Adsl2 POTS board')
malcXP150A_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 1, 1))
if mibBuilder.loadTexts: malcXP150A_ISP.setStatus('current')
if mibBuilder.loadTexts: malcXP150A_ISP.setDescription('MalcXP150A Indoor Unit')
malcXP150A_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 1, 2))
if mibBuilder.loadTexts: malcXP150A_OSP.setStatus('current')
if mibBuilder.loadTexts: malcXP150A_OSP.setDescription('MalcXP150A Outdoor Unit')
malcXP350A = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 4))
if mibBuilder.loadTexts: malcXP350A.setStatus('current')
if mibBuilder.loadTexts: malcXP350A.setDescription('Malc-XP-350-A, the Raptor Adsl2 POTS T1/E1 board')
malcXP350A_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 4, 1))
if mibBuilder.loadTexts: malcXP350A_ISP.setStatus('current')
if mibBuilder.loadTexts: malcXP350A_ISP.setDescription('Malc-XP-350A Indoor Unit')
malcXP350A_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 4, 2))
if mibBuilder.loadTexts: malcXP350A_OSP.setStatus('current')
if mibBuilder.loadTexts: malcXP350A_OSP.setDescription('Malc-XP-350A Outdoor Unit')
malcXP160 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 5))
if mibBuilder.loadTexts: malcXP160.setStatus('current')
if mibBuilder.loadTexts: malcXP160.setDescription('Malc-XP-160, the Raptor Vdsl2 POTS board')
malcXP160_ISP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 5, 1))
if mibBuilder.loadTexts: malcXP160_ISP.setStatus('current')
if mibBuilder.loadTexts: malcXP160_ISP.setDescription('Malc-XP-160 Indoor Unit')
malcXP160_OSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 6, 20, 5, 2))
if mibBuilder.loadTexts: malcXP160_OSP.setStatus('current')
if mibBuilder.loadTexts: malcXP160_OSP.setDescription('Malc-XP-160 Outdoor Unit')
zhoneRegMxNextGen = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7))
if mibBuilder.loadTexts: zhoneRegMxNextGen.setStatus('current')
if mibBuilder.loadTexts: zhoneRegMxNextGen.setDescription('Next Generation MALC')
mx19 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 1))
if mibBuilder.loadTexts: mx19.setStatus('current')
if mibBuilder.loadTexts: mx19.setDescription('Mx Next Gen 19 inch.')
mx23 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 2))
if mibBuilder.loadTexts: mx23.setStatus('current')
if mibBuilder.loadTexts: mx23.setDescription('Mx Next Gen 23 inch.')
mx319 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 3))
if mibBuilder.loadTexts: mx319.setStatus('current')
if mibBuilder.loadTexts: mx319.setDescription('Mx Next Gen 3U 19 inch.')
mx1U = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4))
if mibBuilder.loadTexts: mx1U.setStatus('current')
if mibBuilder.loadTexts: mx1U.setDescription('MX1U Product Family')
mx1Ux6x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1))
if mibBuilder.loadTexts: mx1Ux6x.setStatus('current')
if mibBuilder.loadTexts: mx1Ux6x.setDescription('MX1U x6x Product Family')
mx1U16x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 1))
if mibBuilder.loadTexts: mx1U16x.setStatus('current')
if mibBuilder.loadTexts: mx1U16x.setDescription('MX1U 16x Product Family')
mx1U160 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 1, 1))
if mibBuilder.loadTexts: mx1U160.setStatus('current')
if mibBuilder.loadTexts: mx1U160.setDescription('MX 160 - 24 VDSL2, 4 FE/GE')
mx1U161 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 1, 2))
if mibBuilder.loadTexts: mx1U161.setStatus('current')
if mibBuilder.loadTexts: mx1U161.setDescription('MX 161 - 24 VDSL2, 24 POTS SPLT (600 Ohm), 4 FE/GE')
mx1U162 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 1, 3))
if mibBuilder.loadTexts: mx1U162.setStatus('current')
if mibBuilder.loadTexts: mx1U162.setDescription('MX 162 - 24 VDSL2, 24 POTS SPLT (900 Ohm), 4 FE/GE')
mx1U26x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 2))
if mibBuilder.loadTexts: mx1U26x.setStatus('current')
if mibBuilder.loadTexts: mx1U26x.setDescription('MX1U 26x Product Family')
mx1U260 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 2, 1))
if mibBuilder.loadTexts: mx1U260.setStatus('current')
if mibBuilder.loadTexts: mx1U260.setDescription('MX 260 - 24 VDSL2, 3 FE/GE, 1 GPON')
mx1U261 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 2, 2))
if mibBuilder.loadTexts: mx1U261.setStatus('current')
if mibBuilder.loadTexts: mx1U261.setDescription('MX 261 - 24 VDSL2, 24 POTS SPLT (600 Ohm), 3 FE/GE, 1 GPON')
mx1U262 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 1, 2, 3))
if mibBuilder.loadTexts: mx1U262.setStatus('current')
if mibBuilder.loadTexts: mx1U262.setDescription('MX 262 - 24 VDSL2, 24 POTS SPLT (900 Ohm), 3 FE/GE, 1 GPON')
mx1Ux80 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2))
if mibBuilder.loadTexts: mx1Ux80.setStatus('current')
if mibBuilder.loadTexts: mx1Ux80.setDescription('MX1U x80 Product Family')
mx1U180 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 1))
if mibBuilder.loadTexts: mx1U180.setStatus('current')
if mibBuilder.loadTexts: mx1U180.setDescription('MX 180 - 24 FE, 2 FE/GE')
mx1U280 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 2))
if mibBuilder.loadTexts: mx1U280.setStatus('current')
if mibBuilder.loadTexts: mx1U280.setDescription('MX 280 - 24 FE, 2 FE/GE, 1 GPON')
mx1U180_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 3))
if mibBuilder.loadTexts: mx1U180_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mx1U180_TP_RJ45.setDescription('MX 180 TP-RJ45 - 24 FE, 4 FE/GE')
mx1U280_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 4))
if mibBuilder.loadTexts: mx1U280_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mx1U280_TP_RJ45.setDescription('MX 280 TP-RJ45 - 24 FE, 3 FE/GE, 1 GPON')
mx1U180_LT_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 5))
if mibBuilder.loadTexts: mx1U180_LT_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mx1U180_LT_TP_RJ45.setDescription('MX 180 LT-TP-RJ45 - 24 FE, 4 FE/GE')
mx1U280_LT_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 2, 6))
if mibBuilder.loadTexts: mx1U280_LT_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mx1U280_LT_TP_RJ45.setDescription('MX 280 LT-TP-RJ45 - 24 FE, 3 FE/GE, 1 GPON')
mx1U19x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3))
if mibBuilder.loadTexts: mx1U19x.setStatus('current')
if mibBuilder.loadTexts: mx1U19x.setDescription('MXK 19x Product Family')
mx1U194 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 1))
if mibBuilder.loadTexts: mx1U194.setStatus('current')
if mibBuilder.loadTexts: mx1U194.setDescription('MXK 194 - 4 GPON OLT, 8 FE/GE')
mx1U198 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 2))
if mibBuilder.loadTexts: mx1U198.setStatus('current')
if mibBuilder.loadTexts: mx1U198.setDescription('MXK 198 - 8 GPON OLT, 8 FE/GE')
mx1U194_10GE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 3))
if mibBuilder.loadTexts: mx1U194_10GE.setStatus('current')
if mibBuilder.loadTexts: mx1U194_10GE.setDescription('MXK 194-10GE - 4 GPON OLT, 8 FE/GE, 2 10GE')
mx1U198_10GE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 4))
if mibBuilder.loadTexts: mx1U198_10GE.setStatus('current')
if mibBuilder.loadTexts: mx1U198_10GE.setDescription('MXK 198-10GE - 8 GPON OLT, 8 FE/GE, 2 10GE')
mx1U194_TOP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 5))
if mibBuilder.loadTexts: mx1U194_TOP.setStatus('current')
if mibBuilder.loadTexts: mx1U194_TOP.setDescription('MXK 194-TOP - 4 GPON OLT, 8 FE/GE, TOP')
mx1U198_TOP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 6))
if mibBuilder.loadTexts: mx1U198_TOP.setStatus('current')
if mibBuilder.loadTexts: mx1U198_TOP.setDescription('MXK 198-TOP - 8 GPON OLT, 8 FE/GE, TOP')
mx1U194_10GE_TOP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 7))
if mibBuilder.loadTexts: mx1U194_10GE_TOP.setStatus('current')
if mibBuilder.loadTexts: mx1U194_10GE_TOP.setDescription('MXK 194-10GE-TOP - 4 GPON OLT, 8 FE/GE, 2 10GE, TOP')
mx1U198_10GE_TOP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 3, 8))
if mibBuilder.loadTexts: mx1U198_10GE_TOP.setStatus('current')
if mibBuilder.loadTexts: mx1U198_10GE_TOP.setDescription('MXK 198-10GE-TOP - 8 GPON OLT, 8 FE/GE, 2 10GE, TOP')
mx1Ux5x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 4))
if mibBuilder.loadTexts: mx1Ux5x.setStatus('current')
if mibBuilder.loadTexts: mx1Ux5x.setDescription('Description.')
mx1U15x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 4, 1))
if mibBuilder.loadTexts: mx1U15x.setStatus('current')
if mibBuilder.loadTexts: mx1U15x.setDescription('Description.')
mx1U150 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 4, 1, 1))
if mibBuilder.loadTexts: mx1U150.setStatus('current')
if mibBuilder.loadTexts: mx1U150.setDescription('Description.')
mx1U151 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 4, 1, 2))
if mibBuilder.loadTexts: mx1U151.setStatus('current')
if mibBuilder.loadTexts: mx1U151.setDescription('Description.')
mx1U152 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 4, 4, 1, 3))
if mibBuilder.loadTexts: mx1U152.setStatus('current')
if mibBuilder.loadTexts: mx1U152.setDescription('Description.')
mxp1U = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5))
if mibBuilder.loadTexts: mxp1U.setStatus('current')
if mibBuilder.loadTexts: mxp1U.setDescription('MXP1U Product Family')
mxp1Ux60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 1))
if mibBuilder.loadTexts: mxp1Ux60.setStatus('current')
if mibBuilder.loadTexts: mxp1Ux60.setDescription('MXP1U x60 Product Family')
mxp1U160Family = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 1, 1))
if mibBuilder.loadTexts: mxp1U160Family.setStatus('current')
if mibBuilder.loadTexts: mxp1U160Family.setDescription('MXP1U 160 Product Family')
mxp1U160 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 1, 1, 1))
if mibBuilder.loadTexts: mxp1U160.setStatus('current')
if mibBuilder.loadTexts: mxp1U160.setDescription('MXP 160 - 24 VDSL2, 24 POTS VOIP, 4 FE/GE')
mxp1U260Family = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 1, 2))
if mibBuilder.loadTexts: mxp1U260Family.setStatus('current')
if mibBuilder.loadTexts: mxp1U260Family.setDescription('MXP1U 260 Product Family')
mxp1U260 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 1, 2, 1))
if mibBuilder.loadTexts: mxp1U260.setStatus('current')
if mibBuilder.loadTexts: mxp1U260.setDescription('MXP 260 - 24 VDSL2, 24 POTS VOIP, 3 FE/GE, 1 GPON')
mxp1Ux80 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 2))
if mibBuilder.loadTexts: mxp1Ux80.setStatus('current')
if mibBuilder.loadTexts: mxp1Ux80.setDescription('MXP1U x80 Product Family')
mxp1U180 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 2, 1))
if mibBuilder.loadTexts: mxp1U180.setStatus('current')
if mibBuilder.loadTexts: mxp1U180.setDescription('MXP 180 - 24 FE, 24 POTS VOIP, 2 FE/GE')
mxp1U280 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 2, 2))
if mibBuilder.loadTexts: mxp1U280.setStatus('current')
if mibBuilder.loadTexts: mxp1U280.setDescription('MXP 280 - 24 FE, 24 POTS VOIP, 2 FE/GE, 1 GPON')
mxp1U180_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 2, 3))
if mibBuilder.loadTexts: mxp1U180_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mxp1U180_TP_RJ45.setDescription('MXP 180 TP-RJ45 - 24 FE, 24 POTS VOIP, 4 FE/GE')
mxp1U280_TP_RJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 2, 4))
if mibBuilder.loadTexts: mxp1U280_TP_RJ45.setStatus('current')
if mibBuilder.loadTexts: mxp1U280_TP_RJ45.setDescription('MXP 280 TP-RJ45 - 24 FE, 24 POTS VOIP, 3 FE/GE, 1 GPON')
mxp1Ux5x = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 3))
if mibBuilder.loadTexts: mxp1Ux5x.setStatus('current')
if mibBuilder.loadTexts: mxp1Ux5x.setDescription('Description.')
mxp1U15xFamily = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 3, 1))
if mibBuilder.loadTexts: mxp1U15xFamily.setStatus('current')
if mibBuilder.loadTexts: mxp1U15xFamily.setDescription('Description.')
mxp1U150 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 1, 7, 5, 3, 1, 1))
if mibBuilder.loadTexts: mxp1U150.setStatus('current')
if mibBuilder.loadTexts: mxp1U150.setDescription('Description.')
mibBuilder.exportSymbols("ZhoneProductRegistrations", znidNextGenGPON21xx=znidNextGenGPON21xx, oduTypeE3A=oduTypeE3A, malcXP350A=malcXP350A, mx1U26x=mx1U26x, mx1U151=mx1U151, mx1U161=mx1U161, znid42xx=znid42xx, skyZhone45=skyZhone45, znidGPON42xx=znidGPON42xx, zedge6200_IP_T1=zedge6200_IP_T1, zhoneRegistrationsModule=zhoneRegistrationsModule, znidNextGenGE24xx=znidNextGenGE24xx, mx23=mx23, skyZhone155s1=skyZhone155s1, oduTypeE1A=oduTypeE1A, zrg7xx=zrg7xx, znidNextGen42xx=znidNextGen42xx, mx1U280_TP_RJ45=mx1U280_TP_RJ45, raptor50Gshdsl=raptor50Gshdsl, skyZhone8e2=skyZhone8e2, raptor719A=raptor719A, raptorXP170_OSP_LP_SD=raptorXP170_OSP_LP_SD, mx1U262=mx1U262, fs105=fs105, znidNextGenGE97xx=znidNextGenGE97xx, zrg8xx=zrg8xx, znidNextGenGE21xx=znidNextGenGE21xx, raptor100LP=raptor100LP, malcXP160_ISP=malcXP160_ISP, oduTypeE2B=oduTypeE2B, mx1U198=mx1U198, mx1U194_10GE=mx1U194_10GE, znidNextGenGE42xx=znidNextGenGE42xx, znidNextGen22xx=znidNextGen22xx, ethXtendxx=ethXtendxx, oduTypeE1B=oduTypeE1B, skyZhone155s4=skyZhone155s4, raptorXP150A=raptorXP150A, raptorXP170_OSP_WC_SD=raptorXP170_OSP_WC_SD, mxp1U280_TP_RJ45=mxp1U280_TP_RJ45, ethXtend31xx=ethXtend31xx, mx1U261=mx1U261, zrg3xx=zrg3xx, oduTypeS2B=oduTypeS2B, mx1U180_TP_RJ45=mx1U180_TP_RJ45, raptorXP170_ISP_LP_SD=raptorXP170_ISP_LP_SD, s100_ATM_SM_16E1=s100_ATM_SM_16E1, mx1Ux80=mx1Ux80, z_plex10B_FXS_FXO=z_plex10B_FXS_FXO, skyZhone8t4=skyZhone8t4, mx19=mx19, PYSNMP_MODULE_ID=zhoneRegistrationsModule, znidEth422x=znidEth422x, fiberJack=fiberJack, mx1Ux6x=mx1Ux6x, mx1U162=mx1U162, znid=znid, raptor100A=raptor100A, mx1U194_TOP=mx1U194_TOP, raptorXP350A_OSP=raptorXP350A_OSP, mxp1U180=mxp1U180, oduTypeT1B=oduTypeT1B, raptor723I=raptor723I, r100adsl2panxb=r100adsl2panxb, skyZhone155s3=skyZhone155s3, zrg600_IDU=zrg600_IDU, raptorXP170_ISP_WC=raptorXP170_ISP_WC, malcXP160_OSP=malcXP160_OSP, sechtor_300=sechtor_300, mx1U198_10GE_TOP=mx1U198_10GE_TOP, oduTypeE4A=oduTypeE4A, zrg500_ODU=zrg500_ODU, oduTypeS3A=oduTypeS3A, zedge6200_IP_FXS=zedge6200_IP_FXS, oduTypeE3B=oduTypeE3B, ethXtend30xx=ethXtend30xx, znidNextGenGE26xx=znidNextGenGE26xx, znidNextGenGPON26xx=znidNextGenGPON26xx, mxp1U180_TP_RJ45=mxp1U180_TP_RJ45, oduTypeE2A=oduTypeE2A, oduTypeS2A=oduTypeS2A, znid420x=znid420x, mx1U=mx1U, zrg500_IDU=zrg500_IDU, z_plex10B_FXS=z_plex10B_FXS, r100adsl2pip=r100adsl2pip, mxp1U260Family=mxp1U260Family, znidGPON420x=znidGPON420x, fs101=fs101, zrg800_ODU=zrg800_ODU, raptorXP160_ISP=raptorXP160_ISP, mxp1U160=mxp1U160, mxp1U=mxp1U, raptorXP170_LP_SD=raptorXP170_LP_SD, zrg600_ODU=zrg600_ODU, skyZhone8t1=skyZhone8t1, zedge64=zedge64, znidNextGenGPON97xx=znidNextGenGPON97xx, skyZhone1xxx=skyZhone1xxx, r100adsl2pgm=r100adsl2pgm, r100Vdsl2xx=r100Vdsl2xx, mxp1Ux60=mxp1Ux60, raptorXP170=raptorXP170, malcXP350A_ISP=malcXP350A_ISP, raptor319A=raptor319A, oduTypeT2B=oduTypeT2B, raptorXP160=raptorXP160, raptorXP350A_ISP=raptorXP350A_ISP, zedge64_SHDSL_FXS=zedge64_SHDSL_FXS, mx1U198_10GE=mx1U198_10GE, mx1U180_LT_TP_RJ45=mx1U180_LT_TP_RJ45, node23000Mhz=node23000Mhz, fiberSlam=fiberSlam, mx1U152=mx1U152, malcXP=malcXP, mx1U280_LT_TP_RJ45=mx1U280_LT_TP_RJ45, mx1U16x=mx1U16x, ethXtendShdsl=ethXtendShdsl, znidNextGen26xx=znidNextGen26xx, ethXtendT1E1=ethXtendT1E1, znidNextGen9xxx=znidNextGen9xxx, zedge64_E1_FXS=zedge64_E1_FXS, malc23=malc23, isc303=isc303, skyZhone8t3=skyZhone8t3, zrg700_ODU=zrg700_ODU, oduTypeT1A=oduTypeT1A, raptorXP170_WC=raptorXP170_WC, malcXP150A_ISP=malcXP150A_ISP, zedge6200_IP_EM=zedge6200_IP_EM, raptorXP170_LP=raptorXP170_LP, raptorXP=raptorXP, mxp1U160Family=mxp1U160Family, oduTypeS1A=oduTypeS1A, znidNextGenGPON24xx=znidNextGenGPON24xx, znidNextGenGE9xxx=znidNextGenGE9xxx, raptorXP150A_ISP=raptorXP150A_ISP, skyZhone155s2=skyZhone155s2, r100adsl2pgte=r100adsl2pgte, raptorXP350A=raptorXP350A, zhoneRegMxNextGen=zhoneRegMxNextGen, mx1U280=mx1U280, mxp1U280=mxp1U280, raptor719I=raptor719I, m100adsl2pgm=m100adsl2pgm, mx319=mx319, zedge6200=zedge6200, m100Adsl2pAnxB=m100Adsl2pAnxB, zrg300_ODU=zrg300_ODU, m100adsl2pgige=m100adsl2pgige, malcXP160=malcXP160, znidNextGenGPON42xx=znidNextGenGPON42xx, mxp1U260=mxp1U260, m100Vdsl2xxx=m100Vdsl2xxx, skyZhone8t2=skyZhone8t2, oduTypeS3B=oduTypeS3B, zedge64_SHDSL_BRI=zedge64_SHDSL_BRI, mx1U160=mx1U160, sechtor_100=sechtor_100, oduTypeT3A=oduTypeT3A, oduTypeB=oduTypeB, raptor319I=raptor319I, zrg300_IDU=zrg300_IDU, m100=m100, mx1U194=mx1U194, zedge64_T1_FXS=zedge64_T1_FXS, oduTypeS4A=oduTypeS4A, skyZhone8e3=skyZhone8e3, malc19=malc19, malcXP350A_OSP=malcXP350A_OSP, r100adsl2phdsl4=r100adsl2phdsl4, r100adsl2Pxxx=r100adsl2Pxxx, oduTypeE4B=oduTypeE4B, raptor100I=raptor100I, r100adsl2pgige=r100adsl2pgige, raptorXP150A_OSP=raptorXP150A_OSP, s100_ATM_SM_16T1=s100_ATM_SM_16T1, znidNextGenGE22xx=znidNextGenGE22xx, m100adsl2pxxx=m100adsl2pxxx, zrg6xx=zrg6xx, oduTypeT4A=oduTypeT4A, zrg800_IDU=zrg800_IDU, r100adsl2pt1ima=r100adsl2pt1ima, raptorXP170_ISP_LP=raptorXP170_ISP_LP, mxp1U150=mxp1U150, oduTypeT3B=oduTypeT3B, oduTypeT2A=oduTypeT2A, mxp1Ux80=mxp1Ux80, znidNextGen24xx=znidNextGen24xx, m100vdsl2gm=m100vdsl2gm, ban_2000=ban_2000, zhoneRegWtn=zhoneRegWtn, mx1Ux5x=mx1Ux5x, raptorXP170_OSP_WC=raptorXP170_OSP_WC, raptorXP170_OSP_LP=raptorXP170_OSP_LP, oduTypeT4B=oduTypeT4B, oduTypeS1B=oduTypeS1B, znidNextGenGPON94xx=znidNextGenGPON94xx, raptorXP160_OSP=raptorXP160_OSP, mx1U260=mx1U260, mx1U194_10GE_TOP=mx1U194_10GE_TOP, mxp1Ux5x=mxp1Ux5x, znidNextGenGPON9xxx=znidNextGenGPON9xxx, skyZhone8e1=skyZhone8e1, mx1U198_TOP=mx1U198_TOP, zrg5xx=zrg5xx, malc319=malc319, mx1U150=mx1U150, mx1U19x=mx1U19x, r100vdsl2gm=r100vdsl2gm, znidNextGen=znidNextGen, raptor723A=raptor723A, skyZhone8e4=skyZhone8e4, znidNextGen21xx=znidNextGen21xx, ethXtend32xx=ethXtend32xx, oduTypeA=oduTypeA, oduTypeS4B=oduTypeS4B, mx1U180=mx1U180, malcXP150A_OSP=malcXP150A_OSP, z_plex10B=z_plex10B, raptorXP170_ISP_WC_SD=raptorXP170_ISP_WC_SD, znidNextGenGE94xx=znidNextGenGE94xx, node5700Mhz=node5700Mhz, zrg700_IDU=zrg700_IDU, malcXP150A=malcXP150A, mx1U15x=mx1U15x, raptorXP170_WC_SD=raptorXP170_WC_SD, mxp1U15xFamily=mxp1U15xFamily)
