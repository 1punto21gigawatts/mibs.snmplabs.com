#
# PySNMP MIB module CTRON-IMIM-ADDRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CTRON-IMIM-ADDRESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:30:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, ObjectIdentity, ModuleIdentity, Integer32, Bits, MibIdentifier, iso, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, enterprises, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Integer32", "Bits", "MibIdentifier", "iso", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "enterprises", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cabletron = MibIdentifier((1, 3, 6, 1, 4, 1, 52))
commsDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1))
subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6))
backplaneProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 5))
imimAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1))
imimAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 1), )
if mibBuilder.loadTexts: imimAddressTable.setStatus('mandatory')
if mibBuilder.loadTexts: imimAddressTable.setDescription('This table provides the IP and MAC address for each IMIM within a MMAC chassis.')
imimAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 1, 1), ).setIndexNames((0, "CTRON-IMIM-ADDRESS-MIB", "imimAddressChassisSlot"))
if mibBuilder.loadTexts: imimAddressEntry.setStatus('mandatory')
if mibBuilder.loadTexts: imimAddressEntry.setDescription('A specific IMIM address entry.')
imimAddressChassisSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imimAddressChassisSlot.setStatus('mandatory')
if mibBuilder.loadTexts: imimAddressChassisSlot.setDescription('The chassis slot number where the intelligent MIM resides to which this entry pertains.')
imimAddressMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: imimAddressMAC.setStatus('mandatory')
if mibBuilder.loadTexts: imimAddressMAC.setDescription('The MAC address of the intelligent MIM residing in the slot indexed by imimAddressChassisSlot.')
imimAddressIP = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: imimAddressIP.setStatus('mandatory')
if mibBuilder.loadTexts: imimAddressIP.setDescription('The IP address of the intelligent MIM residing in the slot indexed by imimAddressChassisSlot.')
backplaneHeartbeat = MibScalar((1, 3, 6, 1, 4, 1, 52, 1, 6, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("heartBeatPresent", 1), ("heartBeatAbsent", 2), ("notSupported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backplaneHeartbeat.setStatus('mandatory')
if mibBuilder.loadTexts: backplaneHeartbeat.setDescription('This object reports on the status of the backplane protocol heartbeat. This object is applicable only to intelligent MIMs residing in an MMAC chassis. If the heartbeat is detected from the management module (i.e. the intelligent MIM is in communication with the management module) then the value returned by this object is heartBeatPresent(1). If the heartbeat is not present, then the returned value is heartBeatAbsent(2). On intelligent MIMs that do not support the backplane protocol and management modules the value notSupported(3) is returned.')
mibBuilder.exportSymbols("CTRON-IMIM-ADDRESS-MIB", cabletron=cabletron, backplaneHeartbeat=backplaneHeartbeat, commsDevice=commsDevice, imimAddressChassisSlot=imimAddressChassisSlot, imimAddressTable=imimAddressTable, imimAddressMAC=imimAddressMAC, imimAddressIP=imimAddressIP, backplaneProtocol=backplaneProtocol, imimAddressEntry=imimAddressEntry, subsystem=subsystem, imimAddress=imimAddress)
