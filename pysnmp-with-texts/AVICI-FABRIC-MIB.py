#
# PySNMP MIB module AVICI-FABRIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-FABRIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:32:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
aviciSlotIndex, aviciBayIndex = mibBuilder.importSymbols("AVICI-BAY-MIB", "aviciSlotIndex", "aviciBayIndex")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
AviciSlotType, AviciFabricLinkType, AviciModuleName, AviciRevisionType, AviciBayType = mibBuilder.importSymbols("AVICI-TC", "AviciSlotType", "AviciFabricLinkType", "AviciModuleName", "AviciRevisionType", "AviciBayType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, TimeTicks, Counter32, Bits, ObjectIdentity, ModuleIdentity, NotificationType, Counter64, Gauge32, Integer32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "TimeTicks", "Counter32", "Bits", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Counter64", "Gauge32", "Integer32", "iso", "MibIdentifier")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
aviciFabricMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 8))
aviciFabricMIB.setRevisions(('0009-05-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aviciFabricMIB.setRevisionsDescriptions(('The MIB module for the Avici Proprietary fabric MIB.',))
if mibBuilder.loadTexts: aviciFabricMIB.setLastUpdated('000905130000Z')
if mibBuilder.loadTexts: aviciFabricMIB.setOrganization('Avici Systems Inc.')
if mibBuilder.loadTexts: aviciFabricMIB.setContactInfo(' Avici Systems, Inc. 101 Billerica Avenue North Billerica, MA 01862 (978) 964-2000 (978) 964-2100 (fax) snmp@avici.com')
if mibBuilder.loadTexts: aviciFabricMIB.setDescription('Added compliance information.')
aviciFabricObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1))
aviciFabricGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 2))
aviciFabricCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1))
aviciFabricConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2))
aviciFabricRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3))
aviciFabricHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 8, 2, 1), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricHardwareVersion.setStatus('current')
if mibBuilder.loadTexts: aviciFabricHardwareVersion.setDescription('The current hardware version of the fabric.')
aviciFabricRoutingProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 8, 2, 2), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricRoutingProtocolVersion.setStatus('current')
if mibBuilder.loadTexts: aviciFabricRoutingProtocolVersion.setDescription('The current fabric routing protocol version used on the fabric.')
aviciFabricCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1), )
if mibBuilder.loadTexts: aviciFabricCountersTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricCountersTable.setDescription('This table contains fabric counters for inserted and forwarded packets/flits.')
aviciFabricCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricLinkIndex"))
if mibBuilder.loadTexts: aviciFabricCountersEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricCountersEntry.setDescription('.')
aviciFabricHiPriPktsInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricHiPriPktsInserted.setStatus('current')
if mibBuilder.loadTexts: aviciFabricHiPriPktsInserted.setDescription('High priority packets inserted into the fabric from an input framer and destined for some other module in the system.')
aviciFabricLoPriPktsInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLoPriPktsInserted.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLoPriPktsInserted.setDescription('Low priority packets inserted into the fabric from an input framer and destined for some other module in the system.')
aviciFabricHiPriPktsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricHiPriPktsForwarded.setStatus('current')
if mibBuilder.loadTexts: aviciFabricHiPriPktsForwarded.setDescription('High priority packets forwarded through this module.')
aviciFabricLoPriPktsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLoPriPktsForwarded.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLoPriPktsForwarded.setDescription('Low priority packets forwarded through this module.')
aviciFabricHiPriFlitsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricHiPriFlitsForwarded.setStatus('current')
if mibBuilder.loadTexts: aviciFabricHiPriFlitsForwarded.setDescription('High priority flits (parts of packets) forwarded through this module.')
aviciFabricLoPriFlitsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLoPriFlitsForwarded.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLoPriFlitsForwarded.setDescription('Low priority flits (parts of packets) forwarded through this module.')
aviciFabricExtractedCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2), )
if mibBuilder.loadTexts: aviciFabricExtractedCountersTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedCountersTable.setDescription('This table contains fabric extracted counters.')
aviciFabricExtractedCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricLinkIndex"))
if mibBuilder.loadTexts: aviciFabricExtractedCountersEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedCountersEntry.setDescription('An entry in the Avici Fabric Extracted Counters table.')
aviciFabricExtractedHiPriPktsSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedHiPriPktsSelf.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedHiPriPktsSelf.setDescription('High priority packets extracted from the fabric whose destination is this module.')
aviciFabricExtractedLoPriPktsSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedLoPriPktsSelf.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedLoPriPktsSelf.setDescription('Low priority packets extracted from the fabric whose destination is this module.')
aviciFabricExtractedHiPriPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedHiPriPkts.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedHiPriPkts.setDescription('High priority packets extracted from the fabric whose destination is this module.')
aviciFabricExtractedLoPriPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedLoPriPkts.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedLoPriPkts.setDescription('Low priority packets extracted from the fabric whose destination is this module.')
aviciFabricExtractedHiPriFlits = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedHiPriFlits.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedHiPriFlits.setDescription('High priority flits (parts of packets) extracted from the fabric whose destination is this module.')
aviciFabricExtractedLoPriFlits = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricExtractedLoPriFlits.setStatus('current')
if mibBuilder.loadTexts: aviciFabricExtractedLoPriFlits.setDescription('Low priority flits (parts of packets) extracted from the fabric whose destination is this module.')
aviciFabricLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1), )
if mibBuilder.loadTexts: aviciFabricLinkTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkTable.setDescription('This table contains information for a fabric link.')
aviciFabricLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricLinkIndex"))
if mibBuilder.loadTexts: aviciFabricLinkEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkEntry.setDescription('An entry in the Avici Fabric Link table.')
aviciFabricLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 1), AviciFabricLinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkIndex.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkIndex.setDescription('The index of the fabric link.')
aviciFabricLinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkDescr.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkDescr.setDescription('A string containing a description of the link. This string could contain name of the module at the other end of this link. Example: Plus X link to module 1/22')
aviciFabricLinkAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aviciFabricLinkAdminStatus.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkAdminStatus.setDescription('The current administrative state of the link.')
aviciFabricLinkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("admin-down", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkOperStatus.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkOperStatus.setDescription('The current operational state of the link.')
aviciFabricLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkSpeed.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkSpeed.setDescription('The speed of the fabric link in units of 1 Mb/s.')
aviciFabricLinkCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkCRCErrors.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkCRCErrors.setDescription('The number of CRC errors on the link.')
aviciFabricLinkDownTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkDownTransitions.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkDownTransitions.setDescription('The number of times this link has transitioned to the down state.')
aviciFabricLinkLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLinkLastChange.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLinkLastChange.setDescription('The time, in 1/00ths of a second, since this link last changed state.')
aviciFabricChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2), )
if mibBuilder.loadTexts: aviciFabricChannelTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelTable.setDescription('This table contains information about fabric channels.')
aviciFabricChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricChannelIndex"))
if mibBuilder.loadTexts: aviciFabricChannelEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelEntry.setDescription('An entry in the Avici Fabric Channel table.')
aviciFabricChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricChannelIndex.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelIndex.setDescription('The index of the Fabric Channel pair. Each of the Fabric Channels consists of a high and a low priority channel.')
aviciFabricChannelHiPriScrubEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricChannelHiPriScrubEvents.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelHiPriScrubEvents.setDescription('The number of times the high priority Fabric Channel has scrubbed.')
aviciFabricChannelLoPriScrubEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricChannelLoPriScrubEvents.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelLoPriScrubEvents.setDescription('The number of times the low priority Fabric Channel has scrubbed.')
aviciFabricChannelHiPriLastScrubTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricChannelHiPriLastScrubTime.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelHiPriLastScrubTime.setDescription('The time in 1/100ths of a second since the high priority Fabric Channel last scrubbed.')
aviciFabricChannelLoPriLastScrubTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 2, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricChannelLoPriLastScrubTime.setStatus('current')
if mibBuilder.loadTexts: aviciFabricChannelLoPriLastScrubTime.setDescription('The time in 1/100ths of a second since the low priority Fabric Channel last scrubbed.')
aviciFabricLsaTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1), )
if mibBuilder.loadTexts: aviciFabricLsaTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaTable.setDescription('This table contains Fabric Link State Advertisement database.')
aviciFabricLsaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricLsaOriginBay"), (0, "AVICI-FABRIC-MIB", "aviciFabricLsaOriginSlot"))
if mibBuilder.loadTexts: aviciFabricLsaEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaEntry.setDescription('An entry in the Avici Fabric Link State Advertisement table.')
aviciFabricLsaOriginBay = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 1), AviciBayType())
if mibBuilder.loadTexts: aviciFabricLsaOriginBay.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaOriginBay.setDescription('The bay number for the module that originated this entry.')
aviciFabricLsaOriginSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 2), AviciSlotType())
if mibBuilder.loadTexts: aviciFabricLsaOriginSlot.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaOriginSlot.setDescription('The slot number for the module that originated this entry.')
aviciFabricLsaSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaSequenceNum.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaSequenceNum.setDescription('The sequence number for this LSA. Sequence numbers start at 1 and are incremented by the originator every time the LSA is re-originated.')
aviciFabricLsaCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaCreationTime.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaCreationTime.setDescription('A string containing the creation time for this LSA (wall clock time to 1/1000 sec).')
aviciFabricLsaModuleReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModuleReachable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModuleReachable.setDescription('True if the originator module is reachable from this module.')
aviciFabricLsaChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaChannels.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaChannels.setDescription('The list of fabric channels currently assigned for this module. Example: 1 3 5 11 ')
aviciFabricLsaModulePlusX = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 7), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModulePlusX.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModulePlusX.setDescription('The immediate neighbor module on the plusX link.')
aviciFabricLsaModuleMinusX = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 8), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusX.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusX.setDescription('The immediate neighbor module on the minusX link.')
aviciFabricLsaModulePlusY = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 9), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModulePlusY.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModulePlusY.setDescription('The immediate neighbor module on the plusY link.')
aviciFabricLsaModuleMinusY = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 10), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusY.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusY.setDescription('The immediate neighbor module on the minusY link.')
aviciFabricLsaModulePlusZ = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 11), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModulePlusZ.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModulePlusZ.setDescription('The immediate neighbor module on the plusZ link.')
aviciFabricLsaModuleMinusZ = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 1, 1, 12), AviciModuleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusZ.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaModuleMinusZ.setDescription('The immediate neighbor module on the minusZ link.')
aviciFabricLsaSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 2), )
if mibBuilder.loadTexts: aviciFabricLsaSummaryTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaSummaryTable.setDescription('This table contains summary information for the Fabric Link State Advertisement database.')
aviciFabricLsaSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 2, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciFabricLsaSummaryEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaSummaryEntry.setDescription('An entry in the LSA summary table.')
aviciFabricLsaSummaryChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricLsaSummaryChecksum.setStatus('current')
if mibBuilder.loadTexts: aviciFabricLsaSummaryChecksum.setDescription("The sum of all of the checksums of all LSA's in the LSA database on this module.")
aviciFabricPathTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3), )
if mibBuilder.loadTexts: aviciFabricPathTable.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathTable.setDescription('This table contains information for a Fabric Routing Protocol link.')
aviciFabricPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"), (0, "AVICI-FABRIC-MIB", "aviciFabricPathDestinationBay"), (0, "AVICI-FABRIC-MIB", "aviciFabricPathDestinationSlot"), (0, "AVICI-FABRIC-MIB", "aviciFabricPathIndex"))
if mibBuilder.loadTexts: aviciFabricPathEntry.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathEntry.setDescription('An entry in the Avici Fabric Routing Link State table.')
aviciFabricPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricPathIndex.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathIndex.setDescription('The index for this fabric path.')
aviciFabricPathDestinationBay = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3, 1, 2), AviciBayType())
if mibBuilder.loadTexts: aviciFabricPathDestinationBay.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathDestinationBay.setDescription('The destination bay for this fabric path.')
aviciFabricPathDestinationSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3, 1, 3), AviciSlotType())
if mibBuilder.loadTexts: aviciFabricPathDestinationSlot.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathDestinationSlot.setDescription('The destination slot for this fabric path.')
aviciFabricPathVector = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 8, 1, 3, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 185))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciFabricPathVector.setStatus('current')
if mibBuilder.loadTexts: aviciFabricPathVector.setDescription('The textual representation of the vector describing this fabric path. This vector is described using a shorthand notation for each fabric link from source to destination. Each component of the vector consists of: destination bay/slot fabricLink. Example: 1/1 +X 1/10 +Y 1/30 +Z 1/28 This example shows the path from module 1/1 to module 1/28. The first vector is the bay/slot of this module and the origin link onto the fabric. There are a maximum of 16 fabric hops in a path.')
aviciFabricMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3))
aviciFabricMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 1))
aviciFabricMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 2))
aviciFabricMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 1, 1)).setObjects(("AVICI-FABRIC-MIB", "aviciFabricGroup"), ("AVICI-FABRIC-MIB", "aviciFabricCountersGroup"), ("AVICI-FABRIC-MIB", "aviciFabricGeneralGroup"), ("AVICI-FABRIC-MIB", "aviciFabricRoutingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciFabricMIBCompliance = aviciFabricMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: aviciFabricMIBCompliance.setDescription('The compliance statement for aviciFabric.')
aviciFabricCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 2, 1)).setObjects(("AVICI-FABRIC-MIB", "aviciFabricHiPriPktsInserted"), ("AVICI-FABRIC-MIB", "aviciFabricLoPriPktsInserted"), ("AVICI-FABRIC-MIB", "aviciFabricHiPriPktsForwarded"), ("AVICI-FABRIC-MIB", "aviciFabricLoPriPktsForwarded"), ("AVICI-FABRIC-MIB", "aviciFabricHiPriFlitsForwarded"), ("AVICI-FABRIC-MIB", "aviciFabricLoPriFlitsForwarded"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedHiPriPktsSelf"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedLoPriPktsSelf"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedHiPriPkts"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedLoPriPkts"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedHiPriFlits"), ("AVICI-FABRIC-MIB", "aviciFabricExtractedLoPriFlits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciFabricCountersGroup = aviciFabricCountersGroup.setStatus('current')
if mibBuilder.loadTexts: aviciFabricCountersGroup.setDescription('Objects for the fabric counters.')
aviciFabricGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 2, 2)).setObjects(("AVICI-FABRIC-MIB", "aviciFabricLinkIndex"), ("AVICI-FABRIC-MIB", "aviciFabricLinkDescr"), ("AVICI-FABRIC-MIB", "aviciFabricLinkAdminStatus"), ("AVICI-FABRIC-MIB", "aviciFabricLinkOperStatus"), ("AVICI-FABRIC-MIB", "aviciFabricLinkSpeed"), ("AVICI-FABRIC-MIB", "aviciFabricLinkCRCErrors"), ("AVICI-FABRIC-MIB", "aviciFabricLinkDownTransitions"), ("AVICI-FABRIC-MIB", "aviciFabricLinkLastChange"), ("AVICI-FABRIC-MIB", "aviciFabricChannelIndex"), ("AVICI-FABRIC-MIB", "aviciFabricChannelHiPriScrubEvents"), ("AVICI-FABRIC-MIB", "aviciFabricChannelLoPriScrubEvents"), ("AVICI-FABRIC-MIB", "aviciFabricChannelHiPriLastScrubTime"), ("AVICI-FABRIC-MIB", "aviciFabricChannelLoPriLastScrubTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciFabricGeneralGroup = aviciFabricGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: aviciFabricGeneralGroup.setDescription('Objects for the fabric.')
aviciFabricRoutingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 8, 3, 2, 3)).setObjects(("AVICI-FABRIC-MIB", "aviciFabricLsaSequenceNum"), ("AVICI-FABRIC-MIB", "aviciFabricLsaCreationTime"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModuleReachable"), ("AVICI-FABRIC-MIB", "aviciFabricLsaChannels"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModulePlusX"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModuleMinusX"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModulePlusY"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModuleMinusY"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModulePlusZ"), ("AVICI-FABRIC-MIB", "aviciFabricLsaModuleMinusZ"), ("AVICI-FABRIC-MIB", "aviciFabricLsaSummaryChecksum"), ("AVICI-FABRIC-MIB", "aviciFabricPathIndex"), ("AVICI-FABRIC-MIB", "aviciFabricPathVector"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciFabricRoutingGroup = aviciFabricRoutingGroup.setStatus('current')
if mibBuilder.loadTexts: aviciFabricRoutingGroup.setDescription('Objects for fabric routing.')
mibBuilder.exportSymbols("AVICI-FABRIC-MIB", aviciFabricPathVector=aviciFabricPathVector, aviciFabricPathDestinationBay=aviciFabricPathDestinationBay, aviciFabricLsaModuleReachable=aviciFabricLsaModuleReachable, aviciFabricLoPriPktsForwarded=aviciFabricLoPriPktsForwarded, aviciFabricChannelLoPriScrubEvents=aviciFabricChannelLoPriScrubEvents, aviciFabricCountersTable=aviciFabricCountersTable, aviciFabricLsaSummaryEntry=aviciFabricLsaSummaryEntry, aviciFabricConfig=aviciFabricConfig, aviciFabricGeneralGroup=aviciFabricGeneralGroup, aviciFabricObjects=aviciFabricObjects, aviciFabricChannelHiPriLastScrubTime=aviciFabricChannelHiPriLastScrubTime, aviciFabricExtractedLoPriPktsSelf=aviciFabricExtractedLoPriPktsSelf, aviciFabricLinkCRCErrors=aviciFabricLinkCRCErrors, aviciFabricGroup=aviciFabricGroup, aviciFabricRouting=aviciFabricRouting, aviciFabricLsaOriginSlot=aviciFabricLsaOriginSlot, aviciFabricLsaCreationTime=aviciFabricLsaCreationTime, aviciFabricPathTable=aviciFabricPathTable, aviciFabricCountersGroup=aviciFabricCountersGroup, aviciFabricMIBCompliance=aviciFabricMIBCompliance, aviciFabricLsaModuleMinusX=aviciFabricLsaModuleMinusX, aviciFabricExtractedHiPriPkts=aviciFabricExtractedHiPriPkts, aviciFabricLinkIndex=aviciFabricLinkIndex, aviciFabricLinkTable=aviciFabricLinkTable, aviciFabricLsaOriginBay=aviciFabricLsaOriginBay, PYSNMP_MODULE_ID=aviciFabricMIB, aviciFabricLsaChannels=aviciFabricLsaChannels, aviciFabricLsaModulePlusX=aviciFabricLsaModulePlusX, aviciFabricCounters=aviciFabricCounters, aviciFabricPathDestinationSlot=aviciFabricPathDestinationSlot, aviciFabricLsaTable=aviciFabricLsaTable, aviciFabricMIBGroups=aviciFabricMIBGroups, aviciFabricHiPriFlitsForwarded=aviciFabricHiPriFlitsForwarded, aviciFabricExtractedCountersTable=aviciFabricExtractedCountersTable, aviciFabricPathEntry=aviciFabricPathEntry, aviciFabricChannelLoPriLastScrubTime=aviciFabricChannelLoPriLastScrubTime, aviciFabricHardwareVersion=aviciFabricHardwareVersion, aviciFabricChannelEntry=aviciFabricChannelEntry, aviciFabricLinkOperStatus=aviciFabricLinkOperStatus, aviciFabricExtractedCountersEntry=aviciFabricExtractedCountersEntry, aviciFabricLinkLastChange=aviciFabricLinkLastChange, aviciFabricLsaModulePlusY=aviciFabricLsaModulePlusY, aviciFabricLsaModuleMinusY=aviciFabricLsaModuleMinusY, aviciFabricLinkSpeed=aviciFabricLinkSpeed, aviciFabricLinkEntry=aviciFabricLinkEntry, aviciFabricMIBCompliances=aviciFabricMIBCompliances, aviciFabricExtractedLoPriPkts=aviciFabricExtractedLoPriPkts, aviciFabricLsaEntry=aviciFabricLsaEntry, aviciFabricMIB=aviciFabricMIB, aviciFabricHiPriPktsInserted=aviciFabricHiPriPktsInserted, aviciFabricChannelHiPriScrubEvents=aviciFabricChannelHiPriScrubEvents, aviciFabricLsaModulePlusZ=aviciFabricLsaModulePlusZ, aviciFabricLsaSummaryTable=aviciFabricLsaSummaryTable, aviciFabricMIBConformance=aviciFabricMIBConformance, aviciFabricHiPriPktsForwarded=aviciFabricHiPriPktsForwarded, aviciFabricPathIndex=aviciFabricPathIndex, aviciFabricRoutingProtocolVersion=aviciFabricRoutingProtocolVersion, aviciFabricRoutingGroup=aviciFabricRoutingGroup, aviciFabricLoPriFlitsForwarded=aviciFabricLoPriFlitsForwarded, aviciFabricLinkDescr=aviciFabricLinkDescr, aviciFabricCountersEntry=aviciFabricCountersEntry, aviciFabricLinkDownTransitions=aviciFabricLinkDownTransitions, aviciFabricChannelTable=aviciFabricChannelTable, aviciFabricLsaSequenceNum=aviciFabricLsaSequenceNum, aviciFabricLsaSummaryChecksum=aviciFabricLsaSummaryChecksum, aviciFabricLinkAdminStatus=aviciFabricLinkAdminStatus, aviciFabricChannelIndex=aviciFabricChannelIndex, aviciFabricLsaModuleMinusZ=aviciFabricLsaModuleMinusZ, aviciFabricExtractedHiPriPktsSelf=aviciFabricExtractedHiPriPktsSelf, aviciFabricExtractedLoPriFlits=aviciFabricExtractedLoPriFlits, aviciFabricExtractedHiPriFlits=aviciFabricExtractedHiPriFlits, aviciFabricLoPriPktsInserted=aviciFabricLoPriPktsInserted)
