#
# PySNMP MIB module DHCP-RELAY-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DHCP-RELAY-MGMT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:46:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, iso, Unsigned32, MibIdentifier, ModuleIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, TimeTicks, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "iso", "Unsigned32", "MibIdentifier", "ModuleIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "TimeTicks", "Bits", "IpAddress")
RowStatus, TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "MacAddress")
swDHCPRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 42))
if mibBuilder.loadTexts: swDHCPRelayMIB.setLastUpdated('201005280000Z')
if mibBuilder.loadTexts: swDHCPRelayMIB.setOrganization('D-Link Corp.')
if mibBuilder.loadTexts: swDHCPRelayMIB.setContactInfo('http://support.dlink.com')
if mibBuilder.loadTexts: swDHCPRelayMIB.setDescription('The structure of DHCP relay management for the proprietary enterprise.')
swDHCPRelayCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 1))
swDHCPRelayInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 2))
swDHCPRelayMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 3))
swDHCPLocalRelayMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 4))
swDHCPRelayOption82 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2))
swDHCPRelayOption60 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3))
swDHCPRelayOption61 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4))
swDHCPRelayState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayState.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayState.setDescription('This object indicates whether the DHCP relay function is enabled or disabled. ')
swDHCPRelayHopCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayHopCount.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayHopCount.setDescription('This object indicates the maximum number of router hops that the BOOTP packets can cross. ')
swDHCPRelayTimeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayTimeThreshold.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayTimeThreshold.setDescription('This object indicates the minimum time in seconds within which the switch must relay the DHCP request. If this time is exceeded, the switch will drop the DHCP packet. ')
swDHCPRelayCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 1), )
if mibBuilder.loadTexts: swDHCPRelayCtrlTable.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayCtrlTable.setDescription('This table indicates the IP address as a destination to forward (relay) DHCP packets to.')
swDHCPRelayCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 1, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayCtrlInterfaceName"), (0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayCtrlServer"))
if mibBuilder.loadTexts: swDHCPRelayCtrlEntry.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayCtrlEntry.setDescription('A list of information indicates the IP address as a destination to forward (relay) DHCP packets to.')
swDHCPRelayCtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayCtrlInterfaceName.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayCtrlInterfaceName.setDescription('This object indicates the name of the IP interface.')
swDHCPRelayCtrlServer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayCtrlServer.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayCtrlServer.setDescription('This object indicates the DHCP server IP address.')
swDHCPRelayCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayCtrlRowStatus.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayCtrlRowStatus.setDescription('This object indicates the status of this entry.')
swDHCPRelayOption82State = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption82State.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption82State.setDescription('This object indicates whether the DHCP relay option 82 function is enabled or disabled.')
swDHCPRelayOption82CheckState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption82CheckState.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption82CheckState.setDescription('This object indicates whether the DHCP relay option 82 check function is enabled or disabled. ')
swDHCPRelayOption82Policy = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("replace", 1), ("drop", 2), ("keep", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption82Policy.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption82Policy.setDescription('This object indicates the DHCP relay option 82 policy.')
swDHCPRelayOption82RemoteIDType = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("user-defined", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption82RemoteIDType.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption82RemoteIDType.setDescription('This object indicates the type of remote ID. If the type is default, the remote ID will be the MAC address of the device. Otherwise, the remote ID can be defined by writing to the swDHCPRelayOption82RemoteID object.')
swDHCPRelayOption82RemoteID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption82RemoteID.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption82RemoteID.setDescription('This object displays the current remote ID of the device. If swDHCPRelayOption82RemoteIDType is set to default, the value will be the MAC address of the device, and this object cannot be modified. If swDHCPRelayOption82RemoteIDType is set to user-defined, a new value can be written to this object.')
swDHCPRelayOption60State = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption60State.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60State.setDescription('This object indicates whether the DHCP relay option 60 function is enabled or disabled. ')
swDHCPRelayOption60DefMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption60DefMode.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60DefMode.setDescription('This object indicates default mode that has no option 60 matching rules. relay (1): means to relay the packet to the IP address which is specified by swDHCPRelayOption60DefRelayIp. drop (2): means to drop the packet. ')
swDHCPRelayOption60DefTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 3), )
if mibBuilder.loadTexts: swDHCPRelayOption60DefTable.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60DefTable.setDescription('This table indicates the default relay servers for the packet that has no option 60 matching rules. ')
swDHCPRelayOption60DefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 3, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayOption60DefRelayIp"))
if mibBuilder.loadTexts: swDHCPRelayOption60DefEntry.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60DefEntry.setDescription('A list of information indicates the default relay servers for the packet that has no option 60 matching rules. ')
swDHCPRelayOption60DefRelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayOption60DefRelayIp.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60DefRelayIp.setDescription('This object indicates the IP address of the default relay server.')
swDHCPRelayOption60DefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption60DefRowStatus.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60DefRowStatus.setDescription('This object indicates the status of this entry.')
swDHCPRelayOption60Table = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4), )
if mibBuilder.loadTexts: swDHCPRelayOption60Table.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60Table.setDescription('This table indicates the relay servers for the packet for option 60 rules.')
swDHCPRelayOption60Entry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayOption60String"), (0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayOption60RelayIp"))
if mibBuilder.loadTexts: swDHCPRelayOption60Entry.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60Entry.setDescription('A list of information indicates the relay servers for the packet for option 60 rules.')
swDHCPRelayOption60String = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayOption60String.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60String.setDescription('This object indicates the string of this entry. Note that it is theoretically possible for a valid string to exceed the allowed length of an SNMP object identifier, and thus be impossible to represent in tables in this MIB that are indexed by string.')
swDHCPRelayOption60RelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayOption60RelayIp.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60RelayIp.setDescription('This object indicates the IP address of the relay server.')
swDHCPRelayOption60MatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exact", 1), ("partial", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption60MatchType.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60MatchType.setDescription('This object indicates the match state of this entry. exact (1): Means the option 60 string in the packet must fully match the specified string. partial (2): Means the option 60 string in the packet only needs to partially match the specified string. ')
swDHCPRelayOption60RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 3, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption60RowStatus.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption60RowStatus.setDescription('This object indicates the status of this entry.')
swDHCPRelayOption61State = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption61State.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61State.setDescription('This object indicates whether the DHCP relay option 61 function is enabled or disabled. ')
swDHCPRelayOption61DefMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption61DefMode.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61DefMode.setDescription('This object indicates the default mode has no option 61 matching rules. relay (1): Means to relay the packet to the IP address which is specified by swDHCPRelayOption61DefRelayIp. drop (2): Means to drop the packet. ')
swDHCPRelayOption61DefRelayIp = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPRelayOption61DefRelayIp.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61DefRelayIp.setDescription("This object indicates the IP address of the default relay server has no option 61 matching rules. Pay attention to when swDHCPRelayOption61Mode is: relay (1): This object must be set together. drop (2): This object can not be set, and it always returns to '0.0.0.0'. ")
swDHCPRelayOption61Table = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4), )
if mibBuilder.loadTexts: swDHCPRelayOption61Table.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61Table.setDescription('This table indicates the relay servers for the packet for option 61 rules.')
swDHCPRelayOption61Entry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayOption61ClientType"), (0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayOption61ClientID"))
if mibBuilder.loadTexts: swDHCPRelayOption61Entry.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61Entry.setDescription('A list of information indicates the relay servers for the packet for option 61 rules. ')
swDHCPRelayOption61ClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("string", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayOption61ClientType.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61ClientType.setDescription('This object indicates the client type of this entry. mac (1): Means the client-ID which is the MAC address of a client. string (2): Means the client-ID which is specified string by an administrator. ')
swDHCPRelayOption61ClientID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDHCPRelayOption61ClientID.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61ClientID.setDescription('This object indicates the string of this entry. Note: When the swDHCPRelayOption61ClientType is mac (1), the format of this object should be XX.XX.XX.XX.XX.XX (MAC address). When the swDHCPRelayOption61ClientType is string (2), it is theoretically possible for a valid string to exceed the allowed length of an SNMP object identifier, and thus be impossible to represent in tables in this MIB that are indexed by the string.')
swDHCPRelayOption61Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption61Mode.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61Mode.setDescription('This object indicates mode of this entry. relay (1): Means to relay the packet to the IP address which is specified by swDHCPRelayOption61RelayIp. drop (2): Means to drop the packet. ')
swDHCPRelayOption61RelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption61RelayIp.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61RelayIp.setDescription("This object indicates the IP address of the relay server. Pay attention to when swDHCPRelayOption61Mode is: relay (1): This object must be set together. drop (2): This object can not be set, and it always returns to '0.0.0.0'. ")
swDHCPRelayOption61RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 4, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayOption61RowStatus.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayOption61RowStatus.setDescription('This object indicates the status of this entry.')
swDHCPRelayVlanCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5), )
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlTable.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlTable.setDescription('This table indicates the IP address as a destination to forward (relay) DHCP packets to.')
swDHCPRelayVlanCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPRelayVlanCtrlServer"))
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlEntry.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlEntry.setDescription('A list of information indicates the IP address as a destination to forward (relay) DHCP packets to.')
swDHCPRelayVlanCtrlServer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlServer.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlServer.setDescription('This object indicates the DHCP server IP address.')
swDHCPRelayVlanCtrlVlanRangeList1to64 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList1to64.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList1to64.setDescription('This object indicates the VLAN range (1-512) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList65to128 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList65to128.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList65to128.setDescription('This object indicates the VLAN range (513-1024) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList129to192 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList129to192.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList129to192.setDescription('This object indicates the VLAN range (1025-1536) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList193to256 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList193to256.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList193to256.setDescription('This object indicates the VLAN range (1537-2048) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList257to320 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList257to320.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList257to320.setDescription('This object indicates the VLAN range (2049-2560) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList321to384 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList321to384.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList321to384.setDescription('This object indicates the VLAN range (2561-3072) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList385to448 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList385to448.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList385to448.setDescription('This object indicates the VLAN range (3073-3584) that added the specific server.')
swDHCPRelayVlanCtrlVlanRangeList449to512 = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList449to512.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlVlanRangeList449to512.setDescription('This object indicates the VLAN range (3585-4096) that added the specific server.')
swDHCPRelayVlanCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 3, 5, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlRowStatus.setStatus('current')
if mibBuilder.loadTexts: swDHCPRelayVlanCtrlRowStatus.setDescription('This object indicates the status of this entry.')
swDHCPLocalRelayGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 42, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPLocalRelayGlobalState.setStatus('current')
if mibBuilder.loadTexts: swDHCPLocalRelayGlobalState.setDescription('This object indicates the state of the DHCP local relay function of the switch.')
swDHCPLocalRelayVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 42, 4, 2), )
if mibBuilder.loadTexts: swDHCPLocalRelayVlanTable.setStatus('current')
if mibBuilder.loadTexts: swDHCPLocalRelayVlanTable.setDescription('This table is used to manage the DHCP local relay status for each VLAN.')
swDHCPLocalRelayVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 42, 4, 2, 1), ).setIndexNames((0, "DHCP-RELAY-MGMT-MIB", "swDHCPLocalRelayVlanID"))
if mibBuilder.loadTexts: swDHCPLocalRelayVlanEntry.setStatus('current')
if mibBuilder.loadTexts: swDHCPLocalRelayVlanEntry.setDescription('This object lists the current VLANs in the switch and their corresponding DHCP local relay status.')
swDHCPLocalRelayVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 4, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: swDHCPLocalRelayVlanID.setStatus('current')
if mibBuilder.loadTexts: swDHCPLocalRelayVlanID.setDescription('This object indicates the VLAN ID.')
swDHCPLocalRelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 42, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDHCPLocalRelayState.setStatus('current')
if mibBuilder.loadTexts: swDHCPLocalRelayState.setDescription('This object indicates the state of the DHCP relay function of the specified VLAN.')
mibBuilder.exportSymbols("DHCP-RELAY-MGMT-MIB", swDHCPRelayOption61RowStatus=swDHCPRelayOption61RowStatus, swDHCPRelayOption60DefMode=swDHCPRelayOption60DefMode, swDHCPRelayVlanCtrlVlanRangeList449to512=swDHCPRelayVlanCtrlVlanRangeList449to512, swDHCPRelayOption60MatchType=swDHCPRelayOption60MatchType, swDHCPRelayOption60Entry=swDHCPRelayOption60Entry, swDHCPRelayOption82State=swDHCPRelayOption82State, swDHCPRelayOption60DefRowStatus=swDHCPRelayOption60DefRowStatus, swDHCPRelayVlanCtrlTable=swDHCPRelayVlanCtrlTable, swDHCPRelayVlanCtrlVlanRangeList1to64=swDHCPRelayVlanCtrlVlanRangeList1to64, swDHCPRelayVlanCtrlServer=swDHCPRelayVlanCtrlServer, swDHCPLocalRelayVlanEntry=swDHCPLocalRelayVlanEntry, swDHCPRelayOption61=swDHCPRelayOption61, swDHCPRelayVlanCtrlRowStatus=swDHCPRelayVlanCtrlRowStatus, swDHCPLocalRelayState=swDHCPLocalRelayState, swDHCPRelayMgmt=swDHCPRelayMgmt, swDHCPRelayOption82RemoteID=swDHCPRelayOption82RemoteID, swDHCPRelayTimeThreshold=swDHCPRelayTimeThreshold, swDHCPLocalRelayVlanTable=swDHCPLocalRelayVlanTable, swDHCPRelayOption60RelayIp=swDHCPRelayOption60RelayIp, swDHCPRelayOption60State=swDHCPRelayOption60State, swDHCPRelayOption82CheckState=swDHCPRelayOption82CheckState, swDHCPLocalRelayMgmt=swDHCPLocalRelayMgmt, swDHCPRelayVlanCtrlEntry=swDHCPRelayVlanCtrlEntry, swDHCPRelayOption61Entry=swDHCPRelayOption61Entry, swDHCPLocalRelayGlobalState=swDHCPLocalRelayGlobalState, swDHCPRelayOption60=swDHCPRelayOption60, swDHCPRelayState=swDHCPRelayState, swDHCPRelayVlanCtrlVlanRangeList193to256=swDHCPRelayVlanCtrlVlanRangeList193to256, swDHCPRelayOption82Policy=swDHCPRelayOption82Policy, PYSNMP_MODULE_ID=swDHCPRelayMIB, swDHCPRelayCtrlServer=swDHCPRelayCtrlServer, swDHCPRelayVlanCtrlVlanRangeList321to384=swDHCPRelayVlanCtrlVlanRangeList321to384, swDHCPRelayOption60Table=swDHCPRelayOption60Table, swDHCPRelayOption61DefMode=swDHCPRelayOption61DefMode, swDHCPRelayCtrlRowStatus=swDHCPRelayCtrlRowStatus, swDHCPRelayOption61Mode=swDHCPRelayOption61Mode, swDHCPRelayOption61Table=swDHCPRelayOption61Table, swDHCPRelayCtrlEntry=swDHCPRelayCtrlEntry, swDHCPRelayCtrlTable=swDHCPRelayCtrlTable, swDHCPRelayOption82=swDHCPRelayOption82, swDHCPRelayOption60DefEntry=swDHCPRelayOption60DefEntry, swDHCPRelayOption61DefRelayIp=swDHCPRelayOption61DefRelayIp, swDHCPRelayOption61ClientType=swDHCPRelayOption61ClientType, swDHCPRelayOption61ClientID=swDHCPRelayOption61ClientID, swDHCPRelayOption60DefTable=swDHCPRelayOption60DefTable, swDHCPRelayVlanCtrlVlanRangeList129to192=swDHCPRelayVlanCtrlVlanRangeList129to192, swDHCPRelayOption60String=swDHCPRelayOption60String, swDHCPRelayCtrlInterfaceName=swDHCPRelayCtrlInterfaceName, swDHCPRelayVlanCtrlVlanRangeList65to128=swDHCPRelayVlanCtrlVlanRangeList65to128, swDHCPRelayOption61State=swDHCPRelayOption61State, swDHCPRelayOption60RowStatus=swDHCPRelayOption60RowStatus, swDHCPRelayVlanCtrlVlanRangeList257to320=swDHCPRelayVlanCtrlVlanRangeList257to320, swDHCPRelayOption60DefRelayIp=swDHCPRelayOption60DefRelayIp, swDHCPRelayCtrl=swDHCPRelayCtrl, swDHCPRelayInfo=swDHCPRelayInfo, swDHCPRelayOption61RelayIp=swDHCPRelayOption61RelayIp, swDHCPRelayHopCount=swDHCPRelayHopCount, swDHCPRelayOption82RemoteIDType=swDHCPRelayOption82RemoteIDType, swDHCPLocalRelayVlanID=swDHCPLocalRelayVlanID, swDHCPRelayVlanCtrlVlanRangeList385to448=swDHCPRelayVlanCtrlVlanRangeList385to448, swDHCPRelayMIB=swDHCPRelayMIB)
