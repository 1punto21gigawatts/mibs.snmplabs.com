#
# PySNMP MIB module CISCOSB-EVENTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-EVENTS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:22:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
RlSmartPortsMacroNameOrZero, = mibBuilder.importSymbols("CISCOSB-SMARTPORTS-MIB", "RlSmartPortsMacroNameOrZero")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Unsigned32, IpAddress, MibIdentifier, Counter64, iso, ModuleIdentity, Bits, TimeTicks, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Unsigned32", "IpAddress", "MibIdentifier", "Counter64", "iso", "ModuleIdentity", "Bits", "TimeTicks", "Gauge32", "Counter32")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
rlEventsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150))
rlEventsMib.setRevisions(('2010-09-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlEventsMib.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: rlEventsMib.setLastUpdated('201009110000Z')
if mibBuilder.loadTexts: rlEventsMib.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: rlEventsMib.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: rlEventsMib.setDescription('MTS events MIB.')
class SmartPortType(TextualConvention, Integer32):
    description = 'Supported smart port types.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("unknown", 1), ("default", 2), ("printer", 3), ("desktop", 4), ("guest", 5), ("server", 6), ("host", 7), ("ip-camera", 8), ("ip-phone", 9), ("ip-phone-desktop", 10), ("switch", 11), ("router", 12), ("ap", 13))

class SmartPortMacroParameterName(DisplayString):
    description = 'Smart macro parameter name.'
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 32)

class SmartPortMacroParameterValue(DisplayString):
    description = 'Smart macro parameter value.'
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 80)

class SmartPortMacroType(TextualConvention, Integer32):
    description = 'Smart macro type - built-in or user-defined.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("built-in", 1), ("user-defined", 2))

class SmartPortMacroParameterOrder(TextualConvention, Integer32):
    description = 'Smart macro parameter order.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("single", 1), ("first", 2), ("middle", 3), ("last", 4))

rlPortEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1))
rlAutoSmartPortAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("controlled", 3))).clone('controlled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortAdminStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortAdminStatus.setDescription('disabled - Auto Smart port feature is administratively disabled. enabled - Auto Smart port feature is administratively enabled. controlled - Auto Smart port feature is administratively controlled by VOICE VLAN. ')
rlAutoSmartPortOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortOperStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortOperStatus.setDescription('disabled - Auto Smart port feature is operationally disabled. enabled - Auto Smart port feature is operationally enabled. ')
rlAutoSmartPortLastVoiceVlanStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortLastVoiceVlanStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortLastVoiceVlanStatus.setDescription("Indicated last status set by VOICE VLAN feature. If rlAutoSmartPortAdminStatus has 'controlled' value then the value of this object is the same as rlAutoSmartPortOperStatus. enabled - Auto Smart port feature should be operationally enabled, if rlAutoSmartPortAdminStatus has 'controlled' value. disabled - Auto Smart port feature should be operationally disabled, if rlAutoSmartPortAdminStatus has 'controlled' value ")
rlAutoSmartPortLastVoiceVlanId = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortLastVoiceVlanId.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortLastVoiceVlanId.setDescription('Indicated last VOICE VLAN ID set by VOICE VLAN feature.')
rlAutoSmartPortLearningProtocols = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 5), Bits().clone(namedValues=NamedValues(("cdp", 0), ("lldp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortLearningProtocols.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortLearningProtocols.setDescription('cdp - Information about device type of neighboring devices(s) is learnt via CDP (Cisco Discovery Protocol) advertisements. lldp - Information about device type of neighboring devices(s) is learnt via LLDP (Link Layer Discovery Protocol ) advertisements. ')
rlAutoSmartPortTypesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6), )
if mibBuilder.loadTexts: rlAutoSmartPortTypesTable.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesTable.setDescription('The table is used to keep all the information related to a specific port type.')
rlAutoSmartPortTypesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1), ).setIndexNames((0, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortTypesType"))
if mibBuilder.loadTexts: rlAutoSmartPortTypesEntry.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesEntry.setDescription('An entry (conceptual row) in the rlAutoSmartPortTypesTable.')
rlAutoSmartPortTypesType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 1), SmartPortType())
if mibBuilder.loadTexts: rlAutoSmartPortTypesType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesType.setDescription('Smart port type.')
rlAutoSmartPortTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("default", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortTypeStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypeStatus.setDescription('Smart port type global status. ')
rlAutoSmartPortMacro = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 3), RlSmartPortsMacroNameOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortMacro.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacro.setDescription("Macro to be activated when a port is set to the smart port type indicated by rlAutoSmartPortTypesType. The macro whose name is 'no_'<rlAutoSmartPortMacro> is activated when a port ceases to be of this smart port type. ")
rlAutoSmartPortTypesRevertToDefaultMacro = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortTypesRevertToDefaultMacro.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesRevertToDefaultMacro.setDescription('Setting this object will cause the smart port type macro associated with this smart port type to revert to the default macro. ')
rlAutoSmartPortTypesRevertToDefaultParams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortTypesRevertToDefaultParams.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesRevertToDefaultParams.setDescription('Setting this object will cause the default smart port type parameter values associated with the built-in macro of this smart port type to revert to their default values.')
rlAutoSmartPortTypesBuiltinMacro = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 6, 1, 6), SmartPortMacroType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortTypesBuiltinMacro.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortTypesBuiltinMacro.setDescription('Indicates whether the macro is built-in or user defined.')
rlAutoSmartPortMacrosParamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7), )
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamTable.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamTable.setDescription('The table is used to keep all the default parameter values related to a specific port type.')
rlAutoSmartPortMacrosParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7, 1), ).setIndexNames((0, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortTypesType"), (0, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortMacroType"), (1, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortMacrosParamName"))
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamEntry.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamEntry.setDescription('A parameter name & default value pair for a smart port type macro.')
rlAutoSmartPortMacroType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7, 1, 1), SmartPortMacroType())
if mibBuilder.loadTexts: rlAutoSmartPortMacroType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacroType.setDescription('Macro type - built-in or user defined.')
rlAutoSmartPortMacrosParamName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7, 1, 2), SmartPortMacroParameterName())
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamName.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamName.setDescription('Name of the parameter to be supplied at smart port macro activation. ')
rlAutoSmartPortMacrosParamOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7, 1, 3), SmartPortMacroParameterOrder()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamOrder.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamOrder.setDescription("Setting this object to 'first' instructs the system to erase all previous information associated with the rlAutoSmartPortTypesType and rlAutoSmartPortMacroType associated with this conceptual row. Setting this object to 'middle' instructs the system to wait for further parameters. Setting this object to 'last' informs the system that no further parameters will be sent and therefore it can start the macro or builtin parameters change process. Setting this object to 'single' instructs the system to erase all previous information associated with the rlAutoSmartPortTypesType and rlAutoSmartPortMacroType associated with this conceptual row and informs the system that no further parameters will be sent and therefore it can start macro or builtin parameters change process.")
rlAutoSmartPortMacrosParamValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 7, 1, 4), SmartPortMacroParameterValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamValue.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortMacrosParamValue.setDescription('Default value of the parameter to be supplied at smart port macro activation. ')
rlAutoSmartPortPortsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8), )
if mibBuilder.loadTexts: rlAutoSmartPortPortsTable.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPortsTable.setDescription('The table is used to keep all the auto smart port information related to a specific port.')
rlAutoSmartPortPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1), ).setIndexNames((0, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortPort"))
if mibBuilder.loadTexts: rlAutoSmartPortPortsEntry.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPortsEntry.setDescription('An entry (conceptual row) in the rlAutoSmartPortPortsTable.')
rlAutoSmartPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlAutoSmartPortPort.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPort.setDescription('The port to which the smartport information is associated.')
rlAutoSmartPortPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortPortStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPortStatus.setDescription('Indicates whether auto smart port feature is enabled or not on this port.')
rlAutoSmartPortPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 3), SmartPortType().clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortPortType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPortType.setDescription('Smart port type associated with this port. If set by user, the port will retain the smart port type at link down, link not present and reboot events.')
rlAutoSmartPortPersistency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("persistent", 1), ("not-persistent", 2))).clone('not-persistent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortPersistency.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPersistency.setDescription('If set to persistent then, if the system concludes, according to the information learnt there is no relevant device connected to the port, the rlAutoSmartPortPortType will not be changed (as if the user set this rlAutoSmartPortPortType himself), except on learning another rlAutoSmartPortPortType.')
rlAutoSmartPortLearntPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 5), SmartPortType().clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortLearntPortType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortLearntPortType.setDescription("Smart port type learnt via the learning protocols. This value will be different from rlAutoSmartPortPortType only if rlAutoSmartPortPortType was manually configured (i.e. if the value of rlAutoSmartPortPortAcquiringType is 'configuration'). The value of the object is used to set the value of rlAutoSmartPortPortType if the user removes the configuration.")
rlAutoSmartPortPortAcquiringType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("configuration", 2), ("persistency", 3), ("learning", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortPortAcquiringType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortPortAcquiringType.setDescription('Indicates the way that the value of rlAutoSmartPortPortType was acquired. This object can be set only during configuration download.')
rlAutoSmartPortLastActivatedMacro = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 7), RlSmartPortsMacroNameOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortLastActivatedMacro.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortLastActivatedMacro.setDescription("Indicates macro name of last activated macro or 'no macro' if no macro was run.")
rlAutoSmartPortFailedCommandNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartPortFailedCommandNumber.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortFailedCommandNumber.setDescription('Indicates number of command (starting with 1) that caused the macro failure or 0 if the macro succeeded or no macro was run.')
rlAutoSmartPortSetLearntPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 8, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortSetLearntPortType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortSetLearntPortType.setDescription('Instructs the system to set the port type to the learnt port type.')
rlAutoSmartPortParamsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9), )
if mibBuilder.loadTexts: rlAutoSmartPortParamsTable.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortParamsTable.setDescription('This table optionally determines the parameter values for the macro that is activated when the smartport type is manually changed for a specific port or trunk via the rlAutoSmartPortPortType object.')
rlAutoSmartPortParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9, 1), ).setIndexNames((0, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortIfIndex"), (1, "CISCOSB-EVENTS-MIB", "rlAutoSmartPortParamName"))
if mibBuilder.loadTexts: rlAutoSmartPortParamsEntry.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortParamsEntry.setDescription('A parameter name & immediate value.')
rlAutoSmartPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlAutoSmartPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortIfIndex.setDescription('The port or trunk that this entry is associated with. ')
rlAutoSmartPortParamName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9, 1, 2), SmartPortMacroParameterName())
if mibBuilder.loadTexts: rlAutoSmartPortParamName.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortParamName.setDescription('Name of the parameter whose value must be supplied at a smart port macro activation. ')
rlAutoSmartPortParamOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9, 1, 3), SmartPortMacroParameterOrder()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutoSmartPortParamOrder.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortParamOrder.setDescription("Setting this object to 'first' instructs the system to erase all previous information associated with the rlAutoSmartPortTypesType and rlAutoSmartPortMacroType associated with this conceptual row. Setting this object to 'middle' instructs the system to wait for further parameters. Setting this object to 'last' informs the system that no further parameters will be sent and therefore it can start applying the smartport type. Setting this object to 'single' instructs the system to erase all previous information associated with the rlAutoSmartPortTypesType and rlAutoSmartPortMacroType associated with this conceptual row and informs the system that no further parameters will be sent and informs the system that no further parameters will be sent and therefore it can start applying the smartport type.")
rlAutoSmartPortParamValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 9, 1, 4), SmartPortMacroParameterValue())
if mibBuilder.loadTexts: rlAutoSmartPortParamValue.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartPortParamValue.setDescription('Value of the parameter whose value must be supplied at a smart port macro activation. ')
rlAutoSmartTrunkRefreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 10), )
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshTable.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshTable.setDescription('Setting this object causes running the SmartPort macros of the following types: router, switch and ap. This operation is called the trunk refresh operation.')
rlAutoSmartTrunkRefreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 10, 1), ).setIndexNames((0, "CISCOSB-EVENTS-MIB", "rlAutoSmartTrunkRefreshSmartPortType"), (0, "CISCOSB-EVENTS-MIB", "rlAutoSmartTrunkRefreshIfIndex"))
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshEntry.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshEntry.setDescription('An entry (conceptual row) in the rlAutoSmartTrunkRefreshTable.')
rlAutoSmartTrunkRefreshSmartPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 11, 12, 13))).clone(namedValues=NamedValues(("default", 1), ("switch", 11), ("router", 12), ("ap", 13))))
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshSmartPortType.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshSmartPortType.setDescription("If not default the trunk refresh operation will be carried out on all ports of this smart port type if rlAutoSmartTrunkRefreshIfIndex is nonzero, or on the port specifed by rlAutoSmartTrunkRefreshIfIndex if it's type matches the given this smart port type (if not matching a wrong-value error will be return). If default the trunk refresh operation will be carried out on all ports of router, switch and ap smart port type if rlAutoSmartTrunkRefreshIfIndex is nonzero, or on the port specifed by rlAutoSmartTrunkRefreshIfIndex.")
rlAutoSmartTrunkRefreshIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 10, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshIfIndex.setDescription('If 0 the trunk refresh operation will be carried out on all ports of the smart port type as specified in the rlAutoSmartTrunkRefreshSmartPortType. If nonzero the trunk refresh operation will be carried out on the specified port, if rlAutoSmartTrunkRefreshSmartPortType is default or matches the smart port type of the specified port. Any other case will result in a wrong-value error.')
rlAutoSmartTrunkRefreshRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartTrunkRefreshRowStatus.setDescription('Since this an action table only createAndGo will be accepted and the conceptual row will vanish immediately after the action execution.')
rlAutoSmartBusy = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 150, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAutoSmartBusy.setStatus('current')
if mibBuilder.loadTexts: rlAutoSmartBusy.setDescription('If true indicates that the autosmartports system is temporarily busy performing a multiport operation and therefore can not service management requests for the time-being.')
mibBuilder.exportSymbols("CISCOSB-EVENTS-MIB", rlAutoSmartPortParamsEntry=rlAutoSmartPortParamsEntry, rlAutoSmartPortLastActivatedMacro=rlAutoSmartPortLastActivatedMacro, rlAutoSmartPortParamOrder=rlAutoSmartPortParamOrder, rlAutoSmartPortTypesType=rlAutoSmartPortTypesType, rlAutoSmartPortMacrosParamValue=rlAutoSmartPortMacrosParamValue, rlAutoSmartPortLearningProtocols=rlAutoSmartPortLearningProtocols, rlAutoSmartPortMacrosParamOrder=rlAutoSmartPortMacrosParamOrder, rlAutoSmartTrunkRefreshTable=rlAutoSmartTrunkRefreshTable, rlAutoSmartPortTypesEntry=rlAutoSmartPortTypesEntry, rlAutoSmartPortPortsTable=rlAutoSmartPortPortsTable, SmartPortMacroType=SmartPortMacroType, SmartPortMacroParameterOrder=SmartPortMacroParameterOrder, rlAutoSmartPortPortType=rlAutoSmartPortPortType, rlAutoSmartPortPortStatus=rlAutoSmartPortPortStatus, SmartPortType=SmartPortType, rlPortEvents=rlPortEvents, rlAutoSmartPortPortsEntry=rlAutoSmartPortPortsEntry, rlAutoSmartPortParamsTable=rlAutoSmartPortParamsTable, rlAutoSmartPortLastVoiceVlanId=rlAutoSmartPortLastVoiceVlanId, rlAutoSmartPortAdminStatus=rlAutoSmartPortAdminStatus, rlAutoSmartPortMacrosParamTable=rlAutoSmartPortMacrosParamTable, rlAutoSmartTrunkRefreshIfIndex=rlAutoSmartTrunkRefreshIfIndex, rlAutoSmartPortIfIndex=rlAutoSmartPortIfIndex, rlAutoSmartPortTypeStatus=rlAutoSmartPortTypeStatus, rlAutoSmartPortLearntPortType=rlAutoSmartPortLearntPortType, rlAutoSmartPortTypesBuiltinMacro=rlAutoSmartPortTypesBuiltinMacro, rlAutoSmartPortLastVoiceVlanStatus=rlAutoSmartPortLastVoiceVlanStatus, SmartPortMacroParameterName=SmartPortMacroParameterName, rlAutoSmartTrunkRefreshEntry=rlAutoSmartTrunkRefreshEntry, SmartPortMacroParameterValue=SmartPortMacroParameterValue, rlAutoSmartPortMacrosParamEntry=rlAutoSmartPortMacrosParamEntry, rlAutoSmartPortPort=rlAutoSmartPortPort, rlAutoSmartPortPersistency=rlAutoSmartPortPersistency, rlAutoSmartTrunkRefreshSmartPortType=rlAutoSmartTrunkRefreshSmartPortType, rlAutoSmartPortPortAcquiringType=rlAutoSmartPortPortAcquiringType, PYSNMP_MODULE_ID=rlEventsMib, rlAutoSmartTrunkRefreshRowStatus=rlAutoSmartTrunkRefreshRowStatus, rlAutoSmartPortSetLearntPortType=rlAutoSmartPortSetLearntPortType, rlEventsMib=rlEventsMib, rlAutoSmartBusy=rlAutoSmartBusy, rlAutoSmartPortOperStatus=rlAutoSmartPortOperStatus, rlAutoSmartPortMacrosParamName=rlAutoSmartPortMacrosParamName, rlAutoSmartPortTypesTable=rlAutoSmartPortTypesTable, rlAutoSmartPortTypesRevertToDefaultMacro=rlAutoSmartPortTypesRevertToDefaultMacro, rlAutoSmartPortParamValue=rlAutoSmartPortParamValue, rlAutoSmartPortParamName=rlAutoSmartPortParamName, rlAutoSmartPortMacroType=rlAutoSmartPortMacroType, rlAutoSmartPortMacro=rlAutoSmartPortMacro, rlAutoSmartPortTypesRevertToDefaultParams=rlAutoSmartPortTypesRevertToDefaultParams, rlAutoSmartPortFailedCommandNumber=rlAutoSmartPortFailedCommandNumber)
