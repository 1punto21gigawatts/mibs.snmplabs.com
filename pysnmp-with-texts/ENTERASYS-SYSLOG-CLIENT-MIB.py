#
# PySNMP MIB module ENTERASYS-SYSLOG-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-SYSLOG-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Integer32, ObjectIdentity, ModuleIdentity, Counter32, iso, Gauge32, NotificationType, IpAddress, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "ObjectIdentity", "ModuleIdentity", "Counter32", "iso", "Gauge32", "NotificationType", "IpAddress", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits")
DisplayString, TextualConvention, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp", "RowStatus")
etsysSyslogClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14))
etsysSyslogClientMIB.setRevisions(('2011-03-08 20:15', '2009-07-17 14:38', '2009-02-17 20:53', '2009-01-16 18:59', '2003-11-06 15:15', '2003-07-31 14:19', '2001-12-03 19:55', '2001-08-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysSyslogClientMIB.setRevisionsDescriptions(('Added etsysSyslogSecureLogArchiveNotification and etsysSyslogSecureLogDroppedMsgNotification to notify an administrator when a secure log file should be archived or messages destined for a secure log file have been dropped. Also added etsysSyslogClientControlSecurePersistentLogging option to object etsysSyslogClientControl to enable secure syslog event logging to a secure file. Also added etsysSyslogServerSecureFile as an option for the object etsysSyslogApplicationAllowedServers as a possible destination for syslog events.', 'Reversed shifting of BIT assignments in etsysSyslogApplicationAllowedServers for backwards compatability.', 'Fixed a typographical syntax error in etsysSyslogApplicationAllowedServers object.', 'Augmented the BITS definition in the etsysSyslogApplicationAllowedServers leaf with correct numbering of the bits for the servers and adding bits for the console and file destinations.', 'Corrected the postal code in the CONTACT-INFO clause.', 'Augmented etsysSyslogClientControl to support the option of logging to non-volatile memory, added a DEFVAL clause to etsysSyslogClientControl, and added an object, etsysSyslogApplicationAllowedServers, to control which syslog servers will be sent messages on a per application basis.', 'Removed the import of BITS from SNMPv2-SMI.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysSyslogClientMIB.setLastUpdated('201103082015Z')
if mibBuilder.loadTexts: etsysSyslogClientMIB.setOrganization('Enterasys Networks')
if mibBuilder.loadTexts: etsysSyslogClientMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysSyslogClientMIB.setDescription('This MIB module defines a portion of the SNMP enterprise MIBs under the Enterasys enterprise OID pertaining to the configuration of the generation of Syslog compatible diagnostic messages for Enterasys products.')
class SyslogUdpPort(TextualConvention, Unsigned32):
    description = 'The UDP port number the client is using to send requests to this server. 514 is the IANA assigned port number for syslog.'
    status = 'current'

class SyslogFacility(TextualConvention, Integer32):
    description = 'This textual convention maps out to the facilities available for syslog messages.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23))

class SyslogSeverity(TextualConvention, Integer32):
    description = 'This textual convention maps out to the severity levels of syslog messages. The syslog protocol uses the values 0 (emergency), to 7 (debug).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("info", 7), ("debug", 8))

etsysSyslogClient = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1))
etsysSyslogServer = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2))
etsysSyslogApplication = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3))
etsysSyslogNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 5))
etsysSyslogClientMessages = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogClientMessages.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientMessages.setDescription('The number of messages successfully delivered to the upstream side of the syslog client software for processing.')
etsysSyslogClientMessagesDropped = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogClientMessagesDropped.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientMessagesDropped.setDescription('The number of messages unable to be queued to the downstream side of the syslog client software for transmitting.')
etsysSyslogClientLastMessageTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogClientLastMessageTime.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientLastMessageTime.setDescription('The sysUpTime of the last attempt, successful or otherwise, to queue a message to the downstream side of the syslog client software.')
etsysSyslogClientControl = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1, 4), Bits().clone(namedValues=NamedValues(("etsysSyslogClientControlConsoleLogging", 0), ("etsysSyslogClientControlPersistentLogging", 1), ("etsysSyslogClientControlSecurePersistentLogging", 2))).clone(namedValues=NamedValues(("etsysSyslogClientControlConsoleLogging", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogClientControl.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientControl.setDescription('A list of attributes to control the operation of the syslog client.')
etsysSyslogClientSecureMessagesDropped = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogClientSecureMessagesDropped.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientSecureMessagesDropped.setDescription('The number of messages unable to be queued to the downstream side of the syslog client software for transmitting to a secure file.')
etsysSyslogServerMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogServerMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerMaxEntries.setDescription('The maximum number of entries allowed in the etsysSyslogServerTable.')
etsysSyslogServerNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogServerNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerNumEntries.setDescription('The number of entries currently in the etsysSyslogServerTable.')
etsysSyslogServerTableNextAvailableIndex = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogServerTableNextAvailableIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerTableNextAvailableIndex.setDescription('This object indicates the numerically lowest available index within this entity, which may be used for the value of etsysSyslogServerIndex in the creation of a new entry in the etsysSyslogServerTable. An index is considered available if the index value falls within the range of 1 to 8 and is not being used to index an existing entry in the etsysSyslogServerTable contained within this entity. A value of zero indicates that all of the entries in the etsysSyslogServerTable are currently in use. This value should only be considered a guideline for management creation of etsysSyslogServerEntries, there is no requirement on management to create entries based upon this index value.')
etsysSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4), )
if mibBuilder.loadTexts: etsysSyslogServerTable.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerTable.setDescription('A table containing Syslog server information.')
etsysSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1), ).setIndexNames((0, "ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerIndex"))
if mibBuilder.loadTexts: etsysSyslogServerEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerEntry.setDescription('Defines the information to generate syslog messages to an aggregating agent or server. Entries within this table with an access level of read- create MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: etsysSyslogServerIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerIndex.setDescription('A unique arbitrary identifier for this syslog server.')
etsysSyslogServerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerDescription.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerDescription.setDescription('Administratively assigned textual description of this syslog server.')
etsysSyslogServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerAddressType.setDescription('The type of Internet address by which the Syslog server is specified in etsysSyslogServerAddress. Not all address types may be supported.')
etsysSyslogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerAddress.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerAddress.setDescription('The Internet address for the Syslog message server. The use of DNS domain names is discouraged, and agent support for them is optional. Deciding when, and how often, to resolve them is an issue. Not resolving them often enough means you might lose synchronization with the associated entry in the DNS server, and resolving them too often might leave you without access to the Syslog server during critical network events.')
etsysSyslogServerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 5), SyslogUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerUdpPort.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerUdpPort.setDescription('The UDP port number the client is using to send requests to this server. If an entity only supports sending messages using a single UDP port to all servers then this may optionally be implemented read-only, in which case the current value of etsysSyslogServerDefaultUdpPort will be used.')
etsysSyslogServerFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 6), SyslogFacility()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerFacility.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerFacility.setDescription('The syslog facility (local0-local7) that will be encoded in messages sent to this server. If an entity only supports encoding a single facility in all messages to all servers then this may optionally be implemented read-only, in which case the current value of etsysSyslogServerDefaultFacility will be used.')
etsysSyslogServerSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 7), SyslogSeverity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerSeverity.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerSeverity.setDescription('The maximum severity level of the messages that should be forwarded to the syslog server. The higher the level, the lower the severity. If an entity only supports filtering based on a single severity level for all servers then this may optionally be implemented read-only, in which case the current value of etsysSyslogServerDefaultSeverity will be used.')
etsysSyslogServerMessagesIgnored = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogServerMessagesIgnored.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerMessagesIgnored.setDescription('This is a count of messages not sent to this server because the severity level of the message was above etsysSyslogServerSeverity, the higher the level, the lower the severity.')
etsysSyslogServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSyslogServerRowStatus.setReference('RFC2579 (Textual Conventions for SMIv2)')
if mibBuilder.loadTexts: etsysSyslogServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerRowStatus.setDescription("This object allows for the dynamic creation and deletion of entries within the etsysSyslogServerTable as well as the activation and deactivation of these entries. When this object's value is set to notInService(2) this server will not be sent any messages, nor will any of its counters be incremented. The agent should not delete a row, except in the case of the loss of persistent storage. Refer to the RowStatus convention for further details on the behavior of this object.")
etsysSyslogServerDefaultUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 5), SyslogUdpPort().clone(514)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogServerDefaultUdpPort.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerDefaultUdpPort.setDescription('The default UDP port number that the managed entity is using to send syslog messages. This value will be used as the default value for etsysSyslogServerUdpPort when creating rows in the etsysSyslogServerTable and either: 1.) no value is specified for etsysSyslogServerUdpPort, or 2.) etsysSyslogServerUdpPort is implemented read-only. If etsysSyslogServerUdpPort is implemented read-only, and this value is changed, it should affect the UDP port that is used to send syslog messages to all servers as soon as it is practical. This parameter value is maintained across system reboots.')
etsysSyslogServerDefaultFacility = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 6), SyslogFacility().clone('local7')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogServerDefaultFacility.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerDefaultFacility.setDescription('The default syslog facility (local0-local7) that will be encoded in syslog messages. This value will be used as the default value for etsysSyslogServerFacility when creating rows in the etsysSyslogServerTable and either: 1.) no value is specified for etsysSyslogServerFacility, or 2.) etsysSyslogServerFacility is implemented read-only. If etsysSyslogServerFacility is implemented read-only, and this value is changed, it should affect the syslog facility that is encoded in all syslog messages as soon as it is practical. This parameter value is maintained across system reboots.')
etsysSyslogServerDefaultSeverity = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 2, 7), SyslogSeverity().clone('error')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogServerDefaultSeverity.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerDefaultSeverity.setDescription('The default syslog message severity level that will be used to filter all syslog messages. This value will be used as the default value for etsysSyslogServerSeverity when creating rows in the etsysSyslogServerTable and either: 1.) no value is specified for etsysSyslogServerSeverity, or 2.) etsysSyslogServerSeverity is implemented read-only. The higher the severity level, the less critical it is. If etsysSyslogServerSeverity is implemented read-only, and this value is changed, it should affect the syslog message severity level that will be used to filter all syslog messages as soon as it is practical. This parameter value is maintained across system reboots.')
etsysSyslogApplicationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1), )
if mibBuilder.loadTexts: etsysSyslogApplicationTable.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationTable.setDescription('This is a table of applications on the managed entity that provide individual control over the severity level of the messages that they will generate.')
etsysSyslogApplicationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1), ).setIndexNames((0, "ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationIndex"))
if mibBuilder.loadTexts: etsysSyslogApplicationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationEntry.setDescription('An individual application that provides that ability to control the messages that it generates based on a severity level. MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysSyslogApplicationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysSyslogApplicationIndex.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationIndex.setDescription('A unique arbitrary identifier for this application.')
etsysSyslogApplicationDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogApplicationDescription.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationDescription.setDescription('Textual description of this application, assigned by the managed entity.')
etsysSyslogApplicationMnemonic = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSyslogApplicationMnemonic.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationMnemonic.setDescription("An abbreviation of the textual description for this application, assigned by the managed entity. i.e. 'STP' for 'Spanning Tree Protocol', etc. This provides a mapping between the textual descriptions and the mnemonics used in the syslog messages.")
etsysSyslogApplicationSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1, 4), SyslogSeverity().clone('error')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogApplicationSeverity.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationSeverity.setDescription('The maximum severity level of the messages from this application that should be forwarded to the syslog client software for processing. The higher the severity level, the more verbose the messages.')
etsysSyslogApplicationAllowedServers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 3, 1, 1, 5), Bits().clone(namedValues=NamedValues(("etsysSyslogServerIndex1", 0), ("etsysSyslogServerIndex2", 1), ("etsysSyslogServerIndex3", 2), ("etsysSyslogServerIndex4", 3), ("etsysSyslogServerIndex5", 4), ("etsysSyslogServerIndex6", 5), ("etsysSyslogServerIndex7", 6), ("etsysSyslogServerIndex8", 7), ("etsysSyslogServerConsole", 8), ("etsysSyslogServerFile", 9), ("etsysSyslogServerSecureFile", 10))).clone(namedValues=NamedValues(("etsysSyslogServerIndex1", 0), ("etsysSyslogServerIndex2", 1), ("etsysSyslogServerIndex3", 2), ("etsysSyslogServerIndex4", 3), ("etsysSyslogServerIndex5", 4), ("etsysSyslogServerIndex6", 5), ("etsysSyslogServerIndex7", 6), ("etsysSyslogServerIndex8", 7), ("etsysSyslogServerConsole", 8), ("etsysSyslogServerFile", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSyslogApplicationAllowedServers.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationAllowedServers.setDescription('A list of syslog servers that will be forwarded messages logged by this application. Bits in this list correspond to rows in the etsysSyslogServerTable. Bit positions that are set, but for which the corresponding etsysSyslogServerRowStatus object is not active, will be ignored.')
etsysSyslogSecureLogArchiveNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 5, 1))
if mibBuilder.loadTexts: etsysSyslogSecureLogArchiveNotification.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogSecureLogArchiveNotification.setDescription('Syslog security log archive notification. The device will send this notification when the secure syslog file should be archived offline.')
etsysSyslogSecureLogDroppedMsgNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 5, 2)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientSecureMessagesDropped"))
if mibBuilder.loadTexts: etsysSyslogSecureLogDroppedMsgNotification.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogSecureLogDroppedMsgNotification.setDescription('Syslog secure messages dropped notification. The device will send this notification when messages that are required to be sent to the secure syslog file are dropped, failing to record those events.')
etsysSyslogClientConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4))
etsysSyslogClientGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1))
etsysSyslogClientCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 2))
etsysSyslogClientGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 1)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientMessages"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientMessagesDropped"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientLastMessageTime"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogClientGroup = etsysSyslogClientGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientGroup.setDescription('A collection of objects providing syslog message statistics.')
etsysSyslogServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 2)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerMaxEntries"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerNumEntries"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerTableNextAvailableIndex"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerDescription"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerAddressType"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerAddress"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerUdpPort"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerFacility"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerSeverity"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerMessagesIgnored"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogServerGroup = etsysSyslogServerGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerGroup.setDescription('A collection of objects providing descriptions of syslog servers for sending system messages to.')
etsysSyslogApplicationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 3)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationDescription"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationMnemonic"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationSeverity"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationAllowedServers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogApplicationGroup = etsysSyslogApplicationGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogApplicationGroup.setDescription('A collection of objects providing a mechanism to control the severity level of the messages individual application may generate.')
etsysSyslogServerDefaultsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 4)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerDefaultUdpPort"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerDefaultFacility"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerDefaultSeverity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogServerDefaultsGroup = etsysSyslogServerDefaultsGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogServerDefaultsGroup.setDescription('A collection of objects providing default values for the syslog servers that can optionally be overridden on a per server basis with etsysSyslogServerFacility, etsysSyslogServerSeverity, or etsysSyslogServerUdpPort.')
etsysSyslogNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 5)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogSecureLogArchiveNotification"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogSecureLogDroppedMsgNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogNotificationGroup = etsysSyslogNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogNotificationGroup.setDescription('A collection of supported notifications regarding syslog events.')
etsysSyslogSecureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 1, 6)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientSecureMessagesDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogSecureGroup = etsysSyslogSecureGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogSecureGroup.setDescription('A collection of objects providing statistics and information for syslog events that are associated with a secure file.')
etsysSyslogClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 2, 1)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogClientGroup"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerGroup"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogServerDefaultsGroup"), ("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogApplicationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogClientCompliance = etsysSyslogClientCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogClientCompliance.setDescription('The compliance statement for devices that support sending system messages to a syslog server.')
etsysSyslogNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 2, 2)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogNotificationCompliance = etsysSyslogNotificationCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogNotificationCompliance.setDescription('The compliance statement for devices that support sending notifications upon specified syslog events.')
etsysSyslogSecureCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 14, 4, 2, 3)).setObjects(("ENTERASYS-SYSLOG-CLIENT-MIB", "etsysSyslogSecureGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSyslogSecureCompliance = etsysSyslogSecureCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysSyslogSecureCompliance.setDescription('The compliance statement for devices that support sending system messages to a secure syslog file.')
mibBuilder.exportSymbols("ENTERASYS-SYSLOG-CLIENT-MIB", etsysSyslogNotificationCompliance=etsysSyslogNotificationCompliance, etsysSyslogServerGroup=etsysSyslogServerGroup, etsysSyslogClientCompliance=etsysSyslogClientCompliance, SyslogFacility=SyslogFacility, etsysSyslogSecureCompliance=etsysSyslogSecureCompliance, etsysSyslogServerDescription=etsysSyslogServerDescription, etsysSyslogServerRowStatus=etsysSyslogServerRowStatus, etsysSyslogApplicationDescription=etsysSyslogApplicationDescription, SyslogSeverity=SyslogSeverity, etsysSyslogServerTable=etsysSyslogServerTable, etsysSyslogServerUdpPort=etsysSyslogServerUdpPort, etsysSyslogApplicationMnemonic=etsysSyslogApplicationMnemonic, etsysSyslogApplicationAllowedServers=etsysSyslogApplicationAllowedServers, SyslogUdpPort=SyslogUdpPort, etsysSyslogSecureLogDroppedMsgNotification=etsysSyslogSecureLogDroppedMsgNotification, etsysSyslogServerDefaultsGroup=etsysSyslogServerDefaultsGroup, etsysSyslogApplicationIndex=etsysSyslogApplicationIndex, etsysSyslogClientControl=etsysSyslogClientControl, etsysSyslogClientMIB=etsysSyslogClientMIB, etsysSyslogServerDefaultUdpPort=etsysSyslogServerDefaultUdpPort, etsysSyslogClientCompliances=etsysSyslogClientCompliances, etsysSyslogClient=etsysSyslogClient, etsysSyslogServerAddressType=etsysSyslogServerAddressType, etsysSyslogServerDefaultFacility=etsysSyslogServerDefaultFacility, etsysSyslogApplicationTable=etsysSyslogApplicationTable, etsysSyslogNotification=etsysSyslogNotification, etsysSyslogServerTableNextAvailableIndex=etsysSyslogServerTableNextAvailableIndex, etsysSyslogServerDefaultSeverity=etsysSyslogServerDefaultSeverity, etsysSyslogClientMessagesDropped=etsysSyslogClientMessagesDropped, etsysSyslogServerFacility=etsysSyslogServerFacility, etsysSyslogApplicationSeverity=etsysSyslogApplicationSeverity, PYSNMP_MODULE_ID=etsysSyslogClientMIB, etsysSyslogSecureGroup=etsysSyslogSecureGroup, etsysSyslogClientLastMessageTime=etsysSyslogClientLastMessageTime, etsysSyslogServerAddress=etsysSyslogServerAddress, etsysSyslogServerNumEntries=etsysSyslogServerNumEntries, etsysSyslogSecureLogArchiveNotification=etsysSyslogSecureLogArchiveNotification, etsysSyslogClientGroups=etsysSyslogClientGroups, etsysSyslogApplicationGroup=etsysSyslogApplicationGroup, etsysSyslogServerIndex=etsysSyslogServerIndex, etsysSyslogApplication=etsysSyslogApplication, etsysSyslogNotificationGroup=etsysSyslogNotificationGroup, etsysSyslogServerMessagesIgnored=etsysSyslogServerMessagesIgnored, etsysSyslogClientGroup=etsysSyslogClientGroup, etsysSyslogServer=etsysSyslogServer, etsysSyslogClientConformance=etsysSyslogClientConformance, etsysSyslogClientMessages=etsysSyslogClientMessages, etsysSyslogServerEntry=etsysSyslogServerEntry, etsysSyslogServerSeverity=etsysSyslogServerSeverity, etsysSyslogApplicationEntry=etsysSyslogApplicationEntry, etsysSyslogClientSecureMessagesDropped=etsysSyslogClientSecureMessagesDropped, etsysSyslogServerMaxEntries=etsysSyslogServerMaxEntries)
