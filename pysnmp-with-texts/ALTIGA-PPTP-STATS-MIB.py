#
# PySNMP MIB module ALTIGA-PPTP-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-PPTP-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:21:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alPptpMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alPptpMibModule")
alPptpGroup, alStatsPptp = mibBuilder.importSymbols("ALTIGA-MIB", "alPptpGroup", "alStatsPptp")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, MibIdentifier, Integer32, Counter32, TimeTicks, ObjectIdentity, NotificationType, ModuleIdentity, iso, Counter64, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "MibIdentifier", "Integer32", "Counter32", "TimeTicks", "ObjectIdentity", "NotificationType", "ModuleIdentity", "iso", "Counter64", "Gauge32", "Unsigned32")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
altigaPptpStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 10, 2))
altigaPptpStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altigaPptpStatsMibModule.setRevisionsDescriptions(('Added module compliance.', 'Updated with new header',))
if mibBuilder.loadTexts: altigaPptpStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaPptpStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: altigaPptpStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: altigaPptpStatsMibModule.setDescription('The Altiga PPTP Statistics MIB models counters and objects that are of management interest for PPTP tunnels. Acronyms The following acronyms are used in this document: MIB: Management Information Base PPTP: Point-to-Point Tunneling Protocol ')
alStatsPptpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1))
alPptpStatsLocalProtVers = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsLocalProtVers.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsLocalProtVers.setDescription('This object describes the protocol version and revision of the local implementation. The first octet contains the protocol version. The second octet contains the protocol revision.')
alPptpStatsLocalFraming = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsLocalFraming.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsLocalFraming.setDescription('A set of bits indicating the PPTP framing capabilities of this system.')
alPptpStatsLocalBearer = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsLocalBearer.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsLocalBearer.setDescription('A set of bits indicating the PPTP bearer capabilities of this system.')
alPptpStatsLocalFirmwareRev = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsLocalFirmwareRev.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsLocalFirmwareRev.setDescription('This object defines the local firmware revision.')
alPptpStatsTotalTunnels = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTotalTunnels.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTotalTunnels.setDescription('This object returns the total number of tunnels, including those that did not reach the established state.')
alPptpStatsActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsActiveTunnels.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsActiveTunnels.setDescription('This object returns the number of tunnels that are currently active.')
alPptpStatsMaxTunnels = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsMaxTunnels.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsMaxTunnels.setDescription('The maximum number of simultaneously active PPTP tunnels since the system was booted.')
alPptpStatsTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTotalSessions.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTotalSessions.setDescription('This object returns the total number of sessions, including those that did not reach the established state.')
alPptpStatsActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsActiveSessions.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsActiveSessions.setDescription('This object returns the number of sessions that are currently active.')
alPptpStatsMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsMaxSessions.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsMaxSessions.setDescription('The maximum number of simultaneously active PPTP sessions since the system was booted.')
alPptpStatsControlRecvOctets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsControlRecvOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsControlRecvOctets.setDescription('This object returns the number of control channel octets received.')
alPptpStatsControlRecvPackets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsControlRecvPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsControlRecvPackets.setDescription('This object returns the number of control packets received.')
alPptpStatsControlRecvDiscards = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsControlRecvDiscards.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsControlRecvDiscards.setDescription('This object returns the number of control packets received that were discarded.')
alPptpStatsControlSendOctets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsControlSendOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsControlSendOctets.setDescription('This object returns the number of control channel octets that were transmitted to tunnel endpoints.')
alPptpStatsControlSendPackets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsControlSendPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsControlSendPackets.setDescription('This object returns the number of control packets that were transmitted to tunnel endpoints.')
alPptpStatsPayloadRecvOctets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsPayloadRecvOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsPayloadRecvOctets.setDescription('This object returns the number of payload channel octets that were received.')
alPptpStatsPayloadRecvPackets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsPayloadRecvPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsPayloadRecvPackets.setDescription('This object returns the number of payload packets that were received.')
alPptpStatsPayloadRecvDiscards = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsPayloadRecvDiscards.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsPayloadRecvDiscards.setDescription('This object returns the number of received payload packets that were discarded.')
alPptpStatsPayloadSendOctets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsPayloadSendOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsPayloadSendOctets.setDescription('This object returns the number of payload channel octets that were transmitted to tunnel peers.')
alPptpStatsPayloadSendPackets = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsPayloadSendPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsPayloadSendPackets.setDescription('This object returns the number of payload packets that were transmitted to tunnel peers.')
alPptpStatsTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2), )
if mibBuilder.loadTexts: alPptpStatsTunnelTable.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelTable.setDescription('The PPTP tunnel status and statistics table.')
alPptpStatsTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1), ).setIndexNames((0, "ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerIpAddr"))
if mibBuilder.loadTexts: alPptpStatsTunnelEntry.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelEntry.setDescription('An entry in the alPptpStatsTunnelTable.')
alPptpStatsTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alPptpStatsTunnelRowStatus.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelRowStatus.setDescription('The status of this row. Used to terminate the tunnel, cannot be used to create a tunnel.')
alPptpStatsTunnelPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerIpAddr.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerIpAddr.setDescription("The peer's IP address for this tunnel.")
alPptpStatsTunnelDatastreamId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelDatastreamId.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelDatastreamId.setDescription('The IP-GRE datastream ID of this tunnel.')
alPptpStatsTunnelLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelLocalIpAddr.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelLocalIpAddr.setDescription('The local IP address for this tunnel.')
alPptpStatsTunnelPeerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerHostName.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerHostName.setDescription("The peer's host name, as indicated by the peer in a Start-Control-Connection packet.")
alPptpStatsTunnelPeerVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerVendorName.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerVendorName.setDescription("The peer's vendor name, as indicated by the peer in a Start-Control-Connection packet.")
alPptpStatsTunnelPeerFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerFirmwareRev.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerFirmwareRev.setDescription("This object contains the tunnel peer's firmware revision number. If the tunnel is idle this object should maintain its value from the last time it was connected.")
alPptpStatsTunnelPeerProtVers = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerProtVers.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerProtVers.setDescription('This object describes the protocol version and revision of the tunnel peers implementation. The first octet contains the protocol version. The second octet contains the protocol revision.')
alPptpStatsTunnelPeerFramingCap = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerFramingCap.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerFramingCap.setDescription('This object describes the Framing Capabilities of the tunnel peer. If the tunnel is idle this object should maintain its value from the last time it was connected.')
alPptpStatsTunnelPeerBearerCap = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerBearerCap.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerBearerCap.setDescription('This object describes the Bearer Capabilities of the tunnel peer. If the tunnel is idle this object should maintain its value from the last time it was connected.')
alPptpStatsTunnelPeerMaxChan = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelPeerMaxChan.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelPeerMaxChan.setDescription("The peer's maximum channels value, as indicated by the peer in a Start-Control-Connection packet.")
alPptpStatsTunnelActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsTunnelActiveSessions.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsTunnelActiveSessions.setDescription('This object contains the total number of sessions for this tunnel.')
alPptpStatsSessionTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3), )
if mibBuilder.loadTexts: alPptpStatsSessionTable.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionTable.setDescription('List of active sessions within tunnels.')
alPptpStatsSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1), ).setIndexNames((0, "ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionDatastreamId"))
if mibBuilder.loadTexts: alPptpStatsSessionEntry.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionEntry.setDescription('An entry in the alPptpStatsSessionTable.')
alPptpStatsSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alPptpStatsSessionRowStatus.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionRowStatus.setDescription('The status of this row. Used to terminate the session, cannot be used to create a Session.')
alPptpStatsSessionDatastreamId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionDatastreamId.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionDatastreamId.setDescription('The GRE-PPP datastream ID of this tunnel, used as the index for this row.')
alPptpStatsSessionLocalCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionLocalCallId.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionLocalCallId.setDescription('The local call ID within the tunnel of the session represented by this row.')
alPptpStatsSessionPeerCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionPeerCallId.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionPeerCallId.setDescription('The peer call ID within the tunnel of the session represented by this row.')
alPptpStatsSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionUserName.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionUserName.setDescription('This object identifies the peer session name on this interface. This is typically the login name of the remote user. If the user name is unknown to the local tunnel peer then this object will contain a null string.')
alPptpStatsSessionSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionSerial.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionSerial.setDescription('The call serial number within the tunnel of the session represented by this row.')
alPptpStatsSessionMinimumSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionMinimumSpeed.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionMinimumSpeed.setDescription('The lowest acceptable line speed (in bits/second) for this session, as indicated in the Call-Request packet.')
alPptpStatsSessionMaximumSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionMaximumSpeed.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionMaximumSpeed.setDescription('The highest acceptable line speed (in bits/second) for this session, as indicated in the Call-Request packet.')
alPptpStatsSessionConnectSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionConnectSpeed.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionConnectSpeed.setDescription('The actual line speed (in bits/second) for this session.')
alPptpStatsSessionBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("analog", 1), ("digital", 2), ("any", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionBearerType.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionBearerType.setDescription('A value indicating the bearer capability required for this session.')
alPptpStatsSessionFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("asynchronous", 1), ("synchronous", 2), ("either", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionFramingType.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionFramingType.setDescription('A value indicating the framing capability required for this session.')
alPptpStatsSessionPhysicalChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionPhysicalChannel.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionPhysicalChannel.setDescription('The physical channel number used for this session.')
alPptpStatsSessionLocalWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionLocalWindowSize.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionLocalWindowSize.setDescription('The number of received data packets this system will buffer for this session, as indicated in the setup packets for this session.')
alPptpStatsSessionPeerWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionPeerWindowSize.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionPeerWindowSize.setDescription('The number of received data packets the peer will buffer for this session, as indicated in the setup packets for this session.')
alPptpStatsSessionLocalPpd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionLocalPpd.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionLocalPpd.setDescription('A measure of the packet processing delay that might be imposed on data sent to this system, in units of 1/10 seconds.')
alPptpStatsSessionPeerPpd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionPeerPpd.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionPeerPpd.setDescription('A measure of the packet processing delay that might be imposed on data sent to the peer, in units of 1/10 seconds.')
alPptpStatsSessionRecvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionRecvOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionRecvOctets.setDescription('This object returns the total number payload octets received for this session.')
alPptpStatsSessionRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionRecvPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionRecvPackets.setDescription('This object returns the total number of payload packets received for this session.')
alPptpStatsSessionRecvDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionRecvDiscards.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionRecvDiscards.setDescription('This object returns the total number of payload packets received that were discarded for this session.')
alPptpStatsSessionRecvZLB = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionRecvZLB.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionRecvZLB.setDescription('This object returns the total number of Zero Length Body acknowlegement payload packets received for this session.')
alPptpStatsSessionSendOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionSendOctets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionSendOctets.setDescription('This object returns the total number of payload octets transmitted for this session.')
alPptpStatsSessionSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionSendPackets.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionSendPackets.setDescription('This object returns the total number of payload packets transmitted for this session.')
alPptpStatsSessionSendZLB = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionSendZLB.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionSendZLB.setDescription('This object returns the total number of Zero Length Body acknowledgement packets transmitted for this session.')
alPptpStatsSessionAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionAckTimeouts.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionAckTimeouts.setDescription('This object returns the total number of acknowledgement timeouts seen on payload packets for this session.')
alPptpStatsSessionLocalFlowOff = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionLocalFlowOff.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionLocalFlowOff.setDescription('Indicates whether the session is in a locally flowed-off state because the number of outstanding unacknowledged packets received from the peer is equal to the local window size.')
alPptpStatsSessionPeerFlowOff = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionPeerFlowOff.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionPeerFlowOff.setDescription("Indicates whether the session peer is in a flowed-off state because the number of outstanding unacknowledged packets sent to the peer is equal to the peer's window size.")
alPptpStatsSessionOutOfWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionOutOfWindow.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionOutOfWindow.setDescription('The number of data packets received from the peer which were received outside of the offered receive window.')
alPptpStatsSessionOutOfSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionOutOfSequence.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionOutOfSequence.setDescription('The number of data packets that were not received in the correct order (as per the sequence number).')
alPptpStatsSessionTunnelPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 3, 3, 1, 29), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPptpStatsSessionTunnelPeerIpAddr.setStatus('current')
if mibBuilder.loadTexts: alPptpStatsSessionTunnelPeerIpAddr.setDescription("The peer's IP address for the tunnel over which this session is established.")
altigaPptpStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 10, 2, 1))
altigaPptpStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 10, 2, 1, 1))
altigaPptpStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 10, 2, 1, 1, 1)).setObjects(("ALTIGA-PPTP-STATS-MIB", "altigaPptpStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaPptpStatsMibCompliance = altigaPptpStatsMibCompliance.setStatus('current')
if mibBuilder.loadTexts: altigaPptpStatsMibCompliance.setDescription('The compliance statement for agents which implement the Altiga PPTP Statistics MIB.')
altigaPptpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 3, 2)).setObjects(("ALTIGA-PPTP-STATS-MIB", "alPptpStatsLocalProtVers"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsLocalFraming"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsLocalBearer"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsLocalFirmwareRev"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTotalTunnels"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsActiveTunnels"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsMaxTunnels"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTotalSessions"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsActiveSessions"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsMaxSessions"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsControlRecvOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsControlRecvPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsControlRecvDiscards"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsControlSendOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsControlSendPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsPayloadRecvOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsPayloadRecvPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsPayloadRecvDiscards"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsPayloadSendOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsPayloadSendPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelRowStatus"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelDatastreamId"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelLocalIpAddr"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerIpAddr"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerHostName"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerVendorName"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerFirmwareRev"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerProtVers"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerFramingCap"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerBearerCap"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelPeerMaxChan"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsTunnelActiveSessions"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionRowStatus"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionDatastreamId"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionLocalCallId"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionPeerCallId"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionUserName"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionSerial"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionMinimumSpeed"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionMaximumSpeed"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionConnectSpeed"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionBearerType"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionFramingType"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionPhysicalChannel"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionLocalWindowSize"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionPeerWindowSize"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionLocalPpd"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionPeerPpd"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionRecvOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionRecvPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionRecvDiscards"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionRecvZLB"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionSendOctets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionSendPackets"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionSendZLB"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionAckTimeouts"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionLocalFlowOff"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionPeerFlowOff"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionOutOfWindow"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionOutOfSequence"), ("ALTIGA-PPTP-STATS-MIB", "alPptpStatsSessionTunnelPeerIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaPptpStatsGroup = altigaPptpStatsGroup.setStatus('current')
if mibBuilder.loadTexts: altigaPptpStatsGroup.setDescription('The objects for PPTP statistics.')
mibBuilder.exportSymbols("ALTIGA-PPTP-STATS-MIB", alPptpStatsTunnelPeerBearerCap=alPptpStatsTunnelPeerBearerCap, alPptpStatsSessionBearerType=alPptpStatsSessionBearerType, alPptpStatsActiveTunnels=alPptpStatsActiveTunnels, alPptpStatsSessionPeerPpd=alPptpStatsSessionPeerPpd, alPptpStatsSessionUserName=alPptpStatsSessionUserName, alPptpStatsTotalTunnels=alPptpStatsTotalTunnels, alPptpStatsControlSendPackets=alPptpStatsControlSendPackets, alPptpStatsActiveSessions=alPptpStatsActiveSessions, alPptpStatsTotalSessions=alPptpStatsTotalSessions, alPptpStatsPayloadRecvDiscards=alPptpStatsPayloadRecvDiscards, alPptpStatsSessionPeerWindowSize=alPptpStatsSessionPeerWindowSize, alPptpStatsSessionSendOctets=alPptpStatsSessionSendOctets, alPptpStatsSessionLocalFlowOff=alPptpStatsSessionLocalFlowOff, alPptpStatsSessionLocalPpd=alPptpStatsSessionLocalPpd, alPptpStatsLocalFraming=alPptpStatsLocalFraming, alPptpStatsPayloadSendOctets=alPptpStatsPayloadSendOctets, alPptpStatsSessionPeerFlowOff=alPptpStatsSessionPeerFlowOff, alPptpStatsSessionOutOfWindow=alPptpStatsSessionOutOfWindow, alStatsPptpGlobal=alStatsPptpGlobal, alPptpStatsMaxTunnels=alPptpStatsMaxTunnels, alPptpStatsSessionRowStatus=alPptpStatsSessionRowStatus, altigaPptpStatsMibCompliances=altigaPptpStatsMibCompliances, altigaPptpStatsGroup=altigaPptpStatsGroup, alPptpStatsTunnelPeerVendorName=alPptpStatsTunnelPeerVendorName, alPptpStatsSessionEntry=alPptpStatsSessionEntry, alPptpStatsSessionTable=alPptpStatsSessionTable, alPptpStatsSessionRecvZLB=alPptpStatsSessionRecvZLB, alPptpStatsTunnelLocalIpAddr=alPptpStatsTunnelLocalIpAddr, alPptpStatsTunnelEntry=alPptpStatsTunnelEntry, alPptpStatsTunnelPeerFirmwareRev=alPptpStatsTunnelPeerFirmwareRev, alPptpStatsSessionPeerCallId=alPptpStatsSessionPeerCallId, alPptpStatsSessionPhysicalChannel=alPptpStatsSessionPhysicalChannel, alPptpStatsSessionTunnelPeerIpAddr=alPptpStatsSessionTunnelPeerIpAddr, alPptpStatsControlRecvDiscards=alPptpStatsControlRecvDiscards, alPptpStatsControlRecvPackets=alPptpStatsControlRecvPackets, alPptpStatsLocalBearer=alPptpStatsLocalBearer, alPptpStatsMaxSessions=alPptpStatsMaxSessions, alPptpStatsPayloadRecvOctets=alPptpStatsPayloadRecvOctets, altigaPptpStatsMibModule=altigaPptpStatsMibModule, alPptpStatsTunnelPeerIpAddr=alPptpStatsTunnelPeerIpAddr, alPptpStatsSessionSendZLB=alPptpStatsSessionSendZLB, alPptpStatsLocalFirmwareRev=alPptpStatsLocalFirmwareRev, alPptpStatsTunnelRowStatus=alPptpStatsTunnelRowStatus, alPptpStatsSessionOutOfSequence=alPptpStatsSessionOutOfSequence, alPptpStatsControlSendOctets=alPptpStatsControlSendOctets, altigaPptpStatsMibCompliance=altigaPptpStatsMibCompliance, altigaPptpStatsMibConformance=altigaPptpStatsMibConformance, alPptpStatsSessionRecvPackets=alPptpStatsSessionRecvPackets, PYSNMP_MODULE_ID=altigaPptpStatsMibModule, alPptpStatsSessionRecvOctets=alPptpStatsSessionRecvOctets, alPptpStatsTunnelPeerMaxChan=alPptpStatsTunnelPeerMaxChan, alPptpStatsTunnelDatastreamId=alPptpStatsTunnelDatastreamId, alPptpStatsTunnelActiveSessions=alPptpStatsTunnelActiveSessions, alPptpStatsSessionSerial=alPptpStatsSessionSerial, alPptpStatsSessionMaximumSpeed=alPptpStatsSessionMaximumSpeed, alPptpStatsSessionLocalWindowSize=alPptpStatsSessionLocalWindowSize, alPptpStatsSessionRecvDiscards=alPptpStatsSessionRecvDiscards, alPptpStatsSessionSendPackets=alPptpStatsSessionSendPackets, alPptpStatsSessionAckTimeouts=alPptpStatsSessionAckTimeouts, alPptpStatsSessionDatastreamId=alPptpStatsSessionDatastreamId, alPptpStatsPayloadRecvPackets=alPptpStatsPayloadRecvPackets, alPptpStatsTunnelPeerFramingCap=alPptpStatsTunnelPeerFramingCap, alPptpStatsTunnelTable=alPptpStatsTunnelTable, alPptpStatsSessionConnectSpeed=alPptpStatsSessionConnectSpeed, alPptpStatsSessionLocalCallId=alPptpStatsSessionLocalCallId, alPptpStatsSessionMinimumSpeed=alPptpStatsSessionMinimumSpeed, alPptpStatsPayloadSendPackets=alPptpStatsPayloadSendPackets, alPptpStatsTunnelPeerProtVers=alPptpStatsTunnelPeerProtVers, alPptpStatsTunnelPeerHostName=alPptpStatsTunnelPeerHostName, alPptpStatsSessionFramingType=alPptpStatsSessionFramingType, alPptpStatsControlRecvOctets=alPptpStatsControlRecvOctets, alPptpStatsLocalProtVers=alPptpStatsLocalProtVers)
