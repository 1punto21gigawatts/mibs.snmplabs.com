#
# PySNMP MIB module CADANT-CMTS-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:45:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
trapCounter, trapSeverity = mibBuilder.importSymbols("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter", "trapSeverity")
cadNotification, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadNotification")
ifOperStatus, ifAdminStatus, ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifOperStatus", "ifAdminStatus", "ifDescr", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Gauge32, MibIdentifier, Integer32, Unsigned32, IpAddress, Counter64, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Gauge32", "MibIdentifier", "Integer32", "Unsigned32", "IpAddress", "Counter64", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cadNotificationMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1))
cadNotificationMib.setRevisions(('2015-09-14 00:00', '2006-05-03 00:00', '2005-09-28 00:00', '2003-03-26 00:00', '2002-07-24 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cadNotificationMib.setRevisionsDescriptions(('Add cadLinkUp.', 'Add cadIpdrNoPrimaryCollector, cadIpdrStreamingDisabled and cadIpdrReportCycleMissed.', 'Add RIP2 authentication failure.', 'Renamed RADIUS traps so that they can also be used by TACACS+.', 'Inital version. Add AAA/Security related traps.',))
if mibBuilder.loadTexts: cadNotificationMib.setLastUpdated('201509140000Z')
if mibBuilder.loadTexts: cadNotificationMib.setOrganization('Cadant Inc')
if mibBuilder.loadTexts: cadNotificationMib.setContactInfo('Cadant Technical Support ')
if mibBuilder.loadTexts: cadNotificationMib.setDescription('This MIB defines object which are NOTIFICATION-TYPE and used to define the SNMP Traps generated from C4 CMTS.')
cadTrapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1))
cadTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0))
cadTrapsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 1))
securityInfo = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 1, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: securityInfo.setStatus('current')
if mibBuilder.loadTexts: securityInfo.setDescription('The detail security failure information')
ipdrInfo = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipdrInfo.setStatus('current')
if mibBuilder.loadTexts: ipdrInfo.setDescription('The detail IPDR failure information')
aaaServerUnreachableTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 1)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: aaaServerUnreachableTrap.setStatus('current')
if mibBuilder.loadTexts: aaaServerUnreachableTrap.setDescription('An event to report that the AAA (RADIUS or TACACS+) server is not responding')
aaaServerGroupUnreachableTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 2)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: aaaServerGroupUnreachableTrap.setStatus('current')
if mibBuilder.loadTexts: aaaServerGroupUnreachableTrap.setDescription('An event to report that all the hosts in the AAA (RADIUS or TACACS+) server group are not responding')
aaaServerAuthFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 3)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: aaaServerAuthFailTrap.setStatus('current')
if mibBuilder.loadTexts: aaaServerAuthFailTrap.setDescription('An event to report that AAA (RADIUS or TACACS+) server rejected the authentication request')
secuLocalAuthFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 4)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: secuLocalAuthFailTrap.setStatus('current')
if mibBuilder.loadTexts: secuLocalAuthFailTrap.setDescription('An event to report that local password authentication failed')
secuLineAuthFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 5)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: secuLineAuthFailTrap.setStatus('current')
if mibBuilder.loadTexts: secuLineAuthFailTrap.setDescription('An event to report that line password authentication failed')
rip2AuthFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 6)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "securityInfo"))
if mibBuilder.loadTexts: rip2AuthFailTrap.setStatus('current')
if mibBuilder.loadTexts: rip2AuthFailTrap.setDescription('An event to report rip2 authentication failed.')
cadIpdrNoPrimaryCollector = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 7)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "ipdrInfo"))
if mibBuilder.loadTexts: cadIpdrNoPrimaryCollector.setStatus('current')
if mibBuilder.loadTexts: cadIpdrNoPrimaryCollector.setDescription('An event to report IPDR Streaming is enabled but there is no primary collector connected.')
cadIpdrStreamingDisabled = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 8)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "ipdrInfo"))
if mibBuilder.loadTexts: cadIpdrStreamingDisabled.setStatus('current')
if mibBuilder.loadTexts: cadIpdrStreamingDisabled.setDescription('An event to report IPDR Streaming function has been turned off.')
cadIpdrReportCycleMissed = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 9)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-NOTIFICATION-MIB", "ipdrInfo"))
if mibBuilder.loadTexts: cadIpdrReportCycleMissed.setStatus('current')
if mibBuilder.loadTexts: cadIpdrReportCycleMissed.setDescription('An event to report CMTS was not able to start the scheduled IPDR report cycle session on time. This may be due to system or network load or the lack of primary collector connection.')
cadLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6, 1, 1, 0, 10)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: cadLinkUp.setStatus('current')
if mibBuilder.loadTexts: cadLinkUp.setDescription('This is to expand standard linkUp trap to include ifDescr. A linkUp trap signifies that the SNMP entity, acting in an agent role, has detected that the ifOperStatus object for one of its communication links left the down state and transitioned into some other state (but not into the notPresent state). This other state is indicated by the included value of ifOperStatus.')
mibBuilder.exportSymbols("CADANT-CMTS-NOTIFICATION-MIB", cadTrapsInfo=cadTrapsInfo, aaaServerGroupUnreachableTrap=aaaServerGroupUnreachableTrap, aaaServerAuthFailTrap=aaaServerAuthFailTrap, cadIpdrNoPrimaryCollector=cadIpdrNoPrimaryCollector, secuLineAuthFailTrap=secuLineAuthFailTrap, aaaServerUnreachableTrap=aaaServerUnreachableTrap, PYSNMP_MODULE_ID=cadNotificationMib, cadLinkUp=cadLinkUp, securityInfo=securityInfo, cadTrapMibObjects=cadTrapMibObjects, cadNotificationMib=cadNotificationMib, cadTraps=cadTraps, cadIpdrStreamingDisabled=cadIpdrStreamingDisabled, secuLocalAuthFailTrap=secuLocalAuthFailTrap, rip2AuthFailTrap=rip2AuthFailTrap, ipdrInfo=ipdrInfo, cadIpdrReportCycleMissed=cadIpdrReportCycleMissed)
