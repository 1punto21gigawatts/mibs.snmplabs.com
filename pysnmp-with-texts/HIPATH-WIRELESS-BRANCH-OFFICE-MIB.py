#
# PySNMP MIB module HIPATH-WIRELESS-BRANCH-OFFICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HIPATH-WIRELESS-BRANCH-OFFICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:30:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
apIndex, = mibBuilder.importSymbols("HIPATH-WIRELESS-HWC-MIB", "apIndex")
hiPathWirelessModules, hiPathWirelessMgmt = mibBuilder.importSymbols("HIPATH-WIRELESS-SMI", "hiPathWirelessModules", "hiPathWirelessMgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Unsigned32, Bits, ObjectIdentity, Gauge32, Integer32, Counter64, enterprises, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Unsigned32", "Bits", "ObjectIdentity", "Gauge32", "Integer32", "Counter64", "enterprises", "Counter32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hiPathWirelessBranchOfficeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4329, 15, 5, 4))
hiPathWirelessBranchOfficeMIB.setRevisions(('2005-07-29 14:43',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hiPathWirelessBranchOfficeMIB.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: hiPathWirelessBranchOfficeMIB.setLastUpdated('200507291443Z')
if mibBuilder.loadTexts: hiPathWirelessBranchOfficeMIB.setOrganization('Chantry Networks Inc.')
if mibBuilder.loadTexts: hiPathWirelessBranchOfficeMIB.setContactInfo('Behrouz Sultan Chantry Networks, Inc. 1900 Minnesota Court, Suite 125 Mississauga ON, L5N 3C9 Email: behrouz.sultan@siemens.com Phone 1-905-363-6400 Fax 1-905-567-0099')
if mibBuilder.loadTexts: hiPathWirelessBranchOfficeMIB.setDescription('Branch office configuration MIB for the high path wireless LAN access controller.')
hiPathWirelessBranchOfficeMib = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22))
branchOfficeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1))
branchOfficeTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1), )
if mibBuilder.loadTexts: branchOfficeTable.setStatus('obsolete')
if mibBuilder.loadTexts: branchOfficeTable.setDescription('Table of branch office configuration values for the access points.')
branchOfficeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1), ).setIndexNames((0, "HIPATH-WIRELESS-HWC-MIB", "apIndex"))
if mibBuilder.loadTexts: branchOfficeEntry.setStatus('obsolete')
if mibBuilder.loadTexts: branchOfficeEntry.setDescription('Branch office configuration values for a specific access point.')
boConnectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("autoDiscovery", 1), ("staticConnect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boConnectMode.setStatus('obsolete')
if mibBuilder.loadTexts: boConnectMode.setDescription('Access point connection mode - use a static definition or service discovery.')
boIpAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcp", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boIpAllocation.setStatus('obsolete')
if mibBuilder.loadTexts: boIpAllocation.setDescription('Indicates if access point is to use DHCP to acquire an IP address or has a statically configured IP address.')
boStaticIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boStaticIpAddress.setStatus('obsolete')
if mibBuilder.loadTexts: boStaticIpAddress.setDescription('If access point is statically configured, contains the IP addres.')
boStaticNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boStaticNetmask.setStatus('obsolete')
if mibBuilder.loadTexts: boStaticNetmask.setDescription('Netmask for the access point if statically configured.')
boStaticGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boStaticGateway.setStatus('obsolete')
if mibBuilder.loadTexts: boStaticGateway.setDescription('Default gateway for the access point if statically configured.')
boRebootOnPollFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boRebootOnPollFailure.setStatus('obsolete')
if mibBuilder.loadTexts: boRebootOnPollFailure.setDescription('Indicates if access point should reboot on a poll failure (disabling wireless access) or continue to provide limited local wireless service.')
branchOfficeHWCTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 2), )
if mibBuilder.loadTexts: branchOfficeHWCTable.setStatus('current')
if mibBuilder.loadTexts: branchOfficeHWCTable.setDescription('Contains the list of access controller IP addressIf an access point has a static.')
branchOfficeHWCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 2, 1), ).setIndexNames((0, "HIPATH-WIRELESS-HWC-MIB", "apIndex"))
if mibBuilder.loadTexts: branchOfficeHWCEntry.setStatus('current')
if mibBuilder.loadTexts: branchOfficeHWCEntry.setDescription('The access controller search list for an access point.')
boHWCConnectOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boHWCConnectOrder.setStatus('current')
if mibBuilder.loadTexts: boHWCConnectOrder.setDescription('The position of the access controller in the search list.')
boHWCIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boHWCIpAddress.setStatus('current')
if mibBuilder.loadTexts: boHWCIpAddress.setDescription('IP address of the access controller.')
boHWCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 1, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boHWCRowStatus.setStatus('current')
if mibBuilder.loadTexts: boHWCRowStatus.setDescription('RowStatus attribute to control modification of branchOfficeHWCTable.')
hiPathWirelessBranchOfficeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 2))
hiPathWirelessBranchOfficeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 2, 1)).setObjects(("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boHWCRowStatus"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boHWCIpAddress"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boHWCConnectOrder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hiPathWirelessBranchOfficeGroup = hiPathWirelessBranchOfficeGroup.setStatus('current')
if mibBuilder.loadTexts: hiPathWirelessBranchOfficeGroup.setDescription('Conformance group definitions for the branch office MIB.')
hiPathWirelessBOConformance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 2, 2)).setObjects(("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "hiPathWirelessBranchOfficeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hiPathWirelessBOConformance = hiPathWirelessBOConformance.setStatus('current')
if mibBuilder.loadTexts: hiPathWirelessBOConformance.setDescription('Compliance group definitions for the branch office MIB.')
hiPathWirelessBOObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 15, 3, 22, 2, 3)).setObjects(("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boConnectMode"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boIpAllocation"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boStaticIpAddress"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boStaticNetmask"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boStaticGateway"), ("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", "boRebootOnPollFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hiPathWirelessBOObsoleteGroup = hiPathWirelessBOObsoleteGroup.setStatus('obsolete')
if mibBuilder.loadTexts: hiPathWirelessBOObsoleteGroup.setDescription('Description.')
mibBuilder.exportSymbols("HIPATH-WIRELESS-BRANCH-OFFICE-MIB", hiPathWirelessBranchOfficeMib=hiPathWirelessBranchOfficeMib, boStaticNetmask=boStaticNetmask, hiPathWirelessBOConformance=hiPathWirelessBOConformance, boHWCRowStatus=boHWCRowStatus, boStaticGateway=boStaticGateway, hiPathWirelessBranchOfficeGroup=hiPathWirelessBranchOfficeGroup, boRebootOnPollFailure=boRebootOnPollFailure, boIpAllocation=boIpAllocation, boHWCConnectOrder=boHWCConnectOrder, branchOfficeEntry=branchOfficeEntry, boStaticIpAddress=boStaticIpAddress, boConnectMode=boConnectMode, hiPathWirelessBranchOfficeConformance=hiPathWirelessBranchOfficeConformance, hiPathWirelessBranchOfficeMIB=hiPathWirelessBranchOfficeMIB, hiPathWirelessBOObsoleteGroup=hiPathWirelessBOObsoleteGroup, branchOfficeObjects=branchOfficeObjects, branchOfficeHWCTable=branchOfficeHWCTable, branchOfficeHWCEntry=branchOfficeHWCEntry, PYSNMP_MODULE_ID=hiPathWirelessBranchOfficeMIB, branchOfficeTable=branchOfficeTable, boHWCIpAddress=boHWCIpAddress)
