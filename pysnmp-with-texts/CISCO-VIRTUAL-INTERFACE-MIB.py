#
# PySNMP MIB module CISCO-VIRTUAL-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VIRTUAL-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:18:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
PortMemberList, = mibBuilder.importSymbols("CISCO-ST-TC", "PortMemberList")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, IpAddress, ObjectIdentity, Unsigned32, iso, MibIdentifier, Counter32, Gauge32, TimeTicks, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "ObjectIdentity", "Unsigned32", "iso", "MibIdentifier", "Counter32", "Gauge32", "TimeTicks", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64")
DisplayString, TimeStamp, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TruthValue", "RowStatus", "TextualConvention")
ciscoVirtualInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 648))
ciscoVirtualInterfaceMIB.setRevisions(('2008-02-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoVirtualInterfaceMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoVirtualInterfaceMIB.setLastUpdated('200802270000Z')
if mibBuilder.loadTexts: ciscoVirtualInterfaceMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoVirtualInterfaceMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 -NETS E-mail: cs-nexus5000@cisco.com')
if mibBuilder.loadTexts: ciscoVirtualInterfaceMIB.setDescription('The MIB module for creation and deletion of Virtual Interfaces and Virtual Interface Groups. In addition to this MIB, interface mib (rfc2863) will also contain entries for virtual interfaces. There are two ways virtual interfaces can be created and bound to an interface. The MIB Object cvifGroupsSupported indicates if a particular system supports the Virtual Interface Group concept. If Virtual Interface Groups are supported, then a virtual interface is always created/deleted in conjunction with its associated Virtual Interface Group. The Virtual Interface Group, which may be associated to multiple virtual interfaces, is then bound to a physical interface or another virtual interface like an EtherChannel. If Virtual Interface Groups are not supported, then a virtual interface is created/deleted independently. And each virtual interface is bound to a physical interface or another virtual interface like an EtherChannel. In order for a virtual interface to become operational, it must be directly or indirectly (via its Virtual Interface Group) bound to a physical interface or possibly to another virtual interface such as an EtherChannel. The cvifGroupTable is only used if the MIB object cvifGroupsSupported indicates Virtual Interface Groups are supported.')
ciscoVirtualInterfaceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 1))
ciscoVirtualInterfaceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 2))
cvifGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 1))
cvifConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2))
cvifGroupsSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvifGroupsSupported.setStatus('current')
if mibBuilder.loadTexts: cvifGroupsSupported.setDescription('This is a boolean that indicates whether Virtual Interface Groups are supported (and enabled). Note that many agents are unlikely to support write-access for this object. If there are entries in the cvifGroupTable when this value is being set to false, the set will fail.')
cvifGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1), )
if mibBuilder.loadTexts: cvifGroupTable.setStatus('current')
if mibBuilder.loadTexts: cvifGroupTable.setDescription("This table facilitates the creation and deletion of a Virtual Interface Group. Entries in this table exist only if cvifGroupsSupported is 'true'. A Virtual Interface Group is a collection of virtual interfaces on an adapter in a server. The virtual interfaces within a Virtual Interface Group do not need to all have the same ifType.")
cvifGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupIndex"))
if mibBuilder.loadTexts: cvifGroupEntry.setStatus('current')
if mibBuilder.loadTexts: cvifGroupEntry.setDescription('There is one entry in this table for each created Virtual Interface Group.')
cvifGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: cvifGroupIndex.setStatus('current')
if mibBuilder.loadTexts: cvifGroupIndex.setDescription('An index that uniquely identifies an entry in the cvifGroupTable table.')
cvifGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: cvifGroupIfIndex.setDescription('The ifIndex of this Virtual Interface Group.')
cvifGroupBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvifGroupBindingIfIndex.setStatus('current')
if mibBuilder.loadTexts: cvifGroupBindingIfIndex.setDescription('The ifIndex of the physical interface or another virtual interface like an Etherchannel bound to this Virtual Interface Group. The binding can happen at Virtual Interface Group creation time or at a later time. In order for Virtual Interface Group to become operational, binding to a physical interface or a virtual interface like an Etherchannel is mandatory. When the virtual interface group is not bound to an interface, this field has a value of zero.')
cvifGroupMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 4), PortMemberList().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifGroupMemberList.setStatus('current')
if mibBuilder.loadTexts: cvifGroupMemberList.setDescription('The list of Virtual interfaces in the Virtual Interface Group.')
cvifGroupCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifGroupCreationTime.setStatus('current')
if mibBuilder.loadTexts: cvifGroupCreationTime.setDescription("The timestamp of this entry's creation time.")
cvifGroupFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifGroupFailureCause.setStatus('current')
if mibBuilder.loadTexts: cvifGroupFailureCause.setDescription("The cause of failure for the last bind operation. This object will be zero length if and only if the bind is successful. After a successful bind operation, the value of cvifGroupOperState is set to 'up'.")
cvifGroupOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifGroupOperState.setStatus('current')
if mibBuilder.loadTexts: cvifGroupOperState.setDescription('Operational state of the Virtual Interface Group.')
cvifGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvifGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: cvifGroupRowStatus.setDescription('The status of this conceptual row. The RowStatus becomes active on successful creation of a Virtual Interface Group. It is not necessary for the cvifGroupBindingIfIndex to be set at the time of creation.')
cvifTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2), )
if mibBuilder.loadTexts: cvifTable.setStatus('current')
if mibBuilder.loadTexts: cvifTable.setDescription('This table facilitates the creation and deletion of virtual interfaces. Virtual interfaces may or may not be associated with a Virtual Interface Group according to the value of cvifGroupsSupported. In order for a virtual interface to become operational, it must be directly bound to a physical interface or another virtual interface like an EtherChannel or indirectly bound via its Virtual Interface Group. At creation time, the cvifType must be identified.')
cvifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-VIRTUAL-INTERFACE-MIB", "cvifIndex"), (0, "CISCO-VIRTUAL-INTERFACE-MIB", "cvifType"))
if mibBuilder.loadTexts: cvifEntry.setStatus('current')
if mibBuilder.loadTexts: cvifEntry.setDescription('There is one entry in this table for each created virtual Interface')
cvifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: cvifIndex.setStatus('current')
if mibBuilder.loadTexts: cvifIndex.setDescription('When Virtual Interface Groups (as indicated by the cvifGroupsSupported MIB object) are supported, this is the Virtual Interface Group index. Otherwise, this index identifies the virtual interface.')
cvifType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 2), IANAifType())
if mibBuilder.loadTexts: cvifType.setStatus('current')
if mibBuilder.loadTexts: cvifType.setDescription("The type of virtual interface desired by the network manager. If and when a row is created in this table by using a SetRequest to cvifRowStatus, the corresponding ifTable row will be created by the agent with its ifType as specified by this object. Note that agents are unlikely to support more than a few values for this object, e.g., 'ethernetCsmacd(6)' and 'fibreChannel(56)'.")
cvifIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifIfIndex.setStatus('current')
if mibBuilder.loadTexts: cvifIfIndex.setDescription('The ifIndex of this virtual interface.')
cvifCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifCreationTime.setStatus('current')
if mibBuilder.loadTexts: cvifCreationTime.setDescription("The timestamp of this entry's creation time.")
cvifBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvifBindingIfIndex.setStatus('current')
if mibBuilder.loadTexts: cvifBindingIfIndex.setDescription('This field is supported only when Virtual Interface Groups are not supported, as indicated by the cvifGroupsSupported MIB object. It identifies the ifIndex of the interface that this virtual interface is bound to. In order for a virtual interface to become operational, in the absence of Virtual Interface Groups, binding to an interface is mandatory. When the virtual interface is not bound to an interface, this field has a value of zero.')
cvifFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvifFailureCause.setStatus('current')
if mibBuilder.loadTexts: cvifFailureCause.setDescription('This field is supported only when Virtual Interface Groups are not supported, as indicated by the cvifGroupsSupported MIB object. The cause of failure for the last bind operation. This object will be zero length if and only if the bind is successful.')
cvifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 648, 1, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvifRowStatus.setStatus('current')
if mibBuilder.loadTexts: cvifRowStatus.setDescription('The status of this conceptual row. The RowStatus becomes active on successful creation of a virtual interface. If Virtual Interface Groups are not supported, as indicated by the cvifGroupsSupported MIB object, the virtual interface must be bound to a physical interface or another virtual interface like an Etherchannel before it can become operational.')
cvifMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 1))
cvifMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 2))
cvifGroupMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 1, 1)).setObjects(("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupConformanceObjects"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifCommonConformanceObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvifGroupMIBCompliance = cvifGroupMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cvifGroupMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-VIRTUAL-INTERFACE-MIB mib, with support for Virtual Interface Groups, as indicated by the cvifGroupsSupported MIB object.')
cvifMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 1, 2)).setObjects(("CISCO-VIRTUAL-INTERFACE-MIB", "cvifPhysicalConformanceObjects"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifCommonConformanceObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvifMIBCompliance = cvifMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cvifMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-VIRTUAL-INTERFACE-MIB mib, without support for Virtual Interface Groups, as indicated by the cvifGroupsSupported MIB object.')
cvifGroupConformanceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 2, 1)).setObjects(("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupIfIndex"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupBindingIfIndex"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupMemberList"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupCreationTime"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupFailureCause"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupOperState"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvifGroupConformanceObjects = cvifGroupConformanceObjects.setStatus('current')
if mibBuilder.loadTexts: cvifGroupConformanceObjects.setDescription('A collection of objects related to implementation of virtual interfaces bound to Virtual Interface Groups.')
cvifCommonConformanceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 2, 2)).setObjects(("CISCO-VIRTUAL-INTERFACE-MIB", "cvifGroupsSupported"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifIfIndex"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifCreationTime"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvifCommonConformanceObjects = cvifCommonConformanceObjects.setStatus('current')
if mibBuilder.loadTexts: cvifCommonConformanceObjects.setDescription('A collection of objects related to all implementations of virtual interfaces.')
cvifPhysicalConformanceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 648, 2, 2, 3)).setObjects(("CISCO-VIRTUAL-INTERFACE-MIB", "cvifBindingIfIndex"), ("CISCO-VIRTUAL-INTERFACE-MIB", "cvifFailureCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvifPhysicalConformanceObjects = cvifPhysicalConformanceObjects.setStatus('current')
if mibBuilder.loadTexts: cvifPhysicalConformanceObjects.setDescription('A collection of objects related to implementation of virtual interfaces bound to physical interfaces.')
mibBuilder.exportSymbols("CISCO-VIRTUAL-INTERFACE-MIB", cvifGlobals=cvifGlobals, cvifTable=cvifTable, cvifGroupOperState=cvifGroupOperState, ciscoVirtualInterfaceMIBObjects=ciscoVirtualInterfaceMIBObjects, cvifBindingIfIndex=cvifBindingIfIndex, cvifCommonConformanceObjects=cvifCommonConformanceObjects, cvifGroupCreationTime=cvifGroupCreationTime, cvifFailureCause=cvifFailureCause, cvifGroupsSupported=cvifGroupsSupported, cvifIndex=cvifIndex, cvifGroupMIBCompliance=cvifGroupMIBCompliance, cvifRowStatus=cvifRowStatus, cvifMIBCompliance=cvifMIBCompliance, cvifGroupFailureCause=cvifGroupFailureCause, cvifGroupMemberList=cvifGroupMemberList, cvifPhysicalConformanceObjects=cvifPhysicalConformanceObjects, cvifGroupRowStatus=cvifGroupRowStatus, cvifConfig=cvifConfig, cvifCreationTime=cvifCreationTime, cvifGroupBindingIfIndex=cvifGroupBindingIfIndex, cvifType=cvifType, cvifGroupIndex=cvifGroupIndex, ciscoVirtualInterfaceMIBConformance=ciscoVirtualInterfaceMIBConformance, cvifGroupConformanceObjects=cvifGroupConformanceObjects, cvifIfIndex=cvifIfIndex, cvifMIBGroups=cvifMIBGroups, ciscoVirtualInterfaceMIB=ciscoVirtualInterfaceMIB, cvifGroupEntry=cvifGroupEntry, cvifGroupTable=cvifGroupTable, cvifMIBCompliances=cvifMIBCompliances, cvifGroupIfIndex=cvifGroupIfIndex, PYSNMP_MODULE_ID=ciscoVirtualInterfaceMIB, cvifEntry=cvifEntry)
