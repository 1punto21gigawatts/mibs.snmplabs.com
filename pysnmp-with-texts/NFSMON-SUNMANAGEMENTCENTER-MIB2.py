#
# PySNMP MIB module NFSMON-SUNMANAGEMENTCENTER-MIB2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NFSMON-SUNMANAGEMENTCENTER-MIB2
# Produced by pysmi-0.3.4 at Wed May  1 14:21:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, enterprises, IpAddress, Counter64, Integer32, NotificationType, MibIdentifier, ObjectIdentity, ModuleIdentity, Gauge32, Bits, iso, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "enterprises", "IpAddress", "Counter64", "Integer32", "NotificationType", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Bits", "iso", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nfsmon = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27))
nfsmon.setRevisions(('1999-07-20 15:05',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: nfsmon.setRevisionsDescriptions(('Rev 1.0 20th July 1999 15:05, Initial version Of MIB.',))
if mibBuilder.loadTexts: nfsmon.setLastUpdated('9907201505Z')
if mibBuilder.loadTexts: nfsmon.setOrganization('Sun Microsystems Inc.')
if mibBuilder.loadTexts: nfsmon.setContactInfo(' Sun Microsystems Inc. Customer Support Postal: 901 San Antonio Road Palo Alto, CA-94303-4900 USA Tel: 650-960-1300 E-mail: service@sun.com')
if mibBuilder.loadTexts: nfsmon.setDescription("The NFS file systems mib allows to monitor key statistics of NFS file systems which are mounted and also specified in agent configuration. SNMPv2 uses the term 'context' for the MIBs that can have multiple instances running on the Agent. If you are using a SNMPv2 based thirdparty management station to communicate with such an agent, then make sure that you are using the right context information. However, if you are using SNMPv1 based management station, then add the context information to the SNMP community as follows '<community>:<context>' This will enable you to access data from multiple instances of the same module running on an agent.")
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
prod = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
sunsymon = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12))
agent = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2))
modules = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2))
nfsmFileSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1)).setObjects(("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemName"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemSize"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemUsedSpace"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemAvailSpace"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemPctUsedSpace"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemPctUsedSpaceRate"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemMountPoint"), ("NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemEntryIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfsmFileSystemGroup = nfsmFileSystemGroup.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemGroup.setDescription('NFS Filesystem related statistics.')
nfsmFileTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1), )
if mibBuilder.loadTexts: nfsmFileTable.setStatus('current')
if mibBuilder.loadTexts: nfsmFileTable.setDescription('Table of monitoring information of the network file systems that are mounted and being monitored by the agent.')
nfsmFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1), ).setIndexNames((0, "NFSMON-SUNMANAGEMENTCENTER-MIB2", "nfsmFileSystemEntryIndex"))
if mibBuilder.loadTexts: nfsmFileEntry.setStatus('current')
if mibBuilder.loadTexts: nfsmFileEntry.setDescription('Monitoring information about one network file system mounted on the system.')
nfsmFileSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemName.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemName.setDescription('The name of the NFS file system. This is the full path name of the NFS file system being monitored, relative to the host.')
nfsmFileSystemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 2), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemSize.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemSize.setDescription('The total size of the NFS file system, in Kbytes.')
nfsmFileSystemUsedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemUsedSpace.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemUsedSpace.setDescription('Used disk space for the NFS file system, in Kbytes.')
nfsmFileSystemAvailSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 4), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemAvailSpace.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemAvailSpace.setDescription('Available disk space for the NFS file system, in Kbytes.')
nfsmFileSystemPctUsedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 5), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemPctUsedSpace.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemPctUsedSpace.setDescription('Percentage of NFS disk space Used.')
nfsmFileSystemPctUsedSpaceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 6), DisplayString()).setUnits('%/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemPctUsedSpaceRate.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemPctUsedSpaceRate.setDescription('The rate at which the percentage-used value changes per second.')
nfsmFileSystemMountPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemMountPoint.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemMountPoint.setDescription('The mount point for the NFS file system. This is the full pathname of the directory on which the NFS file system is mounted.')
nfsmFileSystemEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 27, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsmFileSystemEntryIndex.setStatus('current')
if mibBuilder.loadTexts: nfsmFileSystemEntryIndex.setDescription('Character string value used for indexing in the table.')
mibBuilder.exportSymbols("NFSMON-SUNMANAGEMENTCENTER-MIB2", nfsmFileSystemSize=nfsmFileSystemSize, nfsmFileSystemEntryIndex=nfsmFileSystemEntryIndex, sun=sun, sunsymon=sunsymon, nfsmFileTable=nfsmFileTable, nfsmFileEntry=nfsmFileEntry, nfsmFileSystemName=nfsmFileSystemName, nfsmon=nfsmon, nfsmFileSystemUsedSpace=nfsmFileSystemUsedSpace, nfsmFileSystemPctUsedSpace=nfsmFileSystemPctUsedSpace, nfsmFileSystemMountPoint=nfsmFileSystemMountPoint, modules=modules, agent=agent, nfsmFileSystemAvailSpace=nfsmFileSystemAvailSpace, prod=prod, nfsmFileSystemGroup=nfsmFileSystemGroup, nfsmFileSystemPctUsedSpaceRate=nfsmFileSystemPctUsedSpaceRate, PYSNMP_MODULE_ID=nfsmon)
