#
# PySNMP MIB module HPN-ICF-DNS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DNS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:37:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, MibIdentifier, IpAddress, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, Counter64, Counter32, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "MibIdentifier", "IpAddress", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "Counter32", "TimeTicks", "Integer32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hpnicfDns = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97))
hpnicfDns.setRevisions(('2009-02-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfDns.setRevisionsDescriptions((' ',))
if mibBuilder.loadTexts: hpnicfDns.setLastUpdated('200902120000Z')
if mibBuilder.loadTexts: hpnicfDns.setOrganization('')
if mibBuilder.loadTexts: hpnicfDns.setContactInfo('')
if mibBuilder.loadTexts: hpnicfDns.setDescription('This MIB contains objects to manage the DNS.')
hpnicfDnsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1))
hpnicfDnsStaticSrvIpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1), )
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpTable.setDescription(' This table is a list of DNS static server IPv4 address configuration, which is manually specified. ')
hpnicfDnsStaticSrvIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpType"), (0, "HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpAddr"))
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpEntry.setDescription(' An entry of hpnicfDnsStaticSrvIpTable. ')
hpnicfDnsStaticSrvIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpType.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpType.setDescription(' This node gives the type of the static DNS server IP address. ')
hpnicfDnsStaticSrvIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpAddr.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpAddr.setDescription(' This node gives the IP address of the DNS server specified by the user. ')
hpnicfDnsStaticSrvIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpPriority.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpPriority.setDescription(' This node gives the priority of the DNS server, according to the creation order. The smaller the value is, the higher the priority level is. ')
hpnicfDnsStaticSrvIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpRowStatus.setDescription(' This node gives the operation status of this table entry. ')
hpnicfDnsDynamicSrvIpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2), )
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpTable.setDescription(' This table is a list of DNS dynamic server IPv4 address configuration, which is dynamically obtained through DHCP. ')
hpnicfDnsDynamicSrvIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpType"), (0, "HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpAddr"))
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpEntry.setDescription('An entry of hpnicfDnsDynamicSrvIpTable.')
hpnicfDnsDynamicSrvIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpType.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpType.setDescription(' This node gives the type of the dynamic DNS server IP address. ')
hpnicfDnsDynamicSrvIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpAddr.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpAddr.setDescription(' This node gives the IP address of the DNS server dynamically obtained through DHCP. ')
hpnicfDnsDynamicSrvIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpPriority.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpPriority.setDescription(' This node gives the priority of the DNS server, according to the order obtained through DHCP. The smaller the value is, the higher the priority level is. ')
hpnicfDnsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2))
hpnicfDnsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 1))
hpnicfDnsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 1, 1)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpGroup"), ("HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsMIBCompliance = hpnicfDnsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsMIBCompliance.setDescription(' The compliance statement for entities which implement the DNS MIB. ')
hpnicfDnsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2))
hpnicfDnsStaticSrvIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2, 1)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpPriority"), ("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsStaticSrvIpGroup = hpnicfDnsStaticSrvIpGroup.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpGroup.setDescription(' A collection of objects providing mandatory DNS server IP addresses manually specified. ')
hpnicfDnsDynamicSrvIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2, 2)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsDynamicSrvIpGroup = hpnicfDnsDynamicSrvIpGroup.setStatus('current')
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpGroup.setDescription(' A collection of objects providing mandatory DNS server IP addresses dynamically obtained through DHCP. ')
mibBuilder.exportSymbols("HPN-ICF-DNS-MIB", hpnicfDnsStaticSrvIpEntry=hpnicfDnsStaticSrvIpEntry, hpnicfDnsDynamicSrvIpPriority=hpnicfDnsDynamicSrvIpPriority, PYSNMP_MODULE_ID=hpnicfDns, hpnicfDnsDynamicSrvIpGroup=hpnicfDnsDynamicSrvIpGroup, hpnicfDnsMIBCompliances=hpnicfDnsMIBCompliances, hpnicfDnsMIBGroups=hpnicfDnsMIBGroups, hpnicfDnsStaticSrvIpGroup=hpnicfDnsStaticSrvIpGroup, hpnicfDnsObjects=hpnicfDnsObjects, hpnicfDnsStaticSrvIpType=hpnicfDnsStaticSrvIpType, hpnicfDnsMIBCompliance=hpnicfDnsMIBCompliance, hpnicfDnsStaticSrvIpPriority=hpnicfDnsStaticSrvIpPriority, hpnicfDnsStaticSrvIpRowStatus=hpnicfDnsStaticSrvIpRowStatus, hpnicfDnsDynamicSrvIpType=hpnicfDnsDynamicSrvIpType, hpnicfDnsStaticSrvIpAddr=hpnicfDnsStaticSrvIpAddr, hpnicfDnsDynamicSrvIpTable=hpnicfDnsDynamicSrvIpTable, hpnicfDnsStaticSrvIpTable=hpnicfDnsStaticSrvIpTable, hpnicfDnsDynamicSrvIpAddr=hpnicfDnsDynamicSrvIpAddr, hpnicfDnsMIBConformance=hpnicfDnsMIBConformance, hpnicfDns=hpnicfDns, hpnicfDnsDynamicSrvIpEntry=hpnicfDnsDynamicSrvIpEntry)
