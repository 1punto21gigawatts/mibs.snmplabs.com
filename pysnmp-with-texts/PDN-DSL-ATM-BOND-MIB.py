#
# PySNMP MIB module PDN-DSL-ATM-BOND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-DSL-ATM-BOND-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, TimeTicks, IpAddress, Integer32, Unsigned32, ModuleIdentity, Counter32, Gauge32, ObjectIdentity, iso, Counter64, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "IpAddress", "Integer32", "Unsigned32", "ModuleIdentity", "Counter32", "Gauge32", "ObjectIdentity", "iso", "Counter64", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, DisplayString, TestAndIncr, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TestAndIncr", "RowStatus", "TextualConvention", "TruthValue")
pdnDslAtmBondMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33))
pdnDslAtmBondMIB.setRevisions(('2005-08-03 00:00', '2005-08-01 00:00', '2005-07-26 00:00', '2005-06-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnDslAtmBondMIB.setRevisionsDescriptions(("Removed `0' as a supported value for PdnDslAtmBondGroupIdentityTC. The hardware doesn't support a `0' and a `0' is not explicitly called out in the ITU or the ANSI specifications.", "Added the bonding group's ifIndex to the notification data for all traps.", 'Replaced the pdnDslAtmBondNotificationsEnable object with the pdnDslAtmBondGroupStatusNotifyEnabled object to allow notifications for group status change to be controlled on a per-bonding-group basis. General clean up and clarification of some descriptions.', 'Initial release.',))
if mibBuilder.loadTexts: pdnDslAtmBondMIB.setLastUpdated('200508030000Z')
if mibBuilder.loadTexts: pdnDslAtmBondMIB.setOrganization('Paradyne Networks, Inc. MIB Working Group')
if mibBuilder.loadTexts: pdnDslAtmBondMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editor(s) Clay Sikes')
if mibBuilder.loadTexts: pdnDslAtmBondMIB.setDescription("This MIB module defines a collection of objects for managing the bonding of multiple digital subscriber lines (DSL) to transport ATM streams. At the time this modules was defined, neither the IETF nor the ATM Forum had any indication of plans to produce MIB modules to support the bonding of multiple digital subscriber lines to transport ATM streams. As a result, these objects may be a `temporary' solution should a standards body produces a module to support this type of bonding. The following documents are informational references with respect to this MIB module: [G.998.1] ITU-T G.998.1, `ATM-based Multi-Pair Bonding', January 2005. [RFC 2494] Fowler, D., `Definitions of Managed Objects for the DS0 and DS0 Bundle Interface type', January 1999. [T1E1.4] ANSI T1E1.4/2003-334R6, American National Standards Institute (ANSI), `Draft proposed American National Standard, ATM-based multi-pair bonding', October 2004. [TR-090] Abbi, R., DSL Forum Technical Report Technical Report TR-090, `Protocol Independent Object Model for Managing Next Generation ADSL Technologies', December 2004. ================================================================= == == == Copyright (C) 2005 Paradyne Networks, Inc. == == == =================================================================")
pdnDslAtmBondNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 0))
pdnDslAtmBondObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1))
pdnDslAtmBondAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 2))
pdnDslAtmBondConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3))
class PdnDslAtmBondGroupIndexTC(TextualConvention, Integer32):
    description = 'An identifier for a bonding group table entry. This syntax was chosen to correspond to the TestAndIncr TC for pdnDslAtmBondNextGroupIndex.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class PdnDslAtmBondGroupIdentityTC(TextualConvention, Unsigned32):
    reference = "T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'."
    description = 'An identifier to uniquely identify a bonding group.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class PdnDslAtmBondGroupBearerNumberTC(TextualConvention, Unsigned32):
    reference = "T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'."
    description = 'Bearer number for the line to bond.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4)

class PdnDslAtmBondLinkStatusAsmTC(TextualConvention, Integer32):
    reference = "T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'."
    description = 'The status of a link within a bonding group relative to its capability or current state with respect to the transportation of bonded traffic. +------------------------------------------------------+ | | | Rx Link Status | | 1. Not provisioned. | | The link is indicated as not provisioned, and | | will never be part of a bonded group. | | 2. Should not be used. | | The transmitter should not use this link for | | bonding, but this link is provisioned as a | | candidate link member (i.e. a temporary | | outage). | | 3. Acceptable to carry bonded traffic. | | This status is used to request that the | | transmitter consider this provisioned link | | for bonding. | | 4. Selected to carry bonded traffic. | | Bonded traffic is expected on this link. | | | +------------------------------------------------------+ | | | Tx Link Status | | 1. Not provisioned. | | The link is indicated as not provisioned, and | | will never be part of a bonded group. | | 2. Should not be used. | | The receiver should not consider this link | | for bonding, but this link is provisioned as | | a candidate link member. | | 3. Acceptable to carry bonded traffic. | | This status is used to indicate that the | | receiver should consider it for carrying | | bonded traffic. | | 4. Selected to carry bonded traffic. | | The transmitter is using or will use this | | link to carry bonded traffic. | | | +------------------------------------------------------+'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notProvisioned", 1), ("shouldNotBeUsed", 2), ("acceptableToCarryBondedTraffic", 3), ("selectedToCarryBondedTraffic", 4))

class PdnDslAtmBondAsmRxStatusTC(TextualConvention, Integer32):
    reference = "T1E1.4, Section 9.1.3, `Frequency of Autonomous Status Messages'. G.998.1, Section 9.1.3, `Frequency of Autonomous Status Messages'. T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'."
    description = 'The status of Autonomous Status Message (ASM) received on a link in the past one second. The bonding entity is required to send ASM status messages at no less a frequency than once per second per link.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("receivedASM", 1), ("notReceivedASM", 2))

class PdnDslAtmBondGroupDataRateTC(TextualConvention, Integer32):
    reference = "T1E1.4, Section 11.4.1, `Group Provisioning'. G.998.1, Section 11.4.1, `Group Provisioning'."
    description = 'A data rate, in bits/s, for a bonding group. The value, -1 represents infinity, and indicates that the parameter is to be ignored.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), )
class PdnDslAtmBondGroupDiffDelayTolTC(TextualConvention, Unsigned32):
    reference = "T1E1.4, Section 11.4.1, `Group Provisioning'. G.998.1, Section 11.4.1, `Group Provisioning'."
    description = 'The maximum differential delay tolerance, in milliseconds, among member links in a bonding group.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class PdnDslAtmBondGroupStatusTC(TextualConvention, Integer32):
    reference = "T1E1.4, Section 11.4.2, `Group Performance'. G.998.1, Section 11.4.2, `Group Performance'."
    description = "The status of a group. A group is considered `unavailable' when it does not satisfy the parameters provisioned for the group."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("operational", 1), ("unavailable", 2))

class PdnDslAtmBondGroupFailReasonTC(TextualConvention, Integer32):
    reference = "T1E1.4, Section 11.4.3, `Group Failures'. G.998.1, Section 11.4.3, `Group Failures'."
    description = "The reason the operational status for a bonding group is not `operational'."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notApplicable", 1), ("unknown", 2), ("atucMinDataRateNotMet", 3), ("aturMinDataRateNotMet", 4), ("atucDiffDelayExceeded", 5), ("aturDiffDelayExceeded", 6))

pdnDslAtmBondNextGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 1), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDslAtmBondNextGroupIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondNextGroupIndex.setDescription('This object is used to establish the next unused group index (pdnDslAtmBondGroupIndex). This object is used to assist the manager in selecting a value for pdnDslAtmBondGroupIndex. Because this object is of syntax TestAndIncr (see the SNMPv2-TC document, RFC 2579) it can also be used to avoid race conditions with multiple managers trying to create rows in the table. If the result of the SET for pdnDslAtmBondNextGroupIndex is not success, this means the value has been changed from index (i.e. another manager used the value), so a new value is required. The algorithm is: done = false while done == false index = GET (pdnDslAtmBondNextGroupIndex.0) SET (pdnDslAtmBondNextGroupIndex.0=index) if (set failed) done = false else SET(pdnDslAtmBondGroupRowStatus.index=createAndGo) if (set failed) done = false else done = true other error handling This description was modeled from RFC2494, DS0BUNDLE-MIB.')
pdnDslAtmBondNbrOfGroups = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondNbrOfGroups.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondNbrOfGroups.setDescription('The number of bonding groups configured on this system.')
pdnDslAtmBondGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3), )
if mibBuilder.loadTexts: pdnDslAtmBondGroupTable.setReference("T1E1.4, Section 11.4.1, `Group Provisioning'. G.998.1, Section 11.4.1, `Group Provisioning'.")
if mibBuilder.loadTexts: pdnDslAtmBondGroupTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupTable.setDescription('The DSL ATM Bond Group Table. Contains configuration and operational information relative to a particular bonding group.')
pdnDslAtmBondGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"))
if mibBuilder.loadTexts: pdnDslAtmBondGroupEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupEntry.setDescription('An entry in the DSL ATM Bond Group Table. Each entry represents a particular bonding group.')
pdnDslAtmBondGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 1), PdnDslAtmBondGroupIndexTC())
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndex.setDescription("A unique identifier for a bonding group. This is not the same value as an ifIndex for the group. The pdnDslAtmBondGroupIfIndex object contains the bonding group's ifIndex.")
pdnDslAtmBondGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupRowStatus.setDescription('This object allows create, change, and delete operations on the table. The delete operation can only occur when the pdnDslAtmBondGroupNbrRefs is 0 meaning that there are no DSL interfaces and bearers that are bonded to this group.')
pdnDslAtmBondGroupNbrRefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondGroupNbrRefs.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupNbrRefs.setDescription('The number of DSL interface / bearer combinations that are members of this group. This is the number of entries in the pdnDslAtmBondMappingTable that have their pdnDslAtmBondMappingGroupIndex assigned to this value of pdnDslAtmBondGroupIndex.')
pdnDslAtmBondGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondGroupIfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupIfIndex.setDescription('Identifies the interface number assigned to this bonding group and is used to identify corresponding rows in the interfaces MIB.')
pdnDslAtmBondGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 5), PdnDslAtmBondGroupIdentityTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupID.setReference("T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'.")
if mibBuilder.loadTexts: pdnDslAtmBondGroupID.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupID.setDescription('An identifier to uniquely identify the bonding group. This ID one of the fields of the Autonomous Status Message and may be useful in some debugging situations.')
pdnDslAtmBondGroupAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 32), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAlarmConfProfileName.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAlarmConfProfileName.setDescription("Identifies the Alarm Profile this group is associated with which is an entry in the pdnDslAtmBondAlarmConfProfileTable. If this object is not a zero-length string, it should default to the default profile whose name is `DEFVAL'.")
pdnDslAtmBondGroupAtucMaxNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 7), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucMaxNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucMaxNetDataRate.setDescription('The maximum net data rate this bonding group is allowed to achieve in the downstream direction.')
pdnDslAtmBondGroupAturMaxNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 8), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturMaxNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturMaxNetDataRate.setDescription('The maximum net data rate this bonding group is allowed to achieve in the upstream direction.')
pdnDslAtmBondGroupAtucMinNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 9), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucMinNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucMinNetDataRate.setDescription('The minimum net data rate this bonding group is allowed to achieve in the downstream direction.')
pdnDslAtmBondGroupAturMinNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 10), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturMinNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturMinNetDataRate.setDescription('The minimum net data rate this bonding group is allowed to achieve in the upstream direction.')
pdnDslAtmBondGroupAtucDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 11), PdnDslAtmBondGroupDiffDelayTolTC()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucDiffDelay.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAtucDiffDelay.setDescription('The maximum differential delay tolerance among member links in this bonding group in the downstream direction.')
pdnDslAtmBondGroupAturDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 12), PdnDslAtmBondGroupDiffDelayTolTC()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturDiffDelay.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupAturDiffDelay.setDescription('The maximum differential delay tolerance among member links in this bonding group in the upstream direction.')
pdnDslAtmBondGroupStatusNotifyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 3, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondGroupStatusNotifyEnabled.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupStatusNotifyEnabled.setDescription('Specifies whether or not the pdnDslAtmBondGroupStatusChange notification will be generated. When set to true(1), the notification will be generated when the pdnDslAtmBondPerfGroupStatus changes. When set to false(2), the notification will not be generated with the pdnDslAtmBondPerfGroupStatus changes.')
pdnDslAtmBondMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4), )
if mibBuilder.loadTexts: pdnDslAtmBondMappingTable.setReference("T1E1.4, Section 11.4.1, `Group Provisioning'. G.998.1, Section 11.4.1, `Group Provisioning'.")
if mibBuilder.loadTexts: pdnDslAtmBondMappingTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMappingTable.setDescription('The DSL ATM Bond Mapping Table. This table is used to map a DSL port and a bearer number to a bonding group.')
pdnDslAtmBondMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondDslIfIndex"), (0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondBearerNbr"))
if mibBuilder.loadTexts: pdnDslAtmBondMappingEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMappingEntry.setDescription('An entry in the DSL ATM Bond Mapping Table. Each entry represents a DSL interface and a a bearer number.')
pdnDslAtmBondDslIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pdnDslAtmBondDslIfIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondDslIfIndex.setDescription('Identifies the DSL interface of a link that is to be bonded to the group.')
pdnDslAtmBondBearerNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4, 1, 2), PdnDslAtmBondGroupBearerNumberTC())
if mibBuilder.loadTexts: pdnDslAtmBondBearerNbr.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondBearerNbr.setDescription('Identifies the bearer number of a link for the DSL line to be bonded to the group.')
pdnDslAtmBondMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondMappingRowStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMappingRowStatus.setDescription('This object allows create, change, and delete operations on the table.')
pdnDslAtmBondMappingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 4, 1, 4), PdnDslAtmBondGroupIndexTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondMappingGroupIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMappingGroupIndex.setDescription('The pdnDslAtmBondGroupIndex which identifies the group to which the DSL line and bearer number, which form a link, are to be bound to.')
pdnDslAtmBondGroupIndexMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 5), )
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingTable.setDescription("The DSL ATM Bond Group Index Mapping Table. This table identifies the mapping from the bonding group's ifIndex to the bonding group's index.")
pdnDslAtmBondGroupIndexMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 5, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIfIndex"))
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingEntry.setDescription('An entry in the DSL ATM Bond Group Index Mapping Table. Each entry represents an ifIndex for a bonding group.')
pdnDslAtmBondGroupIndexMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 5, 1, 1), PdnDslAtmBondGroupIndexTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingIndex.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupIndexMappingIndex.setDescription('The pdnDslAtmBondGroupIndex this group ifIndex entry maps to.')
pdnDslAtmBondGroupInvMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 6), )
if mibBuilder.loadTexts: pdnDslAtmBondGroupInvMappingTable.setReference("T1E1.4, Section 11.4.1, `Group Provisioning'. G.998.1, Section 11.4.1, `Group Provisioning'.")
if mibBuilder.loadTexts: pdnDslAtmBondGroupInvMappingTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupInvMappingTable.setDescription("The DSL ATM Bond Group Inverse Mapping Table. This table identifies the mapping from a bonding group's index and a DSL interface to a bearer. This object provides a a mechanism to list bonding groups from a group's index.")
pdnDslAtmBondGroupInvMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 6, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"), (0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondDslIfIndex"))
if mibBuilder.loadTexts: pdnDslAtmBondGroupInvMappingEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupInvMappingEntry.setDescription('An entry in the DSL ATM Bond Inverse Mapping Table. Each entry represents a particular bonding group and a particular DSL interface.')
pdnDslAtmBondInvMappingBearerNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 6, 1, 1), PdnDslAtmBondGroupBearerNumberTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondInvMappingBearerNbr.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondInvMappingBearerNbr.setDescription('The bearer on a particular DSL interface that is a member of the bonding group.')
pdnDslAtmBondPerfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7), )
if mibBuilder.loadTexts: pdnDslAtmBondPerfTable.setReference("T1E1.4, Section 11.4.2, `Group Performance'. G.998.1, Section 11.4.2, `Group Performance'. T1E1.4, Section 11.4.3, `Group Failures'. G.998.1, Section 11.4.3, `Group Failures'.")
if mibBuilder.loadTexts: pdnDslAtmBondPerfTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfTable.setDescription('The DSL ATM Bond Current Table. This table contains the status and performance information for bonding groups.')
pdnDslAtmBondPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"))
if mibBuilder.loadTexts: pdnDslAtmBondPerfEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfEntry.setDescription('An entry in the DSL ATM Bond Performance Table. Each entry represents a particular bonding group.')
pdnDslAtmBondPerfCurrAtucNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 1), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfCurrAtucNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfCurrAtucNetDataRate.setDescription('The current net data rate the bonding group has achieved for the downstream direction.')
pdnDslAtmBondPerfCurrAturNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 2), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfCurrAturNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfCurrAturNetDataRate.setDescription('The current net data rate the bonding group has achieved for the upstream direction.')
pdnDslAtmBondPerfPrevAtucNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 3), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfPrevAtucNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfPrevAtucNetDataRate.setDescription('The previous net data rate the bonding group had achieved for the downstream direction. This value is set at initialization to prevent a notification from being sent.')
pdnDslAtmBondPerfPrevAturNetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 4), PdnDslAtmBondGroupDataRateTC()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfPrevAturNetDataRate.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfPrevAturNetDataRate.setDescription('The previous net data rate the bonding group had achieved for the upstream direction. This value is set at initialization to prevent a notification from being sent.')
pdnDslAtmBondPerfGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 5), PdnDslAtmBondGroupStatusTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfGroupStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfGroupStatus.setDescription('The status of the bonding group.')
pdnDslAtmBondPerfFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 6), PdnDslAtmBondGroupFailReasonTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfFailReason.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfFailReason.setDescription("The reason the operational status of the bonding group is not `operational'.")
pdnDslAtmBondPerfFailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfFailCount.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfFailCount.setDescription('A count of the number of times the group was declared `unavailable` since last restart.')
pdnDslAtmBondPerfRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfRunTime.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfRunTime.setDescription("The total accumulated time the bonding group was in the `normal' operational status since last restart.")
pdnDslAtmBondPerfUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 9), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfUAS.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfUAS.setDescription('The total accumulated time the bonding group was unavailable since last restart.')
pdnDslAtmBondPerfAtucRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfAtucRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfAtucRxCellLoss.setDescription('The total number of cells that are lost at the aggregation output in the upstream direction from the bonding group since last restart.')
pdnDslAtmBondPerfAturRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondPerfAturRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfAturRxCellLoss.setDescription('The total number of cells that are lost at the aggregation output in the downstream direction from a bonding group since last restart.')
pdnDslAtmBond15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8), )
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalTable.setReference("T1E1.4, Section 11.4.2, `Group Performance'. G.998.1, Section 11.4.2, `Group Performance'. T1E1.4, Section 11.4.3, `Group Failures'. G.998.1, Section 11.4.3, `Group Failures'.")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalTable.setDescription('The DSL ATM Bond 15-Minute Interval Table. This table contains the status and performance information for bonding groups collected in 15-minute intervals.')
pdnDslAtmBond15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"), (0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalNumber"))
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalEntry.setDescription('An entry in the DSL ATM Bond 15-Minute Interval Table. Each entry represents a particular bonding group and a particular 15-minute interval.')
pdnDslAtmBond15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalNumber.setDescription('Performance Data Interval number. Interval 1 is the most recent previous 15-minute interval; interval 96 is 24 hours ago. Intervals 2..96 are optional.')
pdnDslAtmBond15MinIntervalStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalStartDateAndTime.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalStartDateAndTime.setDescription('Provides a date-time indication of when the interval started.')
pdnDslAtmBond15MinIntervalFailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalFailCount.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalFailCount.setDescription('A count of the number of times the group was declared `unavailable` during the interval.')
pdnDslAtmBond15MinIntervalRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalRunTime.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalRunTime.setDescription("The accumulated time the bonding group was in the `normal' operational status during the interval.")
pdnDslAtmBond15MinIntervalUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalUAS.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalUAS.setDescription('The accumulated time the bonding group was unavailable during the interval,')
pdnDslAtmBond15MinIntervalAtucRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalAtucRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalAtucRxCellLoss.setDescription('The number of cells that are lost at the aggregation output in the upstream direction from the bonding group during the interval.')
pdnDslAtmBond15MinIntervalAturRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalAturRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond15MinIntervalAturRxCellLoss.setDescription('The number of cells that are lost at the aggregation output in the downstream direction from the bonding group during the interval.')
pdnDslAtmBond1DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9), )
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalTable.setReference("T1E1.4, Section 11.4.2, `Group Performance'. G.998.1, Section 11.4.2, `Group Performance'. T1E1.4, Section 11.4.3, `Group Failures'. G.998.1, Section 11.4.3, `Group Failures'.")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalTable.setDescription('The DSL ATM Bond 1-Day Interval Table. This table contains the status and performance information for bonding groups collected in 1-Day intervals.')
pdnDslAtmBond1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"), (0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalNumber"))
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalEntry.setDescription('An entry in the DSL ATM Bond 1-Day Interval Table. Each entry represents a particular bonding group and a particular 1-day interval.')
pdnDslAtmBond1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalNumber.setDescription('Performance Data Interval number. Interval 1 is the most recent previous 1-day interval; interval 30 is 30 days ago. Intervals 2..30 are optional.')
pdnDslAtmBond1DayIntervalStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalStartDateAndTime.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalStartDateAndTime.setDescription('Provides a date-time indication of when the interval started.')
pdnDslAtmBond1DayIntervalFailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalFailCount.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalFailCount.setDescription('A count of the number of times the group was declared `unavailable` during the interval.')
pdnDslAtmBond1DayIntervalRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalRunTime.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalRunTime.setDescription("The accumulated time the bonding group was in the `normal' operational status during the interval.")
pdnDslAtmBond1DayIntervalUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalUAS.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalUAS.setDescription('The accumulated time the bonding group was unavailable during the interval,')
pdnDslAtmBond1DayIntervalAtucRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalAtucRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalAtucRxCellLoss.setDescription('The number of cells that are lost at the aggregation output in the upstream direction from a bonding group during the interval.')
pdnDslAtmBond1DayIntervalAturRxCellLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalAturRxCellLoss.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBond1DayIntervalAturRxCellLoss.setDescription('The number of cells that are lost at the aggregation output in the downstream direction from the bonding group during the interval.')
pdnDslAtmBondLinkTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10), )
if mibBuilder.loadTexts: pdnDslAtmBondLinkTable.setReference("T1E1.4, Section 9.1.3, `Frequency of Autonomous Status Messages'. G.998.1, Section 9.1.3, `Frequency of Autonomous Status Messages'. T1E1.4, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'. G.998.1, Section 9.1.4, `Format of the Autonomous Status Message (ASM)', Table 9-1`ASM Message Format'.")
if mibBuilder.loadTexts: pdnDslAtmBondLinkTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkTable.setDescription('The DSL ATM Bond Link Table. This table contains the current status information for a link in a bonding group.')
pdnDslAtmBondLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1), ).setIndexNames((0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndex"), (0, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondDslIfIndex"))
if mibBuilder.loadTexts: pdnDslAtmBondLinkEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkEntry.setDescription('An entry in the DSL ATM Bond Link Table. each entry represents a DSL interface on a particular bonding group.')
pdnDslAtmBondLinkAtucRxLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 1), PdnDslAtmBondLinkStatusAsmTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucRxLinkStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucRxLinkStatus.setDescription('The status of the Rx link in a bonded group in the upstream direction.')
pdnDslAtmBondLinkAturRxLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 2), PdnDslAtmBondLinkStatusAsmTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturRxLinkStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturRxLinkStatus.setDescription('The status of the Rx link in a bonded group in the downstream direction.')
pdnDslAtmBondLinkAtucTxLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 3), PdnDslAtmBondLinkStatusAsmTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucTxLinkStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucTxLinkStatus.setDescription('The status of the Tx link in a bonded group in the downstream direction.')
pdnDslAtmBondLinkAturTxLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 4), PdnDslAtmBondLinkStatusAsmTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturTxLinkStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturTxLinkStatus.setDescription('The status of the Rx link in a bonded group in the upstream direction.')
pdnDslAtmBondLinkAtucAsmRxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 5), PdnDslAtmBondAsmRxStatusTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucAsmRxStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAtucAsmRxStatus.setDescription('The status of ASMs received for the link in a bonded in the upstream direction.')
pdnDslAtmBondLinkAturAsmRxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 10, 1, 6), PdnDslAtmBondAsmRxStatusTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturAsmRxStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondLinkAturAsmRxStatus.setDescription('The status of ASMs received for the link in a bonded in the downstream direction.')
pdnDslAtmBondAlarmConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11), )
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileTable.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileTable.setDescription('The DSL ATM Bond Alarm Configuration Profile Table. This table contains the alarm configuration profiles for DSL ATM Bonding.')
pdnDslAtmBondAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1), ).setIndexNames((1, "PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfProfileName"))
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileEntry.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileEntry.setDescription("An entry in the DSL ATM Bond Alarm Configuration Profile Table. Each entry represents a single alarm configuration profile. Profiles may be created/deleted using the RowStatus mechanism not including the default profile. A default profile with an index of `DEFVAL' will always exist and its parameters will be set to implementation-specific values.")
pdnDslAtmBondAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileName.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileName.setDescription("This object is the index for the table and identifies a unique row in the table. A default profile with an index of `DEFVAL' will always exist and its parameters will be set to implementation-specific values.")
pdnDslAtmBondAlarmConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfRowStatus.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfRowStatus.setDescription('This object allows profiles to be created to deleted. The delete operation can only occur when the pdnDslAtmBondAlarmConfNbrRefs is 0 meaning that there are no entries in the pdnDslAtmBondGroupTable that reference this group.')
pdnDslAtmBondAlarmConfNbrRefs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfNbrRefs.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfNbrRefs.setDescription('The number of entries in the pdnDslAtmBondGroupTable that reference this profile.')
pdnDslAtmBondAlarmConfAtucThreshRateUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAtucThreshRateUp.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAtucThreshRateUp.setDescription("Configured change in rate, in bps, causing a pdnDslAtmBondAtucRateChange notification. The notification is produced when current rate >= previous rate plus the value of this object. A value of `0' will disable the trap.")
pdnDslAtmBondAlarmConfAturThreshRateUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAturThreshRateUp.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAturThreshRateUp.setDescription("Configured change in rate, in bps, causing a pdnDslAtmBondAturRateChange notification. The notification is produced when current rate >= previous rate plus the value of this object. A value of `0' will disable the trap.")
pdnDslAtmBondAlarmConfAtucThreshRateDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAtucThreshRateDown.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAtucThreshRateDown.setDescription("Configured change in rate, in bps, causing a pdnDslAtmBondAtucRateChange notification. The notification is produced when current rate <= previous rate minus the value of this object. A value of `0' will disable the trap.")
pdnDslAtmBondAlarmConfAturThreshRateDown = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAturThreshRateDown.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAturThreshRateDown.setDescription("Configured change in rate, in bps, causing a pdnDslAtmBondAturRateChange notification. The notification is produced when current rate <= previous rate minus the value of this object. A value of `0' will disable the trap.")
pdnDslAtmBondAtucRateChange = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 0, 1)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIfIndex"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfCurrAtucNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfPrevAtucNetDataRate"))
if mibBuilder.loadTexts: pdnDslAtmBondAtucRateChange.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAtucRateChange.setDescription('The downstream transmit rate has changed.')
pdnDslAtmBondAturRateChange = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 0, 2)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIfIndex"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfCurrAturNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfPrevAturNetDataRate"))
if mibBuilder.loadTexts: pdnDslAtmBondAturRateChange.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAturRateChange.setDescription('The upstream transmit rate has changed.')
pdnDslAtmBondGroupStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 0, 3)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIfIndex"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfGroupStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfFailReason"))
if mibBuilder.loadTexts: pdnDslAtmBondGroupStatusChange.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupStatusChange.setDescription('The operational status of the group has changed.')
pdnDslAtmBondCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 1))
pdnDslAtmBondGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2))
pdnDslAtmBondMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 1, 1)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondMappingGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfAggDataRateGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfBondGroupStatusGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondNotificationsGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondMaxRateGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondMinRateGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondDiffDelayGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupStatusNotifyEnabledGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondIndexMappingGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondInvMappingGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondDateAndTimeGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondRunTimeGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondRxCellLossGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfFailReasonGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondFailCountGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondUASGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondTrafficCapGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslATmBondAsmRxStatusGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfProfileGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAtucThreshRateGroup"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAturThreshRateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondMIBCompliance = pdnDslAtmBondMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMIBCompliance.setDescription('The compliance statement for the entities which implement the pdnDslAtmBondMIB.')
pdnDslAtmBondObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1))
pdnDslAtmBondAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 2))
pdnDslAtmBondNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 3))
pdnDslAtmBondGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 1)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondNextGroupIndex"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondNbrOfGroups"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupRowStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupNbrRefs"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIfIndex"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondGroup = pdnDslAtmBondGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroup.setDescription('General configuration/definition of a bonding group.')
pdnDslAtmBondMaxRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 2)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAtucMaxNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAturMaxNetDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondMaxRateGroup = pdnDslAtmBondMaxRateGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMaxRateGroup.setDescription('Configuration of the maximum net data rate a bonding group is allowed to achieve.')
pdnDslAtmBondMinRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 3)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAtucMinNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAturMinNetDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondMinRateGroup = pdnDslAtmBondMinRateGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMinRateGroup.setDescription('Configuration of the minimum net data rate a bonding group is allowed to achieve.')
pdnDslAtmBondDiffDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 4)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAtucDiffDelay"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAturDiffDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondDiffDelayGroup = pdnDslAtmBondDiffDelayGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondDiffDelayGroup.setDescription('Configuration of maximum differential delay among member links in a bonding group.')
pdnDslAtmBondGroupStatusNotifyEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 5)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupStatusNotifyEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondGroupStatusNotifyEnabledGroup = pdnDslAtmBondGroupStatusNotifyEnabledGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondGroupStatusNotifyEnabledGroup.setDescription('Configuration of notifications for changes to the status of a bonding group.')
pdnDslAtmBondMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 6)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondMappingRowStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondMappingGroupIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondMappingGroup = pdnDslAtmBondMappingGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondMappingGroup.setDescription('Map a DSL interface and a bearer to a bonding group.')
pdnDslAtmBondIndexMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 7)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupIndexMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondIndexMappingGroup = pdnDslAtmBondIndexMappingGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondIndexMappingGroup.setDescription("Map from a bonding group's ifIndex to the bonding group's index.")
pdnDslAtmBondInvMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 8)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondInvMappingBearerNbr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondInvMappingGroup = pdnDslAtmBondInvMappingGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondInvMappingGroup.setDescription('Map from a bonding group and a DSL interface to a bearer.')
pdnDslAtmBondPerfAggDataRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 9)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfCurrAtucNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfCurrAturNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfPrevAtucNetDataRate"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfPrevAturNetDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondPerfAggDataRateGroup = pdnDslAtmBondPerfAggDataRateGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfAggDataRateGroup.setDescription('Status of the net data rate the bonding group has currently or had previously achieved.')
pdnDslAtmBondPerfBondGroupStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 10)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondPerfBondGroupStatusGroup = pdnDslAtmBondPerfBondGroupStatusGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfBondGroupStatusGroup.setDescription('Current status of the bonding group.')
pdnDslAtmBondDateAndTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 11)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalStartDateAndTime"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalStartDateAndTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondDateAndTimeGroup = pdnDslAtmBondDateAndTimeGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondDateAndTimeGroup.setDescription('Date-time stamp of when an interval started.')
pdnDslAtmBondRunTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 12)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfRunTime"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalRunTime"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalRunTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondRunTimeGroup = pdnDslAtmBondRunTimeGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondRunTimeGroup.setDescription("The tracking of time a bonding group is `operational'.")
pdnDslAtmBondRxCellLossGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 13)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfAtucRxCellLoss"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfAturRxCellLoss"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalAtucRxCellLoss"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalAturRxCellLoss"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalAtucRxCellLoss"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalAturRxCellLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondRxCellLossGroup = pdnDslAtmBondRxCellLossGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondRxCellLossGroup.setDescription('The tracking the total number of cells that are lost at the aggregation output from a bonding group.')
pdnDslAtmBondPerfFailReasonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 14)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondPerfFailReasonGroup = pdnDslAtmBondPerfFailReasonGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondPerfFailReasonGroup.setDescription("The reason the operational status of the bonding group is not `operational'.")
pdnDslAtmBondFailCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 15)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfFailCount"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalFailCount"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalFailCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondFailCountGroup = pdnDslAtmBondFailCountGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondFailCountGroup.setDescription("The number of times a bonding group was declared `unavailable'.")
pdnDslAtmBondUASGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 16)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondPerfUAS"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond15MinIntervalUAS"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBond1DayIntervalUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondUASGroup = pdnDslAtmBondUASGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondUASGroup.setDescription('The time a bonding group was unavailable.')
pdnDslAtmBondTrafficCapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 17)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAtucRxLinkStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAturRxLinkStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAtucTxLinkStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAturTxLinkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondTrafficCapGroup = pdnDslAtmBondTrafficCapGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondTrafficCapGroup.setDescription('Current status of the link in a bonded group with respect to carrying bonded traffic.')
pdnDslATmBondAsmRxStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 18)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAtucAsmRxStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondLinkAturAsmRxStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslATmBondAsmRxStatusGroup = pdnDslATmBondAsmRxStatusGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslATmBondAsmRxStatusGroup.setDescription('Status of the reception of ASMs for a link in a bonded group.')
pdnDslAtmBondAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 19)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupAlarmConfProfileName"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfRowStatus"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfNbrRefs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondAlarmConfProfileGroup = pdnDslAtmBondAlarmConfProfileGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfProfileGroup.setDescription('Provides the ability to create or delete alarm profiles.')
pdnDslAtmBondAlarmConfAtucThreshRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 20)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAtucThreshRateUp"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAtucThreshRateDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondAlarmConfAtucThreshRateGroup = pdnDslAtmBondAlarmConfAtucThreshRateGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAtucThreshRateGroup.setDescription('Provides the ability to configure thresholds for rate changes in the downstream direction.')
pdnDslAtmBondAlarmConfAturThreshRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 1, 21)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAturThreshRateUp"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAlarmConfAturThreshRateDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondAlarmConfAturThreshRateGroup = pdnDslAtmBondAlarmConfAturThreshRateGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondAlarmConfAturThreshRateGroup.setDescription('Provides the ability to configure thresholds for rate changes in the upstream direction.')
pdnDslAtmBondNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 33, 3, 2, 3, 1)).setObjects(("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAtucRateChange"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondAturRateChange"), ("PDN-DSL-ATM-BOND-MIB", "pdnDslAtmBondGroupStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnDslAtmBondNotificationsGroup = pdnDslAtmBondNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: pdnDslAtmBondNotificationsGroup.setDescription('The collection of notifications for the MIB module.')
mibBuilder.exportSymbols("PDN-DSL-ATM-BOND-MIB", pdnDslAtmBondPerfFailCount=pdnDslAtmBondPerfFailCount, PdnDslAtmBondAsmRxStatusTC=PdnDslAtmBondAsmRxStatusTC, pdnDslAtmBondLinkTable=pdnDslAtmBondLinkTable, pdnDslAtmBondGroupIfIndex=pdnDslAtmBondGroupIfIndex, pdnDslAtmBondMIB=pdnDslAtmBondMIB, pdnDslAtmBondLinkAturRxLinkStatus=pdnDslAtmBondLinkAturRxLinkStatus, pdnDslAtmBondAlarmConfNbrRefs=pdnDslAtmBondAlarmConfNbrRefs, pdnDslAtmBondMinRateGroup=pdnDslAtmBondMinRateGroup, pdnDslAtmBondAlarmConfAturThreshRateGroup=pdnDslAtmBondAlarmConfAturThreshRateGroup, pdnDslAtmBondPerfRunTime=pdnDslAtmBondPerfRunTime, pdnDslAtmBond1DayIntervalUAS=pdnDslAtmBond1DayIntervalUAS, pdnDslAtmBondInvMappingGroup=pdnDslAtmBondInvMappingGroup, pdnDslAtmBondGroupAtucMaxNetDataRate=pdnDslAtmBondGroupAtucMaxNetDataRate, pdnDslAtmBondMappingTable=pdnDslAtmBondMappingTable, pdnDslAtmBond15MinIntervalRunTime=pdnDslAtmBond15MinIntervalRunTime, pdnDslAtmBondAlarmConfRowStatus=pdnDslAtmBondAlarmConfRowStatus, pdnDslAtmBond15MinIntervalNumber=pdnDslAtmBond15MinIntervalNumber, pdnDslAtmBondGroupEntry=pdnDslAtmBondGroupEntry, pdnDslAtmBondNbrOfGroups=pdnDslAtmBondNbrOfGroups, PdnDslAtmBondGroupIndexTC=PdnDslAtmBondGroupIndexTC, pdnDslAtmBondPerfAturRxCellLoss=pdnDslAtmBondPerfAturRxCellLoss, PdnDslAtmBondGroupDataRateTC=PdnDslAtmBondGroupDataRateTC, pdnDslAtmBond1DayIntervalFailCount=pdnDslAtmBond1DayIntervalFailCount, pdnDslAtmBondFailCountGroup=pdnDslAtmBondFailCountGroup, pdnDslAtmBondInvMappingBearerNbr=pdnDslAtmBondInvMappingBearerNbr, pdnDslAtmBondGroupAtucDiffDelay=pdnDslAtmBondGroupAtucDiffDelay, pdnDslAtmBondRunTimeGroup=pdnDslAtmBondRunTimeGroup, pdnDslAtmBondConformance=pdnDslAtmBondConformance, pdnDslAtmBond1DayIntervalNumber=pdnDslAtmBond1DayIntervalNumber, pdnDslAtmBondAtucRateChange=pdnDslAtmBondAtucRateChange, PdnDslAtmBondLinkStatusAsmTC=PdnDslAtmBondLinkStatusAsmTC, pdnDslAtmBond15MinIntervalFailCount=pdnDslAtmBond15MinIntervalFailCount, PdnDslAtmBondGroupStatusTC=PdnDslAtmBondGroupStatusTC, pdnDslAtmBond1DayIntervalStartDateAndTime=pdnDslAtmBond1DayIntervalStartDateAndTime, pdnDslAtmBondRxCellLossGroup=pdnDslAtmBondRxCellLossGroup, pdnDslAtmBondAlarmConfAturThreshRateDown=pdnDslAtmBondAlarmConfAturThreshRateDown, pdnDslAtmBondPerfUAS=pdnDslAtmBondPerfUAS, pdnDslAtmBondGroups=pdnDslAtmBondGroups, pdnDslAtmBondGroupStatusNotifyEnabledGroup=pdnDslAtmBondGroupStatusNotifyEnabledGroup, pdnDslAtmBondTrafficCapGroup=pdnDslAtmBondTrafficCapGroup, pdnDslAtmBondMappingEntry=pdnDslAtmBondMappingEntry, pdnDslAtmBondGroupInvMappingEntry=pdnDslAtmBondGroupInvMappingEntry, pdnDslAtmBondNextGroupIndex=pdnDslAtmBondNextGroupIndex, pdnDslAtmBondAturRateChange=pdnDslAtmBondAturRateChange, pdnDslAtmBond15MinIntervalTable=pdnDslAtmBond15MinIntervalTable, pdnDslAtmBondLinkAtucRxLinkStatus=pdnDslAtmBondLinkAtucRxLinkStatus, pdnDslAtmBondUASGroup=pdnDslAtmBondUASGroup, PdnDslAtmBondGroupIdentityTC=PdnDslAtmBondGroupIdentityTC, pdnDslAtmBondAlarmConfAtucThreshRateUp=pdnDslAtmBondAlarmConfAtucThreshRateUp, pdnDslAtmBondAlarmConfProfileGroup=pdnDslAtmBondAlarmConfProfileGroup, pdnDslAtmBondMIBCompliance=pdnDslAtmBondMIBCompliance, pdnDslAtmBondPerfCurrAtucNetDataRate=pdnDslAtmBondPerfCurrAtucNetDataRate, pdnDslAtmBondLinkAtucTxLinkStatus=pdnDslAtmBondLinkAtucTxLinkStatus, pdnDslAtmBond15MinIntervalUAS=pdnDslAtmBond15MinIntervalUAS, pdnDslAtmBondGroupAlarmConfProfileName=pdnDslAtmBondGroupAlarmConfProfileName, pdnDslAtmBondGroupIndexMappingEntry=pdnDslAtmBondGroupIndexMappingEntry, pdnDslAtmBondPerfBondGroupStatusGroup=pdnDslAtmBondPerfBondGroupStatusGroup, pdnDslAtmBondAlarmConfAtucThreshRateDown=pdnDslAtmBondAlarmConfAtucThreshRateDown, pdnDslAtmBondMappingRowStatus=pdnDslAtmBondMappingRowStatus, pdnDslAtmBondGroupNbrRefs=pdnDslAtmBondGroupNbrRefs, pdnDslAtmBondPerfFailReason=pdnDslAtmBondPerfFailReason, PdnDslAtmBondGroupBearerNumberTC=PdnDslAtmBondGroupBearerNumberTC, pdnDslAtmBond15MinIntervalAturRxCellLoss=pdnDslAtmBond15MinIntervalAturRxCellLoss, pdnDslAtmBondPerfAtucRxCellLoss=pdnDslAtmBondPerfAtucRxCellLoss, pdnDslAtmBondGroupIndex=pdnDslAtmBondGroupIndex, pdnDslAtmBondAlarmConfAtucThreshRateGroup=pdnDslAtmBondAlarmConfAtucThreshRateGroup, pdnDslAtmBondGroupStatusNotifyEnabled=pdnDslAtmBondGroupStatusNotifyEnabled, pdnDslAtmBondGroupID=pdnDslAtmBondGroupID, pdnDslAtmBondGroupIndexMappingIndex=pdnDslAtmBondGroupIndexMappingIndex, pdnDslAtmBondGroupTable=pdnDslAtmBondGroupTable, pdnDslAtmBondGroupAtucMinNetDataRate=pdnDslAtmBondGroupAtucMinNetDataRate, pdnDslAtmBondLinkAturTxLinkStatus=pdnDslAtmBondLinkAturTxLinkStatus, pdnDslAtmBondBearerNbr=pdnDslAtmBondBearerNbr, pdnDslAtmBondDslIfIndex=pdnDslAtmBondDslIfIndex, pdnDslAtmBondPerfAggDataRateGroup=pdnDslAtmBondPerfAggDataRateGroup, pdnDslAtmBondIndexMappingGroup=pdnDslAtmBondIndexMappingGroup, pdnDslAtmBondGroupAturDiffDelay=pdnDslAtmBondGroupAturDiffDelay, pdnDslAtmBondGroupAturMaxNetDataRate=pdnDslAtmBondGroupAturMaxNetDataRate, pdnDslAtmBondNtfyGroups=pdnDslAtmBondNtfyGroups, pdnDslAtmBondGroupIndexMappingTable=pdnDslAtmBondGroupIndexMappingTable, pdnDslAtmBondNotifications=pdnDslAtmBondNotifications, pdnDslAtmBondGroup=pdnDslAtmBondGroup, pdnDslAtmBondDiffDelayGroup=pdnDslAtmBondDiffDelayGroup, pdnDslAtmBondAlarmConfProfileEntry=pdnDslAtmBondAlarmConfProfileEntry, pdnDslAtmBondNotificationsGroup=pdnDslAtmBondNotificationsGroup, pdnDslAtmBondMappingGroupIndex=pdnDslAtmBondMappingGroupIndex, pdnDslAtmBondObjects=pdnDslAtmBondObjects, pdnDslAtmBond15MinIntervalEntry=pdnDslAtmBond15MinIntervalEntry, pdnDslAtmBondPerfCurrAturNetDataRate=pdnDslAtmBondPerfCurrAturNetDataRate, PYSNMP_MODULE_ID=pdnDslAtmBondMIB, pdnDslAtmBondDateAndTimeGroup=pdnDslAtmBondDateAndTimeGroup, pdnDslAtmBondCompliances=pdnDslAtmBondCompliances, pdnDslAtmBondPerfPrevAturNetDataRate=pdnDslAtmBondPerfPrevAturNetDataRate, pdnDslAtmBondPerfFailReasonGroup=pdnDslAtmBondPerfFailReasonGroup, pdnDslAtmBondAlarmConfAturThreshRateUp=pdnDslAtmBondAlarmConfAturThreshRateUp, pdnDslAtmBondPerfPrevAtucNetDataRate=pdnDslAtmBondPerfPrevAtucNetDataRate, pdnDslAtmBond1DayIntervalRunTime=pdnDslAtmBond1DayIntervalRunTime, pdnDslAtmBondLinkAturAsmRxStatus=pdnDslAtmBondLinkAturAsmRxStatus, pdnDslATmBondAsmRxStatusGroup=pdnDslATmBondAsmRxStatusGroup, pdnDslAtmBondGroupInvMappingTable=pdnDslAtmBondGroupInvMappingTable, pdnDslAtmBondAfnGroups=pdnDslAtmBondAfnGroups, pdnDslAtmBondLinkEntry=pdnDslAtmBondLinkEntry, pdnDslAtmBondLinkAtucAsmRxStatus=pdnDslAtmBondLinkAtucAsmRxStatus, pdnDslAtmBondMappingGroup=pdnDslAtmBondMappingGroup, pdnDslAtmBondAlarmConfProfileName=pdnDslAtmBondAlarmConfProfileName, pdnDslAtmBondAlarmConfProfileTable=pdnDslAtmBondAlarmConfProfileTable, pdnDslAtmBondGroupAturMinNetDataRate=pdnDslAtmBondGroupAturMinNetDataRate, pdnDslAtmBondPerfTable=pdnDslAtmBondPerfTable, pdnDslAtmBondPerfGroupStatus=pdnDslAtmBondPerfGroupStatus, pdnDslAtmBondPerfEntry=pdnDslAtmBondPerfEntry, pdnDslAtmBondMaxRateGroup=pdnDslAtmBondMaxRateGroup, PdnDslAtmBondGroupFailReasonTC=PdnDslAtmBondGroupFailReasonTC, pdnDslAtmBond1DayIntervalTable=pdnDslAtmBond1DayIntervalTable, PdnDslAtmBondGroupDiffDelayTolTC=PdnDslAtmBondGroupDiffDelayTolTC, pdnDslAtmBond15MinIntervalAtucRxCellLoss=pdnDslAtmBond15MinIntervalAtucRxCellLoss, pdnDslAtmBond15MinIntervalStartDateAndTime=pdnDslAtmBond15MinIntervalStartDateAndTime, pdnDslAtmBondGroupStatusChange=pdnDslAtmBondGroupStatusChange, pdnDslAtmBondObjGroups=pdnDslAtmBondObjGroups, pdnDslAtmBond1DayIntervalAturRxCellLoss=pdnDslAtmBond1DayIntervalAturRxCellLoss, pdnDslAtmBondGroupRowStatus=pdnDslAtmBondGroupRowStatus, pdnDslAtmBond1DayIntervalEntry=pdnDslAtmBond1DayIntervalEntry, pdnDslAtmBondAFNs=pdnDslAtmBondAFNs, pdnDslAtmBond1DayIntervalAtucRxCellLoss=pdnDslAtmBond1DayIntervalAtucRxCellLoss)
