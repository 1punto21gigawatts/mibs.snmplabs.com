#
# PySNMP MIB module T11-FC-FABRIC-CONFIG-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T11-FC-FABRIC-CONFIG-SERVER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:14:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
FcNameIdOrZero, fcmSwitchIndex, fcmInstanceIndex, FcDomainIdOrZero, FcAddressIdOrZero, FcPortType = mibBuilder.importSymbols("FC-MGMT-MIB", "FcNameIdOrZero", "fcmSwitchIndex", "fcmInstanceIndex", "FcDomainIdOrZero", "FcAddressIdOrZero", "FcPortType")
URLString, = mibBuilder.importSymbols("NETWORK-SERVICES-MIB", "URLString")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Bits, ObjectIdentity, TimeTicks, ModuleIdentity, Counter64, Gauge32, IpAddress, Integer32, MibIdentifier, Counter32, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Bits", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Counter64", "Gauge32", "IpAddress", "Integer32", "MibIdentifier", "Counter32", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TruthValue, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp")
t11FamLocalSwitchWwn, = mibBuilder.importSymbols("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn")
T11NsGs4RejectReasonCode, = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FcFabricConfigServerMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 162))
t11FcFabricConfigServerMIB.setRevisions(('2007-06-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11FcFabricConfigServerMIB.setRevisionsDescriptions(('Initial version of this MIB module, published as RFC 4935.',))
if mibBuilder.loadTexts: t11FcFabricConfigServerMIB.setLastUpdated('200706270000Z')
if mibBuilder.loadTexts: t11FcFabricConfigServerMIB.setOrganization("For the initial versions, T11. For later versions, the IETF's IMSS Working Group.")
if mibBuilder.loadTexts: t11FcFabricConfigServerMIB.setContactInfo(' Claudio DeSanti Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA EMail: cds@cisco.com Keith McCloghrie Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA EMail: kzm@cisco.com')
if mibBuilder.loadTexts: t11FcFabricConfigServerMIB.setDescription('The MIB module for the management of a Fabric Configuration Server (FCS) in a Fibre Channel (FC) network. An FCS is defined by the FC-GS-5 standard. This MIB provides the capabilities to trigger a discovery of the configuration of one or more Fabrics, to retrieve the results of such a discovery, as well as to control and monitor the operation of an FCS. The discovered configuration contains information about: - Interconnect Elements (IEs), i.e., switches, hubs, bridges, etc., - Ports on IEs, and - Platforms that consist of one or more FC nodes. Copyright (C) The IETF Trust (2007). This version of this MIB module is part of RFC 4935; see the RFC itself for full legal notices.')
t11FcsMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 1))
t11FcsMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 2))
t11FcsNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 0))
t11FcsDiscovery = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 1, 1))
t11FcsDiscoveredConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 1, 2))
t11FcsStats = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 1, 3))
t11FcsNotificationInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 1, 4))
class T11FcListIndex(TextualConvention, Unsigned32):
    description = 'An index that identifies a list of elements. All elements that belong to the same list have the same index value. This syntax is used for objects which identify a list in the INDEX clause of a table of elements of that type of list.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class T11FcListIndexPointerOrZero(TextualConvention, Unsigned32):
    description = "Objects with this syntax point to a list of elements contained in a table, by holding the same value as the object with syntax T11FcListIndex defined in the table's INDEX clause, or, zero to indicate an empty list. Note that such a table could have one row per list, or it could have one row per element of a list. The definition of an object with this syntax must identify the table(s) into which it points."
    status = 'current'
    displayHint = 'd'

class T11FcIeType(TextualConvention, Integer32):
    reference = 'ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, Table 96.'
    description = 'The type of Interconnect Element (IE): unknown(1) - an unknown IE. other(2) - some other type of IE. switch(3) - the IE is a switch. hub(4) - the IE is a hub. bridge(5) - the IE is a bridge.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("other", 2), ("switch", 3), ("hub", 4), ("bridge", 5))

class T11FcPortState(TextualConvention, Integer32):
    reference = 'ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, Table 106.'
    description = 'The state of a port: unknown(1) - unknown state. other(2) - some other state. online(3) - port is in online state. offline(4) - port is in offline state. testing(5) - port is in testing state. fault(6) - port is faulty.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 1), ("other", 2), ("online", 3), ("offline", 4), ("testing", 5), ("fault", 6))

class T11FcPortTxType(TextualConvention, Integer32):
    reference = 'ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, Table 101.'
    description = "The technology of the port transceiver: unknown(1) - unknown (includes the 'null' type) other(2) - some other technology shortwave850nm(3) - Short wave laser - SN (850 nm) longwave1550nm(4) - Long wave laser - LL (1550 nm) longwave1310nm(5) - Long wave laser cost reduced - LC (1310 nm) electrical(6) - Electrical - EL. tenGbaseSr850(7) - 10GBASE-SR 850nm laser tenGbaseLr1310(8) - 10GBASE-LR 1310nm laser tenGbaseEr1550(9) - 10GBASE-ER 1550nm laser tenGbaseLx1300(10) - 10GBASE-LX4 WWDM 1300nm laser tenGbaseSw850(11) - 10GBASE-SW 850nm laser tenGbaseLw1310(12) - 10GBASE-LW 1310nm laser tenGbaseEw1550(13) - 10GBASE-EW 1550nm laser "
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("unknown", 1), ("other", 2), ("shortwave850nm", 3), ("longwave1550nm", 4), ("longwave1310nm", 5), ("electrical", 6), ("tenGbaseSr850", 7), ("tenGbaseLr1310", 8), ("tenGbaseEr1550", 9), ("tenGbaseLx1300", 10), ("tenGbaseSw850", 11), ("tenGbaseLw1310", 12), ("tenGbaseEw1550", 13))

class T11FcsRejectReasonExplanation(TextualConvention, Integer32):
    reference = 'ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, Table 124.'
    description = 'The reject reason code explanation: noAdditionalExplanation(1) - no additional explanation. invNameIdForIEOrPort(2) - the format of IE or port name is invalid. ieListNotAvailable(3) - IE list is not available. ieTypeNotAvailable(4) - IE type is not available. domainIdNotAvailable(5) - Domain ID is not available. mgmtIdNotAvailable(6) - mgmt ID is not available. fabNameNotAvailable(7) - Fabric_Name is not available. ielogNameNotAvailable(8) - IE logical name is not available. mgmtAddrListNotAvailable(9) - mgmt address list is not available. ieInfoListNotAvailable(10) - IE info list is not available. portListNotAvailable(11) - port list is not available. portTypeNotAvailable(12) - port type is not available. phyPortNumNotAvailable(13) - physical port number is not available. attPortNameListNotAvailable(14) - attached port name list is not available. portStateNotAvailable(15) - port state is not available. unableToRegIELogName(16) - not able to register IE logical name. platformNameNoExist(17) - platform name does not exist. platformNameAlreadyExists(18) - platform name already exists. platformNodeNameNoExists(19) - platform node name does not exist. platformNodeNameAlreadyExists(20) - platform node name already exists. resourceUnavailable(21) - resource unavailable. noEntriesInLunMap(22) - zero entries in OS LUN Map. invalidDeviceNameLength(23) - invalid OS device name length. multipleAttributes(24) - multiple attributes of same type in platform attribute block. invalidAttribBlockLength(25) - invalid platform attribute block length. attributesMissing(26) - required platform attributes not present.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))
    namedValues = NamedValues(("noAdditionalExplanation", 1), ("invNameIdForIEOrPort", 2), ("ieListNotAvailable", 3), ("ieTypeNotAvailable", 4), ("domainIdNotAvailable", 5), ("mgmtIdNotAvailable", 6), ("fabNameNotAvailable", 7), ("ielogNameNotAvailable", 8), ("mgmtAddrListNotAvailable", 9), ("ieInfoListNotAvailable", 10), ("portListNotAvailable", 11), ("portTypeNotAvailable", 12), ("phyPortNumNotAvailable", 13), ("attPortNameListNotAvailable", 14), ("portStateNotAvailable", 15), ("unableToRegIELogName", 16), ("platformNameNoExist", 17), ("platformNameAlreadyExists", 18), ("platformNodeNameNoExists", 19), ("platformNodeNameAlreadyExists", 20), ("resourceUnavailable", 21), ("noEntriesInLunMap", 22), ("invalidDeviceNameLength", 23), ("multipleAttributes", 24), ("invalidAttribBlockLength", 25), ("attributesMissing", 26))

t11FcsFabricDiscoveryTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 1, 1), )
if mibBuilder.loadTexts: t11FcsFabricDiscoveryTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryTable.setDescription('This table contains control information for discovery of Fabric configuration by switches. Values written to objects in this table are not retained over agent reboots.')
t11FcsFabricDiscoveryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"))
if mibBuilder.loadTexts: t11FcsFabricDiscoveryEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryEntry.setDescription('Control information for discovery by the switch identified by fcmInstanceIndex and fcmSwitchIndex.')
t11FcsFabricDiscoveryRangeLow = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 1, 1, 1), T11FabricIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsFabricDiscoveryRangeLow.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryRangeLow.setDescription('The discovery by a particular switch operates within all existing Fabrics that have a Fabric Index within a specific inclusive range. This object specifies the minimum Fabric Index value within that range. This value just represents the lower end of the range and does not necessarily represent any existing Fabric.')
t11FcsFabricDiscoveryRangeHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 1, 1, 2), T11FabricIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsFabricDiscoveryRangeHigh.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryRangeHigh.setDescription('The discovery by a particular switch operates within all existing Fabrics that have a Fabric Index within a specific inclusive range. This object specifies the maximum Fabric Index value within that range. This value just represents the higher end of the range and does not necessarily represent any existing Fabric.')
t11FcsFabricDiscoveryStart = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsFabricDiscoveryStart.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryStart.setDescription("This object provides the capability to trigger the start of a discovery by a Fabric Configuration Server. If this object is set to 'start', then the discovery is started on those Fabrics that have their Fabric Index value in the range specified by t11FcsFabricDiscoveryRangeLow and t11FcsFabricDiscoveryRangeHigh. It is recommended that whenever an instance of this object is set to 'start', that the desired range be specified at the same time by setting the corresponding instances of t11FcsFabricDiscoveryRangeLow and t11FcsFabricDiscoveryRangeHigh. Setting this object to 'start' will be rejected if a discovery is already/still in progress on any Fabrics in the specified range. No action is taken if this object is set to 'noOp'. The value of this object when read is always 'noOp'.")
t11FcsFabricDiscoveryTimeOut = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 86400)).clone(900)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsFabricDiscoveryTimeOut.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricDiscoveryTimeOut.setDescription('The minimum interval of time for which the discovered Fabric information is cached by a Fabric Configuration Server.')
t11FcsDiscoveryStateTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 1, 2), )
if mibBuilder.loadTexts: t11FcsDiscoveryStateTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryStateTable.setDescription('This table contains the status of discovery of locally known Fabrics.')
t11FcsDiscoveryStateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"))
if mibBuilder.loadTexts: t11FcsDiscoveryStateEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryStateEntry.setDescription('The discovery status for a particular Fabric on the switch identified by fcmInstanceIndex and fcmSwitchIndex.')
t11FcsFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 2, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11FcsFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsFabricIndex.setDescription('A unique index value that uniquely identifies a particular Fabric. In a Fabric conformant to FC-SW-4, multiple Virtual Fabrics can operate within one (or more) physical infrastructures, and this index value is used to uniquely identify a particular (physical or virtual) Fabric within a physical infrastructure. In a Fabric conformant to versions earlier than FC-SW-4, only a single Fabric could operate within a physical infrastructure, and thus, the value of this Fabric Index was defined to always be 1.')
t11FcsDiscoveryStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inProgress", 1), ("completed", 2), ("localOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsDiscoveryStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryStatus.setDescription("The status of the discovery for the particular Fabric. Initially when the switch comes up, all instances of this object have the value: 'localOnly', and the database contains only local information, i.e., no information discovered via the Fabric Configuration Server protocol specified in FC-GS-5. If t11FcsFabricDiscoveryStart is set to 'start' for a range of Fabrics that includes this Fabric, then the value of this object transitions to 'inProgress'. When the discovery completes, this object transitions to 'completed', and the data is cached for the minimum interval of time specified by t11FcsFabricDiscoveryTimeOut. After this interval has been exceeded, the data may be lost, in which case, the value of this object changes to 'localOnly'. This object cannot be set via SNMP to any value other than 'localOnly'. If this object is set (via SNMP) to 'localOnly', the cached data for the Fabric is discarded immediately, and if a discovery initiated from this switch was in progress for this Fabric, then that discovery is aborted.")
t11FcsDiscoveryCompleteTime = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 1, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsDiscoveryCompleteTime.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryCompleteTime.setDescription('This object contains the value of sysUpTime at which discovery was most recently completed or aborted on this Fabric. This object contains the value of zero before the first discovery on this Fabric.')
t11FcsIeTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 1), )
if mibBuilder.loadTexts: t11FcsIeTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeTable.setDescription('A table of Interconnect Elements. Interconnect Elements (IEs) are switches, hubs, bridges etc. By default, the Fabric Configuration Server will maintain detailed information pertaining only to local resources. As far as discovered topology is concerned, only the IE name, type, and Domain ID information will be maintained. If a discovery cycle is triggered on a set of Fabrics, this table along with the Port and Platform tables will be populated with the discovered information. The discovered data will be retained in this table for at least t11FcsFabricDiscoveryTimeOut seconds after the completion of its discovery or until the discovered data is invalidated.')
t11FcsIeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeName"))
if mibBuilder.loadTexts: t11FcsIeEntry.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.')
if mibBuilder.loadTexts: t11FcsIeEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeEntry.setDescription('Information about an Interconnect Element that was discovered on a Fabric (identified by t11FcsFabricIndex), by a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsIeName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 1), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcsIeName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.1.')
if mibBuilder.loadTexts: t11FcsIeName.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeName.setDescription('The WWN of an Interconnect Element. This object uniquely identifies an Interconnect Element on a Fabric. If the IE is a switch, then this object is the Switch_Name (WWN) of the switch.')
t11FcsIeType = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 2), T11FcIeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeType.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.2')
if mibBuilder.loadTexts: t11FcsIeType.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeType.setDescription('The type of this Interconnect Element.')
t11FcsIeDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 3), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeDomainId.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.3.')
if mibBuilder.loadTexts: t11FcsIeDomainId.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeDomainId.setDescription('The Domain ID of this Interconnect Element.')
t11FcsIeMgmtId = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 4), FcAddressIdOrZero().clone(hexValue="000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeMgmtId.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.4.')
if mibBuilder.loadTexts: t11FcsIeMgmtId.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeMgmtId.setDescription("The management identifier of this Interconnect Element. If the Interconnect Element is a switch, this object will be the Domain Controller identifier of the switch. When the value of the identifier is unknown, this object contains the all-zeros value: x'00 00 00'.")
t11FcsIeFabricName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 5), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), )).clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeFabricName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.5.')
if mibBuilder.loadTexts: t11FcsIeFabricName.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeFabricName.setDescription("The Fabric_Name (WWN) of this Interconnect Element. When the Fabric_Name is unknown, this object contains the all-zeros value: x'00 00 00 00 00 00 00 00'.")
t11FcsIeLogicalName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeLogicalName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.6.')
if mibBuilder.loadTexts: t11FcsIeLogicalName.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeLogicalName.setDescription('The logical name of this Interconnect Element. When the logical name is unknown, this object contains the zero-length string.')
t11FcsIeMgmtAddrListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 7), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeMgmtAddrListIndex.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.7.')
if mibBuilder.loadTexts: t11FcsIeMgmtAddrListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeMgmtAddrListIndex.setDescription('The management address list for this Interconnect Element. This object points to an entry in the t11FcsMgmtAddrListTable.')
t11FcsIeInfoList = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsIeInfoList.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.8')
if mibBuilder.loadTexts: t11FcsIeInfoList.setStatus('current')
if mibBuilder.loadTexts: t11FcsIeInfoList.setDescription("The information list for this Interconnect Element. The value of this object is formatted as specified in FC-GS-5, i.e., it has the following substrings in order: vendor name, model name/number, and release code/level, followed by zero or more substrings of vendor-specific information. Each substring is terminated with a byte containing a null value (x'00').")
t11FcsMgmtAddrListTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 2), )
if mibBuilder.loadTexts: t11FcsMgmtAddrListTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrListTable.setDescription('This table contains the set of management address lists that are currently referenced by any instance of the t11FcsIeMgmtAddrListIndex or t11FcsPlatformMgmtAddrListIndex objects.')
t11FcsMgmtAddrListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrListIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrIndex"))
if mibBuilder.loadTexts: t11FcsMgmtAddrListEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrListEntry.setDescription('Information about one management address in a management address list, which is known to a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsMgmtAddrListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 2, 1, 1), T11FcListIndex())
if mibBuilder.loadTexts: t11FcsMgmtAddrListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrListIndex.setDescription('The index value of the management address list.')
t11FcsMgmtAddrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcsMgmtAddrIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrIndex.setDescription('An integer value to distinguish different management addresses in the same list.')
t11FcsMgmtAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 2, 1, 3), URLString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsMgmtAddr.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.2.7')
if mibBuilder.loadTexts: t11FcsMgmtAddr.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddr.setDescription('The management address of this entry. The format of this object is a Uniform Resource Locator (URL), e.g., for SNMP, see RFC 4088.')
t11FcsPortTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 4), )
if mibBuilder.loadTexts: t11FcsPortTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortTable.setDescription('This table contains information about the ports of IEs.')
t11FcsPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeName"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortName"))
if mibBuilder.loadTexts: t11FcsPortEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortEntry.setDescription('Information about a particular port of an Interconnect Element (identified by t11FcsIeName). The port is connected to a Fabric (identified by t11FcsFabricIndex) and known to a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 1), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcsPortName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.1.')
if mibBuilder.loadTexts: t11FcsPortName.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortName.setDescription('The Port_Name (WWN) of the port for which this row contains information.')
t11FcsPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 2), FcPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortType.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.2.')
if mibBuilder.loadTexts: t11FcsPortType.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortType.setDescription('The Port Type of this port.')
t11FcsPortTxType = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 3), T11FcPortTxType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortTxType.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.3.')
if mibBuilder.loadTexts: t11FcsPortTxType.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortTxType.setDescription('The Port TX Type of this port.')
t11FcsPortModuleType = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortModuleType.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.4.')
if mibBuilder.loadTexts: t11FcsPortModuleType.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortModuleType.setDescription('The port module type of this port.')
t11FcsPortPhyPortNum = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortPhyPortNum.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.5.')
if mibBuilder.loadTexts: t11FcsPortPhyPortNum.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortPhyPortNum.setDescription('The physical number for this port. FC-GS-5 says that the contents of this field, which are carried in a field with a size of 4 bytes, are not to be restricted due to vendor-specific methods for numbering physical ports.')
t11FcsPortAttachPortNameIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 6), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortAttachPortNameIndex.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.6.')
if mibBuilder.loadTexts: t11FcsPortAttachPortNameIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortAttachPortNameIndex.setDescription('The attached port name list for this port. This object points to an entry in the t11FcsAttachPortNameListTable.')
t11FcsPortState = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 7), T11FcPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortState.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.7.')
if mibBuilder.loadTexts: t11FcsPortState.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortState.setDescription('The state of this port.')
t11FcsPortSpeedCapab = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortSpeedCapab.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.8.')
if mibBuilder.loadTexts: t11FcsPortSpeedCapab.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortSpeedCapab.setDescription('The port speed capabilities of this port. The two octets of the value are formatted as described in FC-GS-5.')
t11FcsPortOperSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortOperSpeed.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.9.')
if mibBuilder.loadTexts: t11FcsPortOperSpeed.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortOperSpeed.setDescription('The operating speed of this port. The two octets of the value are formatted as described in FC-GS-5.')
t11FcsPortZoningEnfStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPortZoningEnfStatus.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.10.')
if mibBuilder.loadTexts: t11FcsPortZoningEnfStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcsPortZoningEnfStatus.setDescription('The zoning enforcement status of this port. The 12 octets of the value are formatted as described in FC-GS-5.')
t11FcsAttachPortNameListTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 5), )
if mibBuilder.loadTexts: t11FcsAttachPortNameListTable.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.6')
if mibBuilder.loadTexts: t11FcsAttachPortNameListTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsAttachPortNameListTable.setDescription('This table contains all the lists of attach port names.')
t11FcsAttachPortNameListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 5, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsAttachPortNameListIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsAttachPortName"))
if mibBuilder.loadTexts: t11FcsAttachPortNameListEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsAttachPortNameListEntry.setDescription('Information about the name of a particular attached port, which is known to a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsAttachPortNameListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 5, 1, 1), T11FcListIndex())
if mibBuilder.loadTexts: t11FcsAttachPortNameListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsAttachPortNameListIndex.setDescription('The index value of the attach port name list.')
t11FcsAttachPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsAttachPortName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.3.6')
if mibBuilder.loadTexts: t11FcsAttachPortName.setStatus('current')
if mibBuilder.loadTexts: t11FcsAttachPortName.setDescription('The attached port name. Zero or more of these names may be associated with a port object. The first 8 bytes of this object contain the WWN of the port followed by 2 reserved bytes. Following this is one byte of Port flags and one byte of Port type, as described in FC-GS-5.')
t11FcsPlatformTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 6), )
if mibBuilder.loadTexts: t11FcsPlatformTable.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4')
if mibBuilder.loadTexts: t11FcsPlatformTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformTable.setDescription('This table contains information on platforms. By default, this table only contains local (e.g., for a local switch) information. If a discovery is triggered, this table will also contain information gathered by the discovery process. The discovered information is retained in this table for at least t11FcsFabricDiscoveryTimeOut seconds after the completion of its discovery or until the discovered cache is invalidated.')
t11FcsPlatformEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformIndex"))
if mibBuilder.loadTexts: t11FcsPlatformEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformEntry.setDescription('Information about a particular platform, which is known to a switch (identified by fcmInstanceIndex and fcmSwitchIndex). A platform can contain multiple nodes. Information on nodes is contained in the t11FcsNodeNameListTable. The t11FcsPlatformNodeNameListIndex object in this table points to the list of nodes contained in this platform. Similarly, the t11FcsPlatformMgmtAddrListIndex object in this table points to the list of management addresses associated with this platform.')
t11FcsPlatformIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcsPlatformIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformIndex.setDescription('An integer value to distinguish one platform from other platforms in the same Fabric.')
t11FcsPlatformName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformName.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.2')
if mibBuilder.loadTexts: t11FcsPlatformName.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformName.setDescription('The name of this platform. The last byte of the value indicates the format of the name (even if the name itself is the zero-length string) as specified in FC-GS-5.')
t11FcsPlatformType = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformType.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.3')
if mibBuilder.loadTexts: t11FcsPlatformType.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformType.setDescription('The type(s) of this platform, encoded in 4 bytes as specified in FC-GS-5.')
t11FcsPlatformNodeNameListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 4), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformNodeNameListIndex.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.6')
if mibBuilder.loadTexts: t11FcsPlatformNodeNameListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformNodeNameListIndex.setDescription('The list of nodes for this platform. This object points to an entry in the t11FcsNodeNameListTable.')
t11FcsPlatformMgmtAddrListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 5), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformMgmtAddrListIndex.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.7')
if mibBuilder.loadTexts: t11FcsPlatformMgmtAddrListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformMgmtAddrListIndex.setDescription('The list of management addresses for this platform. This object points to an entry in the t11FcsMgmtAddrListTable.')
t11FcsPlatformVendorId = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 6), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(12, 12), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformVendorId.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformVendorId.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformVendorId.setDescription('The identifier of the vendor of this platform, in the format specified in FC-GS-5.')
t11FcsPlatformProductId = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 7), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformProductId.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformProductId.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformProductId.setDescription("The vendor's product and/or model identifier for this platform, in the format specified in FC-GS-5.")
t11FcsPlatformProductRevLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 8), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformProductRevLevel.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformProductRevLevel.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformProductRevLevel.setDescription('The product revision level for this platform, in the format specified in FC-GS-5.')
t11FcsPlatformDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 9), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformDescription.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.10')
if mibBuilder.loadTexts: t11FcsPlatformDescription.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformDescription.setDescription("The description of this platform, in the format specified in FC-GS-5. This value should include the full name and version identification of the platform's hardware type and software operating system.")
t11FcsPlatformLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 10), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformLabel.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.11')
if mibBuilder.loadTexts: t11FcsPlatformLabel.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformLabel.setDescription('An administratively assigned symbolic name for the platform, in the format specified in FC-GS-5.')
t11FcsPlatformLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 11), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformLocation.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.12')
if mibBuilder.loadTexts: t11FcsPlatformLocation.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformLocation.setDescription("The physical location of the platform, in the format specified in FC-GS-5 (e.g., 'telephone closet, 3rd floor').")
t11FcsPlatformSystemID = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 12), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformSystemID.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformSystemID.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformSystemID.setDescription('An identifier for a hosting system that this platform is associated with. This identifier is used to associate platforms of logical types (e.g., logical partitions) with a physical system.')
t11FcsPlatformSysMgmtAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 13), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformSysMgmtAddr.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, sections 6.2.3.4.5 and 6.2.3.2.7.')
if mibBuilder.loadTexts: t11FcsPlatformSysMgmtAddr.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformSysMgmtAddr.setDescription('A list of management addresses for the platform.')
t11FcsPlatformClusterId = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 14), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 64), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformClusterId.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformClusterId.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformClusterId.setDescription('An identifier for a cluster that this platform is associated with, where a cluster is a set of independent platforms that are managed together to provide increased performance capabilities, failover, etc.')
t11FcsPlatformClusterMgmtAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 15), T11FcListIndexPointerOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformClusterMgmtAddr.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, sections 6.2.3.4.5 and 6.2.3.2.7.')
if mibBuilder.loadTexts: t11FcsPlatformClusterMgmtAddr.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformClusterMgmtAddr.setDescription('A list of management addresses for the cluster identified in the corresponding instance of t11FcsPlatformClusterId.')
t11FcsPlatformFC4Types = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 6, 1, 16), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsPlatformFC4Types.setReference('ANSI INCITS 427-2007, Fibre Channel - Generic Services 5, FC-GS-5, section 6.2.3.4.5')
if mibBuilder.loadTexts: t11FcsPlatformFC4Types.setStatus('current')
if mibBuilder.loadTexts: t11FcsPlatformFC4Types.setDescription('The FC-4 types supported by this platform, formatted as a bit mask as specified in FC-GS-5. If this object contains the zero-length string, the types are unknown.')
t11FcsNodeNameListTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 2, 7), )
if mibBuilder.loadTexts: t11FcsNodeNameListTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsNodeNameListTable.setDescription('This table contains all the lists of nodes.')
t11FcsNodeNameListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 2, 7, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsNodeNameListIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsNodeName"))
if mibBuilder.loadTexts: t11FcsNodeNameListEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsNodeNameListEntry.setDescription('Information about a node, which is known to a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsNodeNameListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 7, 1, 1), T11FcListIndex())
if mibBuilder.loadTexts: t11FcsNodeNameListIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsNodeNameListIndex.setDescription('The index value of the node name list.')
t11FcsNodeName = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 2, 7, 1, 2), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsNodeName.setStatus('current')
if mibBuilder.loadTexts: t11FcsNodeName.setDescription('The name of this node.')
t11FcsStatsTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 3, 1), )
if mibBuilder.loadTexts: t11FcsStatsTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsStatsTable.setDescription('This table contains all the statistics related to the Fabric Configuration Server.')
t11FcsStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"))
if mibBuilder.loadTexts: t11FcsStatsEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsStatsEntry.setDescription('A set of statistics for a particular Fabric (identified by t11FcsFabricIndex) on a switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsInGetReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsInGetReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsInGetReqs.setDescription('The number of Get Requests received by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsOutGetReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsOutGetReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsOutGetReqs.setDescription('The number of Get Requests sent by the Fabric Configuration Server on this Fabric to other servers in the Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsInRegReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsInRegReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsInRegReqs.setDescription('The number of Registration Requests received by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsOutRegReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsOutRegReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsOutRegReqs.setDescription('The number of Registration Requests sent by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsInDeregReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsInDeregReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsInDeregReqs.setDescription('The number of Deregistration Requests received by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsOutDeregReqs = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsOutDeregReqs.setStatus('current')
if mibBuilder.loadTexts: t11FcsOutDeregReqs.setDescription('The number of Deregistration Requests sent by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejects.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejects.setDescription('The total number of requests rejected by the Fabric Configuration Server on this Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11FcsNotifyControlTable = MibTable((1, 3, 6, 1, 2, 1, 162, 1, 4, 1), )
if mibBuilder.loadTexts: t11FcsNotifyControlTable.setStatus('current')
if mibBuilder.loadTexts: t11FcsNotifyControlTable.setDescription('A table of control information for notifications generated due to Fabric Configuration Server events. Values written to objects in this table should be persistent/retained over agent reboots.')
t11FcsNotifyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricIndex"))
if mibBuilder.loadTexts: t11FcsNotifyControlEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcsNotifyControlEntry.setDescription('Each entry contains notification control information for a Fabric Configuration Server on a particular Fabric (identified by t11FcsFabricIndex) on a particular switch (identified by fcmInstanceIndex and fcmSwitchIndex).')
t11FcsReqRejectNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsReqRejectNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: t11FcsReqRejectNotifyEnable.setDescription("This object specifies if the Fabric Configuration Server should generate 't11FcsRqRejectNotification' notifications. If the value of this object is 'true', then the notification is issued. If the value of this object is 'false', then the notification is not issued.")
t11FcsDiscoveryCompNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsDiscoveryCompNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryCompNotifyEnable.setDescription("This object specifies if the Fabric Configuration Server should generate 't11FcsDiscoveryCompleteNotify' notifications. If the value of this object is 'true', then the notification is issued. If the value of this object is 'false', then the notification is not issued.")
t11FcsMgmtAddrChangeNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeNotifyEnable.setDescription("This object specifies if the Fabric Configuration Server should generate 't11FcsMgmtAddrChangeNotify' notifications. If the value of this object is 'true', then the notification is issued. If the value of this object is 'false', then the notification is not issued.")
t11FcsRejectCtCommandString = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejectCtCommandString.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejectCtCommandString.setDescription("The binary content of the Fabric Configuration Server request, formatted as an octet string (in network byte order) containing the Common Transport Information Unit (CT_IU), as described in Table 2 of FC-GS-5 (including the preamble), which was most recently rejected by the Fabric Configuration Server for this Fabric. This object contains the zero-length string if and when the CT-IU's content is unavailable. When the length of this object is 255 octets, it contains the first 255 octets of the CT-IU (in network byte order).")
t11FcsRejectRequestSource = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 5), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejectRequestSource.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejectRequestSource.setDescription('The WWN that was the source of the CT_IU contained in the corresponding instance of t11FcsRejectCtCommandString.')
t11FcsRejectReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 6), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejectReasonCode.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejectReasonCode.setDescription('This object contains the reason code corresponding to the latest Fabric Configuration Server request rejected by the local system.')
t11FcsRejectReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 7), T11FcsRejectReasonExplanation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejectReasonCodeExp.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejectReasonCodeExp.setDescription("When the corresponding instance of t11FcsRejectReasonCode has the value: 'unable to perform command request', this object contains the corresponding reason code explanation.")
t11FcsRejectReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 162, 1, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcsRejectReasonVendorCode.setStatus('current')
if mibBuilder.loadTexts: t11FcsRejectReasonVendorCode.setDescription('A registration reject vendor-specific code. This object contains the vendor-specific code of the most recently rejected Fabric Configuration Server Registration request for the particular port on the particular Fabric.')
t11FcsRqRejectNotification = NotificationType((1, 3, 6, 1, 2, 1, 162, 0, 1)).setObjects(("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonCode"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonCodeExp"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonVendorCode"))
if mibBuilder.loadTexts: t11FcsRqRejectNotification.setStatus('current')
if mibBuilder.loadTexts: t11FcsRqRejectNotification.setDescription('This notification is generated whenever the Fabric Configuration Server on a switch (indicated by the value of t11FamLocalSwitchWwn) rejects a Fabric Configuration Server request. The Fabric Configuration Server should update the t11FcsRejectReasonCode, t11FcsRejectReasonCodeExp and t11FcsRejectReasonVendorCode objects with the corresponding reason code, explanation and vendor specific code before sending the notification.')
t11FcsDiscoveryCompleteNotify = NotificationType((1, 3, 6, 1, 2, 1, 162, 0, 2)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricDiscoveryRangeLow"))
if mibBuilder.loadTexts: t11FcsDiscoveryCompleteNotify.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryCompleteNotify.setDescription('This notification is generated by the Fabric Configuration Server on the completion of the discovery of Fabrics in the range that has t11FcsFabricDiscoveryRangeLow at its low end.')
t11FcsMgmtAddrChangeNotify = NotificationType((1, 3, 6, 1, 2, 1, 162, 0, 3)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeFabricIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeIeName"))
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeNotify.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeNotify.setDescription('This notification is generated by the Fabric Configuration Server whenever the management address of an IE changes, i.e., whenever an entry in the t11FcsMgmtAddrListTable changes.')
t11FcsMgmtAddrChangeFabricIndex = MibScalar((1, 3, 6, 1, 2, 1, 162, 1, 4, 2), T11FabricIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeFabricIndex.setDescription('The index value that identifies the Fabric on which a management address change has been detected.')
t11FcsMgmtAddrChangeIeName = MibScalar((1, 3, 6, 1, 2, 1, 162, 1, 4, 3), FcNameIdOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeIeName.setStatus('current')
if mibBuilder.loadTexts: t11FcsMgmtAddrChangeIeName.setDescription('The IE for which a management address change has been detected.')
t11FcsMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 2, 1))
t11FcsMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 162, 2, 2))
t11FcsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 162, 2, 1, 1)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveredConfigGroup"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryStatusGroup"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsNotificationInfoGroup"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsNotificationGroup"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryControlGroup"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsMIBCompliance = t11FcsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11FcsMIBCompliance.setDescription('The compliance statement for entities that implement the Fabric Configuration Server.')
t11FcsDiscoveryControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 1)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricDiscoveryRangeLow"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricDiscoveryRangeHigh"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricDiscoveryStart"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsFabricDiscoveryTimeOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsDiscoveryControlGroup = t11FcsDiscoveryControlGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryControlGroup.setDescription('A collection of objects for requesting a Fabric Configuration Server to discover the configuration of one or more Fabrics.')
t11FcsDiscoveryStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 2)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryStatus"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryCompleteTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsDiscoveryStatusGroup = t11FcsDiscoveryStatusGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveryStatusGroup.setDescription('A collection of objects with which to monitor the status of discovery (of Fabric configurations) by Fabric Configuration Servers.')
t11FcsDiscoveredConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 3)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeType"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeDomainId"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeMgmtId"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeFabricName"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeLogicalName"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeMgmtAddrListIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsIeInfoList"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddr"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortType"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortTxType"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortModuleType"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortPhyPortNum"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortAttachPortNameIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortState"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortSpeedCapab"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortOperSpeed"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPortZoningEnfStatus"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsAttachPortName"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformName"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformType"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformNodeNameListIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformMgmtAddrListIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformVendorId"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformProductId"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformProductRevLevel"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformDescription"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformLabel"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformLocation"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformSystemID"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformSysMgmtAddr"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformClusterId"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformClusterMgmtAddr"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsPlatformFC4Types"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsNodeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsDiscoveredConfigGroup = t11FcsDiscoveredConfigGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsDiscoveredConfigGroup.setDescription('A collection of objects to contain the Fabric configuration information discovered by Fabric Configuration Servers.')
t11FcsStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 4)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsInGetReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsOutGetReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsInRegReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsOutRegReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsInDeregReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsOutDeregReqs"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsStatisticsGroup = t11FcsStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsStatisticsGroup.setDescription('A collection of objects for Fabric Configuration Server statistics information.')
t11FcsNotificationInfoGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 5)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsReqRejectNotifyEnable"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryCompNotifyEnable"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeNotifyEnable"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectCtCommandString"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectRequestSource"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonCode"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonCodeExp"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRejectReasonVendorCode"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeFabricIndex"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeIeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsNotificationInfoGroup = t11FcsNotificationInfoGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsNotificationInfoGroup.setDescription('A collection of notification control and notification information objects for monitoring Fabric Configuration Servers.')
t11FcsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 162, 2, 2, 6)).setObjects(("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsRqRejectNotification"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsDiscoveryCompleteNotify"), ("T11-FC-FABRIC-CONFIG-SERVER-MIB", "t11FcsMgmtAddrChangeNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcsNotificationGroup = t11FcsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcsNotificationGroup.setDescription('A collection of notifications for monitoring Fabric Configuration Servers.')
mibBuilder.exportSymbols("T11-FC-FABRIC-CONFIG-SERVER-MIB", T11FcIeType=T11FcIeType, t11FcsNotificationGroup=t11FcsNotificationGroup, t11FcsRejects=t11FcsRejects, t11FcsMgmtAddrListIndex=t11FcsMgmtAddrListIndex, t11FcsDiscoveryCompleteTime=t11FcsDiscoveryCompleteTime, t11FcsPortZoningEnfStatus=t11FcsPortZoningEnfStatus, t11FcsInGetReqs=t11FcsInGetReqs, t11FcsDiscoveryStateTable=t11FcsDiscoveryStateTable, t11FcsStatisticsGroup=t11FcsStatisticsGroup, t11FcsNodeNameListTable=t11FcsNodeNameListTable, t11FcsAttachPortNameListIndex=t11FcsAttachPortNameListIndex, t11FcsRejectRequestSource=t11FcsRejectRequestSource, t11FcsInRegReqs=t11FcsInRegReqs, t11FcsNotifyControlEntry=t11FcsNotifyControlEntry, t11FcsIeInfoList=t11FcsIeInfoList, t11FcsMIBObjects=t11FcsMIBObjects, t11FcsIeMgmtId=t11FcsIeMgmtId, t11FcsDiscovery=t11FcsDiscovery, t11FcsOutDeregReqs=t11FcsOutDeregReqs, t11FcsNotificationInfoGroup=t11FcsNotificationInfoGroup, t11FcsPlatformProductRevLevel=t11FcsPlatformProductRevLevel, t11FcsPlatformVendorId=t11FcsPlatformVendorId, t11FcsAttachPortNameListEntry=t11FcsAttachPortNameListEntry, t11FcsIeName=t11FcsIeName, t11FcsPlatformClusterMgmtAddr=t11FcsPlatformClusterMgmtAddr, t11FcsMgmtAddr=t11FcsMgmtAddr, t11FcsReqRejectNotifyEnable=t11FcsReqRejectNotifyEnable, t11FcsMgmtAddrChangeNotify=t11FcsMgmtAddrChangeNotify, t11FcsPortEntry=t11FcsPortEntry, t11FcsPortSpeedCapab=t11FcsPortSpeedCapab, t11FcsNodeName=t11FcsNodeName, t11FcsDiscoveryControlGroup=t11FcsDiscoveryControlGroup, t11FcsAttachPortName=t11FcsAttachPortName, t11FcsIeEntry=t11FcsIeEntry, t11FcsPlatformSysMgmtAddr=t11FcsPlatformSysMgmtAddr, t11FcsFabricDiscoveryEntry=t11FcsFabricDiscoveryEntry, t11FcsDiscoveredConfig=t11FcsDiscoveredConfig, t11FcsInDeregReqs=t11FcsInDeregReqs, t11FcsPlatformDescription=t11FcsPlatformDescription, t11FcsRejectReasonCode=t11FcsRejectReasonCode, t11FcsNotificationInfo=t11FcsNotificationInfo, T11FcListIndexPointerOrZero=T11FcListIndexPointerOrZero, t11FcsOutRegReqs=t11FcsOutRegReqs, t11FcsMIBCompliances=t11FcsMIBCompliances, t11FcsPlatformClusterId=t11FcsPlatformClusterId, t11FcsPlatformNodeNameListIndex=t11FcsPlatformNodeNameListIndex, t11FcsFabricDiscoveryTable=t11FcsFabricDiscoveryTable, t11FcsPlatformMgmtAddrListIndex=t11FcsPlatformMgmtAddrListIndex, t11FcsIeLogicalName=t11FcsIeLogicalName, t11FcsFabricDiscoveryTimeOut=t11FcsFabricDiscoveryTimeOut, t11FcsNodeNameListIndex=t11FcsNodeNameListIndex, t11FcsPortName=t11FcsPortName, t11FcsOutGetReqs=t11FcsOutGetReqs, t11FcsMgmtAddrChangeNotifyEnable=t11FcsMgmtAddrChangeNotifyEnable, t11FcsMIBCompliance=t11FcsMIBCompliance, t11FcsDiscoveryCompleteNotify=t11FcsDiscoveryCompleteNotify, t11FcsMgmtAddrChangeIeName=t11FcsMgmtAddrChangeIeName, t11FcsIeType=t11FcsIeType, t11FcsPortModuleType=t11FcsPortModuleType, t11FcsPlatformLabel=t11FcsPlatformLabel, t11FcsIeFabricName=t11FcsIeFabricName, t11FcsDiscoveryStatus=t11FcsDiscoveryStatus, t11FcsNodeNameListEntry=t11FcsNodeNameListEntry, t11FcsPlatformType=t11FcsPlatformType, PYSNMP_MODULE_ID=t11FcFabricConfigServerMIB, t11FcsDiscoveryStateEntry=t11FcsDiscoveryStateEntry, t11FcsPortType=t11FcsPortType, t11FcsPortPhyPortNum=t11FcsPortPhyPortNum, t11FcsPortState=t11FcsPortState, t11FcsDiscoveryCompNotifyEnable=t11FcsDiscoveryCompNotifyEnable, t11FcsPortAttachPortNameIndex=t11FcsPortAttachPortNameIndex, t11FcsPortTxType=t11FcsPortTxType, T11FcsRejectReasonExplanation=T11FcsRejectReasonExplanation, t11FcsPlatformProductId=t11FcsPlatformProductId, t11FcsPlatformLocation=t11FcsPlatformLocation, t11FcsRejectReasonCodeExp=t11FcsRejectReasonCodeExp, t11FcsIeMgmtAddrListIndex=t11FcsIeMgmtAddrListIndex, t11FcsPlatformEntry=t11FcsPlatformEntry, t11FcsDiscoveryStatusGroup=t11FcsDiscoveryStatusGroup, T11FcPortState=T11FcPortState, T11FcPortTxType=T11FcPortTxType, t11FcsMIBConformance=t11FcsMIBConformance, t11FcsPlatformIndex=t11FcsPlatformIndex, t11FcsPlatformFC4Types=t11FcsPlatformFC4Types, T11FcListIndex=T11FcListIndex, t11FcsIeTable=t11FcsIeTable, t11FcsMgmtAddrChangeFabricIndex=t11FcsMgmtAddrChangeFabricIndex, t11FcsFabricDiscoveryRangeHigh=t11FcsFabricDiscoveryRangeHigh, t11FcsPlatformName=t11FcsPlatformName, t11FcsFabricIndex=t11FcsFabricIndex, t11FcsMgmtAddrListTable=t11FcsMgmtAddrListTable, t11FcsFabricDiscoveryStart=t11FcsFabricDiscoveryStart, t11FcsStats=t11FcsStats, t11FcsMgmtAddrIndex=t11FcsMgmtAddrIndex, t11FcFabricConfigServerMIB=t11FcFabricConfigServerMIB, t11FcsRqRejectNotification=t11FcsRqRejectNotification, t11FcsStatsEntry=t11FcsStatsEntry, t11FcsAttachPortNameListTable=t11FcsAttachPortNameListTable, t11FcsFabricDiscoveryRangeLow=t11FcsFabricDiscoveryRangeLow, t11FcsPlatformSystemID=t11FcsPlatformSystemID, t11FcsPlatformTable=t11FcsPlatformTable, t11FcsPortTable=t11FcsPortTable, t11FcsStatsTable=t11FcsStatsTable, t11FcsIeDomainId=t11FcsIeDomainId, t11FcsNotifications=t11FcsNotifications, t11FcsMIBGroups=t11FcsMIBGroups, t11FcsPortOperSpeed=t11FcsPortOperSpeed, t11FcsRejectReasonVendorCode=t11FcsRejectReasonVendorCode, t11FcsMgmtAddrListEntry=t11FcsMgmtAddrListEntry, t11FcsNotifyControlTable=t11FcsNotifyControlTable, t11FcsRejectCtCommandString=t11FcsRejectCtCommandString, t11FcsDiscoveredConfigGroup=t11FcsDiscoveredConfigGroup)
