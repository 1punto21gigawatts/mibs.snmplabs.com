#
# PySNMP MIB module CISCO-ITP-SP2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-SP2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
CItpTcAclId, = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcAclId")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, TimeTicks, Counter64, IpAddress, NotificationType, ObjectIdentity, Gauge32, ModuleIdentity, MibIdentifier, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "TimeTicks", "Counter64", "IpAddress", "NotificationType", "ObjectIdentity", "Gauge32", "ModuleIdentity", "MibIdentifier", "Counter32", "Unsigned32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoItpSp2MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 248))
ciscoItpSp2MIB.setRevisions(('2002-09-16 00:00', '2002-02-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoItpSp2MIB.setRevisionsDescriptions(('The ability to allow multiple instances of Signalling Points to run in the same device has introduce a new index structure. All objects in this MIB will be deprecated and replaced by objects in the CISCO-ITP-GSP2-MIB.my MIB.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoItpSp2MIB.setLastUpdated('200209160000Z')
if mibBuilder.loadTexts: ciscoItpSp2MIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoItpSp2MIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoItpSp2MIB.setDescription('The MIB for providing information specified in ITU Q752 Monitoring and Measurements for Signaling System No. 7(SS7) Network. This information can be used to manage messages transported over SS7 Network via Cisco IP Transfer Point. The Cisco IP Transfer Point (ITP) is a hardware and software solution that transports SS7 traffic using IP. Each ITP node provides function similar to SS7 signaling point. The relevant ITU documents describing this technology is the ITU Q series, including ITU Q.700: Introduction to CCITT Signaling System No. 7 and ITU Q.701 Functional description of the message transfer part (MTP) of Signaling System No. 7. The ITP Quality of Service (QoS) model allows the definition of 8 QoS classes, 0 through 7. QoS classes can be assigned only SCTP links. Only one QoS class can be assigned to an SCTP link. Class 0 will be designated as the default class. Packets that are not classified to a designated QoS class will get assigned to the default class. Each provisioned QoS class can be assigned an IP precedence value or a Differential Services Code Point (DSCP). The default class is initialized to IP precedence zero (0). The default class initial TOS setting can be changed through the command line interface. The Type of Service (TOS) byte in the IP header will be set to the IP precedence or DSCP that is assigned to class. Every packet forwarded over an SCTP link that was provisioned for a given QoS class will have the TOS byte set. ')
ciscoItpSp2MIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 0))
ciscoItpSp2MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 1))
cisEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1))
cisQos = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2))
class CisTcQosClass(TextualConvention, Unsigned32):
    description = 'The quality of service classification to be assigned to the IP packets used to transport the SS7 messages. Zero is a special value and is reserved to carry all traffic that does not specify a Qos or when exact match of the specified Qos is not available.'
    status = 'deprecated'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 7)

cisEventSummryLoggedEvents = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisEventSummryLoggedEvents.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventSummryLoggedEvents.setDescription('The number of SS7 events logged by this Signaling Point.')
cisEventSummryDroppedEvents = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisEventSummryDroppedEvents.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventSummryDroppedEvents.setDescription('The number of SS7 events that could not be logged due to unavailable resources.')
cisEventHistoryMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisEventHistoryMaxEntries.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryMaxEntries.setDescription('The upper limit on the number of events that the cisEventsTable can contain. A value of 0 will prevent any history from being retained. When this table is full, the oldest entry will be deleted and a new one will be created.')
cisEventHistoryTableEntAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisEventHistoryTableEntAllowed.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryTableEntAllowed.setDescription('This object specifies the maximum number of events allowed in the events history table for the managed system.')
cisEventHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 5), )
if mibBuilder.loadTexts: cisEventHistoryTable.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryTable.setDescription('A table of SS7 events generated by this device.')
cisEventHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-ITP-SP2-MIB", "cisEventHistoryIndex"))
if mibBuilder.loadTexts: cisEventHistoryTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryTableEntry.setDescription('An SS7 event that was previously generated by this device. Each entry is indexed by a event index. An entry is added to this table for each SS7 event generated on the managed system. The table contains the latest number of events defined by the cisEventHistoryMaxEntries object. Once the table is full, the oldest entry is removed and a new entry is created to accommodate the new event.')
cisEventHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cisEventHistoryIndex.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryIndex.setDescription('A monotonically increasing integer for the sole purpose of indexing events. When it reaches the maximum value the agent flushes the event table and wraps the value back to 1.')
cisEventHistoryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisEventHistoryDescr.setStatus('deprecated')
if mibBuilder.loadTexts: cisEventHistoryDescr.setDescription('A brief description of the SS7 event. Each event provides information of state transitions specific to the SS7 protocol.')
cisQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1), )
if mibBuilder.loadTexts: cisQosTable.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosTable.setDescription('A table of information related to the defining Quality of Service to transport SS7 packets using SCTP/IP. Entries are added to this table via cisQosRowStatus in accordance with the RowStatusconvention.')
cisQosTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-SP2-MIB", "cisQosClass"))
if mibBuilder.loadTexts: cisQosTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosTableEntry.setDescription('Each entry define information relate to a Quality of Service class as needed to transport SS7 packets using SCTP/IP.')
cisQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 1), CisTcQosClass())
if mibBuilder.loadTexts: cisQosClass.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosClass.setDescription('The quality of service class that can be defined to transport SS7 Packets using SCTP/IP.')
cisQosType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipPrecedence", 1), ("ipDscp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisQosType.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosType.setDescription('Enumerated list of QoS type that can be defined. A value ipPrecedence suggests that IP Type of Service (TOS) is based on cisQosPrecedenceValue. A value ipDscp suggests that IP Type of Service (TOS) is based on cisQosIpDscp.')
cisQosPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisQosPrecedenceValue.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosPrecedenceValue.setDescription('A value to assign to the IP TOS bits in the IP datagram that carries one or more SS7 packets. The IP Precedence value is specified if cisQosType is ipPrecedence, otherwise it is -1.')
cisQosIpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisQosIpDscp.setReference('Differentiated Services is described and defined in the RFCs: 2474, 2475, 2597, and 2598.')
if mibBuilder.loadTexts: cisQosIpDscp.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosIpDscp.setDescription('DiffServ CodePoint (DSCP) value to assign to the IP TOS bits in the IP datagram that carries one or more SS7 packets. DSCP provides scalable mechanisms to classify packets into groups or classes that have similar QoS requirements and then gives these groups the required treatment at every hop in the network. The DSCP value is specified if cisQosType is ipDscp, otherwise it is -1.')
cisQosAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 5), CItpTcAclId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisQosAclId.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosAclId.setDescription('ITP Access lists can be used to use information specific to SS7 packets to assign an Qos class. A value of zero indicates that no access control list is present.')
cisQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 248, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisQosRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: cisQosRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cisQosTable following the RowStatus textual convention.')
ciscoItpSp2MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 2))
ciscoItpSp2MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 2, 1))
ciscoItpSp2MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 248, 2, 2))
ciscoItpSp2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 248, 2, 1, 1)).setObjects(("CISCO-ITP-SP2-MIB", "ciscoItpSp2EventsGroup"), ("CISCO-ITP-SP2-MIB", "ciscoItpSp2QosGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpSp2MIBCompliance = ciscoItpSp2MIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoItpSp2MIBCompliance.setDescription('The compliance statement for entities which implement the Cisco Signaling Point2 MIB')
ciscoItpSp2EventsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 248, 2, 2, 1)).setObjects(("CISCO-ITP-SP2-MIB", "cisEventSummryLoggedEvents"), ("CISCO-ITP-SP2-MIB", "cisEventSummryDroppedEvents"), ("CISCO-ITP-SP2-MIB", "cisEventHistoryMaxEntries"), ("CISCO-ITP-SP2-MIB", "cisEventHistoryTableEntAllowed"), ("CISCO-ITP-SP2-MIB", "cisEventHistoryDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpSp2EventsGroup = ciscoItpSp2EventsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoItpSp2EventsGroup.setDescription('SS7 Event objects.')
ciscoItpSp2QosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 248, 2, 2, 2)).setObjects(("CISCO-ITP-SP2-MIB", "cisQosType"), ("CISCO-ITP-SP2-MIB", "cisQosPrecedenceValue"), ("CISCO-ITP-SP2-MIB", "cisQosIpDscp"), ("CISCO-ITP-SP2-MIB", "cisQosAclId"), ("CISCO-ITP-SP2-MIB", "cisQosRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpSp2QosGroup = ciscoItpSp2QosGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoItpSp2QosGroup.setDescription('SS7 Quality of Service objects.')
mibBuilder.exportSymbols("CISCO-ITP-SP2-MIB", cisQosTable=cisQosTable, PYSNMP_MODULE_ID=ciscoItpSp2MIB, cisEvents=cisEvents, cisEventHistoryDescr=cisEventHistoryDescr, cisEventHistoryMaxEntries=cisEventHistoryMaxEntries, ciscoItpSp2MIBCompliance=ciscoItpSp2MIBCompliance, ciscoItpSp2MIBCompliances=ciscoItpSp2MIBCompliances, cisEventHistoryIndex=cisEventHistoryIndex, ciscoItpSp2EventsGroup=ciscoItpSp2EventsGroup, cisEventHistoryTable=cisEventHistoryTable, ciscoItpSp2MIBObjects=ciscoItpSp2MIBObjects, cisEventSummryLoggedEvents=cisEventSummryLoggedEvents, cisEventSummryDroppedEvents=cisEventSummryDroppedEvents, cisEventHistoryTableEntAllowed=cisEventHistoryTableEntAllowed, cisQosType=cisQosType, cisQosClass=cisQosClass, CisTcQosClass=CisTcQosClass, ciscoItpSp2MIBNotifications=ciscoItpSp2MIBNotifications, cisQosAclId=cisQosAclId, cisQosIpDscp=cisQosIpDscp, cisQosTableEntry=cisQosTableEntry, ciscoItpSp2MIB=ciscoItpSp2MIB, cisQos=cisQos, ciscoItpSp2MIBConformance=ciscoItpSp2MIBConformance, cisQosRowStatus=cisQosRowStatus, ciscoItpSp2MIBGroups=ciscoItpSp2MIBGroups, ciscoItpSp2QosGroup=ciscoItpSp2QosGroup, cisEventHistoryTableEntry=cisEventHistoryTableEntry, cisQosPrecedenceValue=cisQosPrecedenceValue)
