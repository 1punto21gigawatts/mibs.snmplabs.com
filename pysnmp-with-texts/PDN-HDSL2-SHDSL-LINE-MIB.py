#
# PySNMP MIB module PDN-HDSL2-SHDSL-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-HDSL2-SHDSL-LINE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
Hdsl2ShdslPerfCurrDayCount, Hdsl2Shdsl1DayIntervalCount, hdsl2ShdslEndpointThreshSNRMargin, hdsl2ShdslSpanConfProfileName, Hdsl2ShdslPerfTimeElapsed, hdsl2ShdslEndpointThreshLOSWS, hdsl2ShdslEndpointThreshSES, hdsl2ShdslEndpointSide, hdsl2ShdslEndpointThreshCRCanomalies, hdsl2ShdslEndpointThreshLoopAttenuation, hdsl2ShdslInvIndex, hdsl2ShdslEndpointThreshES, hdsl2ShdslEndpointThreshUAS = mibBuilder.importSymbols("HDSL2-SHDSL-LINE-MIB", "Hdsl2ShdslPerfCurrDayCount", "Hdsl2Shdsl1DayIntervalCount", "hdsl2ShdslEndpointThreshSNRMargin", "hdsl2ShdslSpanConfProfileName", "Hdsl2ShdslPerfTimeElapsed", "hdsl2ShdslEndpointThreshLOSWS", "hdsl2ShdslEndpointThreshSES", "hdsl2ShdslEndpointSide", "hdsl2ShdslEndpointThreshCRCanomalies", "hdsl2ShdslEndpointThreshLoopAttenuation", "hdsl2ShdslInvIndex", "hdsl2ShdslEndpointThreshES", "hdsl2ShdslEndpointThreshUAS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, Bits, iso, Counter32, ObjectIdentity, Integer32, TimeTicks, Counter64, IpAddress, ModuleIdentity, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "Bits", "iso", "Counter32", "ObjectIdentity", "Integer32", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pdnHdsl2ShdslLineMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23))
pdnHdsl2ShdslLineMIB.setRevisions(('2005-01-28 00:00', '2004-04-27 00:00', '2004-04-21 00:00', '2004-01-16 15:00', '2003-11-06 15:00', '2003-10-23 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIB.setRevisionsDescriptions(('Added pdnHdsl2ShdslExtendedRateMode object since the hardware implementation may require a different configuration to support higher rates such as the 5696 kbits per second rate specified in 992.1, Annex F.', 'Make the index to pdnHdsl2ShdslSpanConfProfileExtTable IMPLIED to match with the RFC.', 'Changed the pdnHdsl2ShdslSpanStatusExtTable and the pdnHdsl2ShdslSpanConfProfileExtTable from augments to be indexed. Some SNMP agents do a read-modify-write on a table row. As a result, the instrumentation code may not be able to determine which object the manager actually wants to set. For example, consider the case where a manager wants to set the wire interface to 8-wire operation. The instrumentation code, in the case of a read-modify-write cycle, could result in receiving a row where the hdsl2ShdslSpanConfWireInterface is set to twoWire(1) and pdnHdsl2ShdslSpanConfWireInterface is set to eightWire(4). This could result in unpredictable results. This change will prevent the objects in the ExtTables from existing in the same row as the objects in the standard tables and prevent the unpredictable case from occurring.', 'Removed description text that implies that this MIB only applies to G.shdsl.bis. Add a table to allow the device to be configured in CPE mode or CO mode.', 'Clean up, typo corrections, and clarifications.', 'Initial release.',))
if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIB.setLastUpdated('200501280000Z')
if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editor Clay Sikes')
if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIB.setDescription("The primary purpose of this MIB is to allow support of G.shdsl.bis based on the ITU Temporary Document, DC-R15, April 2003, until such a time as the `standard' MIB, HDSL2-SHDSL-LINE-MIB, RFC 3276, May 2002 is updated to support G.shdsl.bis. In addition to providing support for G.shdsl.bis, this MIB may support SHDSL objects that are unique to the enterprise. Decisions as far as how this MIB is supported with respect to the `standard' MIB will be made in an individual basis by those involved with specific projects; those decisions are not dictated here. The following documents should be referenced with respect to this MIB: [G.991.2] ITU-T G991.2 `Single-pair high-speed digital subscriber line (SHDSL) transceivers,' December 2003. [DC-R15] ITU Study Group 15 Temporary Document `G.shdsl.bis: Draft Text`, April 2003. [RFC 3276] Ray, B., Abbi, R. `HDSL2-SHDSL-LINE-MIB', May 2002. ===================================================================== == == == Copyright (C) 2004 Paradyne Corporation. == == == =====================================================================")
pdnHdsl2ShdslLineNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0))
pdnHdsl2ShdslLineObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1))
pdnHdsl2ShdslLineAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 2))
pdnHdsl2ShdslLineConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3))
class PdnHdsl2ShdslWirePair(TextualConvention, Integer32):
    description = 'This is the referenced pair of wires in a DSL Segment. HDSL2 only supports a single pair (wirePair1), while SHDSL supports an optional second pair (wirePair2), third pair (wirePair3), and a forth pair (wirePair4).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("wirePair1", 1), ("wirePair2", 2), ("wirePair3", 3), ("wirePair4", 4))

pdnHdsl2ShdslSpanStatusExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 1), )
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanStatusExtTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanStatusExtTable.setDescription("This table extends the hdsl2ShdslSpanStatusTable defined in the HDSL2-SHDSL-LINE-MIB (the `standard' MIB) which provides overall information of DSL spans.")
pdnHdsl2ShdslSpanStatusExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanStatusExtEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanStatusExtEntry.setDescription('An entry extends the hdsl2ShdslSpanStatusEntry defined in [RFC 3276]. Each entry corresponds to a DSL line.')
pdnHdsl2ShdslStatusMaxAttainableLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 1, 1, 1), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusMaxAttainableLineRate.setReference('RFC 3276, hdsl2ShdslStatusMaxAttainableLineRate.')
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusMaxAttainableLineRate.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusMaxAttainableLineRate.setDescription('Contains the maximum attainable line rate, in bps, in this DSL span.')
pdnHdsl2ShdslStatusActualLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 1, 1, 2), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusActualLineRate.setReference('RFC 3276, hdsl2ShdslStatusActualLineRate.')
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusActualLineRate.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslStatusActualLineRate.setDescription('Contains the actual line rate, in bps, in this DSL span. This is based upon measurements made during line probing.')
pdnHdsl2ShdslEndpointConfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 2), )
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfTable.setReference('RFC 3276, hdsl2ShdslEndpointConfTable.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfTable.setDescription('This table supports configuration parameters for segment endpoints in a HDSL2/SHDSL line. As this table is indexed by ifIndex, it MUST be maintained in a persistent manner.')
pdnHdsl2ShdslEndpointConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointWirePair"))
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfEntry.setDescription('Each entry represents a single segment endpoint in a HDSL2/SHDSL line. It is indexed by the ifIndex of the HDSL2/SHDSL line, the UnitId of the associated unit, the side of the unit, and the wire-pair of the associated modem.')
pdnHdsl2ShdslEndpointWirePair = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 2, 1, 1), PdnHdsl2ShdslWirePair())
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointWirePair.setReference('RFC 3276, hdsl2ShdslEndpointWirePair.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointWirePair.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointWirePair.setDescription('The wire-pair of the modem associated with this segment endpoint as per the PdnHdsl2ShdslWirePair textual convention.')
pdnHdsl2ShdslEndpointAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointAlarmConfProfile.setReference('RFC 3276, hdsl2ShdslEndpointAlarmConfProfile.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointAlarmConfProfile.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointAlarmConfProfile.setDescription('This object configures the alarm threshold values to be used for this segment endpoint. The values are obtained from the alarm configuration profile referenced by this object. The value of this object is the index of the referenced profile in the hdsl2ShdslEndpointAlarmConfProfileTable, or NULL (a zero- length SnmpAdminString). If the value is a zero-length SnmpAdminString, the endpoint uses the default Alarm Configuration Profile for the associated span as per the hdsl2ShdslSpanConfAlarmProfile object in the hdsl2ShdslSpanConfTable. The default value of this object is a zero-length SnmpAdminString. Any attempt to set this object to a value that is not the value of the index for an active entry in the profile table, hdsl2ShdslEndpointAlarmConfProfileTable, MUST be rejected.')
pdnHdsl2ShdslEndpointCurrTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3), )
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrTable.setReference('RFC 3276, hdsl2ShdslEndpointCurrTable.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrTable.setDescription('This table contains current status and performance information for segment endpoints in HDSL2/SHDSL Lines. As with other tables in this MIB indexed by ifIndex, entries in this table MUST be maintained in a persistent manner.')
pdnHdsl2ShdslEndpointCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointWirePair"))
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrEntry.setDescription('Each entry contains status and performance information relating to a single segment endpoint. It is indexed by the ifIndex of the HDSL2/SHDSL line, the UnitId of the associated unit, the side of the unit, and the wire-pair of the associated modem.')
pdnHdsl2ShdslEndpointCurrAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrAtn.setReference('RFC 3276, hdsl2ShdslEndpointCurrAtn.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrAtn.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrAtn.setDescription('The current loop attenuation for this endpoint as reported in a Network or Customer Side Performance Status message.')
pdnHdsl2ShdslEndpointCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrSnrMgn.setReference('RFC 3276, hdsl2ShdslEndpointCurrSnrMgn.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrSnrMgn.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrSnrMgn.setDescription('The current SNR margin for this endpoint as reported in a Status Response/SNR message.')
pdnHdsl2ShdslEndpointCurrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("noDefect", 0), ("powerBackoff", 1), ("deviceFault", 2), ("dcContinuityFault", 3), ("snrMarginAlarm", 4), ("loopAttenuationAlarm", 5), ("loswFailureAlarm", 6), ("configInitFailure", 7), ("protocolInitFailure", 8), ("noNeighborPresent", 9), ("loopbackActive", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrStatus.setReference('RFC 3276, hdsl2ShdslEndpointCurrStatus.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrStatus.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrStatus.setDescription('Contains the current state of the endpoint. This is a bitmap of possible conditions. The various bit positions are: noDefect There no defects on the line. powerBackoff Indicates enhanced Power Backoff. deviceFault Indicates a vendor-dependent diagnostic or self-test fault has been detected. dcContinuityFault Indicates vendor-dependent conditions that interfere with span powering such as short and open circuits. snrMarginAlarm Indicates that the SNR margin has dropped below the alarm threshold. loopAttenuationAlarm Indicates that the loop attenuation exceeds the alarm threshold. loswFailureAlarm Indicates a forward LOSW alarm. configInitFailure Endpoint failure during initialization due to paired endpoint not able to support requested configuration. protocolInitFailure Endpoint failure during initialization due to incompatible protocol used by the paired endpoint. noNeighborPresent Endpoint failure during initialization due to no activation sequence detected from paired endpoint. loopbackActive A loopback is currently active at this Segment Endpoint. This is intended to supplement ifOperStatus. Note that there is a 1-1 relationship between the status bits defined in this object and the notification thresholds defined elsewhere in this MIB.')
pdnHdsl2ShdslEndpointES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointES.setReference('RFC 3276, hdsl2ShdslEndpointES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointES.setDescription('Count of Errored Seconds (ES) on this endpoint since the xU was last restarted.')
pdnHdsl2ShdslEndpointSES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointSES.setReference('RFC 3276, hdsl2ShdslEndpointSES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointSES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointSES.setDescription('Count of Severely Errored Seconds (SES) on this endpoint since the xU was last restarted.')
pdnHdsl2ShdslEndpointCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 6), Counter32()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCRCanomalies.setReference('RFC 3276, hdsl2ShdslEndpointCRCanomalies.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCRCanomalies.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCRCanomalies.setDescription('Count of CRC anomalies on this endpoint since the xU was last restarted.')
pdnHdsl2ShdslEndpointLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointLOSWS.setReference('RFC 3276, hdsl2ShdslEndpointLOSWS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointLOSWS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointLOSWS.setDescription('Count of Loss of Sync Word (LOSW) Seconds on this endpoint since the xU was last restarted.')
pdnHdsl2ShdslEndpointUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointUAS.setReference('RFC 3276, hdsl2ShdslEndpointUAS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointUAS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointUAS.setDescription('Count of Unavailable Seconds (UAS) on this endpoint since the xU was last restarted.')
pdnHdsl2ShdslEndpointCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 9), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinTimeElapsed.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinTimeElapsed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinTimeElapsed.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinTimeElapsed.setDescription('Total elapsed seconds in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr15MinES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 10), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinES.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinES.setDescription('Count of Errored Seconds (ES) in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr15MinSES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 11), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinSES.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinSES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinSES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinSES.setDescription('Count of Severely Errored Seconds (SES) in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr15MinCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 12), PerfCurrentCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinCRCanomalies.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinCRCanomalies.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinCRCanomalies.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinCRCanomalies.setDescription('Count of CRC anomalies in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr15MinLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 13), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinLOSWS.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinLOSWS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinLOSWS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinLOSWS.setDescription('Count of Loss of Sync Word (LOSW) Seconds in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr15MinUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 14), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinUAS.setReference('RFC 3276, hdsl2ShdslEndpointCurr15MinUAS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinUAS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr15MinUAS.setDescription('Count of Unavailable Seconds (UAS) in the current 15-minute interval.')
pdnHdsl2ShdslEndpointCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 15), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DayTimeElapsed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.setDescription('Number of seconds that have elapsed since the beginning of the current 1-day interval.')
pdnHdsl2ShdslEndpointCurr1DayES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 16), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayES.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DayES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayES.setDescription('Count of Errored Seconds (ES) during the current day as measured by pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.')
pdnHdsl2ShdslEndpointCurr1DaySES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 17), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DaySES.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DaySES.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DaySES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DaySES.setDescription('Count of Severely Errored Seconds (SES) during the current day as measured by pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.')
pdnHdsl2ShdslEndpointCurr1DayCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 18), Hdsl2ShdslPerfCurrDayCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayCRCanomalies.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DayCRCanomalies.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayCRCanomalies.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayCRCanomalies.setDescription('Count of CRC anomalies during the current day as measured by pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.')
pdnHdsl2ShdslEndpointCurr1DayLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 19), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayLOSWS.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DayLOSWS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayLOSWS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayLOSWS.setDescription('Count of Loss of Sync Word (LOSW) Seconds during the current day as measured by pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.')
pdnHdsl2ShdslEndpointCurr1DayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 3, 1, 20), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayUAS.setReference('RFC 3276, hdsl2ShdslEndpointCurr1DayUAS.')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayUAS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurr1DayUAS.setDescription('Count of Unavailable Seconds (UAS) during the current day as measured by pdnHdsl2ShdslEndpointCurr1DayTimeElapsed.')
pdnHdsl2Shdsl15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4), )
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalTable.setReference('RFC 3276, hdsl2Shdsl15MinIntervalTable.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalTable.setDescription('This table provides one row for each HDSL2/SHDSL endpoint performance data collection interval. This table contains live data from equipment. As such, it is NOT persistent.')
pdnHdsl2Shdsl15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointWirePair"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalNumber"))
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalEntry.setDescription('An entry in the pdnHdsl2Shdsl15MinIntervalTable.')
pdnHdsl2Shdsl15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalNumber.setReference('RFC 3276, hdsl2Shdsl15MinIntervalNumber.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalNumber.setDescription('Performance Data Interval number. 1 is the the most recent previous interval; interval 96 is 24 hours ago. Intervals 2..96 are optional.')
pdnHdsl2Shdsl15MinIntervalES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 2), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalES.setReference('RFC 3276, hdsl2Shdsl15MinIntervalES.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalES.setDescription('Count of Errored Seconds (ES) during the interval.')
pdnHdsl2Shdsl15MinIntervalSES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 3), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalSES.setReference('RFC 3276, hdsl2Shdsl15MinIntervalSES.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalSES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalSES.setDescription('Count of Severely Errored Seconds (SES) during the interval.')
pdnHdsl2Shdsl15MinIntervalCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 4), PerfIntervalCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalCRCanomalies.setReference('RFC 3276, hdsl2Shdsl15MinIntervalCRCanomalies.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalCRCanomalies.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalCRCanomalies.setDescription('Count of CRC anomalies during the interval.')
pdnHdsl2Shdsl15MinIntervalLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 5), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalLOSWS.setReference('RFC 3276, hdsl2Shdsl15MinIntervalLOSWS.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalLOSWS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalLOSWS.setDescription('Count of Loss of Sync Word (LOSW) Seconds during the interval.')
pdnHdsl2Shdsl15MinIntervalUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 4, 1, 6), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalUAS.setReference('RFC 3276, hdsl2Shdsl15MinIntervalUAS.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalUAS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalUAS.setDescription('Count of Unavailable Seconds (UAS) during the interval.')
pdnHdsl2Shdsl1DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5), )
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalTable.setReference('RFC 3276, hdsl2Shdsl1DayIntervalTable.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalTable.setDescription('This table provides one row for each HDSL2/SHDSL endpoint performance data collection interval. This table contains live data from equipment. As such, it is NOT persistent.')
pdnHdsl2Shdsl1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointWirePair"), (0, "PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalNumber"))
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalEntry.setDescription('An entry in the pdnHdsl2Shdsl1DayIntervalTable.')
pdnHdsl2Shdsl1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalNumber.setReference('RFC 3276, hdsl2Shdsl1DayIntervalNumber.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalNumber.setDescription('History Data Interval number. Interval 1 is the the most recent previous day; interval 30 is 30 days ago. Intervals 2..30 are optional.')
pdnHdsl2Shdsl1DayIntervalMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 2), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalMoniSecs.setReference('RFC 3276, hdsl2Shdsl1DayIntervalMoniSecs.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalMoniSecs.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalMoniSecs.setDescription('The amount of time in the 1-day interval over which the performance monitoring information is actually counted. This value will be the same as the interval duration except in a situation where performance monitoring data could not be collected for any reason.')
pdnHdsl2Shdsl1DayIntervalES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 3), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalES.setReference('RFC 3276, hdsl2Shdsl1DayIntervalES.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalES.setDescription('Count of Errored Seconds (ES) during the 1-day interval as measured by pdnHdsl2Shdsl1DayIntervalMoniSecs.')
pdnHdsl2Shdsl1DayIntervalSES = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 4), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalSES.setReference('RFC 3276, hdsl2Shdsl1DayIntervalSES.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalSES.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalSES.setDescription('Count of Severely Errored Seconds (SES) during the 1-day interval as measured by pdnHdsl2Shdsl1DayIntervalMoniSecs.')
pdnHdsl2Shdsl1DayIntervalCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 5), Hdsl2Shdsl1DayIntervalCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalCRCanomalies.setReference('RFC 3276, hdsl2Shdsl1DayIntervalCRCanomalies.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalCRCanomalies.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalCRCanomalies.setDescription('Count of CRC anomalies during the 1-day interval as measured by pdnHdsl2Shdsl1DayIntervalMoniSecs.')
pdnHdsl2Shdsl1DayIntervalLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 6), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalLOSWS.setReference('RFC 3276, hdsl2Shdsl1DayIntervalLOSWS.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalLOSWS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalLOSWS.setDescription('Count of Loss of Sync Word (LOSW) Seconds during the 1-day interval as measured by pdnHdsl2Shdsl1DayIntervalMoniSecs.')
pdnHdsl2Shdsl1DayIntervalUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 5, 1, 7), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalUAS.setReference('RFC 3276, hdsl2Shdsl1DayIntervalUAS.')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalUAS.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalUAS.setDescription('Count of Unavailable Seconds (UAS) during the 1-day interval as measured by pdnHdsl2Shdsl1DayIntervalMoniSecs.')
pdnHdsl2ShdslSpanConfProfileExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 6), )
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfProfileExtTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfProfileExtTable.setDescription("This table extends the hdsl2ShdslSpanConfProfileTable defined in the HDSL2-SHDSL-LINE-MIB (the `standard' MIB) which supports definitions of span configuration profiles for DSL lines. IMPORTANT NOTE: This table is a 'pseudo-augments' of the hdsl2ShdslSpanConfProfileTable. Refer to the April 21, 2004 revision description for a discussion on why the table is indexed as opposed to augments. This table shares the same table table index as the hdsl2ShdslSpanConfProfileTable. However, this table does not have a row status object. Therefore, rows are created or deleted in this table by creating or deleting rows in the hdsl2ShdslSpanConfProfileTable.")
pdnHdsl2ShdslSpanConfProfileExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 6, 1), ).setIndexNames((1, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfileName"))
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfProfileExtEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfProfileExtEntry.setDescription('An entry extends the hdsl2ShdslSpanConfProfileEntry defined in [RFC 3276]. Each entry corresponds to a profile for a span.')
pdnHdsl2ShdslSpanConfWireInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("twoWire", 1), ("fourWire", 2), ("sixWire", 3), ("eightWire", 4))).clone('twoWire')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfWireInterface.setReference('RFC 3276, hdsl2ShdslSpanConfWireInterface.')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfWireInterface.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfWireInterface.setDescription('This object configures number of wires that are operational for this span. The following values are defined for this object: twoWire(1) - 2-wire mode fourWire(2) - 4-wire mode sixWire(3) - 6-wire mode eightWire(4) - 8-wire mode')
pdnHdsl2ShdslSpanConfMinLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 6, 1, 2), Unsigned32().clone(155200)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMinLineRate.setReference('RFC 3276, hdsl2ShdslSpanConfMinLineRate.')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMinLineRate.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMinLineRate.setDescription("This object configures the minimum transmission rate, in multiples of 64 kbits per second, for the associated DSL Line in bits-per-second (bps). If the minimum line rate equals the maximum line rate (pdnHdsl2ShdslSpanConfMaxLineRate), the line rate is considered `fixed'. If the minimum line rate is less than the maximum line rate, the line is considered `rate-adaptive'.")
pdnHdsl2ShdslSpanConfMaxLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 6, 1, 3), Unsigned32().clone(155200)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMaxLineRate.setReference('RFC 3276, hdsl2ShdslSpanConfMaxLineRate.')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMaxLineRate.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfMaxLineRate.setDescription("This object configures the maximum transmission rate, in multiples of 64 kbits per second, for the associated DSL Line in bits-per-second (bps). If the minimum line rate (pdnHdsl2Shdsl- SpanConfMinLineRate) equals the maximum line rate, the line rate is considered `fixed'. if the minimum line rate is less than the maximum line rate, the line rate is considered `rate-adaptive'.")
pdnHdsl2ShdslIfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 7), )
if mibBuilder.loadTexts: pdnHdsl2ShdslIfTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslIfTable.setDescription('This table provides objects related to a particular interface and each entry corresponds to an ifIndex.')
pdnHdsl2ShdslIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnHdsl2ShdslIfEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslIfEntry.setDescription('An entry in the pdnHdsl2ShdslIfTableTable.')
pdnHdsl2ShdslIfTableEquipMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("coMode", 1), ("cpeMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnHdsl2ShdslIfTableEquipMode.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslIfTableEquipMode.setDescription('This object allows the mode of the equipment to be set.')
pdnHdsl2ShdslExtendedRateMode = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("payload5696", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnHdsl2ShdslExtendedRateMode.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslExtendedRateMode.setDescription('This object is used to select a mode of operation that supports extended rates. Some hardware implementations require different configurations base on whether or not higher speed rates are desired. For example, an implementation may require different code be loaded in a digital signal processor or an implementation may dictate that fewer subscriber ports are supported for a higher data rate. The payload5696(2) corresponds to the 5696 kbits per second rate specified in G.991.2, Annex F.')
pdnHdsl2ShdslLoopAttenCrossing = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 1)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrAtn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLoopAttenuation"))
if mibBuilder.loadTexts: pdnHdsl2ShdslLoopAttenCrossing.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslLoopAttenCrossing.setDescription('This notification indicates that the loop attenuation threshold (as per the hdsl2ShdslEndpointThreshLoopAttenuation value) has been reached/exceeded for the DSL segment endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslLoopAttenCrossing.setReference('RFC 3276 hdsl2ShdslLoopAttenCrossing.')
pdnHdsl2ShdslSNRMarginCrossing = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 2)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrSnrMgn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSNRMargin"))
if mibBuilder.loadTexts: pdnHdsl2ShdslSNRMarginCrossing.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSNRMarginCrossing.setDescription('This notification indicates that the SNR margin threshold (as per the hdsl2ShdslEndpointThreshSNRMargin value) has been reached/exceeded for the DSL segment endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslSNRMarginCrossing.setReference('RFC 3276 hdsl2ShdslSNRMarginCrossing.')
pdnHdsl2ShdslPerfESThresh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 3)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshES"))
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfESThresh.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfESThresh.setDescription('This notification indicates that the errored seconds threshold (as per the hdsl2ShdslEndpointThreshES value) has been reached/ exceeded for the DSL segment endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfESThresh.setReference('RFC 3276 hdsl2ShdslPerfESThresh.')
pdnHdsl2ShdslPerfSESThresh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 4)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSES"))
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfSESThresh.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfSESThresh.setDescription('This notification indicates that the severely errored seconds threshold (as per the hdsl2ShdslEndpointThreshSES value) has been reached/exceeded for the DSL Segment Endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfSESThresh.setReference('RFC 3276 hdsl2ShdslPerfSESThresh.')
pdnHdsl2ShdslPerfCRCanomaliesThresh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 5)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshCRCanomalies"))
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfCRCanomaliesThresh.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfCRCanomaliesThresh.setDescription('This notification indicates that the CRC anomalies threshold (as per the hdsl2ShdslEndpointThreshCRCanomalies value) has been reached/exceeded for the DSL Segment Endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfCRCanomaliesThresh.setReference('RFC 3276 hdsl2ShdslPerfCRCanomaliesThresh.')
pdnHdsl2ShdslPerfLOSWSThresh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 6)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLOSWS"))
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfLOSWSThresh.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfLOSWSThresh.setDescription('This notification indicates that the LOSW seconds threshold (as per the hdsl2ShdslEndpointThreshLOSWS value) has been reached/exceeded for the DSL segment endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfLOSWSThresh.setReference('RFC 3276 hdsl2ShdslPerfLOSWSThresh.')
pdnHdsl2ShdslPerfUASThresh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 7)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinUAS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshUAS"))
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfUASThresh.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfUASThresh.setDescription('This notification indicates that the unavailable seconds threshold (as per the hdsl2ShdslEndpointThreshUAS value) has been reached/exceeded for the HDSL2/SHDSL segment endpoint.')
if mibBuilder.loadTexts: pdnHdsl2ShdslPerfUASThresh.setReference('RFC 3276 hdsl2ShdslPerfUASThresh.')
pdnHdsl2ShdslpowerBackoff = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 8)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdslpowerBackoff.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslpowerBackoff.setDescription('This notification indicates that the bit setting for powerBackoff in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslpowerBackoff.setReference('RFC 3276 hdsl2ShdslpowerBackoff.')
pdnHdsl2ShdsldeviceFault = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 9)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdsldeviceFault.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdsldeviceFault.setDescription('This notification indicates that the bit setting for deviceFault in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdsldeviceFault.setReference('RFC 3276 hdsl2ShdsldeviceFault.')
pdnHdsl2ShdsldcContinuityFault = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 10)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdsldcContinuityFault.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdsldcContinuityFault.setDescription('This notification indicates that the bit setting for dcContinuityFault in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdsldcContinuityFault.setReference('RFC 3276 hdsl2ShdsldcContinuityFault.')
pdnHdsl2ShdslconfigInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 11)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdslconfigInitFailure.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslconfigInitFailure.setDescription('This notification indicates that the bit setting for configInitFailure in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslconfigInitFailure.setReference('RFC 3276 hdsl2ShdslconfigInitFailure.')
pdnHdsl2ShdslprotocolInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 12)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdslprotocolInitFailure.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslprotocolInitFailure.setDescription('This notification indicates that the bit setting for protocolInitFailure in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslprotocolInitFailure.setReference('RFC 3276 hdsl2ShdslprotocolInitFailure.')
pdnHdsl2ShdslnoNeighborPresent = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 0, 13)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: pdnHdsl2ShdslnoNeighborPresent.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslnoNeighborPresent.setDescription('This notification indicates that the bit setting for noNeighborPresent in the pdnHdsl2ShdslEndpointCurrStatus object for this endpoint has changed.')
if mibBuilder.loadTexts: pdnHdsl2ShdslnoNeighborPresent.setReference('RFC 3276 hdsl2ShdslnoNeighborPresent.')
pdnHdsl2ShdslLineCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 1))
pdnHdsl2ShdslLineGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2))
pdnHdsl2ShdslLineMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 1, 1)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSpanShdslStatusGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointConfGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSpanConfProfileGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslIfTableGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslExtendedRateModeGroup"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslLineMIBCompliance = pdnHdsl2ShdslLineMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslLineMIBCompliance.setDescription('The compliance statement for pdnHdsl2ShdslLineMIB entities which implement the pdnHdsl2ShdslLineMIB.')
pdnHdsl2ShdslLineObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1))
pdnHdsl2ShdslLineAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 2))
pdnHdsl2ShdslLineNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 3))
pdnHdsl2ShdslSpanShdslStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 1)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslStatusMaxAttainableLineRate"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslStatusActualLineRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslSpanShdslStatusGroup = pdnHdsl2ShdslSpanShdslStatusGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanShdslStatusGroup.setDescription('This group supports objects for retrieving SHDSL-specific span related status.')
pdnHdsl2ShdslEndpointConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 2)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointAlarmConfProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslEndpointConfGroup = pdnHdsl2ShdslEndpointConfGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointConfGroup.setDescription('This group supports objects for configuring parameters for segment endpoints in SHDSL lines.')
pdnHdsl2ShdslEndpointCurrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 3)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrAtn"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrSnrMgn"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurrStatus"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointSES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCRCanomalies"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointLOSWS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointUAS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinTimeElapsed"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinSES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinCRCanomalies"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinLOSWS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr15MinUAS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DayTimeElapsed"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DayES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DaySES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DayCRCanomalies"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DayLOSWS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslEndpointCurr1DayUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslEndpointCurrGroup = pdnHdsl2ShdslEndpointCurrGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslEndpointCurrGroup.setDescription('This group supports objects which provide current status and performance measurements relating to segment endpoints in DSL lines.')
pdnHdsl2Shdsl15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 4)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalSES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalCRCanomalies"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalLOSWS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl15MinIntervalUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2Shdsl15MinIntervalGroup = pdnHdsl2Shdsl15MinIntervalGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl15MinIntervalGroup.setDescription('This group supports objects which maintain historic performance measurements relating to segment endpoints in DSL lines.')
pdnHdsl2Shdsl1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 5)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalMoniSecs"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalSES"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalCRCanomalies"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalLOSWS"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2Shdsl1DayIntervalUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2Shdsl1DayIntervalGroup = pdnHdsl2Shdsl1DayIntervalGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2Shdsl1DayIntervalGroup.setDescription('This group supports objects which maintain historic performance measurements relating to segment endpoints in DSL line in 1-day intervals.')
pdnHdsl2ShdslSpanConfProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 6)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSpanConfWireInterface"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSpanConfMinLineRate"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSpanConfMaxLineRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslSpanConfProfileGroup = pdnHdsl2ShdslSpanConfProfileGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslSpanConfProfileGroup.setDescription('This group supports objects that constitute configuration profiles for configuring span related parameters in DSL lines.')
pdnHdsl2ShdslIfTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 7)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslIfTableEquipMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslIfTableGroup = pdnHdsl2ShdslIfTableGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslIfTableGroup.setDescription('This group supports objects on a per-interface basis.')
pdnHdsl2ShdslExtendedRateModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 1, 8)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslExtendedRateMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslExtendedRateModeGroup = pdnHdsl2ShdslExtendedRateModeGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslExtendedRateModeGroup.setDescription('This group supports objects to select the extended base data rate mode.')
pdnHdsl2ShdslNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 23, 3, 2, 3, 1)).setObjects(("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslLoopAttenCrossing"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslSNRMarginCrossing"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslPerfESThresh"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslPerfSESThresh"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslPerfCRCanomaliesThresh"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslPerfLOSWSThresh"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslPerfUASThresh"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslpowerBackoff"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdsldeviceFault"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdsldcContinuityFault"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslconfigInitFailure"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslprotocolInitFailure"), ("PDN-HDSL2-SHDSL-LINE-MIB", "pdnHdsl2ShdslnoNeighborPresent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdsl2ShdslNotificationGroup = pdnHdsl2ShdslNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdsl2ShdslNotificationGroup.setDescription('This group supports notifications of significant conditions associated with DSL lines.')
mibBuilder.exportSymbols("PDN-HDSL2-SHDSL-LINE-MIB", pdnHdsl2ShdslEndpointCurrAtn=pdnHdsl2ShdslEndpointCurrAtn, pdnHdsl2ShdslEndpointUAS=pdnHdsl2ShdslEndpointUAS, pdnHdsl2Shdsl15MinIntervalNumber=pdnHdsl2Shdsl15MinIntervalNumber, pdnHdsl2ShdslStatusMaxAttainableLineRate=pdnHdsl2ShdslStatusMaxAttainableLineRate, pdnHdsl2ShdslExtendedRateMode=pdnHdsl2ShdslExtendedRateMode, pdnHdsl2ShdslEndpointCurr1DayES=pdnHdsl2ShdslEndpointCurr1DayES, pdnHdsl2ShdslPerfSESThresh=pdnHdsl2ShdslPerfSESThresh, pdnHdsl2ShdsldeviceFault=pdnHdsl2ShdsldeviceFault, pdnHdsl2Shdsl1DayIntervalTable=pdnHdsl2Shdsl1DayIntervalTable, pdnHdsl2ShdslSpanConfMaxLineRate=pdnHdsl2ShdslSpanConfMaxLineRate, pdnHdsl2ShdslEndpointConfTable=pdnHdsl2ShdslEndpointConfTable, pdnHdsl2ShdslLineAFNs=pdnHdsl2ShdslLineAFNs, pdnHdsl2ShdslSpanConfProfileGroup=pdnHdsl2ShdslSpanConfProfileGroup, pdnHdsl2ShdslLineMIB=pdnHdsl2ShdslLineMIB, pdnHdsl2ShdsldcContinuityFault=pdnHdsl2ShdsldcContinuityFault, pdnHdsl2Shdsl1DayIntervalEntry=pdnHdsl2Shdsl1DayIntervalEntry, pdnHdsl2ShdslEndpointWirePair=pdnHdsl2ShdslEndpointWirePair, pdnHdsl2ShdslEndpointCurr15MinLOSWS=pdnHdsl2ShdslEndpointCurr15MinLOSWS, pdnHdsl2ShdslEndpointCurr15MinTimeElapsed=pdnHdsl2ShdslEndpointCurr15MinTimeElapsed, pdnHdsl2ShdslpowerBackoff=pdnHdsl2ShdslpowerBackoff, pdnHdsl2ShdslPerfESThresh=pdnHdsl2ShdslPerfESThresh, pdnHdsl2ShdslSpanConfWireInterface=pdnHdsl2ShdslSpanConfWireInterface, pdnHdsl2ShdslEndpointCurrTable=pdnHdsl2ShdslEndpointCurrTable, pdnHdsl2ShdslPerfLOSWSThresh=pdnHdsl2ShdslPerfLOSWSThresh, pdnHdsl2ShdslEndpointCurr1DayUAS=pdnHdsl2ShdslEndpointCurr1DayUAS, pdnHdsl2ShdslEndpointCurrSnrMgn=pdnHdsl2ShdslEndpointCurrSnrMgn, pdnHdsl2Shdsl15MinIntervalES=pdnHdsl2Shdsl15MinIntervalES, pdnHdsl2Shdsl1DayIntervalGroup=pdnHdsl2Shdsl1DayIntervalGroup, pdnHdsl2ShdslEndpointCurrGroup=pdnHdsl2ShdslEndpointCurrGroup, PdnHdsl2ShdslWirePair=PdnHdsl2ShdslWirePair, pdnHdsl2ShdslLineConformance=pdnHdsl2ShdslLineConformance, pdnHdsl2ShdslNotificationGroup=pdnHdsl2ShdslNotificationGroup, pdnHdsl2ShdslEndpointCurrStatus=pdnHdsl2ShdslEndpointCurrStatus, pdnHdsl2ShdslLineAfnGroups=pdnHdsl2ShdslLineAfnGroups, pdnHdsl2Shdsl15MinIntervalEntry=pdnHdsl2Shdsl15MinIntervalEntry, pdnHdsl2ShdslLineObjects=pdnHdsl2ShdslLineObjects, pdnHdsl2ShdslLineNotifications=pdnHdsl2ShdslLineNotifications, pdnHdsl2ShdslIfTableEquipMode=pdnHdsl2ShdslIfTableEquipMode, pdnHdsl2Shdsl1DayIntervalMoniSecs=pdnHdsl2Shdsl1DayIntervalMoniSecs, pdnHdsl2ShdslLineGroups=pdnHdsl2ShdslLineGroups, pdnHdsl2ShdslEndpointCRCanomalies=pdnHdsl2ShdslEndpointCRCanomalies, pdnHdsl2ShdslLineMIBCompliance=pdnHdsl2ShdslLineMIBCompliance, pdnHdsl2ShdslEndpointSES=pdnHdsl2ShdslEndpointSES, pdnHdsl2ShdslPerfCRCanomaliesThresh=pdnHdsl2ShdslPerfCRCanomaliesThresh, pdnHdsl2ShdslEndpointCurrEntry=pdnHdsl2ShdslEndpointCurrEntry, pdnHdsl2Shdsl15MinIntervalCRCanomalies=pdnHdsl2Shdsl15MinIntervalCRCanomalies, pdnHdsl2ShdslconfigInitFailure=pdnHdsl2ShdslconfigInitFailure, pdnHdsl2ShdslLineNtfyGroups=pdnHdsl2ShdslLineNtfyGroups, pdnHdsl2ShdslLoopAttenCrossing=pdnHdsl2ShdslLoopAttenCrossing, pdnHdsl2Shdsl15MinIntervalUAS=pdnHdsl2Shdsl15MinIntervalUAS, pdnHdsl2ShdslEndpointES=pdnHdsl2ShdslEndpointES, pdnHdsl2Shdsl1DayIntervalUAS=pdnHdsl2Shdsl1DayIntervalUAS, pdnHdsl2Shdsl1DayIntervalCRCanomalies=pdnHdsl2Shdsl1DayIntervalCRCanomalies, pdnHdsl2Shdsl1DayIntervalES=pdnHdsl2Shdsl1DayIntervalES, pdnHdsl2ShdslEndpointConfGroup=pdnHdsl2ShdslEndpointConfGroup, pdnHdsl2ShdslLineObjGroups=pdnHdsl2ShdslLineObjGroups, pdnHdsl2ShdslEndpointConfEntry=pdnHdsl2ShdslEndpointConfEntry, pdnHdsl2ShdslEndpointCurr1DayCRCanomalies=pdnHdsl2ShdslEndpointCurr1DayCRCanomalies, pdnHdsl2ShdslSpanConfProfileExtEntry=pdnHdsl2ShdslSpanConfProfileExtEntry, pdnHdsl2ShdslEndpointCurr15MinES=pdnHdsl2ShdslEndpointCurr15MinES, pdnHdsl2Shdsl15MinIntervalSES=pdnHdsl2Shdsl15MinIntervalSES, pdnHdsl2Shdsl1DayIntervalLOSWS=pdnHdsl2Shdsl1DayIntervalLOSWS, PYSNMP_MODULE_ID=pdnHdsl2ShdslLineMIB, pdnHdsl2ShdslSpanConfProfileExtTable=pdnHdsl2ShdslSpanConfProfileExtTable, pdnHdsl2ShdslIfTableGroup=pdnHdsl2ShdslIfTableGroup, pdnHdsl2ShdslEndpointCurr1DayTimeElapsed=pdnHdsl2ShdslEndpointCurr1DayTimeElapsed, pdnHdsl2ShdslLineCompliances=pdnHdsl2ShdslLineCompliances, pdnHdsl2ShdslEndpointCurr1DaySES=pdnHdsl2ShdslEndpointCurr1DaySES, pdnHdsl2ShdslSpanConfMinLineRate=pdnHdsl2ShdslSpanConfMinLineRate, pdnHdsl2ShdslPerfUASThresh=pdnHdsl2ShdslPerfUASThresh, pdnHdsl2Shdsl1DayIntervalNumber=pdnHdsl2Shdsl1DayIntervalNumber, pdnHdsl2ShdslEndpointCurr15MinSES=pdnHdsl2ShdslEndpointCurr15MinSES, pdnHdsl2ShdslnoNeighborPresent=pdnHdsl2ShdslnoNeighborPresent, pdnHdsl2Shdsl15MinIntervalTable=pdnHdsl2Shdsl15MinIntervalTable, pdnHdsl2Shdsl1DayIntervalSES=pdnHdsl2Shdsl1DayIntervalSES, pdnHdsl2ShdslSpanShdslStatusGroup=pdnHdsl2ShdslSpanShdslStatusGroup, pdnHdsl2Shdsl15MinIntervalGroup=pdnHdsl2Shdsl15MinIntervalGroup, pdnHdsl2ShdslExtendedRateModeGroup=pdnHdsl2ShdslExtendedRateModeGroup, pdnHdsl2ShdslprotocolInitFailure=pdnHdsl2ShdslprotocolInitFailure, pdnHdsl2Shdsl15MinIntervalLOSWS=pdnHdsl2Shdsl15MinIntervalLOSWS, pdnHdsl2ShdslEndpointLOSWS=pdnHdsl2ShdslEndpointLOSWS, pdnHdsl2ShdslEndpointCurr1DayLOSWS=pdnHdsl2ShdslEndpointCurr1DayLOSWS, pdnHdsl2ShdslEndpointCurr15MinCRCanomalies=pdnHdsl2ShdslEndpointCurr15MinCRCanomalies, pdnHdsl2ShdslSpanStatusExtEntry=pdnHdsl2ShdslSpanStatusExtEntry, pdnHdsl2ShdslStatusActualLineRate=pdnHdsl2ShdslStatusActualLineRate, pdnHdsl2ShdslIfTable=pdnHdsl2ShdslIfTable, pdnHdsl2ShdslEndpointCurr15MinUAS=pdnHdsl2ShdslEndpointCurr15MinUAS, pdnHdsl2ShdslEndpointAlarmConfProfile=pdnHdsl2ShdslEndpointAlarmConfProfile, pdnHdsl2ShdslSpanStatusExtTable=pdnHdsl2ShdslSpanStatusExtTable, pdnHdsl2ShdslIfEntry=pdnHdsl2ShdslIfEntry, pdnHdsl2ShdslSNRMarginCrossing=pdnHdsl2ShdslSNRMarginCrossing)
