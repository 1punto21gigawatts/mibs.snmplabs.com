#
# PySNMP MIB module CISCO-DOT11-RADAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DOT11-RADAR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:55:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, NotificationType, Gauge32, Counter64, Integer32, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "NotificationType", "Gauge32", "Counter64", "Integer32", "Bits", "iso")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoDot11RadarMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 627))
ciscoDot11RadarMIB.setRevisions(('2007-05-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDot11RadarMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoDot11RadarMIB.setLastUpdated('200705070000Z')
if mibBuilder.loadTexts: ciscoDot11RadarMIB.setOrganization('Cisco System Inc.')
if mibBuilder.loadTexts: ciscoDot11RadarMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 West Tasman Drive, San Jose CA 95134-1706. USA Tel: +1 800 553-NETS E-mail: cs-dot11@cisco.com')
if mibBuilder.loadTexts: ciscoDot11RadarMIB.setDescription('This MIB module is for IEEE 802.11a/h Root device, i.e. Access Point (AP) or Root Bridge. This MIB allows dynamic frequency selection features related to DOT11 device. ACRONYMS AP Access point RADAR RAdio Detection And Range GLOSSARY Access point Transmitter/receiver (transceiver) device that commonly connects and transports data between a wireless network and a wired network. Non-Root Bridge This wireless bridge does not connect to the main wired LAN segment. It connects to a remote wired LAN segment and can associate with root bridges and other non-root bridges that accept client associations. It also can accept associations from other non-root bridges, repeater access points, and client devices. Radar Radar is a system that uses electromagnetic waves to identify the range, altitude, direction, or speed of both moving and fixed objects such as aircraft, ships, motor vehicles, weather formations, and terrain. Repeater or Non-root Access Point The repeater access point is not connected to the wired LAN. The Repeater is a wireless LAN transceiver that transfers data between a client and another access point, another repeater, or between two bridges. The repeater is placed within radio range of an access point connected to the wired LAN, another repeater, or an non-root bridge to extend the range of the infrastructure. Root (Wireless) Bridge This wireless bridge connects to the main wired LAN. It can communicate with non-root wireless bridges, repeater access points, and client devices but not with another wireless root bridge. Only one wireless bridge in a wireless LAN can be set as the wireless root bridge. Work-group Bridge It is a client to APs or wireless root bridges. The radio port of a WGB serves as the uplink to the main network and the Ethernet port provides network access for devices like PC or IP phone.')
ciscoDot11RadarMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 0))
ciscoDot11RadarMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 1))
ciscoDot11RadarMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 2))
cdrDot11RadarNotifConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 1))
cdrDot11RadarDetectInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 2))
cdrDot11NewFrequency = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 2, 1), Unsigned32().clone(0)).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdrDot11NewFrequency.setStatus('current')
if mibBuilder.loadTexts: cdrDot11NewFrequency.setDescription('This is the IEEE 802.11a/h channel frequency that specify the new channel that the AP has switched to after (1) it has detected radar, or (2) received report from a client indicating that it has detected radar. The value of zero indicates that dynamic frequency selection has not completed after reset.')
cdrDot11PreferFrequency = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 2, 2), Unsigned32().clone(0)).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdrDot11PreferFrequency.setStatus('current')
if mibBuilder.loadTexts: cdrDot11PreferFrequency.setDescription('This is the IEEE 802.11a/h channel frequency that specify the prefer channel that the AP has moved back to. The value of zero indicates that prefer frequency is not selected.')
cdrChannelSwitchLastTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdrChannelSwitchLastTime.setStatus('current')
if mibBuilder.loadTexts: cdrChannelSwitchLastTime.setDescription('The value of sysUpTime when cdrDot11NewFrequency was last changed.')
cdrChannelReturnLastTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdrChannelReturnLastTime.setStatus('current')
if mibBuilder.loadTexts: cdrChannelReturnLastTime.setDescription('The value of sysUpTime when cdrDot11PreferFrequency was last changed.')
cdrChannelSwitchNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdrChannelSwitchNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cdrChannelSwitchNotifEnabled.setDescription("Indicates whether the ciscoDot11RadarChannelSwitch notification will or will not be sent by the agent when a radar is detected. If it is 'true', the notification will be sent. If it is 'false', the notification will not be sent.")
cdrChannelReturnNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 627, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdrChannelReturnNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cdrChannelReturnNotifEnabled.setDescription("Indicates whether the ciscoDot11RadarChannelReturn notification will or will not be sent by the agent when AP moves back to the prefer channel. If it is 'true', the notification will be sent. If it is 'false', the notification will not be sent.")
ciscoDot11RadarChannelSwitch = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 627, 0, 1)).setObjects(("CISCO-DOT11-RADAR-MIB", "cdrDot11NewFrequency"), ("CISCO-DOT11-RADAR-MIB", "cdrChannelSwitchLastTime"))
if mibBuilder.loadTexts: ciscoDot11RadarChannelSwitch.setStatus('current')
if mibBuilder.loadTexts: ciscoDot11RadarChannelSwitch.setDescription('This notification will be sent when a radar is detected either by AP itself or by a report from a client indicating that it has detected radar. The cdrDot11NewFrequency specify the channel that AP has switched to. This notification can be enabled or disabled via the cdrChannelSwitchNotifEnabled object.')
ciscoDot11RadarChannelReturn = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 627, 0, 2)).setObjects(("CISCO-DOT11-RADAR-MIB", "cdrDot11PreferFrequency"), ("CISCO-DOT11-RADAR-MIB", "cdrChannelReturnLastTime"))
if mibBuilder.loadTexts: ciscoDot11RadarChannelReturn.setStatus('current')
if mibBuilder.loadTexts: ciscoDot11RadarChannelReturn.setDescription('This notification will be sent when a AP has returned to the prefer channel. The cdrDot11PreferFrequency specify the channel that AP returns to. This notification can be enabled disabled via the cdrChannelReturnNotifEnabled object.')
ciscoDot11RadarMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 1))
ciscoDot11RadarMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 2))
ciscoDot11RadarCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 1, 1)).setObjects(("CISCO-DOT11-RADAR-MIB", "cdrDot11RadarNotifObjectGroup"), ("CISCO-DOT11-RADAR-MIB", "ciscoDot11RadarDetectInfoGroup"), ("CISCO-DOT11-RADAR-MIB", "ciscoDot11RadarNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDot11RadarCompliance = ciscoDot11RadarCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoDot11RadarCompliance.setDescription('The compliance statement for entities implementing the CISCO-DOT11-RADAR-MIB.')
cdrDot11RadarNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 2, 1)).setObjects(("CISCO-DOT11-RADAR-MIB", "cdrChannelSwitchNotifEnabled"), ("CISCO-DOT11-RADAR-MIB", "cdrChannelReturnNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdrDot11RadarNotifObjectGroup = cdrDot11RadarNotifObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cdrDot11RadarNotifObjectGroup.setDescription('This group is for enabling/disabling notifications of changing frequency.')
ciscoDot11RadarDetectInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 2, 2)).setObjects(("CISCO-DOT11-RADAR-MIB", "cdrDot11NewFrequency"), ("CISCO-DOT11-RADAR-MIB", "cdrDot11PreferFrequency"), ("CISCO-DOT11-RADAR-MIB", "cdrChannelSwitchLastTime"), ("CISCO-DOT11-RADAR-MIB", "cdrChannelReturnLastTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDot11RadarDetectInfoGroup = ciscoDot11RadarDetectInfoGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoDot11RadarDetectInfoGroup.setDescription('This group provides frequency-change information from the operation of the Radar detection.')
ciscoDot11RadarNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 627, 2, 2, 3)).setObjects(("CISCO-DOT11-RADAR-MIB", "ciscoDot11RadarChannelSwitch"), ("CISCO-DOT11-RADAR-MIB", "ciscoDot11RadarChannelReturn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDot11RadarNotificationGroup = ciscoDot11RadarNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoDot11RadarNotificationGroup.setDescription('This group provides notifications related to Radar Channel.')
mibBuilder.exportSymbols("CISCO-DOT11-RADAR-MIB", ciscoDot11RadarDetectInfoGroup=ciscoDot11RadarDetectInfoGroup, ciscoDot11RadarCompliance=ciscoDot11RadarCompliance, PYSNMP_MODULE_ID=ciscoDot11RadarMIB, ciscoDot11RadarChannelSwitch=ciscoDot11RadarChannelSwitch, cdrDot11RadarDetectInfo=cdrDot11RadarDetectInfo, cdrChannelReturnLastTime=cdrChannelReturnLastTime, ciscoDot11RadarNotificationGroup=ciscoDot11RadarNotificationGroup, ciscoDot11RadarChannelReturn=ciscoDot11RadarChannelReturn, cdrChannelSwitchLastTime=cdrChannelSwitchLastTime, cdrDot11RadarNotifObjectGroup=cdrDot11RadarNotifObjectGroup, ciscoDot11RadarMIBGroups=ciscoDot11RadarMIBGroups, cdrChannelSwitchNotifEnabled=cdrChannelSwitchNotifEnabled, ciscoDot11RadarMIBConform=ciscoDot11RadarMIBConform, cdrDot11RadarNotifConfig=cdrDot11RadarNotifConfig, ciscoDot11RadarMIBNotifs=ciscoDot11RadarMIBNotifs, cdrChannelReturnNotifEnabled=cdrChannelReturnNotifEnabled, ciscoDot11RadarMIBObjects=ciscoDot11RadarMIBObjects, cdrDot11NewFrequency=cdrDot11NewFrequency, ciscoDot11RadarMIBCompliances=ciscoDot11RadarMIBCompliances, ciscoDot11RadarMIB=ciscoDot11RadarMIB, cdrDot11PreferFrequency=cdrDot11PreferFrequency)
