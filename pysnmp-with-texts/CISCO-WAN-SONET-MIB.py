#
# PySNMP MIB module CISCO-WAN-SONET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-SONET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:20:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PerfIntervalCount, = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, TimeTicks, ObjectIdentity, Unsigned32, iso, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, NotificationType, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "TimeTicks", "ObjectIdentity", "Unsigned32", "iso", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "NotificationType", "Counter64", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoWANSonetMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 3))
ciscoWANSonetMIB.setRevisions(('2002-05-20 00:00', '2000-03-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoWANSonetMIB.setRevisionsDescriptions(('Importing Unsigned32 from SNMPv2-SMI.', 'Initial version of the MIB Module.',))
if mibBuilder.loadTexts: ciscoWANSonetMIB.setLastUpdated('200205200000Z')
if mibBuilder.loadTexts: ciscoWANSonetMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoWANSonetMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoWANSonetMIB.setDescription('The MIB module to describe SONET/SDH interfaces objects. This is an extension to the standard SONET MIB(RFC 2558).')
ciscoWANSonetMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 1))
cwsSection = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1))
cwsLine = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2))
cwsPath = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3))
cwsSectionAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1), )
if mibBuilder.loadTexts: cwsSectionAlarmTable.setStatus('current')
if mibBuilder.loadTexts: cwsSectionAlarmTable.setDescription('The SONET/SDH Section Alarm table. This table contains objects for setting alarm thresholds and reading alarm severity. ')
cwsSectionAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsSectionAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: cwsSectionAlarmEntry.setDescription('An entry in the alarm table. The entries exist for active sonet lines, with default threshold values. Thresholds may be configured for errored seconds(ES), severely errored seconds(SES), severely errored framing seconds(SEFS) and coding violations(CV) for section layer sonet lines. Once these thresholds are exceeded, minor or major alarm is raised. Please refer RFC1595 for descriptions of ES,SES,SEFS,CV')
cwsSectionStatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minor", 1), ("major", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionStatisticalAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: cwsSectionStatisticalAlarmSeverity.setDescription('By setting this object to major or minor, a minor or major severity alarm is raised when any statistical threshold is exceeded. By default TCA crossing does not raise any alarm.')
cwsSectionCurrentESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionCurrentESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionCurrentESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrentESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES), for the current 15-min interval, above which alarm is generated. ')
cwsSectionTotalESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionTotalESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionTotalESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionTotalESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES), for the 24 hour interval, above which alarm is generated. ')
cwsSectionCurrentSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setUnits('severely errored seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionCurrentSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionCurrentSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrentSESsThreshold.setDescription('This object indicates the threshold for severely errored seconds(SES) for the current 15-min interval, above which alarm is generated.')
cwsSectionTotalSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setUnits('severely errored seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionTotalSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionTotalSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionTotalSESsThreshold.setDescription('This object indicates the threshold for severely errored seconds(SES) for the 24 hour interval, above which alarm is generated.')
cwsSectionCurrentSEFSsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setUnits('severely errored framing seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionCurrentSEFSsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionCurrentSEFSsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrentSEFSsThreshold.setDescription('This object indicates the threshold for severely errored framing seconds(SEFS), above which alarm is generated.')
cwsSectionTotalSEFSsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setUnits('severely errored framing seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionTotalSEFSsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionTotalSEFSsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionTotalSEFSsThreshold.setDescription('This object indicates the threshold for severely errored framing seconds(SEFS) for the 24 hour interval, above which alarm is generated.')
cwsSectionCurrentCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(25)).setUnits('coding violations').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionCurrentCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionCurrentCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrentCVsThreshold.setDescription('This object indicates the threshold for coding violations(CV), above which alarm is generated.')
cwsSectionTotalCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(25)).setUnits('coding violations').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionTotalCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsSectionTotalCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsSectionTotalCVsThreshold.setDescription('This object indicates the threshold for coding violations(CV) for 24 hour interval, above which alarm is generated.')
cwsSectionStatAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsSectionStatAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: cwsSectionStatAlarmStatus.setDescription('This variable indicates the status of the interface. When an alarm is raised, this would indicate which threshold was exceeded. This object is updated every 15-minutes. Once the current 15-min window has passed, and there are no errors in the current 15-min window, the object is cleared from the lower level sonet task. The cwsSectionStatAlarmStatus is a bit map represented as a sum, therefore, it can represent multiple defects simultaneously. If none of the bits are set, it indicates no defect. The various bit positions are: 1 sonetSectionTotalESs 2 sonetSectionTotalSESs 3 sonetSectionTotalSEFSs 4 sonetSectionTotalCVs 5 sonetSectionCurrentESs 6 sonetSectionCurrentSESs 7 sonetSectionCurrentSEFSs 8 sonetSectionCurrentCVs')
cwsSectionCurrent24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2), )
if mibBuilder.loadTexts: cwsSectionCurrent24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrTable.setDescription('Contains sonet section related current 24 hour counters. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsSectionCurrent24HrTable table get reset to 0.')
cwsSectionCurrent24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsSectionCurrent24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrEntry.setDescription('An entry in the current 24 hour table. The entries exist for active sonet lines.')
cwsSectionCurrent24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionCurrent24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionCurrent24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrESs.setDescription('Number of errored seconds encountered in current 24 hour interval.')
cwsSectionCurrent24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionCurrent24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionCurrent24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrSESs.setDescription('Number of SESs encountered in current 24 hour interval.')
cwsSectionCurrent24HrSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2, 1, 3), PerfIntervalCount()).setUnits('severely errored framing seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionCurrent24HrSEFSs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionCurrent24HrSEFSs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrSEFSs.setDescription('Number of SEFSs encountered in current 24 hour interval.')
cwsSectionCurrent24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 2, 1, 4), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionCurrent24HrCVs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionCurrent24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionCurrent24HrCVs.setDescription('Number of CVs encountered in current 24 hour interval.')
cwsSectionPrevious24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3), )
if mibBuilder.loadTexts: cwsSectionPrevious24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrTable.setDescription('Contains sonet section previous 24 hour counters. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsSectionPrevious24HrTable table get reset to 0.')
cwsSectionPrevious24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsSectionPrevious24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrEntry.setDescription('An entry in the current 24 hour table. The entries exist for active sonet lines.')
cwsSectionPrevious24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionPrevious24HrESs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionPrevious24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrESs.setDescription('Number of errored seconds encountered in previous 24 hour interval.')
cwsSectionPrevious24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionPrevious24HrSESs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionPrevious24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrSESs.setDescription('Number of SESs encountered in previous 24 hour interval.')
cwsSectionPrevious24HrSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3, 1, 3), PerfIntervalCount()).setUnits('severely errored framing seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionPrevious24HrSEFSs.setReference('RFC2558 Section 3.5,GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionPrevious24HrSEFSs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrSEFSs.setDescription('Number of SEFSs encountered in previous 24 hour interval.')
cwsSectionPrevious24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 1, 3, 1, 4), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSectionPrevious24HrCVs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsSectionPrevious24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsSectionPrevious24HrCVs.setDescription('Number of CVs encountered in previous 24 hour interval.')
cwsLineAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1), )
if mibBuilder.loadTexts: cwsLineAlarmTable.setStatus('current')
if mibBuilder.loadTexts: cwsLineAlarmTable.setDescription('The SONET/SDH Line Alarm table. This table contains objects which are thresholds that the user can set. Once the threshold is exceeded, an alarm is flagged.Changing any threshold will affect both the Near End and Far End(remote end of the line) threshold.')
cwsLineAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsLineAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: cwsLineAlarmEntry.setDescription('An entry in the SONET/SDH Line Alarm table. The entries may be created for an ifType value of sonet(39). Thresholds maybe specified for errored seconds(ES), severely errored seconds(SES), severely errored framing seconds(SEFS),coding violations(CV) and unavailable seconds (UAS) for line layer of sonet lines. Once these thresholds are exceeded, minor or major alarm is raised. Please refer RFC1595 for descriptions of ES,SES,CV,UAS')
cwsLineStatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minor", 1), ("major", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineStatisticalAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: cwsLineStatisticalAlarmSeverity.setDescription('By setting this object to major or minor, a minor or major severity alarm is raised when any statistical threshold is exceeded. By default TCA crossing does not raise any alarm.')
cwsLineCurrentESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineCurrentESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineCurrentESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrentESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES) for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsLineTotalESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineTotalESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineTotalESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineTotalESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES) for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsLineCurrentSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineCurrentSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineCurrentSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrentSESsThreshold.setDescription('This is the severely errored seconds(SES) threshold for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsLineTotalSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineTotalSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineTotalSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineTotalSESsThreshold.setDescription('This is the severely errored seconds(SES) threshold for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsLineCurrentCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineCurrentCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineCurrentCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrentCVsThreshold.setDescription('This is the Coding violations(CV) threshold for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsLineTotalCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineTotalCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineTotalCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineTotalCVsThreshold.setDescription('This is the Coding violations(CV) threshold for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsLineCurrentUASsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineCurrentUASsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineCurrentUASsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrentUASsThreshold.setDescription('This is the Unavailable Seconds(UAS) threshold for the current 15-min, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsLineTotalUASsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsLineTotalUASsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsLineTotalUASsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsLineTotalUASsThreshold.setDescription('This is the Unavailable Seconds(UAS) threshold for the 24 hour interval above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsLineStatAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLineStatAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: cwsLineStatAlarmStatus.setDescription('This variable indicates the status of the sonet line. This object is updated every 15-minutes. Once the current 15-min window has passed, and there are no errors in the current 15-min window, the object is cleared from the lower level sonet task. The cwsLineStatAlarmStatus is a bit map represented as a sum, therefore, it can represent multiple defects simultaneously. If none of the bits are set, it indicates no defect. The various bit-positions are: 1 sonetLineTotalESs 2 sonetLineTotalSESs 3 sonetLineTotalCVs 4 sonetLineTotalUASs 5 sonetLineCurrentESs 6 sonetLineCurrentSESs 7 sonetLineCurrentCVs 8 sonetLineCurrentUASs 9 sonetFarEndLineTotalESs 10 sonetFarEndLineTotalSESs 11 sonetFarEndLineTotalCVs 12 sonetFarEndLineTotalUASs 13 sonetFarEndLineCurrentESs 14 sonetFarEndLineCurrentSESs 15 sonetFarEndLineCurrentCVs 16 sonetFarEndLineCurrentUASs')
cwsLineCurrent24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2), )
if mibBuilder.loadTexts: cwsLineCurrent24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrTable.setDescription('Contains sonet line related current 24 hour counters. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsLineCurrent24HrTable table get reset to 0.')
cwsLineCurrent24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsLineCurrent24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrEntry.setDescription('An entry in the current 24 hour table. The entries exist for active sonet lines.')
cwsLineCurrent24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLineCurrent24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLineCurrent24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrESs.setDescription('Number of errored seconds encountered in current 24 hour interval.')
cwsLineCurrent24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLineCurrent24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLineCurrent24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrSESs.setDescription('Number of SESs encountered in current 24 hour interval.')
cwsLineCurrent24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 3), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLineCurrent24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLineCurrent24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrCVs.setDescription('Number of CVs encountered in current 24 hour interval.')
cwsLineCurrent24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 4), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLineCurrent24HrUASs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLineCurrent24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsLineCurrent24HrUASs.setDescription('Number of UASs encountered in current 24 hour interval.')
cwsFELineCurrent24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELineCurrent24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELineCurrent24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsFELineCurrent24HrESs.setDescription('Number of far end errored seconds encountered in current 24 hour interval.')
cwsFELineCurrent24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 6), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELineCurrent24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELineCurrent24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsFELineCurrent24HrSESs.setDescription('Number of far end SESs encountered in current 24 hour interval.')
cwsFELineCurrent24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 7), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELineCurrent24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELineCurrent24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsFELineCurrent24HrCVs.setDescription('Number of far end CVs encountered in current 24 hour interval.')
cwsFELineCurrent24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 2, 1, 8), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELineCurrent24HrUASs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELineCurrent24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsFELineCurrent24HrUASs.setDescription('Number of far end UASs encountered in current 24 hour interval.')
cwsLinePrevious24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3), )
if mibBuilder.loadTexts: cwsLinePrevious24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrTable.setDescription('Contains sonet line previous 24 hour counters. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsLinePrevious24HrTable table get reset to 0.')
cwsLinePrevious24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsLinePrevious24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrEntry.setDescription('An entry in the current 24 hour table. The entries exist for active sonet lines.')
cwsLinePrevious24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLinePrevious24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLinePrevious24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrESs.setDescription('Number of errored seconds encountered in previous 24 hour interval.')
cwsLinePrevious24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLinePrevious24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLinePrevious24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrSESs.setDescription('Number of SESs encountered in previous 24 hour interval.')
cwsLinePrevious24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 3), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLinePrevious24HrCVs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLinePrevious24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrCVs.setDescription('Number of CVs encountered in previous 24 hour interval.')
cwsLinePrevious24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 4), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsLinePrevious24HrUASs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsLinePrevious24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsLinePrevious24HrUASs.setDescription('Number of UASs encountered in previous 24 hour interval.')
cwsFELinePrevious24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELinePrevious24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELinePrevious24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsFELinePrevious24HrESs.setDescription('Number of far end errored seconds encountered in previous 24 hour interval.')
cwsFELinePrevious24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 6), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELinePrevious24HrSESs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELinePrevious24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsFELinePrevious24HrSESs.setDescription('Number of far end SESs encountered in previous 24 hour interval.')
cwsFELinePrevious24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 7), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELinePrevious24HrCVs.setReference('RFC2558 Section 3.5,GR-253-CORE')
if mibBuilder.loadTexts: cwsFELinePrevious24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsFELinePrevious24HrCVs.setDescription('Number of far end CVs encountered in previous 24 hour interval.')
cwsFELinePrevious24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 2, 3, 1, 8), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFELinePrevious24HrUASs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFELinePrevious24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsFELinePrevious24HrUASs.setDescription('Number of far end UASs encountered in previous 24 hour interval.')
cwsPathAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1), )
if mibBuilder.loadTexts: cwsPathAlarmTable.setStatus('current')
if mibBuilder.loadTexts: cwsPathAlarmTable.setDescription('The SONET/SDH Path Alarm table. This table contains objects for thresholds which a user can set. When any threshold is exceeded, an alarm is set. Changing any threshold will affect both the Near End and Far End(remote end of the line) threshold.')
cwsPathAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsPathAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: cwsPathAlarmEntry.setDescription('An entry in the SONET/SDH Path Alarm table. Thresholds maybe specified for errored seconds(ES), severely errored seconds(SES), severely errored framing seconds(SEFS),coding violations(CV) and unavailable seconds (UAS) for path layer of sonet lines. Once these thresholds are exceeded, minor or major alarm is raised. Please refer RFC1595 for descriptions of ES,SES,SEFS,CV,UAS.')
cwsPathStatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minor", 1), ("major", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathStatisticalAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: cwsPathStatisticalAlarmSeverity.setDescription('By setting this object to major or minor, a minor or major severity alarm is raised when any statistical threshold is exceeded. By default TCA crossing does not raise any alarm.')
cwsPathCurrentESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathCurrentESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrentESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrentESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES) for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End (remote end of the line) and Near End(this end of the line).')
cwsPathTotalESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathTotalESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathTotalESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathTotalESsThreshold.setDescription('This object indicates the threshold for errored seconds(ES) for the 24-hour interval, above which alarm is generated. This threshold is the same for Far End (remote end of the line) and Near End(this end of the line).')
cwsPathCurrentSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathCurrentSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrentSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrentSESsThreshold.setDescription('This object indicates the threshold for severely errored seconds(SES) for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsPathTotalSESsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathTotalSESsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathTotalSESsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathTotalSESsThreshold.setDescription('This object indicates the threshold for severely errored seconds(SES) for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End.')
cwsPathCurrentCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathCurrentCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrentCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrentCVsThreshold.setDescription('This is the coding violations threshold for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsPathTotalCVsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathTotalCVsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathTotalCVsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathTotalCVsThreshold.setDescription('This is the coding violations threshold for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsPathCurrentUASsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathCurrentUASsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrentUASsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrentUASsThreshold.setDescription('This is the unavailable seconds threshold for the current 15-min interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsPathTotalUASsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwsPathTotalUASsThreshold.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathTotalUASsThreshold.setStatus('current')
if mibBuilder.loadTexts: cwsPathTotalUASsThreshold.setDescription('This is the unavailable seconds threshold for the 24 hour interval, above which alarm is generated. This threshold is the same for Far End and Near End. ')
cwsPathStatAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathStatAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: cwsPathStatAlarmStatus.setDescription('This variable indicates the status of the interface. The cwsPathStatAlarmStatus is a bit map represented as a sum, therefore, it can represent multiple defects simultaneously. If none of the bits are set, it indicates no defect. The following ar the bit positions: 1 sonetPathTotalESs 2 sonetPathTotalSESs 3 sonetPathTotalCVs 4 sonetPathTotalUASs 5 sonetPathCurrentESs 6 sonetPathCurrentSESs 7 sonetPathCurrentCVs 8 sonetPathCurrentUASs 9 sonetFarEndPathTotalESs 10 sonetFarEndPathTotalSESs 11 sonetFarEndPathTotalCVs 12 sonetFarEndPathTotalUASs 13 sonetFarEndPathCurrentESs 14 sonetFarEndPathCurrentSESs 15 sonetFarEndPathCurrentCVs 16 sonetFarEndPathCurrentUASs')
cwsPathCurrent24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2), )
if mibBuilder.loadTexts: cwsPathCurrent24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrTable.setDescription('Contains sonet path related current 24 hour interval counter. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsPathCurrent24HrTable table get reset to 0.')
cwsPathCurrent24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsPathCurrent24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrEntry.setDescription('An entry in path current table.')
cwsPathCurrent24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathCurrent24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrent24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrESs.setDescription('Number of errored seconds encountered in current 24 hour interval.')
cwsPathCurrent24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathCurrent24HrSESs.setReference(' RFC2558 Section 3.5,GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrent24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrSESs.setDescription('Number of SESs encountered in current 24 hour interval.')
cwsPathCurrent24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 3), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathCurrent24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrent24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrCVs.setDescription('Number of CVs encountered in current 24 hour interval.')
cwsPathCurrent24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 4), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathCurrent24HrUASs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathCurrent24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsPathCurrent24HrUASs.setDescription('Number of UASs encountered in current 24 hour interval.')
cwsFEPathCurrent24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathCurrent24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrESs.setDescription('Number of far end errored seconds encountered in current 24 hour interval.')
cwsFEPathCurrent24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 6), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathCurrent24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrSESs.setDescription('Number of far end SESs encountered in current 24 hour interval.')
cwsFEPathCurrent24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 7), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathCurrent24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrCVs.setDescription('Number of far end CVs encountered in current 24 hour interval.')
cwsFEPathCurrent24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 2, 1, 8), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathCurrent24HrUASs.setReference(' RFC2558 Section 3.5,GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathCurrent24HrUASs.setDescription('Number of far end UASs encountered in current 24 hour interval.')
cwsPathPrevious24HrTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3), )
if mibBuilder.loadTexts: cwsPathPrevious24HrTable.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrTable.setDescription('Contains sonet path previous 24 hour interval counter. A 24 hour interval starts at twelve midnight with reference to node time. In case of a manual change in node time all the counters in cwsPathPrevious24HrTable table get reset to 0.')
cwsPathPrevious24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwsPathPrevious24HrEntry.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrEntry.setDescription('An entry in path current table.')
cwsPathPrevious24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathPrevious24HrESs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathPrevious24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrESs.setDescription('Number of errored seconds encountered in current 24 hour interval.')
cwsPathPrevious24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 2), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathPrevious24HrSESs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathPrevious24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrSESs.setDescription('Number of SESs encountered in current 24 hour interval.')
cwsPathPrevious24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 3), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathPrevious24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathPrevious24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrCVs.setDescription('Number of CVs encountered in current 24 hour interval.')
cwsPathPrevious24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 4), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsPathPrevious24HrUASs.setReference(' RFC2558 Section 3.5,GR-253-CORE ')
if mibBuilder.loadTexts: cwsPathPrevious24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsPathPrevious24HrUASs.setDescription('Number of UASs encountered in current 24 hour interval.')
cwsFEPathPrevious24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathPrevious24HrESs.setReference(' RFC2558 Section 3.5,GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrESs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrESs.setDescription('Number of far end errored seconds encountered in previous 24 hour interval.')
cwsFEPathPrevious24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 6), PerfIntervalCount()).setUnits('severely errored seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathPrevious24HrSESs.setReference(' RFC2558 Section 3.5,GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrSESs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrSESs.setDescription('Number of far end SESs encountered in previous 24 hour interval.')
cwsFEPathPrevious24HrCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 7), PerfIntervalCount()).setUnits('coding violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathPrevious24HrCVs.setReference(' RFC2558 Section 3.5, GR-253-CORE ')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrCVs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrCVs.setDescription('Number of far end CVs encountered in previous 24 hour interval.')
cwsFEPathPrevious24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 3, 1, 3, 3, 1, 8), PerfIntervalCount()).setUnits('Unavailable seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsFEPathPrevious24HrUASs.setReference('RFC2558 Section 3.5, GR-253-CORE')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrUASs.setStatus('current')
if mibBuilder.loadTexts: cwsFEPathPrevious24HrUASs.setDescription('Number of far end UASs encountered in previous 24 hour interval.')
ciscoWANSonetMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 2))
ciscoWANSonetMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 1))
ciscoWANSonetMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2))
ciscoWANSonetMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 1, 1)).setObjects(("CISCO-WAN-SONET-MIB", "ciscoWANSonetSectAlarmMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetLineAlarmMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetPathAlarmMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetLinePrev24HrMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetFELineAlarmMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetFELinePrev24HrMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetPathPrev24HrMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetFEPathAlarmMIBGroup"), ("CISCO-WAN-SONET-MIB", "ciscoWANSonetFEPathPrev24HrMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetMIBCompliance = ciscoWANSonetMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetMIBCompliance.setDescription('The Compliance statement for ciscoSonet management group.')
ciscoWANSonetSectAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 1)).setObjects(("CISCO-WAN-SONET-MIB", "cwsSectionStatisticalAlarmSeverity"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrentESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionTotalESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrentSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionTotalSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrentSEFSsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionTotalSEFSsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrentCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionTotalCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsSectionStatAlarmStatus"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrent24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrent24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrent24HrSEFSs"), ("CISCO-WAN-SONET-MIB", "cwsSectionCurrent24HrCVs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetSectAlarmMIBGroup = ciscoWANSonetSectAlarmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetSectAlarmMIBGroup.setDescription(' These are objects related to ciscoSonet alarm group ')
ciscoWANSonetSectPrev24HrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 2)).setObjects(("CISCO-WAN-SONET-MIB", "cwsSectionPrevious24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsSectionPrevious24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsSectionPrevious24HrSEFSs"), ("CISCO-WAN-SONET-MIB", "cwsSectionPrevious24HrCVs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetSectPrev24HrMIBGroup = ciscoWANSonetSectPrev24HrMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetSectPrev24HrMIBGroup.setDescription('Sonet section previous 24 hour counter objects.')
ciscoWANSonetLineAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 3)).setObjects(("CISCO-WAN-SONET-MIB", "cwsLineStatisticalAlarmSeverity"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrentESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineTotalESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrentSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineTotalSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrentCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineTotalCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrentUASsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineTotalUASsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsLineStatAlarmStatus"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrent24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrent24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrent24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsLineCurrent24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetLineAlarmMIBGroup = ciscoWANSonetLineAlarmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetLineAlarmMIBGroup.setDescription('These are objects related to ciscoSonet line alarm group.')
ciscoWANSonetFELineAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 4)).setObjects(("CISCO-WAN-SONET-MIB", "cwsFELineCurrent24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsFELineCurrent24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsFELineCurrent24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsFELineCurrent24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetFELineAlarmMIBGroup = ciscoWANSonetFELineAlarmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetFELineAlarmMIBGroup.setDescription('These are sonet far end line current 24 hour counter objects.')
ciscoWANSonetLinePrev24HrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 5)).setObjects(("CISCO-WAN-SONET-MIB", "cwsLinePrevious24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsLinePrevious24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsLinePrevious24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsLinePrevious24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetLinePrev24HrMIBGroup = ciscoWANSonetLinePrev24HrMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetLinePrev24HrMIBGroup.setDescription('Sonet line previous 24 hour counter objects.')
ciscoWANSonetFELinePrev24HrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 6)).setObjects(("CISCO-WAN-SONET-MIB", "cwsFELinePrevious24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsFELinePrevious24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsFELinePrevious24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsFELinePrevious24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetFELinePrev24HrMIBGroup = ciscoWANSonetFELinePrev24HrMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetFELinePrev24HrMIBGroup.setDescription('Far end sonet line previous 24 hour counter objects.')
ciscoWANSonetPathAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 7)).setObjects(("CISCO-WAN-SONET-MIB", "cwsPathStatisticalAlarmSeverity"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrentESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathTotalESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrentSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathTotalSESsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrentCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathTotalCVsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrentUASsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathTotalUASsThreshold"), ("CISCO-WAN-SONET-MIB", "cwsPathStatAlarmStatus"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrent24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrent24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrent24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsPathCurrent24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetPathAlarmMIBGroup = ciscoWANSonetPathAlarmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetPathAlarmMIBGroup.setDescription(' These are objects related to ciscoSonet path alarm group ')
ciscoWANSonetFEPathAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 8)).setObjects(("CISCO-WAN-SONET-MIB", "cwsFEPathCurrent24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathCurrent24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathCurrent24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathCurrent24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetFEPathAlarmMIBGroup = ciscoWANSonetFEPathAlarmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetFEPathAlarmMIBGroup.setDescription('These are far end sonet path current 24 hour counter objects.')
ciscoWANSonetPathPrev24HrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 9)).setObjects(("CISCO-WAN-SONET-MIB", "cwsPathPrevious24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsPathPrevious24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsPathPrevious24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsPathPrevious24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetPathPrev24HrMIBGroup = ciscoWANSonetPathPrev24HrMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetPathPrev24HrMIBGroup.setDescription('Sonet path previous 24 hour counters.')
ciscoWANSonetFEPathPrev24HrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 3, 2, 2, 10)).setObjects(("CISCO-WAN-SONET-MIB", "cwsFEPathPrevious24HrESs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathPrevious24HrSESs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathPrevious24HrCVs"), ("CISCO-WAN-SONET-MIB", "cwsFEPathPrevious24HrUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSonetFEPathPrev24HrMIBGroup = ciscoWANSonetFEPathPrev24HrMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoWANSonetFEPathPrev24HrMIBGroup.setDescription('Theses are far end sonet path previous 24 hour counter objects.')
mibBuilder.exportSymbols("CISCO-WAN-SONET-MIB", cwsFELinePrevious24HrCVs=cwsFELinePrevious24HrCVs, cwsSectionCurrent24HrSEFSs=cwsSectionCurrent24HrSEFSs, cwsLinePrevious24HrSESs=cwsLinePrevious24HrSESs, cwsLineStatisticalAlarmSeverity=cwsLineStatisticalAlarmSeverity, cwsFELinePrevious24HrSESs=cwsFELinePrevious24HrSESs, cwsPathCurrent24HrEntry=cwsPathCurrent24HrEntry, ciscoWANSonetPathPrev24HrMIBGroup=ciscoWANSonetPathPrev24HrMIBGroup, cwsLinePrevious24HrEntry=cwsLinePrevious24HrEntry, cwsSectionTotalSEFSsThreshold=cwsSectionTotalSEFSsThreshold, cwsPathAlarmEntry=cwsPathAlarmEntry, cwsFEPathCurrent24HrUASs=cwsFEPathCurrent24HrUASs, cwsLineCurrent24HrEntry=cwsLineCurrent24HrEntry, cwsFEPathCurrent24HrSESs=cwsFEPathCurrent24HrSESs, cwsFEPathPrevious24HrESs=cwsFEPathPrevious24HrESs, cwsFELineCurrent24HrESs=cwsFELineCurrent24HrESs, cwsPathCurrent24HrUASs=cwsPathCurrent24HrUASs, cwsFEPathPrevious24HrUASs=cwsFEPathPrevious24HrUASs, cwsFELineCurrent24HrUASs=cwsFELineCurrent24HrUASs, cwsSectionPrevious24HrEntry=cwsSectionPrevious24HrEntry, cwsSectionCurrent24HrESs=cwsSectionCurrent24HrESs, cwsPathTotalCVsThreshold=cwsPathTotalCVsThreshold, cwsLineCurrent24HrTable=cwsLineCurrent24HrTable, cwsLineTotalSESsThreshold=cwsLineTotalSESsThreshold, cwsPathCurrentCVsThreshold=cwsPathCurrentCVsThreshold, cwsPathCurrentUASsThreshold=cwsPathCurrentUASsThreshold, ciscoWANSonetFELineAlarmMIBGroup=ciscoWANSonetFELineAlarmMIBGroup, cwsLineCurrentUASsThreshold=cwsLineCurrentUASsThreshold, cwsLinePrevious24HrTable=cwsLinePrevious24HrTable, cwsPathCurrent24HrCVs=cwsPathCurrent24HrCVs, cwsSectionPrevious24HrSESs=cwsSectionPrevious24HrSESs, cwsSectionStatisticalAlarmSeverity=cwsSectionStatisticalAlarmSeverity, cwsPathTotalUASsThreshold=cwsPathTotalUASsThreshold, cwsPathCurrent24HrSESs=cwsPathCurrent24HrSESs, cwsPathPrevious24HrSESs=cwsPathPrevious24HrSESs, cwsSectionCurrent24HrEntry=cwsSectionCurrent24HrEntry, ciscoWANSonetFEPathAlarmMIBGroup=ciscoWANSonetFEPathAlarmMIBGroup, ciscoWANSonetSectAlarmMIBGroup=ciscoWANSonetSectAlarmMIBGroup, PYSNMP_MODULE_ID=ciscoWANSonetMIB, cwsFELineCurrent24HrCVs=cwsFELineCurrent24HrCVs, cwsFELinePrevious24HrUASs=cwsFELinePrevious24HrUASs, cwsPathCurrentSESsThreshold=cwsPathCurrentSESsThreshold, cwsSectionPrevious24HrTable=cwsSectionPrevious24HrTable, cwsSectionAlarmTable=cwsSectionAlarmTable, ciscoWANSonetMIBConformance=ciscoWANSonetMIBConformance, ciscoWANSonetMIB=ciscoWANSonetMIB, cwsPathAlarmTable=cwsPathAlarmTable, cwsLineCurrentESsThreshold=cwsLineCurrentESsThreshold, ciscoWANSonetMIBCompliances=ciscoWANSonetMIBCompliances, cwsFEPathPrevious24HrSESs=cwsFEPathPrevious24HrSESs, cwsLineCurrent24HrESs=cwsLineCurrent24HrESs, cwsLineAlarmEntry=cwsLineAlarmEntry, cwsLineStatAlarmStatus=cwsLineStatAlarmStatus, cwsPathTotalESsThreshold=cwsPathTotalESsThreshold, cwsSectionStatAlarmStatus=cwsSectionStatAlarmStatus, ciscoWANSonetSectPrev24HrMIBGroup=ciscoWANSonetSectPrev24HrMIBGroup, cwsPathPrevious24HrTable=cwsPathPrevious24HrTable, cwsSectionCurrent24HrCVs=cwsSectionCurrent24HrCVs, ciscoWANSonetLinePrev24HrMIBGroup=ciscoWANSonetLinePrev24HrMIBGroup, cwsSectionPrevious24HrSEFSs=cwsSectionPrevious24HrSEFSs, cwsLinePrevious24HrESs=cwsLinePrevious24HrESs, cwsPathTotalSESsThreshold=cwsPathTotalSESsThreshold, cwsPathCurrent24HrTable=cwsPathCurrent24HrTable, cwsLineCurrentCVsThreshold=cwsLineCurrentCVsThreshold, cwsFEPathCurrent24HrCVs=cwsFEPathCurrent24HrCVs, cwsLineTotalESsThreshold=cwsLineTotalESsThreshold, cwsPathStatAlarmStatus=cwsPathStatAlarmStatus, cwsSectionTotalCVsThreshold=cwsSectionTotalCVsThreshold, cwsPath=cwsPath, cwsPathCurrent24HrESs=cwsPathCurrent24HrESs, cwsSectionCurrentSEFSsThreshold=cwsSectionCurrentSEFSsThreshold, cwsPathPrevious24HrUASs=cwsPathPrevious24HrUASs, cwsLine=cwsLine, ciscoWANSonetMIBObjects=ciscoWANSonetMIBObjects, cwsSectionCurrentSESsThreshold=cwsSectionCurrentSESsThreshold, cwsFEPathCurrent24HrESs=cwsFEPathCurrent24HrESs, cwsFELineCurrent24HrSESs=cwsFELineCurrent24HrSESs, cwsPathStatisticalAlarmSeverity=cwsPathStatisticalAlarmSeverity, cwsSectionCurrent24HrSESs=cwsSectionCurrent24HrSESs, ciscoWANSonetLineAlarmMIBGroup=ciscoWANSonetLineAlarmMIBGroup, cwsLineCurrent24HrCVs=cwsLineCurrent24HrCVs, cwsPathPrevious24HrEntry=cwsPathPrevious24HrEntry, ciscoWANSonetFELinePrev24HrMIBGroup=ciscoWANSonetFELinePrev24HrMIBGroup, cwsSectionPrevious24HrESs=cwsSectionPrevious24HrESs, cwsSectionCurrent24HrTable=cwsSectionCurrent24HrTable, cwsLineTotalUASsThreshold=cwsLineTotalUASsThreshold, cwsLineCurrent24HrUASs=cwsLineCurrent24HrUASs, cwsLinePrevious24HrUASs=cwsLinePrevious24HrUASs, ciscoWANSonetMIBGroups=ciscoWANSonetMIBGroups, cwsSectionPrevious24HrCVs=cwsSectionPrevious24HrCVs, cwsSection=cwsSection, cwsLinePrevious24HrCVs=cwsLinePrevious24HrCVs, cwsSectionCurrentCVsThreshold=cwsSectionCurrentCVsThreshold, cwsPathPrevious24HrESs=cwsPathPrevious24HrESs, cwsFEPathPrevious24HrCVs=cwsFEPathPrevious24HrCVs, cwsSectionAlarmEntry=cwsSectionAlarmEntry, cwsSectionCurrentESsThreshold=cwsSectionCurrentESsThreshold, cwsSectionTotalESsThreshold=cwsSectionTotalESsThreshold, cwsLineTotalCVsThreshold=cwsLineTotalCVsThreshold, ciscoWANSonetFEPathPrev24HrMIBGroup=ciscoWANSonetFEPathPrev24HrMIBGroup, cwsFELinePrevious24HrESs=cwsFELinePrevious24HrESs, ciscoWANSonetPathAlarmMIBGroup=ciscoWANSonetPathAlarmMIBGroup, cwsPathCurrentESsThreshold=cwsPathCurrentESsThreshold, ciscoWANSonetMIBCompliance=ciscoWANSonetMIBCompliance, cwsPathPrevious24HrCVs=cwsPathPrevious24HrCVs, cwsLineCurrent24HrSESs=cwsLineCurrent24HrSESs, cwsSectionTotalSESsThreshold=cwsSectionTotalSESsThreshold, cwsLineCurrentSESsThreshold=cwsLineCurrentSESsThreshold, cwsLineAlarmTable=cwsLineAlarmTable)
