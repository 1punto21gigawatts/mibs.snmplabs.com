#
# PySNMP MIB module T2514-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T2514-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Bits, NotificationType, iso, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, Integer32, TimeTicks, ModuleIdentity, ObjectIdentity, Unsigned32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "NotificationType", "iso", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "Integer32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

comet = MibIdentifier((1, 3, 6, 1, 4, 1, 22626))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1))
t2514 = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2))
readings = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1))
settings = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2))
readingsint = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3))
settingsint = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5))
tables = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6))
pressure = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressure.setStatus('mandatory')
if mibBuilder.loadTexts: pressure.setDescription('Pressure')
presslow = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presslow.setStatus('mandatory')
if mibBuilder.loadTexts: presslow.setDescription('Pressure Limit Low')
presshigh = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presshigh.setStatus('mandatory')
if mibBuilder.loadTexts: presshigh.setDescription('Pressure Limit High')
presstime = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presstime.setStatus('mandatory')
if mibBuilder.loadTexts: presstime.setDescription('Pressure alaram delay')
pressureHyst = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressureHyst.setStatus('mandatory')
if mibBuilder.loadTexts: pressureHyst.setDescription('Pressure hysteresis')
pressurei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressurei.setStatus('mandatory')
if mibBuilder.loadTexts: pressurei.setDescription('Pressure *10')
presslowi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presslowi.setStatus('mandatory')
if mibBuilder.loadTexts: presslowi.setDescription('Pressure Limit Low *10')
presshighi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presshighi.setStatus('mandatory')
if mibBuilder.loadTexts: presshighi.setDescription('Pressure Limit High *10')
presstimei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presstimei.setStatus('mandatory')
if mibBuilder.loadTexts: presstimei.setDescription('Pressure alaram delay')
pressHysti = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pressHysti.setStatus('mandatory')
if mibBuilder.loadTexts: pressHysti.setDescription('Pressure hysteresis *10')
messageString = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageString.setStatus('mandatory')
if mibBuilder.loadTexts: messageString.setDescription('Message giving more detailed information on alarms.')
alarmPressure = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPressure.setStatus('mandatory')
if mibBuilder.loadTexts: alarmPressure.setDescription('Pressure alarm 0 = Computed value OK 1 = Computed value too high 2 = Computed value too low')
historyTable = MibTable((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1), )
if mibBuilder.loadTexts: historyTable.setStatus('mandatory')
if mibBuilder.loadTexts: historyTable.setDescription('Table of the history values.')
historyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1), ).setIndexNames((0, "T2514-MIB", "histpressure"))
if mibBuilder.loadTexts: historyEntry.setStatus('optional')
if mibBuilder.loadTexts: historyEntry.setDescription('History values entries.')
histpressure = MibTableColumn((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: histpressure.setStatus('mandatory')
if mibBuilder.loadTexts: histpressure.setDescription('Pressure reading.')
mibBuilder.exportSymbols("T2514-MIB", comet=comet, histpressure=histpressure, tables=tables, products=products, pressure=pressure, presstime=presstime, traps=traps, pressHysti=pressHysti, presshigh=presshigh, pressureHyst=pressureHyst, t2514=t2514, historyEntry=historyEntry, readingsint=readingsint, presslowi=presslowi, settingsint=settingsint, presshighi=presshighi, pressurei=pressurei, alarmPressure=alarmPressure, presslow=presslow, settings=settings, readings=readings, DisplayString=DisplayString, messageString=messageString, presstimei=presstimei, historyTable=historyTable)
