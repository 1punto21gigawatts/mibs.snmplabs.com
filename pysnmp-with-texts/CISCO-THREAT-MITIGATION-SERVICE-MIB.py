#
# PySNMP MIB module CISCO-THREAT-MITIGATION-SERVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-THREAT-MITIGATION-SERVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:14:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, MibIdentifier, IpAddress, iso, Counter64, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Gauge32, TimeTicks, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "IpAddress", "iso", "Counter64", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Gauge32", "TimeTicks", "NotificationType", "Unsigned32")
DateAndTime, TextualConvention, StorageType, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "StorageType", "TruthValue", "DisplayString", "RowStatus")
ciscoThreatMitigationServiceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 603))
ciscoThreatMitigationServiceMIB.setRevisions(('2007-01-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoThreatMitigationServiceMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoThreatMitigationServiceMIB.setLastUpdated('200701090000Z')
if mibBuilder.loadTexts: ciscoThreatMitigationServiceMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoThreatMitigationServiceMIB.setContactInfo('Cisco Systems Customer Service Postal:170 W. Tasman Drive San Jose, CA 95134 USA Tel:+1 800 553-NETS E-mail:cs-tms@cisco.com')
if mibBuilder.loadTexts: ciscoThreatMitigationServiceMIB.setDescription(" This MIB provides management information about the Threat Mitigation Service(TMS) entity named 'Consumer'. TMS is part of Cisco's Network Infection Containment (NIC) security framework. The MIB is expected to be implemented on all entities that act as TMS consumers. The NIC framework deals with threat mitigation. The NIC architecture consists of controllers and one or more consumers registered with these controllers. The controller is responsible for detecting threats and conveying the information about the same to one or more consumers that could be the potential targets of the detected threat. Upon receiving the information about the threat from the controller, the consumer responds with appropriate mitigation actions according to the policies configured on it and as indicated in the threat notification message. TMS protocol is used for distribution and management of threat related information from the controller to consumers. TMS runs over TIDP layer which is used as distribution layer. TIDP layer provides a secured connection between the controller and the consumers. TIDP also provides group management services. Each consumer needs to participate in a TIDP group in order to receive threat notification message from controller in that TIDP group. To participate in a TIDP group consumer needs to register with the controller of that group, from which it intends to receive threat messages. When the controller needs to distribute the information about a threat to one or more target TIDP groups or to one particular consumer in a TIDP group, it delivers the information to the respective entities through TMS protocol messages. Upon receiving the threat notification message, consumer determines the appropriate mitigation action to be executed, with the corresponding action parameters, based on the configuration and information available in threat message. The respective action is then executed. The state of threat is set according to the result of enforcement action, e.g., upon successful application of enforcement action it is marked as Active. The consumer then responds to the controller with the results of the mitigation action carried out for the threat. GLOSSARY -------- Active Threat : A threat is active on a consumer if mitigation action corresponding to the threat has been enforced successfully. Inactive Threat : A threat is inactive on a consumer if mitigation action corresponding to the threat has been undone successfully. ACL : Access Control List is the list of rules which are used to filter or classify packets based on protocol parameters. ACL drop : ACL drop action refers to the drop action taken on packets matching any of the filters in the access list. DSCP : Differentiated Service Code Point is same as 'Type of Service' field in IP header, used in reference to quality of service. FPM : Flexible Packet Matching is a framework which provides packet filtering based on pattern at any offset in the packet. FPM drop : FPM drop action refers to the drop action taken on packet filtered by FPM. TCDF : Traffic Classification Definition File gives the XML description of traffic class. TIDP : Threat Information Distribution Protocol is a distribution protocol, which provides a secured connectivity between network devices. It also provides a group management function. TIDP group : A closed group of network devices which share authentication and encryption keys for message exchange. TMS : TMS protocol provides information about threats and the mitigation action required for the threats in a TIDP network. TIDP network : TIDP network comprises of one or more TIDP groups.")
ciscoTmsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 0))
ciscoTmsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 1))
ciscoTmsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 2))
ciTmsConsumerGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1))
ciTmsConsumerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2))
ciTmsConsumerThreat = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3))
ciTiTmsConsumerNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 4))
class CTmsConsumerState(TextualConvention, Integer32):
    description = 'This textual description represents the state of the consumer. The semantics are as follows. disabled(1) Consumer is disabled. enabled(2) Consumer is enabled. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("disabled", 1), ("enabled", 2))

class CTmsConsumerRegistrationStatus(TextualConvention, Integer32):
    description = 'This textual description represents the status of registration of consumer with the controller. The semantics are as follows. notRegistered(1) Consumer is not registered to the controller. registrationRequestSent(2) A registration request has been sent to the controller and consumer is waiting for the response. registered(3) Consumer is registered with the controller. registrationFailed(4) The most recent registration attempt has failed. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notRegistered", 1), ("registrationRequestSent", 2), ("registered", 3), ("registrationFailed", 4))

class CTmsThreatStatus(TextualConvention, Integer32):
    description = 'This textual convention represents the status of the threat received from a controller in a TIDP group on the consumer. unknown(1) Unknown state. active(2) Threat is successfully activated, i.e. mitigation action has been successfully enforced. inactive(3) Threat is inactivated by controller, i.e. mitigation action is not enforced. created(4) Consumer has recorded the information about the threat mitigation action enforcement and other processing pending for successful activation. pending(5) Mitigation action initiated and waiting for the result. activationFailed(6) Threat activation failed. inactivationFailed(7) Inactivation of threat failed. deleted(8) Threat mitigation is removed from the consumer. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 1), ("active", 2), ("inactive", 3), ("created", 4), ("pending", 5), ("activationFailed", 6), ("inactivationFailed", 7), ("deleted", 8))

class CTmsActionType(TextualConvention, Integer32):
    description = 'This textual convention represents the types of actions that can be applied to mitigate a threat. ignore(1) No action, threat ignored. aclDrop(2) ACL drop action. fpmDrop(3) FPM drop. redirect(4) Redirect traffic to a particular host. police(5) Police the traffic. setIPDscp(6) Set the DSCP in IP header of packet to a specific value. localException(7) Local exception enforced for the threat. quarantine(8) Quarantine the infected host. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("ignore", 1), ("aclDrop", 2), ("fpmDrop", 3), ("redirect", 4), ("police", 5), ("setIPDscp", 6), ("localException", 7), ("quarantine", 8))

class CTmsActionParamIdType(TextualConvention, Integer32):
    description = 'This textual convention represents the type of action parameters. The semantics are as follows. noParams(1), No parameters required for the action. cir(2), police : Committed information rate. bir(3), police : Peak information rate. be(4), police : Excess burst. nexthop(5), redirect : Address of host to redirect the traffic to. dscpVal(6), setIpDscp : DSCP value in IP header to be set to. vlanId(7) Quarantine : Quarantine the host to this vlan. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("noParams", 1), ("cir", 2), ("bir", 3), ("be", 4), ("nexthop", 5), ("dscpVal", 6), ("vlanId", 7))

class CTmsActionParamType(TextualConvention, Integer32):
    description = 'This textual convention represents the type of the action parameter. The semantics as follows. unsigned(1), Unsigned integer. networkAddress(2), represents a network address e,g, IPv4 and IPv6 address. string(3) A sequence of octets. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unsigned", 1), ("networkAddress", 2), ("string", 3))

ciTmsActiveThreats = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsActiveThreats.setStatus('current')
if mibBuilder.loadTexts: ciTmsActiveThreats.setDescription('This object represents the total number of active threats in the consumer.')
ciTmsInActiveThreats = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsInActiveThreats.setStatus('current')
if mibBuilder.loadTexts: ciTmsInActiveThreats.setDescription('This object represents the total number of inactive threats in the consumer.')
ciTmsConsumerDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsConsumerDeviceId.setStatus('current')
if mibBuilder.loadTexts: ciTmsConsumerDeviceId.setDescription("This object is used for configuring the name of the consumer. This could be any generic string, e.g. 'Consumer-1'.")
ciTmsGroupsMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(32767)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsGroupsMaxEntries.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupsMaxEntries.setDescription('This object represents the maximum number of rows in ciTmsGroupTable.')
ciTmsThreatsMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsThreatsMaxEntries.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatsMaxEntries.setDescription('This object represents the maximum number of rows in ciTmsThreatTable.')
ciTmsThreatActionMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsThreatActionMaxEntries.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionMaxEntries.setDescription('This object represents the maximum number of rows in ciTmsThreatActionTable.')
ciTmsInterfaceMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsInterfaceMaxEntries.setStatus('current')
if mibBuilder.loadTexts: ciTmsInterfaceMaxEntries.setDescription('This object represents the maximum number of rows in ciTmsThreatInterfaceTable.')
ciTmsConsumerState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 1, 8), CTmsConsumerState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsConsumerState.setStatus('current')
if mibBuilder.loadTexts: ciTmsConsumerState.setDescription('This object represents the current state of the consumer.')
ciTmsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1), )
if mibBuilder.loadTexts: ciTmsGroupTable.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupTable.setDescription("Consumer can participate in one of more TIDP groups, each group having one or more controllers. The table represents the list of controllers in a particular group. A row is added to the table when a controller's IP address is added to the list of known controllers. A row is deleted from the table when a controller's IP address is removed from the list of known controllers.")
ciTmsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIpType"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIp"))
if mibBuilder.loadTexts: ciTmsGroupEntry.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupEntry.setDescription('Each entry represents a conceptual row in ciTmsGroupTable and corresponds to the information about the controller and TIDP group a consumer is registered with.')
ciTmsGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ciTmsGroupId.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupId.setDescription('This object represents the TIDP group Id.')
ciTmsControllerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: ciTmsControllerIpType.setStatus('current')
if mibBuilder.loadTexts: ciTmsControllerIpType.setDescription('This object represents the type of the network address available through ciTmsControllerIp.')
ciTmsControllerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: ciTmsControllerIp.setStatus('current')
if mibBuilder.loadTexts: ciTmsControllerIp.setDescription('This object represents the network address of the controller. The type of the address is represented by ciTmsControllerIpType.')
ciTmsGroupConsumerRegStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 4), CTmsConsumerRegistrationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsGroupConsumerRegStatus.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupConsumerRegStatus.setDescription("This object represents the status of consumer's registration with the controller in a TIDP group.")
ciTmsGroupNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciTmsGroupNotifEnable.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupNotifEnable.setDescription("This object indicates whether following notifications should be generated for a group : 1. ciscoTmsControllerUnreachable 2. ciscoTmsThreatStatusChange 3. ciscoTmsMitigationActionFailed Setting this object to 'true' enables the group level notifications, while setting it to 'false' disables the group level notifications.")
ciTmsGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciTmsGroupStorageType.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupStorageType.setDescription('The storage type for this conceptual row.')
ciTmsGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciTmsGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: ciTmsGroupRowStatus.setDescription("The status of this conceptual row. An entry can be created/deleted using this object. A row may be deleted by setting the RowStatus to 'destroy'.")
ciTmsThreatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1), )
if mibBuilder.loadTexts: ciTmsThreatTable.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatTable.setDescription('This table represents the information about the threats the consumer has received from various controllers belonging to different TIDP groups it is registered with. A threat received from one controller in a TIDP group is uniquely identified by the threat id and owner id. A row is added to the table when a threat notification message is received by the consumer from the controller in a TIDP group. A row is deleted from the table when the consumer deletes the information about a threat received from a controller in a TIDP group.')
ciTmsThreatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatOwner"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIpType"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIp"))
if mibBuilder.loadTexts: ciTmsThreatEntry.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatEntry.setDescription("Each entry represents a conceptual row in ciTmsThreatTable and corresponds to the information about a threat and it's various attributes, received from a controller in a given TIDP group.")
ciTmsThreatOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ciTmsThreatOwner.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatOwner.setDescription('This object identifies the controller that has notified the consumer about the threat.')
ciTmsThreatId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ciTmsThreatId.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatId.setDescription('This object represents the identifier for the particular threat.')
ciTmsThreatVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatVer.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatVer.setDescription('This object represents the version of the threat.')
ciTmsThreatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 4), CTmsThreatStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatStatus.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatStatus.setDescription('This object represents the current status of the threat on the consumer. This is evaluated locally on consumer.')
ciTmsThreatClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatClass.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatClass.setDescription("This object represents the class of threat. An example of class is 'Worm'.")
ciTmsThreatName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatName.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatName.setDescription("This object represents name of the threat. An example of threat name is 'WittyWorm'.")
ciTmsThreatActiveTimeDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatActiveTimeDuration.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActiveTimeDuration.setDescription('This object represents the duration the threat has been active for.')
ciTmsThreatPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatPriority.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatPriority.setDescription('This object represents the priority at which the consumer responds to this threat. A higher value indicates a lower priority for the threat and vice versa.')
ciTmsThreatTcdf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatTcdf.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatTcdf.setDescription("This object represents the TCDF related information received in the threat. For example, <tcdf> <match> <eq field='ip.dst_addr' value='10.10.10.1'> </eq> </match> </tcdf>.")
ciTmsThreatActionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2), )
if mibBuilder.loadTexts: ciTmsThreatActionTable.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionTable.setDescription('This table represents mitigation action for the respective threat. A threat is uniquely represented by the threat id, owner id, controller IP and TIDP group ID and hence corresponding objects are used as indices. A row is added to the table when the consumer enforces a mitigation action as a result of receiving a threat message from a controller in a TIDP group. A row is deleted from the table when the consumer removes the mitigation action taken for the threat received from a controller in a TIDP group.')
ciTmsThreatActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatOwner"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIpType"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIp"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatAction"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamId"))
if mibBuilder.loadTexts: ciTmsThreatActionEntry.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionEntry.setDescription('Each entry represents a conceptual row in ciTmsThreatActionTable and corresponds to the information about the mitigation action applied for a particular threat.')
ciTmsThreatAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 1), CTmsActionType())
if mibBuilder.loadTexts: ciTmsThreatAction.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatAction.setDescription('This object represents the mitigation action taken by the consumer for a threat.')
ciTmsThreatActionParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 2), CTmsActionParamIdType())
if mibBuilder.loadTexts: ciTmsThreatActionParamId.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionParamId.setDescription('This object identifies an action parameter.')
ciTmsThreatActionParamType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 3), CTmsActionParamType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatActionParamType.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionParamType.setDescription('This object represents the type of an action parameter.')
ciTmsThreatActionParamLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatActionParamLength.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionParamLength.setDescription('This object represents the length of the action parameter identified by ciTmsThreatActionParamId.')
ciTmsThreatActionParamValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatActionParamValue.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionParamValue.setDescription("This object represents the value of the parameter identified by ciTmsThreatActionParamId. This value should be interpreted using type and length of the parameter value represented by ciTmsThreatActionParamType and ciTmsThreatActionParamLength respectively. In case of ciTmsThreatActionParamType being 'networkAddress', the first octet of this object will indicate the type of network address, i.e. it will be set to one of InetAddressType values as appropriate. The subsequent octets will carry the network address. For example, the first octet of ciTmsThreatActionParamValue will carry the value ipv4(1) and the next four octets will carry the respective octets of the IP address.")
ciTmsThreatActionFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciTmsThreatActionFailReason.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatActionFailReason.setDescription("This object specifies the reason for the failure of a particular threat mitigation action. 'OER mitigation not supported' is an example of the value populated for this object. For successfully mitigated threats, this will be a zero-length string.")
ciTmsThreatInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 3), )
if mibBuilder.loadTexts: ciTmsThreatInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatInterfaceTable.setDescription('The application of threat mitigation is typically done on one or more interfaces. This table represents the status of mitigation action applied on the respective interfaces. A row is added to the table when the consumer enforces a mitigation action on a interface as a result of receiving a threat message from a controller in a TIDP group. A row is deleted from the table when the consumer removes a mitigation action taken on a interface as a result of threat received from a controller in a TIDP group.')
ciTmsThreatInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatOwner"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupId"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIpType"), (0, "CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsControllerIp"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciTmsThreatInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: ciTmsThreatInterfaceEntry.setDescription('Each entry represents a row in ciTmsThreatInterfaceTable and corresponds to the information about the interface on which the threat mitigation action is applied.')
ciThreatInterfaceMitigationApplied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 3, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciThreatInterfaceMitigationApplied.setStatus('current')
if mibBuilder.loadTexts: ciThreatInterfaceMitigationApplied.setDescription("This object indicates whether the mitigation action for a particular threat has been successfully applied on an interface or not. A value of 'true' indicates the successful application of mitigation action, while a value of 'false' indicates that the mitigation action couldn't be successfully applied on the interface. ")
ciTmsConsStateChangeNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 603, 1, 4, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciTmsConsStateChangeNotifEnable.setStatus('current')
if mibBuilder.loadTexts: ciTmsConsStateChangeNotifEnable.setDescription("This object is used to control the generation of the ciscoTmsConsStateChange notifications. A value of 'true' indicates that the agent is enabled to generate this notification. A value of 'false' indicates the generation of this notification is currently disabled.")
ciscoTmsConsStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 603, 0, 1)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsConsumerState"))
if mibBuilder.loadTexts: ciscoTmsConsStateChange.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsConsStateChange.setDescription('This notification is generated to indicate the current operational state of the consumer, when the consumer undergoes a state change.')
ciscoTmsControllerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 603, 0, 2)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupConsumerRegStatus"))
if mibBuilder.loadTexts: ciscoTmsControllerUnreachable.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsControllerUnreachable.setDescription('This notification is generated by the consumer when the controller it has registered with becomes unreachable. This notification will be generated only when notification generation is enabled for the corresponding TIDP group through ciTmsGroupNotifEnable.')
ciscoTmsThreatStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 603, 0, 3)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatVer"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatStatus"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatPriority"))
if mibBuilder.loadTexts: ciscoTmsThreatStatusChange.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsThreatStatusChange.setDescription('This notification is generated by the consumer when consumer acts upon a particular threat and changes the state of the threat. This notification will be generated only when notification generation is enabled for the corresponding TIDP group through ciTmsGroupNotifEnable.')
ciscoTmsMitigationActionFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 603, 0, 4)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamType"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamLength"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamValue"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionFailReason"))
if mibBuilder.loadTexts: ciscoTmsMitigationActionFailed.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsMitigationActionFailed.setDescription('This notification is generated by the consumer when the mitigation action enforced for a particular threat fails. The notification contains the information about the failed mitigation action and the reason for the failure indicated by ciTmsThreatActionFailReason. This notification will be generated only when notification generation is enabled for the corresponding TIDP group through ciTmsGroupNotifEnable.')
ciscoTmsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 1))
ciscoTmsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2))
ciscoTmsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 1, 1)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsConsumerGroup"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsThreatGroup"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsThreatActionGroup"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsThreatInterfaceGroup"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsMIBCompliance = ciscoTmsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoThreatMitigationServiceMIB module.')
ciscoTmsConsumerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2, 1)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsConsumerDeviceId"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupsMaxEntries"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatsMaxEntries"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionMaxEntries"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsInterfaceMaxEntries"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsConsumerState"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsConsStateChangeNotifEnable"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupConsumerRegStatus"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupNotifEnable"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupStorageType"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsConsumerGroup = ciscoTmsConsumerGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsConsumerGroup.setDescription("This collection of objects represent the information about the TIDP groups, the controller(s) in a TIDP group and the status of a consumer's registration with the controller in the TIDP group.")
ciscoTmsThreatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2, 2)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsActiveThreats"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsInActiveThreats"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatVer"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatStatus"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatClass"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatName"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActiveTimeDuration"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatPriority"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatTcdf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsThreatGroup = ciscoTmsThreatGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsThreatGroup.setDescription('This collection of objects represents the information about the threats detected, as being targeted towards a consumer, by a controller in a TIDP group.')
ciscoTmsThreatActionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2, 3)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamType"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamLength"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionParamValue"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciTmsThreatActionFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsThreatActionGroup = ciscoTmsThreatActionGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsThreatActionGroup.setDescription('This collection of objects represent the information about the mitigation actions taken for the respective threats by the consumer.')
ciscoTmsThreatInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2, 4)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciThreatInterfaceMitigationApplied"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsThreatInterfaceGroup = ciscoTmsThreatInterfaceGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsThreatInterfaceGroup.setDescription('This collection of objects represent the information about the interfaces on which the mitigation action for a particular threat is applied.')
ciscoTmsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 603, 2, 2, 5)).setObjects(("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsConsStateChange"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsControllerUnreachable"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsThreatStatusChange"), ("CISCO-THREAT-MITIGATION-SERVICE-MIB", "ciscoTmsMitigationActionFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTmsNotificationGroup = ciscoTmsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTmsNotificationGroup.setDescription('This collection of objects represent the notifications generated by the consumer.')
mibBuilder.exportSymbols("CISCO-THREAT-MITIGATION-SERVICE-MIB", ciscoTmsMIBObjects=ciscoTmsMIBObjects, ciTmsThreatActionFailReason=ciTmsThreatActionFailReason, PYSNMP_MODULE_ID=ciscoThreatMitigationServiceMIB, ciTmsActiveThreats=ciTmsActiveThreats, ciscoTmsThreatStatusChange=ciscoTmsThreatStatusChange, ciTmsThreatTcdf=ciTmsThreatTcdf, ciTmsControllerIpType=ciTmsControllerIpType, ciTmsControllerIp=ciTmsControllerIp, ciscoTmsNotificationGroup=ciscoTmsNotificationGroup, ciTmsThreatActionTable=ciTmsThreatActionTable, CTmsActionParamType=CTmsActionParamType, ciTmsThreatActionParamType=ciTmsThreatActionParamType, ciTmsThreatActionParamId=ciTmsThreatActionParamId, ciscoTmsMIBNotifs=ciscoTmsMIBNotifs, ciTmsGroupConsumerRegStatus=ciTmsGroupConsumerRegStatus, ciTmsGroupEntry=ciTmsGroupEntry, ciscoTmsThreatGroup=ciscoTmsThreatGroup, ciTmsThreatClass=ciTmsThreatClass, ciscoTmsMIBGroups=ciscoTmsMIBGroups, ciscoTmsMitigationActionFailed=ciscoTmsMitigationActionFailed, ciTmsThreatActionParamLength=ciTmsThreatActionParamLength, ciTmsConsumerGlobals=ciTmsConsumerGlobals, ciTmsGroupNotifEnable=ciTmsGroupNotifEnable, ciscoTmsConsStateChange=ciscoTmsConsStateChange, ciTmsConsumerGroup=ciTmsConsumerGroup, ciTmsThreatPriority=ciTmsThreatPriority, ciTmsGroupTable=ciTmsGroupTable, ciTmsThreatStatus=ciTmsThreatStatus, ciscoTmsMIBCompliances=ciscoTmsMIBCompliances, ciTmsInActiveThreats=ciTmsInActiveThreats, ciTmsGroupsMaxEntries=ciTmsGroupsMaxEntries, CTmsThreatStatus=CTmsThreatStatus, ciTmsThreatActionMaxEntries=ciTmsThreatActionMaxEntries, ciTmsConsumerThreat=ciTmsConsumerThreat, ciTmsInterfaceMaxEntries=ciTmsInterfaceMaxEntries, ciTmsThreatTable=ciTmsThreatTable, CTmsActionParamIdType=CTmsActionParamIdType, ciTmsConsumerDeviceId=ciTmsConsumerDeviceId, ciTmsGroupRowStatus=ciTmsGroupRowStatus, ciTmsThreatVer=ciTmsThreatVer, CTmsConsumerState=CTmsConsumerState, ciTmsThreatActionEntry=ciTmsThreatActionEntry, ciTmsThreatInterfaceTable=ciTmsThreatInterfaceTable, ciTmsThreatInterfaceEntry=ciTmsThreatInterfaceEntry, ciscoTmsThreatInterfaceGroup=ciscoTmsThreatInterfaceGroup, CTmsActionType=CTmsActionType, ciscoThreatMitigationServiceMIB=ciscoThreatMitigationServiceMIB, ciTmsGroupStorageType=ciTmsGroupStorageType, ciTmsThreatEntry=ciTmsThreatEntry, ciscoTmsConsumerGroup=ciscoTmsConsumerGroup, ciTiTmsConsumerNotifs=ciTiTmsConsumerNotifs, ciTmsThreatsMaxEntries=ciTmsThreatsMaxEntries, ciTmsThreatOwner=ciTmsThreatOwner, ciTmsThreatActiveTimeDuration=ciTmsThreatActiveTimeDuration, ciscoTmsMIBCompliance=ciscoTmsMIBCompliance, ciscoTmsControllerUnreachable=ciscoTmsControllerUnreachable, ciscoTmsThreatActionGroup=ciscoTmsThreatActionGroup, ciTmsThreatId=ciTmsThreatId, ciTmsThreatName=ciTmsThreatName, ciTmsThreatActionParamValue=ciTmsThreatActionParamValue, ciTmsConsumerState=ciTmsConsumerState, ciThreatInterfaceMitigationApplied=ciThreatInterfaceMitigationApplied, ciTmsGroupId=ciTmsGroupId, ciTmsThreatAction=ciTmsThreatAction, ciscoTmsMIBConform=ciscoTmsMIBConform, ciTmsConsStateChangeNotifEnable=ciTmsConsStateChangeNotifEnable, CTmsConsumerRegistrationStatus=CTmsConsumerRegistrationStatus)
