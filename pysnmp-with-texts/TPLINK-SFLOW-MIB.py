#
# PySNMP MIB module TPLINK-SFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-SFLOW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, TimeTicks, iso, Gauge32, ModuleIdentity, ObjectIdentity, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Bits, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "TimeTicks", "iso", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Bits", "NotificationType", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkSflowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 95))
tplinkSflowMIB.setRevisions(('2015-09-23 10:07',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkSflowMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkSflowMIB.setLastUpdated('201509231007Z')
if mibBuilder.loadTexts: tplinkSflowMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkSflowMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkSflowMIB.setDescription('Private MIB for the sFlow configuration.')
tplinkSflowMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1))
tpSflowGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1))
tpSflowCollector = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2))
tpSflowSampler = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3))
tpSflowGlobalConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowGlobalConfigStatus.setStatus('current')
if mibBuilder.loadTexts: tpSflowGlobalConfigStatus.setDescription('Allows you to Enable/Disable the sFlow function. 0. disable 1. enable')
tpSflowGlobalConfigAddress = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowGlobalConfigAddress.setStatus('current')
if mibBuilder.loadTexts: tpSflowGlobalConfigAddress.setDescription('The IP address of the agent.')
tpSflowGlobalConfigVersion = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowGlobalConfigVersion.setStatus('current')
if mibBuilder.loadTexts: tpSflowGlobalConfigVersion.setDescription('The sFlow version number.')
tpSflowCollectorTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1), )
if mibBuilder.loadTexts: tpSflowCollectorTable.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorTable.setDescription('A list of sflow collector entries. Here you can configure the sflow collector.')
tpSflowCollectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-SFLOW-MIB", "tpSflowCollectorCollectorId"))
if mibBuilder.loadTexts: tpSflowCollectorEntry.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorEntry.setDescription('An entry contains the information of sflow collector.')
tpSflowCollectorCollectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowCollectorCollectorId.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorCollectorId.setDescription('The collector ID.')
tpSflowCollectorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorDescription.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorDescription.setDescription('This description of the collector.')
tpSflowCollectorCollectorIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorCollectorIp.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorCollectorIp.setDescription('The IP address of the collector')
tpSflowCollectorCollectorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorCollectorPort.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorCollectorPort.setDescription('The UDP port of the collector.')
tpSflowCollectorMaxDatagram = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorMaxDatagram.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorMaxDatagram.setDescription('The max datagram of the collector.')
tpSflowCollectorTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowCollectorTimeout.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorTimeout.setDescription('The timeout value of the collector.')
tpSflowCollectorLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowCollectorLifetime.setStatus('current')
if mibBuilder.loadTexts: tpSflowCollectorLifetime.setDescription('The lifetime of the collector.')
tpSflowSamplerTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1), )
if mibBuilder.loadTexts: tpSflowSamplerTable.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerTable.setDescription('A list of sflow sampler entries. Here you can configure the sflow sampler.')
tpSflowSamplerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpSflowSamplerEntry.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerEntry.setDescription('An entry contains the information of the sflow sampler.')
tpSflowSamplerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowSamplerPort.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerPort.setDescription('The port number of the switch.')
tpSflowSamplerCollectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerCollectorId.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerCollectorId.setDescription('The collector ID.')
tpSflowSamplerIngRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerIngRate.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerIngRate.setDescription('The ratio of ingress packets to the samples generated(Range:0, 1024-65535).')
tpSflowSamplerEgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerEgRate.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerEgRate.setDescription('The ratio of egress packets to the samples generated(Range:0, 1024-65535).')
tpSflowSamplerMaxHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(18, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSflowSamplerMaxHeader.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerMaxHeader.setDescription('The maximum number of bytes that should be sampled.')
tpSflowSamplerPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 95, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSflowSamplerPortLag.setStatus('current')
if mibBuilder.loadTexts: tpSflowSamplerPortLag.setDescription('The LAG number which the port belongs to.')
mibBuilder.exportSymbols("TPLINK-SFLOW-MIB", tpSflowGlobalConfigStatus=tpSflowGlobalConfigStatus, tpSflowSamplerCollectorId=tpSflowSamplerCollectorId, tpSflowCollectorCollectorId=tpSflowCollectorCollectorId, tpSflowSamplerPortLag=tpSflowSamplerPortLag, tpSflowSamplerMaxHeader=tpSflowSamplerMaxHeader, tpSflowCollectorDescription=tpSflowCollectorDescription, tpSflowCollector=tpSflowCollector, tpSflowSamplerIngRate=tpSflowSamplerIngRate, tpSflowCollectorCollectorIp=tpSflowCollectorCollectorIp, tpSflowSamplerEgRate=tpSflowSamplerEgRate, tpSflowCollectorLifetime=tpSflowCollectorLifetime, tpSflowSamplerPort=tpSflowSamplerPort, tpSflowCollectorTimeout=tpSflowCollectorTimeout, tpSflowGlobalConfig=tpSflowGlobalConfig, tpSflowSampler=tpSflowSampler, PYSNMP_MODULE_ID=tplinkSflowMIB, tpSflowSamplerEntry=tpSflowSamplerEntry, tpSflowCollectorTable=tpSflowCollectorTable, tpSflowCollectorCollectorPort=tpSflowCollectorCollectorPort, tpSflowGlobalConfigAddress=tpSflowGlobalConfigAddress, tpSflowCollectorMaxDatagram=tpSflowCollectorMaxDatagram, tplinkSflowMIB=tplinkSflowMIB, tpSflowCollectorEntry=tpSflowCollectorEntry, tpSflowGlobalConfigVersion=tpSflowGlobalConfigVersion, tpSflowSamplerTable=tpSflowSamplerTable, tplinkSflowMIBObjects=tplinkSflowMIBObjects)
