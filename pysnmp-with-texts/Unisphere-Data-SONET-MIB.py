#
# PySNMP MIB module Unisphere-Data-SONET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-SONET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:32:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, ModuleIdentity, TimeTicks, Integer32, ObjectIdentity, Counter64, Gauge32, Unsigned32, Counter32, NotificationType, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "TimeTicks", "Integer32", "ObjectIdentity", "Counter64", "Gauge32", "Unsigned32", "Counter32", "NotificationType", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdNextIfIndex, = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdNextIfIndex")
usdSonetMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7))
usdSonetMIB.setRevisions(('2001-10-10 20:42', '2001-01-02 18:00', '1998-11-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdSonetMIB.setRevisionsDescriptions(('Deprecated usdSonetMediumType, usdSonetMediumCircuitIdentifier and usdSonetVTType.', 'Expanded MIB to include following tables and objects: usdSonetPathCapabilityTable usdSonetPathNextIfIndex usdSonetPathTable usdSonetVTNextIfIndex usdSonetVTTable ', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: usdSonetMIB.setLastUpdated('200110102042Z')
if mibBuilder.loadTexts: usdSonetMIB.setOrganization('Unisphere Networks, Inc.')
if mibBuilder.loadTexts: usdSonetMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886 USA Tel: +1 978 589 5800 Email: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdSonetMIB.setDescription('The SONET MIB for the Unisphere Networks Inc. enterprise.')
class UsdSonetLineSpeed(TextualConvention, Integer32):
    description = 'The set of SONET Line Speeds.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("sonetUnknownSpeed", 0), ("sonetOc1Stm0", 1), ("sonetOc3Stm1", 2), ("sonetOc12Stm3", 3), ("sonetOc48Stm16", 4))

class UsdSonetLogicalPathChannel(TextualConvention, Integer32):
    description = 'A SONET Path channel description that uniquely identifies the SONET Path and is administratively assigned.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class UsdSonetPathHierarchy(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'Represents textual information taken from the NVT ASCII character set. The SONET path hierarchy is based upon the SONET line capacity. Configuration examples follow the diagram below, which depicts the SONET Path hierarchy. OC-192/STM-64 ^ | OC-48/STM-16 (1-4) ^ | OC-12/STM-4 (1-4) ^ | OC-3/STM-1 (1-4) ^ | OC-1/STM-0 (1-3) ^ | ^----------------^----------------^ | | | DS3 (1) VT1.5/TU11 DS1 (1-28) VT2/TU12 (1-21) For Line Speed = OC-48/STM-16: When the entire capacity contains only one path, no specifier is used. OC-12/STM-4 Path To specify an OC-12 path over OC-48 provide a single digit of the form a where: a - OC-12/STM-4 path number (1-4) OC-3/STM-1 Path To specify an OC-3 Path over OC-48 provide two digits of the form a/b where: a - OC-12/STM-4 path number (1-4) b - OC-3/STM-1 path within the OC-12 (1-4) OC-1/STM-0 Path To specify an OC1 Path over OC-48 provide three digits of the form a/b/c where: a - OC-12/STM-4 path number (1-4) b - OC-3/STM-1 path number within OC-12 (1-4) c - OC-1/STM-0 path number within OC-3 (1-3) For Line Speed = OC-12/STM-4: OC-12/STM-4 Path: When entire line capacity contains only one path, no channel-specifier is used. OC-3/STM-1 Path: To specify an OC-3 path over OC-12 provide a single digit of the form a where: a - OC-3/STM-1 path within the OC-12 (1-4) OC-1 Path: To specify an OC-1 path over OC-12 provide two digits of the form a/b where: a - OC-3/STM-1 path within the OC-12 (1-4) b - OC-1/STM-0 path within the OC-3 (1-3) For Line Speed = OC-3/STM-1: OC-3/STM-1 Path: When entire line capacity contains only one path, no channel-specifier is used. OC-1 Path: To specify an OC-1 path over OC-3 provide one digit of the form a where: a - OC-1/STM-1 path within the OC-3 (1-3) '
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class UsdSonetVTType(TextualConvention, Integer32):
    description = 'The SONET Virtual Tributary Type. This TC has been deprecated because RFC2558 provides this information in SONET-MIB.sonetVTCurrentWidth.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5))
    namedValues = NamedValues(("tribVT15TU11", 0), ("tribVT20TU12", 1), ("tribVT3", 3), ("tribVT6", 4), ("tribVT6c", 5))

usdSonetObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1))
usdSonetPathObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2))
usdSonetVTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3))
usdSonetMediumTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1), )
if mibBuilder.loadTexts: usdSonetMediumTable.setStatus('current')
if mibBuilder.loadTexts: usdSonetMediumTable.setDescription('This table contains entries for SONET interfaces present in the system.')
usdSonetMediumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: usdSonetMediumEntry.setStatus('current')
if mibBuilder.loadTexts: usdSonetMediumEntry.setDescription('Each entry describes the characteristics of an SONET interface.')
usdSonetMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdSonetMediumType.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetMediumType.setDescription('This variable identifies whether a SONET or a SDH signal is used across this interface. This object was deprecated because the same information is provided by the SONET-MIB.sonetMediumType object (RFC 2558).')
usdSonetMediumLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("sonetNoLoop", 0), ("sonetFacilityLoop", 1), ("sonetTerminalLoop", 2), ("sonetOtherLoop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdSonetMediumLoopbackConfig.setStatus('current')
if mibBuilder.loadTexts: usdSonetMediumLoopbackConfig.setDescription('The current loopback state of the SONET/SDH interface. The values mean: sonetNoLoop Not in the loopback state. A device that is not capable of performing a loopback on this interface shall always return this value. sonetFacilityLoop The received signal at this interface is looped back out through the corresponding transmitter in the return direction. sonetTerminalLoop The signal that is about to be transmitted is connected to the associated incoming receiver. sonetOtherLoop Loopbacks that are not defined here.')
usdSonetMediumTimingSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("loop", 0), ("internalModule", 1), ("internalChassis", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdSonetMediumTimingSource.setStatus('current')
if mibBuilder.loadTexts: usdSonetMediumTimingSource.setDescription('Selects the source from which transmit timing is derived. loop(0) indicates timing is recovered from the receiver; internalModule(1) indicates timing is from the module associated with this interface; internalChassis(3) indicates timing is taken from the internal system timing reference.')
usdSonetMediumCircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdSonetMediumCircuitIdentifier.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetMediumCircuitIdentifier.setDescription("This variable contains the transmission vendor's circuit identifier, for the purpose of facilitating troubleshooting. This object was deprecated because the same information is provided by the SONET-MIB.sonetMediumCircuitIdentifier object (RFC 2558).")
usdSonetPathCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1), )
if mibBuilder.loadTexts: usdSonetPathCapabilityTable.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathCapabilityTable.setDescription('This table contains entries for SONET Paths present in the system.')
usdSonetPathCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: usdSonetPathCapabilityEntry.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathCapabilityEntry.setDescription('Each entry describes the SONET path capability of a SONET interface. This table is index by the ifIndex of the SONET interface.')
usdSonetPathRemoveFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathRemoveFlag.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathRemoveFlag.setDescription('This variable identifies whether a SONET/SDH supports the deletion of SONET Paths. A value of true(1) indicates the SONET path is removable; a value of false(2) indicates the SONET path cannot be removed. ')
usdSonetPathChannelized = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathChannelized.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathChannelized.setDescription('Identifies whether or not this SONET interface supports channelization. A value of true(1) indicates the SONET path is channelized; a value of false(2) indicates the SONET path is not channelized.')
usdSonetPathMaximumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathMaximumChannels.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathMaximumChannels.setDescription('Identifies the maximum number of SONET paths/channels for this interface.')
usdSonetPathMinimumPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 4), UsdSonetLineSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathMinimumPathSpeed.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathMinimumPathSpeed.setDescription('Identifies the minimum SONET path speed for this interface.')
usdSonetPathMaximumPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 5), UsdSonetLineSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathMaximumPathSpeed.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathMaximumPathSpeed.setDescription('Identifies the maximum SONET path speed for this interface.')
usdSonetPathNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 2), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetPathNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in usdSonetPathTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
usdSonetPathTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3), )
if mibBuilder.loadTexts: usdSonetPathTable.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathTable.setDescription('This table contains entries for SONET Path interfaces present in the system.')
usdSonetPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1), ).setIndexNames((0, "Unisphere-Data-SONET-MIB", "usdSonetPathIfIndex"))
if mibBuilder.loadTexts: usdSonetPathEntry.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathEntry.setDescription('Each entry describes the characteristics of an SONET Path interface.')
usdSonetPathIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdSonetPathIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathIfIndex.setDescription('The ifIndex of the SONET Path interface. When creating entries in this table, suitable values for this object are determined by reading usdSonetPathNextIfIndex.')
usdSonetPathLogicalChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 2), UsdSonetLogicalPathChannel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetPathLogicalChannel.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathLogicalChannel.setDescription('The logical channel number assigned to this SONET Path. If the underlying SONET interface does not support channelization, the value of this object is zero.')
usdSonetPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 3), UsdSonetLineSpeed()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetPathSpeed.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathSpeed.setDescription('The line speed associated with this SONET PATH.')
usdSonetPathHierarchy = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 4), UsdSonetPathHierarchy()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetPathHierarchy.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathHierarchy.setDescription('The SONET Path hierarchy associated with this path.')
usdSonetPathLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetPathLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathLowerIfIndex.setDescription('The ifIndex of the interface over which this SONET Path interface is to be layered - typically a SONET/SDH interface. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
usdSonetPathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetPathRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: usdSonetPathRowStatus usdSonetPathLogicalChannel usdSonetPathSpeed usdSonetPathHierarchy usdSonetPathLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for usdSonetPathIfIndex must have been determined previously, by reading usdSonetPathNextIfIndex. The interface identified by the usdSonetPathLowerIfIndex must exist. The usdSonetPathSpeed must be consistent with the speed for the channel specified by the usdSonetPathHierarchy, based on the speed of the interface identified by the usdSonetPathLowerIfIndex. A corresponding entry in ifTable/ifXTable/usdIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
usdSonetVTNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSonetVTNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in usdSonetVTTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
usdSonetVTTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2), )
if mibBuilder.loadTexts: usdSonetVTTable.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTTable.setDescription('This table contains entries for SONET Virtual Tributary interfaces present in the system. This table augments the standard SONET-MIB.sonetVTCurrentTable.')
usdSonetVTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1), ).setIndexNames((0, "Unisphere-Data-SONET-MIB", "usdSonetVTIfIndex"))
if mibBuilder.loadTexts: usdSonetVTEntry.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTEntry.setDescription('Each entry describes the characteristics of an SONET Virtual Tributary interface.')
usdSonetVTIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdSonetVTIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTIfIndex.setDescription('The ifIndex of the SONET Virtual Tributary interface. When creating entries in this table, suitable values for this object are determined by reading usdSonetVTNextIfIndex.')
usdSonetVTPathLogicalChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 2), UsdSonetLogicalPathChannel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTPathLogicalChannel.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTPathLogicalChannel.setDescription('The SONET Path logical channel number associated with this virtual tributary.')
usdSonetVTType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 3), UsdSonetVTType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTType.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetVTType.setDescription('The SONET virtual tributary type. This object was deprecated because the same information is provided in the SONET-MIB.sonetVTCurrentWidth object.')
usdSonetVTPathPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTPathPayload.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTPathPayload.setDescription('The SONET Path payload number associated with this virtual tributary. For SDH mode, this is a value with a range from 1-3. For SONET mode, the value of this object is always 1.')
usdSonetVTTributaryGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTTributaryGroup.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTTributaryGroup.setDescription('The SONET Path group number for this virtual tributary. In SONET and SDH mode, the value of this object is 1-7.')
usdSonetVTTributarySubChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTTributarySubChannel.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTTributarySubChannel.setDescription('Specifies the virtual tributary number within the tributary group defined by usdSonetVTTributaryGroup object. The value of this object ranges from 1-4 if the tributary type is tribVT15/TU11(0); and the values 1-3 if the tributary type is tribVT20/TU12(1).')
usdSonetVTLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTLowerIfIndex.setDescription('The ifIndex of the interface over which this SONET Virtual Tributary interface is to be layered - typically a SONET PATH interface. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
usdSonetVTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSonetVTRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdSonetVTRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: usdSonetVTRowStatus usdSonetVTPathLogicalChannel usdSonetVTType usdSonetVTPathPayload usdSonetVTTributaryGroup usdSonetVTTributarySubChannel usdSonetVTLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for usdSonetVTIfIndex must have been determined previously, by reading usdSonetVTNextIfIndex. The interface identified by usdSonetVTLowerIfIndex must exist. A corresponding entry in ifTable/ifXTable/usdIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
usdSonetConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4))
usdSonetCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1))
usdSonetGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2))
usdSonetCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 1)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetCompliance = usdSonetCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: usdSonetCompliance.setDescription('Obsolete compliance statement for entities which implement the Unisphere SONET MIB. This statement became obsolete when the SONET Path and SONET VT groups of objects were added.')
usdSonetCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 2)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetGroup"), ("Unisphere-Data-SONET-MIB", "usdSonetPathGroup"), ("Unisphere-Data-SONET-MIB", "usdSonetVirtualTributaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetCompliance2 = usdSonetCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetCompliance2.setDescription('Deprecated compliance statement for entities which implement the Unisphere SONET MIB. This statement became deprecated when the usdSonetMediumType, usdSonetMediumCircuitIdentifier and usdSonetVTType objects were deprecated.')
usdSonetCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 3)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetGroup2"), ("Unisphere-Data-SONET-MIB", "usdSonetPathGroup"), ("Unisphere-Data-SONET-MIB", "usdSonetVirtualTributaryGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetCompliance3 = usdSonetCompliance3.setStatus('current')
if mibBuilder.loadTexts: usdSonetCompliance3.setDescription('The compliance statement for entities which implement the Unisphere SONET MIB.')
usdSonetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 1)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetMediumType"), ("Unisphere-Data-SONET-MIB", "usdSonetMediumLoopbackConfig"), ("Unisphere-Data-SONET-MIB", "usdSonetMediumTimingSource"), ("Unisphere-Data-SONET-MIB", "usdSonetMediumCircuitIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetGroup = usdSonetGroup.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetGroup.setDescription('Deprecated collection of objects providing management of SONET/SDH interfaces in a Unisphere product. This group became deprecated when the usdSonetMediumType and usdSonetMediumCircuitIdentifier objects were deprecated.')
usdSonetPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 2)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetPathRemoveFlag"), ("Unisphere-Data-SONET-MIB", "usdSonetPathChannelized"), ("Unisphere-Data-SONET-MIB", "usdSonetPathMaximumChannels"), ("Unisphere-Data-SONET-MIB", "usdSonetPathMinimumPathSpeed"), ("Unisphere-Data-SONET-MIB", "usdSonetPathMaximumPathSpeed"), ("Unisphere-Data-SONET-MIB", "usdSonetPathNextIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetPathLogicalChannel"), ("Unisphere-Data-SONET-MIB", "usdSonetPathSpeed"), ("Unisphere-Data-SONET-MIB", "usdSonetPathHierarchy"), ("Unisphere-Data-SONET-MIB", "usdSonetPathLowerIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetPathRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetPathGroup = usdSonetPathGroup.setStatus('current')
if mibBuilder.loadTexts: usdSonetPathGroup.setDescription('A collection of objects providing management of SONET/SDH and SONET Path interfaces in a Unisphere product.')
usdSonetVirtualTributaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 3)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetVTNextIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetVTPathLogicalChannel"), ("Unisphere-Data-SONET-MIB", "usdSonetVTType"), ("Unisphere-Data-SONET-MIB", "usdSonetVTPathPayload"), ("Unisphere-Data-SONET-MIB", "usdSonetVTTributaryGroup"), ("Unisphere-Data-SONET-MIB", "usdSonetVTTributarySubChannel"), ("Unisphere-Data-SONET-MIB", "usdSonetVTLowerIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetVTRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetVirtualTributaryGroup = usdSonetVirtualTributaryGroup.setStatus('deprecated')
if mibBuilder.loadTexts: usdSonetVirtualTributaryGroup.setDescription('Deprecated collection of objects providing management of SONET virtual tributaries in a Unisphere product. This group became deprecated when usdSonetVTType was deprecated.')
usdSonetGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 4)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetMediumLoopbackConfig"), ("Unisphere-Data-SONET-MIB", "usdSonetMediumTimingSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetGroup2 = usdSonetGroup2.setStatus('current')
if mibBuilder.loadTexts: usdSonetGroup2.setDescription('A collection of objects providing management of SONET/SDH interfaces in a Unisphere product.')
usdSonetVirtualTributaryGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 5)).setObjects(("Unisphere-Data-SONET-MIB", "usdSonetVTNextIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetVTPathLogicalChannel"), ("Unisphere-Data-SONET-MIB", "usdSonetVTPathPayload"), ("Unisphere-Data-SONET-MIB", "usdSonetVTTributaryGroup"), ("Unisphere-Data-SONET-MIB", "usdSonetVTTributarySubChannel"), ("Unisphere-Data-SONET-MIB", "usdSonetVTLowerIfIndex"), ("Unisphere-Data-SONET-MIB", "usdSonetVTRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSonetVirtualTributaryGroup2 = usdSonetVirtualTributaryGroup2.setStatus('current')
if mibBuilder.loadTexts: usdSonetVirtualTributaryGroup2.setDescription('A collection of objects providing management of SONET virtual tributaries in a Unisphere product.')
mibBuilder.exportSymbols("Unisphere-Data-SONET-MIB", usdSonetGroups=usdSonetGroups, usdSonetPathCapabilityTable=usdSonetPathCapabilityTable, usdSonetVTLowerIfIndex=usdSonetVTLowerIfIndex, usdSonetVTNextIfIndex=usdSonetVTNextIfIndex, usdSonetPathHierarchy=usdSonetPathHierarchy, PYSNMP_MODULE_ID=usdSonetMIB, usdSonetPathRemoveFlag=usdSonetPathRemoveFlag, usdSonetGroup2=usdSonetGroup2, UsdSonetLogicalPathChannel=UsdSonetLogicalPathChannel, UsdSonetVTType=UsdSonetVTType, usdSonetVTEntry=usdSonetVTEntry, usdSonetVTTributarySubChannel=usdSonetVTTributarySubChannel, usdSonetCompliances=usdSonetCompliances, usdSonetVTPathPayload=usdSonetVTPathPayload, usdSonetMediumEntry=usdSonetMediumEntry, usdSonetCompliance=usdSonetCompliance, usdSonetVirtualTributaryGroup2=usdSonetVirtualTributaryGroup2, usdSonetVTTable=usdSonetVTTable, usdSonetPathTable=usdSonetPathTable, usdSonetGroup=usdSonetGroup, usdSonetVTRowStatus=usdSonetVTRowStatus, usdSonetPathEntry=usdSonetPathEntry, usdSonetPathNextIfIndex=usdSonetPathNextIfIndex, usdSonetPathLogicalChannel=usdSonetPathLogicalChannel, usdSonetVirtualTributaryGroup=usdSonetVirtualTributaryGroup, usdSonetConformance=usdSonetConformance, usdSonetMediumTimingSource=usdSonetMediumTimingSource, usdSonetMediumTable=usdSonetMediumTable, usdSonetCompliance2=usdSonetCompliance2, usdSonetMIB=usdSonetMIB, usdSonetPathIfIndex=usdSonetPathIfIndex, usdSonetPathRowStatus=usdSonetPathRowStatus, usdSonetMediumCircuitIdentifier=usdSonetMediumCircuitIdentifier, UsdSonetLineSpeed=UsdSonetLineSpeed, usdSonetPathChannelized=usdSonetPathChannelized, usdSonetVTPathLogicalChannel=usdSonetVTPathLogicalChannel, usdSonetVTType=usdSonetVTType, usdSonetVTTributaryGroup=usdSonetVTTributaryGroup, usdSonetCompliance3=usdSonetCompliance3, usdSonetMediumLoopbackConfig=usdSonetMediumLoopbackConfig, usdSonetObjects=usdSonetObjects, usdSonetVTObjects=usdSonetVTObjects, usdSonetPathMaximumPathSpeed=usdSonetPathMaximumPathSpeed, usdSonetPathLowerIfIndex=usdSonetPathLowerIfIndex, usdSonetPathMaximumChannels=usdSonetPathMaximumChannels, UsdSonetPathHierarchy=UsdSonetPathHierarchy, usdSonetMediumType=usdSonetMediumType, usdSonetVTIfIndex=usdSonetVTIfIndex, usdSonetPathObjects=usdSonetPathObjects, usdSonetPathCapabilityEntry=usdSonetPathCapabilityEntry, usdSonetPathGroup=usdSonetPathGroup, usdSonetPathMinimumPathSpeed=usdSonetPathMinimumPathSpeed, usdSonetPathSpeed=usdSonetPathSpeed)
