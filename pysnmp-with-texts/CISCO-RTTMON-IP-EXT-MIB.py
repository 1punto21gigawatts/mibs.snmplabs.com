#
# PySNMP MIB module CISCO-RTTMON-IP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RTTMON-IP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
rttMonEchoPathAdminEntry, rttMonEchoAdminEntry, rttMonStatsCollectEntry, rttMonCtrlAdminEntry, rttMonLpdGrpStatsEntry, rttMonHistoryCollectionEntry = mibBuilder.importSymbols("CISCO-RTTMON-MIB", "rttMonEchoPathAdminEntry", "rttMonEchoAdminEntry", "rttMonStatsCollectEntry", "rttMonCtrlAdminEntry", "rttMonLpdGrpStatsEntry", "rttMonHistoryCollectionEntry")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
DscpOrAny, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "DscpOrAny")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
IPv6FlowLabelOrAny, = mibBuilder.importSymbols("IPV6-FLOW-LABEL-MIB", "IPv6FlowLabelOrAny")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, Counter64, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, TimeTicks, Bits, Integer32, NotificationType, ModuleIdentity, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "TimeTicks", "Bits", "Integer32", "NotificationType", "ModuleIdentity", "Counter32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoRttMonIPExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 572))
ciscoRttMonIPExtMIB.setRevisions(('2006-08-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoRttMonIPExtMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoRttMonIPExtMIB.setLastUpdated('200608020000Z')
if mibBuilder.loadTexts: ciscoRttMonIPExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoRttMonIPExtMIB.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 553 NETS Email: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoRttMonIPExtMIB.setDescription('This MIB contains extensions to tables in CISCO-RTTMON-MIB to support IP-layer extensions, specifically IPv6 addresses and other information related to IPv6 and other IP information')
crttMonIPExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 572, 1))
ciscoRttMonIPExtMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 572, 2))
ciscoRttMonIPExtMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 572, 2, 1))
ciscoRttMonIPExtMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 572, 2, 2))
crttMonIPEchoAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1), )
if mibBuilder.loadTexts: crttMonIPEchoAdminTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminTable.setDescription('An extension of the rttMonEchoAdminTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of recording the addresses as IPv6 addresses, plus other IPv6 and IP layer extension information')
crttMonIPEchoAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1), )
rttMonEchoAdminEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminEntry"))
crttMonIPEchoAdminEntry.setIndexNames(*rttMonEchoAdminEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPEchoAdminEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminEntry.setDescription('A list of additional objects needed for IPv6 addresses.')
crttMonIPEchoAdminTargetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminTargetAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminTargetAddrType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPEchoAdminTargetAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPEchoAdminTargetAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonEchoAdminTargetAddress), this object contains the value 'unknown'.")
crttMonIPEchoAdminTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminTargetAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminTargetAddress.setDescription('A string which specifies the address of the target. This object, in conjunction with the crttMonIPEchoAdminTargetAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonEchoAdminTargetAddress object, which may only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPEchoAdminTargetAddrType/ crttMonIPEchoAdminTargetAddress AND rttMonEchoAdminTargetAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonEchoAdminTargetAddress OR crttMonIPEchoAdminTargetAddrType/ crttMonIPEchoAdminTargetAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPEchoAdminTargetAddrType/ crttMonIPEchoAdminTargetAddress must be used and rttMonEchoAdminTargetAddress may not be instantiated or may have a zero length string.')
crttMonIPEchoAdminSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminSourceAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminSourceAddrType.setDescription("An enumerated value which specifies the address type of the source. This object must be used along with the crttMonIPEchoAdminSourceAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPEchoAdminSourceAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonEchoAdminSourceAddress), this object contains the value 'unknown'.")
crttMonIPEchoAdminSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminSourceAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminSourceAddress.setDescription('A string which specifies the address of the target. This object, together with the crttMonIPEchoAdminSourceAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonEchoAdminSourceAddress object, which may only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPEchoAdminSourceAddrType/ crttMonIPEchoAdminSourceAddress AND rttMonEchoAdminSourceAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonEchoAdminSourceAddress OR crttMonIPEchoAdminSourceAddrType/ crttMonIPEchoAdminSourceAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPEchoAdminSourceAddrType/ crttMonIPEchoAdminSourceAddress must be used and rttMonEchoAdminSourceAddress may not be instantiated or may have a zero length string.')
crttMonIPEchoAdminNameServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminNameServerAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminNameServerAddrType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPEchoAdminNameServerAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPEchoAdminNameServerAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonEchoAdminNameServer), this object contains the value 'unknown'.")
crttMonIPEchoAdminNameServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminNameServerAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminNameServerAddress.setDescription('A string which specifies the address of the target. This object, together with the crttMonIPEchoAdminNameServerAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonEchoAdminNameServer object, which can only specify an IPv4. In case the target is a V4 IP address then both crttMonIPEchoAdminNameServerAddrType/ crttMonIPEchoAdminNameServerAddress AND rttMonEchoAdminNameServer may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonEchoAdminNameServer OR crttMonIPEchoAdminNameServerAddrType/ crttMonIPEchoAdminNameServerAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPEchoAdminNameServerAddrType/ crttMonIPEchoAdminNameServerAddress must be used and rttMonEchoAdminNameServer may not be instantiated or may have a zero length string.')
crttMonIPEchoAdminLSPSelAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminLSPSelAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminLSPSelAddrType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPEchoAdminLSPSelAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPEchoAdminLSPSelAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonEchoAdminLSPSelector), this object contains the value 'unknown'.")
crttMonIPEchoAdminLSPSelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 8), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminLSPSelAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminLSPSelAddress.setDescription('A string which specifies the address of the LSP Selector. This object, in conjunction with the crttMonIPEchoAdminLSPSelAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonEchoAdminLSPSelector object, which can only specify an IPv4 address.In case the target is a V4 IP address then both crttMonIPEchoAdminLSPSelAddrType/ crttMonIPEchoAdminLSPSelAddress AND rttMonEchoAdminLSPSelector may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonEchoAdminLSPSelector OR crttMonIPEchoAdminLSPSelAddrType/ crttMonIPEchoAdminLSPSelAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPEchoAdminLSPSelAddrType/ crttMonIPEchoAdminLSPSelAddress must be used and rttMonEchoAdminLSPSelector may not be instantiated or may have a zero length string.')
crttMonIPEchoAdminDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 9), DscpOrAny().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminDscp.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminDscp.setDescription('The DSCP value (either an IPv4 TOS octet or an IPv6 Traffic Class octet) to be set in outgoing packets.')
crttMonIPEchoAdminFlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 1, 1, 10), IPv6FlowLabelOrAny()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoAdminFlowLabel.setReference('Section 6 of RFC 2460')
if mibBuilder.loadTexts: crttMonIPEchoAdminFlowLabel.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoAdminFlowLabel.setDescription('The Flow Label in an IPv6 packet header.')
crttMonIPLatestRttOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 2), )
if mibBuilder.loadTexts: crttMonIPLatestRttOperTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLatestRttOperTable.setDescription('An extension of the rttMonLatestRttOperTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of specifying IPv6 addresses.')
crttMonIPLatestRttOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 2, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLatestRttOperEntry"))
crttMonIPLatestRttOperEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPLatestRttOperEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLatestRttOperEntry.setDescription('A list of objects required to support IPv6 addresses. ')
crttMonIPLatestRttOperAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 2, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crttMonIPLatestRttOperAddressType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLatestRttOperAddressType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPLatestRttOperAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPLatestRttOperAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonLatestRttOperAddress), this object contains the value 'unknown'.")
crttMonIPLatestRttOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 2, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crttMonIPLatestRttOperAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLatestRttOperAddress.setDescription('A string which specifies the address of the target. This object, together with the crttMonIPLatestRttOperAddressType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonLatestRttOperAddress object, which can only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPLatestRttOperAddressType/ crttMonIPLatestRttOperAddress AND rttMonLatestRttOperAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonLatestRttOperAddress OR crttMonIPLatestRttOperAddressType/ crttMonIPLatestRttOperAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPLatestRttOperAddressType/ crttMonIPLatestRttOperAddress must be used and rttMonLatestRttOperAddress may not be instantiated or may have a zero length string.')
crttMonIPEchoPathAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 3), )
if mibBuilder.loadTexts: crttMonIPEchoPathAdminTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoPathAdminTable.setDescription('An extension of the rttMonEchoPathAdminTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of recording the hops as IPv6 addresses.')
crttMonIPEchoPathAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 3, 1), )
rttMonEchoPathAdminEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoPathAdminEntry"))
crttMonIPEchoPathAdminEntry.setIndexNames(*rttMonEchoPathAdminEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPEchoPathAdminEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoPathAdminEntry.setDescription('A list of additional objects needed for IPv6 addresses.')
crttMonIPEchoPathAdminHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 3, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoPathAdminHopAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoPathAdminHopAddrType.setDescription("An enumerated value which specifies the address type of the hop. This object must be used along with the crttMonIPEchoPathAdminHopAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPEchoPathAdminHopAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonEchoPathAdminHopAddress), this object contains the value 'unknown'.")
crttMonIPEchoPathAdminHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 3, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crttMonIPEchoPathAdminHopAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPEchoPathAdminHopAddress.setDescription('A string which specifies the address of the hop. This object, together with the crttMonIPEchoPathAdminHopAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonEchoPathAdminHopAddress object, which can only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPEchoPathAdminHopAddrType/ crttMonIPEchoPathAdminHopAddress AND rttMonEchoPathAdminHopAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonEchoPathAdminHopAddress OR crttMonIPEchoPathAdminHopAddrType/ crttMonIPEchoPathAdminHopAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPEchoPathAdminHopAddrType/ crttMonIPEchoPathAdminHopAddress must be used and rttMonEchoPathAdminHopAddress may not be instantiated or may have a zero length string.')
crttMonIPStatsCollectTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 4), )
if mibBuilder.loadTexts: crttMonIPStatsCollectTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPStatsCollectTable.setDescription('An extension of the rttMonStatsCollectTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of specifying the collection address as an IPv6 address.')
crttMonIPStatsCollectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 4, 1), )
rttMonStatsCollectEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPStatsCollectEntry"))
crttMonIPStatsCollectEntry.setIndexNames(*rttMonStatsCollectEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPStatsCollectEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPStatsCollectEntry.setDescription('A list of additional objects needed for IPv6 addresses.')
crttMonIPStatsCollectAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 4, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPStatsCollectAddressType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPStatsCollectAddressType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPStatsCollectAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPStatsCollectAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonStatsCollectAddress), this object contains the value 'unknown'.")
crttMonIPStatsCollectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 4, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPStatsCollectAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPStatsCollectAddress.setDescription('A string which specifies the address of the collection target. This object, in conjunction with the crttMonIPStatsCollectAddressType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonStatsCollectAddress object, which can only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPStatsCollectAddressType/ crttMonIPStatsCollectAddress AND rttMonStatsCollectAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonStatsCollectAddress OR crttMonIPStatsCollectAddressType/ crttMonIPStatsCollectAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPStatsCollectAddressType/ crttMonIPStatsCollectAddress must be used and rttMonStatsCollectAddress may not be instantiated or may have a zero length string.')
crttMonIPLpdGrpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 5), )
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTable.setDescription('An extension of the rttMonLpdGrpStatsTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of specifying the target PE address as an IPv6 address.')
crttMonIPLpdGrpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 5, 1), )
rttMonLpdGrpStatsEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLpdGrpStatsEntry"))
crttMonIPLpdGrpStatsEntry.setIndexNames(*rttMonLpdGrpStatsEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsEntry.setDescription('A list of additional objects needed for IPv6 addresses.')
crttMonIPLpdGrpStatsTargetPEAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 5, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTargetPEAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTargetPEAddrType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPLpdGrpStatsTargetPEAddr object as it identifies the address family of the address specified by that object. If the value of crttMonIPLpdGrpStatsTargetPEAddr is a zero-length string (e.g., because an IPv4 address is specified by rttMonLpdGrpStatsTargetPE), this object contains the value 'unknown'.")
crttMonIPLpdGrpStatsTargetPEAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 5, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTargetPEAddr.setStatus('current')
if mibBuilder.loadTexts: crttMonIPLpdGrpStatsTargetPEAddr.setDescription('A string which specifies the address of the target PE. This object, in conjunction with the crttMonIPLpdGrpStatsTargetPEAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonLpdGrpStatsTargetPE object, which can only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPLpdGrpStatsTargetPEAddrType/ crttMonIPLpdGrpStatsTargetPEAddr AND rttMonLpdGrpStatsTargetPE may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonLpdGrpStatsTargetPE OR crttMonIPLpdGrpStatsTargetPEAddrType/ crttMonIPLpdGrpStatsTargetPEAddr may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPLpdGrpStatsTargetPEAddrType/ crttMonIPLpdGrpStatsTargetPEAddr must be used and rttMonLpdGrpStatsTargetPE may not be instantiated or may have a zero length string.')
crttMonIPHistoryCollectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 6), )
if mibBuilder.loadTexts: crttMonIPHistoryCollectionTable.setStatus('current')
if mibBuilder.loadTexts: crttMonIPHistoryCollectionTable.setDescription('An extension of the rttMonHistoryCollectionTable, defined in the CISCO-RTTMON-MIB, which provides the additional capability of specifying the target address as an IPv6 address.')
crttMonIPHistoryCollectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 6, 1), )
rttMonHistoryCollectionEntry.registerAugmentions(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPHistoryCollectionEntry"))
crttMonIPHistoryCollectionEntry.setIndexNames(*rttMonHistoryCollectionEntry.getIndexNames())
if mibBuilder.loadTexts: crttMonIPHistoryCollectionEntry.setStatus('current')
if mibBuilder.loadTexts: crttMonIPHistoryCollectionEntry.setDescription('A list of additional objects needed for IPv6 addresses.')
crttMonIPHistoryCollectionAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 6, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPHistoryCollectionAddrType.setStatus('current')
if mibBuilder.loadTexts: crttMonIPHistoryCollectionAddrType.setDescription("An enumerated value which specifies the address type of the target. This object must be used along with the crttMonIPHistoryCollectionAddress object as it identifies the address family of the address specified by that object. If the value of crttMonIPHistoryCollectionAddress is a zero-length string (e.g., because an IPv4 address is specified by rttMonHistoryCollectionAddress), this object contains the value 'unknown'.")
crttMonIPHistoryCollectionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 572, 1, 6, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crttMonIPHistoryCollectionAddress.setStatus('current')
if mibBuilder.loadTexts: crttMonIPHistoryCollectionAddress.setDescription('A string which specifies the address of the target. This object, in conjunction with the crttMonIPHistoryCollectionAddrType object, may be used to specify either an IPv6 or an IPv4 address and is an alternative to the rttMonHistoryCollectionAddress object, which can only specify an IPv4 address. In case the target is a V4 IP address then both crttMonIPHistoryCollectionAddrType/ crttMonIPHistoryCollectionAddress AND rttMonHistoryCollectionAddress may be used to specify it so long as both try to specify the same V4 IP address. Alternatively only one of rttMonHistoryCollectionAddress OR crttMonIPHistoryCollectionAddrType/ crttMonIPHistoryCollectionAddress may be used to specify the V4 IP address, in which case the other may either not be instantiated or contain a zero length string. In case the the target is a V6 IP address then only crttMonIPHistoryCollectionAddrType/ crttMonIPHistoryCollectionAddress must be used and rttMonHistoryCollectionAddress may not be instantiated or may have a zero length string.')
ciscoRttMonIPExtMibComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 572, 2, 1, 1)).setObjects(("CISCO-RTTMON-IP-EXT-MIB", "ciscoIPExtCtrlGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonIPExtMibComplianceRev1 = ciscoRttMonIPExtMibComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoRttMonIPExtMibComplianceRev1.setDescription('The compliance statement for new MIB extensions for supporting IPv6 addresses and other IP-layer extensions')
ciscoIPExtCtrlGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 572, 2, 2, 1)).setObjects(("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminTargetAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminTargetAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminSourceAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminSourceAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminNameServerAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminNameServerAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminLSPSelAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminLSPSelAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminDscp"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoAdminFlowLabel"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLatestRttOperAddressType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLatestRttOperAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoPathAdminHopAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPEchoPathAdminHopAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPStatsCollectAddressType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPStatsCollectAddress"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLpdGrpStatsTargetPEAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPLpdGrpStatsTargetPEAddr"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPHistoryCollectionAddrType"), ("CISCO-RTTMON-IP-EXT-MIB", "crttMonIPHistoryCollectionAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIPExtCtrlGroupRev1 = ciscoIPExtCtrlGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoIPExtCtrlGroupRev1.setDescription('A collection of objects that were added to enhance the functionality of the RTT application to support other IP layer extensions like IPv6, specifically IPv6 addresses and other information.')
mibBuilder.exportSymbols("CISCO-RTTMON-IP-EXT-MIB", crttMonIPHistoryCollectionAddrType=crttMonIPHistoryCollectionAddrType, crttMonIPLatestRttOperTable=crttMonIPLatestRttOperTable, crttMonIPStatsCollectAddress=crttMonIPStatsCollectAddress, crttMonIPEchoAdminLSPSelAddress=crttMonIPEchoAdminLSPSelAddress, ciscoIPExtCtrlGroupRev1=ciscoIPExtCtrlGroupRev1, crttMonIPLatestRttOperAddressType=crttMonIPLatestRttOperAddressType, crttMonIPLpdGrpStatsTable=crttMonIPLpdGrpStatsTable, crttMonIPEchoAdminFlowLabel=crttMonIPEchoAdminFlowLabel, crttMonIPEchoPathAdminTable=crttMonIPEchoPathAdminTable, crttMonIPEchoPathAdminHopAddrType=crttMonIPEchoPathAdminHopAddrType, crttMonIPEchoAdminNameServerAddrType=crttMonIPEchoAdminNameServerAddrType, crttMonIPHistoryCollectionTable=crttMonIPHistoryCollectionTable, crttMonIPHistoryCollectionAddress=crttMonIPHistoryCollectionAddress, ciscoRttMonIPExtMibGroups=ciscoRttMonIPExtMibGroups, crttMonIPLatestRttOperEntry=crttMonIPLatestRttOperEntry, crttMonIPEchoPathAdminEntry=crttMonIPEchoPathAdminEntry, crttMonIPExtObjects=crttMonIPExtObjects, crttMonIPLpdGrpStatsTargetPEAddr=crttMonIPLpdGrpStatsTargetPEAddr, ciscoRttMonIPExtMIB=ciscoRttMonIPExtMIB, crttMonIPStatsCollectTable=crttMonIPStatsCollectTable, crttMonIPEchoAdminTable=crttMonIPEchoAdminTable, crttMonIPEchoAdminSourceAddrType=crttMonIPEchoAdminSourceAddrType, crttMonIPLpdGrpStatsEntry=crttMonIPLpdGrpStatsEntry, ciscoRttMonIPExtMibCompliances=ciscoRttMonIPExtMibCompliances, crttMonIPEchoAdminTargetAddrType=crttMonIPEchoAdminTargetAddrType, crttMonIPHistoryCollectionEntry=crttMonIPHistoryCollectionEntry, PYSNMP_MODULE_ID=ciscoRttMonIPExtMIB, crttMonIPEchoAdminLSPSelAddrType=crttMonIPEchoAdminLSPSelAddrType, ciscoRttMonIPExtMibConformance=ciscoRttMonIPExtMibConformance, crttMonIPStatsCollectEntry=crttMonIPStatsCollectEntry, crttMonIPStatsCollectAddressType=crttMonIPStatsCollectAddressType, crttMonIPEchoAdminEntry=crttMonIPEchoAdminEntry, crttMonIPEchoAdminTargetAddress=crttMonIPEchoAdminTargetAddress, crttMonIPLatestRttOperAddress=crttMonIPLatestRttOperAddress, ciscoRttMonIPExtMibComplianceRev1=ciscoRttMonIPExtMibComplianceRev1, crttMonIPEchoAdminDscp=crttMonIPEchoAdminDscp, crttMonIPLpdGrpStatsTargetPEAddrType=crttMonIPLpdGrpStatsTargetPEAddrType, crttMonIPEchoAdminSourceAddress=crttMonIPEchoAdminSourceAddress, crttMonIPEchoAdminNameServerAddress=crttMonIPEchoAdminNameServerAddress, crttMonIPEchoPathAdminHopAddress=crttMonIPEchoPathAdminHopAddress)
