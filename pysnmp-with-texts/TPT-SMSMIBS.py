#
# PySNMP MIB module TPT-SMSMIBS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-SMSMIBS
# Produced by pysmi-0.3.4 at Wed May  1 15:26:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, ObjectIdentity, ModuleIdentity, NotificationType, Unsigned32, Bits, IpAddress, iso, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Unsigned32", "Bits", "IpAddress", "iso", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tpt_reg, tpt_products = mibBuilder.importSymbols("TIPPINGPOINT-REG-MIB", "tpt-reg", "tpt-products")
tpt_smsMIBs = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4)).setLabel("tpt-smsMIBs")
if mibBuilder.loadTexts: tpt_smsMIBs.setLastUpdated('0508121508Z')
if mibBuilder.loadTexts: tpt_smsMIBs.setOrganization('TippingPoint Technologies, Inc.')
if mibBuilder.loadTexts: tpt_smsMIBs.setContactInfo('www.tippingpoint.com')
if mibBuilder.loadTexts: tpt_smsMIBs.setDescription("Sub-tree for objects and events on the SMS. Copyright 2001-2005 TippingPoint Technologies, Inc. All rights reserved. This document contains confidential and proprietary information to TippingPoint Technologies, Inc. Use of this document is subject to the terms and conditions of TippingPoint's Non-Disclosure Agreement. ")
tpt_sms_conf = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 1)).setLabel("tpt-sms-conf")
if mibBuilder.loadTexts: tpt_sms_conf.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_conf.setDescription('This sub-tree is for conformance. (OBJECT-GROUP, NOTIFICATION-GROUP, MODULE-COMPLIANCE)')
tpt_sms_objs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 2)).setLabel("tpt-sms-objs")
if mibBuilder.loadTexts: tpt_sms_objs.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_objs.setDescription('This sub-tree is for all managed objects on the SMS.')
tpt_sms_events = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 3)).setLabel("tpt-sms-events")
if mibBuilder.loadTexts: tpt_sms_events.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_events.setDescription('This sub-tree is for all events (NOTIFICATION-TYPE) and payload variables that are needed for notifications.')
tpt_sms_groups = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 1, 1)).setLabel("tpt-sms-groups")
if mibBuilder.loadTexts: tpt_sms_groups.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_groups.setDescription('This sub-tree is for all groups. (OBJECT-GROUP, NOTIFICATION-GROUP)')
tpt_sms_compls = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 1, 2)).setLabel("tpt-sms-compls")
if mibBuilder.loadTexts: tpt_sms_compls.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_compls.setDescription('This sub-tree is for all compliance MIBs. (MODULE-COMPLIANCE)')
tpt_sms_eventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 3, 0)).setLabel("tpt-sms-eventsV2")
if mibBuilder.loadTexts: tpt_sms_eventsV2.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_eventsV2.setDescription('This sub-tree is for all notification MIBs for a SMS.')
tpt_sms_notifypayload = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 4, 3, 1)).setLabel("tpt-sms-notifypayload")
if mibBuilder.loadTexts: tpt_sms_notifypayload.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_notifypayload.setDescription('This sub-tree is for all MIB variables sent as part of a notification payload sent by a SMS.')
tpt_sms_family = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4)).setLabel("tpt-sms-family")
if mibBuilder.loadTexts: tpt_sms_family.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_family.setDescription('Registration for the TPT security management system.')
tpt_sms_model_1750 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 1)).setLabel("tpt-sms-model-1750")
if mibBuilder.loadTexts: tpt_sms_model_1750.setStatus('deprecated')
if mibBuilder.loadTexts: tpt_sms_model_1750.setDescription('Registration for the SMS Model 1750.')
tpt_sms_model_1850 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 2)).setLabel("tpt-sms-model-1850")
if mibBuilder.loadTexts: tpt_sms_model_1850.setStatus('deprecated')
if mibBuilder.loadTexts: tpt_sms_model_1850.setDescription('Registration for the SMS Model 1850.')
tpt_sms_model_1950 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 3)).setLabel("tpt-sms-model-1950")
if mibBuilder.loadTexts: tpt_sms_model_1950.setStatus('deprecated')
if mibBuilder.loadTexts: tpt_sms_model_1950.setDescription('Registration for the SMS Model 1950.')
tpt_sms_model_vmware = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 4)).setLabel("tpt-sms-model-vmware")
if mibBuilder.loadTexts: tpt_sms_model_vmware.setStatus('deprecated')
if mibBuilder.loadTexts: tpt_sms_model_vmware.setDescription('Registration for the SMS Model VMware.')
tpt_sms_model_h1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 5)).setLabel("tpt-sms-model-h1")
if mibBuilder.loadTexts: tpt_sms_model_h1.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_h1.setDescription('Registration for the SMS Model H1.')
tpt_sms_model_xl = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 6)).setLabel("tpt-sms-model-xl")
if mibBuilder.loadTexts: tpt_sms_model_xl.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_xl.setDescription('Registration for the SMS Model XL.')
tpt_sms_model_vsms = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 7)).setLabel("tpt-sms-model-vsms")
if mibBuilder.loadTexts: tpt_sms_model_vsms.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_vsms.setDescription('Registration for the vSMS.')
tpt_sms_model_hp_2000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 8)).setLabel("tpt-sms-model-hp-2000")
if mibBuilder.loadTexts: tpt_sms_model_hp_2000.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_hp_2000.setDescription('Registration for the SMS Model 2000.')
tpt_sms_model_hp_xl2000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 9)).setLabel("tpt-sms-model-hp-xl2000")
if mibBuilder.loadTexts: tpt_sms_model_hp_xl2000.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_hp_xl2000.setDescription('Registration for the SMS Model XL 2000.')
tpt_sms_model_vsmslite = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 10)).setLabel("tpt-sms-model-vsmslite")
if mibBuilder.loadTexts: tpt_sms_model_vsmslite.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_vsmslite.setDescription('Registration for the vSMS Lite.')
tpt_sms_model_h3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 11)).setLabel("tpt-sms-model-h3")
if mibBuilder.loadTexts: tpt_sms_model_h3.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_h3.setDescription('Registration for the SMS Model H3.')
tpt_sms_model_h3_xl = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 1, 4, 12)).setLabel("tpt-sms-model-h3-xl")
if mibBuilder.loadTexts: tpt_sms_model_h3_xl.setStatus('current')
if mibBuilder.loadTexts: tpt_sms_model_h3_xl.setDescription('Registration for the SMS Model H3 XL.')
mibBuilder.exportSymbols("TPT-SMSMIBS", tpt_sms_events=tpt_sms_events, tpt_sms_model_vsmslite=tpt_sms_model_vsmslite, tpt_sms_conf=tpt_sms_conf, tpt_sms_model_h3_xl=tpt_sms_model_h3_xl, tpt_sms_objs=tpt_sms_objs, tpt_sms_model_1850=tpt_sms_model_1850, tpt_sms_eventsV2=tpt_sms_eventsV2, tpt_sms_model_h3=tpt_sms_model_h3, tpt_sms_model_1950=tpt_sms_model_1950, PYSNMP_MODULE_ID=tpt_smsMIBs, tpt_sms_model_vmware=tpt_sms_model_vmware, tpt_sms_model_1750=tpt_sms_model_1750, tpt_sms_notifypayload=tpt_sms_notifypayload, tpt_sms_model_xl=tpt_sms_model_xl, tpt_smsMIBs=tpt_smsMIBs, tpt_sms_groups=tpt_sms_groups, tpt_sms_family=tpt_sms_family, tpt_sms_model_hp_2000=tpt_sms_model_hp_2000, tpt_sms_model_hp_xl2000=tpt_sms_model_hp_xl2000, tpt_sms_compls=tpt_sms_compls, tpt_sms_model_h1=tpt_sms_model_h1, tpt_sms_model_vsms=tpt_sms_model_vsms)
