#
# PySNMP MIB module PDN-SOCKET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-SOCKET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:39:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
pdn_socket, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-socket")
SocketState, SocketType, SocketFamily = mibBuilder.importSymbols("PDN-TC", "SocketState", "SocketType", "SocketFamily")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, iso, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, IpAddress, Gauge32, MibIdentifier, Integer32, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "iso", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "IpAddress", "Gauge32", "MibIdentifier", "Integer32", "Counter32", "TimeTicks")
TAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TAddress", "TextualConvention", "DisplayString")
devSocketStatsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1))
devSocketStatsMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 2))
devSocketStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1), )
if mibBuilder.loadTexts: devSocketStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketStatsTable.setDescription('This table gives statistics on the sockets currently being used by the device')
devSocketStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "PDN-SOCKET-MIB", "devSocketNumber"))
if mibBuilder.loadTexts: devSocketStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketStatsEntry.setDescription('This table gives statistics on the sockets currently being used by the device')
devSocketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketNumber.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketNumber.setDescription('a unique number associated with a socket')
devSocketName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketName.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketName.setDescription('the Name given to this socket by the device')
devSocketFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 3), SocketFamily()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketFamily.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketFamily.setDescription('The Family associated with this socket')
devSocketType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 4), SocketType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketType.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketType.setDescription('the ')
devSocketLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 5), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketLocalAddress.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketLocalAddress.setDescription('the local address (ipaddress + port) for this socket')
devSocketRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 6), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketRemoteAddress.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketRemoteAddress.setDescription('the remote address (ipaddress + port) for this socket')
devSocketState = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 7), SocketState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketState.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketState.setDescription('The State the socket is in. This is valid for stream sockets only')
devSocketInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketInputBytes.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketInputBytes.setDescription('The number of bytes received on this socket')
devSocketOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketOutputBytes.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketOutputBytes.setDescription('The number of bytes transmitted on this socket')
devSocketPDUDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketPDUDrops.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketPDUDrops.setDescription('The number of incoming packets that were dropped due to the socket receive queue being full')
devSocketByteDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 19, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devSocketByteDrops.setStatus('mandatory')
if mibBuilder.loadTexts: devSocketByteDrops.setDescription('The number of imcoming bytes that were dropped due to the socket receive queue being full')
mibBuilder.exportSymbols("PDN-SOCKET-MIB", devSocketInputBytes=devSocketInputBytes, devSocketFamily=devSocketFamily, devSocketState=devSocketState, devSocketStatsMIBObjects=devSocketStatsMIBObjects, devSocketType=devSocketType, devSocketRemoteAddress=devSocketRemoteAddress, devSocketOutputBytes=devSocketOutputBytes, devSocketNumber=devSocketNumber, devSocketStatsEntry=devSocketStatsEntry, devSocketStatsTable=devSocketStatsTable, devSocketName=devSocketName, devSocketPDUDrops=devSocketPDUDrops, devSocketLocalAddress=devSocketLocalAddress, devSocketStatsMIBTraps=devSocketStatsMIBTraps, devSocketByteDrops=devSocketByteDrops)
