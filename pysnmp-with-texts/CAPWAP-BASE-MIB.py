#
# PySNMP MIB module CAPWAP-BASE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CAPWAP-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:46:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ifGeneralInformationGroup, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, mib_2, Bits, MibIdentifier, ModuleIdentity, TimeTicks, ObjectIdentity, Counter32, Integer32, Unsigned32, IpAddress, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "mib-2", "Bits", "MibIdentifier", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "Counter32", "Integer32", "Unsigned32", "IpAddress", "Gauge32", "iso")
DisplayString, TextualConvention, TruthValue, RowStatus, PhysAddress, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus", "PhysAddress", "DateAndTime")
capwapBaseMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 60))
capwapBaseMIB.setRevisions(('2010-07-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: capwapBaseMIB.setRevisionsDescriptions(('Initial version extracted from RFC 5833 as of May 2010.',))
if mibBuilder.loadTexts: capwapBaseMIB.setLastUpdated('201007120000Z')
if mibBuilder.loadTexts: capwapBaseMIB.setOrganization('bintec elmeg GmbH')
if mibBuilder.loadTexts: capwapBaseMIB.setContactInfo('EMail: info@bintec-elmeg.com Web: www.bintec-elmeg.com ')
if mibBuilder.loadTexts: capwapBaseMIB.setDescription('This file is based on on an internet draft standard but takes out only the very small portion needed for FEC products. Original informations for the standard are below. LAST-UPDATED 201002100000Z -- Feb 10th, 2010 ORGANIZATION IETF Control And Provisioning of Wireless Access Points (CAPWAP) Working Group http://www.ietf.org/html.charters/capwap-charter.html DESCRIPTION Copyright (C) 2010 The Internet Society. This version of the MIB module is part of RFC xxx; see the RFC itself for full legal notices. This MIB module contains managed object definitions for the CAPWAP Protocol. CONTACT-INFO General Discussion: capwap@frascone.com To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza, NO.9 Shangdi 9th Street,Haidian District, Beijing China(100085) Phone: +86 010 82775276 EMail: young@h3c.com David T. Perkins 228 Bayview Dr San Carlos, CA 94070 USA Phone: +1 408 394-8702 Email: dperkins@snmpinfo.com Chris Elliott Cisco Systems, Inc. 7025 Kit Creek Rd., P.O. Box 14987 Research Triangle Park 27709 USA Phone: +1 919-392-2146 Email: chelliot@gmail.com Yong Zhang Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA Email: yzhang@fortinet.com')
capwapBaseObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1))
capwapBaseParameters = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1, 3))
capwapBaseAcMaxRetransmit = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 1), Unsigned32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcMaxRetransmit.setReference('Section 4.8.7. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcMaxRetransmit.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcMaxRetransmit.setDescription('Represents the maximum number of retransmissions for a given CAPWAP packet before the link layer considers the peer dead. The value of the object is persistent at restart/reboot.')
capwapBaseAcChangeStatePendingTimer = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 2), Unsigned32().clone(150)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcChangeStatePendingTimer.setReference('Section 4.7.1. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcChangeStatePendingTimer.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcChangeStatePendingTimer.setDescription("Represents the maximum time, in seconds, the AC will wait for the Change State Event Request from the WTP after having transmitted a successful Configuration Status Response message. The value is multiplied by the number of WTP's radio-modules. The value of the object is persistent at restart/reboot.")
capwapBaseAcDataCheckTimer = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 3), Unsigned32().clone(30)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcDataCheckTimer.setReference('Section 4.7.4. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcDataCheckTimer.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcDataCheckTimer.setDescription("Represents The number of seconds the AC will wait for the Data Channel Keep Alive, which is required by the CAPWAP state machine's Data Check state. The AC resets the state machine if this timer expires prior to transitioning to the next state. The value of the object is persistent at restart/reboot.")
capwapBaseAcEchoInterval = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 5), Unsigned32().clone(10)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcEchoInterval.setReference('Section 4.7.7. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcEchoInterval.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcEchoInterval.setDescription('Represents the minimum time, in seconds, between sending Echo Request messages to the AC with which the WTP has joined. The value of the object is persistent at restart/reboot.')
capwapBaseAcRetransmitInterval = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 6), Unsigned32().clone(3)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcRetransmitInterval.setReference('Section 4.7.12. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcRetransmitInterval.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcRetransmitInterval.setDescription('Represents the minimum time, in seconds, in which a non-acknowledged CAPWAP packet will be retransmitted. The value of the object is persistent at restart/reboot.')
capwapBaseAcWaitJoinTimer = MibScalar((1, 3, 6, 1, 2, 1, 60, 1, 3, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 4294967295)).clone(60)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: capwapBaseAcWaitJoinTimer.setReference('Section 4.7.16. of CAPWAP Protocol Specification, RFC 5415.')
if mibBuilder.loadTexts: capwapBaseAcWaitJoinTimer.setStatus('current')
if mibBuilder.loadTexts: capwapBaseAcWaitJoinTimer.setDescription('Represents the maximum time, in seconds, the AC will wait after the DTLS session has been established until it receives the Join Request from the WTP. This timer MUST be greater than 20 seconds. The value of the object is persistent at restart/reboot.')
mibBuilder.exportSymbols("CAPWAP-BASE-MIB", capwapBaseAcWaitJoinTimer=capwapBaseAcWaitJoinTimer, capwapBaseAcEchoInterval=capwapBaseAcEchoInterval, capwapBaseAcMaxRetransmit=capwapBaseAcMaxRetransmit, capwapBaseParameters=capwapBaseParameters, capwapBaseMIB=capwapBaseMIB, capwapBaseObjects=capwapBaseObjects, capwapBaseAcRetransmitInterval=capwapBaseAcRetransmitInterval, capwapBaseAcChangeStatePendingTimer=capwapBaseAcChangeStatePendingTimer, capwapBaseAcDataCheckTimer=capwapBaseAcDataCheckTimer, PYSNMP_MODULE_ID=capwapBaseMIB)
