#
# PySNMP MIB module ZYXEL-TIME-RANGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-TIME-RANGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:51:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
OperationResponseStatus, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "OperationResponseStatus", "InterfaceIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "SnmpAdminString")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, MibIdentifier, Counter32, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, IpAddress, enterprises, Counter64, Unsigned32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "MibIdentifier", "Counter32", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "IpAddress", "enterprises", "Counter64", "Unsigned32", "ModuleIdentity", "Integer32")
TextualConvention, RowStatus, DateAndTime, StorageType, MacAddress, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DateAndTime", "StorageType", "MacAddress", "TruthValue", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelTimeRange = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98))
if mibBuilder.loadTexts: zyxelTimeRange.setLastUpdated('201312130000Z')
if mibBuilder.loadTexts: zyxelTimeRange.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelTimeRange.setContactInfo('')
if mibBuilder.loadTexts: zyxelTimeRange.setDescription('The subtree for time range')
zyxelTimeRangeSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1))
zyTimeRangeMaxNumberOfProfiles = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTimeRangeMaxNumberOfProfiles.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeMaxNumberOfProfiles.setDescription('The maximum number of time range entries that can be created.')
zyxelTimeRangeTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 2), )
if mibBuilder.loadTexts: zyxelTimeRangeTable.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangeTable.setDescription('The table contains time range configurations.')
zyxelTimeRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 2, 1), ).setIndexNames((0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeName"), (0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeType"))
if mibBuilder.loadTexts: zyxelTimeRangeEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangeEntry.setDescription('An entry contains time range configurations.')
zyTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: zyTimeRangeName.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeName.setDescription('The name of time range is used for identifying purposes.')
zyTimeRangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absolute", 1), ("periodic", 2))))
if mibBuilder.loadTexts: zyTimeRangeType.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeType.setDescription('The type of time range is used for identifying purposes. The type of time range profile are absolute and periodic. absolute time range : allows to configure a time range begins on a specific hour, minute, day, month and year. And ends on a specific hour, minute, day, month and year. periodic time range : allows to configure a time range begins on a day in a week and end on another day in a week. And allows to configure a time range in multiple days in a week. Begins on a specific hour and minute and ends on specific hour and minute at those days.')
zyTimeRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyTimeRangeRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeRowStatus.setDescription('This object allow time range entry to be created and deleted.')
zyxelTimeRangeAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3), )
if mibBuilder.loadTexts: zyxelTimeRangeAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangeAbsoluteTable.setDescription('The table contains absolute time range configurations.')
zyxelTimeRangeAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1), ).setIndexNames((0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeName"), (0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeType"))
if mibBuilder.loadTexts: zyxelTimeRangeAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangeAbsoluteEntry.setDescription('An entry contains absolute time range configurations.')
zyTimeRangeAbsoluteStartYear = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartYear.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartYear.setDescription('The start year of absolute time range.')
zyTimeRangeAbsoluteStartMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartMonth.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartMonth.setDescription('The start month of absolute time range.')
zyTimeRangeAbsoluteStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartDate.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartDate.setDescription('The start date of absolute time range.')
zyTimeRangeAbsoluteStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartHour.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartHour.setDescription('The start hour of absolute time range.')
zyTimeRangeAbsoluteStartMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartMinute.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteStartMinute.setDescription('The start minute of absolute time range.')
zyTimeRangeAbsoluteEndYear = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndYear.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndYear.setDescription('The end year of absolute time range.')
zyTimeRangeAbsoluteEndMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndMonth.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndMonth.setDescription('The end month of absolute time range.')
zyTimeRangeAbsoluteEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndDate.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndDate.setDescription('The end date of absolute time range.')
zyTimeRangeAbsoluteEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndHour.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndHour.setDescription('The end hour of absolute time range.')
zyTimeRangeAbsoluteEndMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndMinute.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangeAbsoluteEndMinute.setDescription('The end minute of absolute time range.')
class ZyTimeRangeWeekDayList(TextualConvention, Bits):
    description = 'Bitmap that includes days of week. Each bit in the bitmap associated with corresponding day of the week.'
    status = 'current'
    namedValues = NamedValues(("monday", 0), ("tuesday", 1), ("wednesday", 2), ("thursday", 3), ("friday", 4), ("saturday", 5), ("sunday", 6))

zyxelTimeRangePeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4), )
if mibBuilder.loadTexts: zyxelTimeRangePeriodicTable.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangePeriodicTable.setDescription('The table contains periodic time range configurations.')
zyxelTimeRangePeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1), ).setIndexNames((0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeName"), (0, "ZYXEL-TIME-RANGE-MIB", "zyTimeRangeType"))
if mibBuilder.loadTexts: zyxelTimeRangePeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelTimeRangePeriodicEntry.setDescription('An entry contains periodic time range configurations.')
zyTimeRangePeriodicWeekDayList = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 1), Bits().clone(namedValues=NamedValues(("monday", 0), ("tuesday", 1), ("wednesday", 2), ("thursday", 3), ("friday", 4), ("saturday", 5), ("sunday", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicWeekDayList.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicWeekDayList.setDescription('The weekday bitmap allows user to configure multiple weekdays in a week. This entry conflicts with zyTimeRangePeriodicStartWeekDay and zyTimeRangePeriodicEndWeekDay.')
zyTimeRangePeriodicStartWeekDay = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicStartWeekDay.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicStartWeekDay.setDescription('The start day of a week of periodic time range. This entry conflicts with zyTimeRangePeriodicWeekDayList.')
zyTimeRangePeriodicStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicStartHour.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicStartHour.setDescription('The start hour of periodic time range.')
zyTimeRangePeriodicStartMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicStartMinute.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicStartMinute.setDescription('The start minute of periodic time range.')
zyTimeRangePeriodicEndWeekDay = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicEndWeekDay.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicEndWeekDay.setDescription('The end day of a week of periodic time range. This entry conflicts with zyTimeRangePeriodicWeekDayList.')
zyTimeRangePeriodicEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicEndHour.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicEndHour.setDescription('The end hour of periodic time range.')
zyTimeRangePeriodicEndMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 98, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTimeRangePeriodicEndMinute.setStatus('current')
if mibBuilder.loadTexts: zyTimeRangePeriodicEndMinute.setDescription('The end minute of periodic time range.')
mibBuilder.exportSymbols("ZYXEL-TIME-RANGE-MIB", zyTimeRangePeriodicStartHour=zyTimeRangePeriodicStartHour, zyxelTimeRangeAbsoluteTable=zyxelTimeRangeAbsoluteTable, zyxelTimeRangeSetup=zyxelTimeRangeSetup, zyTimeRangePeriodicEndHour=zyTimeRangePeriodicEndHour, ZyTimeRangeWeekDayList=ZyTimeRangeWeekDayList, zyxelTimeRangeEntry=zyxelTimeRangeEntry, zyxelTimeRange=zyxelTimeRange, zyTimeRangeAbsoluteStartMonth=zyTimeRangeAbsoluteStartMonth, zyTimeRangePeriodicStartWeekDay=zyTimeRangePeriodicStartWeekDay, zyTimeRangeType=zyTimeRangeType, zyxelTimeRangePeriodicEntry=zyxelTimeRangePeriodicEntry, zyTimeRangeAbsoluteEndHour=zyTimeRangeAbsoluteEndHour, zyTimeRangeMaxNumberOfProfiles=zyTimeRangeMaxNumberOfProfiles, zyxelTimeRangePeriodicTable=zyxelTimeRangePeriodicTable, zyTimeRangeRowStatus=zyTimeRangeRowStatus, zyTimeRangePeriodicWeekDayList=zyTimeRangePeriodicWeekDayList, zyTimeRangeAbsoluteEndDate=zyTimeRangeAbsoluteEndDate, zyxelTimeRangeTable=zyxelTimeRangeTable, zyTimeRangePeriodicStartMinute=zyTimeRangePeriodicStartMinute, zyTimeRangePeriodicEndWeekDay=zyTimeRangePeriodicEndWeekDay, zyTimeRangeAbsoluteEndYear=zyTimeRangeAbsoluteEndYear, zyTimeRangeAbsoluteEndMonth=zyTimeRangeAbsoluteEndMonth, zyTimeRangeAbsoluteStartMinute=zyTimeRangeAbsoluteStartMinute, zyTimeRangeAbsoluteStartYear=zyTimeRangeAbsoluteStartYear, zyTimeRangeAbsoluteStartDate=zyTimeRangeAbsoluteStartDate, zyTimeRangeName=zyTimeRangeName, PYSNMP_MODULE_ID=zyxelTimeRange, zyTimeRangeAbsoluteStartHour=zyTimeRangeAbsoluteStartHour, zyTimeRangePeriodicEndMinute=zyTimeRangePeriodicEndMinute, zyxelTimeRangeAbsoluteEntry=zyxelTimeRangeAbsoluteEntry, zyTimeRangeAbsoluteEndMinute=zyTimeRangeAbsoluteEndMinute)
