#
# PySNMP MIB module HUAWEI-MACBIND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MACBIND-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:46:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, Gauge32, ObjectIdentity, MibIdentifier, Counter64, ModuleIdentity, TimeTicks, Bits, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "Gauge32", "ObjectIdentity", "MibIdentifier", "Counter64", "ModuleIdentity", "TimeTicks", "Bits", "Counter32", "iso")
TextualConvention, DisplayString, TruthValue, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "MacAddress")
hwMACBIND = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9))
if mibBuilder.loadTexts: hwMACBIND.setLastUpdated('200304110900Z')
if mibBuilder.loadTexts: hwMACBIND.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwMACBIND.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwMACBIND.setDescription(' V1.00 The MAC-IP address bind mib is for all datacomm product. ')
hwMacBindMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1))
hwMacBindEnableFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacBindEnableFlag.setStatus('current')
if mibBuilder.loadTexts: hwMacBindEnableFlag.setDescription(' The MAC-IP address bind function switch. 1: true(on) 2: false(off) ')
hwMacBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 2), )
if mibBuilder.loadTexts: hwMacBindTable.setStatus('current')
if mibBuilder.loadTexts: hwMacBindTable.setDescription(' The MAC-IP address bind table. ')
hwMacBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 2, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-MACBIND-MIB", "hwMacBindIPAddress"))
if mibBuilder.loadTexts: hwMacBindEntry.setStatus('current')
if mibBuilder.loadTexts: hwMacBindEntry.setDescription(' The MAC-IP address bind table struct. ')
hwMacBindIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacBindIPAddress.setStatus('current')
if mibBuilder.loadTexts: hwMacBindIPAddress.setDescription(' IP address. This item is index.')
hwMacBindMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacBindMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwMacBindMacAddress.setDescription(' MAC address. ')
hwMacBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacBindRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMacBindRowStatus.setDescription(' Only support CreateAndGo and Destroy. ')
hwMacBindMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 2))
hwMacBindMibGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 2, 1))
hwMacBindTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 2, 1, 1)).setObjects(("HUAWEI-MACBIND-MIB", "hwMacBindIPAddress"), ("HUAWEI-MACBIND-MIB", "hwMacBindMacAddress"), ("HUAWEI-MACBIND-MIB", "hwMacBindRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacBindTableGroup = hwMacBindTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacBindTableGroup.setDescription('Description.')
hwMacBindEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 9, 2, 1, 2)).setObjects(("HUAWEI-MACBIND-MIB", "hwMacBindEnableFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacBindEnableGroup = hwMacBindEnableGroup.setStatus('current')
if mibBuilder.loadTexts: hwMacBindEnableGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-MACBIND-MIB", hwMacBindMibConformance=hwMacBindMibConformance, hwMacBindTableGroup=hwMacBindTableGroup, hwMacBindMacAddress=hwMacBindMacAddress, hwMacBindEnableFlag=hwMacBindEnableFlag, hwMacBindRowStatus=hwMacBindRowStatus, hwMacBindEnableGroup=hwMacBindEnableGroup, hwMacBindEntry=hwMacBindEntry, PYSNMP_MODULE_ID=hwMACBIND, hwMacBindIPAddress=hwMacBindIPAddress, hwMACBIND=hwMACBIND, hwMacBindTable=hwMacBindTable, hwMacBindMibGroup=hwMacBindMibGroup, hwMacBindMibObjects=hwMacBindMibObjects)
