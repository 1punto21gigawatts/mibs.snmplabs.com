#
# PySNMP MIB module EDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EDGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:59:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, MibIdentifier, enterprises, TimeTicks, NotificationType, ModuleIdentity, experimental, Bits, Counter64, ObjectIdentity, IpAddress, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "enterprises", "TimeTicks", "NotificationType", "ModuleIdentity", "experimental", "Bits", "Counter64", "ObjectIdentity", "IpAddress", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
edge = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24))
edgeServerStat = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 1))
edgeServerStatTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1), )
if mibBuilder.loadTexts: edgeServerStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeServerStatTable.setDescription('Table containing objects for statistics for the EdgeServer Gateway Cards in the chassis.')
edgeServerStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeSsIndex"))
if mibBuilder.loadTexts: edgeServerStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeServerStatEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
edgeSsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsIndex.setDescription('A unique index identifying the Gateway Card to which the EdgeServer statistics table objects pertain')
edgeSsProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsProcessorTime.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsProcessorTime.setDescription('This object gives the Time the CPU spen executing non-idle thread.')
edgeSsInterruptPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsInterruptPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsInterruptPerSec.setDescription('This object is the number of interrupts received and servicced per second.')
edgeSsDiskPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsDiskPercentUsed.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsDiskPercentUsed.setDescription('This object is the Percent of the Disk used Space.')
edgeSsFreeMegabytes = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsFreeMegabytes.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsFreeMegabytes.setDescription('This object is the unallocated space on drive.')
edgeSsPercentDiskTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsPercentDiskTime.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsPercentDiskTime.setDescription('This object is the percent of time disk is busy servicing read/write requests.')
edgeSsPercentDiskReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsPercentDiskReadTime.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsPercentDiskReadTime.setDescription('This object is the percent of time disk is busy servicing read requests.')
edgeSsPercentDiskWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsPercentDiskWriteTime.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsPercentDiskWriteTime.setDescription('This object is the percent of time disk is busy servicing write requests.')
edgeSsMemoryPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsMemoryPercentUsed.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsMemoryPercentUsed.setDescription('This object is the physical Used percentage of memory.')
edgeSsPageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsPageFaultsPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsPageFaultsPerSec.setDescription('This object is the Rate of faulted pages handled by processor per second.')
edgeSsInfrastructManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsInfrastructManufacturer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsInfrastructManufacturer.setDescription('This object is the Customer Identifier.')
edgeSsedgeTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsedgeTechnology.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsedgeTechnology.setDescription('This object is the edge Technology used on the NAC.')
edgeSsCurrentSwLoadRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsCurrentSwLoadRevision.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsCurrentSwLoadRevision.setDescription('This object is the current revision of the Software load.')
edgeSsPreviousSwLoadRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsPreviousSwLoadRevision.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsPreviousSwLoadRevision.setDescription('This object is the previous revision of the Software load.')
edgeSsHwLoadRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsHwLoadRevision.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsHwLoadRevision.setDescription('This object is the revision of the Hardware Load.')
edgeSsComputerName = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeSsComputerName.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsComputerName.setDescription('This object is the Windows NT Computer Name')
edgeSsSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeSsSysUpTime.setStatus('mandatory')
if mibBuilder.loadTexts: edgeSsSysUpTime.setDescription('This object is the EdgeServer System Up Time in Minutes.')
edgeCfgDebugLevel = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 2))
edgeCfgDebugLevelTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1), )
if mibBuilder.loadTexts: edgeCfgDebugLevelTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDebugLevelTable.setDescription('Table containing objects for configuring Debug Levels for EdgeServer Gateway Cards in the chassis.')
edgeCfgDebugLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeCfgDbgIndex"))
if mibBuilder.loadTexts: edgeCfgDebugLevelEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDebugLevelEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
edgeCfgDbgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCfgDbgIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgIndex.setDescription('A unique index identifying the Gateway Card to which the Debug Level parameters table objects pertain')
edgeCfgDbgIp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgIp.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgIp.setDescription('This object configures the Debug Level for Ip Debug Systems.')
edgeCfgDbgPPP = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgPPP.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgPPP.setDescription('This object configures the Debug Level for PPP Debug Systems.')
edgeCfgDbgTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgTDM.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgTDM.setDescription('This object configures the Debug Level for TDM Debug Systems.')
edgeCfgDbgFrameService = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgFrameService.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgFrameService.setDescription('This object configures the Debug Level for Frame Service Debug Systems.')
edgeCfgDbgPacketBus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgPacketBus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgPacketBus.setDescription('This object configures the Debug Level for Packet Bus Debug Systems.')
edgeCfgDbgCallControl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgCallControl.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgCallControl.setDescription('This object configures the Debug Level for Call Control Debug Systems.')
edgeCfgDbgDataTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgDataTransfer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgDataTransfer.setDescription('This object configures the Debug Level for Data Transfer Debug Systems.')
edgeCfgDbgCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("minimum", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCfgDbgCompression.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCfgDbgCompression.setDescription('This object configures the Debug Level for Compression Debug Systems.')
edgeMemUtlTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 3))
edgeMemUtlTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1), )
if mibBuilder.loadTexts: edgeMemUtlTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrapTable.setDescription('Table containing objects for Memory Utilization Trap for EdgeServer Gateway Cards in the chassis.')
edgeMemUtlTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeMemUtlTrIndex"))
if mibBuilder.loadTexts: edgeMemUtlTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
edgeMemUtlTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeMemUtlTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrIndex.setDescription('A unique index identifying the Gateway Card to which the Memory Utilization Trap objects pertain')
edgeMemUtlTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperStatus.setDescription('This object is the operational Memory Utilization status Marginally operational trap enable/disable.')
edgeMemUtlTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrNonOperStatus.setDescription('This object is the operational Memory Utilization status Non operational trap enable/disable.')
edgeMemUtlTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrClearStatus.setDescription('This object is the operatinal Memory Utilization status Clear trap enable/disable.')
edgeMemUtlTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperThreshCnt.setDescription('This object is the Memory Utilization Marginally Operational Trap Threshold Count.')
edgeMemUtlTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrNonOperThreshCnt.setDescription('This object is the Memory Utilization Non Operational Trap Threshold Count.')
edgeMemUtlTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrClearThreshCnt.setDescription('This object is the Memory Utilization Clear Trap Threshold Count.')
edgeMemUtlTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrMrgOperThreshTimer.setDescription('This object is the Memory Utilization Marginally Operational Trap Threshold Time.')
edgeMemUtlTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrNonOperThreshTimer.setDescription('This object is the Memory Utilization Non Operational Trap Threshold Time.')
edgeMemUtlTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeMemUtlTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrClearThreshTimer.setDescription('This object is the Memory Utilization Clear Trap Threshold Time.')
edgeMemUtlTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeMemUtlTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeMemUtlTrStatus.setDescription('This object is the Status of the Memory utilization trap.')
edgeCpuUtlTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 4))
edgeCpuUtlTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1), )
if mibBuilder.loadTexts: edgeCpuUtlTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrapTable.setDescription('Table containing objects for CPU Utilization Trap for EdgeServer Gateway Cards in the chassis.')
edgeCpuUtlTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeCpuUtlTrIndex"))
if mibBuilder.loadTexts: edgeCpuUtlTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
edgeCpuUtlTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCpuUtlTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrIndex.setDescription('A unique index identifying the Gateway Card to which the CPU Utilization Trap objects pertain')
edgeCpuUtlTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperStatus.setDescription('This object is see the current operation of the CPU Utilization status Marginally operational trap enable/disable.')
edgeCpuUtlTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperStatus.setDescription('This object is to see the curent operation of the CPU Utilization status Non operational trap enable/disable.')
edgeCpuUtlTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrClearStatus.setDescription('This object is to see the current operation the CPU Utilization status Clear trap enable/disable.')
edgeCpuUtlTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperThreshCnt.setDescription('This object is the CPU Utilization Marginally Operational Trap Threshold Count.')
edgeCpuUtlTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperThreshCnt.setDescription('This object is the CPU Utilization Non Operational Trap Threshold Count.')
edgeCpuUtlTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrClearThreshCnt.setDescription('This object is the CPU Utilization Clear Trap Threshold Count.')
edgeCpuUtlTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrMrgOperThreshTimer.setDescription('This object is the CPU Utilization Marginally Operational Trap Threshold Time.')
edgeCpuUtlTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrNonOperThreshTimer.setDescription('This object is the CPU Utilization Non Operational Trap Threshold Time.')
edgeCpuUtlTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCpuUtlTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrClearThreshTimer.setDescription('This object is the CPU Utilization Clear Trap Threshold Time.')
edgeCpuUtlTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCpuUtlTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCpuUtlTrStatus.setDescription('This object is the CPU Utilization trap status.')
edgeDskUtlTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 5))
edgeDskUtlTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1), )
if mibBuilder.loadTexts: edgeDskUtlTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrapTable.setDescription('Table containing objects for DISK Utilization Trap for EdgeServer Gateway Cards in the chassis.')
edgeDskUtlTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeDskUtlTrIndex"))
if mibBuilder.loadTexts: edgeDskUtlTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
edgeDskUtlTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeDskUtlTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrIndex.setDescription('A unique index identifying the Gateway Card to which the DISK Utilization Trap objects pertain')
edgeDskUtlTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperStatus.setDescription('This object is see the current setting of the DISK Utilization status Marginally operational trap enable/disable.')
edgeDskUtlTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrNonOperStatus.setDescription('This object is to see the current setting of the DISK Utilization status Non operational trap enable/disable.')
edgeDskUtlTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrClearStatus.setDescription('This object is to see the current operational setting of the DISK Utilization status Clear trap enable/disable.')
edgeDskUtlTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperThreshCnt.setDescription('This object is the DISK Utilization Marginally Operational Trap Threshold Count.')
edgeDskUtlTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrNonOperThreshCnt.setDescription('This object is the DISK Utilization Non Operational Trap Threshold Count.')
edgeDskUtlTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrClearThreshCnt.setDescription('This object is the DISK Utilization Clear Trap Threshold Count.')
edgeDskUtlTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrMrgOperThreshTimer.setDescription('This object is the DISK Utilization Marginally Operational Trap Threshold Time.')
edgeDskUtlTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrNonOperThreshTimer.setDescription('This object is the DISK Utilization Non Operational Trap Threshold Time.')
edgeDskUtlTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeDskUtlTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrClearThreshTimer.setDescription('This object is the DISK Utilization Clear Trap Threshold Time.')
edgeDskUtlTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeDskUtlTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: edgeDskUtlTrStatus.setDescription('This object is the DISK Utilization trap status.')
edgeCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 24, 6))
edgeCmdTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1), )
if mibBuilder.loadTexts: edgeCmdTable.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdTable.setDescription('The IP Card Command table contains an entry for each of the manageable IP Gateway Card in the chassis. It provides a means through which to take specific actions on one or more IP Gateway cards in the NAS chassis.')
edgeCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1), ).setIndexNames((0, "EDGE-MIB", "edgeCmdIndex"))
if mibBuilder.loadTexts: edgeCmdEntry.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdEntry.setDescription('There is one IP Gateway Card Command entry per IP Gateway Card in the chassis.')
edgeCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCmdIndex.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdIndex.setDescription("A unique value for each IP Gateway Card in the chassis. The value of this object matches the value of the index of the correspond1ing IP Gateway Card's entry in the entity table of the chassis MIB.")
edgeCmdMgtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCmdMgtStationId.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdMgtStationId.setDescription('This object is a generic read-write variable that a Management Station (MS) can use to guarantee that the results from a given command are the results of a command issued by that specific MS. Each MS must SET a unique value to this object when doing commands and GET the value of this object together with ipgwCmdReqId and ipgwCmdResult to detect interference from other MSs.')
edgeCmdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCmdReqId.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdReqId.setDescription('This object contains the value of the request-id field in the SNMP PDU which invoked the current or most recent command or test on this IP Gateway Card. If the request-id is unknown or undefined, this object contains the value zero.')
edgeCmdFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 9))).clone(namedValues=NamedValues(("noCommand", 1), ("softwareReset", 7), ("bulkfileUpload", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCmdFunction.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdFunction.setDescription('This object contains a value which describes the command which is being invoked.')
edgeCmdForce = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("force", 1), ("noForce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCmdForce.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdForce.setDescription('In some cases, the IP Gateway Card may be in a state such that certain commands could adversely affect connections. In such cases, a command request with this object not present or set to noForce will result in a warning. If the operator elects to ignore such warnings, this object can be set to force in a subsequent issue of the command to cause the command to be carried out regardless of its potentially hazzardous effects.')
edgeCmdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: edgeCmdParam.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdParam.setDescription('This object contains parameters that are specific to the particular command being issued. In some cases, there will be no aditional parameters required.')
edgeCmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("notSupported", 4), ("unAbleToRun", 5), ("aborted", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCmdResult.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdResult.setDescription('This object contains the result of the most recently requested command or test, or the value none(1) if no commands have been requested since the last reset.')
edgeCmdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 24, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 12, 20, 22, 25, 58, 73))).clone(namedValues=NamedValues(("noError", 1), ("unable", 2), ("unrecognizedCommand", 6), ("slotEmpty", 8), ("noResponse", 12), ("unsupportedCommand", 20), ("deviceDisabled", 22), ("testFailed", 25), ("userInterfaceActive", 58), ("pendingSoftwareDownload", 73)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: edgeCmdCode.setStatus('mandatory')
if mibBuilder.loadTexts: edgeCmdCode.setDescription('The value of this object upon command completion indicates a further description of what went wrong if the command was unsuccessful. In the case of tests, a bit mapped result of each of the sub-tests performed can be found in the status table.')
mibBuilder.exportSymbols("EDGE-MIB", edgeMemUtlTrap=edgeMemUtlTrap, edgeCpuUtlTrNonOperThreshCnt=edgeCpuUtlTrNonOperThreshCnt, edgeServerStatEntry=edgeServerStatEntry, edge=edge, edgeCpuUtlTrNonOperThreshTimer=edgeCpuUtlTrNonOperThreshTimer, usr=usr, edgeCfgDbgPacketBus=edgeCfgDbgPacketBus, edgeMemUtlTrStatus=edgeMemUtlTrStatus, edgeCmdResult=edgeCmdResult, edgeDskUtlTrStatus=edgeDskUtlTrStatus, edgeCfgDbgTDM=edgeCfgDbgTDM, edgeCmdMgtStationId=edgeCmdMgtStationId, edgeCfgDbgIp=edgeCfgDbgIp, edgeSsSysUpTime=edgeSsSysUpTime, edgeSsPercentDiskWriteTime=edgeSsPercentDiskWriteTime, edgeDskUtlTrMrgOperThreshCnt=edgeDskUtlTrMrgOperThreshCnt, edgeMemUtlTrapEntry=edgeMemUtlTrapEntry, edgeServerStatTable=edgeServerStatTable, edgeDskUtlTrMrgOperThreshTimer=edgeDskUtlTrMrgOperThreshTimer, edgeCfgDebugLevelTable=edgeCfgDebugLevelTable, edgeCmdTable=edgeCmdTable, edgeDskUtlTrapEntry=edgeDskUtlTrapEntry, edgeSsFreeMegabytes=edgeSsFreeMegabytes, edgeServerStat=edgeServerStat, edgeCfgDbgCallControl=edgeCfgDbgCallControl, edgeSsMemoryPercentUsed=edgeSsMemoryPercentUsed, edgeMemUtlTrClearThreshTimer=edgeMemUtlTrClearThreshTimer, edgeCpuUtlTrMrgOperThreshCnt=edgeCpuUtlTrMrgOperThreshCnt, edgeCmdFunction=edgeCmdFunction, edgeMemUtlTrapTable=edgeMemUtlTrapTable, edgeMemUtlTrMrgOperThreshCnt=edgeMemUtlTrMrgOperThreshCnt, edgeMemUtlTrMrgOperStatus=edgeMemUtlTrMrgOperStatus, edgeCmdCode=edgeCmdCode, edgeCmd=edgeCmd, edgeSsPercentDiskReadTime=edgeSsPercentDiskReadTime, edgeSsPageFaultsPerSec=edgeSsPageFaultsPerSec, edgeMemUtlTrClearThreshCnt=edgeMemUtlTrClearThreshCnt, edgeCfgDbgFrameService=edgeCfgDbgFrameService, edgeDskUtlTrMrgOperStatus=edgeDskUtlTrMrgOperStatus, edgeCfgDbgCompression=edgeCfgDbgCompression, edgeMemUtlTrIndex=edgeMemUtlTrIndex, edgeDskUtlTrClearThreshTimer=edgeDskUtlTrClearThreshTimer, edgeCfgDbgIndex=edgeCfgDbgIndex, edgeCpuUtlTrMrgOperThreshTimer=edgeCpuUtlTrMrgOperThreshTimer, edgeMemUtlTrNonOperThreshCnt=edgeMemUtlTrNonOperThreshCnt, edgeCmdIndex=edgeCmdIndex, edgeCpuUtlTrStatus=edgeCpuUtlTrStatus, edgeMemUtlTrClearStatus=edgeMemUtlTrClearStatus, nas=nas, edgeCpuUtlTrClearStatus=edgeCpuUtlTrClearStatus, edgeCfgDebugLevelEntry=edgeCfgDebugLevelEntry, edgeCpuUtlTrClearThreshTimer=edgeCpuUtlTrClearThreshTimer, edgeMemUtlTrMrgOperThreshTimer=edgeMemUtlTrMrgOperThreshTimer, edgeSsComputerName=edgeSsComputerName, edgeSsPreviousSwLoadRevision=edgeSsPreviousSwLoadRevision, edgeDskUtlTrNonOperStatus=edgeDskUtlTrNonOperStatus, edgeSsCurrentSwLoadRevision=edgeSsCurrentSwLoadRevision, edgeCpuUtlTrMrgOperStatus=edgeCpuUtlTrMrgOperStatus, edgeDskUtlTrClearThreshCnt=edgeDskUtlTrClearThreshCnt, edgeCpuUtlTrap=edgeCpuUtlTrap, edgeCpuUtlTrapTable=edgeCpuUtlTrapTable, edgeCmdParam=edgeCmdParam, edgeDskUtlTrNonOperThreshCnt=edgeDskUtlTrNonOperThreshCnt, edgeCfgDbgPPP=edgeCfgDbgPPP, edgeCpuUtlTrClearThreshCnt=edgeCpuUtlTrClearThreshCnt, edgeSsInterruptPerSec=edgeSsInterruptPerSec, edgeCfgDbgDataTransfer=edgeCfgDbgDataTransfer, edgeCmdForce=edgeCmdForce, edgeMemUtlTrNonOperThreshTimer=edgeMemUtlTrNonOperThreshTimer, edgeSsedgeTechnology=edgeSsedgeTechnology, edgeSsInfrastructManufacturer=edgeSsInfrastructManufacturer, edgeCpuUtlTrNonOperStatus=edgeCpuUtlTrNonOperStatus, edgeCfgDebugLevel=edgeCfgDebugLevel, edgeDskUtlTrClearStatus=edgeDskUtlTrClearStatus, edgeDskUtlTrNonOperThreshTimer=edgeDskUtlTrNonOperThreshTimer, edgeDskUtlTrIndex=edgeDskUtlTrIndex, edgeDskUtlTrapTable=edgeDskUtlTrapTable, edgeDskUtlTrap=edgeDskUtlTrap, edgeSsHwLoadRevision=edgeSsHwLoadRevision, edgeCmdReqId=edgeCmdReqId, edgeCpuUtlTrapEntry=edgeCpuUtlTrapEntry, edgeSsProcessorTime=edgeSsProcessorTime, edgeCmdEntry=edgeCmdEntry, edgeSsDiskPercentUsed=edgeSsDiskPercentUsed, edgeSsPercentDiskTime=edgeSsPercentDiskTime, edgeCpuUtlTrIndex=edgeCpuUtlTrIndex, edgeMemUtlTrNonOperStatus=edgeMemUtlTrNonOperStatus, edgeSsIndex=edgeSsIndex)
