#
# PySNMP MIB module SAFEGUARD-ENGINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SAFEGUARD-ENGINE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:59:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Bits, Unsigned32, NotificationType, ModuleIdentity, ObjectIdentity, Integer32, Gauge32, TimeTicks, IpAddress, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Bits", "Unsigned32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Integer32", "Gauge32", "TimeTicks", "IpAddress", "MibIdentifier", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
swSafeGuardMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 19))
if mibBuilder.loadTexts: swSafeGuardMIB.setLastUpdated('200601160000Z')
if mibBuilder.loadTexts: swSafeGuardMIB.setOrganization(' ')
if mibBuilder.loadTexts: swSafeGuardMIB.setContactInfo(' ')
if mibBuilder.loadTexts: swSafeGuardMIB.setDescription('The MIB module for managing CPU protection.')
swSafeGuardGblMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 19, 1))
swSafeGuardctrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 19, 2))
swSafeGuardNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 19, 4))
swSafeGuardAdminState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSafeGuardAdminState.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardAdminState.setDescription('This object indicates the Safe Guard state of the switch.')
swSafeGuardRisingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSafeGuardRisingThreshold.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardRisingThreshold.setDescription('The object indicates CPU protection rising threshold in percentage. the range is between 20%-100% , if the CPU utilization is over the rising threshold, the switch enters exhausted mode.')
swSafeGuardFallingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSafeGuardFallingThreshold.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardFallingThreshold.setDescription('The object indicates CPU protection falling threshold in percentage. the range is between 20%-100% , if the CPU utilization is lower than the falling threshold, the switch enters normal mode.')
swSafeGuardAlarmAdminState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSafeGuardAlarmAdminState.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardAlarmAdminState.setDescription('This object indicates the state of cpu protection related trap/log mechanism (enable or disable). If set to enable, trap and log will be active while cpu protection current mode changed.If set to disable, current mode change will not trigger trap and log events.')
swSafeGuardCurrentStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("exhausted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSafeGuardCurrentStatus.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardCurrentStatus.setDescription('This object indicates current operation mode of Safe Guard ')
swSafeGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 19, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSafeGuardInterval.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardInterval.setDescription('The object indicates CPU utilization monitor interval in seconds. The range is between 5 to 10, default value is 5.')
swSafeGuardNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 19, 4, 1))
swSafeGuardNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 19, 4, 1, 0))
swSafeGuardChgToExhausted = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 19, 4, 1, 0, 1)).setObjects(("SAFEGUARD-ENGINE-MIB", "swSafeGuardCurrentStatus"))
if mibBuilder.loadTexts: swSafeGuardChgToExhausted.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardChgToExhausted.setDescription('This trap indicates System change operation mode from normal to exhausted.')
swSafeGuardChgToNormal = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 19, 4, 1, 0, 2)).setObjects(("SAFEGUARD-ENGINE-MIB", "swSafeGuardCurrentStatus"))
if mibBuilder.loadTexts: swSafeGuardChgToNormal.setStatus('current')
if mibBuilder.loadTexts: swSafeGuardChgToNormal.setDescription('This trap indicates System change operation mode from exhausted to normal.')
mibBuilder.exportSymbols("SAFEGUARD-ENGINE-MIB", swSafeGuardctrl=swSafeGuardctrl, swSafeGuardCurrentStatus=swSafeGuardCurrentStatus, swSafeGuardRisingThreshold=swSafeGuardRisingThreshold, swSafeGuardChgToNormal=swSafeGuardChgToNormal, swSafeGuardNotifyPrefix=swSafeGuardNotifyPrefix, swSafeGuardNotify=swSafeGuardNotify, PYSNMP_MODULE_ID=swSafeGuardMIB, swSafeGuardMIB=swSafeGuardMIB, swSafeGuardChgToExhausted=swSafeGuardChgToExhausted, swSafeGuardGblMgmt=swSafeGuardGblMgmt, swSafeGuardInterval=swSafeGuardInterval, swSafeGuardAdminState=swSafeGuardAdminState, swSafeGuardFallingThreshold=swSafeGuardFallingThreshold, swSafeGuardNotification=swSafeGuardNotification, swSafeGuardAlarmAdminState=swSafeGuardAlarmAdminState)
