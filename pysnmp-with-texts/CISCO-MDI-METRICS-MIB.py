#
# PySNMP MIB module CISCO-MDI-METRICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MDI-METRICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:06:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
cfmFlowMetricsIntNumber, cfmFlowId, cfmFlowMonitorId = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-MIB", "cfmFlowMetricsIntNumber", "cfmFlowId", "cfmFlowMonitorId")
FlowBitRateUnits, FlowMetricScale, FlowMetricValue, FlowCfgRateType, FlowMetricPrecision = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-TC-MIB", "FlowBitRateUnits", "FlowMetricScale", "FlowMetricValue", "FlowCfgRateType", "FlowMetricPrecision")
ReportIntervalCount, = mibBuilder.importSymbols("CISCO-REPORT-INTERVAL-TC-MIB", "ReportIntervalCount")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
TimeIntervalMin, = mibBuilder.importSymbols("CISCO-TC", "TimeIntervalMin")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Gauge32, iso, ObjectIdentity, Bits, MibIdentifier, IpAddress, Unsigned32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Gauge32", "iso", "ObjectIdentity", "Bits", "MibIdentifier", "IpAddress", "Unsigned32", "ModuleIdentity", "TimeTicks")
TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString")
ciscoMdiMetricsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699))
ciscoMdiMetricsMIB.setRevisions(('2009-11-02 00:00', '2009-06-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMdiMetricsMIB.setRevisionsDescriptions(('Added the objects cfmMdiMetricsMdc, cfmMdiMetricsIntMdc. Modified the objects cfmMdiMetricsValid and cfmMdiMetricsIntValid with values to support the above object additions. Added cfmeMdiCumulativeMdc and cfmeMdiMdc to cfmMdiMonitoredElements.', 'The initial version of the MIB module.',))
if mibBuilder.loadTexts: ciscoMdiMetricsMIB.setLastUpdated('200911020000Z')
if mibBuilder.loadTexts: ciscoMdiMetricsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMdiMetricsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoMdiMetricsMIB.setDescription("This MIB module defines objects that describe the Media Delivery Index (MDI). The MDI [RFC4445] measurement describes the quality indicator of a network intended to delivery applications such as streaming media, MPEG video, VoIP, or other information sensitive to arrival time and packet loss. GLOSSARY ============ Delay Factor - the maximum observed value of the flow rate imbalance over a measurement interval. DF - Delay Factor. Flow Monitor - a hardware or software entity that classifies traffic flows, collects flow data, and periodically computes flow metrics. Flow Metric - a measurement that reflects the quality of a traffic flow. Measurement Interval - the length of time over which a flow monitor collects data related to a traffic flow, after which the flow monitor computes flow metrics using the collected data. Media Loss Rate - the number of lost or out-of-order packets over a measurement interval. Media Rate - the effective bit rate of the media content carried by a traffic flow. MLR - Media Loss Rate. MR - Media Rate. Traffic Flow - a unidirectional stream of packets conforming to a classifier. For example, packets having a particular source IP address, destination IP address, protocol type, source port number, and destination port number. VB - Virtual Buffer. Virtual Buffer - a virtual buffer is a construct used to simulate a real buffer used by a media application for the purpose of storing media packets until the application can render their content. REFERENCES ============== [RFC4445] J. Welch and J. Clark, 'A Proposed Media Delivery Index (MDI)', RFC-4445, April 2006.")
ciscoMdiMetricsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 0))
ciscoMdiMetricsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 1))
ciscoMdiMetricsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 2))
ciscoMdiMetricsMIBIds = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 3))
cfmMdiMetrics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1))
cfmMdiMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1), )
if mibBuilder.loadTexts: cfmMdiMetricsTable.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsTable.setDescription("This table contains aggregate data maintained by a flow monitor for traffic flows for which it is computing MDI metrics. This table has an sparse dependent relationship on the cfmFlowMetricsTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsTable having a corresponding instance of cfmFlowMetricsCollected with the 'mdi' bit set to one.")
cfmMdiMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"))
if mibBuilder.loadTexts: cfmMdiMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsEntry.setDescription('An entry describes cumulative and aggregate MDI metrics for a single traffic flow. The devices creates a row in the cfmMdiMetricsTable when a flow monitor starts monitoring a traffic flow and has been configured to compute MDI metrics for the same traffic flow. Likewise, the device destroys a row in the cfmMdiMetricsMetricsTable when the corresponding flow monitor has ceased monitoring the traffic flow (e.g., when a traffic flow has timed out).')
cfmMdiMetricsCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 1), FlowCfgRateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsCfgRateType.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsCfgRateType.setDescription('This object indicates how the corresponding flow monitor computes the DF for the traffic flow.')
cfmMdiMetricsCfgBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 2), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsCfgBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsCfgBitRate.setDescription("This object indicates the units for the corresponding instance of cfmMdiMetricsCfgRate. The value of this column only has relevance if the corresponding instance of cfmMdiMetricsCfgRateType is 'ipBitRate' or 'mediaRate'.")
cfmMdiMetricsCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsCfgRate.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsCfgRate.setDescription("This object indicates the configured bit rate used by the flow monitor to compute the DF for the traffic flow. The value of this column only has relevance if the corresponding instance of cfmMdiMetricsCfgRateType is 'ipBitRate' or 'mediaRate'.")
cfmMdiMetricsCfgMediaPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsCfgMediaPktSize.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsCfgMediaPktSize.setDescription("This object indicates the configured media packet size used by the flow monitor to compute the DF for the traffic flow. The value of this column only has relevance if the corresponding instance of cfmMdiMetricsCfgRateType is 'mediaRate'.")
cfmMdiMetricsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("lostPkts", 0), ("mediaLossRate", 1), ("mediaDiscontinuityCount", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsValid.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsValid.setDescription("This object indicates which metrics are valid for the traffic flow: 'lostPkts' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsLostPkts is valid. 'mediaLossRate' If this bit is set to '1', then the corresponding instances of cfmMdiMetricsMlrScale, cfmMdiMetricsMlrPrecision, and cfmMdiMetricsMlr are valid. 'mediaDiscontinuityCount' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsMdc is valid.")
cfmMdiMetricsLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsLostPkts.setDescription("This object indicates the number of packets lost for the traffic flow. The value of this column is valid if and only if the 'lostPkts' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsMlrScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 7), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsMlrScale.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsMlrScale.setDescription("This object indicates the scale factor for the corresponding instance of cfmMdiMetricsMlr. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsMlrPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 8), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsMlrPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsMlrPrecision.setDescription("This object indicates the precision for the corresponding instance of cfmMdiMetricsMlr. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsMlr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 9), FlowMetricValue()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsMlr.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsMlr.setDescription("This object indicates the MLR for the traffic flow since the flow monitor started collecting data for the traffic flow. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsMdc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 1, 1, 10), Counter64()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsMdc.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsMdc.setDescription("This object indicates the media discontinuity events count for the traffic flow since the flow monitor started collecting data for the traffic flow. The value of this column is valid if and only if the 'mediaDiscontinuityCount' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsTableChanged.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsTableChanged.setDescription('This object indicates the value of sysUpTime the last time the device created/destroyed a row in the cfmMdiMetricsTable.')
cfmMdiMetricsIntTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3), )
if mibBuilder.loadTexts: cfmMdiMetricsIntTable.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntTable.setDescription("This table contains historic MDI metrics for the traffic flows monitored by each of the flow monitors supported by the device. This table has an sparse dependent relationship on the cfmFlowMetricsIntTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsIntTable having a corresponding instance of cfmFlowMetricsCollected with the 'mdi' bit set to one.")
cfmMdiMetricsIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMetricsIntNumber"))
if mibBuilder.loadTexts: cfmMdiMetricsIntEntry.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntEntry.setDescription('An entry describes MDI metrics collected for a previous measurement interval for a corresponding traffic flow.')
cfmMdiMetricsIntValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("lostPkts", 0), ("vbMin", 1), ("vbMax", 2), ("mediaRate", 3), ("delayFactor", 4), ("mediaLossRate", 5), ("mediaDiscontinuityCount", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntValid.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntValid.setDescription("This object indicates which metrics are valid for the measurement interval: 'lostPkts' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsIntLostPkts is valid. 'vbMin' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsIntVbMin is valid. 'vbMax' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsIntVbMax is valid. 'mediaRate' If this bit is set to '1', then the corresponding instances of cfmMdiMetricsIntMrUnits and cfmMdiMetricsIntMr are valid. 'delayFactor' If this bit is set to '1', then the corresponding instances of cfmMdiMetricsIntDfScale, cfmMdiMetricsIntDfPrecision, and cfmMdiMetricsIntDf are valid. 'mediaLossRate' If this bit is set to '1', then the corresponding instances of cfmMdiMetricsIntMlrScale, cfmMdiMetricsIntMlrPrecision, and cfmMdiMetricsIntMlr are valid. 'mediaDiscontinuityCount' If this bit is set to '1', then the corresponding instance of cfmMdiMetricsIntMdc is valid.")
cfmMdiMetricsIntLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 2), ReportIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntLostPkts.setDescription("This object indicates the number of packets lost for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'lostPkts' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsIntVbMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 3), ReportIntervalCount()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntVbMin.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntVbMin.setDescription("This object indicates the minimum virtual buffer size computed for the traffic flow over the course of the measurement interval. The value of this column is valid if and only if the 'vbMin' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmMdiMetricsIntVbMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 4), ReportIntervalCount()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntVbMax.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntVbMax.setDescription("This object indicates the maximum virtual buffer size computed for the traffic flow over the course of the measurement interval. The value of this column is valid if and only if the 'vbMax' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMrUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 5), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMrUnits.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMrUnits.setDescription("This object indicates the units for the corresponding instance of cfmMdiMetricsIntMr. The value of this column is valid if and only if the 'mediaRate' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 6), ReportIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMr.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMr.setDescription("This object indicates the media rate used by the flow monitor to compute the DF for the traffic flow. If the corresponding instance of cfmMdiMetricsCfgRateType is 'auto', then the value of this column indicates the MR for the traffic flow during the measurement interval. Otherwise, the value of this column reflects the configure MR. The value of this column is valid if and only if the 'mediaRate' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntDfScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 7), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntDfScale.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntDfScale.setDescription("This object indicates the scaling factor for the corresponding instance of cfmMdiMetricsIntDf. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntDfPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 8), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntDfPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntDfPrecision.setDescription("This object indicates the precision for the corresponding instance of cfmMdiMetricsIntDf. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntDf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 9), FlowMetricValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntDf.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntDf.setDescription("This object indicates the DF for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMlrScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 10), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMlrScale.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMlrScale.setDescription("This object indicates the scaling factor for the corresponding instance of cfmMdiMetricsIntMlr. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMlrPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 11), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMlrPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMlrPrecision.setDescription("This object indicates the precision for the corresponding instance of cfmMdiMetricsIntMlr. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMlr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 12), FlowMetricValue()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMlr.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMlr.setDescription("This object indicates the MLR for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'mediaLossRate' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMetricsIntMdc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 699, 1, 1, 3, 1, 13), ReportIntervalCount()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmMdiMetricsIntMdc.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsIntMdc.setDescription("This object indicates the media discontinuity events count for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'mediaDiscontinuityCount' bit in the corresponding instance of cfmMdiMetricsIntValid is set to '1'.")
cfmMdiMonitoredElements = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1))
cfmeMdiCumulativeLostPkts = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 1))
if mibBuilder.loadTexts: cfmeMdiCumulativeLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiCumulativeLostPkts.setDescription('This object identifier represents the monitored element describing the cumulative number of lost packets for a traffic flow (cfmMdiMetricsLostPkts).')
cfmeMdiCumulativeMlr = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 2))
if mibBuilder.loadTexts: cfmeMdiCumulativeMlr.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiCumulativeMlr.setDescription('This object identifier represents the monitored element describing the MDI MLR for a traffic flow (cfmMdiMetricsMlr).')
cfmeMdiCumulativeMdc = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 3))
if mibBuilder.loadTexts: cfmeMdiCumulativeMdc.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiCumulativeMdc.setDescription('This object identifier represents the monitored element describing the MDI MDC for a traffic flow (cfmMdiMetricsMdc).')
cfmeMdiLostPkts = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 4))
if mibBuilder.loadTexts: cfmeMdiLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiLostPkts.setDescription('This object identifier represents the monitored element describing the number of lost packets for a traffic flow during the last measurement interval (cfmMdiMetricsIntLostPkts).')
cfmeMdiDf = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 5))
if mibBuilder.loadTexts: cfmeMdiDf.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiDf.setDescription('This object identifier represents the monitored element describing the MDI DF for a traffic flow during the last measurement interval (cfmMdiMetricsIntDf).')
cfmeMdiMlr = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 6))
if mibBuilder.loadTexts: cfmeMdiMlr.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiMlr.setDescription('This object identifier represents the monitored element describing the MDI MLR for a traffic flow during the last measurement interval (cfmMdiMetricsIntMlr).')
cfmeMdiMdc = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 699, 3, 1, 7))
if mibBuilder.loadTexts: cfmeMdiMdc.setStatus('current')
if mibBuilder.loadTexts: cfmeMdiMdc.setDescription('This object identifier represents the monitored element describing the MDI MDC for a traffic flow during the last measurement interval (cfmMdiMetricsIntMdc).')
ciscoMdiMetricsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 2, 1))
ciscoMdiMetricsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 699, 2, 2))
ciscoMdiMetricsCompliance01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 699, 2, 1, 1)).setObjects(("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMdiMetricsCompliance01 = ciscoMdiMetricsCompliance01.setStatus('current')
if mibBuilder.loadTexts: ciscoMdiMetricsCompliance01.setDescription('This compliance statement specifies the minimal requirements an implementation must meet in order to claim full compliance with the definition of the CISCO-MDI-METRICS-MIB.')
cfmMdiMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 699, 2, 2, 1)).setObjects(("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsCfgRateType"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsCfgBitRate"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsCfgRate"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsCfgMediaPktSize"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsValid"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsLostPkts"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsMlrScale"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsMlrPrecision"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsMlr"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsMdc"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsTableChanged"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntValid"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntLostPkts"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntVbMin"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntVbMax"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMrUnits"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMr"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntDfScale"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntDfPrecision"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntDf"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMlrScale"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMlrPrecision"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMlr"), ("CISCO-MDI-METRICS-MIB", "cfmMdiMetricsIntMdc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMdiMetricsGroup = cfmMdiMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: cfmMdiMetricsGroup.setDescription('This group contains objects that describe MDI metrics.')
mibBuilder.exportSymbols("CISCO-MDI-METRICS-MIB", cfmMdiMetricsMlrScale=cfmMdiMetricsMlrScale, ciscoMdiMetricsMIBObjects=ciscoMdiMetricsMIBObjects, ciscoMdiMetricsMIBIds=ciscoMdiMetricsMIBIds, cfmeMdiMdc=cfmeMdiMdc, ciscoMdiMetricsCompliance01=ciscoMdiMetricsCompliance01, cfmMdiMetricsMlrPrecision=cfmMdiMetricsMlrPrecision, cfmMdiMetricsIntTable=cfmMdiMetricsIntTable, cfmMdiMetricsIntValid=cfmMdiMetricsIntValid, cfmMdiMetricsMlr=cfmMdiMetricsMlr, cfmMdiMetricsMdc=cfmMdiMetricsMdc, cfmMdiMetricsIntDfPrecision=cfmMdiMetricsIntDfPrecision, cfmMdiMetricsEntry=cfmMdiMetricsEntry, cfmeMdiLostPkts=cfmeMdiLostPkts, ciscoMdiMetricsMIB=ciscoMdiMetricsMIB, cfmMdiMetricsValid=cfmMdiMetricsValid, cfmMdiMetricsIntVbMax=cfmMdiMetricsIntVbMax, cfmMdiMetricsIntMr=cfmMdiMetricsIntMr, cfmMdiMetricsIntDf=cfmMdiMetricsIntDf, cfmMdiMetricsIntMlr=cfmMdiMetricsIntMlr, cfmMdiMetricsCfgBitRate=cfmMdiMetricsCfgBitRate, ciscoMdiMetricsMIBCompliances=ciscoMdiMetricsMIBCompliances, cfmeMdiMlr=cfmeMdiMlr, cfmMdiMetricsCfgMediaPktSize=cfmMdiMetricsCfgMediaPktSize, cfmMdiMetricsTableChanged=cfmMdiMetricsTableChanged, PYSNMP_MODULE_ID=ciscoMdiMetricsMIB, ciscoMdiMetricsMIBNotifs=ciscoMdiMetricsMIBNotifs, cfmMdiMetricsCfgRate=cfmMdiMetricsCfgRate, cfmeMdiCumulativeMlr=cfmeMdiCumulativeMlr, cfmeMdiDf=cfmeMdiDf, cfmMdiMetricsLostPkts=cfmMdiMetricsLostPkts, ciscoMdiMetricsMIBGroups=ciscoMdiMetricsMIBGroups, cfmMdiMonitoredElements=cfmMdiMonitoredElements, cfmMdiMetricsIntVbMin=cfmMdiMetricsIntVbMin, cfmMdiMetrics=cfmMdiMetrics, cfmeMdiCumulativeMdc=cfmeMdiCumulativeMdc, cfmMdiMetricsCfgRateType=cfmMdiMetricsCfgRateType, cfmMdiMetricsIntEntry=cfmMdiMetricsIntEntry, cfmMdiMetricsIntMdc=cfmMdiMetricsIntMdc, cfmMdiMetricsIntMlrScale=cfmMdiMetricsIntMlrScale, cfmMdiMetricsIntLostPkts=cfmMdiMetricsIntLostPkts, cfmeMdiCumulativeLostPkts=cfmeMdiCumulativeLostPkts, cfmMdiMetricsGroup=cfmMdiMetricsGroup, cfmMdiMetricsIntMlrPrecision=cfmMdiMetricsIntMlrPrecision, cfmMdiMetricsTable=cfmMdiMetricsTable, ciscoMdiMetricsMIBConform=ciscoMdiMetricsMIBConform, cfmMdiMetricsIntMrUnits=cfmMdiMetricsIntMrUnits, cfmMdiMetricsIntDfScale=cfmMdiMetricsIntDfScale)
