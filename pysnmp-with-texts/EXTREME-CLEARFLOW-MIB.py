#
# PySNMP MIB module EXTREME-CLEARFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-CLEARFLOW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Counter64, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, ObjectIdentity, MibIdentifier, NotificationType, Counter32, ModuleIdentity, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "ObjectIdentity", "MibIdentifier", "NotificationType", "Counter32", "ModuleIdentity", "IpAddress", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
extremeClearflow = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 30))
if mibBuilder.loadTexts: extremeClearflow.setLastUpdated('200503220000Z')
if mibBuilder.loadTexts: extremeClearflow.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeClearflow.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeClearflow.setDescription('CLEAR-Flow MIB')
extremeClearflowMsgId = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowMsgId.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowMsgId.setDescription('User-defined message id')
extremeClearflowMsg = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowMsg.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowMsg.setDescription('User-defined message')
extremeClearflowPolicyName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowPolicyName.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowPolicyName.setDescription('Policy file name')
extremeClearflowRuleName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowRuleName.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowRuleName.setDescription('Rule name which triggered this message')
extremeClearflowRuleValue = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 5), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowRuleValue.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowRuleValue.setDescription('Calculated rule value')
extremeClearflowRuleThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 6), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowRuleThreshold.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowRuleThreshold.setDescription('Rule threshold value')
extremeClearflowRuleInterval = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowRuleInterval.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowRuleInterval.setDescription('Rule sampling and evaluation interval')
extremeClearflowVlanName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowVlanName.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowVlanName.setDescription('Vlan name on which this policy is applied')
extremeClearflowPortName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 30, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeClearflowPortName.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowPortName.setDescription('Port name on which this policy is applied')
extremeAclListTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10), )
if mibBuilder.loadTexts: extremeAclListTable.setStatus('current')
if mibBuilder.loadTexts: extremeAclListTable.setDescription('This table lists Access control list information that exist within a device. A single entry exists in this list for each VLAN and Port interface in the system.')
extremeAclListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1), ).setIndexNames((0, "EXTREME-CLEARFLOW-MIB", "extremeAclVlanIfIndex"), (0, "EXTREME-CLEARFLOW-MIB", "extremeAclPortIfIndex"))
if mibBuilder.loadTexts: extremeAclListEntry.setStatus('current')
if mibBuilder.loadTexts: extremeAclListEntry.setDescription('An individual Access control list entry.')
extremeAclPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeAclPortIfIndex.setDescription('An port index that uniquely identifies an entry in the acl list table.')
extremeAclVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclVlanIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeAclVlanIfIndex.setDescription('An vlan index that uniquely identifies an entry in the acl list table.')
extremeAclCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclCounterName.setStatus('current')
if mibBuilder.loadTexts: extremeAclCounterName.setDescription('The access control list counter name')
extremeAclVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclVlanName.setStatus('current')
if mibBuilder.loadTexts: extremeAclVlanName.setDescription('Vlan name on which this policy is applied')
extremeAclPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclPolicyName.setStatus('current')
if mibBuilder.loadTexts: extremeAclPolicyName.setDescription('The access control list name')
extremeAclDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclDirection.setStatus('current')
if mibBuilder.loadTexts: extremeAclDirection.setDescription('The interface direction.')
extremeAclPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclPktCount.setStatus('current')
if mibBuilder.loadTexts: extremeAclPktCount.setDescription('The access control list packet count')
extremeAclByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAclByteCount.setStatus('current')
if mibBuilder.loadTexts: extremeAclByteCount.setDescription('The access control list byte count')
extremeTrafficQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11), )
if mibBuilder.loadTexts: extremeTrafficQueueStatsTable.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueStatsTable.setDescription('This table lists traffic queue statistics information that exist within a device. A single entry exists in this list for each traffic queue in the system.')
extremeTrafficQueueStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1), ).setIndexNames((0, "EXTREME-CLEARFLOW-MIB", "extremeTrafficQueueName"))
if mibBuilder.loadTexts: extremeTrafficQueueStatsTableEntry.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueStatsTableEntry.setDescription('An individual traffic queue stats table entry.')
extremeTrafficQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueName.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueName.setDescription('The traffic queue name that uniquely identifies an entry in the traffic queue table.')
extremeTrafficQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueDirection.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueDirection.setDescription('Indicates the direction of traffic queue')
extremeTrafficQueueHighPassedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueHighPassedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueHighPassedPkts.setDescription('Maximum number of packets passed for this traffic queue')
extremeTrafficQueueHighPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueHighPassedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueHighPassedBytes.setDescription('Maximum number of bytes passed for this traffic queue')
extremeTrafficQueueHighDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueHighDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueHighDroppedPkts.setDescription('Maximum number of packets dropped for this traffic queue')
extremeTrafficQueueHighDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueHighDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueHighDroppedBytes.setDescription('Maximum number of bytes dropped for this traffic queue')
extremeTrafficQueueMedPassedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueMedPassedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueMedPassedPkts.setDescription('Medium number of packets passed for this traffic queue')
extremeTrafficQueueMedPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueMedPassedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueMedPassedBytes.setDescription('Medium number of bytes passed for this traffic queue')
extremeTrafficQueueMedDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueMedDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueMedDroppedPkts.setDescription('Medium number of packets dropped for this traffic queue')
extremeTrafficQueueMedDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueMedDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueMedDroppedBytes.setDescription('Medium number of bytes dropped for this traffic queue')
extremeTrafficQueueLowPassedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueLowPassedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueLowPassedPkts.setDescription('Minimum number of packets passed for this traffic queue')
extremeTrafficQueueLowPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueLowPassedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueLowPassedBytes.setDescription('Minimum number of bytes passed for this traffic queue')
extremeTrafficQueueLowDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueLowDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueLowDroppedPkts.setDescription('Minimum number of packets dropped for this traffic queue')
extremeTrafficQueueLowDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueLowDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueLowDroppedBytes.setDescription('Minimum number of bytes dropped for this traffic queue')
extremeTrafficQueueAggPassedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueAggPassedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueAggPassedPkts.setDescription('Aggregate number of packets passed for this traffic queue')
extremeTrafficQueueAggPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueAggPassedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueAggPassedBytes.setDescription('Aggregate number of bytes passed for this traffic queue')
extremeTrafficQueueAggDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueAggDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueAggDroppedPkts.setDescription('Aggregate number of packets dropped for this traffic queue')
extremeTrafficQueueAggDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 11, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueAggDroppedBytes.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueAggDroppedBytes.setDescription('Aggregate number of bytes dropped for this traffic queue')
extremeTrafficQueueUtilTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12), )
if mibBuilder.loadTexts: extremeTrafficQueueUtilTable.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueUtilTable.setDescription('This table lists traffic queue statistics information that exist within a device. A single entry exists in this list for each traffic queue in the system.')
extremeTrafficQueueUtilTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1), ).setIndexNames((0, "EXTREME-CLEARFLOW-MIB", "extremeUtilTrafficQueueName"))
if mibBuilder.loadTexts: extremeTrafficQueueUtilTableEntry.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueUtilTableEntry.setDescription('An each traffic queue related utilization information')
extremeUtilTrafficQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeUtilTrafficQueueName.setStatus('current')
if mibBuilder.loadTexts: extremeUtilTrafficQueueName.setDescription('The traffic queue name that uniquely identifies an entry in the traffic queue table.')
extremeUtilTrafficQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeUtilTrafficQueueDirection.setStatus('current')
if mibBuilder.loadTexts: extremeUtilTrafficQueueDirection.setDescription('Indicates the direction of traffic queue')
extremeTrafficQueueHighUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueHighUtilization.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueHighUtilization.setDescription('High level utilization of the traffic queue ')
extremeTrafficQueueMedUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueMedUtilization.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueMedUtilization.setDescription('Medium level utilization of the traffic queue ')
extremeTrafficQueueLowUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 30, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTrafficQueueLowUtilization.setStatus('current')
if mibBuilder.loadTexts: extremeTrafficQueueLowUtilization.setDescription('Low level utilization of the traffic queue ')
extremeClearflowTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 30, 0))
extremeClearflowTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 30, 0, 0))
extremeClearflowMessage = NotificationType((1, 3, 6, 1, 4, 1, 1916, 1, 30, 0, 0, 1)).setObjects(("EXTREME-CLEARFLOW-MIB", "extremeClearflowMsgId"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowMsg"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowPolicyName"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowRuleName"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowRuleValue"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowRuleThreshold"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowRuleInterval"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowVlanName"), ("EXTREME-CLEARFLOW-MIB", "extremeClearflowPortName"))
if mibBuilder.loadTexts: extremeClearflowMessage.setStatus('current')
if mibBuilder.loadTexts: extremeClearflowMessage.setDescription('CLEAR-Flow message trap')
mibBuilder.exportSymbols("EXTREME-CLEARFLOW-MIB", extremeAclListTable=extremeAclListTable, extremeTrafficQueueMedPassedBytes=extremeTrafficQueueMedPassedBytes, extremeClearflowTraps=extremeClearflowTraps, extremeTrafficQueueStatsTable=extremeTrafficQueueStatsTable, extremeTrafficQueueDirection=extremeTrafficQueueDirection, extremeUtilTrafficQueueDirection=extremeUtilTrafficQueueDirection, extremeClearflowMessage=extremeClearflowMessage, extremeTrafficQueueUtilTable=extremeTrafficQueueUtilTable, extremeTrafficQueueAggDroppedPkts=extremeTrafficQueueAggDroppedPkts, extremeClearflowRuleName=extremeClearflowRuleName, extremeAclPolicyName=extremeAclPolicyName, extremeTrafficQueueAggPassedBytes=extremeTrafficQueueAggPassedBytes, extremeAclVlanIfIndex=extremeAclVlanIfIndex, extremeTrafficQueueHighUtilization=extremeTrafficQueueHighUtilization, PYSNMP_MODULE_ID=extremeClearflow, extremeTrafficQueueLowDroppedBytes=extremeTrafficQueueLowDroppedBytes, extremeClearflowTrapsPrefix=extremeClearflowTrapsPrefix, extremeClearflowMsg=extremeClearflowMsg, extremeAclListEntry=extremeAclListEntry, extremeTrafficQueueLowDroppedPkts=extremeTrafficQueueLowDroppedPkts, extremeTrafficQueueMedDroppedBytes=extremeTrafficQueueMedDroppedBytes, extremeAclPktCount=extremeAclPktCount, extremeTrafficQueueAggDroppedBytes=extremeTrafficQueueAggDroppedBytes, extremeTrafficQueueLowPassedBytes=extremeTrafficQueueLowPassedBytes, extremeTrafficQueueHighPassedBytes=extremeTrafficQueueHighPassedBytes, extremeClearflowRuleValue=extremeClearflowRuleValue, extremeTrafficQueueUtilTableEntry=extremeTrafficQueueUtilTableEntry, extremeAclPortIfIndex=extremeAclPortIfIndex, extremeTrafficQueueName=extremeTrafficQueueName, extremeAclByteCount=extremeAclByteCount, extremeClearflowVlanName=extremeClearflowVlanName, extremeClearflowMsgId=extremeClearflowMsgId, extremeClearflowPortName=extremeClearflowPortName, extremeAclDirection=extremeAclDirection, extremeClearflowPolicyName=extremeClearflowPolicyName, extremeTrafficQueueMedUtilization=extremeTrafficQueueMedUtilization, extremeTrafficQueueMedDroppedPkts=extremeTrafficQueueMedDroppedPkts, extremeClearflow=extremeClearflow, extremeTrafficQueueLowPassedPkts=extremeTrafficQueueLowPassedPkts, extremeTrafficQueueLowUtilization=extremeTrafficQueueLowUtilization, extremeTrafficQueueHighPassedPkts=extremeTrafficQueueHighPassedPkts, extremeClearflowRuleThreshold=extremeClearflowRuleThreshold, extremeTrafficQueueHighDroppedBytes=extremeTrafficQueueHighDroppedBytes, extremeTrafficQueueAggPassedPkts=extremeTrafficQueueAggPassedPkts, extremeAclCounterName=extremeAclCounterName, extremeAclVlanName=extremeAclVlanName, extremeTrafficQueueMedPassedPkts=extremeTrafficQueueMedPassedPkts, extremeUtilTrafficQueueName=extremeUtilTrafficQueueName, extremeClearflowRuleInterval=extremeClearflowRuleInterval, extremeTrafficQueueStatsTableEntry=extremeTrafficQueueStatsTableEntry, extremeTrafficQueueHighDroppedPkts=extremeTrafficQueueHighDroppedPkts)
