#
# PySNMP MIB module VEEAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VEEAM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:33:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, MibIdentifier, NotificationType, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, IpAddress, TimeTicks, iso, Counter32, Integer32, NotificationType, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "MibIdentifier", "NotificationType", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "IpAddress", "TimeTicks", "iso", "Counter32", "Integer32", "NotificationType", "Gauge32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
veeam = MibIdentifier((1, 3, 6, 1, 4, 1, 31023))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 31023, 1))
backup = MibIdentifier((1, 3, 6, 1, 4, 1, 31023, 1, 1))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1))
onBackupJobCompleted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,1)).setObjects(("VEEAM-MIB", "backupJobId"), ("VEEAM-MIB", "backupJobName"), ("VEEAM-MIB", "backupJobResult"), ("VEEAM-MIB", "backupJobComment"))
if mibBuilder.loadTexts: onBackupJobCompleted.setDescription('This trap is sent on backup/replica job completed.')
onVmBackupCompleted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,2)).setObjects(("VEEAM-MIB", "backupJobName"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "sourceHostName"), ("VEEAM-MIB", "vmBackupResult"), ("VEEAM-MIB", "vmBackupComment"))
if mibBuilder.loadTexts: onVmBackupCompleted.setDescription('This trap is sent on vm backup/replica completed.')
onLinuxFLRMountStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,3)).setObjects(("VEEAM-MIB", "sessionId"), ("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"))
if mibBuilder.loadTexts: onLinuxFLRMountStarted.setDescription('This trap is sent when Multi-OS FLR helper appliance starts.')
onLinuxFLRCopyToStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,4)).setObjects(("VEEAM-MIB", "sessionId"), ("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "targetHost"), ("VEEAM-MIB", "targetDir"))
if mibBuilder.loadTexts: onLinuxFLRCopyToStarted.setDescription('This trap is sent when Multi-OS FLR file recovery via Copy To operation is initiated.')
onLinuxFLRToOriginalStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,5)).setObjects(("VEEAM-MIB", "sessionId"), ("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"))
if mibBuilder.loadTexts: onLinuxFLRToOriginalStarted.setDescription('This trap is sent when Multi-OS FLR file recovery via Restore operation is initiated.')
onLinuxFLRCopyToFinished = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,6)).setObjects(("VEEAM-MIB", "sessionId"), ("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "transferStatus"), ("VEEAM-MIB", "transferTime"), ("VEEAM-MIB", "transferFileList"), ("VEEAM-MIB", "notTransferFileList"), ("VEEAM-MIB", "targetHost"), ("VEEAM-MIB", "targetDir"))
if mibBuilder.loadTexts: onLinuxFLRCopyToFinished.setDescription('This trap is sent when Multi-OS FLR file recovery via Copy To operation is completed.')
onLinuxFLRToOriginalFinished = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,7)).setObjects(("VEEAM-MIB", "sessionId"), ("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "transferStatus"), ("VEEAM-MIB", "transferTime"), ("VEEAM-MIB", "transferFileList"), ("VEEAM-MIB", "notTransferFileList"))
if mibBuilder.loadTexts: onLinuxFLRToOriginalFinished.setDescription('This trap is sent when Multi-OS FLR file recovery via Restore operation is completed.')
onWinFLRMountStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,8)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "mountServerName"))
if mibBuilder.loadTexts: onWinFLRMountStarted.setDescription('This trap is sent when Windows FLR starts to mounts a backup.')
onWinFLRToOriginalStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,9)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"))
if mibBuilder.loadTexts: onWinFLRToOriginalStarted.setDescription('This trap is sent when Windows FLR file recovery via Restore operation is completed.')
onWinFLRCopyToStarted = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,10)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "targetDir"))
if mibBuilder.loadTexts: onWinFLRCopyToStarted.setDescription('This trap is sent when Windows FLR file recovery via Copy To operation is initiated.')
onWinFLRToOriginalFinished = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,11)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "transferStatus"), ("VEEAM-MIB", "transferFileList"), ("VEEAM-MIB", "notTransferFileList"))
if mibBuilder.loadTexts: onWinFLRToOriginalFinished.setDescription('This trap is sent when Windows FLR file recovery via Restore operation is completed.')
onWinFLRCopyToFinished = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,12)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "transferStatus"), ("VEEAM-MIB", "transferFileList"), ("VEEAM-MIB", "notTransferFileList"), ("VEEAM-MIB", "targetDir"))
if mibBuilder.loadTexts: onWinFLRCopyToFinished.setDescription('This trap is sent when Windows FLR file recovery via Copy To operation is completed.')
onWebDownloadStart = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,13)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointCreationTime"))
if mibBuilder.loadTexts: onWebDownloadStart.setDescription('This trap is sent when 1-Click FLR file download operation is initiated in the Enterprise Manager.')
onWebDownloadFinished = NotificationType((1, 3, 6, 1, 4, 1, 31023, 1, 1, 1) + (0,14)).setObjects(("VEEAM-MIB", "initiatorName"), ("VEEAM-MIB", "initiatorSid"), ("VEEAM-MIB", "vmRestorePointId"), ("VEEAM-MIB", "vmName"), ("VEEAM-MIB", "vmRestorePointCreationTime"), ("VEEAM-MIB", "transferStatus"), ("VEEAM-MIB", "transferFileList"), ("VEEAM-MIB", "notTransferFileList"))
if mibBuilder.loadTexts: onWebDownloadFinished.setDescription('This trap is sent when 1-Click FLR file download operation is completed in the Enterprise Manager.')
backupJobId = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 101), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupJobId.setStatus('mandatory')
if mibBuilder.loadTexts: backupJobId.setDescription('Backup job id')
backupJobName = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 102), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupJobName.setStatus('mandatory')
if mibBuilder.loadTexts: backupJobName.setDescription('Backup job name')
backupJobResult = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 103), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupJobResult.setStatus('mandatory')
if mibBuilder.loadTexts: backupJobResult.setDescription('Backup job result')
backupJobComment = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 104), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupJobComment.setStatus('mandatory')
if mibBuilder.loadTexts: backupJobComment.setDescription('Backup job comment')
vmName = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmName.setStatus('mandatory')
if mibBuilder.loadTexts: vmName.setDescription('VM name.')
sourceHostName = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceHostName.setStatus('mandatory')
if mibBuilder.loadTexts: sourceHostName.setDescription('Source host name')
vmBackupResult = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 107), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmBackupResult.setStatus('mandatory')
if mibBuilder.loadTexts: vmBackupResult.setDescription('VM backup result')
vmBackupComment = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 108), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmBackupComment.setStatus('mandatory')
if mibBuilder.loadTexts: vmBackupComment.setDescription('VM backup comment')
sessionId = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 109), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionId.setStatus('mandatory')
if mibBuilder.loadTexts: sessionId.setDescription('Restore session ID')
initiatorName = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 110), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: initiatorName.setStatus('mandatory')
if mibBuilder.loadTexts: initiatorName.setDescription('Initiated by')
initiatorSid = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 111), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: initiatorSid.setStatus('mandatory')
if mibBuilder.loadTexts: initiatorSid.setDescription('Initiated by (SID)')
vmRestorePointId = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 112), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmRestorePointId.setStatus('mandatory')
if mibBuilder.loadTexts: vmRestorePointId.setDescription('Restore point ID')
vmRestorePointCreationTime = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 113), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmRestorePointCreationTime.setStatus('mandatory')
if mibBuilder.loadTexts: vmRestorePointCreationTime.setDescription('Restore point creation time')
targetHost = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 114), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetHost.setStatus('mandatory')
if mibBuilder.loadTexts: targetHost.setDescription('Target host')
targetDir = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 115), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetDir.setStatus('mandatory')
if mibBuilder.loadTexts: targetDir.setDescription('Target directory')
transferStatus = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 116), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferStatus.setStatus('mandatory')
if mibBuilder.loadTexts: transferStatus.setDescription('Restore result')
transferTime = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 117), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferTime.setStatus('mandatory')
if mibBuilder.loadTexts: transferTime.setDescription('Restore time')
transferFileList = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 118), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferFileList.setStatus('mandatory')
if mibBuilder.loadTexts: transferFileList.setDescription('Restored files')
notTransferFileList = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 119), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: notTransferFileList.setStatus('mandatory')
if mibBuilder.loadTexts: notTransferFileList.setDescription('Failed to restore')
mountServerName = MibScalar((1, 3, 6, 1, 4, 1, 31023, 1, 1, 120), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mountServerName.setStatus('mandatory')
if mibBuilder.loadTexts: mountServerName.setDescription('Mount server name')
mibBuilder.exportSymbols("VEEAM-MIB", onWinFLRCopyToStarted=onWinFLRCopyToStarted, veeam=veeam, onLinuxFLRCopyToFinished=onLinuxFLRCopyToFinished, vmRestorePointId=vmRestorePointId, backupJobComment=backupJobComment, targetDir=targetDir, backupJobId=backupJobId, onBackupJobCompleted=onBackupJobCompleted, backupJobName=backupJobName, products=products, notTransferFileList=notTransferFileList, onWinFLRToOriginalStarted=onWinFLRToOriginalStarted, onWebDownloadFinished=onWebDownloadFinished, transferFileList=transferFileList, targetHost=targetHost, onLinuxFLRCopyToStarted=onLinuxFLRCopyToStarted, vmBackupResult=vmBackupResult, onVmBackupCompleted=onVmBackupCompleted, onWinFLRMountStarted=onWinFLRMountStarted, transferTime=transferTime, backup=backup, vmName=vmName, transferStatus=transferStatus, initiatorSid=initiatorSid, vmRestorePointCreationTime=vmRestorePointCreationTime, onLinuxFLRToOriginalFinished=onLinuxFLRToOriginalFinished, vmBackupComment=vmBackupComment, onWinFLRCopyToFinished=onWinFLRCopyToFinished, traps=traps, initiatorName=initiatorName, backupJobResult=backupJobResult, sourceHostName=sourceHostName, mountServerName=mountServerName, onLinuxFLRMountStarted=onLinuxFLRMountStarted, onWinFLRToOriginalFinished=onWinFLRToOriginalFinished, onWebDownloadStart=onWebDownloadStart, sessionId=sessionId, onLinuxFLRToOriginalStarted=onLinuxFLRToOriginalStarted)
