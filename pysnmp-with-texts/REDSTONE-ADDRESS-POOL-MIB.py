#
# PySNMP MIB module REDSTONE-ADDRESS-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-ADDRESS-POOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Bits, IpAddress, TimeTicks, Gauge32, Counter64, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Integer32, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "IpAddress", "TimeTicks", "Gauge32", "Counter64", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Integer32", "NotificationType", "ModuleIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
rsAddressPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 21))
rsAddressPoolMIB.setRevisions(('1999-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsAddressPoolMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: rsAddressPoolMIB.setLastUpdated('9906010000Z')
if mibBuilder.loadTexts: rsAddressPoolMIB.setOrganization('Redstone Communications Inc.')
if mibBuilder.loadTexts: rsAddressPoolMIB.setContactInfo(' Redstone Communications, Inc. 5 Carlisle Road Westford MA 01886 USA Tel: +1-978-692-1999 Email: mib@redstonecom.com ')
if mibBuilder.loadTexts: rsAddressPoolMIB.setDescription('The Address Pool MIB for the Redstone Communications Inc. enterprise.')
rsAddressPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1))
rsAddressPool = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1))
rsAddressPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1), )
if mibBuilder.loadTexts: rsAddressPoolTable.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolTable.setDescription('A table of IP address pools. Each pool describes a range of IP addresses available for assignment for dynamic connections.')
rsAddressPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1), ).setIndexNames((0, "REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolIndex"))
if mibBuilder.loadTexts: rsAddressPoolEntry.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolEntry.setDescription('An entry describing an IP address pool.')
rsAddressPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rsAddressPoolIndex.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolIndex.setDescription('An arbitrary integer index that distinguishes this address pool.')
rsAddressPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAddressPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolRowStatus.setDescription("Controls creation/deletion of address pools. Only value 'active' will be observed with GET. Only values 'createAndGo' and 'destroy' are supported for SET. Once created, entry content cannot be modified except by deleting and recreating an entry with the same index.")
rsAddressPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAddressPoolName.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolName.setDescription('The name of this address pool.')
rsAddressPoolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAddressPoolStart.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolStart.setDescription('The starting IP address for the range of addresses comprising this pool.')
rsAddressPoolEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAddressPoolEnd.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolEnd.setDescription('The ending IP address for the range of addresses comprising this pool.')
rsAddressPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsAddressPoolSize.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolSize.setDescription('The number of addresses available in this pool.')
rsAddressPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 21, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsAddressPoolInUse.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolInUse.setDescription('The number of addresses currently allocated from this pool.')
rsAddressPoolMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 21, 4))
rsAddressPoolMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 21, 4, 1))
rsAddressPoolMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 21, 4, 2))
rsAddressPoolCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 21, 4, 1, 1)).setObjects(("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAddressPoolCompliance = rsAddressPoolCompliance.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolCompliance.setDescription('The compliance statement for systems providing local address pools.')
rsAddressPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 21, 4, 2, 1)).setObjects(("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolRowStatus"), ("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolName"), ("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolStart"), ("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolEnd"), ("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolSize"), ("REDSTONE-ADDRESS-POOL-MIB", "rsAddressPoolInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAddressPoolGroup = rsAddressPoolGroup.setStatus('current')
if mibBuilder.loadTexts: rsAddressPoolGroup.setDescription('The basic collection of objects providing management of local address pools.')
mibBuilder.exportSymbols("REDSTONE-ADDRESS-POOL-MIB", rsAddressPoolSize=rsAddressPoolSize, rsAddressPoolMIB=rsAddressPoolMIB, rsAddressPoolCompliance=rsAddressPoolCompliance, rsAddressPoolIndex=rsAddressPoolIndex, PYSNMP_MODULE_ID=rsAddressPoolMIB, rsAddressPoolName=rsAddressPoolName, rsAddressPoolMIBConformance=rsAddressPoolMIBConformance, rsAddressPoolEntry=rsAddressPoolEntry, rsAddressPool=rsAddressPool, rsAddressPoolMIBCompliances=rsAddressPoolMIBCompliances, rsAddressPoolStart=rsAddressPoolStart, rsAddressPoolMIBGroups=rsAddressPoolMIBGroups, rsAddressPoolRowStatus=rsAddressPoolRowStatus, rsAddressPoolInUse=rsAddressPoolInUse, rsAddressPoolGroup=rsAddressPoolGroup, rsAddressPoolObjects=rsAddressPoolObjects, rsAddressPoolEnd=rsAddressPoolEnd, rsAddressPoolTable=rsAddressPoolTable)
