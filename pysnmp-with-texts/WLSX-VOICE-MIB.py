#
# PySNMP MIB module WLSX-VOICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-VOICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaVoipProtocol, ArubaCallStates, ArubaEnableValue, ArubaVoiceCacBit, ArubaVoiceCdrDirection, ArubaVlanValidRange, ArubaVoipRegState = mibBuilder.importSymbols("ARUBA-TC", "ArubaVoipProtocol", "ArubaCallStates", "ArubaEnableValue", "ArubaVoiceCacBit", "ArubaVoiceCdrDirection", "ArubaVlanValidRange", "ArubaVoipRegState")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, ModuleIdentity, ObjectIdentity, Bits, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, snmpModules, NotificationType, Gauge32, TextualConvention, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Bits", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "snmpModules", "NotificationType", "Gauge32", "TextualConvention", "Unsigned32", "Counter32", "Integer32")
TimeInterval, TestAndIncr, RowStatus, TDomain, DateAndTime, StorageType, TruthValue, TAddress, TextualConvention, DisplayString, MacAddress, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TestAndIncr", "RowStatus", "TDomain", "DateAndTime", "StorageType", "TruthValue", "TAddress", "TextualConvention", "DisplayString", "MacAddress", "PhysAddress")
wlanAPRadioNumber, wlanAPMacAddress, wlanStaPhyAddress, wlanAPBSSID = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanAPRadioNumber", "wlanAPMacAddress", "wlanStaPhyAddress", "wlanAPBSSID")
wlsxVoiceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12))
wlsxVoiceMIB.setRevisions(('1908-04-16 02:06',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wlsxVoiceMIB.setRevisionsDescriptions(('The initial revision.',))
if mibBuilder.loadTexts: wlsxVoiceMIB.setLastUpdated('0804160206Z')
if mibBuilder.loadTexts: wlsxVoiceMIB.setOrganization('Aruba Wireless Networks')
if mibBuilder.loadTexts: wlsxVoiceMIB.setContactInfo('Postal: 1322 Crossman Avenue Sunnyvale, CA 94089 E-mail: dl-support@arubanetworks.com Phone: +1 408 227 4500')
if mibBuilder.loadTexts: wlsxVoiceMIB.setDescription('This MIB module defines MIB objects which provide information about Voice call status and call detail reporting in the Aruba controller.')
wlsxVoiceStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1))
wlsxVoiceCdrInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1))
wlsxVoiceCallCtrsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2))
wlsxVoiceClientInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3))
wlsxVoiceAPBssidInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4))
wlsxVoiceClientLocationInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5))
wlsxVoiceCdrTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceCdrTotal.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceCdrTotal.setDescription(' Total Number of CDR info in the controller. ')
wlsxVoiceCdrTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2), )
if mibBuilder.loadTexts: wlsxVoiceCdrTable.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceCdrTable.setDescription(' This table lists Call Detail Record Info. ')
wlsxVoiceCdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1), ).setIndexNames((0, "WLSX-VOICE-MIB", "voiceCdrId"))
if mibBuilder.loadTexts: wlsxVoiceCdrEntry.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceCdrEntry.setDescription('')
voiceCdrId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: voiceCdrId.setStatus('current')
if mibBuilder.loadTexts: voiceCdrId.setDescription(' Voice CDR id ')
voiceCdrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrIp.setStatus('current')
if mibBuilder.loadTexts: voiceCdrIp.setDescription(' Voice CDR IP ')
voiceCdrMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrMac.setStatus('current')
if mibBuilder.loadTexts: voiceCdrMac.setDescription(' Voice CDR MAC ')
voiceCdrName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrName.setStatus('current')
if mibBuilder.loadTexts: voiceCdrName.setDescription(' Voice CDR Name ')
voiceCdrDialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDialNum.setStatus('current')
if mibBuilder.loadTexts: voiceCdrDialNum.setDescription(' Voice CDR dialed number ')
voiceCdrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 6), ArubaVoiceCdrDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDir.setStatus('current')
if mibBuilder.loadTexts: voiceCdrDir.setDescription(' Voice CDR direction incoming or outgoing ')
voiceCdrOrigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrOrigTime.setStatus('current')
if mibBuilder.loadTexts: voiceCdrOrigTime.setDescription(' Voice CDR orig time ')
voiceCdrSetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrSetupTime.setStatus('current')
if mibBuilder.loadTexts: voiceCdrSetupTime.setDescription(' Voice CDR setup time ')
voiceCdrTeardownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrTeardownTime.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCdrTeardownTime.setDescription(' Voice CDR teardown number ')
voiceCdrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 10), ArubaCallStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrStatus.setStatus('current')
if mibBuilder.loadTexts: voiceCdrStatus.setDescription(' Voice CDR Status ')
voiceCdrReason = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrReason.setStatus('current')
if mibBuilder.loadTexts: voiceCdrReason.setDescription(' Voice CDR Reason ')
voiceCdrDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrDuration.setStatus('current')
if mibBuilder.loadTexts: voiceCdrDuration.setDescription(' Voice CDR Duration ')
voiceCdrRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrRValue.setStatus('current')
if mibBuilder.loadTexts: voiceCdrRValue.setDescription(' Voice CDR R-Value ')
voiceCdrApSwitchDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApSwitchDelay.setStatus('current')
if mibBuilder.loadTexts: voiceCdrApSwitchDelay.setDescription(' Voice CDR AP switch delay ')
voiceCdrCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrCodec.setStatus('current')
if mibBuilder.loadTexts: voiceCdrCodec.setDescription(' Voice CDR codec ')
voiceCdrApName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApName.setStatus('current')
if mibBuilder.loadTexts: voiceCdrApName.setDescription(' Voice CDR AP Name ')
voiceCdrApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrApMac.setStatus('current')
if mibBuilder.loadTexts: voiceCdrApMac.setDescription(' Voice CDR AP MAC Address ')
voiceCdrBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrBssid.setStatus('current')
if mibBuilder.loadTexts: voiceCdrBssid.setDescription(' Voice CDR BSSID ')
voiceCdrEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrEssid.setStatus('current')
if mibBuilder.loadTexts: voiceCdrEssid.setDescription(' Voice CDR ESSID ')
voiceCdrHandovers = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrHandovers.setStatus('current')
if mibBuilder.loadTexts: voiceCdrHandovers.setDescription(' Voice CDR client handovers AKA mobility rate ')
voiceCdrMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCdrMOS.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCdrMOS.setDescription(' Voice CDR MOS ')
voiceCallCtrsTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsTotal.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsTotal.setDescription(' Total Number of calls. ')
voiceCallCtrsSuccess = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsSuccess.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsSuccess.setDescription(' Total Number of successful calls. ')
voiceCallCtrsFailed = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsFailed.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsFailed.setDescription(' Total Number of failed calls. ')
voiceCallCtrsRejected = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsRejected.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsRejected.setDescription(' Total Number of rejected calls. ')
voiceCallCtrsAborted = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsAborted.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsAborted.setDescription(' Total Number of aborted calls. ')
voiceCallCtrsOrig = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsOrig.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsOrig.setDescription(' Total Number of originated calls. ')
voiceCallCtrsRecvd = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsRecvd.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsRecvd.setDescription(' Total number of received calls. ')
voiceCallCtrsActive = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsActive.setStatus('current')
if mibBuilder.loadTexts: voiceCallCtrsActive.setDescription(' Total number of active calls. ')
voiceCallCtrsNotFnd = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsNotFnd.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsNotFnd.setDescription(' Total number of not found calls. ')
voiceCallCtrsBusy = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsBusy.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsBusy.setDescription(' Total number of busy calls. ')
voiceCallCtrsSvc = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsSvc.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsSvc.setDescription(' Total number of service unavailable calls. ')
voiceCallCtrsReqTerm = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsReqTerm.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsReqTerm.setDescription(' Total number of request terminated calls. ')
voiceCallCtrsDecline = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsDecline.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsDecline.setDescription(' Total number of declined calls. ')
voiceCallCtrsUnauth = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsUnauth.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsUnauth.setDescription(' Total number of unauthorized calls. ')
voiceCallCtrsMisc = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 2, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallCtrsMisc.setStatus('deprecated')
if mibBuilder.loadTexts: voiceCallCtrsMisc.setDescription(' Total number of miscellaneous calls. ')
wlsxVoiceClientTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceClientTotal.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientTotal.setDescription(' Total Number of Active client sessions in the controller. ')
wlsxVoiceClientTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2), )
if mibBuilder.loadTexts: wlsxVoiceClientTable.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientTable.setDescription(' This table lists all voice client Info ')
wlsxVoiceClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanStaPhyAddress"))
if mibBuilder.loadTexts: wlsxVoiceClientEntry.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientEntry.setDescription('')
voiceClientIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientIp.setStatus('current')
if mibBuilder.loadTexts: voiceClientIp.setDescription(' Voice client IP Address ')
voiceClientProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 2), ArubaVoipProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientProtocol.setStatus('current')
if mibBuilder.loadTexts: voiceClientProtocol.setDescription(' Voice client protocol used ')
voiceClientRegState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 3), ArubaVoipRegState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientRegState.setStatus('current')
if mibBuilder.loadTexts: voiceClientRegState.setDescription(' Voice client state ')
voiceClientContactName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientContactName.setStatus('current')
if mibBuilder.loadTexts: voiceClientContactName.setDescription(' Voice client contact name ')
voiceClientServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientServerName.setStatus('current')
if mibBuilder.loadTexts: voiceClientServerName.setDescription(' Voice client Server name ')
voiceClientEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientEssid.setStatus('current')
if mibBuilder.loadTexts: voiceClientEssid.setDescription(' Voice client ESSID ')
voiceClientVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 7), ArubaVlanValidRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientVlanId.setStatus('current')
if mibBuilder.loadTexts: voiceClientVlanId.setDescription(' Voice client VLAN id ')
voiceClientTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceClientTunnelId.setStatus('current')
if mibBuilder.loadTexts: voiceClientTunnelId.setDescription(' Voice client tunnel ID ')
wlsxVoiceAPBssidTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceAPBssidTotal.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceAPBssidTotal.setDescription(' Total Number of active voip info in the controller. ')
wlsxVoiceAPBssidTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2), )
if mibBuilder.loadTexts: wlsxVoiceAPBssidTable.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceAPBssidTable.setDescription(' This table lists Active Voip Info. ')
wlsxVoiceAPBssidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanAPMacAddress"), (0, "WLSX-WLAN-MIB", "wlanAPRadioNumber"), (0, "WLSX-WLAN-MIB", "wlanAPBSSID"))
if mibBuilder.loadTexts: wlsxVoiceAPBssidEntry.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceAPBssidEntry.setDescription('')
voiceAPBssidName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidName.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidName.setDescription(' Voice AP Name ')
voiceAPBssidGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidGroup.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidGroup.setDescription(' Voice AP Group ')
voiceAPBssidIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidIp.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidIp.setDescription(' Voice AP IP address ')
voiceAPBssidTotCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTotCalls.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidTotCalls.setDescription(' Voice AP current calls ')
voiceAPBssidVoiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidVoiceType.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidVoiceType.setDescription(' Voice AP Type ')
voiceAPBssidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 6), Bits().clone(namedValues=NamedValues(("apRemoteAP", 0), ("apPPPOE", 1), ("apWiredApEnabled", 2), ("apEnet1Mode", 3), ("apActiveLoadBalancing", 4), ("apDisconnectExtraCalls", 5), ("apBatteryBoost", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidFlag.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidFlag.setDescription(' Voice AP flag ')
voiceAPBssidUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidUpTime.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidUpTime.setDescription(' Voice AP up time ')
voiceAPBssid100Sent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssid100Sent.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssid100Sent.setDescription(' Voice 100 sent ')
voiceAPBssid503Sent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssid503Sent.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssid503Sent.setDescription(' Voice 503 sent ')
voiceAPBssidExtraCallDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidExtraCallDisc.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidExtraCallDisc.setDescription(' Voice AP extra call disconnect ')
voiceAPBssidKickedOff = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidKickedOff.setStatus('deprecated')
if mibBuilder.loadTexts: voiceAPBssidKickedOff.setDescription(' Voice AP kicked off ')
voiceAPBssidTspecDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTspecDenied.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidTspecDenied.setDescription(' Voice AP Tspec Denied ')
voiceAPBssidCacFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 13), ArubaVoiceCacBit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCacFlag.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCacFlag.setDescription(' Voice AP CAC flag ')
voiceAPBssidTotVoiceClients = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidTotVoiceClients.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidTotVoiceClients.setDescription(' Voice AP total number of voice clients ')
voiceAPBssidCallsSCCP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSCCP.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCallsSCCP.setDescription(' Voice AP Total SCCP calls ')
voiceAPBssidCallsSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSIP.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCallsSIP.setDescription(' Voice AP Total SIP calls ')
voiceAPBssidCallsSVP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsSVP.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCallsSVP.setDescription(' Voice AP Total SVP calls ')
voiceAPBssidCallsVocera = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsVocera.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCallsVocera.setDescription(' Voice AP Total Vocera calls ')
voiceAPBssidCallsNoe = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidCallsNoe.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidCallsNoe.setDescription(' Voice AP Total NOE calls ')
voiceAPBssidEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 4, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceAPBssidEssid.setStatus('current')
if mibBuilder.loadTexts: voiceAPBssidEssid.setDescription(' Voice AP ESSID ')
wlsxVoiceClientLocationTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxVoiceClientLocationTotal.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientLocationTotal.setDescription(' Total Number of Active voice clients in the controller. ')
wlsxVoiceClientLocationTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2), )
if mibBuilder.loadTexts: wlsxVoiceClientLocationTable.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientLocationTable.setDescription(' This table lists all voice client Location Info ')
wlsxVoiceClientLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanStaPhyAddress"))
if mibBuilder.loadTexts: wlsxVoiceClientLocationEntry.setStatus('current')
if mibBuilder.loadTexts: wlsxVoiceClientLocationEntry.setDescription('')
vcLocationIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationIp.setStatus('current')
if mibBuilder.loadTexts: vcLocationIp.setDescription(' Voice client IP Address ')
vcLocationMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationMac.setStatus('current')
if mibBuilder.loadTexts: vcLocationMac.setDescription(' Voice client Mac Address ')
vcLocationSwitchIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationSwitchIp.setStatus('current')
if mibBuilder.loadTexts: vcLocationSwitchIp.setDescription(' Voice Client Switch IP Address ')
vcLocationApName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApName.setStatus('current')
if mibBuilder.loadTexts: vcLocationApName.setDescription(' Voice Client AP Name ')
vcLocationApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApMac.setStatus('current')
if mibBuilder.loadTexts: vcLocationApMac.setDescription(' Voice client AP Mac Address ')
vcLocationApMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApMode.setStatus('current')
if mibBuilder.loadTexts: vcLocationApMode.setDescription(' Voice client AP Mode ')
vcLocationApLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 12, 1, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcLocationApLoc.setStatus('current')
if mibBuilder.loadTexts: vcLocationApLoc.setDescription(' Voice client Ap Location ')
mibBuilder.exportSymbols("WLSX-VOICE-MIB", wlsxVoiceCdrTotal=wlsxVoiceCdrTotal, voiceCallCtrsReqTerm=voiceCallCtrsReqTerm, voiceAPBssidTotCalls=voiceAPBssidTotCalls, voiceAPBssidCallsVocera=voiceAPBssidCallsVocera, wlsxVoiceCdrTable=wlsxVoiceCdrTable, vcLocationSwitchIp=vcLocationSwitchIp, voiceAPBssidFlag=voiceAPBssidFlag, wlsxVoiceClientLocationTotal=wlsxVoiceClientLocationTotal, voiceAPBssidCallsSVP=voiceAPBssidCallsSVP, voiceClientIp=voiceClientIp, voiceCdrHandovers=voiceCdrHandovers, voiceAPBssidCallsNoe=voiceAPBssidCallsNoe, voiceCallCtrsUnauth=voiceCallCtrsUnauth, voiceAPBssidExtraCallDisc=voiceAPBssidExtraCallDisc, voiceClientTunnelId=voiceClientTunnelId, voiceCallCtrsNotFnd=voiceCallCtrsNotFnd, voiceCallCtrsMisc=voiceCallCtrsMisc, voiceCdrMac=voiceCdrMac, voiceAPBssidEssid=voiceAPBssidEssid, vcLocationApMode=vcLocationApMode, voiceCallCtrsRejected=voiceCallCtrsRejected, voiceCdrRValue=voiceCdrRValue, PYSNMP_MODULE_ID=wlsxVoiceMIB, wlsxVoiceCdrEntry=wlsxVoiceCdrEntry, voiceClientProtocol=voiceClientProtocol, wlsxVoiceClientInfoGroup=wlsxVoiceClientInfoGroup, voiceCdrApMac=voiceCdrApMac, voiceCallCtrsDecline=voiceCallCtrsDecline, voiceClientEssid=voiceClientEssid, voiceCdrSetupTime=voiceCdrSetupTime, wlsxVoiceMIB=wlsxVoiceMIB, voiceClientVlanId=voiceClientVlanId, voiceAPBssidCacFlag=voiceAPBssidCacFlag, wlsxVoiceClientEntry=wlsxVoiceClientEntry, wlsxVoiceStatsGroup=wlsxVoiceStatsGroup, vcLocationIp=vcLocationIp, voiceCdrCodec=voiceCdrCodec, voiceCallCtrsSvc=voiceCallCtrsSvc, voiceCdrMOS=voiceCdrMOS, wlsxVoiceAPBssidTotal=wlsxVoiceAPBssidTotal, voiceAPBssid100Sent=voiceAPBssid100Sent, wlsxVoiceClientTable=wlsxVoiceClientTable, voiceCdrIp=voiceCdrIp, voiceCallCtrsAborted=voiceCallCtrsAborted, voiceAPBssidTotVoiceClients=voiceAPBssidTotVoiceClients, voiceAPBssidGroup=voiceAPBssidGroup, voiceCdrStatus=voiceCdrStatus, voiceCdrOrigTime=voiceCdrOrigTime, voiceClientContactName=voiceClientContactName, voiceCdrId=voiceCdrId, voiceCdrBssid=voiceCdrBssid, wlsxVoiceClientLocationInfoGroup=wlsxVoiceClientLocationInfoGroup, vcLocationApName=vcLocationApName, wlsxVoiceAPBssidInfoGroup=wlsxVoiceAPBssidInfoGroup, voiceAPBssidIp=voiceAPBssidIp, wlsxVoiceClientLocationEntry=wlsxVoiceClientLocationEntry, voiceAPBssidName=voiceAPBssidName, voiceCdrApName=voiceCdrApName, voiceAPBssidVoiceType=voiceAPBssidVoiceType, voiceCdrReason=voiceCdrReason, voiceAPBssidTspecDenied=voiceAPBssidTspecDenied, voiceCdrDialNum=voiceCdrDialNum, voiceCallCtrsFailed=voiceCallCtrsFailed, wlsxVoiceClientTotal=wlsxVoiceClientTotal, voiceCdrTeardownTime=voiceCdrTeardownTime, vcLocationApLoc=vcLocationApLoc, voiceCdrEssid=voiceCdrEssid, voiceCdrDuration=voiceCdrDuration, wlsxVoiceAPBssidTable=wlsxVoiceAPBssidTable, wlsxVoiceAPBssidEntry=wlsxVoiceAPBssidEntry, wlsxVoiceClientLocationTable=wlsxVoiceClientLocationTable, voiceAPBssid503Sent=voiceAPBssid503Sent, wlsxVoiceCdrInfoGroup=wlsxVoiceCdrInfoGroup, voiceAPBssidUpTime=voiceAPBssidUpTime, voiceAPBssidCallsSCCP=voiceAPBssidCallsSCCP, voiceCdrDir=voiceCdrDir, voiceCallCtrsOrig=voiceCallCtrsOrig, voiceCallCtrsRecvd=voiceCallCtrsRecvd, voiceCallCtrsSuccess=voiceCallCtrsSuccess, voiceCallCtrsBusy=voiceCallCtrsBusy, vcLocationMac=vcLocationMac, vcLocationApMac=vcLocationApMac, voiceAPBssidKickedOff=voiceAPBssidKickedOff, voiceCdrApSwitchDelay=voiceCdrApSwitchDelay, voiceClientServerName=voiceClientServerName, voiceCdrName=voiceCdrName, voiceAPBssidCallsSIP=voiceAPBssidCallsSIP, voiceClientRegState=voiceClientRegState, voiceCallCtrsTotal=voiceCallCtrsTotal, wlsxVoiceCallCtrsGroup=wlsxVoiceCallCtrsGroup, voiceCallCtrsActive=voiceCallCtrsActive)
