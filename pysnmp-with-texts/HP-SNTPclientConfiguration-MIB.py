#
# PySNMP MIB module HP-SNTPclientConfiguration-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SNTPclientConfiguration-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:36:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hpicfCommon, = mibBuilder.importSymbols("HP-ICF-OID", "hpicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, MibIdentifier, ObjectIdentity, IpAddress, ModuleIdentity, Unsigned32, Integer32, Counter64, Gauge32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "ObjectIdentity", "IpAddress", "ModuleIdentity", "Unsigned32", "Integer32", "Counter64", "Gauge32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
hpSntpConfigMod = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8))
hpSntpConfigMod.setRevisions(('2015-05-24 00:00', '2014-01-13 00:00', '2011-02-12 00:00', '2009-02-13 12:30', '2009-02-10 15:39', '2008-11-26 02:39', '2000-11-03 02:39',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpSntpConfigMod.setRevisionsDescriptions(('Added time sync method ntp.', 'Added dhcp enumeration to hpSntpConfigMode', 'Added hpSntpAuthenticationKeyEncrypted object in hpSntpAuthenticationKeyTable.', "Increased the range of 'hpSntpInetServerAuthKeyId' and 'hpSntpAuthenticationKeyId' MIB objects.", "Added 'hpSntpInetServerIsOobm' MIB object in 'hpSntpInetServersTable' table.", 'Added Objects for supporting Authentication in unicast and broadcast mode.', 'Initial version of the MIB module.',))
if mibBuilder.loadTexts: hpSntpConfigMod.setLastUpdated('201505240000Z')
if mibBuilder.loadTexts: hpSntpConfigMod.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpSntpConfigMod.setContactInfo('Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpSntpConfigMod.setDescription('Management information for configuring the SNTP client on Hewlett-Packard network devices.')
hpSntpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1))
hpTimeSyncMethodMod = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 2))
hpSntpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 4))
hpTimeSyncMethod = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("sntp", 2), ("timep", 3), ("timepOrSntp", 4), ("ntp", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpTimeSyncMethod.setStatus('current')
if mibBuilder.loadTexts: hpTimeSyncMethod.setDescription('Method to be used for time synchronization.')
hpSntpStatsRcvdPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSntpStatsRcvdPkts.setStatus('current')
if mibBuilder.loadTexts: hpSntpStatsRcvdPkts.setDescription('Total number of packets received.')
hpSntpStatsSentPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSntpStatsSentPkts.setStatus('current')
if mibBuilder.loadTexts: hpSntpStatsSentPkts.setDescription('Total number of packets sent to the server')
hpSntpStatsDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSntpStatsDroppedPkts.setStatus('current')
if mibBuilder.loadTexts: hpSntpStatsDroppedPkts.setDescription('Total number of packets dropped due to error.')
hpSntpConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("unicast", 2), ("broadcast", 3), ("dhcp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSntpConfigMode.setStatus('current')
if mibBuilder.loadTexts: hpSntpConfigMode.setDescription('Current operational mode of SNTP client')
hpSntpConfigPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSntpConfigPollInterval.setStatus('current')
if mibBuilder.loadTexts: hpSntpConfigPollInterval.setDescription('Period of time (in seconds) between successive attempts to perform an update via SNTP')
hpSntpConfigServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3), )
if mibBuilder.loadTexts: hpSntpConfigServerTable.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpConfigServerTable.setDescription('### DEPRECATED ### A table containing trusted SNTP servers to be queried in unicast mode')
hpSntpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3, 1), ).setIndexNames((0, "HP-SNTPclientConfiguration-MIB", "hpSntpServerAddress"))
if mibBuilder.loadTexts: hpSntpServerEntry.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerEntry.setDescription('### DEPRECATED ### A trusted server and its expected version number')
hpSntpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpSntpServerAddress.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerAddress.setDescription('### DEPRECATED ### Ip Address of a trusted SNTP server.')
hpSntpServerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpServerVersion.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerVersion.setDescription('### DEPRECATED ### Protocol version used by this SNTP server')
hpSntpServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpServerPriority.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerPriority.setDescription('### DEPRECATED ### Priority given to this server.')
hpSntpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpServerRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerRowStatus.setDescription('### DEPRECATED ### The Status of this SNTP server information.')
hpSntpInetConfigServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4), )
if mibBuilder.loadTexts: hpSntpInetConfigServerTable.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetConfigServerTable.setDescription('A table containing trusted IPv4 and IPv6 SNTP servers to be queried in unicast mode')
hpSntpInetServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1), ).setIndexNames((0, "HP-SNTPclientConfiguration-MIB", "hpSntpInetServerPriority"), (0, "HP-SNTPclientConfiguration-MIB", "hpSntpInetServerAddressType"), (0, "HP-SNTPclientConfiguration-MIB", "hpSntpInetServerAddress"))
if mibBuilder.loadTexts: hpSntpInetServerEntry.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerEntry.setDescription('A trusted server and its expected version number and priority')
hpSntpInetServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpSntpInetServerPriority.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerPriority.setDescription('Priority given to this server.')
hpSntpInetServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hpSntpInetServerAddressType.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerAddressType.setDescription('Ip Address type of a trusted SNTP server.')
hpSntpInetServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: hpSntpInetServerAddress.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerAddress.setDescription("Ip Address (of a trusted SNTP server) to which this entry's addressing information pertains. hpSntpInetServerAddress is always interpreted within the context of hpSntpInetServerAddressType")
hpSntpInetServerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpInetServerVersion.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerVersion.setDescription('Protocol version used by this SNTP server')
hpSntpInetServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpInetServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerRowStatus.setDescription('The Status of this SNTP server information.')
hpSntpInetServerIsOobm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpInetServerIsOobm.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerIsOobm.setDescription('This object indicates whether this SNTP Server is reachable over OOBM (Out Of Band Management) interface or not. This mib object will be applicable only if there is a physical OOBM port on the device.')
hpSntpInetServerAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpInetServerAuthKeyId.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerAuthKeyId.setDescription("The key identifier associated with the SNTP server specified by this instance.Its an index to the hpSntpAuthenticationKeyTable.The value identifies the row in the hpSntpAuthenticationKeyTable where the authentication key can be found. The value '0' indicates that the key Id is disassociated from the SNTP server.")
hpSntpAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSntpAuthentication.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthentication.setDescription('This object is used to enable or disable SNTP authentication in the switch.By default authentication is disabled.Atleast one Key-id and it has to be trusted to enable authentication.')
hpSntpAuthenticationKeyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6), )
if mibBuilder.loadTexts: hpSntpAuthenticationKeyTable.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyTable.setDescription('A table containing entries of authentication key-id. The number of Key-id is restricted to 8 currently.')
hpSntpAuthenticationKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1), ).setIndexNames((0, "HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyId"))
if mibBuilder.loadTexts: hpSntpAuthenticationKeyEntry.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyEntry.setDescription('An authentication key entry comprising key-identifiers such as key-id, key-value, authentication mode(MD5), and status of the key-id if it is trusted or not.')
hpSntpAuthenticationKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpSntpAuthenticationKeyId.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyId.setDescription('A unique identifier for the authentication key.')
hpSntpAuthenticationKeyAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("md5", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpAuthenticationKeyAuthMode.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyAuthMode.setDescription('The authentication mode supported for this key.')
hpSntpAuthenticationKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpAuthenticationKeyValue.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyValue.setDescription('A unique string that serves as the key-value for generating the message digest sent in the SNTP packet. A read on this object will return a Empty string.')
hpSntpAuthenticationKeyTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpAuthenticationKeyTrusted.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyTrusted.setDescription('This object is used to configure the status of the authentication key as trusted.If the key-value is not trusted then the packet is not trusted. By default the key-value is not trusted.')
hpSntpAuthenticationKeyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpAuthenticationKeyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyRowStatus.setDescription('The row status for this SNTP authentication key instance. The Key-id is the index and it cannot be edited.')
hpSntpAuthenticationKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSntpAuthenticationKeyEncrypted.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyEncrypted.setDescription('The encrypted form of a unique string that serves as the key-value for generating the message digest sent in the SNTP packet. This object may only be read or written when hpSwitchAuthenticationEncryptCredentialsMethod is set to a value other than none(0). At most one of hpSntpAuthenticationKey and hpSntpAuthenticationKeyEncrypted may be set in any transaction. This object should only be written with an encrypted key previously read from a compatible HP Networking device.')
hpSntpServerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 7), )
if mibBuilder.loadTexts: hpSntpServerStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hpSntpServerStatisticsTable.setDescription('A table containing a list of statistics entries per SNTP server.')
hpSntpServerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 7, 1), )
hpSntpInetServerEntry.registerAugmentions(("HP-SNTPclientConfiguration-MIB", "hpSntpServerStatisticsEntry"))
hpSntpServerStatisticsEntry.setIndexNames(*hpSntpInetServerEntry.getIndexNames())
if mibBuilder.loadTexts: hpSntpServerStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hpSntpServerStatisticsEntry.setDescription('A statistics entry per SNTP server.')
hpSntpServerStatisticsAuthFailedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSntpServerStatisticsAuthFailedPkts.setStatus('current')
if mibBuilder.loadTexts: hpSntpServerStatisticsAuthFailedPkts.setDescription('This object indicates the number of packets that have failed the authentication check with this server instance.')
hpSntpBroadcastServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 8), )
if mibBuilder.loadTexts: hpSntpBroadcastServerTable.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerTable.setDescription('A table containing a SNTP broadcast server and statistics information.')
hpSntpBroadcastServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 8, 1), ).setIndexNames((0, "HP-SNTPclientConfiguration-MIB", "hpSntpBroadcastServerAddress"))
if mibBuilder.loadTexts: hpSntpBroadcastServerEntry.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerEntry.setDescription('An entry comprising a preferred broadcast server address and statistics information with respect to server.')
hpSntpBroadcastServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 8, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpSntpBroadcastServerAddress.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerAddress.setDescription('IP Address of a preferred broadcast SNTP server.')
hpSntpBroadcastServerStatisticsAuthFailedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSntpBroadcastServerStatisticsAuthFailedPkts.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerStatisticsAuthFailedPkts.setDescription('This object indicates the number of packets that have failed the authentication check with this server instance.')
hpSntpConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3))
hpSntpConfigCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1))
hpSntpConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2))
hpSntpConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 1)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpSntpServerConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpTimeSyncMethodGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpConfigCompliance = hpSntpConfigCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpConfigCompliance.setDescription('###DEPRECATED###The compliance statement for devices implementing the hpSntpConfig MIB.')
hpSntpInetConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 2)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpTimeSyncMethodGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpInetConfigCompliance = hpSntpInetConfigCompliance.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetConfigCompliance.setDescription('The compliance statement for devices implementing the hpSntpConfig MIB.')
hpSntpAuthenticationConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 3)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyIdConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpAuthenticationConfigCompliance = hpSntpAuthenticationConfigCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpAuthenticationConfigCompliance.setDescription('### DEPRECATED ### The compliance statement for devices implementing the hpSntpConfig MIB.')
hpSntpInetConfigComplianceOobm = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 4)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerOobmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpInetConfigComplianceOobm = hpSntpInetConfigComplianceOobm.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetConfigComplianceOobm.setDescription('The compliance statement for devices implementing the HP SNTP MIB with OOBM support')
hpSntpAuthenticationConfigCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 5)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerConfigGroup"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyIdConfigGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpAuthenticationConfigCompliance1 = hpSntpAuthenticationConfigCompliance1.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationConfigCompliance1.setDescription('The compliance statement for devices implementing the hpSntpConfig MIB.')
hpSntpBroadcastServerCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 1, 6)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpBroadcastServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpBroadcastServerCompliance = hpSntpBroadcastServerCompliance.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerCompliance.setDescription('The compliance statement for devices implementing the HP SNTP broadcast server support')
hpSntpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 1)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpConfigMode"), ("HP-SNTPclientConfiguration-MIB", "hpSntpConfigPollInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpConfigGroup = hpSntpConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpSntpConfigGroup.setDescription('A collection of objects for configuring the SNTP client.')
hpSntpServerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 2)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpServerVersion"), ("HP-SNTPclientConfiguration-MIB", "hpSntpServerPriority"), ("HP-SNTPclientConfiguration-MIB", "hpSntpServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpServerConfigGroup = hpSntpServerConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpServerConfigGroup.setDescription('### DEPRECATED ###This Group defines a server table entry.')
hpTimeSyncMethodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 3)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpTimeSyncMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpTimeSyncMethodGroup = hpTimeSyncMethodGroup.setStatus('current')
if mibBuilder.loadTexts: hpTimeSyncMethodGroup.setDescription('A collection of objects for selecting a time synchronization protocol to use.')
hpSntpInetServerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 4)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerVersion"), ("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpInetServerConfigGroup = hpSntpInetServerConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerConfigGroup.setDescription('This Group defines a server table entry.')
hpSntpAuthenticationKeyIdConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 5)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyAuthMode"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyValue"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyTrusted"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyRowStatus"), ("HP-SNTPclientConfiguration-MIB", "hpSntpServerStatisticsAuthFailedPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsDroppedPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsSentPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsRcvdPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthentication"), ("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerAuthKeyId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpAuthenticationKeyIdConfigGroup = hpSntpAuthenticationKeyIdConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyIdConfigGroup.setDescription('### DEPRECATED ### This group defines SNTP authentication related information. It includes Key-Identifier, Key-Value, flag to indicate whether the information is trusted or not and authentication mode(MD5) currently supported.')
hpSntpInetServerOobmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 6)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerIsOobm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpInetServerOobmGroup = hpSntpInetServerOobmGroup.setStatus('current')
if mibBuilder.loadTexts: hpSntpInetServerOobmGroup.setDescription('A collection of objects for configuring the SNTP server entry with support for OOBM (Out of Band Management) interface.')
hpSntpAuthenticationKeyIdConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 7)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyAuthMode"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyValue"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyEncrypted"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyTrusted"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthenticationKeyRowStatus"), ("HP-SNTPclientConfiguration-MIB", "hpSntpServerStatisticsAuthFailedPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsDroppedPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsSentPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpStatsRcvdPkts"), ("HP-SNTPclientConfiguration-MIB", "hpSntpAuthentication"), ("HP-SNTPclientConfiguration-MIB", "hpSntpInetServerAuthKeyId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpAuthenticationKeyIdConfigGroup1 = hpSntpAuthenticationKeyIdConfigGroup1.setStatus('current')
if mibBuilder.loadTexts: hpSntpAuthenticationKeyIdConfigGroup1.setDescription('This group defines SNTP authentication related information. It includes Key-Identifier, Key-Value, encrypted key value, flag to indicate whether the information is trusted or not and authentication mode(MD5) currently supported.')
hpSntpBroadcastServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 8, 3, 2, 8)).setObjects(("HP-SNTPclientConfiguration-MIB", "hpSntpBroadcastServerStatisticsAuthFailedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSntpBroadcastServerGroup = hpSntpBroadcastServerGroup.setStatus('current')
if mibBuilder.loadTexts: hpSntpBroadcastServerGroup.setDescription('A collection of objects for preferred SNTP broadcast server and statistics.')
mibBuilder.exportSymbols("HP-SNTPclientConfiguration-MIB", hpSntpInetServerOobmGroup=hpSntpInetServerOobmGroup, hpSntpStatsSentPkts=hpSntpStatsSentPkts, hpSntpAuthenticationKeyIdConfigGroup1=hpSntpAuthenticationKeyIdConfigGroup1, hpSntpBroadcastServerStatisticsAuthFailedPkts=hpSntpBroadcastServerStatisticsAuthFailedPkts, hpSntpConfigMod=hpSntpConfigMod, hpSntpAuthenticationKeyRowStatus=hpSntpAuthenticationKeyRowStatus, hpSntpAuthenticationConfigCompliance=hpSntpAuthenticationConfigCompliance, hpSntpServerRowStatus=hpSntpServerRowStatus, hpSntpInetConfigComplianceOobm=hpSntpInetConfigComplianceOobm, hpSntpInetServerConfigGroup=hpSntpInetServerConfigGroup, hpSntpInetServerAddressType=hpSntpInetServerAddressType, hpSntpAuthenticationKeyValue=hpSntpAuthenticationKeyValue, hpSntpAuthenticationKeyId=hpSntpAuthenticationKeyId, hpSntpInetServerEntry=hpSntpInetServerEntry, hpSntpBroadcastServerAddress=hpSntpBroadcastServerAddress, hpSntpConfigServerTable=hpSntpConfigServerTable, hpSntpInetConfigServerTable=hpSntpInetConfigServerTable, hpSntpServerVersion=hpSntpServerVersion, PYSNMP_MODULE_ID=hpSntpConfigMod, hpTimeSyncMethod=hpTimeSyncMethod, hpSntpConfigGroup=hpSntpConfigGroup, hpSntpConfigPollInterval=hpSntpConfigPollInterval, hpSntpBroadcastServerCompliance=hpSntpBroadcastServerCompliance, hpTimeSyncMethodGroup=hpTimeSyncMethodGroup, hpSntpConfigCompliance=hpSntpConfigCompliance, hpSntpServerStatisticsAuthFailedPkts=hpSntpServerStatisticsAuthFailedPkts, hpSntpAuthenticationKeyIdConfigGroup=hpSntpAuthenticationKeyIdConfigGroup, hpSntpConfigMode=hpSntpConfigMode, hpSntpInetServerRowStatus=hpSntpInetServerRowStatus, hpSntpAuthentication=hpSntpAuthentication, hpSntpAuthenticationKeyEncrypted=hpSntpAuthenticationKeyEncrypted, hpSntpServerStatisticsTable=hpSntpServerStatisticsTable, hpSntpInetServerAuthKeyId=hpSntpInetServerAuthKeyId, hpSntpInetServerVersion=hpSntpInetServerVersion, hpSntpConfigConformance=hpSntpConfigConformance, hpTimeSyncMethodMod=hpTimeSyncMethodMod, hpSntpStatsDroppedPkts=hpSntpStatsDroppedPkts, hpSntpAuthenticationConfigCompliance1=hpSntpAuthenticationConfigCompliance1, hpSntpAuthenticationKeyTrusted=hpSntpAuthenticationKeyTrusted, hpSntpBroadcastServerTable=hpSntpBroadcastServerTable, hpSntpStatistics=hpSntpStatistics, hpSntpConfigGroups=hpSntpConfigGroups, hpSntpServerConfigGroup=hpSntpServerConfigGroup, hpSntpServerPriority=hpSntpServerPriority, hpSntpAuthenticationKeyEntry=hpSntpAuthenticationKeyEntry, hpSntpStatsRcvdPkts=hpSntpStatsRcvdPkts, hpSntpAuthenticationKeyAuthMode=hpSntpAuthenticationKeyAuthMode, hpSntpConfig=hpSntpConfig, hpSntpServerAddress=hpSntpServerAddress, hpSntpInetServerIsOobm=hpSntpInetServerIsOobm, hpSntpServerStatisticsEntry=hpSntpServerStatisticsEntry, hpSntpAuthenticationKeyTable=hpSntpAuthenticationKeyTable, hpSntpConfigCompliances=hpSntpConfigCompliances, hpSntpBroadcastServerGroup=hpSntpBroadcastServerGroup, hpSntpServerEntry=hpSntpServerEntry, hpSntpInetServerPriority=hpSntpInetServerPriority, hpSntpInetConfigCompliance=hpSntpInetConfigCompliance, hpSntpBroadcastServerEntry=hpSntpBroadcastServerEntry, hpSntpInetServerAddress=hpSntpInetServerAddress)
