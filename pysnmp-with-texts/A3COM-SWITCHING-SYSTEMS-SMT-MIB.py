#
# PySNMP MIB module A3COM-SWITCHING-SYSTEMS-SMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-SWITCHING-SYSTEMS-SMT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:08:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Integer32, Unsigned32, NotificationType, ModuleIdentity, IpAddress, iso, TimeTicks, Gauge32, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Integer32", "Unsigned32", "NotificationType", "ModuleIdentity", "IpAddress", "iso", "TimeTicks", "Gauge32", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
switchingSystemsMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29))
a3ComSwitchingSystemsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29, 4))
a3ComSysSmt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29, 4, 9))
a3ComSysSmtCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtCount.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtCount.setDescription('The count of SMTs managed by this agent.')
a3ComSysSmtFddiMacRateTable = MibTable((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5), )
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateTable.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateTable.setDescription('A list of FDDI MAC rate entries. A single entry exists in this list for each FDDI MAC, managed by this agent, which supports rate statistics.')
a3ComSysSmtFddiMacRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1), ).setIndexNames((0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiMacRateSmtIndex"), (0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiMacRateIndex"))
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateEntry.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateEntry.setDescription('An FDDI MAC rate entry contains rate statistics for a particular FDDI MAC managed by this agent. Rate statistics are calculated based on a one second sampling interval.')
a3ComSysSmtFddiMacRateSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateSmtIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateSmtIndex.setDescription('The index of the SMT instance identified by this entry, relative to this agent.')
a3ComSysSmtFddiMacRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateIndex.setDescription('The index of the FDDI MAC identified by this entry, within the SMT identified by this entry.')
a3ComSysSmtFddiMacRateByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateByteReceiveRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateByteReceiveRate.setDescription('The average number of bytes received per second by the FDDI MAC identified by this entry during the most recent sampling period.')
a3ComSysSmtFddiMacRatePeakByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakByteReceiveRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakByteReceiveRate.setDescription('The peak value of a3ComSysSmtFddiMacByteReceiveRate since the system was last initialized for the FDDI MAC identified by this entry.')
a3ComSysSmtFddiMacRateFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateFrameReceiveRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateFrameReceiveRate.setDescription('The average number of frames received per second by the FDDI MAC identified by this entry during the most recent sampling period.')
a3ComSysSmtFddiMacRatePeakFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakFrameReceiveRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakFrameReceiveRate.setDescription('The peak value of a3ComSysSmtFddiMacRateFrameReceiveRate since the system was last initialized for the FDDI MAC identified by this entry.')
a3ComSysSmtFddiMacRateByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateByteTransmitRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateByteTransmitRate.setDescription('The average number of bytes transmitted per second by the FDDI MAC identified by this entry during the most recent sampling period.')
a3ComSysSmtFddiMacRatePeakByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakByteTransmitRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakByteTransmitRate.setDescription('The peak value of a3ComSysSmtFddiMacByteTransmitRate since the system was last initialized for the FDDI MAC identified by this entry.')
a3ComSysSmtFddiMacRateFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateFrameTransmitRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRateFrameTransmitRate.setDescription('The average number of frames transmitted per second by the FDDI MAC identified by this entry during the most recent sampling period.')
a3ComSysSmtFddiMacRatePeakFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakFrameTransmitRate.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiMacRatePeakFrameTransmitRate.setDescription('The peak value of a3ComSysSmtFddiMacFrameTransmitRate since the system was last initialized for the FDDI MAC identified by this entry.')
a3ComSysSmtFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6), )
if mibBuilder.loadTexts: a3ComSysSmtFddiPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortTable.setDescription('A list of FDDI port entries. A single entry exists in this list for each FDDI port managed by this agent.')
a3ComSysSmtFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1), ).setIndexNames((0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiPortSmtIndex"), (0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiPortIndex"))
if mibBuilder.loadTexts: a3ComSysSmtFddiPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortEntry.setDescription('An FDDI port entry contains information about a particular FDDI port managed by this agent.')
a3ComSysSmtFddiPortSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortSmtIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortSmtIndex.setDescription('The index of the SMT instance identified by this entry, relative to this agent.')
a3ComSysSmtFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortIndex.setDescription('The index of the FDDI port identified by this entry, within the SMT identified by this entry.')
a3ComSysSmtFddiPortLocationType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("modularSlot", 2), ("chassis", 3), ("modularCard", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationType.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationType.setDescription('The type of location where the FDDI port identified by this entry is physically located.')
a3ComSysSmtFddiPortLocationTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationTypeIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationTypeIndex.setDescription('The index of the location identified by the corresponding instance of a3ComSysSmtFddiPortLocationType where the FDDI port identified by this entry is physically located.')
a3ComSysSmtFddiPortLocationLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationLocalIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLocationLocalIndex.setDescription('The local index of the FDDI port identified by this entry relative to the location specified by the corresponding values of a3ComSysSmtFddiPortLocationType and a3ComSysSmtFddiPortLocationTypeIndex.')
a3ComSysSmtFddiPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLabel.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortLabel.setDescription('An ASCII text string describing the FDDI port identified by this entry.')
a3ComSysSmtFddiPortSystemPhysicalConnectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiPortSystemPhysicalConnectorId.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiPortSystemPhysicalConnectorId.setDescription('The actual physical connector that corresponds to the values of a3ComSysSmtFddiPortLocationType a3ComSysSmtFddiPortLocationTypeIndex a3ComSysSmtFddiPortLocationLocalIndex.')
a3ComSysSmtFddiStationModeTable = MibTable((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10), )
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeTable.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeTable.setDescription('An FDDI station Mode table contains information to assign an FDDI Station to DAS(dual attached) or SAS(single attached) mode. The system must be rebooted after all changes to this table are completed in order that the changes take effect. ')
a3ComSysSmtFddiStationModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1), ).setIndexNames((0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiStationModeIndex"), (0, "A3COM-SWITCHING-SYSTEMS-SMT-MIB", "a3ComSysSmtFddiStationModePortIndex"))
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeEntry.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeEntry.setDescription('An FDDI Port entry contains information to assign an FDDI Port to an FDDI Station ')
a3ComSysSmtFddiStationModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeIndex.setDescription('The index of the SMT instance identified by this entry, relative to this agent ')
a3ComSysSmtFddiStationModePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModePortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModePortIndex.setDescription('The index of the Port instance identified by this entry, relative to the SMT indentified by this entry.')
a3ComSysSmtFddiStationModeSelectablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeSelectablePorts.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeSelectablePorts.setDescription('An implementation specific entry that corresponds to a port pair, based on the hardware implementation. Only ports with a value of 1 are configurable, those with a value of 0 are not.')
a3ComSysSmtFddiStationModeCurrentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sas-m", 1), ("sas-s", 2), ("das", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeCurrentMode.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeCurrentMode.setDescription('Indicates the current SAS or DAS mode of the port(s) instance relative to the SMT instance. A value of 1 indicates SAS(M). A value of 2 indicates SAS(S) and a value of 3 indicates DAS.')
a3ComSysSmtFddiStationModeRequestedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 9, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sas-m", 1), ("sas-s", 2), ("das", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeRequestedMode.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComSysSmtFddiStationModeRequestedMode.setDescription('Indicates the requested mode for a given port pair. A value of 1 indicates a request for SAS(M) for the corresponding pair. A value of 2 indicates SAS(S) and a value of 3 indicates DAS. It should be noted that if requested mode is different than current mode a reboot is required to enable the requested mode. NOTE: reboot can be accomplished using a3ComSysSystemAction.')
mibBuilder.exportSymbols("A3COM-SWITCHING-SYSTEMS-SMT-MIB", a3ComSysSmtFddiMacRatePeakFrameTransmitRate=a3ComSysSmtFddiMacRatePeakFrameTransmitRate, a3ComSysSmt=a3ComSysSmt, a3ComSysSmtFddiMacRateTable=a3ComSysSmtFddiMacRateTable, a3ComSysSmtFddiStationModeEntry=a3ComSysSmtFddiStationModeEntry, a3ComSysSmtFddiMacRatePeakFrameReceiveRate=a3ComSysSmtFddiMacRatePeakFrameReceiveRate, a3ComSysSmtFddiMacRateFrameTransmitRate=a3ComSysSmtFddiMacRateFrameTransmitRate, a3ComSysSmtFddiMacRateByteReceiveRate=a3ComSysSmtFddiMacRateByteReceiveRate, switchingSystemsMibs=switchingSystemsMibs, a3ComSysSmtFddiPortLabel=a3ComSysSmtFddiPortLabel, a3ComSysSmtFddiPortEntry=a3ComSysSmtFddiPortEntry, a3ComSysSmtFddiMacRateFrameReceiveRate=a3ComSysSmtFddiMacRateFrameReceiveRate, a3ComSysSmtFddiMacRatePeakByteTransmitRate=a3ComSysSmtFddiMacRatePeakByteTransmitRate, a3ComSysSmtFddiStationModePortIndex=a3ComSysSmtFddiStationModePortIndex, a3ComSysSmtFddiPortIndex=a3ComSysSmtFddiPortIndex, a3ComSysSmtFddiPortLocationType=a3ComSysSmtFddiPortLocationType, a3ComSysSmtCount=a3ComSysSmtCount, a3Com=a3Com, a3ComSysSmtFddiPortSystemPhysicalConnectorId=a3ComSysSmtFddiPortSystemPhysicalConnectorId, a3ComSysSmtFddiMacRateEntry=a3ComSysSmtFddiMacRateEntry, a3ComSysSmtFddiStationModeCurrentMode=a3ComSysSmtFddiStationModeCurrentMode, a3ComSysSmtFddiStationModeSelectablePorts=a3ComSysSmtFddiStationModeSelectablePorts, a3ComSysSmtFddiMacRateByteTransmitRate=a3ComSysSmtFddiMacRateByteTransmitRate, a3ComSysSmtFddiPortLocationTypeIndex=a3ComSysSmtFddiPortLocationTypeIndex, a3ComSysSmtFddiMacRateSmtIndex=a3ComSysSmtFddiMacRateSmtIndex, a3ComSysSmtFddiStationModeIndex=a3ComSysSmtFddiStationModeIndex, a3ComSysSmtFddiStationModeTable=a3ComSysSmtFddiStationModeTable, a3ComSysSmtFddiPortSmtIndex=a3ComSysSmtFddiPortSmtIndex, a3ComSysSmtFddiStationModeRequestedMode=a3ComSysSmtFddiStationModeRequestedMode, a3ComSysSmtFddiMacRateIndex=a3ComSysSmtFddiMacRateIndex, a3ComSysSmtFddiMacRatePeakByteReceiveRate=a3ComSysSmtFddiMacRatePeakByteReceiveRate, a3ComSwitchingSystemsMib=a3ComSwitchingSystemsMib, a3ComSysSmtFddiPortLocationLocalIndex=a3ComSysSmtFddiPortLocationLocalIndex, a3ComSysSmtFddiPortTable=a3ComSysSmtFddiPortTable)
