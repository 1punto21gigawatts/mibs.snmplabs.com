#
# PySNMP MIB module ERI-DNX-ALARM-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ERI-DNX-ALARM-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:05:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dnxTrapEnterprise, trapSequence, trapState, trapResourceKey, trapTime, trapResourceAddress, trapResourceType, trapSeverity, trapType = mibBuilder.importSymbols("ERI-DNX-SMC-MIB", "dnxTrapEnterprise", "trapSequence", "trapState", "trapResourceKey", "trapTime", "trapResourceAddress", "trapResourceType", "trapSeverity", "trapType")
eriMibs, = mibBuilder.importSymbols("ERI-ROOT-SMI", "eriMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, iso, MibIdentifier, TimeTicks, ObjectIdentity, Integer32, IpAddress, NotificationType, Unsigned32, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "MibIdentifier", "TimeTicks", "ObjectIdentity", "Integer32", "IpAddress", "NotificationType", "Unsigned32", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
eriDNXAlarmTrapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 644, 3, 12))
eriDNXAlarmTrapMIB.setRevisions(('2003-05-06 00:00', '2003-01-10 00:00', '2002-08-20 00:00', '2002-07-03 00:00', '2002-06-05 00:00', '2002-04-08 00:00', '2002-03-11 00:00', '2001-12-05 00:00', '2001-09-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eriDNXAlarmTrapMIB.setRevisionsDescriptions(('Nevio Poljak - eri_DnxRoot MIB Rev 2.1 (SW Rel. 15.2) Removed SMC Station Clock Traps which are no longer supported and added Stratum3 Device Trap which was missing. Added DS0DP InTest and TestOff Informational Events.', 'Neeraj Bhatt - eri_DnxRoot MIB Rev 01.2 Added a new trap for the Laser Off detection with major Alarm Severity.', 'Nevio Poljak - eri_DnxRoot MIB Rev 01.0 Changed Alarm severity of Receiving AIS from Major to Informational for T1/E1, HDS3, STS1, E3, and STM1/OC3 T1/E1. Added Informational Trap for Sa4 National Bit Match for all E1 devices.', 'Nevio Poljak - eri_DnxRoot MIB Rev 01.0 Added Alarms for Dnx-1u Circuit Card missing and Optical Transport Overhead SF and SD detection. Removed Alarm for Dnx-1u Power Supply Rear card missing.', 'Nevio Poljak - eri_DnxRoot MIB Rev 01.0 Converted to SMIv2 format and Added New Dnx-1u Alarms and Event Traps.', 'Nevio Poljak - Software Release 14.2 Re-assigned Alarm severity of DBNotInSync & SlotMismatch to Minor.', 'Nevio Poljak - Software Release 14.1 Added Traps for Xlink Cable Mismatch Alarm and renamed Power Supply Not Present Events to Set/Clear Alarm Traps.', 'Nevio Poljak - Software Release 14.0 Added Traps for E3 Device Card Alarms and Events.', 'Barry L. Bengel - Software Release 13.0 Initial Release.',))
if mibBuilder.loadTexts: eriDNXAlarmTrapMIB.setLastUpdated('200305060000Z')
if mibBuilder.loadTexts: eriDNXAlarmTrapMIB.setOrganization('Eastern Research, Inc.')
if mibBuilder.loadTexts: eriDNXAlarmTrapMIB.setContactInfo('Customer Service Postal: Eastern Research, Inc. 225 Executive Drive Moorestown, NJ 08057 Phone: +1-800-337-4374 Email: support@erinc.com')
if mibBuilder.loadTexts: eriDNXAlarmTrapMIB.setDescription('The ERI Enterprise MIB Module for the DNX Alarm Traps.')
evntDevColdStart = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevColdStart.setStatus('current')
if mibBuilder.loadTexts: evntDevColdStart.setDescription('Informational event for a Device application module Cold start-up.')
evntDevWarmStart = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevWarmStart.setStatus('current')
if mibBuilder.loadTexts: evntDevWarmStart.setDescription('Informational event for a Device application module Warm reset.')
setSlotMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 101)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSlotMismatch.setStatus('current')
if mibBuilder.loadTexts: setSlotMismatch.setDescription('Minor Alarm for a slot configuration mismatch.')
setSlotMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 102)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSlotMissing.setStatus('current')
if mibBuilder.loadTexts: setSlotMissing.setDescription('Critical Alarm for an empty slot.')
clearSlotMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 141)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSlotMismatch.setStatus('current')
if mibBuilder.loadTexts: clearSlotMismatch.setDescription('Clears the Minor Alarm for slot config mismatch.')
clearSlotMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 142)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSlotMissing.setStatus('current')
if mibBuilder.loadTexts: clearSlotMissing.setDescription('Clears the Critical Alarm for slot missing.')
evntDevOnline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 201)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevOnline.setStatus('current')
if mibBuilder.loadTexts: evntDevOnline.setDescription('Informational Event for Device reporting Online state.')
evntDevStandby = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 202)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevStandby.setStatus('current')
if mibBuilder.loadTexts: evntDevStandby.setDescription('Informational Event for Device reporting Standby state.')
setDevFrameSyncNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 203)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevFrameSyncNotPresent.setStatus('current')
if mibBuilder.loadTexts: setDevFrameSyncNotPresent.setDescription('Critical Alarm for Device without Frame Sync pulse.')
setDevSystemClockNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 204)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevSystemClockNotPresent.setStatus('current')
if mibBuilder.loadTexts: setDevSystemClockNotPresent.setDescription('Critical Alarm for Device that lost system clock.')
setDevDataBaseNotInsync = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 206)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevDataBaseNotInsync.setStatus('current')
if mibBuilder.loadTexts: setDevDataBaseNotInsync.setDescription('Minor Alarm for system manager (SMC/XNM) configuration DB out of sync with redundant system manager.')
setDevFreeRunError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 207)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevFreeRunError.setStatus('current')
if mibBuilder.loadTexts: setDevFreeRunError.setDescription('Critical Alarm for Device clock freerun error.')
setDevOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 208)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevOffline.setStatus('current')
if mibBuilder.loadTexts: setDevOffline.setDescription('Critical Alarm for Device in offline state.')
setDevDefective = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 209)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevDefective.setStatus('current')
if mibBuilder.loadTexts: setDevDefective.setDescription('Critical Alarm for defective Device module.')
setDevBusError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 210)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevBusError.setStatus('current')
if mibBuilder.loadTexts: setDevBusError.setDescription('Critical Alarm for Device with supervisory bus communications problem.')
setDevStratum3ClkFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 216)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevStratum3ClkFailure.setStatus('current')
if mibBuilder.loadTexts: setDevStratum3ClkFailure.setDescription('Critical Alarm for SMC Device with loss of Stratum3 Clock.')
setDevCircuitCardMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 219)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevCircuitCardMissing.setStatus('current')
if mibBuilder.loadTexts: setDevCircuitCardMissing.setDescription('Critical Alarm for Device with missing hardware.')
setDevConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 225)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevConfigError.setStatus('current')
if mibBuilder.loadTexts: setDevConfigError.setDescription('Major Alarm for Device configuration error.')
setDevNoRearCard = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 228)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDevNoRearCard.setStatus('current')
if mibBuilder.loadTexts: setDevNoRearCard.setDescription('Critical Alarm for Device that cannot detect rear card.')
evntDevOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 231)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntDevOutOfService.setDescription('Informational Event for Device reporting Out-Of-Service state.')
evntDevNotOnline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 241)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevNotOnline.setStatus('current')
if mibBuilder.loadTexts: evntDevNotOnline.setDescription('Informational Event for Device transition from Online state to some other state.')
evntDevNotStandby = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 242)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevNotStandby.setStatus('current')
if mibBuilder.loadTexts: evntDevNotStandby.setDescription('Informational Event for Device transition from Standby state to some other state.')
clearDevFrameSyncNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 243)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevFrameSyncNotPresent.setStatus('current')
if mibBuilder.loadTexts: clearDevFrameSyncNotPresent.setDescription('Clears the Critical Alarm for Device without Frame Sync pulse.')
clearDevSystemClockNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 244)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevSystemClockNotPresent.setStatus('current')
if mibBuilder.loadTexts: clearDevSystemClockNotPresent.setDescription('Clears the Critical Alarm for Device that lost system clock.')
clearDevDataBaseNotInsync = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 246)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevDataBaseNotInsync.setStatus('current')
if mibBuilder.loadTexts: clearDevDataBaseNotInsync.setDescription('Clears the Minor Alarm for system manager (SMC/XNM) configuration DB out of sync with redundant system manager.')
clearDevFreeRunError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 247)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevFreeRunError.setStatus('current')
if mibBuilder.loadTexts: clearDevFreeRunError.setDescription('Clears the Critical Alarm for Device clock freerun error.')
clearDevOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 248)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevOffline.setStatus('current')
if mibBuilder.loadTexts: clearDevOffline.setDescription('Clears the Critical Alarm for Device in an offline state.')
clearDevDefective = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 249)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevDefective.setStatus('current')
if mibBuilder.loadTexts: clearDevDefective.setDescription('Clears the Critical Alarm for defective Device module.')
clearDevBusError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 250)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevBusError.setStatus('current')
if mibBuilder.loadTexts: clearDevBusError.setDescription('Clears the Critical Alarm for Device with supervisory bus communications problem.')
clearDevStratum3ClkFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 256)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevStratum3ClkFailure.setStatus('current')
if mibBuilder.loadTexts: clearDevStratum3ClkFailure.setDescription('Clears the Critical Alarm for SMC Device with loss of Stratum3 Clock.')
clearDevCircuitCardMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 259)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevCircuitCardMissing.setStatus('current')
if mibBuilder.loadTexts: clearDevCircuitCardMissing.setDescription('Clears the Critical Alarm for Device with missing hardware.')
clearDevConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 265)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevConfigError.setStatus('current')
if mibBuilder.loadTexts: clearDevConfigError.setDescription('Clears the Critical Alarm for Device configuration error.')
clearDevNoRearCard = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 268)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDevNoRearCard.setStatus('current')
if mibBuilder.loadTexts: clearDevNoRearCard.setDescription('Clears the Critical Alarm for Device that cannot detect rear card.')
evntDevInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 271)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDevInService.setStatus('current')
if mibBuilder.loadTexts: evntDevInService.setDescription('Informational Event for Device reporting In Service state.')
setT1E1RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 301)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: setT1E1RcvFarEndLOF.setDescription('Major Alarm for receiving far end loss of frame (receiving yellow alarm).')
setT1E1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 302)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndSendLOF.setDescription('Major Alarm for near end sending loss of frame (transmitting yellow alarm).')
evntT1E1RcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 303)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1RcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntT1E1RcvingAIS.setDescription('Informational Event for far end sending alarm indication signal.')
setT1E1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 304)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndSendingAIS.setDescription('Major Alarm for near end sending alarm indication signal.')
setT1E1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 305)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndLOF.setDescription('Major Alarm for near end loss of frame (red alarm).')
setT1E1NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 306)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndLossOfSignal.setDescription('Major Alarm for near end loss of signal.')
evntT1E1NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 307)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntT1E1NearEndLooped.setDescription('Informational Event for T1/E1 near end looped.')
setT1E1Ts16AIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 308)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1Ts16AIS.setStatus('current')
if mibBuilder.loadTexts: setT1E1Ts16AIS.setDescription('Major Alarm for E1 TS16 alarm indication signal.')
setT1E1FarEndSendingTs16LOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 309)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1FarEndSendingTs16LOMF.setStatus('current')
if mibBuilder.loadTexts: setT1E1FarEndSendingTs16LOMF.setDescription('Major Alarm for far end sending TS16 LOMF.')
setT1E1NearEndSendingTs16LOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 310)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndSendingTs16LOMF.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndSendingTs16LOMF.setDescription('Major Alarm for near end sending TS16 LOMF.')
setT1E1OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 312)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: setT1E1OtherLineStatus.setDescription('Major Alarm for other line status.')
setT1E1NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 313)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndUnavailableSig.setDescription('Major Alarm for near end in unavailable signal state.')
evntT1E1CarrierEquipOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 314)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1CarrierEquipOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntT1E1CarrierEquipOutOfService.setDescription('Informational Event for T1/E1 carrier equipment out-of-service.')
evntE1NationalSa4TxRxSame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 316)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE1NationalSa4TxRxSame.setStatus('current')
if mibBuilder.loadTexts: evntE1NationalSa4TxRxSame.setDescription('Informational Event for E1 Sa4 National Bit Send/Receive matching value.')
setT1E1NearEndTxSlip = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 321)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndTxSlip.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndTxSlip.setDescription('Major Alarm for T1/E1 near end transmit slip.')
setT1E1NearEndRxSlip = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 322)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndRxSlip.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndRxSlip.setDescription('Major Alarm for T1/E1 near end receive slip.')
setT1E1NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 323)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: setT1E1NearEndSeverErroredFrame.setDescription('Major Alarm for T1/E1 near end severely errored frame.')
setT1E1ChangeFrameAlignment = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 324)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1ChangeFrameAlignment.setStatus('current')
if mibBuilder.loadTexts: setT1E1ChangeFrameAlignment.setDescription('Major Alarm for T1/E1 change in frame alignment.')
setT1E1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 325)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT1E1ConfigError.setStatus('current')
if mibBuilder.loadTexts: setT1E1ConfigError.setDescription('Major Alarm for T1/E1 configuration error.')
evntT1E1InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 330)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1InTest.setStatus('current')
if mibBuilder.loadTexts: evntT1E1InTest.setDescription('Informational Event for T1/E1 in test.')
evntT1E1OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 331)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntT1E1OutOfService.setDescription('Informational Event for T1/E1 out-of-service.')
clearT1E1RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 341)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearT1E1RcvFarEndLOF.setDescription('Clears the Major Alarm for receiving far end loss of frame (yellow alarm).')
clearT1E1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 342)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndSendLOF.setDescription('Clears the Major Alarm for near end sending loss of frame (yellow alarm).')
evntT1E1StoppedRcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 343)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1StoppedRcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntT1E1StoppedRcvingAIS.setDescription('Informational Event when far end stops sending alarm indication signal.')
clearT1E1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 344)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndSendingAIS.setDescription('Clears the Major Alarm for near end sending alarm indication signal.')
clearT1E1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 345)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndLOF.setDescription('Clears the Major Alarm for near end loss of frame (red alarm).')
clearT1E1NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 346)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndLossOfSignal.setDescription('Clears the Major Alarm for near end loss of signal.')
evntT1E1NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 347)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntT1E1NearEndLoopOff.setDescription('Informational Event for T1/E1 near end loop off.')
clearT1E1Ts16AIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 348)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1Ts16AIS.setStatus('current')
if mibBuilder.loadTexts: clearT1E1Ts16AIS.setDescription('Clears the Major Alarm for E1 TS16 alarm indication signal.')
clearT1E1FarEndSendingTs16LOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 349)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1FarEndSendingTs16LOMF.setStatus('current')
if mibBuilder.loadTexts: clearT1E1FarEndSendingTs16LOMF.setDescription('Clears the Major Alarm for far end sending TS16 LOMF.')
clearT1E1NearEndSendingTs16LOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 350)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndSendingTs16LOMF.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndSendingTs16LOMF.setDescription('Clears the Major Alarm for near end sending TS16 LOMF.')
clearT1E1OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 352)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: clearT1E1OtherLineStatus.setDescription('Clears the Major Alarm for other line status.')
clearT1E1NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 353)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndUnavailableSig.setDescription('Clears the Major Alarm for near end in unavailable signal state.')
evntT1E1CarrierEquipInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 354)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1CarrierEquipInService.setStatus('current')
if mibBuilder.loadTexts: evntT1E1CarrierEquipInService.setDescription('Informational Event for T1/E1 carrier equipment in-service.')
evntE1NationalSa4TxRxDiff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 356)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE1NationalSa4TxRxDiff.setStatus('current')
if mibBuilder.loadTexts: evntE1NationalSa4TxRxDiff.setDescription('Informational Event for E1 Sa4 National Bit Send/Receive different value.')
clearT1E1NearEndTxSlip = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 361)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndTxSlip.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndTxSlip.setDescription('Clears the Major Alarm for T1/E1 near end transmit slip.')
clearT1E1NearEndRxSlip = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 362)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndRxSlip.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndRxSlip.setDescription('Major Alarm for T1/E1 near end receive slip.')
clearT1E1NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 363)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: clearT1E1NearEndSeverErroredFrame.setDescription('Clears the Major Alarm for T1/E1 near end severely errored frame.')
clearT1E1ChangeFrameAlignment = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 364)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1ChangeFrameAlignment.setStatus('current')
if mibBuilder.loadTexts: clearT1E1ChangeFrameAlignment.setDescription('Clears the Major Alarm for T1/E1 change in frame alignment.')
clearT1E1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 365)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT1E1ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearT1E1ConfigError.setDescription('Clears the Major Alarm for T1/E1 configuration error.')
evntT1E1TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 370)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1TestOff.setStatus('current')
if mibBuilder.loadTexts: evntT1E1TestOff.setDescription('Informational Event for T1/E1 test off.')
evntT1E1InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 371)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT1E1InService.setStatus('current')
if mibBuilder.loadTexts: evntT1E1InService.setDescription('Informational Event for T1/E1 in-service.')
setHsRcvFIFOError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 401)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHsRcvFIFOError.setStatus('current')
if mibBuilder.loadTexts: setHsRcvFIFOError.setDescription('Major Alarm for receive FIFO error.')
setHsXmtFIFOError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 402)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHsXmtFIFOError.setStatus('current')
if mibBuilder.loadTexts: setHsXmtFIFOError.setDescription('Major Alarm for transmit FIFO error.')
setHsClockEdgeError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 403)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHsClockEdgeError.setStatus('current')
if mibBuilder.loadTexts: setHsClockEdgeError.setDescription('Major Alarm for clock edge error.')
setHsCarrierFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 404)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHsCarrierFailure.setStatus('current')
if mibBuilder.loadTexts: setHsCarrierFailure.setDescription('Major Alarm for high speed carrier failure.')
evntHsNearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 407)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsNearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntHsNearEndLooped.setDescription('Informational event for high speed near end looped.')
evntHsNoBtsAssigned = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 424)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsNoBtsAssigned.setStatus('current')
if mibBuilder.loadTexts: evntHsNoBtsAssigned.setDescription('Informational event for no backplane timeslot assigned.')
setHsConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 425)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHsConfigError.setStatus('current')
if mibBuilder.loadTexts: setHsConfigError.setDescription('Major Alarm for high speed configuration error.')
evntHsInTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 430)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsInTest.setStatus('current')
if mibBuilder.loadTexts: evntHsInTest.setDescription('Informational event for high speed in test.')
evntHsOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 431)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntHsOutOfService.setDescription('Informational event for high speed out-of-service.')
clearHsRcvFIFOError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 441)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHsRcvFIFOError.setStatus('current')
if mibBuilder.loadTexts: clearHsRcvFIFOError.setDescription('Clears the Major Alarm for receive FIFO error.')
clearHsXmtFIFOError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 442)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHsXmtFIFOError.setStatus('current')
if mibBuilder.loadTexts: clearHsXmtFIFOError.setDescription('Clears the Major Alarm for transmit FIFO error.')
clearHsClockEdgeError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 443)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHsClockEdgeError.setStatus('current')
if mibBuilder.loadTexts: clearHsClockEdgeError.setDescription('Clears the Major Alarm for clock edge error.')
clearHsCarrierFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 444)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHsCarrierFailure.setStatus('current')
if mibBuilder.loadTexts: clearHsCarrierFailure.setDescription('Clears the Major Alarm for high speed carrier failure.')
evntHsNearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 447)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsNearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntHsNearEndLoopOff.setDescription('Informational event for high speed near end loop off.')
evntHsBtsAssigned = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 464)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsBtsAssigned.setStatus('current')
if mibBuilder.loadTexts: evntHsBtsAssigned.setDescription('Informational event for backplane timeslot assigned.')
clearHsConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 465)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHsConfigError.setStatus('current')
if mibBuilder.loadTexts: clearHsConfigError.setDescription('Clears the Major Alarm for high speed configuration error.')
evntHsTestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 470)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsTestOff.setStatus('current')
if mibBuilder.loadTexts: evntHsTestOff.setDescription('Informational event for high speed test off.')
evntHsInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 471)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHsInService.setStatus('current')
if mibBuilder.loadTexts: evntHsInService.setDescription('Informational event for high speed in-service.')
setT3RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 501)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: setT3RcvFarEndLOF.setDescription('Major Alarm for receiving far end loss of frame (receiving yellow alarm).')
setT3NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 502)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndSendLOF.setDescription('Major Alarm for near end sending loss of frame (transmitting yellow alarm).')
setT3FarEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 503)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3FarEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setT3FarEndSendingAIS.setDescription('Major Alarm for far end sending alarm indication signal.')
setT3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 504)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndSendingAIS.setDescription('Major Alarm for near end sending alarm indication signal.')
setT3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 505)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndLOF.setDescription('Major Alarm for near end loss of frame.')
setT3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 506)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndLossOfSignal.setDescription('Major Alarm for near end loss of signal.')
evntT3NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 507)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntT3NearEndLooped.setDescription('Informational Event for T3 near end looped.')
setT3OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 512)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: setT3OtherLineStatus.setDescription('Major Alarm for T3 other line status.')
setT3NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 513)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndUnavailableSig.setDescription('Major Alarm for near end in unavailable signal state.')
evntT3CarrierEquipOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 514)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3CarrierEquipOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntT3CarrierEquipOutOfService.setDescription('Informational Event for T3 carrier equipment out-of-service.')
setT3NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 515)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: setT3NearEndSeverErroredFrame.setDescription('Major Alarm for near end severely errored frame.')
setT3TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 516)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: setT3TxRxClockFailure.setDescription('Major Alarm for T3 Transmit/Receive clock failure.')
setT3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 517)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: setT3FarEndBlockError.setDescription('Major Alarm for T3 far end block error.')
setT3PbitCbitParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 518)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3PbitCbitParityError.setStatus('current')
if mibBuilder.loadTexts: setT3PbitCbitParityError.setDescription('Major Alarm for P-bit or C-bit parity error.')
setT3MbitsInError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 519)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3MbitsInError.setStatus('current')
if mibBuilder.loadTexts: setT3MbitsInError.setDescription('Major Alarm for M-bits in error.')
setT3LIUOtherStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 520)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3LIUOtherStatus.setStatus('current')
if mibBuilder.loadTexts: setT3LIUOtherStatus.setDescription('Major Alarm for T3 LIU other status.')
setT3LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 522)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: setT3LIUExcessZeros.setDescription('Major Alarm for T3 LIU excessive zeroes.')
setT3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 523)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: setT3LIUCodingViolation.setDescription('Major Alarm for T3 LIU line coding violation.')
setT3LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 524)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: setT3LIUPrbsError.setDescription('Major Alarm for T3 LIU PRBS error.')
setT3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 525)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setT3ConfigError.setStatus('current')
if mibBuilder.loadTexts: setT3ConfigError.setDescription('Major Alarm for T3 configuration error.')
evntT3InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 530)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3InTest.setStatus('current')
if mibBuilder.loadTexts: evntT3InTest.setDescription('Informational Event for T3 in test.')
evntT3OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 531)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntT3OutOfService.setDescription('Informational Event for T3 out-of-service.')
clearT3RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 541)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearT3RcvFarEndLOF.setDescription('Clears the Major Alarm for receiving far end loss of frame (receiving yellow alarm).')
clearT3NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 542)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndSendLOF.setDescription('Clears the Major Alarm for near end sending loss of frame (transmitting yellow alarm).')
clearT3FarEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 543)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3FarEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearT3FarEndSendingAIS.setDescription('Clears the Major Alarm for far end sending alarm indication signal.')
clearT3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 544)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndSendingAIS.setDescription('Clears the Major Alarm for near end sending alarm indication signal.')
clearT3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 545)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndLOF.setDescription('Clears the Major Alarm for near end loss of frame.')
clearT3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 546)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndLossOfSignal.setDescription('Clears the Major Alarm for near end loss of signal.')
evntT3NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 547)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntT3NearEndLoopOff.setDescription('Informational Event for T3 near end loop off.')
clearT3OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 552)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: clearT3OtherLineStatus.setDescription('Clears the Major Alarm for T3 other line status.')
clearT3NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 553)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndUnavailableSig.setDescription('Clears the Major Alarm for near end in unavailable signal state.')
evntT3CarrierEquipInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 554)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3CarrierEquipInService.setStatus('current')
if mibBuilder.loadTexts: evntT3CarrierEquipInService.setDescription('Informational Event for T3 carrier equipment in-service.')
clearT3NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 555)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: clearT3NearEndSeverErroredFrame.setDescription('Clears the Major Alarm for near end severely errored frame.')
clearT3TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 556)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: clearT3TxRxClockFailure.setDescription('Clears the Major Alarm for T3 Transmit/Receive clock failure.')
clearT3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 557)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: clearT3FarEndBlockError.setDescription('Clears the Major Alarm for T3 far end block error.')
clearT3PbitCbitParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 558)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3PbitCbitParityError.setStatus('current')
if mibBuilder.loadTexts: clearT3PbitCbitParityError.setDescription('Clears the Major Alarm for P-bit or C-bit parity error.')
clearT3MbitsInError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 559)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3MbitsInError.setStatus('current')
if mibBuilder.loadTexts: clearT3MbitsInError.setDescription('Clears the Major Alarm for M-bits in error.')
clearT3LIUOtherStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 560)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3LIUOtherStatus.setStatus('current')
if mibBuilder.loadTexts: clearT3LIUOtherStatus.setDescription('Clears the Major Alarm for T3 LIU other status.')
clearT3LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 562)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: clearT3LIUExcessZeros.setDescription('Clears the Major Alarm for T3 LIU excessive zeroes.')
clearT3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 563)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: clearT3LIUCodingViolation.setDescription('Clears the Major Alarm for T3 LIU line coding violation.')
clearT3LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 564)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: clearT3LIUPrbsError.setDescription('Clears the Major Alarm for T3 LIU PRBS error.')
clearT3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 565)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearT3ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearT3ConfigError.setDescription('Clears the Major Alarm for T3 configuration error.')
evntT3TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 570)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3TestOff.setStatus('current')
if mibBuilder.loadTexts: evntT3TestOff.setDescription('Informational Event for T3 test off.')
evntT3InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 571)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntT3InService.setStatus('current')
if mibBuilder.loadTexts: evntT3InService.setDescription('Informational Event for T3 in-service.')
setPowerSupplyNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 601)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPowerSupplyNotPresent.setStatus('current')
if mibBuilder.loadTexts: setPowerSupplyNotPresent.setDescription('Major Alarm for power supply not present.')
setPowerSupplyProblem = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 602)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPowerSupplyProblem.setStatus('current')
if mibBuilder.loadTexts: setPowerSupplyProblem.setDescription('Major Alarm for power supply problem.')
clearPowerSupplyNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 641)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPowerSupplyNotPresent.setStatus('current')
if mibBuilder.loadTexts: clearPowerSupplyNotPresent.setDescription('Clears the Major Alarm for power supply not present.')
clearPowerSupplyProblem = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 642)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPowerSupplyProblem.setStatus('current')
if mibBuilder.loadTexts: clearPowerSupplyProblem.setDescription('Clears the Major Alarm for power supply problem.')
setOcuNearEndLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 706)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOcuNearEndLOS.setStatus('current')
if mibBuilder.loadTexts: setOcuNearEndLOS.setDescription('Major Alarm for Quad OCU near end loss of signal.')
setOcuOtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 712)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOcuOtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: setOcuOtherLineStatus.setDescription('Major Alarm for Quad OCU other line status.')
setOcuNearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 723)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOcuNearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: setOcuNearEndSeverErroredFrame.setDescription('Major Alarm for Quad OCU near end severely errored frame.')
setOcuConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 725)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOcuConfigError.setStatus('current')
if mibBuilder.loadTexts: setOcuConfigError.setDescription('Major Alarm for Quad OCU configuration error.')
evntOcuOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 731)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOcuOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntOcuOutOfService.setDescription('Informational Event for Quad OCU out-of-service.')
clearOcuNearEndLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 746)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOcuNearEndLOS.setStatus('current')
if mibBuilder.loadTexts: clearOcuNearEndLOS.setDescription('Clears the Major Alarm for Quad OCU near end loss of signal.')
clearOcuOtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 752)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOcuOtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: clearOcuOtherLineStatus.setDescription('Clears the Major Alarm for Quad OCU other line status.')
clearOcuNearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 763)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOcuNearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: clearOcuNearEndSeverErroredFrame.setDescription('Clears the Major Alarm for Quad OCU near end severely errored frame.')
clearOcuConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 765)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOcuConfigError.setStatus('current')
if mibBuilder.loadTexts: clearOcuConfigError.setDescription('Clears the Major Alarm for Quad OCU configuration error.')
evntOcuInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 771)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOcuInService.setStatus('current')
if mibBuilder.loadTexts: evntOcuInService.setDescription('Informational Event for Quad OCU in-service.')
setTamConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 825)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTamConfigError.setStatus('current')
if mibBuilder.loadTexts: setTamConfigError.setDescription('Major Alarm for TAM configuration error.')
evntTamOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 831)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTamOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntTamOutOfService.setDescription('Informational Event for TAM out-of-service.')
clearTamConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 865)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTamConfigError.setStatus('current')
if mibBuilder.loadTexts: clearTamConfigError.setDescription('Clears the Major Alarm for TAM configuration error.')
evntTamInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 871)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTamInService.setStatus('current')
if mibBuilder.loadTexts: evntTamInService.setDescription('Informational Event for TAM in-service.')
setVoiceConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 925)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVoiceConfigError.setStatus('current')
if mibBuilder.loadTexts: setVoiceConfigError.setDescription('Major Alarm for Voice Port configuration error.')
evntVoiceOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 931)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntVoiceOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntVoiceOutOfService.setDescription('Informational Event for Voice Port out-of-service.')
clearVoiceConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 965)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVoiceConfigError.setStatus('current')
if mibBuilder.loadTexts: clearVoiceConfigError.setDescription('Clears the Major Alarm for Voice Port configuration error.')
evntVoiceInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 971)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntVoiceInService.setStatus('current')
if mibBuilder.loadTexts: evntVoiceInService.setDescription('Informational Event for Voice Port in-service.')
evntPsxDevOnline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1001)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxDevOnline.setStatus('current')
if mibBuilder.loadTexts: evntPsxDevOnline.setDescription('Informational Event for Protection Switch Device Online.')
setPsxPowerSupplyANotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1003)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxPowerSupplyANotOk.setStatus('current')
if mibBuilder.loadTexts: setPsxPowerSupplyANotOk.setDescription('Major Alarm for PSX Power Supply A problem.')
setPsxPowerSupplyBNotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1004)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxPowerSupplyBNotOk.setStatus('current')
if mibBuilder.loadTexts: setPsxPowerSupplyBNotOk.setDescription('Major Alarm for PSX Power Supply B problem.')
setPsxFan01NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1005)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxFan01NotOk.setStatus('current')
if mibBuilder.loadTexts: setPsxFan01NotOk.setDescription('Major Alarm for PSX Fan 01 problem.')
setPsxFan02NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1006)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxFan02NotOk.setStatus('current')
if mibBuilder.loadTexts: setPsxFan02NotOk.setDescription('Major Alarm for PSX Fan 02 problem.')
setPsxFan03NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1007)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxFan03NotOk.setStatus('current')
if mibBuilder.loadTexts: setPsxFan03NotOk.setDescription('Major Alarm for PSX Fan 03 problem.')
setPsxDualBroadbandNotSupported = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1008)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxDualBroadbandNotSupported.setStatus('current')
if mibBuilder.loadTexts: setPsxDualBroadbandNotSupported.setDescription('Major Alarm for PSX Dual Broadband protection group not supported.')
evntPsxNewControllerRev = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1009)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxNewControllerRev.setStatus('current')
if mibBuilder.loadTexts: evntPsxNewControllerRev.setDescription('Informational Event for PSX new controller revision.')
evntPsxLineCard01Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1014)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard01Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard01Missing.setDescription('Informational Event for PSX line card 01 missing.')
evntPsxLineCard02Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1015)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard02Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard02Missing.setDescription('Informational Event for PSX line card 02 missing.')
evntPsxLineCard03Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1016)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard03Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard03Missing.setDescription('Informational Event for PSX line card 03 missing.')
evntPsxLineCard04Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1017)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard04Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard04Missing.setDescription('Informational Event for PSX line card 04 missing.')
evntPsxLineCard05Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1018)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard05Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard05Missing.setDescription('Informational Event for PSX line card 05 missing.')
evntPsxLineCard06Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1019)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard06Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard06Missing.setDescription('Informational Event for PSX line card 06 missing.')
evntPsxLineCard07Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1020)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard07Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard07Missing.setDescription('Informational Event for PSX line card 07 missing.')
evntPsxLineCard08Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1021)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard08Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard08Missing.setDescription('Informational Event for PSX line card 08 missing.')
evntPsxLineCard09Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1022)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard09Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard09Missing.setDescription('Informational Event for PSX line card 09 missing.')
evntPsxLineCard10Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1023)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard10Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard10Missing.setDescription('Informational Event for PSX line card 10 missing.')
evntPsxLineCard11Missing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1024)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard11Missing.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard11Missing.setDescription('Informational Event for PSX line card 11 missing.')
clearPsxPowerSupplyANotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1043)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxPowerSupplyANotOk.setStatus('current')
if mibBuilder.loadTexts: clearPsxPowerSupplyANotOk.setDescription('Clears the Major Alarm for PSX Power Supply A problem.')
clearPsxPowerSupplyBNotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1044)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxPowerSupplyBNotOk.setStatus('current')
if mibBuilder.loadTexts: clearPsxPowerSupplyBNotOk.setDescription('Clears the Major Alarm for PSX Power Supply B problem.')
clearPsxFan01NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1045)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxFan01NotOk.setStatus('current')
if mibBuilder.loadTexts: clearPsxFan01NotOk.setDescription('Clears the Major Alarm for PSX Fan 01 problem.')
clearPsxFan02NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1046)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxFan02NotOk.setStatus('current')
if mibBuilder.loadTexts: clearPsxFan02NotOk.setDescription('Clears the Major Alarm for PSX Fan 02 problem.')
clearPsxFan03NotOk = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1047)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxFan03NotOk.setStatus('current')
if mibBuilder.loadTexts: clearPsxFan03NotOk.setDescription('Clears the Major Alarm for PSX Fan 03 problem.')
clearPsxDualBroadbandNotSupported = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1048)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxDualBroadbandNotSupported.setStatus('current')
if mibBuilder.loadTexts: clearPsxDualBroadbandNotSupported.setDescription('Clears the Major Alarm for PSX Dual Broadband protection group not supported.')
evntPsxLineCard01Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1054)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard01Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard01Present.setDescription('Informational Event for PSX line card 01 present.')
evntPsxLineCard02Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1055)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard02Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard02Present.setDescription('Informational Event for PSX line card 02 present.')
evntPsxLineCard03Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1056)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard03Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard03Present.setDescription('Informational Event for PSX line card 03 present.')
evntPsxLineCard04Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1057)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard04Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard04Present.setDescription('Informational Event for PSX line card 04 present.')
evntPsxLineCard05Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1058)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard05Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard05Present.setDescription('Informational Event for PSX line card 05 present.')
evntPsxLineCard06Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1059)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard06Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard06Present.setDescription('Informational Event for PSX line card 06 present.')
evntPsxLineCard07Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1060)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard07Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard07Present.setDescription('Informational Event for PSX line card 07 present.')
evntPsxLineCard08Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1061)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard08Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard08Present.setDescription('Informational Event for PSX line card 08 present.')
evntPsxLineCard09Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1062)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard09Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard09Present.setDescription('Informational Event for PSX line card 09 present.')
evntPsxLineCard10Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1063)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard10Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard10Present.setDescription('Informational Event for PSX line card 10 present.')
evntPsxLineCard11Present = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1064)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPsxLineCard11Present.setStatus('current')
if mibBuilder.loadTexts: evntPsxLineCard11Present.setDescription('Informational Event for PSX line card 11 present.')
setPsxLineCardRelaySwitchToSpare = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1102)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxLineCardRelaySwitchToSpare.setStatus('current')
if mibBuilder.loadTexts: setPsxLineCardRelaySwitchToSpare.setDescription('Major Alarm for PSX Line Card switched to spare.')
setPsxLineCardCableMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1103)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxLineCardCableMissing.setStatus('current')
if mibBuilder.loadTexts: setPsxLineCardCableMissing.setDescription('Critical Alarm for PSX Line Card cable missing.')
setPsxLineCardMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1106)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxLineCardMissing.setStatus('current')
if mibBuilder.loadTexts: setPsxLineCardMissing.setDescription('Major Alarm for PSX Line Card missing.')
setPsxLineCardMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1107)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxLineCardMismatch.setStatus('current')
if mibBuilder.loadTexts: setPsxLineCardMismatch.setDescription('Major Alarm for PSX Line Card type mismatch.')
setPsxLineCardRelayMalfunction = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1108)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPsxLineCardRelayMalfunction.setStatus('current')
if mibBuilder.loadTexts: setPsxLineCardRelayMalfunction.setDescription('Major Alarm for PSX Line Card realy malfunction.')
clearPsxLineCardRelaySwitchToSpare = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1142)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxLineCardRelaySwitchToSpare.setStatus('current')
if mibBuilder.loadTexts: clearPsxLineCardRelaySwitchToSpare.setDescription('Clears the Major Alarm for PSX Line Card switched to spare.')
clearPsxLineCardCableMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1143)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxLineCardCableMissing.setStatus('current')
if mibBuilder.loadTexts: clearPsxLineCardCableMissing.setDescription('Clears the Critical Alarm for PSX Line Card cable missing.')
clearPsxLineCardMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1146)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxLineCardMissing.setStatus('current')
if mibBuilder.loadTexts: clearPsxLineCardMissing.setDescription('Clears the Major Alarm for PSX Line Card missing.')
clearPsxLineCardMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1147)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxLineCardMismatch.setStatus('current')
if mibBuilder.loadTexts: clearPsxLineCardMismatch.setDescription('Clears the Major Alarm for PSX Line Card type mismatch.')
clearPsxLineCardRelayMalfunction = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1148)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPsxLineCardRelayMalfunction.setStatus('current')
if mibBuilder.loadTexts: clearPsxLineCardRelayMalfunction.setDescription('Clears the Major Alarm for PSX Line Card realy malfunction.')
setRtrUserAlarm1 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1201)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setRtrUserAlarm1.setStatus('current')
if mibBuilder.loadTexts: setRtrUserAlarm1.setDescription('Major Alarm for Router User Alarm 1.')
setRtrUserAlarm2 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1202)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setRtrUserAlarm2.setStatus('current')
if mibBuilder.loadTexts: setRtrUserAlarm2.setDescription('Major Alarm for Router User Alarm 2.')
setRtrUserAlarm3 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1203)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setRtrUserAlarm3.setStatus('current')
if mibBuilder.loadTexts: setRtrUserAlarm3.setDescription('Major Alarm for Router User Alarm 3.')
setRtrConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1225)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setRtrConfigError.setStatus('current')
if mibBuilder.loadTexts: setRtrConfigError.setDescription('Major Alarm for Router configuration error.')
evntRtrOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1231)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntRtrOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntRtrOutOfService.setDescription('Informational Event for Router out-of-service.')
clearRtrUserAlarm1 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1241)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearRtrUserAlarm1.setStatus('current')
if mibBuilder.loadTexts: clearRtrUserAlarm1.setDescription('Clears the Major Alarm for Router User Alarm 1.')
clearRtrUserAlarm2 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1242)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearRtrUserAlarm2.setStatus('current')
if mibBuilder.loadTexts: clearRtrUserAlarm2.setDescription('Clears the Major Alarm for Router User Alarm 2.')
clearRtrUserAlarm3 = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1243)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearRtrUserAlarm3.setStatus('current')
if mibBuilder.loadTexts: clearRtrUserAlarm3.setDescription('Clears the Major Alarm for Router User Alarm 3.')
clearRtrConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1265)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearRtrConfigError.setStatus('current')
if mibBuilder.loadTexts: clearRtrConfigError.setDescription('Clears the Major Alarm for Router configuration error.')
evntRtrInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1271)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntRtrInService.setStatus('current')
if mibBuilder.loadTexts: evntRtrInService.setDescription('Informational Event for Router in-service.')
setSts1RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1301)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: setSts1RcvFarEndLOF.setDescription('Major Alarm for STS1 receiving far end loss of frame (receiving yellow alarm).')
setSts1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1302)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndSendLOF.setDescription('Major Alarm for STS1 near end sending loss of frame (transmitting yellow alarm).')
evntSts1RcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1303)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1RcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntSts1RcvingAIS.setDescription('Informational Event for STS1 far end sending alarm indication signal.')
setSts1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1304)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndSendingAIS.setDescription('Major Alarm for STS1 near end sending alarm indication signal.')
setSts1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1305)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndLOF.setDescription('Major Alarm for STS1 near end loss of frame (red alarm).')
evntSts1NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1307)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntSts1NearEndLooped.setDescription('Informational Event for STS1 near end looped.')
setSts1NearEndLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1308)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndLOP.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndLOP.setDescription('Major Alarm for STS1 near end loss of pointer.')
setSts1NearEndOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1309)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndOOF.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndOOF.setDescription('Major Alarm for STS1 near end out-of-frame.')
setSts1NearEndAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1310)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndAIS.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndAIS.setDescription('Major Alarm for STS1 alarm indication signal detected.')
setSts1OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1312)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: setSts1OtherLineStatus.setDescription('Major Alarm for STS1 other line status.')
setSts1NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1313)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndUnavailableSig.setDescription('Major Alarm for STS1 near end loss of signal.')
evntSts1CarrierEquipOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1314)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1CarrierEquipOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntSts1CarrierEquipOutOfService.setDescription('Informational event for STS1 carrier equipment out-of-service.')
setSts1TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1316)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: setSts1TxRxClockFailure.setDescription('Major Alarm for STS1 Transmit/Receive clock failure.')
setSts1NearEndLOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1317)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndLOMF.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndLOMF.setDescription('Major Alarm for STS1 loss of multi-frame indication.')
setSts1NearEndTraceError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1318)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1NearEndTraceError.setStatus('current')
if mibBuilder.loadTexts: setSts1NearEndTraceError.setDescription('Major Alarm for error received in path trace.')
setSts1LIUDigitalLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1320)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1LIUDigitalLOS.setStatus('current')
if mibBuilder.loadTexts: setSts1LIUDigitalLOS.setDescription('Major Alarm for STS1 LIU digital loss of signal.')
setSts1LIUAnalogLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1321)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1LIUAnalogLOS.setStatus('current')
if mibBuilder.loadTexts: setSts1LIUAnalogLOS.setDescription('Major Alarm for STS1 LIU analog loss of signal.')
setSts1LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1322)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: setSts1LIUExcessZeros.setDescription('Major Alarm for STS1 LIU excessive zeros.')
setSts1LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1323)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: setSts1LIUCodingViolation.setDescription('Major Alarm for STS1 LIU line coding violation.')
setSts1LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1324)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: setSts1LIUPrbsError.setDescription('Major Alarm for STS1 LIU PRBS error.')
setSts1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1325)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setSts1ConfigError.setStatus('current')
if mibBuilder.loadTexts: setSts1ConfigError.setDescription('Major Alarm for STS1 configuration error.')
evntSts1InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1330)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1InTest.setStatus('current')
if mibBuilder.loadTexts: evntSts1InTest.setDescription('Informational event for STS1 in test.')
evntSts1OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1331)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntSts1OutOfService.setDescription('Informational event for STS1 out-of-service.')
clearSts1RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1341)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearSts1RcvFarEndLOF.setDescription('Clears the Major Alarm for STS1 receiving far end loss of frame (receiving yellow alarm).')
clearSts1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1342)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndSendLOF.setDescription('Clears the Major Alarm for STS1 near end sending loss of frame (transmitting yellow alarm).')
evntSts1StoppedRcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1343)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1StoppedRcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntSts1StoppedRcvingAIS.setDescription('Informational Event when STS1 far end stops sending alarm indication signal.')
clearSts1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1344)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndSendingAIS.setDescription('Clears the Major Alarm for STS1 near end sending alarm indication signal.')
clearSts1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1345)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndLOF.setDescription('Clears the Major Alarm for STS1 near end loss of frame (red alarm).')
evntSts1NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1347)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntSts1NearEndLoopOff.setDescription('Informational Event for STS1 near end loop off.')
clearSts1NearEndLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1348)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndLOP.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndLOP.setDescription('Clears the Major Alarm for STS1 near end loss of pointer.')
clearSts1NearEndOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1349)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndOOF.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndOOF.setDescription('Clears the Major Alarm for STS1 near end out-of-frame.')
clearSts1NearEndAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1350)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndAIS.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndAIS.setDescription('Clears the Major Alarm for STS1 alarm indication signal detected.')
clearSts1OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1352)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: clearSts1OtherLineStatus.setDescription('Clears the Major Alarm for STS1 other line status.')
clearSts1NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1353)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndUnavailableSig.setDescription('Clears the Major Alarm for STS1 near end loss of signal.')
evntSts1CarrierEquipInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1354)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1CarrierEquipInService.setStatus('current')
if mibBuilder.loadTexts: evntSts1CarrierEquipInService.setDescription('Informational event for STS1 carrier equipment in-service.')
clearSts1TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1356)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: clearSts1TxRxClockFailure.setDescription('Clears the Major Alarm for STS1 Transmit/Receive clock failure.')
clearSts1NearEndLOMF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1357)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndLOMF.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndLOMF.setDescription('Clears the Major Alarm for STS1 loss of multi-frame indication.')
clearSts1NearEndTraceError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1358)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1NearEndTraceError.setStatus('current')
if mibBuilder.loadTexts: clearSts1NearEndTraceError.setDescription('Clears the Major Alarm for error received in path trace.')
clearSts1LIUDigitalLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1360)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1LIUDigitalLOS.setStatus('current')
if mibBuilder.loadTexts: clearSts1LIUDigitalLOS.setDescription('Clears the Major Alarm for STS1 LIU digital loss of signal.')
clearSts1LIUAnalogLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1361)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1LIUAnalogLOS.setStatus('current')
if mibBuilder.loadTexts: clearSts1LIUAnalogLOS.setDescription('Clears the Major Alarm for STS1 LIU analog loss of signal.')
clearSts1LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1362)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: clearSts1LIUExcessZeros.setDescription('Clears the Major Alarm for STS1 LIU excessive zeros.')
clearSts1LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1363)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: clearSts1LIUCodingViolation.setDescription('Clears the Major Alarm for STS1 LIU line coding violation.')
clearSts1LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1364)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: clearSts1LIUPrbsError.setDescription('Clears the Major Alarm for STS1 LIU PRBS error.')
clearSts1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1365)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearSts1ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearSts1ConfigError.setDescription('Clears the Major Alarm for STS1 configuration error.')
evntSts1TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1370)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1TestOff.setStatus('current')
if mibBuilder.loadTexts: evntSts1TestOff.setDescription('Informational event for STS1 test off.')
evntSts1InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1371)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntSts1InService.setStatus('current')
if mibBuilder.loadTexts: evntSts1InService.setDescription('Informational event for STS1 in-service.')
evntHt3RcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1403)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3RcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntHt3RcvingAIS.setDescription('Informational Event for Hybrid DS3 far end sending alarm indication signal.')
setHt3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1404)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndSendingAIS.setDescription('Major Alarm for Hybrid DS3 near end sending alarm indication signal.')
setHt3NearEndOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1405)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndOOF.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndOOF.setDescription('Major Alarm for Hybrid DS3 near end out-of-frame.')
setHt3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1406)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndLossOfSignal.setDescription('Major Alarm for Hybrid DS3 near end loss of signal.')
evntHt3NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1407)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntHt3NearEndLooped.setDescription('Informational Event for Hybrid DS3 near end looped.')
setHt3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1408)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndLOF.setDescription('Major Alarm for Hybrid DS3 loss of frame (red alarm).')
setHt3FarEndRcvFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1409)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3FarEndRcvFailure.setStatus('current')
if mibBuilder.loadTexts: setHt3FarEndRcvFailure.setDescription('Major Alarm for Hybrid DS3 far end received failure error.')
setHt3NearEndLCVError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1411)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndLCVError.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndLCVError.setDescription('Major Alarm for Hybrid DS3 near end line code violation error.')
setHt3NearEndFERRError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1412)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndFERRError.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndFERRError.setDescription('Major Alarm for Hybrid DS3 near end framing error.')
setHt3NearEndExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1413)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3NearEndExcessZeros.setStatus('current')
if mibBuilder.loadTexts: setHt3NearEndExcessZeros.setDescription('Major Alarm for Hybrid DS3 near end excessive zeros.')
evntHt3CarrierEquipOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1414)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3CarrierEquipOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntHt3CarrierEquipOutOfService.setDescription('Informational Event for Hybrid DS3 carrier equipment out-of-service.')
setHt3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1417)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: setHt3FarEndBlockError.setDescription('Major Alarm for Hybrid DS3 far end block error.')
setHt3PbitCbitParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1418)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3PbitCbitParityError.setStatus('current')
if mibBuilder.loadTexts: setHt3PbitCbitParityError.setDescription('Major Alarm for Hybrid DS3 P-bit or C-bit parity error.')
setHt3ChangeInFrameAlignment = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1419)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3ChangeInFrameAlignment.setStatus('current')
if mibBuilder.loadTexts: setHt3ChangeInFrameAlignment.setDescription('Major Alarm for Hybrid DS3 CFA Indication.')
setHt3LIUDigitalLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1420)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3LIUDigitalLOS.setStatus('current')
if mibBuilder.loadTexts: setHt3LIUDigitalLOS.setDescription('Major Alarm for Hybrid DS3 LIU digital loss of signal.')
setHt3LIUAnalogLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1421)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3LIUAnalogLOS.setStatus('current')
if mibBuilder.loadTexts: setHt3LIUAnalogLOS.setDescription('Major Alarm for Hybrid DS3 LIU analog loss of signal.')
setHt3LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1422)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: setHt3LIUExcessZeros.setDescription('Major Alarm for Hybrid DS3 LIU excessive zeros.')
setHt3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1423)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: setHt3LIUCodingViolation.setDescription('Major Alarm for Hybrid DS3 LIU line coding violation.')
setHt3LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1424)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: setHt3LIUPrbsError.setDescription('Major Alarm for Hybrid DS3 LIU PRBS Error.')
setHt3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1425)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setHt3ConfigError.setStatus('current')
if mibBuilder.loadTexts: setHt3ConfigError.setDescription('Major Alarm for Hybrid DS3 configuration error.')
evntHt3InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1430)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3InTest.setStatus('current')
if mibBuilder.loadTexts: evntHt3InTest.setDescription('Informational Event for Hybrid DS3 in test.')
evntHt3OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1431)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntHt3OutOfService.setDescription('Informational Event for Hybrid DS3 out-of-service.')
evntHt3StoppedRcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1443)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3StoppedRcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntHt3StoppedRcvingAIS.setDescription('Informational Event when Hybrid DS3 far end stops sending alarm indication signal.')
clearHt3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1444)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndSendingAIS.setDescription('Clears the Major Alarm for Hybrid DS3 near end sending alarm indication signal.')
clearHt3NearEndOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1445)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndOOF.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndOOF.setDescription('Clears the Major Alarm for Hybrid DS3 near end out-of-frame.')
clearHt3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1446)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndLossOfSignal.setDescription('Clears the Major Alarm for Hybrid DS3 near end loss of signal.')
evntHt3NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1447)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntHt3NearEndLoopOff.setDescription('Informational Event for Hybrid DS3 near end loop off.')
clearHt3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1448)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndLOF.setDescription('Clears the Major Alarm for Hybrid DS3 loss of frame (red alarm).')
clearHt3FarEndRcvFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1449)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3FarEndRcvFailure.setStatus('current')
if mibBuilder.loadTexts: clearHt3FarEndRcvFailure.setDescription('Clears the Major Alarm for Hybrid DS3 far end received failure error.')
clearHt3NearEndLCVError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1451)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndLCVError.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndLCVError.setDescription('Clears the Major Alarm for Hybrid DS3 near end line code violation error.')
clearHt3NearEndFERRError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1452)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndFERRError.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndFERRError.setDescription('Clears the Major Alarm for Hybrid DS3 near end framing error.')
clearHt3NearEndExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1453)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3NearEndExcessZeros.setStatus('current')
if mibBuilder.loadTexts: clearHt3NearEndExcessZeros.setDescription('Clears the Major Alarm for Hybrid DS3 near end excessive zeros.')
evntHt3CarrierEquipInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1454)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3CarrierEquipInService.setStatus('current')
if mibBuilder.loadTexts: evntHt3CarrierEquipInService.setDescription('Informational Event for Hybrid DS3 carrier equipment in-service.')
clearHt3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1457)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: clearHt3FarEndBlockError.setDescription('Clears the Major Alarm for Hybrid DS3 far end block error.')
clearHt3PbitCbitParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1458)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3PbitCbitParityError.setStatus('current')
if mibBuilder.loadTexts: clearHt3PbitCbitParityError.setDescription('Clears the Major Alarm for Hybrid DS3 P-bit or C-bit parity error.')
clearHt3ChangeInFrameAlignment = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1459)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3ChangeInFrameAlignment.setStatus('current')
if mibBuilder.loadTexts: clearHt3ChangeInFrameAlignment.setDescription('Clears the Major Alarm for Hybrid DS3 CFA Indication.')
clearHt3LIUDigitalLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1460)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3LIUDigitalLOS.setStatus('current')
if mibBuilder.loadTexts: clearHt3LIUDigitalLOS.setDescription('Clears the Major Alarm for Hybrid DS3 LIU digital loss of signal.')
clearHt3LIUAnalogLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1461)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3LIUAnalogLOS.setStatus('current')
if mibBuilder.loadTexts: clearHt3LIUAnalogLOS.setDescription('Clears the Major Alarm for Hybrid DS3 LIU analog loss of signal.')
clearHt3LIUExcessZeros = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1462)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3LIUExcessZeros.setStatus('current')
if mibBuilder.loadTexts: clearHt3LIUExcessZeros.setDescription('Clears the Major Alarm for Hybrid DS3 LIU excessive zeros.')
clearHt3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1463)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: clearHt3LIUCodingViolation.setDescription('Clears the Major Alarm for Hybrid DS3 LIU line coding violation.')
clearHt3LIUPrbsError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1464)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3LIUPrbsError.setStatus('current')
if mibBuilder.loadTexts: clearHt3LIUPrbsError.setDescription('Clears the Major Alarm for Hybrid DS3 LIU PRBS Error.')
clearHt3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1465)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearHt3ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearHt3ConfigError.setDescription('Clears the Major Alarm for Hybrid DS3 configuration error.')
evntHt3TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1470)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3TestOff.setStatus('current')
if mibBuilder.loadTexts: evntHt3TestOff.setDescription('Informational Event for Hybrid DS3 test off.')
evntHt3InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1471)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntHt3InService.setStatus('current')
if mibBuilder.loadTexts: evntHt3InService.setDescription('Informational Event for Hybrid DS3 in-service.')
evntGr303OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1531)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntGr303OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntGr303OutOfService.setDescription('Informational Event for GR-303 out-of-service.')
evntGr303InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1571)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntGr303InService.setStatus('current')
if mibBuilder.loadTexts: evntGr303InService.setDescription('Informational Event for GR-303 in-service.')
setXlinkCableMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1606)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkCableMismatch.setStatus('current')
if mibBuilder.loadTexts: setXlinkCableMismatch.setDescription('Major Alarm for X-Link Cable/Configuration Nest ID mismatch.')
setXlinkSerializerError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1615)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkSerializerError.setStatus('current')
if mibBuilder.loadTexts: setXlinkSerializerError.setDescription('Major Alarm for X-Link serializer error.')
setXlinkFramerError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1616)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkFramerError.setStatus('current')
if mibBuilder.loadTexts: setXlinkFramerError.setDescription('Major Alarm for X-Link Framer error.')
setXlinkBertError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1617)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkBertError.setStatus('current')
if mibBuilder.loadTexts: setXlinkBertError.setDescription('Major Alarm for X-Link BERT error.')
setXlinkClockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1618)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkClockError.setStatus('current')
if mibBuilder.loadTexts: setXlinkClockError.setDescription('Major Alarm for X-Link clock error.')
setXlinkInUseError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1620)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkInUseError.setStatus('current')
if mibBuilder.loadTexts: setXlinkInUseError.setDescription('Major Alarm for X-Link in use error.')
setXlinkCrcError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1621)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setXlinkCrcError.setStatus('current')
if mibBuilder.loadTexts: setXlinkCrcError.setDescription('Major Alarm for X-Link CRC error.')
clearXlinkCableMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1646)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkCableMismatch.setStatus('current')
if mibBuilder.loadTexts: clearXlinkCableMismatch.setDescription('Clears the Major Alarm for X-Link Cable/Configuration Nest ID mismatch.')
clearXlinkSerializerError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1655)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkSerializerError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkSerializerError.setDescription('Clears the Major Alarm for X-Link serializer error.')
clearXlinkFramerError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1656)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkFramerError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkFramerError.setDescription('Clears the Major Alarm for X-Link Framer error.')
clearXlinkBertError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1657)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkBertError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkBertError.setDescription('Clears the Major Alarm for X-Link BERT error.')
clearXlinkClockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1658)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkClockError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkClockError.setDescription('Clears the Major Alarm for X-Link clock error.')
clearXlinkInUseError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1660)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkInUseError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkInUseError.setDescription('Clears the Major Alarm for X-Link in use error.')
clearXlinkCrcError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1661)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearXlinkCrcError.setStatus('current')
if mibBuilder.loadTexts: clearXlinkCrcError.setDescription('Clears the Major Alarm for X-Link CRC error.')
setNestMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1701)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestMismatch.setStatus('current')
if mibBuilder.loadTexts: setNestMismatch.setDescription('Critical Alarm for nest mismatch.')
setNestMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1702)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestMissing.setStatus('current')
if mibBuilder.loadTexts: setNestMissing.setDescription('Critical Alarm for nest missing.')
setNestOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1705)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestOffline.setStatus('current')
if mibBuilder.loadTexts: setNestOffline.setDescription('Critical Alarm for nest offline.')
setNestCriticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1706)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestCriticalAlarm.setStatus('current')
if mibBuilder.loadTexts: setNestCriticalAlarm.setDescription('Summary Critical Alarm for nest.')
setNestMajorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1707)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestMajorAlarm.setStatus('current')
if mibBuilder.loadTexts: setNestMajorAlarm.setDescription('Summary Major Alarm for nest.')
setNestMinorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1708)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestMinorAlarm.setStatus('current')
if mibBuilder.loadTexts: setNestMinorAlarm.setDescription('Summary Minor Alarm for nest.')
setNestSwMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1709)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNestSwMismatch.setStatus('current')
if mibBuilder.loadTexts: setNestSwMismatch.setDescription('Minor Alarm for unit firmware image mismatch.')
clearNestMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1741)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestMismatch.setStatus('current')
if mibBuilder.loadTexts: clearNestMismatch.setDescription('Clears the Critical Alarm for nest mismatch.')
clearNestMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1742)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestMissing.setStatus('current')
if mibBuilder.loadTexts: clearNestMissing.setDescription('Clears the Critical Alarm for nest missing.')
clearNestOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1745)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestOffline.setStatus('current')
if mibBuilder.loadTexts: clearNestOffline.setDescription('Clears the Critical Alarm for nest offline.')
clearNestCriticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1746)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestCriticalAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNestCriticalAlarm.setDescription('Clears the Summary Critical Alarm for nest.')
clearNestMajorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1747)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestMajorAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNestMajorAlarm.setDescription('Clears the Summary Major Alarm for nest.')
clearNestMinorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1748)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestMinorAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNestMinorAlarm.setDescription('Clears the Summary Minor Alarm for nest.')
clearNestSwMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1749)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNestSwMismatch.setStatus('current')
if mibBuilder.loadTexts: clearNestSwMismatch.setDescription('Clears the Minor Alarm for unit firmware image mismatch.')
setNodeCriticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1801)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNodeCriticalAlarm.setStatus('current')
if mibBuilder.loadTexts: setNodeCriticalAlarm.setDescription('Critical Alarm for the node.')
setNodeMajorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1802)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNodeMajorAlarm.setStatus('current')
if mibBuilder.loadTexts: setNodeMajorAlarm.setDescription('Major Alarm for the node.')
setNodeMinorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1803)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setNodeMinorAlarm.setStatus('current')
if mibBuilder.loadTexts: setNodeMinorAlarm.setDescription('Minor Alarm for the node.')
clearNodeCriticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1841)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNodeCriticalAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNodeCriticalAlarm.setDescription('Clears the Critical Alarm for the node.')
clearNodeMajorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1842)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNodeMajorAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNodeMajorAlarm.setDescription('Clears the Major Alarm for the node.')
clearNodeMinorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1843)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearNodeMinorAlarm.setStatus('current')
if mibBuilder.loadTexts: clearNodeMinorAlarm.setDescription('Clears the Minor Alarm for the node.')
setDs0DpPortLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1901)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDs0DpPortLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setDs0DpPortLossOfSignal.setDescription('Major Alarm for DS0-DP port loss of signal.')
setDs0DpPortBPV = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1902)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDs0DpPortBPV.setStatus('current')
if mibBuilder.loadTexts: setDs0DpPortBPV.setDescription('Major Alarm for DS0-DP port bi-polar violations.')
setDs0DpPortConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1925)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDs0DpPortConfigError.setStatus('current')
if mibBuilder.loadTexts: setDs0DpPortConfigError.setDescription('Major Alarm for DS0-DP port configuration error.')
evntDs0DpPortInTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1930)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDs0DpPortInTest.setStatus('current')
if mibBuilder.loadTexts: evntDs0DpPortInTest.setDescription('Informational Event for DS0-DP port in test.')
evntDs0DpPortOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1931)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDs0DpPortOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntDs0DpPortOutOfService.setDescription('Informational Event for DS0-DP port out-of-service.')
clearDs0DpPortLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1941)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDs0DpPortLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearDs0DpPortLossOfSignal.setDescription('Clears the Major Alarm for DS0-DP port loss of signal.')
clearDs0DpPortBPV = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1942)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDs0DpPortBPV.setStatus('current')
if mibBuilder.loadTexts: clearDs0DpPortBPV.setDescription('Clears the Major Alarm for DS0-DP port bi-polar violations.')
clearDs0DpPortConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1965)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDs0DpPortConfigError.setStatus('current')
if mibBuilder.loadTexts: clearDs0DpPortConfigError.setDescription('Clears the Major Alarm for DS0-DP port configuration error.')
evntDs0DpPortTestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1970)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDs0DpPortTestOff.setStatus('current')
if mibBuilder.loadTexts: evntDs0DpPortTestOff.setDescription('Informational Event for DS0-DP port test off.')
evntDs0DpPortInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 1971)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntDs0DpPortInService.setStatus('current')
if mibBuilder.loadTexts: evntDs0DpPortInService.setDescription('Informational Event for DS0-DP port in-service.')
setDs0DpBitsLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2001)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDs0DpBitsLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setDs0DpBitsLossOfSignal.setDescription('Major Alarm for DS0-DP bits loss of signal.')
setDs0DpBitsBPV = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2002)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setDs0DpBitsBPV.setStatus('current')
if mibBuilder.loadTexts: setDs0DpBitsBPV.setDescription('Major Alarm for DS0-DP bits bi-polar violations.')
clearDs0DpBitsLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2041)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDs0DpBitsLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearDs0DpBitsLossOfSignal.setDescription('Clears the Major Alarm for DS0-DP bits loss of signal.')
clearDs0DpBitsBPV = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2042)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearDs0DpBitsBPV.setStatus('current')
if mibBuilder.loadTexts: clearDs0DpBitsBPV.setDescription('Clears the Major Alarm for DS0-DP bits bi-polar violations.')
setOpticalT1E1RedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2201)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1RedAlarm.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1RedAlarm.setDescription('Major Alarm for Optical T1/E1 port in Red Alarm state.')
setOpticalT1E1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2202)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1NearEndSendLOF.setDescription('Major Alarm for Optical T1/E1 port near end sending loss of frame (transmitting yellow alarm).')
evntOpticalT1E1RcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2203)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1RcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1RcvingAIS.setDescription('Informational event for Optical T1/E1 port far end sending alarm indication signal.')
setOpticalT1E1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2204)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1NearEndSendingAIS.setDescription('Major Alarm for Optical T1/E1 port near end sending alarm indication signal.')
setOpticalT1E1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2205)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1NearEndLOF.setDescription('Major Alarm for Optical T1/E1 port near end loss of frame (red alarm).')
evntOpticalT1E1NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2207)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1NearEndLooped.setDescription('Informational event for Optical T1/E1 port in near end loop.')
setOpticalT1E1LossOfPointer = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2208)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1LossOfPointer.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1LossOfPointer.setDescription('Major Alarm for Optical T1/E1 port Loss of Pointer.')
setOpticalT1E1OutOfFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2209)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1OutOfFrame.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1OutOfFrame.setDescription('Major Alarm for Optical T1/E1 port Out of Frame.')
setOpticalT1E1DetectedAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2210)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1DetectedAIS.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1DetectedAIS.setDescription('Major Alarm for Optical T1/E1 port detecting Alarm Indication Signal.')
setOpticalT1E1NearEndLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2213)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1NearEndLOS.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1NearEndLOS.setDescription('Major Alarm for Optical T1/E1 port in near end Loss of Signal.')
evntOpticalE1NationalSa4TxRxSame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2216)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalE1NationalSa4TxRxSame.setStatus('current')
if mibBuilder.loadTexts: evntOpticalE1NationalSa4TxRxSame.setDescription('Informational Event for Optical E1 Sa4 National Bit Send/Receive matching value.')
setOpticalT1E1RcvFarEndYellow = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2217)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1RcvFarEndYellow.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1RcvFarEndYellow.setDescription('Major Alarm for Optical T1/E1 port receiving yellow alarm.')
setOpticalT1E1NearEndSEF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2218)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1NearEndSEF.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1NearEndSEF.setDescription('Major Alarm for Optical T1/E1 port near end severely errored frames.')
setOpticalT1E1Tug2LOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2219)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2LOP.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2LOP.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 loss of pointer.')
setOpticalT1E1Tug2RDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2220)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2RDI.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2RDI.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 Remote Defect Indication.')
setOpticalT1E1Tug2RFI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2221)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2RFI.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2RFI.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 Remote Failure Indication.')
setOpticalT1E1Tug2AIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2222)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2AIS.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2AIS.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 Alarm Indication Signal.')
setOpticalT1E1Tug2PSLM = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2223)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2PSLM.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2PSLM.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 Path Signal Label Mismatch.')
setOpticalT1E1Tug2PSLU = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2224)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1Tug2PSLU.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1Tug2PSLU.setDescription('Major Alarm for Optical Tributary Unit Group Level 2 Path Signal Label Unstable.')
setOpticalT1E1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2225)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setOpticalT1E1ConfigError.setStatus('current')
if mibBuilder.loadTexts: setOpticalT1E1ConfigError.setDescription('Major Alarm for Optical T1/E1 port Configuration Error.')
evntOpticalT1E1InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2230)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1InTest.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1InTest.setDescription('Informational event for Optical T1/E1 port in test.')
evntOpticalT1E1OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2231)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1OutOfService.setDescription('Informational event for Optical T1/E1 port out of service.')
clearOpticalT1E1RedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2241)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1RedAlarm.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1RedAlarm.setDescription('Clears the Major Alarm for Optical T1/E1 port in Red Alarm state.')
clearOpticalT1E1NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2242)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSendLOF.setDescription('Clears the Major Alarm for Optical T1/E1 port near end sending loss of frame.')
evntOpticalT1E1StoppedRcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2243)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1StoppedRcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1StoppedRcvingAIS.setDescription('Informational event when Optical T1/E1 port far end stops sending alarm indication signal.')
clearOpticalT1E1NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2244)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSendingAIS.setDescription('Clears the Major Alarm for Optical T1/E1 port near end sending alarm indication signal.')
clearOpticalT1E1NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2245)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1NearEndLOF.setDescription('Clears the Major Alarm for Optical T1/E1 port near end loss of frame.')
evntOpticalT1E1NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2247)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1NearEndLoopOff.setDescription('Informational event for Optical T1/E1 port near end loop off.')
clearOpticalT1E1LossOfPointer = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2248)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1LossOfPointer.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1LossOfPointer.setDescription('Clears the Major Alarm for Optical T1/E1 port loss of pointer.')
clearOpticalT1E1OutOfFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2249)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1OutOfFrame.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1OutOfFrame.setDescription('Clears the Major Alarm for Optical T1/E1 port out of frame.')
clearOpticalT1E1DetectedAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2250)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1DetectedAIS.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1DetectedAIS.setDescription('Clears the Major Alarm for Optical T1/E1 port detected Alarm Indication Signal.')
clearOpticalT1E1NearEndLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2253)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1NearEndLOS.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1NearEndLOS.setDescription('Clears the Major Alarm for Optical T1/E1 port near end loss of signal.')
evntOpticalE1NationalSa4TxRxDiff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2256)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalE1NationalSa4TxRxDiff.setStatus('current')
if mibBuilder.loadTexts: evntOpticalE1NationalSa4TxRxDiff.setDescription('Informational Event for Optical E1 Sa4 National Bit Send/Receive different value.')
clearOpticalT1E1RcvFarEndYellow = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2257)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1RcvFarEndYellow.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1RcvFarEndYellow.setDescription('Clears the Major Alarm for Optical T1/E1 port receiving yellow alarm.')
clearOpticalT1E1NearEndSEF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2258)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSEF.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1NearEndSEF.setDescription('Clears the Major Alarm for Optical T1/E1 port near end severely errored frames.')
clearOpticalT1E1Tug2LOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2259)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2LOP.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2LOP.setDescription('Clears the Major Alarm for TUG 2 loss of pointer.')
clearOpticalT1E1Tug2RDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2260)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2RDI.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2RDI.setDescription('Clears the Major Alarm for TUG 2 remote defect indication.')
clearOpticalT1E1Tug2RFI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2261)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2RFI.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2RFI.setDescription('Clears the Major Alarm for TUG 2 remote failure indication.')
clearOpticalT1E1Tug2AIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2262)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2AIS.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2AIS.setDescription('Clears the Major Alarm for TUG 2 Alarm Indication Signal.')
clearOpticalT1E1Tug2PSLM = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2263)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2PSLM.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2PSLM.setDescription('Clears the Major Alarm for TUG 2 Path Signal Label Mismatch.')
clearOpticalT1E1Tug2PSLU = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2264)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1Tug2PSLU.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1Tug2PSLU.setDescription('Clears the Major Alarm for TUG 2 Path Signal Label Unstable.')
clearOpticalT1E1ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2265)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearOpticalT1E1ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearOpticalT1E1ConfigError.setDescription('Clears the Major Alarm for Optical T1/E1 port Config Error.')
evntOpticalT1E1TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2270)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1TestOff.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1TestOff.setDescription('Informational event for Optical T1/E1 port out of test.')
evntOpticalT1E1InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2271)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntOpticalT1E1InService.setStatus('current')
if mibBuilder.loadTexts: evntOpticalT1E1InService.setDescription('Informational event for Optical T1/E1 port in service.')
setVtNearEndLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2301)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVtNearEndLOP.setStatus('current')
if mibBuilder.loadTexts: setVtNearEndLOP.setDescription('Major Alarm for Optical Virtual Tributary near end loss of pointer.')
setVtNearEndAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2302)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVtNearEndAIS.setStatus('current')
if mibBuilder.loadTexts: setVtNearEndAIS.setDescription('Major Alarm for Optical Virtual Tributary near end alarm indication signal.')
setPayloadPathLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2303)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPayloadPathLOP.setStatus('current')
if mibBuilder.loadTexts: setPayloadPathLOP.setDescription('Major Alarm for Optical Payload loss of pointer.')
setPayloadPathAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2304)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPayloadPathAIS.setStatus('current')
if mibBuilder.loadTexts: setPayloadPathAIS.setDescription('Major Alarm for Optical Payload alarm indication signal.')
setPayloadPathRDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2305)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setPayloadPathRDI.setStatus('current')
if mibBuilder.loadTexts: setPayloadPathRDI.setDescription('Major Alarm for Optical Payload remote defect indication.')
evntPayloadNearEndLineLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2307)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadNearEndLineLooped.setStatus('current')
if mibBuilder.loadTexts: evntPayloadNearEndLineLooped.setDescription('Informational event for Optical Payload in near end line loop.')
evntPayloadNearEndLocalLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2308)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadNearEndLocalLooped.setStatus('current')
if mibBuilder.loadTexts: evntPayloadNearEndLocalLooped.setDescription('Informational event for Optical Payload in near end local loop.')
evntPayloadInTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2330)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadInTest.setStatus('current')
if mibBuilder.loadTexts: evntPayloadInTest.setDescription('Informational event for Optical Payload in test.')
clearVtNearEndLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2341)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVtNearEndLOP.setStatus('current')
if mibBuilder.loadTexts: clearVtNearEndLOP.setDescription('Clears the Major Alarm for Optical Virtual Tributary near end loss of pointer.')
clearVtNearEndAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2342)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVtNearEndAIS.setStatus('current')
if mibBuilder.loadTexts: clearVtNearEndAIS.setDescription('Clears the Major Alarm for Optical Virtual Tributary near end alarm indication signal.')
clearPayloadPathLOP = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2343)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPayloadPathLOP.setStatus('current')
if mibBuilder.loadTexts: clearPayloadPathLOP.setDescription('Clears the Major Alarm for Optical Payload loss of pointer.')
clearPayloadPathAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2344)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPayloadPathAIS.setStatus('current')
if mibBuilder.loadTexts: clearPayloadPathAIS.setDescription('Clears the Major Alarm for Optical Payload alarm indication signal.')
clearPayloadPathRDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2345)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearPayloadPathRDI.setStatus('current')
if mibBuilder.loadTexts: clearPayloadPathRDI.setDescription('Clears the Major Alarm for Optical Payload remote defect indication.')
evntPayloadNearEndLineLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2347)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadNearEndLineLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntPayloadNearEndLineLoopOff.setDescription('Informational event for Optical Payload in near end line loop off.')
evntPayloadNearEndLocalLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2348)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadNearEndLocalLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntPayloadNearEndLocalLoopOff.setDescription('Informational event for Optical Payload in near end local loop off.')
evntPayloadTestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2370)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntPayloadTestOff.setStatus('current')
if mibBuilder.loadTexts: evntPayloadTestOff.setDescription('Informational event for Optical Payload out of test.')
setTransOverheadAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2401)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadAIS.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadAIS.setDescription('Major Alarm for Optical Transport Overhead alarm indication signal.')
setTransOverheadRDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2402)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadRDI.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadRDI.setDescription('Major Alarm for Optical Transport Overhead remote defect indication.')
setTransOverheadOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2403)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadOOF.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadOOF.setDescription('Major Alarm for Optical Transport Overhead out of frame.')
setTransOverheadLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2404)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadLOF.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadLOF.setDescription('Major Alarm for Optical Transport Overhead loss of frame.')
setTransOverheadLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2405)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadLOS.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadLOS.setDescription('Major Alarm for Optical Transport Overhead loss of signal.')
evntTransOverheadNearEndSysLineLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2407)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndSysLineLooped.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndSysLineLooped.setDescription('Informational event for Optical Transport Overhead in near end system line loop.')
evntTransOverheadNearEndPathLineLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2408)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndPathLineLooped.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndPathLineLooped.setDescription('Informational event for Optical Transport Overhead in near end path line loop.')
evntTransOverheadNearEndLocalLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2409)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndLocalLooped.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndLocalLooped.setDescription('Informational event for Optical Transport Overhead in near end local loop.')
setTransOverheadSfDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2413)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadSfDetect.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadSfDetect.setDescription('Major Alarm for Optical Transport Overhead signal failure detected.')
setTransOverheadSdDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2414)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadSdDetect.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadSdDetect.setDescription('Major Alarm for Optical Transport Overhead signal degrade detected.')
setTransOverheadDetectLaserOffDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2415)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTransOverheadDetectLaserOffDetect.setStatus('current')
if mibBuilder.loadTexts: setTransOverheadDetectLaserOffDetect.setDescription('Major Alarm for Optical Transport Overhead signal laser off detected.')
evntTransOverheadInTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2430)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadInTest.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadInTest.setDescription('Informational event for Optical Transport Overhead in test.')
clearTransOverheadAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2441)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadAIS.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadAIS.setDescription('Clears the Major Alarm for Optical Transport Overhead alarm indication signal.')
clearTransOverheadRDI = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2442)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadRDI.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadRDI.setDescription('Clears the Major Alarm for Optical Transport Overhead remote defect indication.')
clearTransOverheadOOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2443)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadOOF.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadOOF.setDescription('Clears the Major Alarm for Optical Transport Overhead out of frame.')
clearTransOverheadLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2444)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadLOF.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadLOF.setDescription('Clears the Major Alarm for Optical Transport Overhead loss of frame.')
clearTransOverheadLOS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2445)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadLOS.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadLOS.setDescription('Clears the Major Alarm for Optical Transport Overhead loss of signal.')
evntTransOverheadNearEndSysLineLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2447)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndSysLineLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndSysLineLoopOff.setDescription('Informational event for Optical Transport Overhead near end system line loop off.')
evntTransOverheadNearEndPathLineLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2448)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndPathLineLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndPathLineLoopOff.setDescription('Informational event for Optical Transport Overhead near end path line loop off.')
evntTransOverheadNearEndLocalLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2449)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadNearEndLocalLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadNearEndLocalLoopOff.setDescription('Informational event for Optical Transport Overhead near end local loop off.')
clearTransOverheadSfDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2453)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadSfDetect.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadSfDetect.setDescription('Clears the Major Alarm for Optical Transport Overhead signal failure detected.')
clearTransOverheadSdDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2454)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadSdDetect.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadSdDetect.setDescription('Clears the Major Alarm for Optical Transport Overhead signal degrade detected.')
clearTransOverheadLaserOffDetect = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2455)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTransOverheadLaserOffDetect.setStatus('current')
if mibBuilder.loadTexts: clearTransOverheadLaserOffDetect.setDescription('Clears the Major Alarm for Optical Transport Overhead signal Laser Off detected.')
evntTransOverheadTestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2470)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntTransOverheadTestOff.setStatus('current')
if mibBuilder.loadTexts: evntTransOverheadTestOff.setDescription('Informational event for Optical Transport Overhead out of test.')
setE3RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2501)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: setE3RcvFarEndLOF.setDescription('Major Alarm for receiving far end loss of frame (receiving yellow alarm).')
setE3NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2502)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndSendLOF.setDescription('Major Alarm for near end sending loss of frame (transmitting yellow alarm).')
evntE3RcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2503)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3RcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntE3RcvingAIS.setDescription('Informational Event for far end sending alarm indication signal.')
setE3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2504)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndSendingAIS.setDescription('Major Alarm for near end sending alarm indication signal.')
setE3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2505)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndLOF.setDescription('Major Alarm for near end loss of frame.')
setE3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2506)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndLossOfSignal.setDescription('Major Alarm for near end loss of signal.')
evntE3NearEndLooped = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2507)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3NearEndLooped.setStatus('current')
if mibBuilder.loadTexts: evntE3NearEndLooped.setDescription('Informational Event for E3 near end looped.')
setE3OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2512)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: setE3OtherLineStatus.setDescription('Major Alarm for E3 other line status.')
setE3NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2513)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndUnavailableSig.setDescription('Major Alarm for near end in unavailable signal state.')
evntE3CarrierEquipOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2514)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3CarrierEquipOutOfService.setStatus('current')
if mibBuilder.loadTexts: evntE3CarrierEquipOutOfService.setDescription('Informational Event for E3 carrier equipment out-of-service.')
setE3NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2515)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: setE3NearEndSeverErroredFrame.setDescription('Major Alarm for near end severely errored frame.')
setE3TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2516)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: setE3TxRxClockFailure.setDescription('Major Alarm for E3 Transmit/Receive clock failure.')
setE3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2517)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: setE3FarEndBlockError.setDescription('Major Alarm for E3 far end block error.')
setE3MbitsInError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2519)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3MbitsInError.setStatus('current')
if mibBuilder.loadTexts: setE3MbitsInError.setDescription('Major Alarm for M-bits in error.')
setE3LIUOtherStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2520)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3LIUOtherStatus.setStatus('current')
if mibBuilder.loadTexts: setE3LIUOtherStatus.setDescription('Major Alarm for E3 LIU other status.')
setE3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2523)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: setE3LIUCodingViolation.setDescription('Major Alarm for E3 LIU line coding violation.')
setE3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2525)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setE3ConfigError.setStatus('current')
if mibBuilder.loadTexts: setE3ConfigError.setDescription('Major Alarm for E3 configuration error.')
evntE3InTest = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2530)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3InTest.setStatus('current')
if mibBuilder.loadTexts: evntE3InTest.setDescription('Informational Event for E3 in test.')
evntE3OutOfService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2531)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3OutOfService.setStatus('current')
if mibBuilder.loadTexts: evntE3OutOfService.setDescription('Informational Event for E3 out-of-service.')
clearE3RcvFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2541)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3RcvFarEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearE3RcvFarEndLOF.setDescription('Clears the Major Alarm for receiving far end loss of frame (receiving yellow alarm).')
clearE3NearEndSendLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2542)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndSendLOF.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndSendLOF.setDescription('Clears the Major Alarm for near end sending loss of frame (transmitting yellow alarm).')
evntE3StoppedRcvingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2543)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3StoppedRcvingAIS.setStatus('current')
if mibBuilder.loadTexts: evntE3StoppedRcvingAIS.setDescription('Informational Event when far end stops sending alarm indication signal.')
clearE3NearEndSendingAIS = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2544)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndSendingAIS.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndSendingAIS.setDescription('Clears the Major Alarm for near end sending alarm indication signal.')
clearE3NearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2545)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndLOF.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndLOF.setDescription('Clears the Major Alarm for near end loss of frame.')
clearE3NearEndLossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2546)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndLossOfSignal.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndLossOfSignal.setDescription('Clears the Major Alarm for near end loss of signal.')
evntE3NearEndLoopOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2547)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3NearEndLoopOff.setStatus('current')
if mibBuilder.loadTexts: evntE3NearEndLoopOff.setDescription('Informational Event for E3 near end loop off.')
clearE3OtherLineStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2552)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3OtherLineStatus.setStatus('current')
if mibBuilder.loadTexts: clearE3OtherLineStatus.setDescription('Clears the Major Alarm for E3 other line status.')
clearE3NearEndUnavailableSig = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2553)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndUnavailableSig.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndUnavailableSig.setDescription('Clears the Major Alarm for near end in unavailable signal state.')
evntE3CarrierEquipInService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2554)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3CarrierEquipInService.setStatus('current')
if mibBuilder.loadTexts: evntE3CarrierEquipInService.setDescription('Informational Event for E3 carrier equipment in-service.')
clearE3NearEndSeverErroredFrame = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2555)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3NearEndSeverErroredFrame.setStatus('current')
if mibBuilder.loadTexts: clearE3NearEndSeverErroredFrame.setDescription('Clears the Major Alarm for near end severely errored frame.')
clearE3TxRxClockFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2556)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3TxRxClockFailure.setStatus('current')
if mibBuilder.loadTexts: clearE3TxRxClockFailure.setDescription('Clears the Major Alarm for E3 Transmit/Receive clock failure.')
clearE3FarEndBlockError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2557)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3FarEndBlockError.setStatus('current')
if mibBuilder.loadTexts: clearE3FarEndBlockError.setDescription('Clears the Major Alarm for E3 far end block error.')
clearE3MbitsInError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2559)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3MbitsInError.setStatus('current')
if mibBuilder.loadTexts: clearE3MbitsInError.setDescription('Clears the Major Alarm for M-bits in error.')
clearE3LIUOtherStatus = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2560)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3LIUOtherStatus.setStatus('current')
if mibBuilder.loadTexts: clearE3LIUOtherStatus.setDescription('Clears the Major Alarm for E3 LIU other status.')
clearE3LIUCodingViolation = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2563)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3LIUCodingViolation.setStatus('current')
if mibBuilder.loadTexts: clearE3LIUCodingViolation.setDescription('Clears the Major Alarm for E3 LIU line coding violation.')
clearE3ConfigError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2565)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearE3ConfigError.setStatus('current')
if mibBuilder.loadTexts: clearE3ConfigError.setDescription('Clears the Major Alarm for E3 configuration error.')
evntE3TestOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2570)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3TestOff.setStatus('current')
if mibBuilder.loadTexts: evntE3TestOff.setDescription('Informational Event for E3 test off.')
evntE3InService = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2571)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evntE3InService.setStatus('current')
if mibBuilder.loadTexts: evntE3InService.setDescription('Informational Event for E3 in-service.')
setContactClosureInputAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2601)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setContactClosureInputAlarm.setStatus('current')
if mibBuilder.loadTexts: setContactClosureInputAlarm.setDescription('Major Alarm for Activated Contact Closure Input Port.')
setContactClosureCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2625)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setContactClosureCfgError.setStatus('current')
if mibBuilder.loadTexts: setContactClosureCfgError.setDescription('Minor Alarm for Contact Closure Port configuration error.')
clearContactClosureInputAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2641)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearContactClosureInputAlarm.setStatus('current')
if mibBuilder.loadTexts: clearContactClosureInputAlarm.setDescription('Clears Major Alarm for Activated Contact Closure Input Port.')
clearContactClosureCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2665)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearContactClosureCfgError.setStatus('current')
if mibBuilder.loadTexts: clearContactClosureCfgError.setDescription('Clears Minor Alarm for Contact Closure Port configuration error.')
setVoltMeasureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2701)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVoltMeasureAlarm.setStatus('current')
if mibBuilder.loadTexts: setVoltMeasureAlarm.setDescription('Major Alarm for Voltage Port exceeding limit boundary.')
setVoltMeasureCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2725)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVoltMeasureCfgError.setStatus('current')
if mibBuilder.loadTexts: setVoltMeasureCfgError.setDescription('Minor Alarm for Voltage Port configuration error.')
clearVoltMeasureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2741)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVoltMeasureAlarm.setStatus('current')
if mibBuilder.loadTexts: clearVoltMeasureAlarm.setDescription('Clears Major Alarm for Voltage Port exceeding limit boundary.')
clearVoltMeasureCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2765)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVoltMeasureCfgError.setStatus('current')
if mibBuilder.loadTexts: clearVoltMeasureCfgError.setDescription('Clears Minor Alarm for Voltage Port configuration error.')
setAsyncRxFifoError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2801)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setAsyncRxFifoError.setStatus('current')
if mibBuilder.loadTexts: setAsyncRxFifoError.setDescription('Major Alarm for Asynchronous Port FIFO Error on Receive.')
setAsyncTxFifoError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2802)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setAsyncTxFifoError.setStatus('current')
if mibBuilder.loadTexts: setAsyncTxFifoError.setDescription('Major Alarm for Asynchronous Port FIFO Error on Transmit.')
setAsyncOverrunError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2803)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setAsyncOverrunError.setStatus('current')
if mibBuilder.loadTexts: setAsyncOverrunError.setDescription('Minor Alarm for Asynchronous Port Overrun Error.')
setAsyncParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2804)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setAsyncParityError.setStatus('current')
if mibBuilder.loadTexts: setAsyncParityError.setDescription('Minor Alarm for Asynchronous Port Parity Error.')
setAsyncFramingError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2805)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setAsyncFramingError.setStatus('current')
if mibBuilder.loadTexts: setAsyncFramingError.setDescription('Minor Alarm for Asynchronous Port Framing Error.')
clearAsyncRxFifoError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2841)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearAsyncRxFifoError.setStatus('current')
if mibBuilder.loadTexts: clearAsyncRxFifoError.setDescription('Clears Major Alarm for Asynchronous Port FIFO Error on Receive.')
clearAsyncTxFifoError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2842)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearAsyncTxFifoError.setStatus('current')
if mibBuilder.loadTexts: clearAsyncTxFifoError.setDescription('Clears Major Alarm for Asynchronous Port FIFO Error on Transmit.')
clearAsyncOverrunError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2843)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearAsyncOverrunError.setStatus('current')
if mibBuilder.loadTexts: clearAsyncOverrunError.setDescription('Clears Minor Alarm for Asynchronous Port Overrun Error.')
clearAsyncParityError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2844)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearAsyncParityError.setStatus('current')
if mibBuilder.loadTexts: clearAsyncParityError.setDescription('Clears Minor Alarm for Asynchronous Port Parity Error.')
clearAsyncFramingError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2845)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearAsyncFramingError.setStatus('current')
if mibBuilder.loadTexts: clearAsyncFramingError.setDescription('Clears Minor Alarm for Asynchronous Port Framing Error.')
setTempSensorOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2901)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setTempSensorOutOfRange.setStatus('current')
if mibBuilder.loadTexts: setTempSensorOutOfRange.setDescription('Critical Alarm for System Temperature exceeding known operating limits.')
clearTempSensorOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 2941)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearTempSensorOutOfRange.setStatus('current')
if mibBuilder.loadTexts: clearTempSensorOutOfRange.setDescription('Clears Critical Alarm for System Temperature exceeding known operating limits.')
setVWanError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3001)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVWanError.setStatus('current')
if mibBuilder.loadTexts: setVWanError.setDescription('Major Alarm for Virtual WAN Port communications error.')
setVWanCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3025)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: setVWanCfgError.setStatus('current')
if mibBuilder.loadTexts: setVWanCfgError.setDescription('Minor Alarm for Virtual WAN Port configuration error.')
clearVWanError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3041)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVWanError.setStatus('current')
if mibBuilder.loadTexts: clearVWanError.setDescription('Clears Major Alarm for Virtual WAN Port communications error.')
clearVWanCfgError = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3065)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clearVWanCfgError.setStatus('current')
if mibBuilder.loadTexts: clearVWanCfgError.setDescription('Clears Minor Alarm for Virtual WAN Port configuration error.')
set1uPowerSupplyOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3108)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: set1uPowerSupplyOffline.setStatus('current')
if mibBuilder.loadTexts: set1uPowerSupplyOffline.setDescription('Major Alarm for DNX-1u Power Supply in Offline State.')
set1uPowerSupplyDefective = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3109)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: set1uPowerSupplyDefective.setStatus('current')
if mibBuilder.loadTexts: set1uPowerSupplyDefective.setDescription('Critical Alarm for DNX-1u Power Supply in Failed State.')
set1uPowerSupplyFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3110)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: set1uPowerSupplyFanFailure.setStatus('current')
if mibBuilder.loadTexts: set1uPowerSupplyFanFailure.setDescription('Critical Alarm for DNX-1u Power Supply Fan in Failed State.')
evnt1uPowerSupplyFanOn = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3116)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evnt1uPowerSupplyFanOn.setStatus('current')
if mibBuilder.loadTexts: evnt1uPowerSupplyFanOn.setDescription('Informational event for DNX-1u Power Supply Fan On.')
set1uPowerSupplyCircuitMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3119)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: set1uPowerSupplyCircuitMissing.setStatus('current')
if mibBuilder.loadTexts: set1uPowerSupplyCircuitMissing.setDescription('Critical Alarm for DNX-1u Power Supply missing hardware.')
set1uPowerSupplyCfgMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3125)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: set1uPowerSupplyCfgMismatch.setStatus('current')
if mibBuilder.loadTexts: set1uPowerSupplyCfgMismatch.setDescription('Major Alarm for DNX-1u Power Supply configuration error.')
clear1uPowerSupplyOffline = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3148)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clear1uPowerSupplyOffline.setStatus('current')
if mibBuilder.loadTexts: clear1uPowerSupplyOffline.setDescription('Clears Major Alarm for DNX-1u Power Supply in Offline State.')
clear1uPowerSupplyDefective = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3149)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clear1uPowerSupplyDefective.setStatus('current')
if mibBuilder.loadTexts: clear1uPowerSupplyDefective.setDescription('Clears Critical Alarm for DNX-1u Power Supply in Failed State.')
clear1uPowerSupplyFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3150)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clear1uPowerSupplyFanFailure.setStatus('current')
if mibBuilder.loadTexts: clear1uPowerSupplyFanFailure.setDescription('Clears Critical Alarm for DNX-1u Power Supply Fan in Failed State.')
evnt1uPowerSupplyFanOff = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3156)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: evnt1uPowerSupplyFanOff.setStatus('current')
if mibBuilder.loadTexts: evnt1uPowerSupplyFanOff.setDescription('Informational event for DNX-1u Power Supply Fan Off.')
clear1uPowerSupplyCircuitMissing = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3159)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clear1uPowerSupplyCircuitMissing.setStatus('current')
if mibBuilder.loadTexts: clear1uPowerSupplyCircuitMissing.setDescription('Clears the Critical Alarm for DNX-1u Power Supply missing hardware.')
clear1uPowerSupplyCfgMismatch = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 0, 3165)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-SMC-MIB", "trapResourceKey"), ("ERI-DNX-SMC-MIB", "trapTime"), ("ERI-DNX-SMC-MIB", "trapResourceAddress"), ("ERI-DNX-SMC-MIB", "trapResourceType"), ("ERI-DNX-SMC-MIB", "trapType"), ("ERI-DNX-SMC-MIB", "trapState"), ("ERI-DNX-SMC-MIB", "trapSeverity"))
if mibBuilder.loadTexts: clear1uPowerSupplyCfgMismatch.setStatus('current')
if mibBuilder.loadTexts: clear1uPowerSupplyCfgMismatch.setDescription('Clears Major Alarm for DNX-1u Power Supply configuration error.')
mibBuilder.exportSymbols("ERI-DNX-ALARM-TRAP-MIB", clearT3MbitsInError=clearT3MbitsInError, clearOcuNearEndLOS=clearOcuNearEndLOS, evntTransOverheadNearEndPathLineLoopOff=evntTransOverheadNearEndPathLineLoopOff, clearSts1NearEndOOF=clearSts1NearEndOOF, clearDevOffline=clearDevOffline, evntHt3InTest=evntHt3InTest, setT1E1Ts16AIS=setT1E1Ts16AIS, clearT1E1NearEndSendLOF=clearT1E1NearEndSendLOF, evntTamOutOfService=evntTamOutOfService, evntPayloadNearEndLineLooped=evntPayloadNearEndLineLooped, setDevFrameSyncNotPresent=setDevFrameSyncNotPresent, clearHsConfigError=clearHsConfigError, setAsyncRxFifoError=setAsyncRxFifoError, clearT3NearEndLossOfSignal=clearT3NearEndLossOfSignal, evntOcuOutOfService=evntOcuOutOfService, setE3FarEndBlockError=setE3FarEndBlockError, clearPayloadPathLOP=clearPayloadPathLOP, clearNodeMinorAlarm=clearNodeMinorAlarm, clearT3NearEndSeverErroredFrame=clearT3NearEndSeverErroredFrame, setSts1NearEndSendingAIS=setSts1NearEndSendingAIS, clearXlinkInUseError=clearXlinkInUseError, setE3NearEndSendLOF=setE3NearEndSendLOF, setSts1LIUAnalogLOS=setSts1LIUAnalogLOS, setHt3NearEndFERRError=setHt3NearEndFERRError, setT3NearEndSendingAIS=setT3NearEndSendingAIS, setT1E1NearEndLOF=setT1E1NearEndLOF, setOpticalT1E1NearEndLOF=setOpticalT1E1NearEndLOF, setDs0DpPortLossOfSignal=setDs0DpPortLossOfSignal, setE3ConfigError=setE3ConfigError, clearHt3NearEndExcessZeros=clearHt3NearEndExcessZeros, clearVoltMeasureAlarm=clearVoltMeasureAlarm, clearVWanError=clearVWanError, evntE3NearEndLoopOff=evntE3NearEndLoopOff, setXlinkClockError=setXlinkClockError, setT3NearEndSendLOF=setT3NearEndSendLOF, setT3NearEndSeverErroredFrame=setT3NearEndSeverErroredFrame, setOcuNearEndLOS=setOcuNearEndLOS, clearPsxPowerSupplyANotOk=clearPsxPowerSupplyANotOk, setTransOverheadLOF=setTransOverheadLOF, setAsyncParityError=setAsyncParityError, clearT3NearEndSendingAIS=clearT3NearEndSendingAIS, clearSts1NearEndAIS=clearSts1NearEndAIS, setXlinkBertError=setXlinkBertError, clear1uPowerSupplyDefective=clear1uPowerSupplyDefective, clearDevSystemClockNotPresent=clearDevSystemClockNotPresent, clearT3LIUCodingViolation=clearT3LIUCodingViolation, clearContactClosureCfgError=clearContactClosureCfgError, setOpticalT1E1RedAlarm=setOpticalT1E1RedAlarm, setOcuNearEndSeverErroredFrame=setOcuNearEndSeverErroredFrame, set1uPowerSupplyDefective=set1uPowerSupplyDefective, clearDevDefective=clearDevDefective, setT1E1NearEndRxSlip=setT1E1NearEndRxSlip, clearT1E1NearEndLossOfSignal=clearT1E1NearEndLossOfSignal, evntOpticalT1E1NearEndLooped=evntOpticalT1E1NearEndLooped, setAsyncOverrunError=setAsyncOverrunError, setAsyncFramingError=setAsyncFramingError, evntPsxLineCard02Present=evntPsxLineCard02Present, clearHt3NearEndLOF=clearHt3NearEndLOF, clearOpticalT1E1ConfigError=clearOpticalT1E1ConfigError, clearPsxFan02NotOk=clearPsxFan02NotOk, setSts1NearEndLOP=setSts1NearEndLOP, evntHsNearEndLooped=evntHsNearEndLooped, setNodeCriticalAlarm=setNodeCriticalAlarm, clearT3PbitCbitParityError=clearT3PbitCbitParityError, evntPsxLineCard05Missing=evntPsxLineCard05Missing, clearSts1NearEndLOMF=clearSts1NearEndLOMF, clearNestSwMismatch=clearNestSwMismatch, setSts1NearEndSendLOF=setSts1NearEndSendLOF, clearT1E1NearEndSeverErroredFrame=clearT1E1NearEndSeverErroredFrame, clearSts1NearEndTraceError=clearSts1NearEndTraceError, evntOpticalT1E1StoppedRcvingAIS=evntOpticalT1E1StoppedRcvingAIS, evntHsNearEndLoopOff=evntHsNearEndLoopOff, setSts1LIUPrbsError=setSts1LIUPrbsError, setSts1OtherLineStatus=setSts1OtherLineStatus, setPsxPowerSupplyBNotOk=setPsxPowerSupplyBNotOk, clearOpticalT1E1Tug2RDI=clearOpticalT1E1Tug2RDI, clearVoltMeasureCfgError=clearVoltMeasureCfgError, evntT3NearEndLooped=evntT3NearEndLooped, setPowerSupplyNotPresent=setPowerSupplyNotPresent, setT3FarEndSendingAIS=setT3FarEndSendingAIS, clearRtrUserAlarm3=clearRtrUserAlarm3, setDevConfigError=setDevConfigError, evntPsxLineCard09Missing=evntPsxLineCard09Missing, clearNestMismatch=clearNestMismatch, clearDs0DpPortConfigError=clearDs0DpPortConfigError, evntE1NationalSa4TxRxSame=evntE1NationalSa4TxRxSame, evntOpticalE1NationalSa4TxRxSame=evntOpticalE1NationalSa4TxRxSame, clearDevConfigError=clearDevConfigError, clearPayloadPathAIS=clearPayloadPathAIS, setSts1NearEndOOF=setSts1NearEndOOF, clearE3NearEndUnavailableSig=clearE3NearEndUnavailableSig, setRtrUserAlarm2=setRtrUserAlarm2, clearPowerSupplyNotPresent=clearPowerSupplyNotPresent, setSlotMismatch=setSlotMismatch, setHsConfigError=setHsConfigError, evntSts1InTest=evntSts1InTest, evntDs0DpPortInService=evntDs0DpPortInService, evntT1E1OutOfService=evntT1E1OutOfService, evntT1E1InTest=evntT1E1InTest, clearT3LIUExcessZeros=clearT3LIUExcessZeros, setT3PbitCbitParityError=setT3PbitCbitParityError, setHt3LIUExcessZeros=setHt3LIUExcessZeros, set1uPowerSupplyCircuitMissing=set1uPowerSupplyCircuitMissing, evntOcuInService=evntOcuInService, clearOpticalT1E1Tug2LOP=clearOpticalT1E1Tug2LOP, setHsRcvFIFOError=setHsRcvFIFOError, setPsxLineCardMismatch=setPsxLineCardMismatch, setHt3NearEndLossOfSignal=setHt3NearEndLossOfSignal, clearTransOverheadLaserOffDetect=clearTransOverheadLaserOffDetect, setOpticalT1E1OutOfFrame=setOpticalT1E1OutOfFrame, clearNestMissing=clearNestMissing, setPayloadPathAIS=setPayloadPathAIS, evntHt3RcvingAIS=evntHt3RcvingAIS, setOpticalT1E1Tug2PSLU=setOpticalT1E1Tug2PSLU, PYSNMP_MODULE_ID=eriDNXAlarmTrapMIB, evntPsxLineCard03Present=evntPsxLineCard03Present, clearNestMinorAlarm=clearNestMinorAlarm, clearOcuNearEndSeverErroredFrame=clearOcuNearEndSeverErroredFrame, evntTransOverheadInTest=evntTransOverheadInTest, evnt1uPowerSupplyFanOn=evnt1uPowerSupplyFanOn, evntHt3NearEndLoopOff=evntHt3NearEndLoopOff, setHt3LIUPrbsError=setHt3LIUPrbsError, clearOpticalT1E1NearEndLOF=clearOpticalT1E1NearEndLOF, evntT3NearEndLoopOff=evntT3NearEndLoopOff, clearNestMajorAlarm=clearNestMajorAlarm, evntPsxLineCard04Missing=evntPsxLineCard04Missing, clearXlinkFramerError=clearXlinkFramerError, setPsxPowerSupplyANotOk=setPsxPowerSupplyANotOk, setOpticalT1E1Tug2AIS=setOpticalT1E1Tug2AIS, clearE3ConfigError=clearE3ConfigError, clearT1E1ChangeFrameAlignment=clearT1E1ChangeFrameAlignment, evntHt3TestOff=evntHt3TestOff, setTamConfigError=setTamConfigError, setDs0DpBitsBPV=setDs0DpBitsBPV, setContactClosureCfgError=setContactClosureCfgError, clearE3NearEndSeverErroredFrame=clearE3NearEndSeverErroredFrame, evntE3CarrierEquipOutOfService=evntE3CarrierEquipOutOfService, clearDevFreeRunError=clearDevFreeRunError, setT3MbitsInError=setT3MbitsInError, clearT3RcvFarEndLOF=clearT3RcvFarEndLOF, evntTransOverheadNearEndSysLineLooped=evntTransOverheadNearEndSysLineLooped, setHt3LIUDigitalLOS=setHt3LIUDigitalLOS, clearHt3ConfigError=clearHt3ConfigError, evntDevOnline=evntDevOnline, setDevCircuitCardMissing=setDevCircuitCardMissing, setT1E1NearEndSendingAIS=setT1E1NearEndSendingAIS, clearSts1RcvFarEndLOF=clearSts1RcvFarEndLOF, setPayloadPathLOP=setPayloadPathLOP, setNestMissing=setNestMissing, clearDevBusError=clearDevBusError, setE3NearEndSendingAIS=setE3NearEndSendingAIS, clearE3MbitsInError=clearE3MbitsInError, clearPayloadPathRDI=clearPayloadPathRDI, clearPsxDualBroadbandNotSupported=clearPsxDualBroadbandNotSupported, setVoltMeasureCfgError=setVoltMeasureCfgError, setTransOverheadLOS=setTransOverheadLOS, clearT1E1NearEndTxSlip=clearT1E1NearEndTxSlip, setDevOffline=setDevOffline, evntE3NearEndLooped=evntE3NearEndLooped, setT3LIUCodingViolation=setT3LIUCodingViolation, setT3FarEndBlockError=setT3FarEndBlockError, clearT3NearEndLOF=clearT3NearEndLOF, evntPsxLineCard02Missing=evntPsxLineCard02Missing, evntTransOverheadNearEndSysLineLoopOff=evntTransOverheadNearEndSysLineLoopOff, clearE3NearEndLOF=clearE3NearEndLOF, setE3NearEndUnavailableSig=setE3NearEndUnavailableSig, setXlinkSerializerError=setXlinkSerializerError, setXlinkFramerError=setXlinkFramerError, setVWanCfgError=setVWanCfgError, evnt1uPowerSupplyFanOff=evnt1uPowerSupplyFanOff, clearHt3NearEndLossOfSignal=clearHt3NearEndLossOfSignal, clearTransOverheadSdDetect=clearTransOverheadSdDetect, clearHt3LIUExcessZeros=clearHt3LIUExcessZeros, evntPayloadNearEndLocalLooped=evntPayloadNearEndLocalLooped, setT1E1ChangeFrameAlignment=setT1E1ChangeFrameAlignment, setT1E1NearEndTxSlip=setT1E1NearEndTxSlip, setHsClockEdgeError=setHsClockEdgeError, setT3ConfigError=setT3ConfigError, setXlinkInUseError=setXlinkInUseError, clear1uPowerSupplyCircuitMissing=clear1uPowerSupplyCircuitMissing, clearT1E1FarEndSendingTs16LOMF=clearT1E1FarEndSendingTs16LOMF, setOpticalT1E1ConfigError=setOpticalT1E1ConfigError, evntHt3StoppedRcvingAIS=evntHt3StoppedRcvingAIS, clearT1E1NearEndUnavailableSig=clearT1E1NearEndUnavailableSig, clearTamConfigError=clearTamConfigError, clearHt3ChangeInFrameAlignment=clearHt3ChangeInFrameAlignment, setOcuConfigError=setOcuConfigError, clearVtNearEndLOP=clearVtNearEndLOP, setOpticalT1E1LossOfPointer=setOpticalT1E1LossOfPointer, setDevDefective=setDevDefective, setHt3LIUCodingViolation=setHt3LIUCodingViolation, clearT1E1RcvFarEndLOF=clearT1E1RcvFarEndLOF, clearPowerSupplyProblem=clearPowerSupplyProblem, evntTransOverheadNearEndPathLineLooped=evntTransOverheadNearEndPathLineLooped, clearDevNoRearCard=clearDevNoRearCard, clearT1E1Ts16AIS=clearT1E1Ts16AIS, evntE1NationalSa4TxRxDiff=evntE1NationalSa4TxRxDiff, evntDevNotOnline=evntDevNotOnline, clearTransOverheadOOF=clearTransOverheadOOF, clearOpticalT1E1LossOfPointer=clearOpticalT1E1LossOfPointer, evntDevNotStandby=evntDevNotStandby, clearDs0DpPortBPV=clearDs0DpPortBPV, setPsxFan02NotOk=setPsxFan02NotOk, evntTransOverheadTestOff=evntTransOverheadTestOff, setSts1NearEndLOF=setSts1NearEndLOF, setSts1NearEndUnavailableSig=setSts1NearEndUnavailableSig, clearOpticalT1E1Tug2RFI=clearOpticalT1E1Tug2RFI, setTransOverheadSfDetect=setTransOverheadSfDetect, clearPsxFan03NotOk=clearPsxFan03NotOk, setNodeMajorAlarm=setNodeMajorAlarm, evntHsNoBtsAssigned=evntHsNoBtsAssigned, evntSts1RcvingAIS=evntSts1RcvingAIS, evntPsxLineCard10Present=evntPsxLineCard10Present, clearOpticalT1E1NearEndSendingAIS=clearOpticalT1E1NearEndSendingAIS, clearDs0DpBitsBPV=clearDs0DpBitsBPV, setOpticalT1E1Tug2PSLM=setOpticalT1E1Tug2PSLM, setE3NearEndSeverErroredFrame=setE3NearEndSeverErroredFrame, setDevDataBaseNotInsync=setDevDataBaseNotInsync, clearSts1LIUDigitalLOS=clearSts1LIUDigitalLOS, clearXlinkSerializerError=clearXlinkSerializerError, evntOpticalT1E1InTest=evntOpticalT1E1InTest, setPowerSupplyProblem=setPowerSupplyProblem, evntPsxLineCard03Missing=evntPsxLineCard03Missing, clearT3TxRxClockFailure=clearT3TxRxClockFailure, setPsxLineCardRelayMalfunction=setPsxLineCardRelayMalfunction, clearHt3LIUDigitalLOS=clearHt3LIUDigitalLOS, evntOpticalT1E1NearEndLoopOff=evntOpticalT1E1NearEndLoopOff, clearSts1NearEndUnavailableSig=clearSts1NearEndUnavailableSig, clearRtrUserAlarm2=clearRtrUserAlarm2, setT1E1ConfigError=setT1E1ConfigError, setT3LIUPrbsError=setT3LIUPrbsError, clearHt3PbitCbitParityError=clearHt3PbitCbitParityError, clearE3NearEndSendLOF=clearE3NearEndSendLOF, setTransOverheadSdDetect=setTransOverheadSdDetect, clearHsRcvFIFOError=clearHsRcvFIFOError, evntE3StoppedRcvingAIS=evntE3StoppedRcvingAIS, setPsxLineCardRelaySwitchToSpare=setPsxLineCardRelaySwitchToSpare, setTransOverheadRDI=setTransOverheadRDI, setPsxLineCardMissing=setPsxLineCardMissing, evntHt3CarrierEquipInService=evntHt3CarrierEquipInService, evntDevInService=evntDevInService, evntHt3CarrierEquipOutOfService=evntHt3CarrierEquipOutOfService, setT1E1NearEndSeverErroredFrame=setT1E1NearEndSeverErroredFrame, setOpticalT1E1Tug2RDI=setOpticalT1E1Tug2RDI, evntT1E1RcvingAIS=evntT1E1RcvingAIS, clearOpticalT1E1Tug2AIS=clearOpticalT1E1Tug2AIS, evntE3OutOfService=evntE3OutOfService, evntPsxLineCard11Present=evntPsxLineCard11Present, setSts1TxRxClockFailure=setSts1TxRxClockFailure, setPsxFan03NotOk=setPsxFan03NotOk, evntT1E1CarrierEquipInService=evntT1E1CarrierEquipInService, setT3OtherLineStatus=setT3OtherLineStatus, evntT3CarrierEquipInService=evntT3CarrierEquipInService, evntDs0DpPortInTest=evntDs0DpPortInTest)
mibBuilder.exportSymbols("ERI-DNX-ALARM-TRAP-MIB", setOpticalT1E1NearEndSendLOF=setOpticalT1E1NearEndSendLOF, setDs0DpBitsLossOfSignal=setDs0DpBitsLossOfSignal, clearHt3NearEndSendingAIS=clearHt3NearEndSendingAIS, clearOpticalT1E1NearEndSendLOF=clearOpticalT1E1NearEndSendLOF, clearAsyncFramingError=clearAsyncFramingError, evntPsxLineCard04Present=evntPsxLineCard04Present, clearAsyncRxFifoError=clearAsyncRxFifoError, setT3NearEndUnavailableSig=setT3NearEndUnavailableSig, evntPsxNewControllerRev=evntPsxNewControllerRev, evntT3InTest=evntT3InTest, evntDevOutOfService=evntDevOutOfService, setNestCriticalAlarm=setNestCriticalAlarm, setTransOverheadOOF=setTransOverheadOOF, setSts1RcvFarEndLOF=setSts1RcvFarEndLOF, clearHt3LIUAnalogLOS=clearHt3LIUAnalogLOS, clearT3ConfigError=clearT3ConfigError, clearE3RcvFarEndLOF=clearE3RcvFarEndLOF, setHt3NearEndLCVError=setHt3NearEndLCVError, setVtNearEndLOP=setVtNearEndLOP, setVtNearEndAIS=setVtNearEndAIS, evntT1E1InService=evntT1E1InService, clearRtrUserAlarm1=clearRtrUserAlarm1, setT3TxRxClockFailure=setT3TxRxClockFailure, evntT1E1CarrierEquipOutOfService=evntT1E1CarrierEquipOutOfService, evntPsxDevOnline=evntPsxDevOnline, setPsxLineCardCableMissing=setPsxLineCardCableMissing, clearPsxLineCardMismatch=clearPsxLineCardMismatch, setNestOffline=setNestOffline, clearSts1OtherLineStatus=clearSts1OtherLineStatus, evntHsOutOfService=evntHsOutOfService, clearNestOffline=clearNestOffline, setVoiceConfigError=setVoiceConfigError, setT1E1RcvFarEndLOF=setT1E1RcvFarEndLOF, clearHt3NearEndLCVError=clearHt3NearEndLCVError, clearDevFrameSyncNotPresent=clearDevFrameSyncNotPresent, clearT3NearEndSendLOF=clearT3NearEndSendLOF, setVWanError=setVWanError, setDevStratum3ClkFailure=setDevStratum3ClkFailure, setE3LIUCodingViolation=setE3LIUCodingViolation, evntDevColdStart=evntDevColdStart, set1uPowerSupplyFanFailure=set1uPowerSupplyFanFailure, evntOpticalT1E1RcvingAIS=evntOpticalT1E1RcvingAIS, clearSts1NearEndSendingAIS=clearSts1NearEndSendingAIS, setNestMajorAlarm=setNestMajorAlarm, clearDs0DpPortLossOfSignal=clearDs0DpPortLossOfSignal, clearT3OtherLineStatus=clearT3OtherLineStatus, clearOpticalT1E1Tug2PSLM=clearOpticalT1E1Tug2PSLM, clearSts1NearEndSendLOF=clearSts1NearEndSendLOF, clearXlinkClockError=clearXlinkClockError, evntT1E1StoppedRcvingAIS=evntT1E1StoppedRcvingAIS, clearDevStratum3ClkFailure=clearDevStratum3ClkFailure, setVoltMeasureAlarm=setVoltMeasureAlarm, setPayloadPathRDI=setPayloadPathRDI, setT3RcvFarEndLOF=setT3RcvFarEndLOF, clearE3OtherLineStatus=clearE3OtherLineStatus, evntRtrInService=evntRtrInService, clearHt3NearEndFERRError=clearHt3NearEndFERRError, setHsCarrierFailure=setHsCarrierFailure, evntVoiceInService=evntVoiceInService, evntPsxLineCard09Present=evntPsxLineCard09Present, evntHsBtsAssigned=evntHsBtsAssigned, clearPsxLineCardRelaySwitchToSpare=clearPsxLineCardRelaySwitchToSpare, evntE3RcvingAIS=evntE3RcvingAIS, setSts1NearEndTraceError=setSts1NearEndTraceError, setContactClosureInputAlarm=setContactClosureInputAlarm, evntT1E1NearEndLooped=evntT1E1NearEndLooped, setHt3ChangeInFrameAlignment=setHt3ChangeInFrameAlignment, clearOpticalT1E1RedAlarm=clearOpticalT1E1RedAlarm, setE3MbitsInError=setE3MbitsInError, clearAsyncOverrunError=clearAsyncOverrunError, evntPsxLineCard06Missing=evntPsxLineCard06Missing, setE3NearEndLOF=setE3NearEndLOF, setT3NearEndLossOfSignal=setT3NearEndLossOfSignal, clearNodeCriticalAlarm=clearNodeCriticalAlarm, clearHsClockEdgeError=clearHsClockEdgeError, evntPayloadNearEndLocalLoopOff=evntPayloadNearEndLocalLoopOff, clearT1E1OtherLineStatus=clearT1E1OtherLineStatus, clearTransOverheadLOS=clearTransOverheadLOS, setT1E1NearEndUnavailableSig=setT1E1NearEndUnavailableSig, setE3TxRxClockFailure=setE3TxRxClockFailure, setHt3NearEndSendingAIS=setHt3NearEndSendingAIS, evntE3InTest=evntE3InTest, clearDevCircuitCardMissing=clearDevCircuitCardMissing, setHt3FarEndRcvFailure=setHt3FarEndRcvFailure, set1uPowerSupplyCfgMismatch=set1uPowerSupplyCfgMismatch, setDevBusError=setDevBusError, clearHt3FarEndRcvFailure=clearHt3FarEndRcvFailure, clearT1E1NearEndSendingTs16LOMF=clearT1E1NearEndSendingTs16LOMF, evntT1E1NearEndLoopOff=evntT1E1NearEndLoopOff, evntGr303InService=evntGr303InService, setRtrUserAlarm1=setRtrUserAlarm1, evntOpticalE1NationalSa4TxRxDiff=evntOpticalE1NationalSa4TxRxDiff, clearHsCarrierFailure=clearHsCarrierFailure, setOcuOtherLineStatus=setOcuOtherLineStatus, evntT3OutOfService=evntT3OutOfService, clearOcuConfigError=clearOcuConfigError, evntSts1TestOff=evntSts1TestOff, evntSts1CarrierEquipInService=evntSts1CarrierEquipInService, setSts1LIUExcessZeros=setSts1LIUExcessZeros, clearHt3FarEndBlockError=clearHt3FarEndBlockError, setOpticalT1E1DetectedAIS=setOpticalT1E1DetectedAIS, clearVtNearEndAIS=clearVtNearEndAIS, evntT3TestOff=evntT3TestOff, evntRtrOutOfService=evntRtrOutOfService, setHt3LIUAnalogLOS=setHt3LIUAnalogLOS, evntSts1InService=evntSts1InService, setDevNoRearCard=setDevNoRearCard, clearPsxFan01NotOk=clearPsxFan01NotOk, evntDs0DpPortTestOff=evntDs0DpPortTestOff, clearHsXmtFIFOError=clearHsXmtFIFOError, clearSts1LIUPrbsError=clearSts1LIUPrbsError, evntPsxLineCard01Present=evntPsxLineCard01Present, setXlinkCableMismatch=setXlinkCableMismatch, evntTransOverheadNearEndLocalLooped=evntTransOverheadNearEndLocalLooped, setHt3ConfigError=setHt3ConfigError, evntDevWarmStart=evntDevWarmStart, setNodeMinorAlarm=setNodeMinorAlarm, clearOpticalT1E1NearEndSEF=clearOpticalT1E1NearEndSEF, clearE3TxRxClockFailure=clearE3TxRxClockFailure, evntDs0DpPortOutOfService=evntDs0DpPortOutOfService, setNestMismatch=setNestMismatch, setNestMinorAlarm=setNestMinorAlarm, evntDevStandby=evntDevStandby, clear1uPowerSupplyOffline=clear1uPowerSupplyOffline, evntT3CarrierEquipOutOfService=evntT3CarrierEquipOutOfService, clearPsxPowerSupplyBNotOk=clearPsxPowerSupplyBNotOk, evntHt3OutOfService=evntHt3OutOfService, clearAsyncTxFifoError=clearAsyncTxFifoError, setTransOverheadAIS=setTransOverheadAIS, clearHt3LIUPrbsError=clearHt3LIUPrbsError, clearTempSensorOutOfRange=clearTempSensorOutOfRange, evntVoiceOutOfService=evntVoiceOutOfService, setHt3PbitCbitParityError=setHt3PbitCbitParityError, setRtrConfigError=setRtrConfigError, setOpticalT1E1Tug2RFI=setOpticalT1E1Tug2RFI, clearContactClosureInputAlarm=clearContactClosureInputAlarm, evntHsTestOff=evntHsTestOff, setT1E1OtherLineStatus=setT1E1OtherLineStatus, clearTransOverheadSfDetect=clearTransOverheadSfDetect, setT1E1NearEndSendingTs16LOMF=setT1E1NearEndSendingTs16LOMF, evntTamInService=evntTamInService, clearAsyncParityError=clearAsyncParityError, evntPayloadTestOff=evntPayloadTestOff, clearOpticalT1E1Tug2PSLU=clearOpticalT1E1Tug2PSLU, setTempSensorOutOfRange=setTempSensorOutOfRange, evntE3TestOff=evntE3TestOff, clearT3LIUPrbsError=clearT3LIUPrbsError, setDs0DpPortBPV=setDs0DpPortBPV, clearHt3LIUCodingViolation=clearHt3LIUCodingViolation, clearSts1LIUExcessZeros=clearSts1LIUExcessZeros, setHt3NearEndExcessZeros=setHt3NearEndExcessZeros, evntGr303OutOfService=evntGr303OutOfService, clearXlinkCableMismatch=clearXlinkCableMismatch, setHsXmtFIFOError=setHsXmtFIFOError, setNestSwMismatch=setNestSwMismatch, setTransOverheadDetectLaserOffDetect=setTransOverheadDetectLaserOffDetect, evntHsInTest=evntHsInTest, clearPsxLineCardRelayMalfunction=clearPsxLineCardRelayMalfunction, clearSts1ConfigError=clearSts1ConfigError, evntE3CarrierEquipInService=evntE3CarrierEquipInService, evntPsxLineCard11Missing=evntPsxLineCard11Missing, setDevSystemClockNotPresent=setDevSystemClockNotPresent, setE3RcvFarEndLOF=setE3RcvFarEndLOF, clearSts1NearEndLOF=clearSts1NearEndLOF, clear1uPowerSupplyCfgMismatch=clear1uPowerSupplyCfgMismatch, evntSts1NearEndLooped=evntSts1NearEndLooped, clearPsxLineCardCableMissing=clearPsxLineCardCableMissing, clearOpticalT1E1RcvFarEndYellow=clearOpticalT1E1RcvFarEndYellow, setT1E1FarEndSendingTs16LOMF=setT1E1FarEndSendingTs16LOMF, clearE3LIUCodingViolation=clearE3LIUCodingViolation, clearT3FarEndSendingAIS=clearT3FarEndSendingAIS, clearNestCriticalAlarm=clearNestCriticalAlarm, clearOpticalT1E1DetectedAIS=clearOpticalT1E1DetectedAIS, setHt3FarEndBlockError=setHt3FarEndBlockError, setOpticalT1E1NearEndSendingAIS=setOpticalT1E1NearEndSendingAIS, clearRtrConfigError=clearRtrConfigError, clearT1E1ConfigError=clearT1E1ConfigError, evntPsxLineCard07Present=evntPsxLineCard07Present, clearNodeMajorAlarm=clearNodeMajorAlarm, setT1E1NearEndSendLOF=setT1E1NearEndSendLOF, evntOpticalT1E1OutOfService=evntOpticalT1E1OutOfService, setE3LIUOtherStatus=setE3LIUOtherStatus, evntPsxLineCard07Missing=evntPsxLineCard07Missing, clearOcuOtherLineStatus=clearOcuOtherLineStatus, setOpticalT1E1NearEndLOS=setOpticalT1E1NearEndLOS, clearSts1LIUCodingViolation=clearSts1LIUCodingViolation, setT3LIUOtherStatus=setT3LIUOtherStatus, clearTransOverheadRDI=clearTransOverheadRDI, setPsxDualBroadbandNotSupported=setPsxDualBroadbandNotSupported, evntHsInService=evntHsInService, evntSts1NearEndLoopOff=evntSts1NearEndLoopOff, evntE3InService=evntE3InService, evntSts1CarrierEquipOutOfService=evntSts1CarrierEquipOutOfService, setT1E1NearEndLossOfSignal=setT1E1NearEndLossOfSignal, setSts1LIUCodingViolation=setSts1LIUCodingViolation, clearVoiceConfigError=clearVoiceConfigError, clearSts1NearEndLOP=clearSts1NearEndLOP, clearXlinkBertError=clearXlinkBertError, eriDNXAlarmTrapMIB=eriDNXAlarmTrapMIB, setSlotMissing=setSlotMissing, clearE3NearEndSendingAIS=clearE3NearEndSendingAIS, clearT1E1NearEndRxSlip=clearT1E1NearEndRxSlip, setE3NearEndLossOfSignal=setE3NearEndLossOfSignal, clearSlotMissing=clearSlotMissing, evntHt3InService=evntHt3InService, evntPayloadInTest=evntPayloadInTest, clearTransOverheadLOF=clearTransOverheadLOF, clearT3NearEndUnavailableSig=clearT3NearEndUnavailableSig, clearHt3NearEndOOF=clearHt3NearEndOOF, clearE3FarEndBlockError=clearE3FarEndBlockError, setHt3NearEndLOF=setHt3NearEndLOF, clearT3LIUOtherStatus=clearT3LIUOtherStatus, setOpticalT1E1Tug2LOP=setOpticalT1E1Tug2LOP, clearE3LIUOtherStatus=clearE3LIUOtherStatus, setXlinkCrcError=setXlinkCrcError, clearDs0DpBitsLossOfSignal=clearDs0DpBitsLossOfSignal, evntSts1OutOfService=evntSts1OutOfService, setRtrUserAlarm3=setRtrUserAlarm3, evntPsxLineCard01Missing=evntPsxLineCard01Missing, evntPsxLineCard10Missing=evntPsxLineCard10Missing, evntPsxLineCard08Missing=evntPsxLineCard08Missing, clearOpticalT1E1NearEndLOS=clearOpticalT1E1NearEndLOS, clearSlotMismatch=clearSlotMismatch, clear1uPowerSupplyFanFailure=clear1uPowerSupplyFanFailure, evntT3InService=evntT3InService, clearOpticalT1E1OutOfFrame=clearOpticalT1E1OutOfFrame, setAsyncTxFifoError=setAsyncTxFifoError, setSts1NearEndLOMF=setSts1NearEndLOMF, setT3LIUExcessZeros=setT3LIUExcessZeros, clearPsxLineCardMissing=clearPsxLineCardMissing, setSts1NearEndAIS=setSts1NearEndAIS, evntHt3NearEndLooped=evntHt3NearEndLooped, setOpticalT1E1RcvFarEndYellow=setOpticalT1E1RcvFarEndYellow, clearVWanCfgError=clearVWanCfgError, clearTransOverheadAIS=clearTransOverheadAIS, setT3NearEndLOF=setT3NearEndLOF, setE3OtherLineStatus=setE3OtherLineStatus, clearSts1TxRxClockFailure=clearSts1TxRxClockFailure, setPsxFan01NotOk=setPsxFan01NotOk, evntTransOverheadNearEndLocalLoopOff=evntTransOverheadNearEndLocalLoopOff, clearE3NearEndLossOfSignal=clearE3NearEndLossOfSignal, evntT1E1TestOff=evntT1E1TestOff, clearSts1LIUAnalogLOS=clearSts1LIUAnalogLOS, evntPsxLineCard08Present=evntPsxLineCard08Present, evntPsxLineCard06Present=evntPsxLineCard06Present, setSts1ConfigError=setSts1ConfigError, clearT3FarEndBlockError=clearT3FarEndBlockError, setSts1LIUDigitalLOS=setSts1LIUDigitalLOS, evntOpticalT1E1InService=evntOpticalT1E1InService, evntPsxLineCard05Present=evntPsxLineCard05Present, set1uPowerSupplyOffline=set1uPowerSupplyOffline, clearT1E1NearEndSendingAIS=clearT1E1NearEndSendingAIS, evntSts1StoppedRcvingAIS=evntSts1StoppedRcvingAIS, setOpticalT1E1NearEndSEF=setOpticalT1E1NearEndSEF)
mibBuilder.exportSymbols("ERI-DNX-ALARM-TRAP-MIB", evntOpticalT1E1TestOff=evntOpticalT1E1TestOff, clearT1E1NearEndLOF=clearT1E1NearEndLOF, setDevFreeRunError=setDevFreeRunError, setHt3NearEndOOF=setHt3NearEndOOF, clearDevDataBaseNotInsync=clearDevDataBaseNotInsync, setDs0DpPortConfigError=setDs0DpPortConfigError, clearXlinkCrcError=clearXlinkCrcError, evntPayloadNearEndLineLoopOff=evntPayloadNearEndLineLoopOff)
