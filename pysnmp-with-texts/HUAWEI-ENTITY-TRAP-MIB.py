#
# PySNMP MIB module HUAWEI-ENTITY-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ENTITY-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex")
hwBaseTrapSeverity, hwBaseTrapEventType, hwBaseTrapProbableCause = mibBuilder.importSymbols("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity", "hwBaseTrapEventType", "hwBaseTrapProbableCause")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
IANAItuProbableCause, = mibBuilder.importSymbols("IANA-ITU-ALARM-TC-MIB", "IANAItuProbableCause")
ifName, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Gauge32, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, TimeTicks, iso, IpAddress, NotificationType, Bits, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "TimeTicks", "iso", "IpAddress", "NotificationType", "Bits", "ModuleIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwEntityTrapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219))
if mibBuilder.loadTexts: hwEntityTrapMIB.setLastUpdated('200701170000Z')
if mibBuilder.loadTexts: hwEntityTrapMIB.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwEntityTrapMIB.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwEntityTrapMIB.setDescription('This is the base trap definition for DataCom.')
hwEntityTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1))
hwEntityPhysicalIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityPhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: hwEntityPhysicalIndex.setDescription('The index of physical.')
hwEntityTrapEntType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("mpu", 1), ("lpu", 2), ("sfu", 3), ("pic", 4), ("cfcard", 5), ("ofc", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityTrapEntType.setStatus('current')
if mibBuilder.loadTexts: hwEntityTrapEntType.setDescription('The entity type.')
hwEntityTrapFaultID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 3), IANAItuProbableCause()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEntityTrapFaultID.setStatus('current')
if mibBuilder.loadTexts: hwEntityTrapFaultID.setDescription('To describe the fault id of trap.')
hwEntityCommunicateType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("controlChannel", 1), ("monitorChannel", 2), ("clockChannel", 3), ("dataChannel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityCommunicateType.setStatus('current')
if mibBuilder.loadTexts: hwEntityCommunicateType.setDescription('The communicate type.')
hwEntityThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5), )
if mibBuilder.loadTexts: hwEntityThresholdTable.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdTable.setDescription('A table to config the threshold of each sensor.')
hwEntityThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwEntityThresholdEntry.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdEntry.setDescription('The entry of threshold table.')
hwEntityThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("riseOver", 1), ("fallBelow", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityThresholdType.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdType.setDescription('The abnormal type for temperature, voltage, humidity......')
hwEntityThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityThresholdValue.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdValue.setDescription('The threshold value of temperature, humidity ,fog ......')
hwEntityThresholdCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEntityThresholdCurrent.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdCurrent.setDescription('The current value that been measured.')
hwEntityThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityThresholdCritical.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdCritical.setDescription('The critical alarm threshold for critical alarm. It could be used for a more dangerous instance than hwEntityThresholdCritical.')
hwEntityThresholdWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEntityThresholdWarning.setStatus('current')
if mibBuilder.loadTexts: hwEntityThresholdWarning.setDescription('The warning alarm threshold for warning alarm. It could be used for a more dangerous instance than hwEntityThresholdWarning.')
hwUserDefAlarmName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUserDefAlarmName.setStatus('current')
if mibBuilder.loadTexts: hwUserDefAlarmName.setDescription('Description.')
hwUserDefChannel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUserDefChannel.setStatus('current')
if mibBuilder.loadTexts: hwUserDefChannel.setDescription('Description.')
hwSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: hwSoftwareVersion.setDescription('Description.')
hwStartupSoftwareFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 9), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStartupSoftwareFileName.setStatus('current')
if mibBuilder.loadTexts: hwStartupSoftwareFileName.setDescription('Description.')
hwStorageDevName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 1, 10), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStorageDevName.setStatus('current')
if mibBuilder.loadTexts: hwStorageDevName.setDescription('Description.')
hwEntityTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2))
hwChassisTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1))
hwChassisRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisRemove.setStatus('current')
if mibBuilder.loadTexts: hwChassisRemove.setDescription('Chassis has been removed.')
hwChassisInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisInsert.setStatus('current')
if mibBuilder.loadTexts: hwChassisInsert.setDescription('Chassis has been inserted.')
hwChassisFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisFail.setStatus('current')
if mibBuilder.loadTexts: hwChassisFail.setDescription('Chassis become failure for some reason.')
hwChassisFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisFailResume.setStatus('current')
if mibBuilder.loadTexts: hwChassisFailResume.setDescription('Board resume from failure.')
hwChassisInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisInvalid.setStatus('current')
if mibBuilder.loadTexts: hwChassisInvalid.setDescription('Chassis is invalid for some reason.')
hwChassisInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 1, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwChassisInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwChassisInvalidResume.setDescription('Chassis resume from invalid situation.')
hwBoardTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2))
hwBoardRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardRemove.setStatus('current')
if mibBuilder.loadTexts: hwBoardRemove.setDescription('Board has been removed.')
hwBoardInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardInsert.setStatus('current')
if mibBuilder.loadTexts: hwBoardInsert.setDescription('Board has been inserted.')
hwBoardFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardFail.setStatus('current')
if mibBuilder.loadTexts: hwBoardFail.setDescription('Board become failure for some reason.')
hwBoardFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardFailResume.setStatus('current')
if mibBuilder.loadTexts: hwBoardFailResume.setDescription('Board resume from failure.')
hwBoardInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardInvalid.setStatus('current')
if mibBuilder.loadTexts: hwBoardInvalid.setDescription('Board is invalid for some reason.')
hwBoardInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwBoardInvalidResume.setDescription('Board resume from invalid situation.')
hwBoardLeaveMaster = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 7)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardLeaveMaster.setStatus('current')
if mibBuilder.loadTexts: hwBoardLeaveMaster.setDescription('MPU leave master role.')
hwBoardBecomeMaster = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 8)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBoardBecomeMaster.setStatus('current')
if mibBuilder.loadTexts: hwBoardBecomeMaster.setDescription('MPU become master role.')
hwUpMicroSwitchOpen = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 9)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUpMicroSwitchOpen.setStatus('current')
if mibBuilder.loadTexts: hwUpMicroSwitchOpen.setDescription('Up micro switch open.')
hwUpMicroSwitchClose = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 10)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUpMicroSwitchClose.setStatus('current')
if mibBuilder.loadTexts: hwUpMicroSwitchClose.setDescription('Up micro switch close.')
hwDownMicroSwitchOpen = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 11)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwDownMicroSwitchOpen.setStatus('current')
if mibBuilder.loadTexts: hwDownMicroSwitchOpen.setDescription('Down micro switch open.')
hwDownMicroSwitchClose = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 2, 12)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwDownMicroSwitchClose.setStatus('current')
if mibBuilder.loadTexts: hwDownMicroSwitchClose.setDescription('Down micro switch close.')
hwCardTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3))
hwCardRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardRemove.setStatus('current')
if mibBuilder.loadTexts: hwCardRemove.setDescription('Card has been removed.')
hwCardInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardInsert.setStatus('current')
if mibBuilder.loadTexts: hwCardInsert.setDescription('Card has been inserted.')
hwCardFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardFail.setStatus('current')
if mibBuilder.loadTexts: hwCardFail.setDescription('Card become failure for some reason.')
hwCardFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardFailResume.setStatus('current')
if mibBuilder.loadTexts: hwCardFailResume.setDescription('Card resume from failure.')
hwCardInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardInvalid.setStatus('current')
if mibBuilder.loadTexts: hwCardInvalid.setDescription('Card is invalid for some reason.')
hwCardInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 3, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCardInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwCardInvalidResume.setDescription('Card resume from invalid situation.')
hwOpticalTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4))
hwOpticalRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalRemove.setStatus('current')
if mibBuilder.loadTexts: hwOpticalRemove.setDescription('Optical Module has been removed.')
hwOpticalInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalInsert.setStatus('current')
if mibBuilder.loadTexts: hwOpticalInsert.setDescription('Optical Module has been inserted.')
hwOpticalFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalFail.setStatus('current')
if mibBuilder.loadTexts: hwOpticalFail.setDescription('Optical Module become failure for some reason.')
hwOpticalFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalFailResume.setStatus('current')
if mibBuilder.loadTexts: hwOpticalFailResume.setDescription('Optical Module resume from failure.')
hwOpticalInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalInvalid.setStatus('current')
if mibBuilder.loadTexts: hwOpticalInvalid.setDescription('Optical Module is invalid for some reason.')
hwOpticalInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwOpticalInvalidResume.setDescription('Optical Module resume from invalid situation.')
hwOpticalPowerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 7)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarmName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalPowerAlarm.setStatus('current')
if mibBuilder.loadTexts: hwOpticalPowerAlarm.setDescription('Temperature rise over or fall below the warning alarm threshold. Only indicate the temperature of board,card or optical module.')
hwOpticalPowerAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 4, 8)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarmName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwOpticalPowerAlarmResume.setStatus('current')
if mibBuilder.loadTexts: hwOpticalPowerAlarmResume.setDescription('Temperature rise over or fall below the warning alarm threshold. Only indicate the temperature of board,card or optical module.')
hwPowerTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5))
hwPowerRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerRemove.setStatus('current')
if mibBuilder.loadTexts: hwPowerRemove.setDescription('Power has been removed.')
hwPowerInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerInsert.setStatus('current')
if mibBuilder.loadTexts: hwPowerInsert.setDescription('Power has been inserted.')
hwPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerFail.setStatus('current')
if mibBuilder.loadTexts: hwPowerFail.setDescription('Power become failure for some reason.')
hwPowerFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerFailResume.setStatus('current')
if mibBuilder.loadTexts: hwPowerFailResume.setDescription('Power resume from failure.')
hwPowerInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerInvalid.setStatus('current')
if mibBuilder.loadTexts: hwPowerInvalid.setDescription('Power is invalid for some reason.')
hwPowerInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwPowerInvalidResume.setDescription('Power resume from invalid situation.')
hwPowerUnusable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 7)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerUnusable.setStatus('current')
if mibBuilder.loadTexts: hwPowerUnusable.setDescription('Power change to unusable status.')
hwPowerUnusableResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 5, 8)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPowerUnusableResume.setStatus('current')
if mibBuilder.loadTexts: hwPowerUnusableResume.setDescription('Power change to usable status.')
hwFanTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6))
hwFanRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanRemove.setStatus('current')
if mibBuilder.loadTexts: hwFanRemove.setDescription('Fan has been removed.')
hwFanInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanInsert.setStatus('current')
if mibBuilder.loadTexts: hwFanInsert.setDescription('Fan has been inserted.')
hwFanFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanFail.setStatus('current')
if mibBuilder.loadTexts: hwFanFail.setDescription('Fan become failure for some reason.')
hwFanFailResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanFailResume.setStatus('current')
if mibBuilder.loadTexts: hwFanFailResume.setDescription('Fan resume from failure.')
hwFanInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanInvalid.setStatus('current')
if mibBuilder.loadTexts: hwFanInvalid.setDescription('Fan is invalid for some reason.')
hwFanInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwFanInvalidResume.setDescription('Fan resume from invalid situation.')
hwFanUnusable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 7)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanUnusable.setStatus('current')
if mibBuilder.loadTexts: hwFanUnusable.setDescription('Fan change to unusable status.')
hwFanUnusableResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 6, 8)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFanUnusableResume.setStatus('current')
if mibBuilder.loadTexts: hwFanUnusableResume.setDescription('Fan change to usable status.')
hwLcdTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7))
hwLcdRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdRemove.setStatus('current')
if mibBuilder.loadTexts: hwLcdRemove.setDescription('Lcd has been removed.')
hwLcdInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdInsert.setStatus('current')
if mibBuilder.loadTexts: hwLcdInsert.setDescription('Lcd has been inserted.')
hwLcdInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdInvalid.setStatus('current')
if mibBuilder.loadTexts: hwLcdInvalid.setDescription('Lcd is invalid for some reason.')
hwLcdInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwLcdInvalidResume.setDescription('Lcd resume from invalid situation.')
hwLcdUnusable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdUnusable.setStatus('current')
if mibBuilder.loadTexts: hwLcdUnusable.setDescription('Lcd change to unusable status.')
hwLcdUnusableResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 7, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwLcdUnusableResume.setStatus('current')
if mibBuilder.loadTexts: hwLcdUnusableResume.setDescription('Lcd change to usable status.')
hwCmuTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8))
hwCmuRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuRemove.setStatus('current')
if mibBuilder.loadTexts: hwCmuRemove.setDescription('Cmu has been removed.')
hwCmuInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuInsert.setStatus('current')
if mibBuilder.loadTexts: hwCmuInsert.setDescription('Cmu has been inserted.')
hwCmuInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuInvalid.setStatus('current')
if mibBuilder.loadTexts: hwCmuInvalid.setDescription('Cmu is invalid for some reason.')
hwCmuInvalidResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuInvalidResume.setStatus('current')
if mibBuilder.loadTexts: hwCmuInvalidResume.setDescription('Cmu reusme from invalid situation.')
hwCmuUnusable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuUnusable.setStatus('current')
if mibBuilder.loadTexts: hwCmuUnusable.setDescription('Cmu change to unusable status.')
hwCmuUnusableResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 8, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCmuUnusableResume.setStatus('current')
if mibBuilder.loadTexts: hwCmuUnusableResume.setDescription('Cmu change to usable status.')
hwCommunicateTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 9))
hwCommunicateError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 9, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityCommunicateType"))
if mibBuilder.loadTexts: hwCommunicateError.setStatus('current')
if mibBuilder.loadTexts: hwCommunicateError.setDescription('Communication error has been detected.')
hwCommunicateResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 9, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityCommunicateType"))
if mibBuilder.loadTexts: hwCommunicateResume.setStatus('current')
if mibBuilder.loadTexts: hwCommunicateResume.setDescription('Resume from communication error situation.')
hwEnvironmentTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10))
hwTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwTempAlarm.setStatus('current')
if mibBuilder.loadTexts: hwTempAlarm.setDescription('Temperature rise over or fall below the alarm threshold.')
hwTempResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwTempResume.setStatus('current')
if mibBuilder.loadTexts: hwTempResume.setDescription('Temperature back to normal level.')
hwHumidityAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwHumidityAlarm.setStatus('current')
if mibBuilder.loadTexts: hwHumidityAlarm.setDescription('Humidity rise over or fall below the alarm threshold.')
hwHumidityResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 4)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwHumidityResume.setStatus('current')
if mibBuilder.loadTexts: hwHumidityResume.setDescription('Humidity back to normal level.')
hwVoltAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 5)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwVoltAlarm.setStatus('current')
if mibBuilder.loadTexts: hwVoltAlarm.setDescription('Voltage of power rise over or fall below the alarm threshold.')
hwVoltResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 6)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwVoltResume.setStatus('current')
if mibBuilder.loadTexts: hwVoltResume.setDescription('Voltage back to normal level.')
hwGateAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 7)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwGateAlarm.setStatus('current')
if mibBuilder.loadTexts: hwGateAlarm.setDescription('Gate switch to the alarm status.')
hwGateResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 8)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwGateResume.setStatus('current')
if mibBuilder.loadTexts: hwGateResume.setDescription('Gate switch to normal status.')
hwFogAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 9)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFogAlarm.setStatus('current')
if mibBuilder.loadTexts: hwFogAlarm.setDescription('Fog rise over alarm threshold.')
hwFogResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 10)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFogResume.setStatus('current')
if mibBuilder.loadTexts: hwFogResume.setDescription('Fog back to normal level.')
hwUnstableAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 11)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUnstableAlarm.setStatus('current')
if mibBuilder.loadTexts: hwUnstableAlarm.setDescription('Entity has been inserted but position unstable.')
hwUnstableResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 12)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUnstableResume.setStatus('current')
if mibBuilder.loadTexts: hwUnstableResume.setDescription('Resume from entity position unstable situation.')
hwBrdTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 13)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBrdTempAlarm.setStatus('current')
if mibBuilder.loadTexts: hwBrdTempAlarm.setDescription('Temperature rise over or fall below the warning alarm threshold. Only indicate the temperature of board,card or optical module.')
hwBrdTempResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 14)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBrdTempResume.setStatus('current')
if mibBuilder.loadTexts: hwBrdTempResume.setDescription('Temperature back to normal level. Only indicate the temperature of board,card or optical module.')
hwBrdTempFatalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 15)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCritical"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBrdTempFatalAlarm.setStatus('current')
if mibBuilder.loadTexts: hwBrdTempFatalAlarm.setDescription('Temperature rise over or fall below the critical alarm threshold. Only indicate the temperature of board,card or optical module.')
hwBrdTempFatalResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 16)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCritical"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwBrdTempFatalResume.setStatus('current')
if mibBuilder.loadTexts: hwBrdTempFatalResume.setDescription('Temperature back to normal level. Only indicate the temperature of board,card or optical module.')
hwPowerFailureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 17))
if mibBuilder.loadTexts: hwPowerFailureAlarm.setStatus('current')
if mibBuilder.loadTexts: hwPowerFailureAlarm.setDescription('Power supply failed.')
hwPowerFailureResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 10, 18))
if mibBuilder.loadTexts: hwPowerFailureResume.setStatus('current')
if mibBuilder.loadTexts: hwPowerFailureResume.setDescription('Power supply resumed.')
hwSystemConfigTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 11))
hwSystemConfigError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 11, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwSystemConfigError.setStatus('current')
if mibBuilder.loadTexts: hwSystemConfigError.setDescription('System configuration error has been detected.')
hwSystemConfigResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 11, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwSystemConfigResume.setStatus('current')
if mibBuilder.loadTexts: hwSystemConfigResume.setDescription('Resume from system configuration error situation.')
hwSystemRollback = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 11, 3)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"), ("HUAWEI-ENTITY-TRAP-MIB", "hwSoftwareVersion"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStartupSoftwareFileName"))
if mibBuilder.loadTexts: hwSystemRollback.setStatus('current')
if mibBuilder.loadTexts: hwSystemRollback.setDescription('System configuration error has been detected.')
hwPortTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 12))
hwPortDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 12, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPortDown.setStatus('current')
if mibBuilder.loadTexts: hwPortDown.setDescription('One of the port physical connect down.')
hwPortUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 12, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwPortUp.setStatus('current')
if mibBuilder.loadTexts: hwPortUp.setDescription('One of the port physical connect up.')
hwUserDefTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 13))
hwUserDefAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 13, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarmName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefChannel"))
if mibBuilder.loadTexts: hwUserDefAlarm.setStatus('current')
if mibBuilder.loadTexts: hwUserDefAlarm.setDescription('User defined alarm has been detected.')
hwUserDefResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 13, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarmName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefChannel"))
if mibBuilder.loadTexts: hwUserDefResume.setStatus('current')
if mibBuilder.loadTexts: hwUserDefResume.setDescription('Resume from User defined alarm.')
hwCPUTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 14))
hwCPUUtilizationRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 14, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCPUUtilizationRising.setStatus('current')
if mibBuilder.loadTexts: hwCPUUtilizationRising.setDescription('CPU utilization overrun.')
hwCPUUtilizationResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 14, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwCPUUtilizationResume.setStatus('current')
if mibBuilder.loadTexts: hwCPUUtilizationResume.setDescription('CPU utilization back to normal level')
hwMemoryTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 15))
hwMemUtilizationRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 15, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwMemUtilizationRising.setStatus('current')
if mibBuilder.loadTexts: hwMemUtilizationRising.setDescription('Memory utilization overrun.')
hwMemUtilizationResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 15, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwMemUtilizationResume.setStatus('current')
if mibBuilder.loadTexts: hwMemUtilizationResume.setDescription('Memory utilization back to normal level')
hwStorageDevTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 16))
hwStorageDevRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 16, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwStorageDevRemove.setStatus('current')
if mibBuilder.loadTexts: hwStorageDevRemove.setDescription('Memory utilization overrun.')
hwStorageDevInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 16, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwStorageDevInsert.setStatus('current')
if mibBuilder.loadTexts: hwStorageDevInsert.setDescription('Memory utilization back to normal level')
hwPppTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 17))
hwPppLoopbackDetect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 17, 1)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwPppLoopbackDetect.setStatus('current')
if mibBuilder.loadTexts: hwPppLoopbackDetect.setDescription('The interface Loopback is detected.')
hwPppLoopbackDetResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 17, 2)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwPppLoopbackDetResume.setStatus('current')
if mibBuilder.loadTexts: hwPppLoopbackDetResume.setDescription('The interface is recovered from Loopback.')
hwFileStatusTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 18))
hwFileError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 18, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFileError.setStatus('current')
if mibBuilder.loadTexts: hwFileError.setDescription('Memory utilization overrun.')
hwFileErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 18, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwFileErrorResume.setStatus('current')
if mibBuilder.loadTexts: hwFileErrorResume.setDescription('Memory utilization back to normal level')
hwUSBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 19))
hwUSBInsert = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 19, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUSBInsert.setStatus('current')
if mibBuilder.loadTexts: hwUSBInsert.setDescription('The USB device has been inserted.')
hwUSBRemove = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 2, 19, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"))
if mibBuilder.loadTexts: hwUSBRemove.setStatus('current')
if mibBuilder.loadTexts: hwUSBRemove.setDescription('The USB device has been removed.')
hwEntityTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3))
hwEntityTrapCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3, 1))
hwEntityTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3, 1, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityTrapCompliance = hwEntityTrapCompliance.setStatus('current')
if mibBuilder.loadTexts: hwEntityTrapCompliance.setDescription('Compliance statement for agents that provide full support for hwBaseTrapMIB.')
hwEntityTrapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3, 2))
hwEntityObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3, 2, 1)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwEntityPhysicalIndex"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapEntType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityTrapFaultID"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityCommunicateType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdType"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdValue"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCurrent"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdCritical"), ("HUAWEI-ENTITY-TRAP-MIB", "hwEntityThresholdWarning"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarmName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefChannel"), ("HUAWEI-ENTITY-TRAP-MIB", "hwSoftwareVersion"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStartupSoftwareFileName"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityObjectGroup = hwEntityObjectGroup.setStatus('current')
if mibBuilder.loadTexts: hwEntityObjectGroup.setDescription('Group for base trap objects.')
hwEntityTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 219, 3, 2, 2)).setObjects(("HUAWEI-ENTITY-TRAP-MIB", "hwChassisRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwChassisInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwChassisFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwChassisFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwChassisInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwChassisInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardLeaveMaster"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBoardBecomeMaster"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCardInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerUnusable"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerUnusableResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanFail"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanFailResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanUnusable"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFanUnusableResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdUnusable"), ("HUAWEI-ENTITY-TRAP-MIB", "hwLcdUnusableResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuInvalid"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuInvalidResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuUnusable"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCmuUnusableResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCommunicateError"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCommunicateResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwTempAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwTempResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwHumidityAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwHumidityResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwVoltAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwVoltResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwGateAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwGateResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFogAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwFogResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUnstableAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUnstableResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBrdTempAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBrdTempResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBrdTempFatalAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwBrdTempFatalResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerFailureAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPowerFailureResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwSystemConfigError"), ("HUAWEI-ENTITY-TRAP-MIB", "hwSystemConfigResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPortDown"), ("HUAWEI-ENTITY-TRAP-MIB", "hwPortUp"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUserDefResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCPUUtilizationRising"), ("HUAWEI-ENTITY-TRAP-MIB", "hwCPUUtilizationResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwMemUtilizationRising"), ("HUAWEI-ENTITY-TRAP-MIB", "hwMemUtilizationResume"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevRemove"), ("HUAWEI-ENTITY-TRAP-MIB", "hwStorageDevInsert"), ("HUAWEI-ENTITY-TRAP-MIB", "hwSystemRollback"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUpMicroSwitchOpen"), ("HUAWEI-ENTITY-TRAP-MIB", "hwUpMicroSwitchClose"), ("HUAWEI-ENTITY-TRAP-MIB", "hwDownMicroSwitchOpen"), ("HUAWEI-ENTITY-TRAP-MIB", "hwDownMicroSwitchClose"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalPowerAlarm"), ("HUAWEI-ENTITY-TRAP-MIB", "hwOpticalPowerAlarmResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEntityTrapGroup = hwEntityTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwEntityTrapGroup.setDescription('Group for all base traps.')
mibBuilder.exportSymbols("HUAWEI-ENTITY-TRAP-MIB", hwBoardInvalid=hwBoardInvalid, hwPppTrap=hwPppTrap, hwFanUnusable=hwFanUnusable, hwCPUUtilizationRising=hwCPUUtilizationRising, hwOpticalPowerAlarm=hwOpticalPowerAlarm, hwOpticalInsert=hwOpticalInsert, hwEntityThresholdWarning=hwEntityThresholdWarning, hwEntityTrapCompliances=hwEntityTrapCompliances, hwEntityThresholdTable=hwEntityThresholdTable, hwUserDefAlarm=hwUserDefAlarm, hwBoardFailResume=hwBoardFailResume, hwPowerInsert=hwPowerInsert, hwUSBTrap=hwUSBTrap, hwCardInsert=hwCardInsert, hwChassisFail=hwChassisFail, hwCmuUnusableResume=hwCmuUnusableResume, hwStorageDevTrap=hwStorageDevTrap, hwUnstableResume=hwUnstableResume, hwChassisInvalid=hwChassisInvalid, hwMemoryTrap=hwMemoryTrap, hwLcdUnusableResume=hwLcdUnusableResume, hwFanInvalid=hwFanInvalid, hwPortDown=hwPortDown, hwBoardRemove=hwBoardRemove, hwFileError=hwFileError, hwPortUp=hwPortUp, hwMemUtilizationResume=hwMemUtilizationResume, hwEntityTrapMIB=hwEntityTrapMIB, hwPowerTrap=hwPowerTrap, hwCommunicateResume=hwCommunicateResume, hwSystemConfigResume=hwSystemConfigResume, hwCmuInvalidResume=hwCmuInvalidResume, hwBoardInsert=hwBoardInsert, hwCPUTrap=hwCPUTrap, hwBoardTrap=hwBoardTrap, hwCPUUtilizationResume=hwCPUUtilizationResume, hwPppLoopbackDetect=hwPppLoopbackDetect, hwFileErrorResume=hwFileErrorResume, hwEntityPhysicalIndex=hwEntityPhysicalIndex, hwLcdRemove=hwLcdRemove, hwEntityTraps=hwEntityTraps, hwCommunicateTrap=hwCommunicateTrap, hwEntityTrapFaultID=hwEntityTrapFaultID, hwOpticalInvalidResume=hwOpticalInvalidResume, hwFanTrap=hwFanTrap, hwGateResume=hwGateResume, hwUserDefResume=hwUserDefResume, hwChassisTrap=hwChassisTrap, hwBoardInvalidResume=hwBoardInvalidResume, hwEntityTrapCompliance=hwEntityTrapCompliance, hwLcdInvalid=hwLcdInvalid, hwBoardLeaveMaster=hwBoardLeaveMaster, hwFanInsert=hwFanInsert, hwStartupSoftwareFileName=hwStartupSoftwareFileName, hwFogAlarm=hwFogAlarm, hwDownMicroSwitchOpen=hwDownMicroSwitchOpen, hwTempResume=hwTempResume, hwBrdTempFatalResume=hwBrdTempFatalResume, hwTempAlarm=hwTempAlarm, hwFanRemove=hwFanRemove, hwCardTrap=hwCardTrap, hwVoltAlarm=hwVoltAlarm, hwCmuInsert=hwCmuInsert, hwCardInvalid=hwCardInvalid, hwChassisFailResume=hwChassisFailResume, hwBrdTempAlarm=hwBrdTempAlarm, hwEnvironmentTrap=hwEnvironmentTrap, hwHumidityResume=hwHumidityResume, hwPowerInvalidResume=hwPowerInvalidResume, hwOpticalInvalid=hwOpticalInvalid, hwEntityObjectGroup=hwEntityObjectGroup, hwBoardFail=hwBoardFail, hwSoftwareVersion=hwSoftwareVersion, hwPowerFailResume=hwPowerFailResume, hwEntityTrapGroups=hwEntityTrapGroups, hwEntityCommunicateType=hwEntityCommunicateType, hwPortTrap=hwPortTrap, hwSystemConfigError=hwSystemConfigError, hwPowerUnusable=hwPowerUnusable, hwUpMicroSwitchOpen=hwUpMicroSwitchOpen, hwLcdTrap=hwLcdTrap, hwUnstableAlarm=hwUnstableAlarm, hwCmuInvalid=hwCmuInvalid, hwUserDefChannel=hwUserDefChannel, hwEntityThresholdEntry=hwEntityThresholdEntry, hwOpticalPowerAlarmResume=hwOpticalPowerAlarmResume, hwCmuTrap=hwCmuTrap, hwPowerInvalid=hwPowerInvalid, hwCmuRemove=hwCmuRemove, hwPowerFail=hwPowerFail, hwVoltResume=hwVoltResume, hwMemUtilizationRising=hwMemUtilizationRising, hwDownMicroSwitchClose=hwDownMicroSwitchClose, hwBrdTempResume=hwBrdTempResume, hwChassisInvalidResume=hwChassisInvalidResume, hwCommunicateError=hwCommunicateError, hwStorageDevRemove=hwStorageDevRemove, hwLcdUnusable=hwLcdUnusable, hwOpticalFailResume=hwOpticalFailResume, PYSNMP_MODULE_ID=hwEntityTrapMIB, hwUpMicroSwitchClose=hwUpMicroSwitchClose, hwFanUnusableResume=hwFanUnusableResume, hwSystemConfigTrap=hwSystemConfigTrap, hwEntityTrapEntType=hwEntityTrapEntType, hwStorageDevInsert=hwStorageDevInsert, hwPowerUnusableResume=hwPowerUnusableResume, hwEntityTrapGroup=hwEntityTrapGroup, hwFanInvalidResume=hwFanInvalidResume, hwBrdTempFatalAlarm=hwBrdTempFatalAlarm, hwBoardBecomeMaster=hwBoardBecomeMaster, hwUSBInsert=hwUSBInsert, hwOpticalRemove=hwOpticalRemove, hwCardFailResume=hwCardFailResume, hwCardRemove=hwCardRemove, hwFogResume=hwFogResume, hwChassisRemove=hwChassisRemove, hwGateAlarm=hwGateAlarm, hwEntityTrapObject=hwEntityTrapObject, hwFileStatusTrap=hwFileStatusTrap, hwUserDefAlarmName=hwUserDefAlarmName, hwEntityThresholdType=hwEntityThresholdType, hwFanFail=hwFanFail, hwUSBRemove=hwUSBRemove, hwHumidityAlarm=hwHumidityAlarm, hwStorageDevName=hwStorageDevName, hwOpticalFail=hwOpticalFail, hwEntityTrapConformance=hwEntityTrapConformance, hwChassisInsert=hwChassisInsert, hwSystemRollback=hwSystemRollback, hwEntityThresholdCritical=hwEntityThresholdCritical, hwPowerFailureAlarm=hwPowerFailureAlarm, hwCardInvalidResume=hwCardInvalidResume, hwPowerRemove=hwPowerRemove, hwOpticalTrap=hwOpticalTrap, hwUserDefTrap=hwUserDefTrap, hwFanFailResume=hwFanFailResume, hwLcdInsert=hwLcdInsert, hwCmuUnusable=hwCmuUnusable, hwPowerFailureResume=hwPowerFailureResume, hwLcdInvalidResume=hwLcdInvalidResume, hwCardFail=hwCardFail, hwPppLoopbackDetResume=hwPppLoopbackDetResume, hwEntityThresholdValue=hwEntityThresholdValue, hwEntityThresholdCurrent=hwEntityThresholdCurrent)
