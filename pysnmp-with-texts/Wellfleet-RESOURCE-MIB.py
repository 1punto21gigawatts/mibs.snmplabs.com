#
# PySNMP MIB module Wellfleet-RESOURCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-RESOURCE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:41:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, MibIdentifier, iso, Unsigned32, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, Integer32, TimeTicks, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "MibIdentifier", "iso", "Unsigned32", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "Integer32", "TimeTicks", "Counter64", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfGameGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfGameGroup")
wfResourceUseTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6), )
if mibBuilder.loadTexts: wfResourceUseTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseTable.setDescription('Table of Resource Use Statistic entries, indexed by entity number and slot number')
wfResourceUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1), ).setIndexNames((0, "Wellfleet-RESOURCE-MIB", "wfResourceUseEntity"), (0, "Wellfleet-RESOURCE-MIB", "wfResourceUseSlot"))
if mibBuilder.loadTexts: wfResourceUseEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseEntry.setDescription("A particular entity's resource use statistics on a slot")
wfResourceUseEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163))).clone(namedValues=NamedValues(("kernel", 1), ("enet2", 2), ("qenet", 3), ("fddi", 4), ("dsde2", 5), ("qsync", 6), ("dtok", 7), ("dst", 8), ("t1", 9), ("e1", 10), ("hssi", 11), ("lance", 12), ("ilacc", 13), ("fsi", 14), ("tms380", 15), ("hdlc", 16), ("ds2180", 17), ("ds2181", 18), ("hwf", 19), ("hfsi", 20), ("ip", 21), ("drs", 22), ("vines", 23), ("at", 24), ("xns", 25), ("ipx", 26), ("osi", 27), ("x25", 28), ("fr", 29), ("rarp", 30), ("atmdxi", 31), ("dls", 32), ("arp", 33), ("tftp", 34), ("snmp", 35), ("tn", 36), ("tcp", 37), ("bgp", 38), ("egp", 39), ("ospf", 40), ("wan", 41), ("llc", 42), ("lnm", 43), ("ppp", 44), ("pcap", 45), ("mct1e1", 46), ("munich", 47), ("quicsync", 48), ("hilance", 49), ("asnmod", 50), ("lapb", 51), ("efddi", 52), ("hlsin", 53), ("debug", 54), ("frswcngc", 55), ("swmgr", 56), ("mct1", 57), ("municht1", 58), ("frswmap", 59), ("atm", 60), ("atmalc", 61), ("nbase", 62), ("sdlc", 63), ("nbip", 64), ("dvmrp", 65), ("igmp", 66), ("isdn", 67), ("lm", 68), ("ping", 69), ("appnls", 70), ("appncp", 71), ("wcp", 72), ("isac", 73), ("chipcom", 74), ("ftp", 75), ("smdssw", 76), ("hdwanlm", 77), ("sysl", 78), ("atmcmod", 79), ("bgprs", 80), ("crm", 81), ("st2", 82), ("dcmmw", 83), ("nsc100m", 84), ("de100", 85), ("nlsp", 86), ("hwcomp", 87), ("stats", 88), ("atmzdrv", 89), ("ipex", 90), ("npt", 91), ("rredund", 92), ("atmsig", 93), ("atmle", 94), ("atmc5000", 95), ("ip6", 96), ("bot", 97), ("pim", 98), ("lbc", 99), ("atmmcs", 100), ("atmasm", 101), ("cpm", 102), ("baysig", 103), ("scmipc", 104), ("ntp", 105), ("raesa", 106), ("radius", 107), ("hdwancop", 108), ("rcmds", 109), ("dns", 110), ("fnts", 111), ("fntsatm", 112), ("wep", 113), ("rip6", 114), ("frsvc", 115), ("aot", 116), ("mospf", 117), ("rsvp", 118), ("nat", 119), ("frpt", 120), ("http", 121), ("stacppp", 122), ("asr", 123), ("nhrp", 124), ("ahb", 125), ("l2tp", 126), ("isdb", 127), ("vcct", 128), ("rmonstat", 129), ("tag1q", 130), ("mps", 131), ("mpc", 132), ("dvs", 133), ("vrrp", 134), ("dhcp", 135), ("capi", 136), ("ipsec", 137), ("mplsLdp", 138), ("mplsMlm", 139), ("hid", 140), ("scd", 141), ("iftab", 142), ("gns", 143), ("acct", 144), ("bpkg", 145), ("bacdmux", 146), ("atmtp", 147), ("ifpdrv", 148), ("amd100m", 149), ("iisis", 150), ("sqe100", 151), ("seeq100m", 152), ("gigenet", 153), ("sgig", 154), ("diffserv", 155), ("copsc", 156), ("ike", 157), ("bcc", 158), ("tdmmgr", 159), ("pq2dsync", 160), ("voip", 161), ("dsqms", 162), ("qscop", 163)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseEntity.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseEntity.setDescription('The entity number is the first index')
wfResourceUseSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseSlot.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseSlot.setDescription('The slot number is the second index')
wfResourceUseEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseEntityName.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseEntityName.setDescription('The name of the entity')
wfResourceUseCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseCpu.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseCpu.setDescription('The amount of CPU used by the entity on this slot in centiseconds since the slot started')
wfResourceUseMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseMemory.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseMemory.setDescription('The current number of bytes of memory used by the entity on this slot')
wfResourceUseBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceUseBuffers.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceUseBuffers.setDescription('The current number of buffers used by the entity on this slot')
wfResourceTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7), )
if mibBuilder.loadTexts: wfResourceTotalTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalTable.setDescription('Table of Total Resource Use Statistics indexed by slot number')
wfResourceTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1), ).setIndexNames((0, "Wellfleet-RESOURCE-MIB", "wfResourceTotalSlot"))
if mibBuilder.loadTexts: wfResourceTotalEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalEntry.setDescription("A particular slot's total resource use statistics")
wfResourceTotalSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalSlot.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalSlot.setDescription('The slot number is the index')
wfResourceTotalCpuUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalCpuUsed.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalCpuUsed.setDescription('The amount of CPU used by all the entities on this slot in centiseconds since the slot started')
wfResourceTotalCpuIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalCpuIdle.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalCpuIdle.setDescription('The amount of Idle CPU on this slot in centiseconds since the slot started')
wfResourceTotalCpuMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalCpuMax.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalCpuMax.setDescription('The maximum amount of CPU time possible on this slot in centiseconds since the slot started')
wfResourceTotalMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalMemoryUsed.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalMemoryUsed.setDescription('The current number of bytes of memory used by all the entities on the slot')
wfResourceTotalMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalMemoryFree.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalMemoryFree.setDescription('The current number of bytes of free memory on the slot')
wfResourceTotalMemoryMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalMemoryMax.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalMemoryMax.setDescription('The maximum amount of Memory available in bytes on the slot')
wfResourceTotalBuffersUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalBuffersUsed.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalBuffersUsed.setDescription('The current number of buffers used by all the entities on the slot')
wfResourceTotalBuffersFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalBuffersFree.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalBuffersFree.setDescription('The current number of free buffers on the slot')
wfResourceTotalBuffersMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfResourceTotalBuffersMax.setStatus('mandatory')
if mibBuilder.loadTexts: wfResourceTotalBuffersMax.setDescription('The maximum number of buffers on the slot')
mibBuilder.exportSymbols("Wellfleet-RESOURCE-MIB", wfResourceUseBuffers=wfResourceUseBuffers, wfResourceTotalMemoryFree=wfResourceTotalMemoryFree, wfResourceUseMemory=wfResourceUseMemory, wfResourceUseEntityName=wfResourceUseEntityName, wfResourceTotalEntry=wfResourceTotalEntry, wfResourceTotalBuffersFree=wfResourceTotalBuffersFree, wfResourceUseCpu=wfResourceUseCpu, wfResourceTotalSlot=wfResourceTotalSlot, wfResourceTotalMemoryMax=wfResourceTotalMemoryMax, wfResourceUseSlot=wfResourceUseSlot, wfResourceTotalCpuIdle=wfResourceTotalCpuIdle, wfResourceTotalBuffersMax=wfResourceTotalBuffersMax, wfResourceTotalCpuUsed=wfResourceTotalCpuUsed, wfResourceUseEntry=wfResourceUseEntry, wfResourceTotalCpuMax=wfResourceTotalCpuMax, wfResourceUseTable=wfResourceUseTable, wfResourceTotalMemoryUsed=wfResourceTotalMemoryUsed, wfResourceTotalBuffersUsed=wfResourceTotalBuffersUsed, wfResourceTotalTable=wfResourceTotalTable, wfResourceUseEntity=wfResourceUseEntity)
