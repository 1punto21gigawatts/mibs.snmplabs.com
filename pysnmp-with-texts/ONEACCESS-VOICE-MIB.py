#
# PySNMP MIB module ONEACCESS-VOICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-VOICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:34:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
oacExpIMVoice, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMVoice", "oacMIBModules")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Counter64, NotificationType, iso, ObjectIdentity, Integer32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, ModuleIdentity, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "NotificationType", "iso", "ObjectIdentity", "Integer32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "ModuleIdentity", "Unsigned32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
oacVoiceMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 801))
oacVoiceMIBModule.setRevisions(('2013-05-03 00:00', '2011-10-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: oacVoiceMIBModule.setRevisionsDescriptions(('Add oacVoiceSipGwMaxToRegisterEndpoints see PR 56028', 'Contact updated',))
if mibBuilder.loadTexts: oacVoiceMIBModule.setLastUpdated('201305030000Z')
if mibBuilder.loadTexts: oacVoiceMIBModule.setOrganization(' OneAccess ')
if mibBuilder.loadTexts: oacVoiceMIBModule.setContactInfo('Pascal KESTELOOT Postal: ONE ACCESS 381 Avenue du Gnral de Gaulle 92140 Clamart, France FRANCE Tel: (+33) 01 41 87 70 00 Fax: (+33) 01 41 87 74 00 E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacVoiceMIBModule.setDescription('This MIB module describes Voice Managed objects.')
class VoiceFxsPortStatus(TextualConvention, Integer32):
    description = 'Available values for Fxs voice port status.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("blocked", 1), ("unblocked", 2))

class VoiceFxsPathStatus(TextualConvention, Integer32):
    description = 'Available values for Fxs voice path status.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("idle", 0), ("established", 1))

class VoicePriPhPortType(TextualConvention, Integer32):
    description = 'Physical port type for a pri voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4))
    namedValues = NamedValues(("e1", 3), ("t1", 4))

class VoicePriProtocol(TextualConvention, Integer32):
    description = 'Protocol types for a pri voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 255))
    namedValues = NamedValues(("e1Pri", 3), ("e1Cas", 4), ("t1Pri", 5), ("t1Cas", 6), ("none", 255))

class VoiceBriProtocol(TextualConvention, Integer32):
    description = 'Protocol types for a bri voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("briNt", 1), ("briTe", 2))

class VoiceFxsProtocol(TextualConvention, Integer32):
    description = 'Protocol types for a fxs voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(3, 4, 5))
    namedValues = NamedValues(("onHook", 3), ("offHook", 4), ("ringing", 5))

class VoiceAcDeacState(TextualConvention, Integer32):
    description = 'Activated-deactivated state.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("activated", 1), ("deactivated", 2))

class VoiceUpDnState(TextualConvention, Integer32):
    description = 'Up-down state.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class VoiceBriPortStatus(TextualConvention, Integer32):
    description = 'Available status values for a bri voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("undefined", 0), ("blocked", 1), ("unblocked", 2), ("activated", 3), ("deactivated", 4))

class VoiceIOCoder(TextualConvention, Integer32):
    description = 'Voice coder type for input-output.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("g711-64", 1), ("g726-32", 2), ("g726-40", 3), ("sid", 4), ("ces", 5), ("fax", 6))

class VoiceBearerCap(TextualConvention, Integer32):
    description = 'Available bearer capability types.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("voice", 0), ("voice-band", 1), ("unrestricted", 2))

class VoiceChnType(TextualConvention, Integer32):
    description = 'Channel type for a voice port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("signalling", 0), ("voice", 1))

class VoipPortType(TextualConvention, Integer32):
    description = 'Values for VoIP Port type'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("fxo", 1), ("fxs", 2), ("bri", 3), ("pri", 4))

class IsdnProtocolDescriptor(TextualConvention, Integer32):
    description = 'Values for Isdn Protocols'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))
    namedValues = NamedValues(("briNt", 1), ("briTe", 2), ("e1Pri", 3), ("e1Cas", 4), ("t1Pri", 5), ("t1Cas", 6), ("none", 255))

class PortVoipCurrentState(TextualConvention, Integer32):
    description = 'Values for VoIP current state'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("undefined", 0), ("activated", 1), ("deactivated", 2), ("onhook", 3), ("offhook", 4), ("ringing", 5))

class ConfigState(TextualConvention, Integer32):
    description = 'Values for Port configuration State'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class IsdnLayerStatus(TextualConvention, Integer32):
    description = 'Values for ISDN layer status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("activated", 1), ("deactivated", 2))

class OacVoipGatewayState(TextualConvention, Integer32):
    description = 'values of gateway state'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("down", 0), ("up", 1))

class OacVoipPriPhysicalType(TextualConvention, Integer32):
    description = 'values for PRI physical type'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("ptE1", 0), ("ptT1", 1), ("none", 2))

class OacVoipGatewayStateReason(TextualConvention, Integer32):
    description = 'Values for VoIP gateway state reasons'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("shutdown", 1), ("autoconfigDown", 2), ("interfaceDown", 3), ("invalidIpAddress", 4))

class OacVoipGatewayRegistrationState(TextualConvention, Integer32):
    description = 'Gateway registration state'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("unregistered", 0), ("registered", 1))

class OacH323GwRasBwControl(TextualConvention, Integer32):
    description = 'H323 Gw RAS Bandwidth Control is enabled or disabled'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disable", 0), ("enable", 1))

class OacH323GwPortabilityStatus(TextualConvention, Integer32):
    description = 'H323 Gateway Portability Status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("undefined", 0), ("enable", 1), ("inProgress", 2), ("done", 3))

class OacVoipMgcpGatewayConnectionState(TextualConvention, Integer32):
    description = 'MGCP Gateway connection state'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disconnected", 0), ("connected", 1))

class OacVoiceSipGwPhoneState(TextualConvention, Integer32):
    description = 'SIP Gateway phone registration state'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("registering", 0), ("registered", 1))

oacExpIMVoiceStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2))
oacVoiceStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1))
oacVoiceStatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 2))
oacVoiceStatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 3))
oacVoiceStatGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1))
oacVoiceStatBles = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2))
oacVoicePortBles = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1))
oacVoiceDialPeerBles = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2))
oacVoiceConnectionBles = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3))
oacVoiceStatVoip = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3))
oacVoiceFxsPorts = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceFxsPorts.setStatus('current')
if mibBuilder.loadTexts: oacVoiceFxsPorts.setDescription('Total number of fxs voice ports.')
oacVoiceBriPorts = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceBriPorts.setStatus('current')
if mibBuilder.loadTexts: oacVoiceBriPorts.setDescription('Total number of bri voice ports.')
oacVoicePriPorts = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePriPorts.setStatus('current')
if mibBuilder.loadTexts: oacVoicePriPorts.setDescription('Total number of pri voice ports.')
oacVoiceVmoaConnections = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnections.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnections.setDescription('Total number of vmoa connections.')
oacVoiceVtoaConnections = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnections.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnections.setDescription('Total number of vtoa connections.')
oacVoiceFxsDialPeers = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceFxsDialPeers.setStatus('current')
if mibBuilder.loadTexts: oacVoiceFxsDialPeers.setDescription('Total number of fxs dial peers.')
oacVoiceBriDialPeers = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceBriDialPeers.setStatus('current')
if mibBuilder.loadTexts: oacVoiceBriDialPeers.setDescription('Total number of bri dial peers.')
oacVoicePriDialPeers = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePriDialPeers.setStatus('current')
if mibBuilder.loadTexts: oacVoicePriDialPeers.setDescription('Total number of pri dial peers.')
oacVoiceVoicePortFxsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1), )
if mibBuilder.loadTexts: oacVoiceVoicePortFxsTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsTable.setDescription('Fxs voice port table.')
oacVoiceVoicePortFxsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsIfIndex"))
if mibBuilder.loadTexts: oacVoiceVoicePortFxsEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsEntry.setDescription('Fxs voice port table entry.')
oacVoiceVoicePortFxsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsIfIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsIfIndex.setDescription('Interface index for this fxs voice port.')
oacVoiceVoicePortVoicePortFxs = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortFxs.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortFxs.setDescription('Module/Line description.')
oacVoiceVoicePortFxsProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 3), VoiceFxsProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsProtocolState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsProtocolState.setDescription('Protocol port status.')
oacVoiceVoicePortFxsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 4), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsOperState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsOperState.setDescription('Operator port status.')
oacVoiceVoicePortFxsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 5), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsAdminState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsAdminState.setDescription('Admin port status.')
oacVoiceVoicePortFxsConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 6), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsConfigState.setDescription('Config status.')
oacVoiceVoicePortFxsAttachedDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsAttachedDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsAttachedDialPeer.setDescription('Attached vmoa dial peer.')
oacVoiceVoicePortFxsVoiceCommNb = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortFxsVoiceCommNb.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortFxsVoiceCommNb.setDescription('Voice communication number.')
oacVoiceVoicePortBriTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2), )
if mibBuilder.loadTexts: oacVoiceVoicePortBriTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriTable.setDescription('Bri voice port table.')
oacVoiceVoicePortBriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriIfIndex"))
if mibBuilder.loadTexts: oacVoiceVoicePortBriEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriEntry.setDescription('Bri voice port table entry.')
oacVoiceVoicePortBriIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriIfIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriIfIndex.setDescription('Interface index for this bri voice port.')
oacVoiceVoicePortVoicePortBri = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortBri.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortBri.setDescription('Module/Line description.')
oacVoiceVoicePortBriProtocolDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 3), VoiceBriProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriProtocolDescriptor.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriProtocolDescriptor.setDescription('Protocol interface description.')
oacVoiceVoicePortBriProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 4), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriProtocolState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriProtocolState.setDescription('ELCP port status.')
oacVoiceVoicePortBriOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 5), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriOperState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriOperState.setDescription('Operator port status.')
oacVoiceVoicePortBriAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 6), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriAdminState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriAdminState.setDescription('Admin port status.')
oacVoiceVoicePortBriConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 7), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriConfigState.setDescription('Config port status.')
oacVoiceVoicePortBriLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 8), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriLayer1.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriLayer1.setDescription('Layer 1 status.')
oacVoiceVoicePortBriAttachedDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriAttachedDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriAttachedDialPeer.setDescription('Attached vmoa dial peer.')
oacVoiceVoicePortBriVoiceCommNb = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortBriVoiceCommNb.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortBriVoiceCommNb.setDescription('Voice communication number.')
oacVoiceVoicePortPriTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3), )
if mibBuilder.loadTexts: oacVoiceVoicePortPriTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriTable.setDescription('Pri voice port table.')
oacVoiceVoicePortPriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriIfIndex"))
if mibBuilder.loadTexts: oacVoiceVoicePortPriEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriEntry.setDescription('Pri voice port table entry.')
oacVoiceVoicePortPriIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriIfIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriIfIndex.setDescription('Interface index for this pri voice port.')
oacVoiceVoicePortVoicePortPri = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortPri.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortVoicePortPri.setDescription('Module/Line description.')
oacVoiceVoicePortPriPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 3), VoicePriPhPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriPhysicalType.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriPhysicalType.setDescription('Physical interface description.')
oacVoiceVoicePortPriProtocolDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 4), VoicePriProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriProtocolDescriptor.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriProtocolDescriptor.setDescription('Protocol interface description.')
oacVoiceVoicePortPriProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 5), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriProtocolState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriProtocolState.setDescription('Elcp port status.')
oacVoiceVoicePortPriOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 6), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriOperState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriOperState.setDescription('Operator port status.')
oacVoiceVoicePortPriAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 7), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriAdminState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriAdminState.setDescription('Admin port status.')
oacVoiceVoicePortPriConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 8), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriConfigState.setDescription('Config status.')
oacVoiceVoicePortPriLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 9), VoiceAcDeacState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriLayer1.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriLayer1.setDescription('Layer 1 status.')
oacVoiceVoicePortPriAttachedDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriAttachedDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriAttachedDialPeer.setDescription('Attached vmoa dial peer.')
oacVoiceVoicePortPriVoiceCommNb = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriVoiceCommNb.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriVoiceCommNb.setDescription('CommNb of VoicePortPriVoice')
oacVoiceVoicePortPriAisOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriAisOccur.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriAisOccur.setDescription('Occurance of VoicePortPri')
oacVoiceVoicePortPriRdiOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVoicePortPriRdiOccur.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVoicePortPriRdiOccur.setDescription('occurance of Voice ports pririoty')
oacVoiceVmoaConnTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1), )
if mibBuilder.loadTexts: oacVoiceVmoaConnTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnTable.setDescription('Vmoa connection table.')
oacVoiceVmoaConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVmoaConnEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnEntry.setDescription('Vmoa connection table entry.')
oacVoiceVmoaConnConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnConnection.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnConnection.setDescription('Index of this vmoa connection.')
oacVoiceVmoaConnVpVc = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnVpVc.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnVpVc.setDescription('ATM PVC description')
oacVoiceVmoaConnCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 3), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnCurrentState.setDescription('Operator status.')
oacVoiceVmoaConnConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnConfigState.setDescription('Admin description.')
oacVoiceVmoaConnAtmVcFailureOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAtmVcFailureOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAtmVcFailureOccurence.setDescription('Number of PVC failure occurrences.')
oacVoiceVmoaConnAtmVcTotalFailureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAtmVcTotalFailureDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAtmVcTotalFailureDuration.setDescription('Duration of PVC failure.')
oacVoiceVmoaConnLesTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2), )
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTable.setDescription('Vmoa connection les table.')
oacVoiceVmoaConnLesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVmoaConnLesEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesEntry.setDescription('Vmoa connection les table entry.')
oacVoiceVmoaConnLesVoicePathNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLesVoicePathNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesVoicePathNum.setDescription('Number of path establishment.')
oacVoiceVmoaConnLesTotalCpIwfOriginated = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTotalCpIwfOriginated.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTotalCpIwfOriginated.setDescription('Number of paths established by CP.')
oacVoiceVmoaConnLesTotalCoIwfOriginated = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTotalCoIwfOriginated.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesTotalCoIwfOriginated.setDescription('Number of paths established by CO.')
oacVoiceVmoaConnLesCpIwfRestartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLesCpIwfRestartNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesCpIwfRestartNum.setDescription('Number of restart originated by CP.')
oacVoiceVmoaConnLesCoIwfRestartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLesCoIwfRestartNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLesCoIwfRestartNum.setDescription('Number of restart originated by CO.')
oacVoiceVmoaConnElcpTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 3), )
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTable.setDescription('Vmoa connection elcp table.')
oacVoiceVmoaConnElcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 3, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpEntry.setDescription('Vmoa connection elcp table entry.')
oacVoiceVmoaConnElcpTotalSuccessfulAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalSuccessfulAllocation.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalSuccessfulAllocation.setDescription('Number of channel allocation.')
oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation.setDescription('Number of channel allocation failures.')
oacVoiceVmoaConnElcpTotalAllocationDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalAllocationDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnElcpTotalAllocationDuration.setDescription('Duration in seconds of channel allocation.')
oacVoiceVmoaConnLapv5Table = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4), )
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5Table.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5Table.setDescription('Vmoa connection lapv5 table.')
oacVoiceVmoaConnLapv5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5Entry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5Entry.setDescription('Vmoa connection lapv5 table entry.')
oacVoiceVmoaConnLapv5NbrRxFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxFrame.setDescription('Number of frames received in the signal channel.')
oacVoiceVmoaConnLapv5NbrTxFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxFrame.setDescription('Number of frames sent on the signal channel.')
oacVoiceVmoaConnLapv5NbrRxIFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxIFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxIFrame.setDescription('Number of frames received in the signal channel.')
oacVoiceVmoaConnLapv5NbrTxIFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxIFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxIFrame.setDescription('Number of frames sent on the signal channel.')
oacVoiceVmoaConnLapv5NbrRxRejFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxRejFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxRejFrame.setDescription('Number of Reject frames received in the signal channel.')
oacVoiceVmoaConnLapv5NbrTxRejFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxRejFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxRejFrame.setDescription('Number of Reject frames sent on the signal channel.')
oacVoiceVmoaConnLapv5NbrRxRnrFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxRnrFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrRxRnrFrame.setDescription('Number of RNR frames received in the signal channel.')
oacVoiceVmoaConnLapv5NbrTxRnrFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxRnrFrame.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrTxRnrFrame.setDescription('Number of RNR frames sent on the signal channel.')
oacVoiceVmoaConnLapv5NbrT200Expiration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrT200Expiration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnLapv5NbrT200Expiration.setDescription('Number of timer T200 timeout on the signal channel.')
oacVoiceVmoaConnAal2Table = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5), )
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2Table.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2Table.setDescription('Vmoa connection aal2 table.')
oacVoiceVmoaConnAal2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2Entry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2Entry.setDescription('Vmoa connection aal2 table entry.')
oacVoiceVmoaConnAal2TotalFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesReceived.setDescription('Number of Aal2 frames received on the signal channel.')
oacVoiceVmoaConnAal2TotalBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalBytesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalBytesReceived.setDescription('Number of Aal2 bytes received on the signal channel.')
oacVoiceVmoaConnAal2TotalFramesDiscardedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesDiscardedReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesDiscardedReceived.setDescription('Number of Aal2 frames received and discarded on the signal channel.')
oacVoiceVmoaConnAal2TotalFramesErrorsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesErrorsReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesErrorsReceived.setDescription('Number of Aal2 frames received with errors on the signal channel.')
oacVoiceVmoaConnAal2TotalFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesSent.setDescription('Number of Aal2 frames sent on the signal channel.')
oacVoiceVmoaConnAal2TotalBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalBytesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalBytesSent.setDescription('Number of Aal2 bytes sent on the signal channel.')
oacVoiceVmoaConnAal2TotalFramesDiscardedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesDiscardedSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVmoaConnAal2TotalFramesDiscardedSent.setDescription('Number of Aal2 frames discarded when sending on the signal channel.')
oacVoiceVtoaConnTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6), )
if mibBuilder.loadTexts: oacVoiceVtoaConnTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnTable.setDescription('Vtoa connection table.')
oacVoiceVtoaConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVtoaConnEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnEntry.setDescription('Vtoa connection table entry.')
oacVoiceVtoaConnConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnConnection.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnConnection.setDescription('Index of this vtoa connection.')
oacVoiceVtoaConnVpVc = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnVpVc.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnVpVc.setDescription('ATM PVC description.')
oacVoiceVtoaConnCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 3), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnCurrentState.setDescription('Operator status.')
oacVoiceVtoaConnConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnConfigState.setDescription('Admin description.')
oacVoiceVtoaConnAtmVcFailureOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAtmVcFailureOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAtmVcFailureOccurence.setDescription('Number of occurrence of PVC failure.')
oacVoiceVtoaConnAtmVcTotalFailureDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 6, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAtmVcTotalFailureDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAtmVcTotalFailureDuration.setDescription('Duration of PVC failure in seconds.')
oacVoiceVtoaConnAal2Table = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7), )
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2Table.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2Table.setDescription('Vtoa connection aal2 table.')
oacVoiceVtoaConnAal2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnConnection"))
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2Entry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2Entry.setDescription('Vtoa connection aal2 table entry.')
oacVoiceVtoaConnAal2TotalFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesReceived.setDescription('Number of frames received.')
oacVoiceVtoaConnAal2TotalBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalBytesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalBytesReceived.setDescription('Number of bytes received.')
oacVoiceVtoaConnAal2TotalFramesDiscardedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesDiscardedReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesDiscardedReceived.setDescription('Number of frames received and discarded.')
oacVoiceVtoaConnAal2TotalFramesErrorsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesErrorsReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesErrorsReceived.setDescription('Number of frames received with error.')
oacVoiceVtoaConnAal2TotalFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesSent.setDescription('Number of frames sent.')
oacVoiceVtoaConnAal2TotalBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalBytesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalBytesSent.setDescription('Number of bytes sent.')
oacVoiceVtoaConnAal2TotalFramesDiscardedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 3, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesDiscardedSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceVtoaConnAal2TotalFramesDiscardedSent.setDescription('Number of frames discarded and not sent.')
oacVoiceDialPeerVoiceVmoafxsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsTable.setDescription('Dial peer voice vmoa fxs table.')
oacVoiceDialPeerVoiceVmoafxsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsEntry.setDescription('Dial peer voice vmoa fxs table entry.')
oacVoiceDialPeerVoiceVmoafxsDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVmoafxsLinkedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsLinkedPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsLinkedPort.setDescription('Linked physical port.')
oacVoiceDialPeerVoiceVmoafxsCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 3), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentState.setDescription('Operator status.')
oacVoiceDialPeerVoiceVmoafxsPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 4), VoiceFxsPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPortStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPortStatus.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVmoafxsPathStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 5), VoiceFxsPathStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathStatus.setDescription('Voice path status.')
oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 6), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder.setDescription('Current coder used to send digitised voice to uplink stream.')
oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 7), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder.setDescription('Current coder used to receive digitised voice from uplink stream.')
oacVoiceDialPeerVoiceVmofxsCurrentBc = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 8), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmofxsCurrentBc.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmofxsCurrentBc.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVmoafxsCurrentCid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentCid.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsCurrentCid.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVmoafxsBlockingOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsBlockingOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsBlockingOccurence.setDescription('Number of occurrence for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration.setDescription('Duration in seconds for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoafxsVoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsVoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsVoicePacketSent.setDescription('Number of voice packets sent.')
oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived.setDescription('Number of voice packets received.')
oacVoiceDialPeerVoiceVmoafxsPathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathEstablished.setDescription('Number of path established.')
oacVoiceDialPeerVoiceVmoafxsPathRqFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathRqFailed.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathRqFailed.setDescription('Number of path request failures.')
oacVoiceDialPeerVoiceVmoafxsPathDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 1, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoafxsPathDuration.setDescription('Path established duration.')
oacVoiceDialPeerVoiceVmoabriTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriTable.setDescription('Dial peer voice vmoabri table.')
oacVoiceDialPeerVoiceVmoabriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriEntry.setDescription('Dial peer voice vmoabri table entry.')
oacVoiceDialPeerVoiceVmoabriDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVmoabriPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriPort.setDescription('Linked physical Module/Line description.')
oacVoiceDialPeerVoiceVmoabriCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 3), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriCurrentState.setDescription('Operator status.')
oacVoiceDialPeerVoiceVmoabriConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriConfigState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVmoabriPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 5), VoiceBriPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriPortStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriPortStatus.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVmoabriBlockingOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriBlockingOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriBlockingOccurence.setDescription('Number of occurrence for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration.setDescription('Duration in seconds for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoabriBxAllocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriBxAllocNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriBxAllocNum.setDescription('Total number of comms.')
oacVoiceDialPeerVoiceVmoabriB1Table = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Table.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Table.setDescription('Dial peer voice vmoabri b1 channel table.')
oacVoiceDialPeerVoiceVmoabriB1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Entry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Entry.setDescription('Dial peer voice vmoabri b1 channel table entry.')
oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 1), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder.setDescription('Current coder used to send digitized voice to uplink stream.')
oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 2), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder.setDescription('Current coder used to receive digitized voice from uplink stream.')
oacVoiceDialPeerVoiceVmoabriB1CurrentBc = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 3), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentBc.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentBc.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVmoabriB1CurrentCid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentCid.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1CurrentCid.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVmoabriB1BytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1BytesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1BytesSent.setDescription('Number of bytes sent to this route line.')
oacVoiceDialPeerVoiceVmoabriB1BytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1BytesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1BytesReceived.setDescription('Number of bytes sent from this route line.')
oacVoiceDialPeerVoiceVmoabriB1PathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1PathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1PathEstablished.setDescription('Number of path established.')
oacVoiceDialPeerVoiceVmoabriB1PathDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1PathDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1PathDuration.setDescription('Path established duration.')
oacVoiceDialPeerVoiceVmoabriB1Bundle = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Bundle.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB1Bundle.setDescription('Channel bundle info.')
oacVoiceDialPeerVoiceVmoabriB2Table = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Table.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Table.setDescription('Dial peer voice vmoabri b2 channel table.')
oacVoiceDialPeerVoiceVmoabriB2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Entry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Entry.setDescription('Dial peer voice vmoabri b2 channel table entry.')
oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 1), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder.setDescription('Current coder used to send digitised voice to uplink stream.')
oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 2), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder.setDescription('Current coder used to receive digitised voice from uplink stream.')
oacVoiceDialPeerVoiceVmoabriB2CurrentBc = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 3), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentBc.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentBc.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVmoabriB2CurrentCid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentCid.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2CurrentCid.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVmoabriB2BytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2BytesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2BytesSent.setDescription('Number of bytes sent to this route line.')
oacVoiceDialPeerVoiceVmoabriB2BytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2BytesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2BytesReceived.setDescription('Number of bytes sent from this route line.')
oacVoiceDialPeerVoiceVmoabriB2PathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2PathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2PathEstablished.setDescription('Number of path established.')
oacVoiceDialPeerVoiceVmoabriB2PathDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2PathDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2PathDuration.setDescription('Path established duration.')
oacVoiceDialPeerVoiceVmoabriB2Bundle = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Bundle.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriB2Bundle.setDescription('Channel bundle info.')
oacVoiceDialPeerVoiceVmoabriDTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDTable.setDescription('Dial peer voice vmoabri d channel table.')
oacVoiceDialPeerVoiceVmoabriDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDEntry.setDescription('Dial peer voice vmoabri d channel table entry.')
oacVoiceDialPeerVoiceVmoabriDCurrentCid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDCurrentCid.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDCurrentCid.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVmoabriDFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDFramesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDFramesSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVmoabriDFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDFramesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDFramesReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVmoabriDBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDBytesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDBytesSent.setDescription('Number of bytes sent to this route line.')
oacVoiceDialPeerVoiceVmoabriDBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDBytesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoabriDBytesReceived.setDescription('Number of bytes sent from this route line.')
oacVoiceDialPeerVoiceVmoapriTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTable.setDescription('Dial peer vmoapri table.')
oacVoiceDialPeerVoiceVmoapriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriEntry.setDescription('Dial peer vmoapri table entry.')
oacVoiceDialPeerVoiceVmoapriDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVmoapriLinkedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriLinkedPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriLinkedPort.setDescription('Linked physical Module/Line description.')
oacVoiceDialPeerVoiceVmoapriPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 3), VoiceBriPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriPortStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriPortStatus.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVmoapriCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriCurrentState.setDescription('Operator status.')
oacVoiceDialPeerVoiceVmoapriConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 5), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriConfigState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVmoapriBlockingOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriBlockingOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriBlockingOccurence.setDescription('Number of occurrence for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration.setDescription('Duration in seconds for port blocking for this route line.')
oacVoiceDialPeerVoiceVmoapriBxAllocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriBxAllocNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriBxAllocNum.setDescription('Total number of comms.')
oacVoiceDialPeerVoiceVmoapriTsxTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxTable.setDescription('Dial peer voice vmoapri tsx table.')
oacVoiceDialPeerVoiceVmoapriTsxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriDialPeer"), (0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxIndex"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxEntry.setDescription('Dial peer voice vmoapri tsx table entry.')
oacVoiceDialPeerVoiceVmoapriTsxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxIndex.setDescription('Index number of the tsx connection.')
oacVoiceDialPeerVoiceVmoapriTsxChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 2), VoiceChnType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxChannelType.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxChannelType.setDescription('Channel category.')
oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 3), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder.setDescription('Current coder used to send digitised voice to uplink stream.')
oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 4), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder.setDescription('Current coder used to receive digitised voice from uplink stream.')
oacVoiceDialPeerVoiceVmoapriTsxCurrentBC = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 5), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentBC.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentBC.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVmoapriTsxCurrentCID = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentCID.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxCurrentCID.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVtoaccsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTable.setDescription('Dial peer voice vtoaccs table.')
oacVoiceDialPeerVoiceVtoaccsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsEntry.setDescription('Dial peer voice vtoaccs table entry.')
oacVoiceDialPeerVoiceVtoaccsDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVtoaccsLinkedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsLinkedPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsLinkedPort.setDescription('Linked Physical Module/Line description.')
oacVoiceDialPeerVoiceVtoaccsPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 3), VoiceBriPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsPortStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsPortStatus.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVtoaccsCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsCurrentState.setDescription('Operator status.')
oacVoiceDialPeerVoiceVtoaccsConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 5), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsConfigState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVtoaccsBlockingOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsBlockingOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsBlockingOccurence.setDescription('Number of occurrence for port blocking for this route line.')
oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration.setDescription('Duration in seconds for port blocking for this route line.')
oacVoiceDialPeerVoiceVtoaccsBxAllocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsBxAllocNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsBxAllocNum.setDescription('Total number of comms.')
oacVoiceDialPeerVoiceVtoaccsTsxTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxTable.setDescription('Dial peer voice vtoaccs tsx table.')
oacVoiceDialPeerVoiceVtoaccsTsxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsDialPeer"), (0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxIndex"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxEntry.setDescription('Dial peer voice vtoaccs tsx table entry.')
oacVoiceDialPeerVoiceVtoaccsTsxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxIndex.setDescription('Index number of channel.')
oacVoiceDialPeerVoiceVtoaccsTsxChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 2), VoiceChnType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxChannelType.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxChannelType.setDescription('Channel category.')
oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 3), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder.setDescription('Current coder used to send digitised voice to uplink stream.')
oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 4), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder.setDescription('Current coder used to receive digitised voice from uplink stream.')
oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 5), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVtoaccsTsxBundle = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxBundle.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoaccsTsxBundle.setDescription('Channel bundle info.')
oacVoiceDialPeerVoiceVtoacasTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTable.setDescription('Dial peer voice vtoacas table.')
oacVoiceDialPeerVoiceVtoacasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasEntry.setDescription('Dial peer voice vtoacas table entry.')
oacVoiceDialPeerVoiceVtoacasDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVtoacasLinkedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasLinkedPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasLinkedPort.setDescription('Linked Physical Module/Line description.')
oacVoiceDialPeerVoiceVtoacasPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 3), VoiceBriPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasPortStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasPortStatus.setDescription('Operator status.')
oacVoiceDialPeerVoiceVtoacasCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasCurrentState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVtoacasConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 5), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasConfigState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVtoacasBlockingOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasBlockingOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasBlockingOccurence.setDescription('Number of occurrence for port blocking for this route line.')
oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration.setDescription('Duration in seconds for port blocking for this route line.')
oacVoiceDialPeerVoiceVtoacasBxAllocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasBxAllocNum.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasBxAllocNum.setDescription('Total number of comms.')
oacVoiceDialPeerVoiceVtoacasTsxTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxTable.setDescription('Dial peer vtoacas tsx table.')
oacVoiceDialPeerVoiceVtoacasTsxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasDialPeer"), (0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxIndex"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxEntry.setDescription('Dial peer vtoacas tsx table entry.')
oacVoiceDialPeerVoiceVtoacasTsxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxIndex.setDescription('Index number of the tsx connexion.')
oacVoiceDialPeerVoiceVtoacasTsxChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 2), VoiceChnType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxChannelType.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxChannelType.setDescription('Channel category.')
oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 3), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder.setDescription('Current coder used to send digitised voice to uplink stream.')
oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 4), VoiceIOCoder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder.setDescription('Current coder used to receive digitised voice from uplink stream.')
oacVoiceDialPeerVoiceVtoacasTsxCurrentBC = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 5), VoiceBearerCap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentBC.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentBC.setDescription('Current bearer capability used for voice transport.')
oacVoiceDialPeerVoiceVtoacasTsxCurrentCID = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentCID.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxCurrentCID.setDescription('Current CID connection used for voice transport.')
oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent.setDescription('Number of frames sent to this route line.')
oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived.setDescription('Number of frames received from this route line.')
oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent.setDescription('Number of CAS packets sent to this route line.')
oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived.setDescription('Number of CAS packets received from this route line.')
oacVoiceDialPeerVoiceVtoacasTsxBundle = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("bundle1", 1), ("bundle2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxBundle.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacasTsxBundle.setDescription('Bundle option.')
oacVoiceDialPeerVoiceVtoacesTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesTable.setDescription('Dial peer voice vtoaces table.')
oacVoiceDialPeerVoiceVtoacesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesDialPeer"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesEntry.setDescription('Dial peer voice vtoaces table entry.')
oacVoiceDialPeerVoiceVtoacesDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesDialPeer.setDescription('Index of this dial peer entry.')
oacVoiceDialPeerVoiceVtoacesLinkedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesLinkedPort.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesLinkedPort.setDescription('Linked Physical Module/Line description.')
oacVoiceDialPeerVoiceVtoacesCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 3), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesCurrentState.setDescription('Dial peer state.')
oacVoiceDialPeerVoiceVtoacesConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 4), VoiceUpDnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesConfigState.setDescription('Dial peer status.')
oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod.setDescription('')
oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences.setDescription('Total number of out-of-sync occurences.')
oacVoiceDialPeerVoiceVtoacesTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesTxCells.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesTxCells.setDescription('Total number of tx cells.')
oacVoiceDialPeerVoiceVtoacesReassCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesReassCells.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesReassCells.setDescription('Total number of received valid cells.')
oacVoiceDialPeerVoiceVtoacesBufOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesBufOverflows.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesBufOverflows.setDescription('Total number of rx overflow occurences.')
oacVoiceDialPeerVoiceVtoacesBufUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesBufUnderflows.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesBufUnderflows.setDescription('Total number of rx underrun occurences.')
oacVoiceDialPeerVoiceVtoacesPointerReframes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesPointerReframes.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesPointerReframes.setDescription('Total number of rx invalid pointers.')
oacVoiceDialPeerVoiceVtoacesHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesHdrErrors.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesHdrErrors.setDescription('Total number of rx crc error occurences.')
oacVoiceDialPeerVoiceVtoacesLossCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 2, 2, 12, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesLossCells.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoiceVtoacesLossCells.setDescription('Total number of rx cell loss.')
oacVoicePortVoipTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1), )
if mibBuilder.loadTexts: oacVoicePortVoipTable.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipTable.setDescription('VoIP Voice Ports Table')
oacVoicePortVoipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoicePortIfIndex"))
if mibBuilder.loadTexts: oacVoicePortVoipEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipEntry.setDescription('VoIP Voice Ports Table Entry')
oacVoicePortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortIfIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortIfIndex.setDescription('Voice Port Interface Index ex : 0, 1 ...')
oacVoicePortVoipPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipPortName.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipPortName.setDescription('Voice Port name ex : 5/0, 5/1')
oacVoicePortVoipPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 3), VoipPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipPortType.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipPortType.setDescription('Voip Voice Port Type')
oacVoicePortVoipPriPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 4), OacVoipPriPhysicalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipPriPhysicalType.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipPriPhysicalType.setDescription('PRI Physical Type')
oacVoicePortVoipIsdnProtocolDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 5), IsdnProtocolDescriptor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIsdnProtocolDescriptor.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIsdnProtocolDescriptor.setDescription('Voip Isdn Protocol Descriptor')
oacVoicePortVoipCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 6), PortVoipCurrentState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipCurrentState.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipCurrentState.setDescription('Voip Current State')
oacVoicePortVoipConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 7), ConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipConfigState.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipConfigState.setDescription('Voip Port Configuration State')
oacVoicePortVoipIsdnLayer1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 8), IsdnLayerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIsdnLayer1Status.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIsdnLayer1Status.setDescription('Voip Isdn Layer 1 Status')
oacVoicePortVoipIsdnLayer2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIsdnLayer2Status.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIsdnLayer2Status.setDescription('Voip Isdn Layer 2 Status')
oacVoicePortVoipAttachedDialPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipAttachedDialPeer.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipAttachedDialPeer.setDescription('Voip Attached Dial Peer')
oacVoicePortVoipCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipCurrentCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipCurrentCalls.setDescription('Number of Voip Current calls')
oacVoicePortVoipIsdnTxFramesOnDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIsdnTxFramesOnDChannel.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIsdnTxFramesOnDChannel.setDescription('Number of Tx Frames on D channel')
oacVoicePortVoipIsdnRxFramesOnDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIsdnRxFramesOnDChannel.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIsdnRxFramesOnDChannel.setDescription('Number of Rx Frames on D channel')
oacVoicePortVoipPriNbAisOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipPriNbAisOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipPriNbAisOccurence.setDescription('Number of PRI AIS occurences')
oacVoicePortVoipPriNbRdiOccurence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipPriNbRdiOccurence.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipPriNbRdiOccurence.setDescription('Number of PRI RDI occurences')
oacVoicePortVoipOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCalls.setDescription('Number of Voip outgoing calls')
oacVoicePortVoipOutCallsFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsFailures.setDescription('Number of failures of outgoing calls')
oacVoicePortVoipOutCallsUnsufficientPotsGroupResource = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsUnsufficientPotsGroupResource.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsUnsufficientPotsGroupResource.setDescription('Number of failures of outgoing calls Error from Unsufficient Pots Group Resource')
oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown.setDescription('Number of failures of outgoing calls Error from Isdn Physical Interface down')
oacVoicePortVoipOutCallsIsdnCauseClass0 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass0.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass0.setDescription('Number of failures of outgoing calls Error Cause Class 0 : normal event')
oacVoicePortVoipOutCallsIsdnCauseClass1 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass1.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass1.setDescription('Number of failures of outgoing calls Error Cause Class 1 : normal event')
oacVoicePortVoipOutCallsIsdnCC1NormalCause = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCC1NormalCause.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCC1NormalCause.setDescription('Number of failures of outgoing calls Error Cause Class 1 : normal Cause')
oacVoicePortVoipOutCallsCC1UserBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsCC1UserBusy.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsCC1UserBusy.setDescription('Number of failures of outgoing calls Error Cause Class 1 : User Busy')
oacVoicePortVoipOutCallsCC1NoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsCC1NoAnswer.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsCC1NoAnswer.setDescription('Number of failures of outgoing calls Error Cause Class 1 : No Answer')
oacVoicePortVoipOutCallsIsdnCauseClass2 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass2.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass2.setDescription('Number of failures of outgoing calls Error Cause Class 2 : unavailable resources')
oacVoicePortVoipOutCallsIsdnCauseClass3 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass3.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass3.setDescription('Number of failures of outgoing calls Error Cause Class 3 : unavailable service')
oacVoicePortVoipOutCallsIsdnCauseClass4 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass4.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass4.setDescription('Number of failures of outgoing calls Error Cause Class 4 : service not provided')
oacVoicePortVoipOutCallsIsdnCauseClass5 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass5.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass5.setDescription('Number of failures of outgoing calls Error Cause Class 5 : invalid message')
oacVoicePortVoipOutCallsIsdnCauseClass6 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass6.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass6.setDescription('Number of failures of outgoing calls Error Cause Class 6 : protocol error')
oacVoicePortVoipOutCallsIsdnCauseClass7 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass7.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipOutCallsIsdnCauseClass7.setDescription('Number of failures of outgoing calls Error Cause Class 7 : interworking')
oacVoicePortVoipIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCalls.setDescription('Number of incoming calls')
oacVoicePortVoipIncCallsBackupInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsBackupInvoked.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsBackupInvoked.setDescription('Number of incoming calls when backup invoked')
oacVoicePortVoipIncCallsFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsFailures.setDescription('Number of failures of incoming calls')
oacVoicePortVoipIncCallsRemoteFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsRemoteFailure.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsRemoteFailure.setDescription('Number of failures of incoming calls Error is remote failure')
oacVoicePortVoipIncCallsUnknownNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsUnknownNumber.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsUnknownNumber.setDescription('Number of failures of incoming calls Error is unknown number')
oacVoicePortVoipIncCallsDspUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsDspUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsDspUnavailable.setDescription('Number of failures of incoming calls Error is DSP unavailable')
oacVoicePortVoipIncCallsNoVoipRessourceAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsNoVoipRessourceAvailable.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsNoVoipRessourceAvailable.setDescription('Number of failures of incoming calls Error is no VoIP resource available')
oacVoicePortVoipIncCallsNotSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsNotSpecified.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipIncCallsNotSpecified.setDescription('Number of failures of incoming calls Error is calls not specified')
oacVoicePortVoipMgcpOffHookEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipMgcpOffHookEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipMgcpOffHookEvents.setDescription('number of MGCP off hook events')
oacVoicePortVoipMgcpOutCallsPathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipMgcpOutCallsPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipMgcpOutCallsPathEstablished.setDescription('number MGCP outgoing calls path established')
oacVoicePortVoipMgcpRingingEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipMgcpRingingEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipMgcpRingingEvents.setDescription('number of MGCP ringing events')
oacVoicePortVoipMgcpIncCallsPathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoicePortVoipMgcpIncCallsPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoicePortVoipMgcpIncCallsPathEstablished.setDescription('number MGCP incoming calls path established')
oacVoiceDialPeerVoipTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2), )
if mibBuilder.loadTexts: oacVoiceDialPeerVoipTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoipTable.setDescription('VoIP Voice Dial Peer Table')
oacVoiceDialPeerVoipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIndex"))
if mibBuilder.loadTexts: oacVoiceDialPeerVoipEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerVoipEntry.setDescription('VoIP Voice Dial Peer Table Entry')
oacVoiceDialPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIndex.setDescription('Index number of voice Dial peer')
oacVoiceDialPeerCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerCurrentCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerCurrentCalls.setDescription('Number of dial peer current calls')
oacVoiceDialPeerOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCalls.setDescription('Number of Dial peer outgoing calls')
oacVoiceDialPeerOutCallsMgcpOffHookEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsMgcpOffHookEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsMgcpOffHookEvents.setDescription(' ? ')
oacVoiceDialPeerOutCallsMgcpPathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsMgcpPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsMgcpPathEstablished.setDescription('?')
oacVoiceDialPeerOutCallsFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsFailures.setDescription('Number of dial peer outgoing calls failures')
oacVoiceDialPeerOutCallsRasFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailures.setDescription('Number of dial peer outgoing calls failures cause : RAS Failures')
oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable.setDescription('number of dial peer outgoing calls failures cause : RAS failure : Gatekeeper Unavailable')
oacVoiceDialPeerOutCallsRasFailAdmissionRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailAdmissionRejects.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsRasFailAdmissionRejects.setDescription('number of dial peer outgoing calls failures cause : RAS failure : Admission Reject')
oacVoiceDialPeerOutCallsH225Q931Failures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH225Q931Failures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH225Q931Failures.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures')
oacVoiceDialPeerOutCallsHQFailCauseClass0 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass0.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass0.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : Cause class 0')
oacVoiceDialPeerOutCallsHQFailCauseClass1 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass1.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass1.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 1')
oacVoiceDialPeerOutCallsHQFailCC1NormalCause = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1NormalCause.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1NormalCause.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : CC1 : normal cause')
oacVoiceDialPeerOutCallsHQFailCC1UserBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1UserBusy.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1UserBusy.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures CC1 : User Busy')
oacVoiceDialPeerOutCallsHQFailCC1NoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1NoAnswer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCC1NoAnswer.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures CC1 : no answer')
oacVoiceDialPeerOutCallsHQFailCauseClass2 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass2.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass2.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : Cause class 2')
oacVoiceDialPeerOutCallsHQFailCauseClass3 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass3.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass3.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 3')
oacVoiceDialPeerOutCallsHQFailCauseClass4 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass4.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass4.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 4')
oacVoiceDialPeerOutCallsHQFailCauseClass5 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass5.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass5.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 5')
oacVoiceDialPeerOutCallsHQFailCauseClass6 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass6.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass6.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 6')
oacVoiceDialPeerOutCallsHQFailCauseClass7 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass7.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsHQFailCauseClass7.setDescription('number of dial peer outgoing calls failures cause : H225 / Q931 failures : cause class 7')
oacVoiceDialPeerOutCallsH245Failures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245Failures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245Failures.setDescription('number of dial peer outgoing calls failures cause : H245 failures')
oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities.setDescription('number of dial peer outgoing calls failures cause : H245 failures : incompatible capabilities')
oacVoiceDialPeerOutCallsH245FailProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245FailProtocolErrors.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsH245FailProtocolErrors.setDescription('number of dial peer outgoing calls failures cause : H245 failures : protocol errors')
oacVoiceDialPeerOutCallsInternalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailures.setDescription('number of dial peer outgoing calls failures cause : internal failures')
oacVoiceDialPeerOutCallsInternalFailDspUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailDspUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailDspUnavailable.setDescription('number of dial peer outgoing calls failures cause : internal failures : DSP unavailable')
oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded.setDescription('number of dial peer outgoing calls failures cause : internal failures : max bandwidth exceeded')
oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded.setDescription('number of dial peer outgoing calls failures cause : internal failures : max connections exceeded')
oacVoiceDialPeerOutCallsInternalFailNotSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailNotSpecified.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerOutCallsInternalFailNotSpecified.setDescription('number of dial peer outgoing calls failures cause : internal failures : not specified')
oacVoiceDialPeerIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCalls.setDescription('Number of dial peer incoming calls')
oacVoiceDialPeerIncCallsMgcpRingingEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsMgcpRingingEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsMgcpRingingEvents.setDescription(' ? ')
oacVoiceDialPeerIncCallsMgcpPathEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsMgcpPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsMgcpPathEstablished.setDescription(' ? ')
oacVoiceDialPeerIncCallsFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsFailures.setDescription('Number of dial peer incoming calls failures')
oacVoiceDialPeerIncCallsRasFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailures.setDescription('Number of dial peer incoming calls failures Cause : RAS failures')
oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable.setDescription('Number of dial peer incoming calls failures Cause : RAS failures : gatekeeper unavailable')
oacVoiceDialPeerIncCallsRasFailAdmissionRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailAdmissionRejects.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsRasFailAdmissionRejects.setDescription('Number of dial peer incoming calls failures Cause : RAS failures : admission reject')
oacVoiceDialPeerIncCallsLocalPortFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsLocalPortFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsLocalPortFailures.setDescription('Number of dial peer incoming calls failures Cause : local port failures')
oacVoiceDialPeerIncCallsH245Failures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245Failures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245Failures.setDescription('Number of dial peer incoming calls failures Cause : H245 failures')
oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities.setDescription('Number of dial peer incoming calls failures Cause : H245 failures : incompatible capabilities')
oacVoiceDialPeerIncCallsH245FailProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245FailProtocolErrors.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsH245FailProtocolErrors.setDescription('Number of dial peer incoming calls failures Cause : H245 failures : protocol errors')
oacVoiceDialPeerIncCallsInternalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailures.setDescription('Number of dial peer incoming calls failures Cause : internal failures')
oacVoiceDialPeerIncCallsInternalFailDspUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailDspUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailDspUnavailable.setDescription('Number of dial peer incoming calls failures Cause : internal failures : DSP unavailable')
oacVoiceDialPeerIncCallsInternalFailUnknownNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailUnknownNumber.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailUnknownNumber.setDescription('Number of dial peer incoming calls failures Cause : internal failures : unknown number')
oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable.setDescription('Number of dial peer incoming calls failures Cause : internal failures : channel port unavailable')
oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded.setDescription('Number of dial peer incoming calls failures Cause : internal failures : max bandwidth exceeded')
oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded.setDescription('Number of dial peer incoming calls failures Cause : internal failures : max connections exceeded')
oacVoiceDialPeerIncCallsInternalFailNotSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailNotSpecified.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsInternalFailNotSpecified.setDescription('Number of dial peer incoming calls failures Cause : internal failures : not specified')
oacVoiceDialPeerIncCallsAdviceofCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsAdviceofCharge.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerIncCallsAdviceofCharge.setDescription(' ? ')
oacVoiceDialPeerRtpStatNbTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbTxPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbTxPackets.setDescription('Number of RTP Tx packets')
oacVoiceDialPeerRtpStatNbRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbRxPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbRxPackets.setDescription('Number of RTP Rx Packets')
oacVoiceDialPeerRtpStatNbTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbTxBytes.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbTxBytes.setDescription('Number of RTP Tx Bytes')
oacVoiceDialPeerRtpStatNbRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbRxBytes.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbRxBytes.setDescription('Number of RTP Rx Bytes')
oacVoiceDialPeerRtpStatNbExcessiveJitterEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbExcessiveJitterEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbExcessiveJitterEvents.setDescription('Number of RTP Excessive Jitter events')
oacVoiceDialPeerRtpStatNbLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbLostPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbLostPackets.setDescription('Number of RTP lost packets')
oacVoiceDialPeerRtpStatNbInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbInvalidPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerRtpStatNbInvalidPackets.setDescription('Number of RTP invalid packets')
oacVoiceDialPeerModemNbSwitchingToModemMode = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 56), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerModemNbSwitchingToModemMode.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerModemNbSwitchingToModemMode.setDescription('number of switching to modem mode')
oacVoiceDialPeerFaxNbOutgoingFax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbOutgoingFax.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbOutgoingFax.setDescription('Number of Outgoing fax')
oacVoiceDialPeerFaxNbIncomingFax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbIncomingFax.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbIncomingFax.setDescription('Number of Incoming fax')
oacVoiceDialPeerFaxNbFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbFailures.setDescription('Number of fax failures')
oacVoiceDialPeerFaxFailureRequestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailureRequestMode.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailureRequestMode.setDescription('Number of Fax Failures cause : request mode')
oacVoiceDialPeerFaxFailurePreMsgProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailurePreMsgProcedure.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailurePreMsgProcedure.setDescription('Number of fax failures cause : pre-message procedure')
oacVoiceDialPeerFaxFailurePage = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailurePage.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxFailurePage.setDescription('Number of fax failures cause : pages')
oacVoiceDialPeerFaxNbTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbTxPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbTxPackets.setDescription('Number of fax Tx packets')
oacVoiceDialPeerFaxNbRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbRxPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbRxPackets.setDescription('Number of fax Rx packets')
oacVoiceDialPeerFaxNbTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbTxBytes.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbTxBytes.setDescription('Number of fax Tx Bytes')
oacVoiceDialPeerFaxNbRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 66), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbRxBytes.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbRxBytes.setDescription('Number of fax Rx Bytes')
oacVoiceDialPeerFaxNbLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 2, 1, 67), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbLostPackets.setStatus('current')
if mibBuilder.loadTexts: oacVoiceDialPeerFaxNbLostPackets.setDescription('Number of fax lost packets')
oacVoiceH323Gw = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3))
oacVoiceH323GwState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 1), OacVoipGatewayState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwState.setDescription('State of the H323 gateway')
oacVoiceH323GwStateReason = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 2), OacVoipGatewayStateReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwStateReason.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwStateReason.setDescription('H323 Gateway state reason')
oacVoiceH323GwRasBwControl = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 3), OacH323GwRasBwControl()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRasBwControl.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRasBwControl.setDescription('control of oacVoiceH323GwRasBw')
oacVoiceH323GwPortabilityStatus = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 4), OacH323GwPortabilityStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwPortabilityStatus.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwPortabilityStatus.setDescription('?')
oacVoiceH323GwPortabilityStatusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwPortabilityStatusTimeout.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwPortabilityStatusTimeout.setDescription('specify the timeout of oacVoiceH323GwPortabilityStatus')
oacVoiceH323GwDs0Configured = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwDs0Configured.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwDs0Configured.setDescription('specify the configured oacVoiceH323GwDs0')
oacVoiceH323GwDs0Low = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwDs0Low.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwDs0Low.setDescription('specify the low of oacVoiceH323GwDs0')
oacVoiceH323GwDs0High = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwDs0High.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwDs0High.setDescription('specify the high of oacVoiceH323GwDs0')
oacVoiceH323GwDs0Current = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwDs0Current.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwDs0Current.setDescription('The current state of oacVoiceH323GwDs0')
oacVoiceH323GwBwConfigured = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwBwConfigured.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwBwConfigured.setDescription('the object specify the configured oacVoiceH323GwBw')
oacVoiceH323GwBwLow = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwBwLow.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwBwLow.setDescription('The Low of oacVoiceH323GwBw')
oacVoiceH323GwBwHigh = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwBwHigh.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwBwHigh.setDescription('The high of oacVoiceH323GwBw')
oacVoiceH323GwBwCurrent = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwBwCurrent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwBwCurrent.setDescription('The current state of oacVoiceH323GwBwCurrent')
oacVoiceH323GwRegistrationState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 14), OacVoipGatewayRegistrationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationState.setDescription('H323 Gateway registration state')
oacVoiceH323GwGatekeeperIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwGatekeeperIdentifier.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwGatekeeperIdentifier.setDescription('H323 gakeeper Identifier where the H323Gw is eventually registered')
oacVoiceH323GwGatekeeperAddress = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwGatekeeperAddress.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwGatekeeperAddress.setDescription('IP address of the gatekeeper')
oacVoiceH323GwRegistrationRequest = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationRequest.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationRequest.setDescription('Number of H323 Registration requests')
oacVoiceH323GwRegistrationFailures = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationFailures.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegistrationFailures.setDescription('number of H323 registration failures')
oacVoiceH323GwRegFailNoResponse = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailNoResponse.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailNoResponse.setDescription('Number of H323 registration failures cause : no response')
oacVoiceH323GwRegFailInvalidIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidIpAddress.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidIpAddress.setDescription('Number of registration failures cause : invalid IP address')
oacVoiceH323GwRegFailDuplicateAlias = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailDuplicateAlias.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailDuplicateAlias.setDescription('Number of H323 registration failures cause : Duplicate alias')
oacVoiceH323GwRegFailInvalidTerminalType = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidTerminalType.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidTerminalType.setDescription('Number of H323 registration failures cause : invalid terminal type')
oacVoiceH323GwRegFailResourceUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailResourceUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailResourceUnavailable.setDescription('Number of H323 registration failures cause : resource unavailable')
oacVoiceH323GwRegFailInvalidAlias = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidAlias.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailInvalidAlias.setDescription('Number of H323 registration failures cause : invalid alias')
oacVoiceH323GwRegFailSecurityDenial = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailSecurityDenial.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailSecurityDenial.setDescription('Number of H323 registration failures cause : security denial')
oacVoiceH323GwRegFailUndefinedReason = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwRegFailUndefinedReason.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwRegFailUndefinedReason.setDescription('Number of H323 registration failures cause : undefined reason')
oacVoiceH323GwAdmissionRequests = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmissionRequests.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmissionRequests.setDescription('Number of admission requests')
oacVoiceH323GwAdmissionRejects = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmissionRejects.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmissionRejects.setDescription('Number of H323 admission rejects')
oacVoiceH323GwAdmRejCalledPartyNotRegistered = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejCalledPartyNotRegistered.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejCalledPartyNotRegistered.setDescription('Number of H323 admission rejects cause : called party not registered')
oacVoiceH323GwAdmRejInvalidPermission = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejInvalidPermission.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejInvalidPermission.setDescription('Number of H323 admission rejects cause : invalid permission')
oacVoiceH323GwAdmRejRequestDenied = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejRequestDenied.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejRequestDenied.setDescription('Number of H323 admission rejects cause : request denied')
oacVoiceH323GwAdmRejCallerNotRegistered = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejCallerNotRegistered.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejCallerNotRegistered.setDescription('Number of H323 admission rejects cause : caller not registered')
oacVoiceH323GwAdmRejResourceUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejResourceUnavailable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejResourceUnavailable.setDescription('Number of H323 admission rejects cause : resource unavailable')
oacVoiceH323GwAdmRejSecurityDenial = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejSecurityDenial.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejSecurityDenial.setDescription('Number of H323 admission rejects cause : security denial')
oacVoiceH323GwAdmRejInvalidEndpointIdent = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejInvalidEndpointIdent.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejInvalidEndpointIdent.setDescription('Number of H323 admission rejects cause : invalid endpoint identity')
oacVoiceH323GwAdmRejIncompleteAddress = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejIncompleteAddress.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejIncompleteAddress.setDescription('Number of H323 admission rejects cause : incomplete address')
oacVoiceH323GwAdmRejNotSpecified = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejNotSpecified.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejNotSpecified.setDescription('Number of H323 admission rejects cause : not specified')
oacVoiceH323GwAdmRejUndefinedReason = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejUndefinedReason.setStatus('current')
if mibBuilder.loadTexts: oacVoiceH323GwAdmRejUndefinedReason.setDescription('Number of H323 admission rejects cause : undefined reason')
oacVoiceSipGw = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4))
oacVoiceSipGwState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 1), OacVoipGatewayState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwState.setDescription('State of the SIP gateway')
oacVoiceSipGwRegistrationState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 2), OacVoipGatewayRegistrationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationState.setDescription('Registration state of the SIP gateway')
oacVoiceSipGwRegistrarServer = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwRegistrarServer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwRegistrarServer.setDescription('IP address or DNS:port of registrar')
oacVoiceSipGwBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwBandwidth.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwBandwidth.setDescription('SIP Gateway Bandwidth')
oacVoiceSipGwRegistrationErrors = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationErrors.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationErrors.setDescription('Number of SIP Gateway registration errors')
oacVoiceSipGwRegisteredEndpoints = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwRegisteredEndpoints.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwRegisteredEndpoints.setDescription('Number of SIP Gateway registered Endpoints')
oacVoiceSipGwCurrentCalls = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwCurrentCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwCurrentCalls.setDescription('Number of SIP Gateway current calls')
oacVoiceSipGwAuthenticationRejects = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwAuthenticationRejects.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwAuthenticationRejects.setDescription('Number of SIP Gateway authentication rejects')
oacVoiceSipGwEndpointTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9), )
if mibBuilder.loadTexts: oacVoiceSipGwEndpointTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwEndpointTable.setDescription('VoIP SIP Gateway Endpoints table')
oacVoiceSipGwMaxToRegisterEndpoints = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwMaxToRegisterEndpoints.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwMaxToRegisterEndpoints.setDescription('Number of endpoint to be registered to an external registrar')
oacVoiceSipGwEndpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceSipGwPhoneIndex"))
if mibBuilder.loadTexts: oacVoiceSipGwEndpointEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwEndpointEntry.setDescription('VoIP SIP Gateway Endpoints Ports Table Entry')
oacVoiceSipGwPhoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwPhoneIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwPhoneIndex.setDescription('VoIP SIP Phone Index')
oacVoiceSipGwPhoneState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1, 2), OacVoiceSipGwPhoneState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwPhoneState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwPhoneState.setDescription('VoIP SIP Server State')
oacVoiceSipGwPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwPhoneNumber.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwPhoneNumber.setDescription('VoIP SIP Phone Number')
oacVoiceSipGwPhoneSipId = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwPhoneSipId.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwPhoneSipId.setDescription('VoIP SIP phone ID')
oacVoiceSipGwRegistrationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 4, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationTimeout.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipGwRegistrationTimeout.setDescription('VoIP SIP phone registration timeout')
oacVoiceSipServer = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5))
oacVoiceSipServerState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 1), OacVoipGatewayState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerState.setDescription('State of the SIP Server')
oacVoiceSipServerRegisteredEndpoints = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerRegisteredEndpoints.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerRegisteredEndpoints.setDescription('Number of SIP Server registered Endpoints')
oacVoiceSipServerRegistrarServer = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerRegistrarServer.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerRegistrarServer.setDescription('IP address or DNS:port of registrar')
oacVoiceSipServerCurrentCalls = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerCurrentCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerCurrentCalls.setDescription('Number of SIP Servery current calls')
oacVoiceSipServerEndpointTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5), )
if mibBuilder.loadTexts: oacVoiceSipServerEndpointTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerEndpointTable.setDescription('VoIP SIP server Endpoints table')
oacVoiceSipServerEndpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceSipServerPhoneIndex"))
if mibBuilder.loadTexts: oacVoiceSipServerEndpointEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerEndpointEntry.setDescription('VoIP SIP server Endpoints Ports Table Entry')
oacVoiceSipServerPhoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerPhoneIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerPhoneIndex.setDescription('VoIP SIP Phone Index')
oacVoiceSipServerPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerPhoneNumber.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerPhoneNumber.setDescription('VoIP SIP Phone Number')
oacVoiceSipServerPhoneIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerPhoneIpAddress.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerPhoneIpAddress.setDescription('VoIP SIP Phone IP address')
oacVoiceSipServerPhoneSipId = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerPhoneSipId.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerPhoneSipId.setDescription('VoIP SIP phone ID')
oacVoiceSipServerRegistrationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerRegistrationTime.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerRegistrationTime.setDescription('VoIP SIP phone registration time')
oacVoiceSipServerRegistrationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 5, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceSipServerRegistrationTimeout.setStatus('current')
if mibBuilder.loadTexts: oacVoiceSipServerRegistrationTimeout.setDescription('VoIP SIP phone registration time out')
oacVoiceMgcpGw = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6))
oacVoiceMgcpGwState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 1), OacVoipGatewayState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwState.setDescription('State of the MGCP gateway')
oacVoiceMgcpGwCallAgentIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwCallAgentIpAddress.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwCallAgentIpAddress.setDescription('MGCP gateway call agent IP address')
oacVoiceMgcpGwConnectionState = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 3), OacVoipMgcpGatewayConnectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwConnectionState.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwConnectionState.setDescription('State of the MGCP gateway')
oacVoiceMgcpGwEstablishedPathCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwEstablishedPathCurrentNumber.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwEstablishedPathCurrentNumber.setDescription('MGCP gateway established path current number')
oacVoiceMgcpGwOutCallsOffHookEvents = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwOutCallsOffHookEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwOutCallsOffHookEvents.setDescription('Number of MGCP gateway outgoing calls off hook events')
oacVoiceMgcpGwOutCallsPathEstablished = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwOutCallsPathEstablished.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwOutCallsPathEstablished.setDescription('Number of MGCP gateway outgoing calls path established')
oacVoiceMgcpGwIncCallsRingingEvents = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwIncCallsRingingEvents.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwIncCallsRingingEvents.setDescription('Number of MGCP gateway incoming calls ringing events')
oacVoiceMgcpGwIncCallsPath = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 3, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceMgcpGwIncCallsPath.setStatus('current')
if mibBuilder.loadTexts: oacVoiceMgcpGwIncCallsPath.setDescription('Number of MGCP gateway incoming calls path')
oacVoiceStatMos = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4))
oacVoiceStatMosTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1), )
if mibBuilder.loadTexts: oacVoiceStatMosTable.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosTable.setDescription('Voice MOS table.')
oacVoiceStatMosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1), ).setIndexNames((0, "ONEACCESS-VOICE-MIB", "oacVoiceStatMosIndex"))
if mibBuilder.loadTexts: oacVoiceStatMosEntry.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntry.setDescription('Voice MOS table entry.')
oacVoiceStatMosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosIndex.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosIndex.setDescription('MOS Index for H-1 or current: 0 for current and 1 for H-1.')
oacVoiceStatMosEntryNumberOfCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryNumberOfCalls.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryNumberOfCalls.setDescription('Number of Calls.')
oacVoiceStatMosEntryMosAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosAvg.setDescription('Average of MOS.')
oacVoiceStatMosEntryMosMin = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosMin.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosMin.setDescription('Minimum of MOS.')
oacVoiceStatMosEntryMosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosMax.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryMosMax.setDescription('Maximum of MOS.')
oacVoiceStatMosEntryErlAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryErlAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryErlAvg.setDescription('Average of ERL.')
oacVoiceStatMosEntryAcomAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryAcomAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryAcomAvg.setDescription('Average of ACOM.')
oacVoiceStatMosEntryLossRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryLossRateAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryLossRateAvg.setDescription('Average of loss-rate.')
oacVoiceStatMosJitterAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosJitterAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosJitterAvg.setDescription('Average of jitter.')
oacVoiceStatMosEntryMaxDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryMaxDelayAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryMaxDelayAvg.setDescription('Average of Max delay.')
oacVoiceStatMosEntryPddAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 1, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacVoiceStatMosEntryPddAvg.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatMosEntryPddAvg.setDescription('Average of Pdd (Post Dialed Delay).')
oacVoiceStatGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 3, 1))
oacVoiceStatCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 3, 2))
oacVoiceStatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 3, 2, 1)).setObjects(("ONEACCESS-VOICE-MIB", "oacVoiceStatGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacVoiceStatCompliance = oacVoiceStatCompliance.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatCompliance.setDescription('The compliance statement for agents that support the ONEACCESS-VOICE-MIB.')
oacVoiceStatGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 5, 2, 3, 1, 1))
for _oacVoiceStatGeneralGroup_obj in [[("ONEACCESS-VOICE-MIB", "oacVoiceFxsPorts"), ("ONEACCESS-VOICE-MIB", "oacVoiceBriPorts"), ("ONEACCESS-VOICE-MIB", "oacVoicePriPorts"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnections"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnections"), ("ONEACCESS-VOICE-MIB", "oacVoiceFxsDialPeers"), ("ONEACCESS-VOICE-MIB", "oacVoiceBriDialPeers"), ("ONEACCESS-VOICE-MIB", "oacVoicePriDialPeers"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsIfIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortVoicePortFxs"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsProtocolState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsOperState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsAdminState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsAttachedDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortFxsVoiceCommNb"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriIfIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortVoicePortBri"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriProtocolDescriptor"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriProtocolState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriOperState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriAdminState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriLayer1"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriAttachedDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortBriVoiceCommNb"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriIfIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortVoicePortPri"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriPhysicalType"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriProtocolDescriptor"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriProtocolState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriOperState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriAdminState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriLayer1"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriAttachedDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriVoiceCommNb"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriAisOccur"), ("ONEACCESS-VOICE-MIB", "oacVoiceVoicePortPriRdiOccur"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConnection"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnVpVc"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAtmVcFailureOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAtmVcTotalFailureDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLesVoicePathNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLesTotalCpIwfOriginated"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLesTotalCoIwfOriginated"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLesCpIwfRestartNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLesCoIwfRestartNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnElcpTotalSuccessfulAllocation"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnElcpTotalAllocationDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrRxFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrTxFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrRxIFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrTxIFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrRxRejFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrTxRejFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrRxRnrFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrTxRnrFrame"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnLapv5NbrT200Expiration"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalFramesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalBytesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalFramesDiscardedReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalFramesErrorsReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalFramesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalBytesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceVmoaConnAal2TotalFramesDiscardedSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnConnection"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnVpVc"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAtmVcFailureOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAtmVcTotalFailureDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalFramesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalBytesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalFramesDiscardedReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalFramesErrorsReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalFramesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalBytesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceVtoaConnAal2TotalFramesDiscardedSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsLinkedPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsPortStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsPathStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmofxsCurrentBc"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsCurrentCid"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsBlockingOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsVoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsPathRqFailed"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoafxsPathDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriPortStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriBlockingOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriBxAllocNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1CurrentBc"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1CurrentCid"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1BytesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1BytesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1PathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1PathDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB1Bundle"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2CurrentBc"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2CurrentCid"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2BytesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2BytesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2PathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2PathDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriB2Bundle"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDCurrentCid"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDFramesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDFramesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDBytesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoabriDBytesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsLinkedPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsPortStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsBlockingOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsBxAllocNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxChannelType"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoaccsTsxBundle"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasLinkedPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasPortStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasBlockingOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasBxAllocNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxChannelType"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxCurrentBC"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxCurrentCID"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacasTsxBundle"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriLinkedPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriPortStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriBlockingOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriBxAllocNum"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxChannelType"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxCurrentBC"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxCurrentCID"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesLinkedPort"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesTxCells"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesReassCells"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesBufOverflows"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesBufUnderflows"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesPointerReframes"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesHdrErrors"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerVoiceVtoacesLossCells"), ("ONEACCESS-VOICE-MIB", "oacVoicePortIfIndex"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipPortName"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipPortType"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipPriPhysicalType"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIsdnProtocolDescriptor"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipCurrentState"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipConfigState"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIsdnLayer1Status"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIsdnLayer2Status"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipAttachedDialPeer"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipCurrentCalls"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIsdnTxFramesOnDChannel"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIsdnRxFramesOnDChannel"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipPriNbAisOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipPriNbRdiOccurence"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCalls"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsFailures"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsUnsufficientPotsGroupResource"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass0"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass1"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCC1NormalCause"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsCC1UserBusy"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsCC1NoAnswer"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass2"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass3"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass4"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass5"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass6"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipOutCallsIsdnCauseClass7"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCalls"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsBackupInvoked"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsFailures"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsRemoteFailure"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsUnknownNumber"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsDspUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsNoVoipRessourceAvailable"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipIncCallsNotSpecified"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipMgcpOffHookEvents"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipMgcpOutCallsPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipMgcpRingingEvents"), ("ONEACCESS-VOICE-MIB", "oacVoicePortVoipMgcpIncCallsPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerCurrentCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsMgcpOffHookEvents"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsMgcpPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsRasFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsRasFailAdmissionRejects"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsH225Q931Failures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass0"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass1"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCC1NormalCause"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCC1UserBusy"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCC1NoAnswer")], [("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass2"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass3"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass4"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass5"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass6"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsHQFailCauseClass7"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsH245Failures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsH245FailProtocolErrors"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsInternalFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsInternalFailDspUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerOutCallsInternalFailNotSpecified"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsMgcpRingingEvents"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsMgcpPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsRasFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsRasFailAdmissionRejects"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsLocalPortFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsH245Failures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsH245FailProtocolErrors"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailDspUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailUnknownNumber"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsInternalFailNotSpecified"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerIncCallsAdviceofCharge"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbTxPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbRxPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbTxBytes"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbRxBytes"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbExcessiveJitterEvents"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbLostPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerRtpStatNbInvalidPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerModemNbSwitchingToModemMode"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbOutgoingFax"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbIncomingFax"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxFailureRequestMode"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxFailurePreMsgProcedure"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxFailurePage"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbTxPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbRxPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbTxBytes"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbRxBytes"), ("ONEACCESS-VOICE-MIB", "oacVoiceDialPeerFaxNbLostPackets"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwState"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwStateReason"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRasBwControl"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwPortabilityStatus"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwPortabilityStatusTimeout"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwDs0Configured"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwDs0Low"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwDs0High"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwDs0Current"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwBwConfigured"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwBwLow"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwBwHigh"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwBwCurrent"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegistrationState"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwGatekeeperIdentifier"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwGatekeeperAddress"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegistrationRequest"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegistrationFailures"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailNoResponse"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailInvalidIpAddress"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailDuplicateAlias"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailInvalidTerminalType"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailResourceUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailInvalidAlias"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailSecurityDenial"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwRegFailUndefinedReason"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmissionRequests"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmissionRejects"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejCalledPartyNotRegistered"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejInvalidPermission"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejRequestDenied"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejCallerNotRegistered"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejResourceUnavailable"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejSecurityDenial"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejInvalidEndpointIdent"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejIncompleteAddress"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejNotSpecified"), ("ONEACCESS-VOICE-MIB", "oacVoiceH323GwAdmRejUndefinedReason"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwState"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwRegistrationState"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwRegistrarServer"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwBandwidth"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwRegistrationErrors"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwRegisteredEndpoints"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwCurrentCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwAuthenticationRejects"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwMaxToRegisterEndpoints"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwPhoneIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwPhoneState"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwPhoneNumber"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwPhoneSipId"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipGwRegistrationTimeout"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerState"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerRegisteredEndpoints"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerRegistrarServer"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerCurrentCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerPhoneIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerPhoneNumber"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerPhoneIpAddress"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerPhoneSipId"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerRegistrationTime"), ("ONEACCESS-VOICE-MIB", "oacVoiceSipServerRegistrationTimeout"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwState"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwCallAgentIpAddress"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwConnectionState"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwEstablishedPathCurrentNumber"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwOutCallsOffHookEvents"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwOutCallsPathEstablished"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwIncCallsRingingEvents"), ("ONEACCESS-VOICE-MIB", "oacVoiceMgcpGwIncCallsPath"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosIndex"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryNumberOfCalls"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryMosAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryMosMin"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryMosMax"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryErlAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryAcomAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryLossRateAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosJitterAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryMaxDelayAvg"), ("ONEACCESS-VOICE-MIB", "oacVoiceStatMosEntryPddAvg")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        oacVoiceStatGeneralGroup = oacVoiceStatGeneralGroup.setObjects(*_oacVoiceStatGeneralGroup_obj)
    else:
        oacVoiceStatGeneralGroup = oacVoiceStatGeneralGroup.setObjects(*_oacVoiceStatGeneralGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacVoiceStatGeneralGroup = oacVoiceStatGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: oacVoiceStatGeneralGroup.setDescription('This group is mandatory for all Voice entities.')
mibBuilder.exportSymbols("ONEACCESS-VOICE-MIB", oacVoiceVmoaConnLapv5NbrT200Expiration=oacVoiceVmoaConnLapv5NbrT200Expiration, oacVoiceSipServerPhoneNumber=oacVoiceSipServerPhoneNumber, oacVoiceVmoaConnLapv5NbrRxFrame=oacVoiceVmoaConnLapv5NbrRxFrame, oacVoiceDialPeerVoiceVmoabriB2Entry=oacVoiceDialPeerVoiceVmoabriB2Entry, oacVoiceDialPeerRtpStatNbLostPackets=oacVoiceDialPeerRtpStatNbLostPackets, oacVoiceDialPeerVoiceVtoacasLinkedPort=oacVoiceDialPeerVoiceVtoacasLinkedPort, oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent=oacVoiceDialPeerVoiceVmoabriB1VoicePacketSent, oacVoiceH323GwAdmRejIncompleteAddress=oacVoiceH323GwAdmRejIncompleteAddress, oacVoiceVoicePortPriAdminState=oacVoiceVoicePortPriAdminState, oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable=oacVoiceDialPeerIncCallsInternalFailChannelPortUnavailable, oacVoiceDialPeerVoiceVmoabriDFramesSent=oacVoiceDialPeerVoiceVmoabriDFramesSent, oacVoiceSipServerPhoneSipId=oacVoiceSipServerPhoneSipId, oacVoiceSipGwState=oacVoiceSipGwState, oacVoiceMgcpGw=oacVoiceMgcpGw, IsdnProtocolDescriptor=IsdnProtocolDescriptor, oacVoiceH323GwAdmRejCallerNotRegistered=oacVoiceH323GwAdmRejCallerNotRegistered, oacVoiceDialPeerVoiceVtoacasTsxBundle=oacVoiceDialPeerVoiceVtoacasTsxBundle, oacVoiceDialPeerOutCallsHQFailCC1UserBusy=oacVoiceDialPeerOutCallsHQFailCC1UserBusy, oacVoiceStatMosTable=oacVoiceStatMosTable, oacVoiceDialPeerVoipEntry=oacVoiceDialPeerVoipEntry, oacVoiceVtoaConnAal2TotalBytesReceived=oacVoiceVtoaConnAal2TotalBytesReceived, oacVoiceMgcpGwEstablishedPathCurrentNumber=oacVoiceMgcpGwEstablishedPathCurrentNumber, oacVoiceVtoaConnAtmVcFailureOccurence=oacVoiceVtoaConnAtmVcFailureOccurence, oacVoicePortVoipOutCallsFailures=oacVoicePortVoipOutCallsFailures, OacVoiceSipGwPhoneState=OacVoiceSipGwPhoneState, oacVoiceStatMosJitterAvg=oacVoiceStatMosJitterAvg, oacVoiceVtoaConnAal2TotalFramesSent=oacVoiceVtoaConnAal2TotalFramesSent, oacVoiceDialPeerVoiceVmoabriBxAllocNum=oacVoiceDialPeerVoiceVmoabriBxAllocNum, oacVoicePortVoipOutCallsIsdnCauseClass4=oacVoicePortVoipOutCallsIsdnCauseClass4, oacVoiceVmoaConnConfigState=oacVoiceVmoaConnConfigState, oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived=oacVoiceDialPeerVoiceVtoacasTsxVoicePacketReceived, oacVoiceDialPeerIncCallsInternalFailDspUnavailable=oacVoiceDialPeerIncCallsInternalFailDspUnavailable, oacVoiceH323Gw=oacVoiceH323Gw, oacVoiceDialPeerVoiceVtoacesTxCells=oacVoiceDialPeerVoiceVtoacesTxCells, oacVoiceDialPeerOutCallsH245Failures=oacVoiceDialPeerOutCallsH245Failures, oacVoiceDialPeerVoiceVtoacasDialPeer=oacVoiceDialPeerVoiceVtoacasDialPeer, oacVoiceVmoaConnLesTotalCoIwfOriginated=oacVoiceVmoaConnLesTotalCoIwfOriginated, oacVoiceMIBModule=oacVoiceMIBModule, oacVoiceMgcpGwState=oacVoiceMgcpGwState, oacVoiceVmoaConnAtmVcFailureOccurence=oacVoiceVmoaConnAtmVcFailureOccurence, oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation=oacVoiceVmoaConnElcpTotalUnsuccessfulAllocation, oacVoiceDialPeerIncCallsMgcpRingingEvents=oacVoiceDialPeerIncCallsMgcpRingingEvents, oacVoiceDialPeerVoiceVtoacasConfigState=oacVoiceDialPeerVoiceVtoacasConfigState, oacVoicePortVoipPortName=oacVoicePortVoipPortName, oacVoiceH323GwRegFailSecurityDenial=oacVoiceH323GwRegFailSecurityDenial, oacVoiceDialPeerVoiceVtoacasBxAllocNum=oacVoiceDialPeerVoiceVtoacasBxAllocNum, oacVoiceDialPeerVoiceVtoacesReassCells=oacVoiceDialPeerVoiceVtoacesReassCells, oacVoiceSipServerEndpointTable=oacVoiceSipServerEndpointTable, VoiceFxsPortStatus=VoiceFxsPortStatus, oacVoiceDialPeerVoiceVtoacesCurrentState=oacVoiceDialPeerVoiceVtoacesCurrentState, oacVoiceDialPeerVoiceVtoacesLinkedPort=oacVoiceDialPeerVoiceVtoacesLinkedPort, oacVoiceDialPeerVoiceVtoaccsDialPeer=oacVoiceDialPeerVoiceVtoaccsDialPeer, oacVoiceDialPeerVoiceVtoaccsCurrentState=oacVoiceDialPeerVoiceVtoaccsCurrentState, oacVoiceVtoaConnAal2Table=oacVoiceVtoaConnAal2Table, oacVoiceVtoaConnCurrentState=oacVoiceVtoaConnCurrentState, oacVoiceH323GwRegFailInvalidAlias=oacVoiceH323GwRegFailInvalidAlias, oacVoiceStatObjects=oacVoiceStatObjects, oacVoiceH323GwAdmRejUndefinedReason=oacVoiceH323GwAdmRejUndefinedReason, oacVoiceH323GwGatekeeperIdentifier=oacVoiceH323GwGatekeeperIdentifier, oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder=oacVoiceDialPeerVoiceVmoapriTsxCurrentRxCoder, oacVoiceVoicePortBriTable=oacVoiceVoicePortBriTable, oacVoiceVmoaConnTable=oacVoiceVmoaConnTable, oacVoiceDialPeerVoiceVtoaccsPortStatus=oacVoiceDialPeerVoiceVtoaccsPortStatus, oacVoiceH323GwAdmissionRequests=oacVoiceH323GwAdmissionRequests, oacVoiceH323GwRasBwControl=oacVoiceH323GwRasBwControl, oacVoicePortVoipIncCallsBackupInvoked=oacVoicePortVoipIncCallsBackupInvoked, oacVoicePortVoipMgcpRingingEvents=oacVoicePortVoipMgcpRingingEvents, oacVoiceSipServerRegistrarServer=oacVoiceSipServerRegistrarServer, oacVoicePortVoipOutCallsIsdnCauseClass5=oacVoicePortVoipOutCallsIsdnCauseClass5, oacVoiceDialPeerOutCallsHQFailCauseClass5=oacVoiceDialPeerOutCallsHQFailCauseClass5, oacVoiceDialPeerVoiceVmoapriTsxChannelType=oacVoiceDialPeerVoiceVmoapriTsxChannelType, oacVoiceDialPeerVoiceVmoabriDBytesSent=oacVoiceDialPeerVoiceVmoabriDBytesSent, oacVoiceVoicePortPriTable=oacVoiceVoicePortPriTable, oacVoiceStatGlobal=oacVoiceStatGlobal, oacVoicePortVoipIsdnRxFramesOnDChannel=oacVoicePortVoipIsdnRxFramesOnDChannel, oacVoiceDialPeerVoiceVmoabriB1Table=oacVoiceDialPeerVoiceVmoabriB1Table, oacVoiceDialPeerFaxNbRxPackets=oacVoiceDialPeerFaxNbRxPackets, oacVoicePortVoipOutCallsIsdnCauseClass6=oacVoicePortVoipOutCallsIsdnCauseClass6, VoiceBearerCap=VoiceBearerCap, oacVoiceStatMos=oacVoiceStatMos, oacVoiceVoicePortFxsOperState=oacVoiceVoicePortFxsOperState, oacVoiceDialPeerVoiceVmoafxsCurrentCid=oacVoiceDialPeerVoiceVmoafxsCurrentCid, oacVoiceDialPeerVoiceVtoaccsConfigState=oacVoiceDialPeerVoiceVtoaccsConfigState, oacVoiceVoicePortVoicePortPri=oacVoiceVoicePortVoicePortPri, oacVoiceVtoaConnConnection=oacVoiceVtoaConnConnection, oacVoiceH323GwPortabilityStatusTimeout=oacVoiceH323GwPortabilityStatusTimeout, oacVoiceH323GwDs0Current=oacVoiceH323GwDs0Current, oacVoicePortVoipTable=oacVoicePortVoipTable, oacVoiceDialPeerVoiceVmoafxsCurrentState=oacVoiceDialPeerVoiceVmoafxsCurrentState, oacVoiceDialPeerVoiceVmoafxsEntry=oacVoiceDialPeerVoiceVmoafxsEntry, oacVoiceVmoaConnLapv5Entry=oacVoiceVmoaConnLapv5Entry, oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities=oacVoiceDialPeerIncCallsH245FailIncompatibleCapabilities, oacVoiceStatNotifications=oacVoiceStatNotifications, oacVoiceDialPeerFaxNbLostPackets=oacVoiceDialPeerFaxNbLostPackets, oacVoiceDialPeerRtpStatNbTxPackets=oacVoiceDialPeerRtpStatNbTxPackets, oacVoiceDialPeerRtpStatNbInvalidPackets=oacVoiceDialPeerRtpStatNbInvalidPackets, oacVoiceStatMosEntryErlAvg=oacVoiceStatMosEntryErlAvg, oacVoiceSipServerRegistrationTime=oacVoiceSipServerRegistrationTime, oacVoiceSipGwPhoneIndex=oacVoiceSipGwPhoneIndex, oacVoiceDialPeerVoiceVmoabriB1PathDuration=oacVoiceDialPeerVoiceVmoabriB1PathDuration, oacVoicePortVoipCurrentCalls=oacVoicePortVoipCurrentCalls, oacVoiceStatMosEntryMosMin=oacVoiceStatMosEntryMosMin, oacVoiceH323GwRegistrationFailures=oacVoiceH323GwRegistrationFailures, oacVoiceSipServerPhoneIpAddress=oacVoiceSipServerPhoneIpAddress, oacVoiceVoicePortFxsVoiceCommNb=oacVoiceVoicePortFxsVoiceCommNb, oacVoiceVmoaConnLesCpIwfRestartNum=oacVoiceVmoaConnLesCpIwfRestartNum, oacVoiceH323GwAdmRejResourceUnavailable=oacVoiceH323GwAdmRejResourceUnavailable, oacVoiceDialPeerFaxNbOutgoingFax=oacVoiceDialPeerFaxNbOutgoingFax, oacVoiceVmoaConnLapv5NbrTxRnrFrame=oacVoiceVmoaConnLapv5NbrTxRnrFrame, VoiceIOCoder=VoiceIOCoder, oacVoicePortIfIndex=oacVoicePortIfIndex, oacVoiceMgcpGwCallAgentIpAddress=oacVoiceMgcpGwCallAgentIpAddress, oacVoiceVoicePortPriEntry=oacVoiceVoicePortPriEntry, oacVoiceVmoaConnLapv5NbrRxIFrame=oacVoiceVmoaConnLapv5NbrRxIFrame, oacVoiceSipGw=oacVoiceSipGw, oacVoiceDialPeerFaxNbIncomingFax=oacVoiceDialPeerFaxNbIncomingFax, oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID=oacVoiceDialPeerVoiceVtoaccsTsxCurrentCID, oacVoicePortVoipAttachedDialPeer=oacVoicePortVoipAttachedDialPeer, oacVoiceDialPeerVoiceVtoacesBufOverflows=oacVoiceDialPeerVoiceVtoacesBufOverflows, oacVoiceDialPeerOutCallsFailures=oacVoiceDialPeerOutCallsFailures, oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded=oacVoiceDialPeerOutCallsInternalFailMaxBwExceeded, oacVoiceDialPeerVoiceVmoabriB1CurrentCid=oacVoiceDialPeerVoiceVmoabriB1CurrentCid, oacVoicePortVoipPortType=oacVoicePortVoipPortType, oacVoiceDialPeerVoiceVmoafxsBlockingOccurence=oacVoiceDialPeerVoiceVmoafxsBlockingOccurence, oacVoiceVmoaConnAal2TotalFramesDiscardedReceived=oacVoiceVmoaConnAal2TotalFramesDiscardedReceived, oacVoiceVtoaConnTable=oacVoiceVtoaConnTable, oacVoiceVmoaConnLapv5NbrRxRejFrame=oacVoiceVmoaConnLapv5NbrRxRejFrame, oacVoiceDialPeerModemNbSwitchingToModemMode=oacVoiceDialPeerModemNbSwitchingToModemMode, oacVoiceBriPorts=oacVoiceBriPorts, oacVoicePortVoipConfigState=oacVoicePortVoipConfigState, oacVoiceStatGroups=oacVoiceStatGroups, oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration=oacVoiceDialPeerVoiceVtoaccsTotalBlockingDuration, oacVoiceStatMosEntryMosMax=oacVoiceStatMosEntryMosMax, oacVoicePortVoipIncCallsUnknownNumber=oacVoicePortVoipIncCallsUnknownNumber, oacVoiceDialPeerVoiceVtoaccsTsxEntry=oacVoiceDialPeerVoiceVtoaccsTsxEntry, oacVoicePortVoipOutCallsCC1UserBusy=oacVoicePortVoipOutCallsCC1UserBusy, oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration=oacVoiceDialPeerVoiceVmoabriTotalBlockingDuration, oacVoiceVoicePortBriConfigState=oacVoiceVoicePortBriConfigState, oacVoiceDialPeerVoiceVmoafxsLinkedPort=oacVoiceDialPeerVoiceVmoafxsLinkedPort, oacVoiceDialPeerOutCallsInternalFailures=oacVoiceDialPeerOutCallsInternalFailures, oacVoiceDialPeerVoiceVtoaccsBlockingOccurence=oacVoiceDialPeerVoiceVtoaccsBlockingOccurence, oacVoicePortVoipOutCallsUnsufficientPotsGroupResource=oacVoicePortVoipOutCallsUnsufficientPotsGroupResource, oacVoiceDialPeerVoiceVtoacesBufUnderflows=oacVoiceDialPeerVoiceVtoacesBufUnderflows, oacVoiceDialPeerVoiceVmoapriTsxIndex=oacVoiceDialPeerVoiceVmoapriTsxIndex, oacVoiceDialPeerIncCalls=oacVoiceDialPeerIncCalls, oacVoiceVoicePortPriAttachedDialPeer=oacVoiceVoicePortPriAttachedDialPeer, oacVoiceVmoaConnections=oacVoiceVmoaConnections, oacExpIMVoiceStatistics=oacExpIMVoiceStatistics, oacVoiceDialPeerVoiceVtoaccsLinkedPort=oacVoiceDialPeerVoiceVtoaccsLinkedPort, oacVoiceDialPeerVoiceVtoaccsTable=oacVoiceDialPeerVoiceVtoaccsTable, oacVoiceDialPeerVoiceVmoabriB2CurrentBc=oacVoiceDialPeerVoiceVmoabriB2CurrentBc, oacVoiceVoicePortFxsAttachedDialPeer=oacVoiceVoicePortFxsAttachedDialPeer, oacVoiceVtoaConnAal2TotalFramesDiscardedReceived=oacVoiceVtoaConnAal2TotalFramesDiscardedReceived, oacVoiceH323GwDs0Low=oacVoiceH323GwDs0Low, oacVoiceSipGwAuthenticationRejects=oacVoiceSipGwAuthenticationRejects, oacVoiceStatCompliance=oacVoiceStatCompliance, oacVoiceVoicePortFxsEntry=oacVoiceVoicePortFxsEntry, oacVoicePortVoipOutCallsIsdnCauseClass7=oacVoicePortVoipOutCallsIsdnCauseClass7, oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder=oacVoiceDialPeerVoiceVmoabriB1CurrentTxCoder, oacVoiceDialPeerIncCallsInternalFailures=oacVoiceDialPeerIncCallsInternalFailures, OacVoipGatewayRegistrationState=OacVoipGatewayRegistrationState, oacVoiceDialPeerVoipTable=oacVoiceDialPeerVoipTable, oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent=oacVoiceDialPeerVoiceVmoabriB2VoicePacketSent, oacVoicePortVoipEntry=oacVoicePortVoipEntry, oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC=oacVoiceDialPeerVoiceVtoaccsTsxCurrentBC, oacVoiceVmoaConnElcpTotalAllocationDuration=oacVoiceVmoaConnElcpTotalAllocationDuration, oacVoiceDialPeerFaxNbRxBytes=oacVoiceDialPeerFaxNbRxBytes, oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent=oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketSent, oacVoiceDialPeerOutCallsRasFailures=oacVoiceDialPeerOutCallsRasFailures, oacVoiceDialPeerOutCallsH225Q931Failures=oacVoiceDialPeerOutCallsH225Q931Failures, oacVoiceH323GwRegistrationState=oacVoiceH323GwRegistrationState, oacVoicePortVoipIncCallsNoVoipRessourceAvailable=oacVoicePortVoipIncCallsNoVoipRessourceAvailable, oacVoiceVoicePortPriProtocolState=oacVoiceVoicePortPriProtocolState, oacVoiceDialPeerIncCallsFailures=oacVoiceDialPeerIncCallsFailures, oacVoiceH323GwBwHigh=oacVoiceH323GwBwHigh, oacVoiceH323GwAdmRejInvalidPermission=oacVoiceH323GwAdmRejInvalidPermission, oacVoiceDialPeerVoiceVmoapriLinkedPort=oacVoiceDialPeerVoiceVmoapriLinkedPort, oacVoicePriPorts=oacVoicePriPorts, oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded=oacVoiceDialPeerOutCallsInternalFailMaxConnExceeded, oacVoiceDialPeerVoiceVmoabriB1BytesReceived=oacVoiceDialPeerVoiceVmoabriB1BytesReceived, oacVoiceDialPeerFaxFailurePage=oacVoiceDialPeerFaxFailurePage, oacVoiceH323GwRegFailInvalidIpAddress=oacVoiceH323GwRegFailInvalidIpAddress, oacVoiceStatMosEntry=oacVoiceStatMosEntry, oacVoiceVmoaConnAal2Entry=oacVoiceVmoaConnAal2Entry, oacVoiceVmoaConnLesEntry=oacVoiceVmoaConnLesEntry, oacVoiceH323GwRegFailNoResponse=oacVoiceH323GwRegFailNoResponse, oacVoicePortVoipOutCalls=oacVoicePortVoipOutCalls, oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent=oacVoiceDialPeerVoiceVmoapriTsxVoicePacketSent, oacVoiceDialPeerOutCallsHQFailCC1NoAnswer=oacVoiceDialPeerOutCallsHQFailCC1NoAnswer, oacVoiceSipServerRegistrationTimeout=oacVoiceSipServerRegistrationTimeout, oacVoiceDialPeerRtpStatNbRxBytes=oacVoiceDialPeerRtpStatNbRxBytes, oacVoiceVtoaConnAal2TotalFramesErrorsReceived=oacVoiceVtoaConnAal2TotalFramesErrorsReceived, oacVoiceDialPeerVoiceVmoafxsDialPeer=oacVoiceDialPeerVoiceVmoafxsDialPeer, oacVoiceVoicePortVoicePortBri=oacVoiceVoicePortVoicePortBri, oacVoiceDialPeerFaxFailurePreMsgProcedure=oacVoiceDialPeerFaxFailurePreMsgProcedure, oacVoiceDialPeerVoiceVmoabriDBytesReceived=oacVoiceDialPeerVoiceVmoabriDBytesReceived, oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities=oacVoiceDialPeerOutCallsH245FailIncompatibleCapabilities, oacVoicePortVoipIsdnProtocolDescriptor=oacVoicePortVoipIsdnProtocolDescriptor, oacVoiceDialPeerVoiceVmoabriB1Entry=oacVoiceDialPeerVoiceVmoabriB1Entry, oacVoicePortVoipOutCallsIsdnCauseClass2=oacVoicePortVoipOutCallsIsdnCauseClass2, oacVoicePortVoipIsdnTxFramesOnDChannel=oacVoicePortVoipIsdnTxFramesOnDChannel, oacVoiceVmoaConnConnection=oacVoiceVmoaConnConnection, oacVoiceDialPeerOutCallsHQFailCauseClass7=oacVoiceDialPeerOutCallsHQFailCauseClass7, oacVoiceDialPeerVoiceVtoaccsTsxIndex=oacVoiceDialPeerVoiceVtoaccsTsxIndex, oacVoiceDialPeerVoiceVmoabriTable=oacVoiceDialPeerVoiceVmoabriTable, oacVoiceSipGwCurrentCalls=oacVoiceSipGwCurrentCalls, oacVoiceDialPeerVoiceVmoabriDCurrentCid=oacVoiceDialPeerVoiceVmoabriDCurrentCid, oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent=oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesSent, oacVoiceDialPeerVoiceVtoacasTsxIndex=oacVoiceDialPeerVoiceVtoacasTsxIndex, oacVoiceDialPeerVoiceVtoacasTsxChannelType=oacVoiceDialPeerVoiceVtoacasTsxChannelType, OacVoipMgcpGatewayConnectionState=OacVoipMgcpGatewayConnectionState, oacVoiceVoicePortPriPhysicalType=oacVoiceVoicePortPriPhysicalType, oacVoiceH323GwAdmRejInvalidEndpointIdent=oacVoiceH323GwAdmRejInvalidEndpointIdent, oacVoiceVoicePortPriVoiceCommNb=oacVoiceVoicePortPriVoiceCommNb, oacVoiceH323GwRegFailInvalidTerminalType=oacVoiceH323GwRegFailInvalidTerminalType, oacVoiceSipServerState=oacVoiceSipServerState, oacVoiceDialPeerVoiceVmoafxsVoicePacketSent=oacVoiceDialPeerVoiceVmoafxsVoicePacketSent, oacVoiceH323GwRegFailUndefinedReason=oacVoiceH323GwRegFailUndefinedReason, oacVoiceVoicePortPriConfigState=oacVoiceVoicePortPriConfigState, VoicePriPhPortType=VoicePriPhPortType, oacVoiceDialPeerVoiceVtoacesConfigState=oacVoiceDialPeerVoiceVtoacesConfigState, oacVoiceH323GwAdmissionRejects=oacVoiceH323GwAdmissionRejects, oacVoiceVmoaConnAal2TotalFramesSent=oacVoiceVmoaConnAal2TotalFramesSent, oacVoicePortVoipMgcpIncCallsPathEstablished=oacVoicePortVoipMgcpIncCallsPathEstablished, oacVoiceSipGwBandwidth=oacVoiceSipGwBandwidth, oacVoiceDialPeerVoiceVmoapriTsxCurrentBC=oacVoiceDialPeerVoiceVmoapriTsxCurrentBC, oacVoiceH323GwBwCurrent=oacVoiceH323GwBwCurrent, oacVoiceDialPeerVoiceVmoafxsTable=oacVoiceDialPeerVoiceVmoafxsTable, oacVoiceDialPeerVoiceVmoafxsPathStatus=oacVoiceDialPeerVoiceVmoafxsPathStatus, oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod=oacVoiceDialPeerVoiceVtoacesCellLossIntegrationPeriod, oacVoiceSipGwEndpointEntry=oacVoiceSipGwEndpointEntry, oacVoiceDialPeerVoiceVtoaccsBxAllocNum=oacVoiceDialPeerVoiceVtoaccsBxAllocNum, OacVoipGatewayStateReason=OacVoipGatewayStateReason, oacVoiceVoicePortBriVoiceCommNb=oacVoiceVoicePortBriVoiceCommNb, oacVoiceSipServerEndpointEntry=oacVoiceSipServerEndpointEntry, oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder=oacVoiceDialPeerVoiceVmoafxsCurrentTxCoder, oacVoiceVoicePortFxsProtocolState=oacVoiceVoicePortFxsProtocolState, oacVoiceSipGwMaxToRegisterEndpoints=oacVoiceSipGwMaxToRegisterEndpoints, OacH323GwPortabilityStatus=OacH323GwPortabilityStatus, oacVoiceVoicePortPriOperState=oacVoiceVoicePortPriOperState, oacVoiceDialPeerVoiceVtoacesDialPeer=oacVoiceDialPeerVoiceVtoacesDialPeer, oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable=oacVoiceDialPeerIncCallsRasFailGatekeeperUnavailable, oacVoiceDialPeerIncCallsLocalPortFailures=oacVoiceDialPeerIncCallsLocalPortFailures, oacVoiceDialPeerVoiceVmoabriEntry=oacVoiceDialPeerVoiceVmoabriEntry, oacVoiceDialPeerVoiceVmoapriTsxEntry=oacVoiceDialPeerVoiceVmoapriTsxEntry, oacVoiceSipGwEndpointTable=oacVoiceSipGwEndpointTable, oacVoiceStatGeneralGroup=oacVoiceStatGeneralGroup, oacVoicePortVoipIncCallsFailures=oacVoicePortVoipIncCallsFailures, oacVoiceDialPeerBles=oacVoiceDialPeerBles, oacVoiceSipGwRegistrarServer=oacVoiceSipGwRegistrarServer, oacVoiceDialPeerVoiceVmoabriB2BytesReceived=oacVoiceDialPeerVoiceVmoabriB2BytesReceived, oacVoiceDialPeerVoiceVmoafxsPortStatus=oacVoiceDialPeerVoiceVmoafxsPortStatus, oacVoiceDialPeerVoiceVmoapriCurrentState=oacVoiceDialPeerVoiceVmoapriCurrentState, oacVoiceFxsDialPeers=oacVoiceFxsDialPeers)
mibBuilder.exportSymbols("ONEACCESS-VOICE-MIB", oacVoiceVmoaConnElcpEntry=oacVoiceVmoaConnElcpEntry, oacVoiceVmoaConnLapv5NbrTxIFrame=oacVoiceVmoaConnLapv5NbrTxIFrame, oacVoiceDialPeerVoiceVmoapriEntry=oacVoiceDialPeerVoiceVmoapriEntry, oacVoiceVtoaConnections=oacVoiceVtoaConnections, oacVoicePortVoipPriNbRdiOccurence=oacVoicePortVoipPriNbRdiOccurence, oacVoiceDialPeerVoiceVmoapriDialPeer=oacVoiceDialPeerVoiceVmoapriDialPeer, oacVoiceDialPeerFaxNbTxBytes=oacVoiceDialPeerFaxNbTxBytes, oacVoiceDialPeerOutCallsMgcpPathEstablished=oacVoiceDialPeerOutCallsMgcpPathEstablished, oacVoicePortBles=oacVoicePortBles, oacVoiceDialPeerOutCallsHQFailCC1NormalCause=oacVoiceDialPeerOutCallsHQFailCC1NormalCause, oacVoiceDialPeerVoiceVtoacasEntry=oacVoiceDialPeerVoiceVtoacasEntry, oacVoiceVmoaConnLesVoicePathNum=oacVoiceVmoaConnLesVoicePathNum, oacVoiceH323GwRegFailDuplicateAlias=oacVoiceH323GwRegFailDuplicateAlias, oacVoiceVoicePortPriLayer1=oacVoiceVoicePortPriLayer1, oacVoiceH323GwAdmRejCalledPartyNotRegistered=oacVoiceH323GwAdmRejCalledPartyNotRegistered, oacVoiceStatConformance=oacVoiceStatConformance, oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder=oacVoiceDialPeerVoiceVmoafxsCurrentRxCoder, oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent=oacVoiceDialPeerVoiceVtoacasTsxVoicePacketSent, oacVoiceVmoaConnLapv5NbrTxFrame=oacVoiceVmoaConnLapv5NbrTxFrame, oacVoiceDialPeerOutCallsHQFailCauseClass2=oacVoiceDialPeerOutCallsHQFailCauseClass2, oacVoiceVtoaConnEntry=oacVoiceVtoaConnEntry, oacVoicePortVoipIncCallsDspUnavailable=oacVoicePortVoipIncCallsDspUnavailable, oacVoiceDialPeerVoiceVmoabriB1PathEstablished=oacVoiceDialPeerVoiceVmoabriB1PathEstablished, oacVoiceDialPeerVoiceVtoacesPointerReframes=oacVoiceDialPeerVoiceVtoacesPointerReframes, oacVoiceVmoaConnLapv5NbrRxRnrFrame=oacVoiceVmoaConnLapv5NbrRxRnrFrame, IsdnLayerStatus=IsdnLayerStatus, oacVoiceDialPeerVoiceVmofxsCurrentBc=oacVoiceDialPeerVoiceVmofxsCurrentBc, oacVoiceVoicePortFxsConfigState=oacVoiceVoicePortFxsConfigState, oacVoicePortVoipIsdnLayer1Status=oacVoicePortVoipIsdnLayer1Status, oacVoiceSipGwPhoneState=oacVoiceSipGwPhoneState, oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown=oacVoicePortVoipOutCallsIsdnPhysicalInterfaceDown, oacVoiceDialPeerVoiceVmoabriConfigState=oacVoiceDialPeerVoiceVmoabriConfigState, oacVoiceMgcpGwOutCallsPathEstablished=oacVoiceMgcpGwOutCallsPathEstablished, oacVoiceVmoaConnAal2TotalFramesDiscardedSent=oacVoiceVmoaConnAal2TotalFramesDiscardedSent, oacVoicePortVoipMgcpOutCallsPathEstablished=oacVoicePortVoipMgcpOutCallsPathEstablished, oacVoiceDialPeerVoiceVtoacasCurrentState=oacVoiceDialPeerVoiceVtoacasCurrentState, oacVoiceDialPeerVoiceVmoapriTable=oacVoiceDialPeerVoiceVmoapriTable, oacVoiceDialPeerOutCallsHQFailCauseClass4=oacVoiceDialPeerOutCallsHQFailCauseClass4, oacVoiceH323GwStateReason=oacVoiceH323GwStateReason, oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded=oacVoiceDialPeerIncCallsInternalFailMaxBwExceeded, oacVoicePortVoipIncCallsRemoteFailure=oacVoicePortVoipIncCallsRemoteFailure, oacVoiceVoicePortBriIfIndex=oacVoiceVoicePortBriIfIndex, oacVoiceDialPeerVoiceVtoacesHdrErrors=oacVoiceDialPeerVoiceVtoacesHdrErrors, oacVoiceDialPeerFaxNbFailures=oacVoiceDialPeerFaxNbFailures, oacVoiceVoicePortFxsIfIndex=oacVoiceVoicePortFxsIfIndex, oacVoiceMgcpGwConnectionState=oacVoiceMgcpGwConnectionState, oacVoiceDialPeerVoiceVmoabriB1CurrentBc=oacVoiceDialPeerVoiceVmoabriB1CurrentBc, VoiceBriProtocol=VoiceBriProtocol, oacVoiceDialPeerVoiceVmoabriPortStatus=oacVoiceDialPeerVoiceVmoabriPortStatus, oacVoiceMgcpGwIncCallsPath=oacVoiceMgcpGwIncCallsPath, oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived=oacVoiceDialPeerVoiceVmoabriB2VoicePacketReceived, oacVoiceVmoaConnVpVc=oacVoiceVmoaConnVpVc, oacVoicePortVoipOutCallsIsdnCauseClass3=oacVoicePortVoipOutCallsIsdnCauseClass3, oacVoiceH323GwAdmRejRequestDenied=oacVoiceH323GwAdmRejRequestDenied, oacVoiceVmoaConnElcpTotalSuccessfulAllocation=oacVoiceVmoaConnElcpTotalSuccessfulAllocation, oacVoiceVoicePortVoicePortFxs=oacVoiceVoicePortVoicePortFxs, oacVoiceDialPeerVoiceVtoacasBlockingOccurence=oacVoiceDialPeerVoiceVtoacasBlockingOccurence, oacVoiceVmoaConnLapv5Table=oacVoiceVmoaConnLapv5Table, oacVoiceDialPeerVoiceVmoabriB2PathDuration=oacVoiceDialPeerVoiceVmoabriB2PathDuration, oacVoiceFxsPorts=oacVoiceFxsPorts, oacVoiceSipGwRegistrationErrors=oacVoiceSipGwRegistrationErrors, oacVoiceDialPeerVoiceVtoaccsTsxTable=oacVoiceDialPeerVoiceVtoaccsTsxTable, oacVoiceVmoaConnAal2TotalBytesReceived=oacVoiceVmoaConnAal2TotalBytesReceived, oacVoiceSipGwRegistrationTimeout=oacVoiceSipGwRegistrationTimeout, oacVoiceDialPeerIncCallsRasFailures=oacVoiceDialPeerIncCallsRasFailures, oacVoiceVtoaConnAal2Entry=oacVoiceVtoaConnAal2Entry, OacVoipPriPhysicalType=OacVoipPriPhysicalType, oacVoicePortVoipOutCallsIsdnCauseClass0=oacVoicePortVoipOutCallsIsdnCauseClass0, oacVoiceDialPeerOutCallsRasFailAdmissionRejects=oacVoiceDialPeerOutCallsRasFailAdmissionRejects, oacVoiceSipGwRegistrationState=oacVoiceSipGwRegistrationState, oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded=oacVoiceDialPeerIncCallsInternalFailMaxConnExceeded, oacVoiceDialPeerVoiceVmoabriBlockingOccurence=oacVoiceDialPeerVoiceVmoabriBlockingOccurence, oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable=oacVoiceDialPeerOutCallsRasFailGatekeeperUnavailable, oacVoiceH323GwDs0Configured=oacVoiceH323GwDs0Configured, oacVoicePortVoipPriPhysicalType=oacVoicePortVoipPriPhysicalType, oacVoiceH323GwState=oacVoiceH323GwState, VoipPortType=VoipPortType, VoiceAcDeacState=VoiceAcDeacState, oacVoiceSipGwPhoneSipId=oacVoiceSipGwPhoneSipId, oacVoiceDialPeerVoiceVtoacesLossCells=oacVoiceDialPeerVoiceVtoacesLossCells, oacVoicePortVoipOutCallsIsdnCC1NormalCause=oacVoicePortVoipOutCallsIsdnCC1NormalCause, oacVoiceDialPeerVoiceVmoapriTsxTable=oacVoiceDialPeerVoiceVmoapriTsxTable, oacVoiceH323GwAdmRejSecurityDenial=oacVoiceH323GwAdmRejSecurityDenial, oacVoiceSipServerPhoneIndex=oacVoiceSipServerPhoneIndex, oacVoiceDialPeerVoiceVtoacasPortStatus=oacVoiceDialPeerVoiceVtoacasPortStatus, oacVoiceVoicePortPriProtocolDescriptor=oacVoiceVoicePortPriProtocolDescriptor, oacVoiceVmoaConnAal2TotalFramesReceived=oacVoiceVmoaConnAal2TotalFramesReceived, oacVoiceStatMosIndex=oacVoiceStatMosIndex, oacVoiceDialPeerVoiceVmoabriDialPeer=oacVoiceDialPeerVoiceVmoabriDialPeer, oacVoiceH323GwBwLow=oacVoiceH323GwBwLow, oacVoiceH323GwDs0High=oacVoiceH323GwDs0High, oacVoiceVtoaConnConfigState=oacVoiceVtoaConnConfigState, oacVoiceVmoaConnLesCoIwfRestartNum=oacVoiceVmoaConnLesCoIwfRestartNum, oacVoiceDialPeerIncCallsInternalFailNotSpecified=oacVoiceDialPeerIncCallsInternalFailNotSpecified, oacVoiceVoicePortBriLayer1=oacVoiceVoicePortBriLayer1, oacVoiceMgcpGwOutCallsOffHookEvents=oacVoiceMgcpGwOutCallsOffHookEvents, oacVoiceStatMosEntryNumberOfCalls=oacVoiceStatMosEntryNumberOfCalls, oacVoicePortVoipIncCallsNotSpecified=oacVoicePortVoipIncCallsNotSpecified, oacVoiceH323GwBwConfigured=oacVoiceH323GwBwConfigured, oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived=oacVoiceDialPeerVoiceVtoacasTsxVoiceCasFramesReceived, oacVoiceSipServer=oacVoiceSipServer, oacVoiceVmoaConnLapv5NbrTxRejFrame=oacVoiceVmoaConnLapv5NbrTxRejFrame, oacVoiceDialPeerVoiceVmoabriDTable=oacVoiceDialPeerVoiceVmoabriDTable, oacVoiceSipServerCurrentCalls=oacVoiceSipServerCurrentCalls, oacVoiceDialPeerVoiceVmoabriB2PathEstablished=oacVoiceDialPeerVoiceVmoabriB2PathEstablished, oacVoiceStatMosEntryMaxDelayAvg=oacVoiceStatMosEntryMaxDelayAvg, oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder=oacVoiceDialPeerVoiceVmoabriB2CurrentRxCoder, oacVoiceDialPeerRtpStatNbExcessiveJitterEvents=oacVoiceDialPeerRtpStatNbExcessiveJitterEvents, oacVoiceH323GwRegFailResourceUnavailable=oacVoiceH323GwRegFailResourceUnavailable, oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder=oacVoiceDialPeerVoiceVmoabriB1CurrentRxCoder, oacVoiceMgcpGwIncCallsRingingEvents=oacVoiceMgcpGwIncCallsRingingEvents, oacVoiceVoicePortBriEntry=oacVoiceVoicePortBriEntry, oacVoiceVtoaConnAal2TotalFramesDiscardedSent=oacVoiceVtoaConnAal2TotalFramesDiscardedSent, oacVoiceDialPeerVoiceVmoafxsPathRqFailed=oacVoiceDialPeerVoiceVmoafxsPathRqFailed, oacVoiceStatMosEntryAcomAvg=oacVoiceStatMosEntryAcomAvg, OacH323GwRasBwControl=OacH323GwRasBwControl, oacVoiceVoicePortPriIfIndex=oacVoiceVoicePortPriIfIndex, oacVoiceVmoaConnLesTable=oacVoiceVmoaConnLesTable, oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder=oacVoiceDialPeerVoiceVtoaccsTsxCurrentTxCoder, VoicePriProtocol=VoicePriProtocol, oacVoiceH323GwAdmRejNotSpecified=oacVoiceH323GwAdmRejNotSpecified, oacVoiceVoicePortBriAdminState=oacVoiceVoicePortBriAdminState, oacVoiceSipGwPhoneNumber=oacVoiceSipGwPhoneNumber, oacVoiceDialPeerVoiceVtoaccsEntry=oacVoiceDialPeerVoiceVtoaccsEntry, oacVoiceDialPeerOutCallsH245FailProtocolErrors=oacVoiceDialPeerOutCallsH245FailProtocolErrors, oacVoiceDialPeerOutCallsInternalFailDspUnavailable=oacVoiceDialPeerOutCallsInternalFailDspUnavailable, oacVoiceVoicePortBriProtocolDescriptor=oacVoiceVoicePortBriProtocolDescriptor, oacVoiceVmoaConnLesTotalCpIwfOriginated=oacVoiceVmoaConnLesTotalCpIwfOriginated, oacVoicePortVoipOutCallsCC1NoAnswer=oacVoicePortVoipOutCallsCC1NoAnswer, oacVoiceDialPeerCurrentCalls=oacVoiceDialPeerCurrentCalls, PYSNMP_MODULE_ID=oacVoiceMIBModule, oacVoiceVmoaConnAal2TotalFramesErrorsReceived=oacVoiceVmoaConnAal2TotalFramesErrorsReceived, oacVoiceDialPeerOutCallsHQFailCauseClass3=oacVoiceDialPeerOutCallsHQFailCauseClass3, oacVoiceVmoaConnCurrentState=oacVoiceVmoaConnCurrentState, oacVoiceVmoaConnAal2Table=oacVoiceVmoaConnAal2Table, oacVoiceVoicePortPriAisOccur=oacVoiceVoicePortPriAisOccur, oacVoiceH323GwGatekeeperAddress=oacVoiceH323GwGatekeeperAddress, oacVoicePortVoipIncCalls=oacVoicePortVoipIncCalls, oacVoiceDialPeerIncCallsRasFailAdmissionRejects=oacVoiceDialPeerIncCallsRasFailAdmissionRejects, oacVoiceSipGwRegisteredEndpoints=oacVoiceSipGwRegisteredEndpoints, oacVoiceDialPeerVoiceVmoabriCurrentState=oacVoiceDialPeerVoiceVmoabriCurrentState, oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived=oacVoiceDialPeerVoiceVmoapriTsxVoicePacketReceived, oacVoicePortVoipCurrentState=oacVoicePortVoipCurrentState, VoiceChnType=VoiceChnType, oacVoiceH323GwPortabilityStatus=oacVoiceH323GwPortabilityStatus, oacVoicePortVoipPriNbAisOccurence=oacVoicePortVoipPriNbAisOccurence, oacVoiceDialPeerFaxNbTxPackets=oacVoiceDialPeerFaxNbTxPackets, oacVoiceDialPeerRtpStatNbRxPackets=oacVoiceDialPeerRtpStatNbRxPackets, oacVoiceStatMosEntryMosAvg=oacVoiceStatMosEntryMosAvg, oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder=oacVoiceDialPeerVoiceVmoabriB2CurrentTxCoder, oacVoiceDialPeerVoiceVtoaccsTsxChannelType=oacVoiceDialPeerVoiceVtoaccsTsxChannelType, oacVoiceVoicePortFxsAdminState=oacVoiceVoicePortFxsAdminState, ConfigState=ConfigState, oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration=oacVoiceDialPeerVoiceVmoafxsTotalBlockingDuration, oacVoiceDialPeerVoiceVmoabriB2CurrentCid=oacVoiceDialPeerVoiceVmoabriB2CurrentCid, PortVoipCurrentState=PortVoipCurrentState, oacVoiceStatMosEntryLossRateAvg=oacVoiceStatMosEntryLossRateAvg, VoiceFxsProtocol=VoiceFxsProtocol, oacVoiceStatMosEntryPddAvg=oacVoiceStatMosEntryPddAvg, oacVoiceDialPeerOutCallsInternalFailNotSpecified=oacVoiceDialPeerOutCallsInternalFailNotSpecified, oacVoiceH323GwRegistrationRequest=oacVoiceH323GwRegistrationRequest, oacVoiceDialPeerVoiceVtoacesEntry=oacVoiceDialPeerVoiceVtoacesEntry, oacVoiceDialPeerOutCallsHQFailCauseClass1=oacVoiceDialPeerOutCallsHQFailCauseClass1, oacVoiceDialPeerIncCallsMgcpPathEstablished=oacVoiceDialPeerIncCallsMgcpPathEstablished, oacVoiceDialPeerRtpStatNbTxBytes=oacVoiceDialPeerRtpStatNbTxBytes, oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration=oacVoiceDialPeerVoiceVmoapriTotalBlockingDuration, oacVoiceConnectionBles=oacVoiceConnectionBles, VoiceUpDnState=VoiceUpDnState, oacVoicePortVoipIsdnLayer2Status=oacVoicePortVoipIsdnLayer2Status, oacVoiceSipServerRegisteredEndpoints=oacVoiceSipServerRegisteredEndpoints, oacVoiceDialPeerVoiceVtoacasTsxCurrentCID=oacVoiceDialPeerVoiceVtoacasTsxCurrentCID, oacVoiceDialPeerIncCallsH245FailProtocolErrors=oacVoiceDialPeerIncCallsH245FailProtocolErrors, oacVoiceVoicePortBriOperState=oacVoiceVoicePortBriOperState, oacVoiceVmoaConnAal2TotalBytesSent=oacVoiceVmoaConnAal2TotalBytesSent, oacVoiceVmoaConnElcpTable=oacVoiceVmoaConnElcpTable, oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder=oacVoiceDialPeerVoiceVtoacasTsxCurrentTxCoder, oacVoiceDialPeerVoiceVmoapriBlockingOccurence=oacVoiceDialPeerVoiceVmoapriBlockingOccurence, oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived=oacVoiceDialPeerVoiceVmoabriB1VoicePacketReceived, oacVoiceDialPeerVoiceVmoabriB1BytesSent=oacVoiceDialPeerVoiceVmoabriB1BytesSent, oacVoiceVtoaConnAal2TotalFramesReceived=oacVoiceVtoaConnAal2TotalFramesReceived, oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration=oacVoiceDialPeerVoiceVtoacasTotalBlockingDuration, oacVoiceDialPeerVoiceVmoabriPort=oacVoiceDialPeerVoiceVmoabriPort, oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences=oacVoiceDialPeerVoiceVtoacesOutOfSyncOccurences, oacVoicePortVoipMgcpOffHookEvents=oacVoicePortVoipMgcpOffHookEvents, oacVoiceDialPeerOutCallsHQFailCauseClass0=oacVoiceDialPeerOutCallsHQFailCauseClass0, OacVoipGatewayState=OacVoipGatewayState, oacVoiceDialPeerVoiceVmoabriB2BytesSent=oacVoiceDialPeerVoiceVmoabriB2BytesSent, oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived=oacVoiceDialPeerVoiceVmoafxsVoicePacketReceived, oacVoiceDialPeerVoiceVmoapriBxAllocNum=oacVoiceDialPeerVoiceVmoapriBxAllocNum, oacVoiceVoicePortPriRdiOccur=oacVoiceVoicePortPriRdiOccur, oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder=oacVoiceDialPeerVoiceVtoaccsTsxCurrentRxCoder, oacVoiceDialPeerVoiceVtoacasTable=oacVoiceDialPeerVoiceVtoacasTable, oacVoiceBriDialPeers=oacVoiceBriDialPeers, oacVoiceVoicePortFxsTable=oacVoiceVoicePortFxsTable, oacVoiceDialPeerIncCallsAdviceofCharge=oacVoiceDialPeerIncCallsAdviceofCharge, VoiceBriPortStatus=VoiceBriPortStatus, oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived=oacVoiceDialPeerVoiceVtoaccsTsxVoicePacketReceived, oacVoiceVoicePortBriProtocolState=oacVoiceVoicePortBriProtocolState, oacVoiceDialPeerVoiceVmoapriConfigState=oacVoiceDialPeerVoiceVmoapriConfigState, oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder=oacVoiceDialPeerVoiceVtoacasTsxCurrentRxCoder, oacVoiceVmoaConnEntry=oacVoiceVmoaConnEntry, oacVoiceVoicePortBriAttachedDialPeer=oacVoiceVoicePortBriAttachedDialPeer, oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder=oacVoiceDialPeerVoiceVmoapriTsxCurrentTxCoder, VoiceFxsPathStatus=VoiceFxsPathStatus, oacVoiceDialPeerVoiceVmoafxsPathDuration=oacVoiceDialPeerVoiceVmoafxsPathDuration, oacVoiceDialPeerVoiceVmoafxsPathEstablished=oacVoiceDialPeerVoiceVmoafxsPathEstablished, oacVoiceDialPeerIndex=oacVoiceDialPeerIndex, oacVoiceDialPeerFaxFailureRequestMode=oacVoiceDialPeerFaxFailureRequestMode, oacVoiceDialPeerVoiceVmoapriPortStatus=oacVoiceDialPeerVoiceVmoapriPortStatus, oacVoiceDialPeerVoiceVtoacesTable=oacVoiceDialPeerVoiceVtoacesTable, oacVoiceDialPeerOutCallsMgcpOffHookEvents=oacVoiceDialPeerOutCallsMgcpOffHookEvents, oacVoiceDialPeerVoiceVtoacasTsxTable=oacVoiceDialPeerVoiceVtoacasTsxTable, oacVoiceDialPeerVoiceVmoapriTsxCurrentCID=oacVoiceDialPeerVoiceVmoapriTsxCurrentCID, oacVoiceVtoaConnAtmVcTotalFailureDuration=oacVoiceVtoaConnAtmVcTotalFailureDuration, oacVoicePriDialPeers=oacVoicePriDialPeers, oacVoiceDialPeerVoiceVmoabriDFramesReceived=oacVoiceDialPeerVoiceVmoabriDFramesReceived, oacVoiceDialPeerVoiceVtoacasTsxEntry=oacVoiceDialPeerVoiceVtoacasTsxEntry, oacVoiceDialPeerVoiceVmoabriDEntry=oacVoiceDialPeerVoiceVmoabriDEntry, oacVoiceDialPeerVoiceVmoabriB2Bundle=oacVoiceDialPeerVoiceVmoabriB2Bundle, oacVoiceDialPeerVoiceVtoacasTsxCurrentBC=oacVoiceDialPeerVoiceVtoacasTsxCurrentBC, oacVoiceStatVoip=oacVoiceStatVoip, oacVoiceVmoaConnAtmVcTotalFailureDuration=oacVoiceVmoaConnAtmVcTotalFailureDuration, oacVoiceStatBles=oacVoiceStatBles, oacVoiceDialPeerIncCallsH245Failures=oacVoiceDialPeerIncCallsH245Failures, oacVoiceDialPeerVoiceVmoabriB1Bundle=oacVoiceDialPeerVoiceVmoabriB1Bundle, oacVoiceDialPeerOutCalls=oacVoiceDialPeerOutCalls, oacVoiceDialPeerOutCallsHQFailCauseClass6=oacVoiceDialPeerOutCallsHQFailCauseClass6, oacVoicePortVoipOutCallsIsdnCauseClass1=oacVoicePortVoipOutCallsIsdnCauseClass1, oacVoiceStatCompliances=oacVoiceStatCompliances, oacVoiceVtoaConnAal2TotalBytesSent=oacVoiceVtoaConnAal2TotalBytesSent, oacVoiceDialPeerVoiceVmoabriB2Table=oacVoiceDialPeerVoiceVmoabriB2Table, oacVoiceDialPeerVoiceVtoaccsTsxBundle=oacVoiceDialPeerVoiceVtoaccsTsxBundle, oacVoiceDialPeerIncCallsInternalFailUnknownNumber=oacVoiceDialPeerIncCallsInternalFailUnknownNumber, oacVoiceVtoaConnVpVc=oacVoiceVtoaConnVpVc)
