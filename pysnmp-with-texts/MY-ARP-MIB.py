#
# PySNMP MIB module MY-ARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-ARP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ip, = mibBuilder.importSymbols("IP-MIB", "ip")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
IfIndex, = mibBuilder.importSymbols("MY-TC", "IfIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, iso, ModuleIdentity, ObjectIdentity, Counter64, Gauge32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Unsigned32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "ModuleIdentity", "ObjectIdentity", "Counter64", "Gauge32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Unsigned32", "Counter32", "IpAddress")
DisplayString, TruthValue, PhysAddress, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "PhysAddress", "RowStatus", "TextualConvention")
myArpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2))
myArpMIB.setRevisions(('2002-03-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: myArpMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: myArpMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myArpMIB.setOrganization('D-Link Crop.')
if mibBuilder.loadTexts: myArpMIB.setContactInfo(' http://support.dlink.com')
if mibBuilder.loadTexts: myArpMIB.setDescription('This module defines my arp mibs.')
myArpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1))
myArpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1), )
if mibBuilder.loadTexts: myArpTable.setStatus('current')
if mibBuilder.loadTexts: myArpTable.setDescription('The IP Address Translation table used for mapping from IP addresses to physical addresses.')
myArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1), ).setIndexNames((0, "MY-ARP-MIB", "myArpIfIndex"), (0, "MY-ARP-MIB", "myArpNetAddress"))
if mibBuilder.loadTexts: myArpEntry.setStatus('current')
if mibBuilder.loadTexts: myArpEntry.setDescription("Each entry contains one IpAddress to `physical' address equivalence.")
myArpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpIfIndex.setStatus('current')
if mibBuilder.loadTexts: myArpIfIndex.setDescription("The interface on which this entry's equivalence is effective. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.")
myArpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpPhysAddress.setStatus('current')
if mibBuilder.loadTexts: myArpPhysAddress.setDescription("The media-dependent `physical' address.")
myArpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpNetAddress.setStatus('current')
if mibBuilder.loadTexts: myArpNetAddress.setDescription("The IpAddress corresponding to the media- dependent `physical' address.")
myArpRemainAge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpRemainAge.setStatus('current')
if mibBuilder.loadTexts: myArpRemainAge.setDescription('The remain age of this ARP entry, in units of minute')
myArpType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("arpa", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpType.setStatus('current')
if mibBuilder.loadTexts: myArpType.setDescription('The ARP type of the entry.')
myArpEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("interface", 3), ("vrrp", 4), ("trusted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpEntryType.setStatus('current')
if mibBuilder.loadTexts: myArpEntryType.setDescription('The entry type.')
myArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myArpStatus.setStatus('current')
if mibBuilder.loadTexts: myArpStatus.setDescription('entry status of this entry. and the means in this enviraments can reffer to the text-convention definition of the RowStatus.')
myArpIfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2), )
if mibBuilder.loadTexts: myArpIfTable.setStatus('current')
if mibBuilder.loadTexts: myArpIfTable.setDescription('Interface configure for ARP(Address Resolution Protocol).')
myArpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1), ).setIndexNames((0, "MY-ARP-MIB", "myArpIfIfIndex"))
if mibBuilder.loadTexts: myArpIfEntry.setStatus('current')
if mibBuilder.loadTexts: myArpIfEntry.setDescription('Each entry contains a interface configure for ARP')
myArpIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpIfIfIndex.setStatus('current')
if mibBuilder.loadTexts: myArpIfIfIndex.setDescription("The interface on which this entry's equivalence is effective. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.")
myArpIfCacheTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 18000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpIfCacheTimeOut.setStatus('current')
if mibBuilder.loadTexts: myArpIfCacheTimeOut.setDescription('Aging time in units of second of Arp table')
myArpCurrentTotalNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpCurrentTotalNumber.setStatus('current')
if mibBuilder.loadTexts: myArpCurrentTotalNumber.setDescription('Number of current total arp entrys this system have')
myArpCurrentUnresolveNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpCurrentUnresolveNumber.setStatus('current')
if mibBuilder.loadTexts: myArpCurrentUnresolveNumber.setDescription('Number of current unresolve arp entrys this system have')
myArpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2))
myArpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 1))
myArpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 2))
myArpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 1, 1)).setObjects(("MY-ARP-MIB", "myArpMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myArpMIBCompliance = myArpMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: myArpMIBCompliance.setDescription('The compliance statement for entities which implement the My Arp MIB')
myArpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 2, 1)).setObjects(("MY-ARP-MIB", "myArpIfIndex"), ("MY-ARP-MIB", "myArpPhysAddress"), ("MY-ARP-MIB", "myArpNetAddress"), ("MY-ARP-MIB", "myArpRemainAge"), ("MY-ARP-MIB", "myArpType"), ("MY-ARP-MIB", "myArpEntryType"), ("MY-ARP-MIB", "myArpStatus"), ("MY-ARP-MIB", "myArpIfIfIndex"), ("MY-ARP-MIB", "myArpIfCacheTimeOut"), ("MY-ARP-MIB", "myArpCurrentTotalNumber"), ("MY-ARP-MIB", "myArpCurrentUnresolveNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myArpMIBGroup = myArpMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myArpMIBGroup.setDescription('A collection of objects providing arp management and opertion to a My agent.')
mibBuilder.exportSymbols("MY-ARP-MIB", myArpTable=myArpTable, myArpMIBConformance=myArpMIBConformance, myArpMIBGroup=myArpMIBGroup, myArpIfCacheTimeOut=myArpIfCacheTimeOut, myArpMIB=myArpMIB, myArpMIBObjects=myArpMIBObjects, myArpType=myArpType, PYSNMP_MODULE_ID=myArpMIB, myArpIfEntry=myArpIfEntry, myArpMIBCompliances=myArpMIBCompliances, myArpPhysAddress=myArpPhysAddress, myArpEntry=myArpEntry, myArpStatus=myArpStatus, myArpNetAddress=myArpNetAddress, myArpIfTable=myArpIfTable, myArpMIBGroups=myArpMIBGroups, myArpIfIfIndex=myArpIfIfIndex, myArpRemainAge=myArpRemainAge, myArpCurrentTotalNumber=myArpCurrentTotalNumber, myArpIfIndex=myArpIfIndex, myArpEntryType=myArpEntryType, myArpCurrentUnresolveNumber=myArpCurrentUnresolveNumber, myArpMIBCompliance=myArpMIBCompliance)
