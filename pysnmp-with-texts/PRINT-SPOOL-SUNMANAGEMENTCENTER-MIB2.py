#
# PySNMP MIB module PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2
# Produced by pysmi-0.3.4 at Wed May  1 14:42:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter64, ObjectIdentity, TimeTicks, Unsigned32, IpAddress, ModuleIdentity, Gauge32, Integer32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter64", "ObjectIdentity", "TimeTicks", "Unsigned32", "IpAddress", "ModuleIdentity", "Gauge32", "Integer32", "iso", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
printSpool = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37))
printSpool.setRevisions(('1999-09-20 15:05',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: printSpool.setRevisionsDescriptions(('Rev 1.0 20th Sep 1999 15:05, Initial version Of MIB.',))
if mibBuilder.loadTexts: printSpool.setLastUpdated('9909201505Z')
if mibBuilder.loadTexts: printSpool.setOrganization('Sun Microsystems Inc.')
if mibBuilder.loadTexts: printSpool.setContactInfo(' Sun Microsystems Inc. Customer Support Postal: 901 San Antonio Road Palo Alto, CA-94303-4900 USA Tel: 650-960-1300 E-mail: service@sun.com')
if mibBuilder.loadTexts: printSpool.setDescription('The Print Spooler allows to monitor the status of the printer daemon, queue, and devices on the network.')
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
prod = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
sunsymon = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12))
agent = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2))
modules = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2))
prsLpschedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 1)).setObjects(("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsLpschedState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prsLpschedGroup = prsLpschedGroup.setStatus('current')
if mibBuilder.loadTexts: prsLpschedGroup.setDescription('Print request scheduler related statistics.')
prsLpstatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2)).setObjects(("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevRowstatus"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevName"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevDesc"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevMachine"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevDevice"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevState"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueName"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueState"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueJobs"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueCurrent"), ("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prsLpstatGroup = prsLpstatGroup.setStatus('current')
if mibBuilder.loadTexts: prsLpstatGroup.setDescription('Print device and print queue related statistics.')
prsLpschedState = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsLpschedState.setStatus('current')
if mibBuilder.loadTexts: prsLpschedState.setDescription('The state of the lpsched process. The value may be Up or Down.')
prsDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1), )
if mibBuilder.loadTexts: prsDeviceTable.setStatus('current')
if mibBuilder.loadTexts: prsDeviceTable.setDescription('Table of print device related information. Each row corresponds to a print device.')
prsDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1), ).setIndexNames((0, "PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsDevName"))
if mibBuilder.loadTexts: prsDeviceEntry.setStatus('current')
if mibBuilder.loadTexts: prsDeviceEntry.setDescription('The entry contains information corresponding to one print device.')
prsDevRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prsDevRowstatus.setStatus('current')
if mibBuilder.loadTexts: prsDevRowstatus.setDescription('The row status.')
prsDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsDevName.setStatus('current')
if mibBuilder.loadTexts: prsDevName.setDescription('The name of the printer.')
prsDevDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prsDevDesc.setStatus('current')
if mibBuilder.loadTexts: prsDevDesc.setDescription('The description of the printer.')
prsDevMachine = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsDevMachine.setStatus('current')
if mibBuilder.loadTexts: prsDevMachine.setDescription('The name of the host machine for the printer.')
prsDevDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsDevDevice.setStatus('current')
if mibBuilder.loadTexts: prsDevDevice.setDescription('The name of the device.')
prsDevState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsDevState.setStatus('current')
if mibBuilder.loadTexts: prsDevState.setDescription("The state of the device.The values are 'enabled' or 'disabled'.")
prsQueueTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2), )
if mibBuilder.loadTexts: prsQueueTable.setStatus('current')
if mibBuilder.loadTexts: prsQueueTable.setDescription('Table of print queue related information. Each row corresponds to a print queue.')
prsQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1), ).setIndexNames((0, "PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", "prsQueueName"))
if mibBuilder.loadTexts: prsQueueEntry.setStatus('current')
if mibBuilder.loadTexts: prsQueueEntry.setDescription('The entry contains information corresponding to one print queue.')
prsQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsQueueName.setStatus('current')
if mibBuilder.loadTexts: prsQueueName.setDescription('The Printer Queue Name.')
prsQueueState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsQueueState.setStatus('current')
if mibBuilder.loadTexts: prsQueueState.setDescription("The state of the Printer Queue.The values are 'accepting requests' or 'not accepting requests'.")
prsQueueJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsQueueJobs.setStatus('current')
if mibBuilder.loadTexts: prsQueueJobs.setDescription('The number of jobs in the printer queue.')
prsQueueCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prsQueueCurrent.setStatus('current')
if mibBuilder.loadTexts: prsQueueCurrent.setDescription('The current printer job.')
prsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 37, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prsQueueSize.setStatus('current')
if mibBuilder.loadTexts: prsQueueSize.setDescription('The size of the Printer Queue.')
mibBuilder.exportSymbols("PRINT-SPOOL-SUNMANAGEMENTCENTER-MIB2", prsDevState=prsDevState, prsQueueName=prsQueueName, prsQueueEntry=prsQueueEntry, prsQueueState=prsQueueState, prsQueueJobs=prsQueueJobs, prsDevDevice=prsDevDevice, sun=sun, prsQueueTable=prsQueueTable, sunsymon=sunsymon, prsDevDesc=prsDevDesc, prod=prod, prsDeviceTable=prsDeviceTable, modules=modules, PYSNMP_MODULE_ID=printSpool, printSpool=printSpool, prsQueueSize=prsQueueSize, prsLpschedGroup=prsLpschedGroup, prsDevName=prsDevName, prsDevRowstatus=prsDevRowstatus, prsLpschedState=prsLpschedState, prsQueueCurrent=prsQueueCurrent, prsDevMachine=prsDevMachine, prsDeviceEntry=prsDeviceEntry, agent=agent, prsLpstatGroup=prsLpstatGroup)
