#
# PySNMP MIB module LIEBERT-GP-REGISTRATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIEBERT-GP-REGISTRATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:06:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, ObjectIdentity, enterprises, Unsigned32, IpAddress, Bits, Counter64, TimeTicks, ModuleIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "ObjectIdentity", "enterprises", "Unsigned32", "IpAddress", "Bits", "Counter64", "TimeTicks", "ModuleIdentity", "iso", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
liebertGlobalProductsRegistrationModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1, 1))
liebertGlobalProductsRegistrationModule.setRevisions(('2015-02-02 00:00', '2014-09-17 00:00', '2014-06-24 00:00', '2014-03-27 00:00', '2013-07-10 00:00', '2013-05-14 00:00', '2009-04-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2006-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setRevisionsDescriptions(('Added registration for GXT3 UPS', 'Added registration for new Thermal product variants', 'Added registration for EXM and variants', 'Added registration for NXr variants, EXL, NX variants, Air Handlers and RackPDU2', 'Added registration for GXT4 UPS', 'Added registration for NXL-JD and APS UPS', 'Added registrations for iCOM PA, XD, XP, SC and CR product families', 'Added PDU MIB registrations', 'Modified contact email address and added NXL registration.', 'Added support for Liebert DS Unit.',))
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setLastUpdated('201403270000Z')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setOrganization('Liebert Corporation')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setContactInfo('Contact: Technical Support Postal: Liebert Corporation 1050 Dearborn Drive P.O. Box 29186 Columbus OH, 43229 US Tel: +1 (800) 222-5877 E-mail: liebert.monitoring@emerson.com Web: www.liebert.com Author: John Stephen Sark')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setDescription("The MIB module used to register Liebert SNMP OIDs. Copyright 2000-2014 Liebert Corporation. All rights reserved. Reproduction of this document is authorized on the condition that the forgoing copyright notice is included. This Specification is supplied 'AS IS' and Liebert Corporation makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
emerson = ObjectIdentity((1, 3, 6, 1, 4, 1, 476))
if mibBuilder.loadTexts: emerson.setStatus('current')
if mibBuilder.loadTexts: emerson.setDescription('The enterprise registration for Emerson Electric Corporation.')
liebertCorp = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1))
if mibBuilder.loadTexts: liebertCorp.setStatus('current')
if mibBuilder.loadTexts: liebertCorp.setDescription('Liebert Corporation obtains it branch from Emerson Electric.')
liebertGlobalProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42))
if mibBuilder.loadTexts: liebertGlobalProducts.setStatus('current')
if mibBuilder.loadTexts: liebertGlobalProducts.setDescription('This branch is used for Liebert Global Products related information.')
if mibBuilder.loadTexts: liebertGlobalProducts.setReference('All objects registered under this branch must be contained in this registration module.')
lgpModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1))
if mibBuilder.loadTexts: lgpModuleReg.setStatus('current')
if mibBuilder.loadTexts: lgpModuleReg.setDescription('The Liebert Global Products MODULE-IDENTITY OIDs are registered via this branch.')
if mibBuilder.loadTexts: lgpModuleReg.setReference('The Liebert MODULE-IDENTITY(s) are registered below in this registration module.')
lgpAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2))
if mibBuilder.loadTexts: lgpAgent.setStatus('current')
if mibBuilder.loadTexts: lgpAgent.setDescription('All Liebert agent objects are registered in this branch.')
if mibBuilder.loadTexts: lgpAgent.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert SNMP Agent - Registrations.')
lgpFoundation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3))
if mibBuilder.loadTexts: lgpFoundation.setStatus('current')
if mibBuilder.loadTexts: lgpFoundation.setDescription('This branch is used to register Liebert objects that have common use across product families.')
if mibBuilder.loadTexts: lgpFoundation.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Foundation Parameters - Registrations.')
lgpProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4))
if mibBuilder.loadTexts: lgpProductSpecific.setStatus('current')
if mibBuilder.loadTexts: lgpProductSpecific.setDescription('This branch is used to register Liebert product specific object identifiers.')
if mibBuilder.loadTexts: lgpProductSpecific.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Product Specific - Registrations.')
liebertModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1))
if mibBuilder.loadTexts: liebertModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertModuleReg.setDescription('The Liebert Global Products MODULE-IDENTITY OIDs are registered via this branch.')
liebertAgentModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2))
if mibBuilder.loadTexts: liebertAgentModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertAgentModuleReg.setDescription('The Liebert Global Products AGENT MODULE-IDENTITY OIDs are registered via this branch.')
liebertConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 3))
if mibBuilder.loadTexts: liebertConditionsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertConditionsModuleReg.setDescription('The Liebert Global Products CONDITIONS MODULE-IDENTITY OIDs are registered via this branch.')
liebertNotificationsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 4))
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setDescription('The Liebert Global Products NOTIFICATIONS MODULE-IDENTITY OIDs are registered via this branch.')
liebertEnvironmentalModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 5))
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setDescription('The Liebert Global Products ENVIRONMENTAL MODULE-IDENTITY OIDs are registered via this branch.')
liebertPowerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 6))
if mibBuilder.loadTexts: liebertPowerModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertPowerModuleReg.setDescription('The Liebert Global Products POWER MODULE-IDENTITY OIDs are registered via this branch.')
liebertControllerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 7))
if mibBuilder.loadTexts: liebertControllerModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertControllerModuleReg.setDescription('The Liebert Global Products CONTROLLER MODULE-IDENTITY OIDs are registered via this branch.')
liebertSystemModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 8))
if mibBuilder.loadTexts: liebertSystemModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertSystemModuleReg.setDescription('The Liebert Global Products SYSTEM MODULE-IDENTITY OIDs are registered via this branch.')
liebertPduModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 9))
if mibBuilder.loadTexts: liebertPduModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertPduModuleReg.setDescription('The Liebert Global Products Power Distribution (PDU) MODULE-IDENTITY OIDs are registered via this branch.')
liebertFlexibleModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 10))
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setDescription('The Liebert Global Products Flexible MODULE-IDENTITY OIDs are registered via this branch.')
liebertFlexibleConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 11))
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setDescription('The Liebert Global Products FLEXIBLE CONDITIONS MODULE-IDENTITY OIDs are registered via this branch.')
lgpAgentIdent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1))
if mibBuilder.loadTexts: lgpAgentIdent.setStatus('current')
if mibBuilder.loadTexts: lgpAgentIdent.setDescription('Liebert Agent Identification - This branch contains OIDS that are used to identify an agent and its managed device.')
if mibBuilder.loadTexts: lgpAgentIdent.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-AGENT-MIB defined in the file LIEBERT_GP_AGENT.MIB.')
lgpAgentNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3))
if mibBuilder.loadTexts: lgpAgentNotifications.setStatus('current')
if mibBuilder.loadTexts: lgpAgentNotifications.setDescription('This branch is used to register Liebert agent notify object identifiers.')
if mibBuilder.loadTexts: lgpAgentNotifications.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-AGENT-MIB defined in the file LIEBERT_GP_AGENT.MIB.')
lgpAgentDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4))
if mibBuilder.loadTexts: lgpAgentDevice.setStatus('current')
if mibBuilder.loadTexts: lgpAgentDevice.setDescription('This branch contains OIDs that are used to identify a managed device.')
if mibBuilder.loadTexts: lgpAgentDevice.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-AGENT-MIB defined in the file LIEBERT_GP_AGENT.MIB.')
lgpAgentControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5))
if mibBuilder.loadTexts: lgpAgentControl.setStatus('current')
if mibBuilder.loadTexts: lgpAgentControl.setDescription('This branch contains objects relating to the control of the agent software.')
if mibBuilder.loadTexts: lgpAgentControl.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-AGENT-MIB defined in the file LIEBERT_GP_AGENT.MIB.')
lgpConditions = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2))
if mibBuilder.loadTexts: lgpConditions.setStatus('current')
if mibBuilder.loadTexts: lgpConditions.setDescription('This branch is used to register Liebert status condition object identifiers.')
if mibBuilder.loadTexts: lgpConditions.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-CONDITIONS-MIB defined by the file LIEBERT_GP_COND.MIB.')
lgpNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3))
if mibBuilder.loadTexts: lgpNotifications.setStatus('current')
if mibBuilder.loadTexts: lgpNotifications.setDescription('This branch is used to register Liebert notification object identifiers.')
if mibBuilder.loadTexts: lgpNotifications.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-NOTIFICATIONS-MIB defined by the file LIEBERT_GP_NOTIFY.MIB.')
lgpEnvironmental = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 4))
if mibBuilder.loadTexts: lgpEnvironmental.setStatus('current')
if mibBuilder.loadTexts: lgpEnvironmental.setDescription('This branch is used to register Liebert environmental object identifiers.')
if mibBuilder.loadTexts: lgpEnvironmental.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-ENVIRONMENTAL-MIB defined by the file LIEBERT_GP_ENV.MIB.')
lgpPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 5))
if mibBuilder.loadTexts: lgpPower.setStatus('current')
if mibBuilder.loadTexts: lgpPower.setDescription('This branch is used to register Liebert power object identifiers.')
if mibBuilder.loadTexts: lgpPower.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-POWER-MIB defined by the file LIEBERT_GP_POWER.MIB.')
lgpController = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 6))
if mibBuilder.loadTexts: lgpController.setStatus('current')
if mibBuilder.loadTexts: lgpController.setDescription('This branch is used to register Liebert controller object identifiers.')
if mibBuilder.loadTexts: lgpController.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-CONTROLLER-MIB defined by the file LIEBERT_GP_CONTROLLER.MIB.')
lgpSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 7))
if mibBuilder.loadTexts: lgpSystem.setStatus('current')
if mibBuilder.loadTexts: lgpSystem.setDescription('This branch is used to register Liebert system object identifiers.')
if mibBuilder.loadTexts: lgpSystem.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-SYSTEM-MIB defined by the file LIEBERT_GP_SYSTEM.MIB.')
lgpPdu = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 8))
if mibBuilder.loadTexts: lgpPdu.setStatus('current')
if mibBuilder.loadTexts: lgpPdu.setDescription('This branch is used to register Liebert system object identifiers.')
if mibBuilder.loadTexts: lgpPdu.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-PDU-MIB defined by the file LIEBERT_GP_PDU.MIB.')
lgpFlexible = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 9))
if mibBuilder.loadTexts: lgpFlexible.setStatus('current')
if mibBuilder.loadTexts: lgpFlexible.setDescription('This branch is used to register Liebert system object identifiers.')
if mibBuilder.loadTexts: lgpFlexible.setReference('All objects registered under this branch are implemented by the LIEBERT-GP-FLEXIBLE-MIB defined by the file LIEBERT_GP_FLEXIBLE.MIB.')
lgpUpsProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2))
if mibBuilder.loadTexts: lgpUpsProducts.setStatus('current')
if mibBuilder.loadTexts: lgpUpsProducts.setDescription('This branch is used to register Liebert UPS object identifiers.')
if mibBuilder.loadTexts: lgpUpsProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert UPS Registrations.')
lgpAcProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3))
if mibBuilder.loadTexts: lgpAcProducts.setStatus('current')
if mibBuilder.loadTexts: lgpAcProducts.setDescription('This branch is used to register Liebert Environmental object identifiers.')
if mibBuilder.loadTexts: lgpAcProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Environmental Air Conditioning Registrations.')
lgpPowerConditioningProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4))
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setStatus('current')
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setDescription('This branch is used to register Liebert Power Conditioning object identifiers.')
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Power Conditioning Registrations.')
lgpTransferSwitchProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5))
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setStatus('current')
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setDescription('This branch is used to register Liebert Transfer Switch object identifiers.')
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Transfer Switch Registrations.')
lgpMultiLinkProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7))
if mibBuilder.loadTexts: lgpMultiLinkProducts.setStatus('current')
if mibBuilder.loadTexts: lgpMultiLinkProducts.setDescription('This branch is used to register Liebert MultiLink object identifiers.')
if mibBuilder.loadTexts: lgpMultiLinkProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert MultiLink Registrations.')
lgpPowerDistributionProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8))
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setStatus('current')
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setDescription('This branch is used to register stand-alone Liebert Power Distribution object identifiers.')
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Liebert Power Distribution Registrations.')
lgpCombinedSystemProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10))
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setStatus('current')
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setDescription('This branch is used to register object identifiers for Combined System devices.')
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setReference('The registrations for the objects in this branch are defined below in a sub-section titled Combined Power System Product Registrations.')
lgpSeries7200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 1))
if mibBuilder.loadTexts: lgpSeries7200.setStatus('current')
if mibBuilder.loadTexts: lgpSeries7200.setDescription('This branch is used to register Liebert Series 7200 UPS product information.')
if mibBuilder.loadTexts: lgpSeries7200.setReference('There are currently no objects registered under this branch.')
lgpUPStationGXT = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 2))
if mibBuilder.loadTexts: lgpUPStationGXT.setStatus('current')
if mibBuilder.loadTexts: lgpUPStationGXT.setDescription('This branch is used to register Liebert UPStationGXT UPS product information.')
if mibBuilder.loadTexts: lgpUPStationGXT.setReference('There are currently no objects registered under this branch.')
lgpPowerSureInteractive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 3))
if mibBuilder.loadTexts: lgpPowerSureInteractive.setStatus('current')
if mibBuilder.loadTexts: lgpPowerSureInteractive.setDescription('This branch is used to register Liebert PowerSure Interactive UPS product information.')
if mibBuilder.loadTexts: lgpPowerSureInteractive.setReference('There are currently no objects registered under this branch.')
lgpNfinity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 4))
if mibBuilder.loadTexts: lgpNfinity.setStatus('current')
if mibBuilder.loadTexts: lgpNfinity.setDescription('This branch is used to register Liebert Nfinity UPS product information.')
if mibBuilder.loadTexts: lgpNfinity.setReference('There are currently no objects registered under this branch.')
lgpNpower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 5))
if mibBuilder.loadTexts: lgpNpower.setStatus('current')
if mibBuilder.loadTexts: lgpNpower.setDescription('This branch is used to register Liebert Npower UPS product information.')
if mibBuilder.loadTexts: lgpNpower.setReference('There are currently no objects registered under this branch.')
lgpGXT2Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 6))
if mibBuilder.loadTexts: lgpGXT2Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT2Dual.setDescription('This branch is used to register Liebert GXT2 Dual Inverter product information.')
if mibBuilder.loadTexts: lgpGXT2Dual.setReference('There are currently no objects registered under this branch.')
lgpPowerSureInteractive2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 7))
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setStatus('current')
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setDescription('This branch is used to register Liebert PowerSure Interactive 2 UPS product information.')
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setReference('There are currently no objects registered under this branch.')
lgpNX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 8))
if mibBuilder.loadTexts: lgpNX.setStatus('current')
if mibBuilder.loadTexts: lgpNX.setDescription('This branch is used to register ENPC Nx UPS product information.')
if mibBuilder.loadTexts: lgpNX.setReference('There are currently no objects registered under this branch.')
lgpHiNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 9))
if mibBuilder.loadTexts: lgpHiNet.setStatus('current')
if mibBuilder.loadTexts: lgpHiNet.setDescription('This branch is used to register Hiross HiNet UPS product information.')
if mibBuilder.loadTexts: lgpHiNet.setReference('There are currently no objects registered under this branch.')
lgpNXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10))
if mibBuilder.loadTexts: lgpNXL.setStatus('current')
if mibBuilder.loadTexts: lgpNXL.setDescription('This branch is used to register NXL UPS product information.')
if mibBuilder.loadTexts: lgpNXL.setReference('The registrations for the objects in this branch are defined below in a sub-section titled NXL Family Liebert NXL UPS product Registrations.')
lgpSuper400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 11))
if mibBuilder.loadTexts: lgpSuper400.setStatus('current')
if mibBuilder.loadTexts: lgpSuper400.setDescription('This branch is used to register Super 400 UPS product information.')
if mibBuilder.loadTexts: lgpSuper400.setReference('There are currently no objects registered under this branch.')
lgpSeries600or610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 12))
if mibBuilder.loadTexts: lgpSeries600or610.setStatus('current')
if mibBuilder.loadTexts: lgpSeries600or610.setDescription('This branch is used to register the Liebert Series 600/610 UPS product information.')
if mibBuilder.loadTexts: lgpSeries600or610.setReference('There are currently no objects registered under this branch.')
lgpSeries300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 13))
if mibBuilder.loadTexts: lgpSeries300.setStatus('current')
if mibBuilder.loadTexts: lgpSeries300.setDescription('This branch is used to register the Liebert Series 300 UPS product information.')
if mibBuilder.loadTexts: lgpSeries300.setReference('There are currently no objects registered under this branch.')
lgpSeries610SMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 14))
if mibBuilder.loadTexts: lgpSeries610SMS.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610SMS.setDescription('This branch is used to register the Liebert Series 610 Single Module System (SMS) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610SMS.setReference('There are currently no objects registered under this branch.')
lgpSeries610MMU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 15))
if mibBuilder.loadTexts: lgpSeries610MMU.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610MMU.setDescription('This branch is used to register the Liebert Series 610 Multi Module Unit (MMU) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610MMU.setReference('There are currently no objects registered under this branch.')
lgpSeries610SCC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 16))
if mibBuilder.loadTexts: lgpSeries610SCC.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610SCC.setDescription('This branch is used to register the Liebert Series 610 System Control Cabinet (SCC) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610SCC.setReference('There are currently no objects registered under this branch.')
lgpGXT3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 17))
if mibBuilder.loadTexts: lgpGXT3.setStatus('current')
if mibBuilder.loadTexts: lgpGXT3.setDescription('This branch is used to register Liebert GXT3 product information.')
if mibBuilder.loadTexts: lgpGXT3.setReference('There are currently no objects registered under this branch.')
lgpGXT3Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 18))
if mibBuilder.loadTexts: lgpGXT3Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT3Dual.setDescription('This branch is used to register Liebert GXT3 Dual Inverter product information.')
if mibBuilder.loadTexts: lgpGXT3Dual.setReference('There are currently no objects registered under this branch.')
lgpNXr = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19))
if mibBuilder.loadTexts: lgpNXr.setStatus('current')
if mibBuilder.loadTexts: lgpNXr.setDescription('This branch is used to register Liebert APM UPS product information.')
lgpITA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 1))
if mibBuilder.loadTexts: lgpITA.setStatus('current')
if mibBuilder.loadTexts: lgpITA.setDescription('This branch is used to register information for Emerson Network Power ITA UPS product.')
if mibBuilder.loadTexts: lgpITA.setReference('There are currently no objects registered under this branch.')
lgpNXRb = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 2))
if mibBuilder.loadTexts: lgpNXRb.setStatus('current')
if mibBuilder.loadTexts: lgpNXRb.setDescription('This branch is used to register information for Emerson Network Power NXRb UPS product.')
if mibBuilder.loadTexts: lgpNXRb.setReference('There are currently no objects registered under this branch.')
lgpNXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 3))
if mibBuilder.loadTexts: lgpNXC.setStatus('current')
if mibBuilder.loadTexts: lgpNXC.setDescription('This branch is used to register information for Emerson Network Power NXC(ITAb) UPS product.')
if mibBuilder.loadTexts: lgpNXC.setReference('There are currently no objects registered under this branch.')
lgpNXC30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 4))
if mibBuilder.loadTexts: lgpNXC30to40k.setStatus('current')
if mibBuilder.loadTexts: lgpNXC30to40k.setDescription('This branch is used to register information for Emerson Network Power NXC 30/40k UPS product.')
if mibBuilder.loadTexts: lgpNXC30to40k.setReference('There are currently no objects registered under this branch.')
lgpITA30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 5))
if mibBuilder.loadTexts: lgpITA30to40k.setStatus('current')
if mibBuilder.loadTexts: lgpITA30to40k.setDescription('This branch is used to register information for Emerson Network Power ITA 30/40k UPS product.')
if mibBuilder.loadTexts: lgpITA30to40k.setReference('There are currently no objects registered under this branch.')
lgpAPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 20))
if mibBuilder.loadTexts: lgpAPS.setStatus('current')
if mibBuilder.loadTexts: lgpAPS.setDescription('This branch is used to register Liebert APS Modular UPS product information.')
if mibBuilder.loadTexts: lgpAPS.setReference('There are currently no objects registered under this branch.')
lgpMUNiMx = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22))
if mibBuilder.loadTexts: lgpMUNiMx.setStatus('current')
if mibBuilder.loadTexts: lgpMUNiMx.setDescription('This branch is used to register Liebert UPS with MUNiMx product information.')
if mibBuilder.loadTexts: lgpMUNiMx.setReference('The registrations for the objects in this branch are defined below in a sub-section titled MUNiMx Family Liebert MUNiMx UPS product Registrations.')
lgpGXT4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 23))
if mibBuilder.loadTexts: lgpGXT4.setStatus('current')
if mibBuilder.loadTexts: lgpGXT4.setDescription('This branch is used to register Liebert GXT4 product information.')
if mibBuilder.loadTexts: lgpGXT4.setReference('There are currently no objects registered under this branch.')
lgpGXT4Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 24))
if mibBuilder.loadTexts: lgpGXT4Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT4Dual.setDescription('This branch is used to register Liebert GXT4 Dual Inverter product information.')
if mibBuilder.loadTexts: lgpGXT4Dual.setReference('There are currently no objects registered under this branch.')
lgpEXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 25))
if mibBuilder.loadTexts: lgpEXL.setStatus('current')
if mibBuilder.loadTexts: lgpEXL.setDescription('This branch is used to register Liebert eXL UPS product information.')
if mibBuilder.loadTexts: lgpEXL.setReference('There are currently no objects registered under this branch.')
lgpEXM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26))
if mibBuilder.loadTexts: lgpEXM.setStatus('current')
if mibBuilder.loadTexts: lgpEXM.setDescription('This branch is used to register Emerson Network Power eXM UPS product information.')
lgpEXM208v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 1))
if mibBuilder.loadTexts: lgpEXM208v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM208v.setDescription('This branch is used to register information for Emerson Network Power eXM 208v UPS product.')
if mibBuilder.loadTexts: lgpEXM208v.setReference('There are currently no objects registered under this branch.')
lgpEXM400v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 2))
if mibBuilder.loadTexts: lgpEXM400v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM400v.setDescription('This branch is used to register information for Emerson Network Power eXM 400v UPS product.')
if mibBuilder.loadTexts: lgpEXM400v.setReference('There are currently no objects registered under this branch.')
lgpEXM480v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 3))
if mibBuilder.loadTexts: lgpEXM480v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM480v.setDescription('This branch is used to register information for Emerson Network Power eXM 480v UPS product.')
if mibBuilder.loadTexts: lgpEXM480v.setReference('There are currently no objects registered under this branch.')
lgpEPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27))
if mibBuilder.loadTexts: lgpEPM.setStatus('current')
if mibBuilder.loadTexts: lgpEPM.setDescription('This branch is used to register Emerson Network Power ePM UPS product information.')
lgpEPM300k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 1))
if mibBuilder.loadTexts: lgpEPM300k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM300k.setDescription('This branch is used to register information for Emerson Network Power ePM 300k UPS product.')
if mibBuilder.loadTexts: lgpEPM300k.setReference('There are currently no objects registered under this branch.')
lgpEPM400k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 2))
if mibBuilder.loadTexts: lgpEPM400k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM400k.setDescription('This branch is used to register information for Emerson Network Power ePM 400k UPS product.')
if mibBuilder.loadTexts: lgpEPM400k.setReference('There are currently no objects registered under this branch.')
lgpEPM500k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 3))
if mibBuilder.loadTexts: lgpEPM500k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM500k.setDescription('This branch is used to register information for Emerson Network Power ePM 500k UPS product.')
if mibBuilder.loadTexts: lgpEPM500k.setReference('There are currently no objects registered under this branch.')
lgpEPM600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 4))
if mibBuilder.loadTexts: lgpEPM600k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM600k.setDescription('This branch is used to register information for Emerson Network Power ePM 600k UPS product.')
if mibBuilder.loadTexts: lgpEPM600k.setReference('There are currently no objects registered under this branch.')
lgpEPM800k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 5))
if mibBuilder.loadTexts: lgpEPM800k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM800k.setDescription('This branch is used to register information for Emerson Network Power ePM 800k UPS product.')
if mibBuilder.loadTexts: lgpEPM800k.setReference('There are currently no objects registered under this branch.')
lgpEXMMSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 29))
if mibBuilder.loadTexts: lgpEXMMSR.setStatus('current')
if mibBuilder.loadTexts: lgpEXMMSR.setDescription('This branch is used to register Emerson Network Power eXM M/S/R UPS product information.')
lgpNXLJD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10, 1))
if mibBuilder.loadTexts: lgpNXLJD.setStatus('current')
if mibBuilder.loadTexts: lgpNXLJD.setDescription('This branch is used to register information for Emerson Network Power Liebert NXL-JD UPS products.')
if mibBuilder.loadTexts: lgpNXLJD.setReference('There are currently no objects registered under this branch.')
lgpNX225to600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22, 1))
if mibBuilder.loadTexts: lgpNX225to600k.setStatus('current')
if mibBuilder.loadTexts: lgpNX225to600k.setDescription('This branch is used to register information for Emerson Network Power Liebert NX UPS products.')
if mibBuilder.loadTexts: lgpNX225to600k.setReference('There are currently no objects registered under this branch.')
lgpAdvancedMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 1))
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setStatus('current')
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setDescription('This branch is used to register Liebert Environmental Advanced Microprocessor control information.')
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setReference('There are currently no objects registered under this branch.')
lgpStandardMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 2))
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setStatus('current')
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setDescription('This branch is used to register Liebert Environmental Standard Microprocessor control information.')
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setReference('There are currently no objects registered under this branch.')
lgpMiniMate2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 3))
if mibBuilder.loadTexts: lgpMiniMate2.setStatus('current')
if mibBuilder.loadTexts: lgpMiniMate2.setDescription('This branch is used to register Liebert Environmental Mini-Mate 2 product information.')
if mibBuilder.loadTexts: lgpMiniMate2.setReference('There are currently no objects registered under this branch.')
lgpHimod = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 4))
if mibBuilder.loadTexts: lgpHimod.setStatus('current')
if mibBuilder.loadTexts: lgpHimod.setDescription('This branch is used to register Liebert Environmental Himod product information.')
if mibBuilder.loadTexts: lgpHimod.setReference('There are currently no objects registered under this branch.')
lgpCEMS100orLECS15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 5))
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setStatus('current')
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setDescription('This branch is used to register Emerson Network Power Australia Environmental CEMS100 and LECS15 control information.')
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setReference('There are currently no objects registered under this branch.')
lgpIcom = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 6))
if mibBuilder.loadTexts: lgpIcom.setStatus('current')
if mibBuilder.loadTexts: lgpIcom.setDescription('This branch is used to register the Emerson Network Power Environmental iCOM control information.')
if mibBuilder.loadTexts: lgpIcom.setReference('There are currently no objects registered under this branch.')
lgpIcomPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7))
if mibBuilder.loadTexts: lgpIcomPA.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPA.setDescription('This branch is used to register information for the Emerson Network Power Liebert PA (Floor mount) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomPA.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM PA Family Environmental Registrations.')
lgpIcomXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8))
if mibBuilder.loadTexts: lgpIcomXD.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXD.setDescription('This branch is used to register information for the Emerson Network Power Liebert XD (Rack cooling with compressor) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomXD.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM XD Family - Liebert XD Environmental Registrations.')
lgpIcomXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9))
if mibBuilder.loadTexts: lgpIcomXP.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXP.setDescription('This branch is used to register information for the Emerson Network Power Liebert XP (Pumped refrigerant) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomXP.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM XP Family Environmental Registrations.')
lgpIcomSC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10))
if mibBuilder.loadTexts: lgpIcomSC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSC.setDescription('This branch is used to register information for the Emerson Network Power Liebert SC (Chiller) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomSC.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM SC Family Environmental Registrations.')
lgpIcomCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11))
if mibBuilder.loadTexts: lgpIcomCR.setStatus('current')
if mibBuilder.loadTexts: lgpIcomCR.setDescription('This branch is used to register information for the Emerson Network Power Liebert CR (Computer Row) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomCR.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM CR Family Environmental Registrations.')
lgpIcomAH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12))
if mibBuilder.loadTexts: lgpIcomAH.setStatus('current')
if mibBuilder.loadTexts: lgpIcomAH.setDescription('This branch is used to register information for the Emerson Network Power Liebert AH (Air Handler) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomAH.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM AH Family Environmental Registrations.')
lgpIcomDCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 13))
if mibBuilder.loadTexts: lgpIcomDCL.setStatus('current')
if mibBuilder.loadTexts: lgpIcomDCL.setDescription('This branch is used to register information for the Emerson Network Power Liebert DCL Environmental product family.')
if mibBuilder.loadTexts: lgpIcomDCL.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM DCL Family Environmental Registrations.')
lgpIcomEEV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 14))
if mibBuilder.loadTexts: lgpIcomEEV.setStatus('current')
if mibBuilder.loadTexts: lgpIcomEEV.setDescription('This branch is used to register information for the Emerson Network Power Liebert EEV Environmental product family.')
if mibBuilder.loadTexts: lgpIcomEEV.setReference('The registrations for the objects in this branch are defined below in a sub-section titled iCOM EEV Family Environmental Registrations.')
lgpIcomPAtypeDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setDescription('This branch is used to register information for Emerson Network Power Liebert DS Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeHPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setDescription('This branch is used to register information for Emerson Network Power Liebert HPM Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeChallenger = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 3))
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setDescription('This branch is used to register information for Emerson Network Power Liebert Challenger Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePeX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 4))
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setDescription('This branch is used to register information for Emerson Network Power Liebert PeX Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeDeluxeSys3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setDescription('This branch is used to register information for Emerson Network Power Liebert Deluxe Environmental products.')
lgpIcomPAtypeDeluxeSystem3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setDescription('This branch is used to register information for Emerson Network Power Liebert Deluxe System 3 and lower Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setDescription('This branch is used to register information for Emerson Network Power Liebert CW146 and lower Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeJumboCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 6))
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setDescription('This branch is used to register information for Emerson Network Power Liebert CW181 and larger Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeDSE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setDescription('This branch is used to register information for Emerson Network Power Liebert DSE Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8))
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setDescription('This branch is used to register information for Emerson Network Power Liebert PDX - PCW Small Environmental products.')
lgpIcomPAtypePDXsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setDescription('This branch is used to register information for Emerson Network Power Liebert PDX Small Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePCWsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setDescription('This branch is used to register information for Emerson Network Power Liebert PCW Small Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePDX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9))
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setDescription('This branch is used to register information for Emerson Network Power Liebert PDX - PCW Large Environmental products.')
lgpIcomPAtypePDXlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setDescription('This branch is used to register information for Emerson Network Power Liebert PDX Large Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePCWlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setDescription('This branch is used to register information for Emerson Network Power Liebert PCW Large Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeHPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 10))
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setDescription('This branch is used to register information for Emerson Network Power Liebert HPS Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setReference('There are currently no objects registered under this branch.')
lgpIcomXDtypeXDF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 1))
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setDescription('This branch is used to register information for Emerson Network Power Liebert XDF Environmental products.')
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setReference('There are currently no objects registered under this branch.')
lgpIcomXDtypeXDFN = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 2))
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setDescription('This branch is used to register information for Emerson Network Power Liebert XDFN Environmental products.')
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setDescription('This branch is used to register information for Emerson Network Power Liebert XDP Environmental products.')
lgpIcomXPtypeXDPCray = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setDescription('This branch is used to register information for Emerson Network Power Liebert XDP Environmental products for Cray.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 2))
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setDescription('This branch is used to register information for Emerson Network Power Liebert XDC Environmental products.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDPW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 3))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setDescription('This branch is used to register information for Emerson Network Power Liebert XDP-W Environmental products.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC Environmental products.')
lgpIcomSCtypeHPCSSmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-S Small.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCSLarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 2))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-S Large.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 3))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-R.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 4))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-M.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 5))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-L.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 6))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setDescription('This branch is used to register information for Emerson Network Power Liebert HPC-W.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setReference('There are currently no objects registered under this branch.')
lgpIcomCRtypeCRV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11, 1))
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setStatus('current')
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setDescription('This branch is used to register information for Emerson Network Power Liebert CRV Environmental products.')
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setReference('There are currently no objects registered under this branch.')
lgpIcomAHStandard = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12, 1))
if mibBuilder.loadTexts: lgpIcomAHStandard.setStatus('current')
if mibBuilder.loadTexts: lgpIcomAHStandard.setDescription('This branch is used to register information for Emerson Network Power Liebert AH Standard (Air Handler).')
if mibBuilder.loadTexts: lgpIcomAHStandard.setReference('There are currently no objects registered under this branch.')
lgpPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 1))
if mibBuilder.loadTexts: lgpPMP.setStatus('current')
if mibBuilder.loadTexts: lgpPMP.setDescription('This branch is used to register Liebert Power Distribution product information for the PMP (Power Monitoring Panel) product.')
if mibBuilder.loadTexts: lgpPMP.setReference('There are currently no objects registered under this branch.')
lgpEPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 2))
if mibBuilder.loadTexts: lgpEPMP.setStatus('current')
if mibBuilder.loadTexts: lgpEPMP.setDescription('This branch is used to register Liebert Power Distribution product information for the EPMP (Extended Power Monitoring Panel) product.')
if mibBuilder.loadTexts: lgpEPMP.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitchEDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 1))
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setDescription('This branch is used to register Liebert Transfer Switch product information for the EDS Static Transfer Switch product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 2))
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setDescription('This branch is used to register Liebert Transfer Switch product information for the Static Transfer Switch 1 product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 3))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setDescription('This branch is used to register Liebert Transfer Switch product information for the Static Transfer Switch 2 product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch2FourPole = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 4))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setDescription('This branch is used to register Liebert Transfer Switch product information for the Static Transfer Switch 2 - 4Pole product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setReference('There are currently no objects registered under this branch.')
lgpMultiLinkBasicNotification = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7, 1))
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setStatus('current')
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setDescription('This branch is used to register Liebert MultiLink MLBN device proxy information.')
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setReference('There are currently no objects registered under this branch.')
lgpRackPDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2))
if mibBuilder.loadTexts: lgpRackPDU.setStatus('current')
if mibBuilder.loadTexts: lgpRackPDU.setDescription('This branch is used to register Liebert Power Distribution product information for Rack Power Distribution Products (RPDU).')
lgpMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 1))
if mibBuilder.loadTexts: lgpMPX.setStatus('current')
if mibBuilder.loadTexts: lgpMPX.setDescription('This branch is used to register Liebert Power Distribution product information for the MPX product distribution (PDU) product family.')
if mibBuilder.loadTexts: lgpMPX.setReference('There are currently no objects registered under this branch.')
lgpMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 2))
if mibBuilder.loadTexts: lgpMPH.setStatus('current')
if mibBuilder.loadTexts: lgpMPH.setDescription('This branch is used to register Liebert Power Distribution product information for the MPH product distribution (PDU) product family.')
if mibBuilder.loadTexts: lgpMPH.setReference('There are currently no objects registered under this branch.')
lgpRackPDU2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4))
if mibBuilder.loadTexts: lgpRackPDU2.setStatus('current')
if mibBuilder.loadTexts: lgpRackPDU2.setDescription('This branch is used to register Liebert Power Distribution product information for Rack Power Distribution Products (RPDU).')
lgpRPC2kMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 1))
if mibBuilder.loadTexts: lgpRPC2kMPX.setStatus('current')
if mibBuilder.loadTexts: lgpRPC2kMPX.setDescription('This branch is used to register Liebert Power Distribution product information for the MPX product distribution (PDU) product family.')
if mibBuilder.loadTexts: lgpRPC2kMPX.setReference('There are currently no objects registered under this branch.')
lgpRPC2kMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 2))
if mibBuilder.loadTexts: lgpRPC2kMPH.setStatus('current')
if mibBuilder.loadTexts: lgpRPC2kMPH.setDescription('This branch is used to register Liebert Power Distribution product information for the MPH product distribution (PDU) product family.')
if mibBuilder.loadTexts: lgpRPC2kMPH.setReference('There are currently no objects registered under this branch.')
lgpPMPandLDMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1))
if mibBuilder.loadTexts: lgpPMPandLDMF.setStatus('current')
if mibBuilder.loadTexts: lgpPMPandLDMF.setDescription('This branch is used to register Liebert Combined PMP version 4/LDMF Product information.')
lgpPMPgeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 1))
if mibBuilder.loadTexts: lgpPMPgeneric.setStatus('current')
if mibBuilder.loadTexts: lgpPMPgeneric.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4.')
if mibBuilder.loadTexts: lgpPMPgeneric.setReference('There are currently no objects registered under this branch.')
lgpPMPonFPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 2))
if mibBuilder.loadTexts: lgpPMPonFPC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonFPC.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for FPC.')
if mibBuilder.loadTexts: lgpPMPonFPC.setReference('There are currently no objects registered under this branch.')
lgpPMPonPPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 3))
if mibBuilder.loadTexts: lgpPMPonPPC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonPPC.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for PPC.')
if mibBuilder.loadTexts: lgpPMPonPPC.setReference('There are currently no objects registered under this branch.')
lgpPMPonFDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 4))
if mibBuilder.loadTexts: lgpPMPonFDC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonFDC.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for FDC.')
if mibBuilder.loadTexts: lgpPMPonFDC.setReference('There are currently no objects registered under this branch.')
lgpPMPonRDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 5))
if mibBuilder.loadTexts: lgpPMPonRDC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonRDC.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for RDC.')
if mibBuilder.loadTexts: lgpPMPonRDC.setReference('There are currently no objects registered under this branch.')
lgpPMPonEXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 6))
if mibBuilder.loadTexts: lgpPMPonEXC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonEXC.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for EXC.')
if mibBuilder.loadTexts: lgpPMPonEXC.setReference('There are currently no objects registered under this branch.')
lgpPMPonSTS2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 7))
if mibBuilder.loadTexts: lgpPMPonSTS2.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonSTS2.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for STS2.')
if mibBuilder.loadTexts: lgpPMPonSTS2.setReference('There are currently no objects registered under this branch.')
lgpPMPonSTS2PDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 8))
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setDescription('This branch is used to register information for Emerson Network Power Liebert PMP version 4 for STS2/PDU.')
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setReference('There are currently no objects registered under this branch.')
mibBuilder.exportSymbols("LIEBERT-GP-REGISTRATION-MIB", lgpIcomPAtypeDSE=lgpIcomPAtypeDSE, lgpNXL=lgpNXL, lgpHimod=lgpHimod, lgpIcom=lgpIcom, lgpIcomXDtypeXDFN=lgpIcomXDtypeXDFN, lgpNX225to600k=lgpNX225to600k, lgpProductSpecific=lgpProductSpecific, lgpIcomSCtypeHPCW=lgpIcomSCtypeHPCW, PYSNMP_MODULE_ID=liebertGlobalProductsRegistrationModule, lgpHiNet=lgpHiNet, lgpGXT3=lgpGXT3, lgpIcomCRtypeCRV=lgpIcomCRtypeCRV, lgpAPS=lgpAPS, lgpEPM300k=lgpEPM300k, lgpIcomXDtypeXDF=lgpIcomXDtypeXDF, lgpITA30to40k=lgpITA30to40k, lgpSeries7200=lgpSeries7200, lgpCombinedSystemProducts=lgpCombinedSystemProducts, lgpPowerSureInteractive2=lgpPowerSureInteractive2, liebertPowerModuleReg=liebertPowerModuleReg, lgpNXC30to40k=lgpNXC30to40k, lgpIcomCR=lgpIcomCR, lgpAcProducts=lgpAcProducts, lgpIcomPAtypePeX=lgpIcomPAtypePeX, lgpMUNiMx=lgpMUNiMx, lgpGXT2Dual=lgpGXT2Dual, lgpPMPonRDC=lgpPMPonRDC, lgpEPMP=lgpEPMP, lgpIcomPAtypePDXlarge=lgpIcomPAtypePDXlarge, lgpIcomXPtypeXDC=lgpIcomXPtypeXDC, lgpPMPonPPC=lgpPMPonPPC, lgpNpower=lgpNpower, lgpStaticTransferSwitch1=lgpStaticTransferSwitch1, lgpStaticTransferSwitch2=lgpStaticTransferSwitch2, lgpFlexible=lgpFlexible, lgpNotifications=lgpNotifications, lgpTransferSwitchProducts=lgpTransferSwitchProducts, lgpITA=lgpITA, lgpStandardMicroprocessor=lgpStandardMicroprocessor, lgpGXT3Dual=lgpGXT3Dual, lgpAgentNotifications=lgpAgentNotifications, lgpIcomPAtypeDeluxeSys3=lgpIcomPAtypeDeluxeSys3, lgpEPM600k=lgpEPM600k, lgpIcomPAtypeCW=lgpIcomPAtypeCW, lgpIcomAHStandard=lgpIcomAHStandard, lgpAdvancedMicroprocessor=lgpAdvancedMicroprocessor, lgpIcomSCtypeHPCSSmall=lgpIcomSCtypeHPCSSmall, lgpModuleReg=lgpModuleReg, lgpRPC2kMPX=lgpRPC2kMPX, lgpPMPonSTS2=lgpPMPonSTS2, emerson=emerson, lgpSystem=lgpSystem, lgpMultiLinkBasicNotification=lgpMultiLinkBasicNotification, lgpAgentDevice=lgpAgentDevice, lgpMPX=lgpMPX, liebertConditionsModuleReg=liebertConditionsModuleReg, lgpNfinity=lgpNfinity, lgpGXT4=lgpGXT4, lgpRackPDU2=lgpRackPDU2, lgpPMP=lgpPMP, lgpAgentIdent=lgpAgentIdent, lgpStaticTransferSwitch2FourPole=lgpStaticTransferSwitch2FourPole, lgpEXMMSR=lgpEXMMSR, lgpIcomPAtypeHPM=lgpIcomPAtypeHPM, lgpSeries610MMU=lgpSeries610MMU, lgpUPStationGXT=lgpUPStationGXT, lgpIcomSCtypeHPC=lgpIcomSCtypeHPC, lgpRackPDU=lgpRackPDU, lgpMiniMate2=lgpMiniMate2, lgpNXLJD=lgpNXLJD, lgpSeries600or610=lgpSeries600or610, lgpController=lgpController, lgpEXM208v=lgpEXM208v, lgpIcomSCtypeHPCL=lgpIcomSCtypeHPCL, lgpIcomAH=lgpIcomAH, lgpPowerDistributionProducts=lgpPowerDistributionProducts, lgpIcomXPtypeXDPCray=lgpIcomXPtypeXDPCray, lgpEXM400v=lgpEXM400v, lgpUpsProducts=lgpUpsProducts, lgpIcomPAtypeHPS=lgpIcomPAtypeHPS, lgpAgent=lgpAgent, lgpNXr=lgpNXr, lgpIcomXPtypeXDP=lgpIcomXPtypeXDP, lgpPMPonFPC=lgpPMPonFPC, lgpSeries610SCC=lgpSeries610SCC, lgpEXM480v=lgpEXM480v, lgpConditions=lgpConditions, lgpIcomDCL=lgpIcomDCL, liebertNotificationsModuleReg=liebertNotificationsModuleReg, lgpNXC=lgpNXC, lgpFoundation=lgpFoundation, lgpMPH=lgpMPH, lgpSeries610SMS=lgpSeries610SMS, liebertEnvironmentalModuleReg=liebertEnvironmentalModuleReg, lgpIcomPA=lgpIcomPA, lgpMultiLinkProducts=lgpMultiLinkProducts, lgpIcomPAtypePDXsmall=lgpIcomPAtypePDXsmall, lgpPMPandLDMF=lgpPMPandLDMF, liebertFlexibleConditionsModuleReg=liebertFlexibleConditionsModuleReg, lgpIcomPAtypeChallenger=lgpIcomPAtypeChallenger, lgpIcomPAtypePCWsmall=lgpIcomPAtypePCWsmall, lgpEnvironmental=lgpEnvironmental, lgpEXL=lgpEXL, lgpEPM800k=lgpEPM800k, lgpIcomSCtypeHPCSLarge=lgpIcomSCtypeHPCSLarge, lgpEPM=lgpEPM, lgpIcomSCtypeHPCM=lgpIcomSCtypeHPCM, lgpIcomSCtypeHPCR=lgpIcomSCtypeHPCR, lgpNXRb=lgpNXRb, liebertSystemModuleReg=liebertSystemModuleReg, lgpPowerSureInteractive=lgpPowerSureInteractive, liebertModuleReg=liebertModuleReg, lgpCEMS100orLECS15=lgpCEMS100orLECS15, lgpIcomXP=lgpIcomXP, lgpIcomPAtypeDS=lgpIcomPAtypeDS, liebertAgentModuleReg=liebertAgentModuleReg, liebertFlexibleModuleReg=liebertFlexibleModuleReg, lgpAgentControl=lgpAgentControl, lgpIcomXD=lgpIcomXD, lgpIcomEEV=lgpIcomEEV, lgpSeries300=lgpSeries300, lgpPower=lgpPower, liebertControllerModuleReg=liebertControllerModuleReg, lgpNX=lgpNX, lgpEPM500k=lgpEPM500k, lgpIcomPAtypePEXS=lgpIcomPAtypePEXS, lgpEXM=lgpEXM, liebertCorp=liebertCorp, lgpIcomPAtypePCWlarge=lgpIcomPAtypePCWlarge, lgpPMPgeneric=lgpPMPgeneric, lgpEPM400k=lgpEPM400k, lgpStaticTransferSwitchEDS=lgpStaticTransferSwitchEDS, lgpGXT4Dual=lgpGXT4Dual, lgpPMPonFDC=lgpPMPonFDC, liebertGlobalProducts=liebertGlobalProducts, liebertGlobalProductsRegistrationModule=liebertGlobalProductsRegistrationModule, lgpSuper400=lgpSuper400, lgpRPC2kMPH=lgpRPC2kMPH, lgpIcomPAtypeDeluxeSystem3=lgpIcomPAtypeDeluxeSystem3, lgpPMPonEXC=lgpPMPonEXC, lgpPMPonSTS2PDU=lgpPMPonSTS2PDU, lgpIcomPAtypePDX=lgpIcomPAtypePDX, lgpPowerConditioningProducts=lgpPowerConditioningProducts, lgpIcomXPtypeXDPW=lgpIcomXPtypeXDPW, liebertPduModuleReg=liebertPduModuleReg, lgpPdu=lgpPdu, lgpIcomPAtypeJumboCW=lgpIcomPAtypeJumboCW, lgpIcomSC=lgpIcomSC)
