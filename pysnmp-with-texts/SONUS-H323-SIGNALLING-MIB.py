#
# PySNMP MIB module SONUS-H323-SIGNALLING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-H323-SIGNALLING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
PerfCurrentCount, = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, Bits, TimeTicks, MibIdentifier, NotificationType, Unsigned32, ObjectIdentity, Gauge32, ModuleIdentity, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "Bits", "TimeTicks", "MibIdentifier", "NotificationType", "Unsigned32", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Integer32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonusSignallingMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusSignallingMIBs")
SonusAdminState, SonusServiceState = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState", "SonusServiceState")
sonusH323SignallingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6))
if mibBuilder.loadTexts: sonusH323SignallingMIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusH323SignallingMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusH323SignallingMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusH323SignallingMIB.setDescription('The MIB Module for H323 IP Call Signal Channel Management.')
sonusH323SignallingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1))
sonusH323SigTimerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1))
sonusH323SigSrvTimerT301 = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SigSrvTimerT301.setStatus('current')
if mibBuilder.loadTexts: sonusH323SigSrvTimerT301.setDescription('The T301 timer (in seconds). This value applies to all calls.')
sonusH323SigSrvTimerT303 = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SigSrvTimerT303.setStatus('current')
if mibBuilder.loadTexts: sonusH323SigSrvTimerT303.setDescription('The T303 call timer (in seconds). This value applies to all calls.')
sonusH323SigSrvTimerT310 = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SigSrvTimerT310.setStatus('current')
if mibBuilder.loadTexts: sonusH323SigSrvTimerT310.setDescription('The T310 timer (in seconds). This value applies to all calls.')
sonusH323SigTimerEstablish = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SigTimerEstablish.setStatus('current')
if mibBuilder.loadTexts: sonusH323SigTimerEstablish.setDescription('The H225 signal channel establishment timer (in seconds.) This value applies to all signal channels.')
sonusH323SigTimerTcpConnect = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SigTimerTcpConnect.setStatus('current')
if mibBuilder.loadTexts: sonusH323SigTimerTcpConnect.setDescription('The TCP connect timer (in seconds). This applies to all signal channels.')
sonusH323H225PortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 2))
sonusH323H225PortIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 2, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H225PortIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusH323H225PortIpAddress.setDescription('IP Address of the H225 call signaling port - this is a required parameter.')
sonusH323H225PortNum = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H225PortNum.setStatus('current')
if mibBuilder.loadTexts: sonusH323H225PortNum.setDescription('TCP port number of the H225 call signaling port (default is H323 registered port 1720).')
sonusH323H225PortShelfId = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H225PortShelfId.setStatus('current')
if mibBuilder.loadTexts: sonusH323H225PortShelfId.setDescription('The shelf number of the PNS board providing the H225 connection service. 0 means not configured.')
sonusH323H225PortSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H225PortSlotNum.setStatus('current')
if mibBuilder.loadTexts: sonusH323H225PortSlotNum.setDescription('The slot number of the PNS board providing the H225 connection service. 0 means not configured.')
sonusH323H245PortObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 3))
sonusH323H245PortIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 3, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H245PortIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusH323H245PortIpAddress.setDescription('IP Address of the H245 port - this is a required parameter.')
sonusH323H245PortShelfId = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H245PortShelfId.setStatus('current')
if mibBuilder.loadTexts: sonusH323H245PortShelfId.setDescription('The shelf number of the PNS board providing the H245 connection service. 0 means not configured.')
sonusH323H245PortSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323H245PortSlotNum.setStatus('current')
if mibBuilder.loadTexts: sonusH323H245PortSlotNum.setDescription('The slot number of the PNS board providing the H225 connection service. 0 means not configured.')
sonusH323SigControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 4))
sonusH323SignalingControlMode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 4, 1), SonusServiceState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SignalingControlMode.setStatus('current')
if mibBuilder.loadTexts: sonusH323SignalingControlMode.setDescription('This object controls the mode of H323 service.')
sonusH323SignalingControlState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 4, 2), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SignalingControlState.setStatus('current')
if mibBuilder.loadTexts: sonusH323SignalingControlState.setDescription('This object controls the state of H323 service.')
sonusH323SignalingControlAction = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("force", 2), ("dryup", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SignalingControlAction.setStatus('current')
if mibBuilder.loadTexts: sonusH323SignalingControlAction.setDescription('This object controls to force all call drops or let the call finish during a time period, which is controled by sonusH323SigTimerDryupTimeout.')
sonusH323SignalingControlDryupTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusH323SignalingControlDryupTimeout.setStatus('current')
if mibBuilder.loadTexts: sonusH323SignalingControlDryupTimeout.setDescription('This timer controls the time (in minutes) to wait to place the H323 into out of service state, when the dryup command is issued. ')
sonusH323FeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5))
sonusH323FeCurrentStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1), )
if mibBuilder.loadTexts: sonusH323FeCurrentStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatTable.setDescription('The Sonus H323 FE Group Current statistic table.')
sonusH323FeCurrentStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1), ).setIndexNames((0, "SONUS-H323-SIGNALLING-MIB", "sonusH323FeCurrentStatIndex"))
if mibBuilder.loadTexts: sonusH323FeCurrentStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatEntry.setDescription('An entry in the Sonus H323 FE current statistics table.')
sonusH323FeCurrentStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatIndex.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatIndex.setDescription('The index into the Sonus H323 current table. Index 1 stands for H225 Port statistics, index 2 stands for H245 port statistics.')
sonusH323FeCurrentStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2), ("dryup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatStatus.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatStatus.setDescription('The state of this H323 port current status.')
sonusH323FeCurrentStatInCallsCompl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatInCallsCompl.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatInCallsCompl.setDescription('This object indicates the number of Ingress calls completed since system boots up. ')
sonusH323FeCurrentStatEgCallsCompl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 4), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatEgCallsCompl.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatEgCallsCompl.setDescription('This object indicates the number of Egress calls completed since system boots up. ')
sonusH323FeCurrentStatInCallsAttemped = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatInCallsAttemped.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatInCallsAttemped.setDescription('This object indicates the number of Ingress calls attempted since system boots up. ')
sonusH323FeCurrentStatEgCallsAttemped = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 6), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatEgCallsAttemped.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatEgCallsAttemped.setDescription('This object indicates the number of Egress calls attempted since system boots up. ')
sonusH323FeCurrentStatH225MsgNoSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgNoSent.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgNoSent.setDescription('This object indicates the number of H225 messages that have been sent since system boots up. ')
sonusH323FeCurrentStatH225MsgBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgBytesSent.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgBytesSent.setDescription('This object indicates the number of bytes of H225 messages that have been sent since system boots up. ')
sonusH323FeCurrentStatH225MsgNoRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgNoRcv.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgNoRcv.setDescription('This object indicates the number of H225 messages that have been received since system boots up. ')
sonusH323FeCurrentStatH225MsgBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 10), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgBytesRcv.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225MsgBytesRcv.setDescription('This object indicates the number of bytes of H225 messages that have been received since system boots up. ')
sonusH323FeCurrentStatH245MsgNoSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 11), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgNoSent.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgNoSent.setDescription('This object indicates the number of H245 messages that have been sent since system boots up. ')
sonusH323FeCurrentStatH245MsgBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgBytesSent.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgBytesSent.setDescription('This object indicates the number of bytes of H245 messages that have been sent since system boots up. ')
sonusH323FeCurrentStatH245MsgNoRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 13), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgNoRcv.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgNoRcv.setDescription('This object indicates the number of H245 messages that have been received since system boots up. ')
sonusH323FeCurrentStatH245MsgBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 14), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgBytesRcv.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245MsgBytesRcv.setDescription('This object indicates the number of bytes of H245 messages that have been received since system boots up. ')
sonusH323FeCurrentStatActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 15), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatActiveCalls.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatActiveCalls.setDescription('This object indicates the number of active calls at this moment.')
sonusH323FeCurrentStatH225TcpPortsOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 16), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225TcpPortsOpened.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH225TcpPortsOpened.setDescription('This object indicates the number of H225 TCP ports opened at this moment.')
sonusH323FeCurrentStatH245TcpPortsOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 17), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245TcpPortsOpened.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245TcpPortsOpened.setDescription('This object indicates the number of H245 TCP ports opened at this moment.')
sonusH323FeCurrentStatH245TcpPortsAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 6, 1, 5, 1, 1, 18), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245TcpPortsAllocated.setStatus('current')
if mibBuilder.loadTexts: sonusH323FeCurrentStatH245TcpPortsAllocated.setDescription('This object indicates the number of H245 TCP ports allocated at this moment.')
mibBuilder.exportSymbols("SONUS-H323-SIGNALLING-MIB", sonusH323FeCurrentStatEntry=sonusH323FeCurrentStatEntry, sonusH323SignallingMIBObjects=sonusH323SignallingMIBObjects, sonusH323H225PortIpAddress=sonusH323H225PortIpAddress, sonusH323FeCurrentStatStatus=sonusH323FeCurrentStatStatus, sonusH323SignalingControlAction=sonusH323SignalingControlAction, sonusH323FeCurrentStatTable=sonusH323FeCurrentStatTable, sonusH323FeCurrentStatH245MsgBytesSent=sonusH323FeCurrentStatH245MsgBytesSent, sonusH323FeCurrentStatActiveCalls=sonusH323FeCurrentStatActiveCalls, sonusH323SigControlObjects=sonusH323SigControlObjects, sonusH323SignalingControlState=sonusH323SignalingControlState, sonusH323FeCurrentStatH225MsgBytesRcv=sonusH323FeCurrentStatH225MsgBytesRcv, sonusH323H225PortNum=sonusH323H225PortNum, sonusH323H245PortSlotNum=sonusH323H245PortSlotNum, sonusH323H225PortSlotNum=sonusH323H225PortSlotNum, sonusH323FeCurrentStatInCallsAttemped=sonusH323FeCurrentStatInCallsAttemped, sonusH323FeCurrentStatEgCallsAttemped=sonusH323FeCurrentStatEgCallsAttemped, sonusH323FeCurrentStatEgCallsCompl=sonusH323FeCurrentStatEgCallsCompl, sonusH323FeCurrentStatH245MsgNoSent=sonusH323FeCurrentStatH245MsgNoSent, sonusH323FeCurrentStatH245TcpPortsOpened=sonusH323FeCurrentStatH245TcpPortsOpened, sonusH323SigTimerObjects=sonusH323SigTimerObjects, sonusH323FeCurrentStatH225MsgBytesSent=sonusH323FeCurrentStatH225MsgBytesSent, sonusH323H245PortShelfId=sonusH323H245PortShelfId, sonusH323FeCurrentStatH225MsgNoRcv=sonusH323FeCurrentStatH225MsgNoRcv, sonusH323FeCurrentStatH225TcpPortsOpened=sonusH323FeCurrentStatH225TcpPortsOpened, sonusH323SignallingMIB=sonusH323SignallingMIB, sonusH323H225PortShelfId=sonusH323H225PortShelfId, sonusH323SignalingControlMode=sonusH323SignalingControlMode, sonusH323FeCurrentStatH245MsgBytesRcv=sonusH323FeCurrentStatH245MsgBytesRcv, sonusH323SigSrvTimerT301=sonusH323SigSrvTimerT301, sonusH323FeCurrentStatH225MsgNoSent=sonusH323FeCurrentStatH225MsgNoSent, sonusH323SigTimerEstablish=sonusH323SigTimerEstablish, PYSNMP_MODULE_ID=sonusH323SignallingMIB, sonusH323SigSrvTimerT310=sonusH323SigSrvTimerT310, sonusH323FeObjects=sonusH323FeObjects, sonusH323H245PortObjects=sonusH323H245PortObjects, sonusH323H245PortIpAddress=sonusH323H245PortIpAddress, sonusH323FeCurrentStatIndex=sonusH323FeCurrentStatIndex, sonusH323SigTimerTcpConnect=sonusH323SigTimerTcpConnect, sonusH323FeCurrentStatH245MsgNoRcv=sonusH323FeCurrentStatH245MsgNoRcv, sonusH323SignalingControlDryupTimeout=sonusH323SignalingControlDryupTimeout, sonusH323H225PortObjects=sonusH323H225PortObjects, sonusH323SigSrvTimerT303=sonusH323SigSrvTimerT303, sonusH323FeCurrentStatInCallsCompl=sonusH323FeCurrentStatInCallsCompl, sonusH323FeCurrentStatH245TcpPortsAllocated=sonusH323FeCurrentStatH245TcpPortsAllocated)
