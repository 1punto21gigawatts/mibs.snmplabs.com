#
# PySNMP MIB module AC-SS7-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-SS7-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:09:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
acProducts, acBoardMibs, audioCodes, acGeneric, acRegistrations = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acProducts", "acBoardMibs", "audioCodes", "acGeneric", "acRegistrations")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, iso, ObjectIdentity, TimeTicks, Gauge32, Unsigned32, Counter64, enterprises, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "ObjectIdentity", "TimeTicks", "Gauge32", "Unsigned32", "Counter64", "enterprises", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "Bits", "MibIdentifier")
DisplayString, RowStatus, DateAndTime, TextualConvention, TAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "DateAndTime", "TextualConvention", "TAddress")
acSS7 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12))
if mibBuilder.loadTexts: acSS7.setLastUpdated('200912021210Z')
if mibBuilder.loadTexts: acSS7.setOrganization('AudioCodes Ltd')
if mibBuilder.loadTexts: acSS7.setContactInfo('Postal: Support AudioCodes LTD 1 Hayarden Street Airport City Lod, ISRAEL 70151 Tel: 972-3-9764000 Fax: 972-3-9764040 Email: support@audiocodes.com Web: www.audiocodes.com')
if mibBuilder.loadTexts: acSS7.setDescription('')
acSS7Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1))
acSS7MTP2 = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1))
acSS7MTP2M3bSlDiscardCongThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7MTP2M3bSlDiscardCongThreshold.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2M3bSlDiscardCongThreshold.setDescription('This parameter concerns feature that prevents uncontrolled increase of the MTP2 Transmit queue when the upper levels ignores the usual flow control mechanism. Any new SL_TX_MSU_RQ is discarded when the number of msu queued on the TB or RTB overtakes the threshold. Value 0, means that this feature is not activated. Access: Offline. AC INI-Param: SS7M3bSlDiscardCongThreshold')
acSS7MTP2AttribTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21), )
if mibBuilder.loadTexts: acSS7MTP2AttribTable.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTable.setDescription('')
acSS7MTP2AttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7MTP2AttribIndex"))
if mibBuilder.loadTexts: acSS7MTP2AttribEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribEntry.setDescription('')
acSS7MTP2AttribIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: acSS7MTP2AttribIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribIndex.setDescription('Index Field for line. AC INI-Param: SS7Mtp2Parms_Index')
acSS7MTP2AttribIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7MTP2AttribIsUsed.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribIsUsed.setDescription('Is the row used by alink. If it is the entrow will be read. AC INI-Param: N/A')
acSS7MTP2AttribLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribLinkRate.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribLinkRate.setDescription('Defines the SS7 SLI Link Rate. Choose either: A = 64 kbps D = 56 kbps 0 = 64 kbps. Access: Online. AC INI-Param: SS7Mtp2Parms_LinkRate')
acSS7MTP2AttribErrorCorectionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribErrorCorectionMethod.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribErrorCorectionMethod.setDescription('Defines the SLI error correction method. B = Basic P = PCR (Preventive Cyclic Retransmission). Access: Online. AC INI-Param: SS7Mtp2Parms_ErrorCorrectionMethod')
acSS7MTP2AttribIacCp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribIacCp.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribIacCp.setDescription('Defines the number of aborted proving attempts before sending an out-of-service to MTP-3. Access: Online. AC INI-Param: SS7Mtp2Parms_IacCp')
acSS7MTP2AttribSUERMThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribSUERMThreshold.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribSUERMThreshold.setDescription('Defines the SS7 SUERM (Signal Unit Error Rate Monitor) T threshold. Access: Online. AC INI-Param: SS7Mtp2Parms_SuermT')
acSS7MTP2AttribAERMNormalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribAERMNormalThreshold.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribAERMNormalThreshold.setDescription('Normal AERM (alignment error rate monitor) threshold [0 to 20]. Access: Online. AC INI-Param: SS7Mtp2Parms_AermTin')
acSS7MTP2AttribAERMEmerglThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribAERMEmerglThreshold.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribAERMEmerglThreshold.setDescription('Emergency AERM (alignment error rate monitor) threshold [0 to 10]. Access: Online. AC INI-Param: SS7Mtp2Parms_AermTie')
acSS7MTP2AttribSUERMSigUnitDThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribSUERMSigUnitDThreshold.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribSUERMSigUnitDThreshold.setDescription('Defines the SS7 Signal Unit error rate monitor D threshold. Access: Online. AC INI-Param: SS7Mtp2Parms_SuermSuD')
acSS7MTP2AttribOctetCounting = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribOctetCounting.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribOctetCounting.setDescription('Defines the SS7 MTP2 Octet received while the OCTET is in counting mode (# of Octets received - N Octets - while in Octet counting mode). Access: Online. AC INI-Param: SS7Mtp2Parms_OctetCounting')
acSS7MTP2AttribTimerT1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT1.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT1.setDescription('Defines the SS7 MTP2 T1 alignment ready timer (in msecs). Access: Online. AC INI-Param: SS7Mtp2Parms_T1')
acSS7MTP2AttribTimerT2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT2.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT2.setDescription('Defines the SS7 MTP2 T2 unaligned timer (in msecs). Access: Online. AC INI-Param: SS7Mtp2Parms_T2')
acSS7MTP2AttribTimerT3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT3.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT3.setDescription('Defines the SS7 MTP2 T3 timer aligned. Access: Online. AC INI-Param: SS7Mtp2Parms_T3')
acSS7MTP2AttribTimerT4Normal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT4Normal.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT4Normal.setDescription('Defines the SS7 MTP2 T4n Normal proving period timer. Access: Online. AC INI-Param: SS7Mtp2Parms_T4n')
acSS7MTP2AttribTimerT4Emerg = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT4Emerg.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT4Emerg.setDescription('Defines the SS7 MTP2 T4e Emergency proving period timer (msec). Access: Online. AC INI-Param: SS7Mtp2Parms_T4e')
acSS7MTP2AttribTimerT5 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT5.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT5.setDescription('Defines the SS7 MTP2 Sending SIB timer. Access: Online. AC INI-Param: SS7Mtp2Parms_T5')
acSS7MTP2AttribTimerT6 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT6.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT6.setDescription('Defines the SS7 MTP2 Remote Congestion timer (in msec). Access: Online. AC INI-Param: SS7Mtp2Parms_T6')
acSS7MTP2AttribTimerT7 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT7.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribTimerT7.setDescription('Defines the SS7 MTP2 excessive delay of the ack timer (in msec). Access: Online. AC INI-Param: SS7Mtp2Parms_T7')
acSS7MTP2AttribLSSULength = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribLSSULength.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribLSSULength.setDescription('Defines the SS7 MTP2 LSSU length as 1 or 2 (bytes). Access: Online. AC INI-Param: SS7Mtp2Parms_LssuLength')
acSS7MTP2AttribPcrN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribPcrN2.setStatus('current')
if mibBuilder.loadTexts: acSS7MTP2AttribPcrN2.setDescription('This parameter is used to define Preventive Cyclic Retransmission - the number of message signal unit octets available for retransmission (ITU-T Q703 6.4 - Forced retransmission). Access: Online. AC INI-Param: SS7Mtp2Parms_PcrN2')
acSS7MTP2AttribRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 1, 21, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7MTP2AttribRowStatus.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7MTP2AttribRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: N/A')
acSS7Timers = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2))
acSS7SignalingNodeTimersTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21), )
if mibBuilder.loadTexts: acSS7SignalingNodeTimersTable.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersTable.setDescription('')
acSS7SignalingNodeTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7SignalingNodeTimersIndex"))
if mibBuilder.loadTexts: acSS7SignalingNodeTimersEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersEntry.setDescription('')
acSS7SignalingNodeTimersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIndex.setDescription('Index Field for line. AC INI-Param: SS7_SNTIMERS_INDEX')
acSS7SignalingNodeTimersIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIsUsed.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIsUsed.setDescription(' AC INI-Param: N/A')
acSS7SignalingNodeTimersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersAction.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_SNTIMERS_ACTION')
acSS7SignalingNodeTimersActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_SNTIMERS_ACTION_RESULT')
acSS7SignalingNodeTimersName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersName.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersName.setDescription('String name for SN timer-set. Access: Online. AC INI-Param: SS7_SNTIMERS_NAME')
acSS7SignalingNodeTimersT6 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT6.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT6.setDescription('Delay to avoid message mis-sequencing on controlled rerouting. Access: Online. AC INI-Param: SS7_SNTIMERS_T6')
acSS7SignalingNodeTimersT8 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT8.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT8.setDescription('Transfer prohibited inhibition timer (transient solution). Access: Online. AC INI-Param: SS7_SNTIMERS_T8')
acSS7SignalingNodeTimersT10 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT10.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT10.setDescription('Waiting to repeat signalling route set test message. Access: Online. AC INI-Param: SS7_SNTIMERS_T10')
acSS7SignalingNodeTimersT11 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT11.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT11.setDescription('Transfer restricted timer. Access: Online. AC INI-Param: SS7_SNTIMERS_T11')
acSS7SignalingNodeTimersT15 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT15.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT15.setDescription('Waiting to start signalling route set congestion test. Access: Online. AC INI-Param: SS7_SNTIMERS_T15')
acSS7SignalingNodeTimersT16 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT16.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT16.setDescription('Waiting for route set congestion status update. Access: Online. AC INI-Param: SS7_SNTIMERS_T16')
acSS7SignalingNodeTimersT18ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT18ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT18ITU.setDescription('Timer within a signalling point whose MTP restarts for supervising link and link set activation as well as the receipt of routing information. Access: Online. AC INI-Param: SS7_SNTIMERS_T18_ITU')
acSS7SignalingNodeTimersT19ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT19ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT19ITU.setDescription('Supervision timer during MTP restart to avoid possible ping-pong of TFP, TFR and TRA messages. Access: Online. AC INI-Param: SS7_SNTIMERS_T19_ITU')
acSS7SignalingNodeTimersT20ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT20ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT20ITU.setDescription('Overall MTP restart timer at the signalling point whose MTP restarts. Access: Online. AC INI-Param: SS7_SNTIMERS_T20_ITU')
acSS7SignalingNodeTimersT21ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT21ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT21ITU.setDescription('Overall MTP restart timer at a signalling point adjacent to one whose MTP restarts. Access: Online. AC INI-Param: SS7_SNTIMERS_T21_ITU')
acSS7SignalingNodeTimersT24ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT24ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT24ITU.setDescription('Stabilising timer after removal of local processor outage, used in LPO latching to RPO (national option). Access: Online. AC INI-Param: SS7_SNTIMERS_T24_ITU')
acSS7SignalingNodeTimersT22ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT22ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT22ANSI.setDescription('Timer at restarting SP waiting for signalling links to bacome available. Access: Online. AC INI-Param: SS7_SNTIMERS_T22_ANSI')
acSS7SignalingNodeTimersT23ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT23ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT23ANSI.setDescription('Timer at restarting SP, started after T22, waiting to receive all traffic restart allowed messages. Access: Online. AC INI-Param: SS7_SNTIMERS_T23_ANSI')
acSS7SignalingNodeTimersT24ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT24ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT24ANSI.setDescription('Timer at restarting SP with transfer function, started after T23, waiting to broadcast all traffic restart allowed messages. Access: Online. AC INI-Param: SS7_SNTIMERS_T24_ANSI')
acSS7SignalingNodeTimersT25ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT25ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT25ANSI.setDescription('Timer at SP adjacent to restarting SP waiting for traffic restart allowed message. Access: Online. AC INI-Param: SS7_SNTIMERS_T25_ANSI')
acSS7SignalingNodeTimersT26ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT26ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT26ANSI.setDescription('Timer at restarting SP waiting to repeat traffic restart waiting message. Access: Online. AC INI-Param: SS7_SNTIMERS_T26_ANSI')
acSS7SignalingNodeTimersT27ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT27ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT27ANSI.setDescription('This parameter is used to define the minimum duration of unavailability for a full restart. Access: Online. AC INI-Param: SS7_SNTIMERS_T27_ANSI')
acSS7SignalingNodeTimersT28ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT28ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT28ANSI.setDescription('Timer at SP adjacent to restarting SP waiting for traffic restart waiting message. Access: Online. AC INI-Param: SS7_SNTIMERS_T28_ANSI')
acSS7SignalingNodeTimersT29ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT29ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT29ANSI.setDescription('Timer started when TRA sent in response to unexpected TRA or TRW. Access: Online. AC INI-Param: SS7_SNTIMERS_T29_ANSI')
acSS7SignalingNodeTimersT30ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 21, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT30ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersT30ANSI.setDescription('Timer to limit sending of TFPs and TFRs in response to unexpected TRA or TRW. Access: Online. AC INI-Param: SS7_SNTIMERS_T30_ANSI')
acSS7LinkSetTimersTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22), )
if mibBuilder.loadTexts: acSS7LinkSetTimersTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersTable.setDescription('')
acSS7LinkSetTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkSetTimersIndex"))
if mibBuilder.loadTexts: acSS7LinkSetTimersEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersEntry.setDescription('')
acSS7LinkSetTimersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: acSS7LinkSetTimersIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersIndex.setDescription('Index Field for line. AC INI-Param: acSS7LKSETTIMERS_PS_PARAMETER_INDEX')
acSS7LinkSetTimersIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetTimersIsUsed.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersIsUsed.setDescription(' AC INI-Param: N/A')
acSS7LinkSetTimersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersAction.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_LKSETTIMERS_ACTION')
acSS7LinkSetTimersActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetTimersActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_LKSETTIMERS_ACTION_RESULT')
acSS7LinkSetTimersName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersName.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersName.setDescription('String name for Linkset timer-set. Access: Online. AC INI-Param: SS7_LKSETTIMERS_NAME')
acSS7LinkSetTimersT1SLT = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT1SLT.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT1SLT.setDescription('Supervision timer for signalling link test acknowledgement message. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T1SLT')
acSS7LinkSetTimersT2SLT = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT2SLT.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT2SLT.setDescription('Interval timer for sending signalling link test messages. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T2SLT')
acSS7LinkSetTimersT1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT1.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT1.setDescription('Delay to avoid message mis-sequencing on changeover. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T1')
acSS7LinkSetTimersT2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT2.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT2.setDescription('Waiting for changeover acknowledgement. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T2')
acSS7LinkSetTimersT3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT3.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT3.setDescription('Time controlled diversion-delay to avoid mis-sequencing on changeback. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T3')
acSS7LinkSetTimersT4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT4.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT4.setDescription('Waiting for changeback acknowledgement (first attempt). Access: Online. AC INI-Param: SS7_LKSETTIMERS_T4')
acSS7LinkSetTimersT5 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT5.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT5.setDescription('Waiting for changeback acknowledgement (second attempt). Access: Online. AC INI-Param: SS7_LKSETTIMERS_T5')
acSS7LinkSetTimersT7 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT7.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT7.setDescription('Waiting for signalling data link connection acknowledgement. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T7')
acSS7LinkSetTimersT12 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT12.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT12.setDescription('Waiting for uninhibit acknowledgement. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T12')
acSS7LinkSetTimersT13 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT13.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT13.setDescription('Waiting for force uninhibit. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T13')
acSS7LinkSetTimersT14 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT14.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT14.setDescription('Waiting for inhibition acknowledgement. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T14')
acSS7LinkSetTimersT17 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT17.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT17.setDescription('Delay to avoid oscillation of initial alignment failure and link restart. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T17')
acSS7LinkSetTimersT20ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT20ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT20ANSI.setDescription('Local inhibit test timer. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T20_ANSI')
acSS7LinkSetTimersT21ANSI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT21ANSI.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT21ANSI.setDescription('Remote inhibit test timer. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T21_ANSI')
acSS7LinkSetTimersT22ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT22ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT22ITU.setDescription('Local inhibit test timer. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T22_ITU')
acSS7LinkSetTimersT23ITU = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 2, 22, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkSetTimersT23ITU.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersT23ITU.setDescription('Remote inhibit test timer. Access: Online. AC INI-Param: SS7_LKSETTIMERS_T23_ITU')
acSS7Links = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3))
acSS7LinkCommonTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21), )
if mibBuilder.loadTexts: acSS7LinkCommonTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonTable.setDescription('')
acSS7LinkCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkCommonIndex"))
if mibBuilder.loadTexts: acSS7LinkCommonEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonEntry.setDescription('')
acSS7LinkCommonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acSS7LinkCommonIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonIndex.setDescription('Index Field for line. AC INI-Param: MAX_SIGNALING_LINKS_PER_CARD')
acSS7LinkCommonRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_LINK_ROWSTATUS')
acSS7LinkCommonAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("offLine", 1), ("inService", 2), ("activate", 3), ("deActivate", 4), ("inhibit", 5), ("unInhibit", 6), ("lpo", 7), ("lpr", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonAction.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_LINK_ACTION')
acSS7LinkCommonActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkCommonActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_LINK_ACTION_RESULT')
acSS7LinkCommonName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonName.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonName.setDescription('String name for Link paramaters. Access: Online. AC INI-Param: SS7_LINK_NAME')
acSS7LinkCommonAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offLine", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkCommonAdminState.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonAdminState.setDescription('Administrative state of singnalling link. AC INI-Param: SS7_LINK_ADMINISTRATIVE_STATE')
acSS7LinkCommonOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkCommonOperState.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonOperState.setDescription('Operational state of singnalling link. AC INI-Param: SS7_LINK_OPERATIONAL_STATE')
acSS7LinkCommonTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("traceLevel0", 0), ("traceLevel1", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonTraceLevel.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonTraceLevel.setDescription('Trace level of singnalling link (level 2). Access: Online. AC INI-Param: SS7_LINK_TRACE_LEVEL')
acSS7LinkCommonL2TypeSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("nonetype-L2", 0), ("mtp2", 1), ("m2ua-mgc", 2), ("ss7monitoring", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonL2TypeSelector.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonL2TypeSelector.setDescription('Link layer 2 type - defines level 2 media of signaling link. Access: Online. AC INI-Param: SS7_LINK_L2_TYPE')
acSS7LinkCommonL3TypeSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonetype-L3", 0), ("m2ua-sg", 1), ("mtp3", 2), ("mtp2-tunneling", 3), ("mtp2OverIP", 4), ("ss7monitoring", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonL3TypeSelector.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonL3TypeSelector.setDescription('Link high layer type - defines level 3 or L2 high layer of signalling link. Access: Online. AC INI-Param: SS7_LINK_L3_TYPE')
acSS7LinkCommonVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("itu", 1), ("ansi", 2), ("china", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonVariant.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonVariant.setDescription('Variant (layer 2) of singnalling link (TDM). Access: Online. AC INI-Param: SS7_LINK_LAYER2_VARIANT')
acSS7LinkCommonMtcBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkCommonMtcBusy.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonMtcBusy.setDescription('Link local busy indicator - if set, indicates link is busy due to local mtc action. AC INI-Param: SS7_LINK_MTC_BUSY')
acSS7LinkCommonRdcyBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("rdcyBoardNum0", 0), ("rdcyBoardNum1", 1), ("rdcyBoardNum2", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonRdcyBoardNum.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonRdcyBoardNum.setDescription('Board number in which the link is physically connected. Access: Online. AC INI-Param: SS7_LINK_RDCY_BOARD')
acSS7LinkCommonMonSuFilterRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 21, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("filterAll", 0), ("filterLSSUandFISU", 1), ("filterFISU", 2), ("noFilter", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkCommonMonSuFilterRequest.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkCommonMonSuFilterRequest.setDescription('SS7 Monitoring link SU filter- Defines the type of SU message to filter. 0: Filter all types of SU messages 1: Filter LSSU and FISU messages 2: Filter only FISU messages 3: Do not filter any message. Access: Online. AC INI-Param: SS7_LINK_MON_SU_FILTER')
acSS7LinkTDMTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22), )
if mibBuilder.loadTexts: acSS7LinkTDMTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMTable.setDescription('')
acSS7LinkTDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkCommonIndex"))
if mibBuilder.loadTexts: acSS7LinkTDMEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMEntry.setDescription('')
acSS7LinkTDMTrunkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 84))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTDMTrunkNumber.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMTrunkNumber.setDescription('Trunk number of singnalling link (TDM). Access: Online. AC INI-Param: SS7_LINK_TRUNK_NUMBER')
acSS7LinkTDMTimeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTDMTimeSlotNumber.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMTimeSlotNumber.setDescription('Time-Slot number of singnalling link (TDM). Access: Online. AC INI-Param: SS7_LINK_TIMESLOT_NUMBER')
acSS7LinkTDMInhibit = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unInhibited", 0), ("inhibited", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkTDMInhibit.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMInhibit.setDescription('Link inhibit indicator - if set, indicates link is inhibited.. AC INI-Param: SS7_LINK_INHIBITION')
acSS7LinkTDMMtp2Atts = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("mtp2Atts0", 0), ("mtp2Atts1", 1), ("mtp2Atts2", 2), ("mtp2Atts3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTDMMtp2Atts.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMMtp2Atts.setDescription('MTP2 attributes of singnalling link (TDM). Access: Online. AC INI-Param: SS7_LINK_MTP2_ATTRIBUTES')
acSS7LinkTDMCongestionLowMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTDMCongestionLowMark.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMCongestionLowMark.setDescription('Link congestion low mark of signalling link (TDM). Access: Online. AC INI-Param: SS7_CONGESTION_LOW_MARK')
acSS7LinkTDMCongestionHighMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTDMCongestionHighMark.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMCongestionHighMark.setDescription('Link congestion high mark of signalling link (TDM). Access: Online. AC INI-Param: SS7_CONGESTION_HIGH_MARK')
acSS7LinkTDMBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("l3linkunblocked", 0), ("l3linklocalblocked", 1), ("l3linkremoteblockde", 2), ("l3linklocalandremotelocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkTDMBlock.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTDMBlock.setDescription('Link blocked indicator. AC INI-Param: SS7_LINK_BLOCKED')
acSS7LinkSigTranTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 23), )
if mibBuilder.loadTexts: acSS7LinkSigTranTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSigTranTable.setDescription('')
acSS7LinkSigTranEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 23, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkCommonIndex"))
if mibBuilder.loadTexts: acSS7LinkSigTranEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSigTranEntry.setDescription('')
acSS7LinkSigTranGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSigTranGroupId.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSigTranGroupId.setDescription('Group ID (M2UA) of signaling link. Access: Online. AC INI-Param: SS7_LINK_GROUP_ID')
acSS7LinkSigTranIfid = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSigTranIfid.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSigTranIfid.setDescription('Interface ID (M2UA) of singnalling link. Access: Online. AC INI-Param: SS7_LINK_M2UA_IF_ID')
acSS7LinkATMTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24), )
if mibBuilder.loadTexts: acSS7LinkATMTable.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMTable.setDescription('')
acSS7LinkATMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkCommonIndex"))
if mibBuilder.loadTexts: acSS7LinkATMEntry.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMEntry.setDescription('')
acSS7LinkATMSAALLinkProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkProfileNum.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkProfileNum.setDescription('ATM SAAL Link profile number. Access: Online. AC INI-Param: ATM_SAAL_LINK_PROFILE_NUM')
acSS7LinkATMSAALLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aTM-VCC-Type-PVC", 0), ("aTM-VCC-Type-SVC", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkType.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkType.setDescription('ATM SAAL link Type PVC/SVC. Access: Online. AC INI-Param: ATM_SAAL_LINK_TYPE')
acSS7LinkATMSAALLinkInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkInterfaceNum.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkInterfaceNum.setDescription('ATM SAAL link port num. Access: Online. AC INI-Param: ATM_SAAL_LINK_PORT_NUM')
acSS7LinkATMSAALLinkVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkVPI.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkVPI.setDescription('ATM SAAL link VPI. Access: Online. AC INI-Param: ATM_SAAL_LINK_VPI')
acSS7LinkATMSAALLinkVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 24, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkVCI.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7LinkATMSAALLinkVCI.setDescription('ATM SAAL link VCI. Access: Online. AC INI-Param: ATM_SAAL_LINK_VCI')
acSS7LinkTNLTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25), )
if mibBuilder.loadTexts: acSS7LinkTNLTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLTable.setDescription('')
acSS7LinkTNLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkCommonIndex"))
if mibBuilder.loadTexts: acSS7LinkTNLEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLEntry.setDescription('')
acSS7LinkTNLOtherSideLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLOtherSideLinkNum.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLOtherSideLinkNum.setDescription("MTP2 Tunneling: MGC link number (MTP2 'other side' of signaling link). Access: Online. AC INI-Param: SS7_LINK_TNL_MGC_LINK_NUMBER")
acSS7LinkTNLAlignmentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("emergency", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLAlignmentMode.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLAlignmentMode.setDescription('MTP2 Tunneling: Alignment mode of signalling links in tunnel. Access: Online. AC INI-Param: SS7_LINK_TNL_ALIGNMENT_MODE')
acSS7LinkTNLCongestionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("discard", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLCongestionMode.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLCongestionMode.setDescription('MTP2 Tunneling: Congestion mode of signalling links in tunnel. Access: Online. AC INI-Param: SS7_LINK_TNL_CONGESTION_MODE')
acSS7LinkTNLWaitStartCompTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLWaitStartCompTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLWaitStartCompTimer.setDescription('MTP2 Tunneling: wait start complete timer. Access: Online. AC INI-Param: SS7_LINK_TNL_WAIT_START_COMPLETE_TIMER')
acSS7LinkTNLOosStartDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLOosStartDelayTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLOosStartDelayTimer.setDescription('MTP2 Tunneling: OOS start delay timer. Access: Online. AC INI-Param: SS7_LINK_TNL_OOS_START_DELAY_TIMER')
acSS7LinkTNLWaitOtherSideInsvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 3, 25, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkTNLWaitOtherSideInsvTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkTNLWaitOtherSideInsvTimer.setDescription('MTP2 Tunneling: wait for other side to be in service timer. Access: Online. AC INI-Param: SS7_LINK_TNL_WAIT_OTHER_SIDE_INSV_TIMER')
acSS7Nodes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4))
acSS7SignalingNodeTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21), )
if mibBuilder.loadTexts: acSS7SignalingNodeTable.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTable.setDescription('')
acSS7SignalingNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7SignalingNodeIndex"))
if mibBuilder.loadTexts: acSS7SignalingNodeEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeEntry.setDescription('')
acSS7SignalingNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7SignalingNodeIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeIndex.setDescription(' AC INI-Param: SS7_SN_INDEX')
acSS7SignalingNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_SN_ROWSTATUS')
acSS7SignalingNodeAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("stop", 1), ("start", 2), ("inService", 3), ("offLine", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeAction.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_SN_ACTION')
acSS7SignalingNodeActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_SN_ACTION_RESULT')
acSS7SignalingNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeName.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeName.setDescription('String name for SN Params. Access: Online. AC INI-Param: SS7_SN_NAME')
acSS7SignalingNodeTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("traceLevel0", 0), ("traceLevel1", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeTraceLevel.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTraceLevel.setDescription('Trace level of singnalling node (level 3). Access: Online. AC INI-Param: SS7_SN_TRACE_LEVEL')
acSS7SignalingNodeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offLine", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeAdminState.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeAdminState.setDescription('Administrative state of singnalling node. AC INI-Param: SS7_SN_ADMINISTRATIVE_STATE')
acSS7SignalingNodeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeOperState.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeOperState.setDescription('Operational state of singnalling node. AC INI-Param: SS7_SN_OPERATIONAL_STATE')
acSS7SignalingNodeMtcBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeMtcBusy.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeMtcBusy.setDescription('Manual busy status of singnalling node. AC INI-Param: SS7_SN_MTC_BUSY_STATUS')
acSS7SignalingNodeVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("itu", 1), ("ansi", 2), ("china", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeVariant.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeVariant.setDescription('Variant of singnalling node. Access: Online. AC INI-Param: SS7_SN_VARIANT')
acSS7SignalingNodeNwIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("international", 0), ("internationalSpare", 1), ("national", 2), ("nationalSpare", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeNwIndicator.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeNwIndicator.setDescription('Network Indicator of singnalling node. Access: Online. AC INI-Param: SS7_SN_NI')
acSS7SignalingNodeSpStp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sp", 0), ("stp", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeSpStp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeSpStp.setDescription('Routing function of singnalling node. Access: Online. AC INI-Param: SS7_SN_SP_STP')
acSS7SignalingNodeTfc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeTfc.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTfc.setDescription('TFC function of singnalling node. Access: Online. AC INI-Param: SS7_SN_TFC')
acSS7SignalingNodeOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeOpc.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeOpc.setDescription('Origination (local) point-code of singnalling node. Access: Online. AC INI-Param: SS7_SN_OPC')
acSS7SignalingNodeRouteSetCongestionWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeRouteSetCongestionWindow.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeRouteSetCongestionWindow.setDescription('Routeset Congestion Size (messages) of singnalling node. Access: Online. AC INI-Param: SS7_SN_ROUTESET_CONGESTION_WINSIZE')
acSS7SignalingNodeTimersIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("timersIdx0", 0), ("timersIdx1", 1), ("timersIdx2", 2), ("timersIdx3", 3), ("timersIdx4", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIdx.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTimersIdx.setDescription('Index of SNTimers table used for this signaling node. Access: Online. AC INI-Param: SS7_SN_TIMERS_INDEX')
acSS7SignalingNodeIsupApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 7))).clone(namedValues=NamedValues(("nill", 0), ("ual", 4), ("l4Gen", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeIsupApp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeIsupApp.setDescription('Level 4 application that handles ISUP traffic for this singnalling node. Access: Online. AC INI-Param: SS7_SN_ISUP_APP')
acSS7SignalingNodeSccpApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 7))).clone(namedValues=NamedValues(("nill", 0), ("ual", 4), ("l4Gen", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeSccpApp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeSccpApp.setDescription('Level 4 application that handles SCCP traffic for this singnalling node. Access: Online. AC INI-Param: SS7_SN_SCCP_APP')
acSS7SignalingNodeBisupApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 7))).clone(namedValues=NamedValues(("nill", 0), ("ual", 4), ("l4Gen", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeBisupApp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeBisupApp.setDescription('Level 4 application that handles BISUP traffic for this singnalling node. Access: Online. AC INI-Param: SS7_SN_BISUP_APP')
acSS7SignalingNodeAlcapApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 7))).clone(namedValues=NamedValues(("nill", 0), ("ual", 4), ("alcap", 5), ("l4Gen", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeAlcapApp.setStatus('deprecated')
if mibBuilder.loadTexts: acSS7SignalingNodeAlcapApp.setDescription('Level 4 application that handles ALCAP traffic for this singnalling node. Access: Online. AC INI-Param: SS7_SN_ALCAP_APP')
acSS7SignalingNodeRdcyOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SignalingNodeRdcyOpc.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeRdcyOpc.setDescription('Internal point-code of singnalling node - in case of SS7 shared point code. AC INI-Param: SS7_SN_RDCY_OPC')
acSS7SignalingNodeTupApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 7))).clone(namedValues=NamedValues(("nill", 0), ("ual", 4), ("l4Gen", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeTupApp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeTupApp.setDescription('Level 4 application that handles TUP traffic for this signaling node. Access: Online. AC INI-Param: SS7_SN_TUP_APP')
acSS7SignalingNodeBiccApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 21, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4))).clone(namedValues=NamedValues(("nil", 0), ("ual", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SignalingNodeBiccApp.setStatus('current')
if mibBuilder.loadTexts: acSS7SignalingNodeBiccApp.setDescription('Level 4 application that handles BICC traffic for this signaling node. Access: Online. AC INI-Param: SS7_SN_BICC_APP')
acSS7LinkSets = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31))
acSS7LinkSetTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21), )
if mibBuilder.loadTexts: acSS7LinkSetTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTable.setDescription('')
acSS7LinkSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkSetSNIndex"), (0, "AC-SS7-MIB", "acSS7LinkSetLksetIndex"))
if mibBuilder.loadTexts: acSS7LinkSetEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetEntry.setDescription('')
acSS7LinkSetSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7LinkSetSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetSNIndex.setDescription('First Index Field for line. AC INI-Param: SS7_LINKSET_SN_INDEX')
acSS7LinkSetLksetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: acSS7LinkSetLksetIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLksetIndex.setDescription('Second Index Field for line. AC INI-Param: SS7_LINKSET_LINKSET_INDEX')
acSS7LinkSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_LINKSET_ROWSTATUS')
acSS7LinkSetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("offLine", 1), ("inService", 2), ("activate", 3), ("deActivate", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetAction.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_LINKSET_ACTION')
acSS7LinkSetActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_SN_ACTION_RESULT')
acSS7LinkSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetName.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetName.setDescription('String name for LINKSET Params. Access: Online. AC INI-Param: SS7_LINKSET_NAME')
acSS7LinkSetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offLine", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetAdminState.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetAdminState.setDescription('Administrative state of singnalling linkset. AC INI-Param: SS7_LINKSET_ADMINISTRATIVE_STATE')
acSS7LinkSetOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetOperState.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetOperState.setDescription('Operational state of singnalling linkset. AC INI-Param: SS7_LINKSET_OPERATIONAL_STATE')
acSS7LinkSetMtcBusyState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetMtcBusyState.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetMtcBusyState.setDescription('Manual busy status of singnalling linkset. AC INI-Param: SS7_LINKSET_MTC_BUSY_STATUS')
acSS7LinkSetDPC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetDPC.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetDPC.setDescription('Destination Point-Code of singnalling linkset. Access: Online. AC INI-Param: SS7_LINKSET_DPC')
acSS7LinkSetLinksMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinksMask.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinksMask.setDescription('Mask for links within singnalling linkset. Access: Online. AC INI-Param: SS7_LINKSET_MASK')
acSS7LinkSetLinksAltMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinksAltMask.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinksAltMask.setDescription('Alternate mask for links within singnalling linkset. Access: Online. AC INI-Param: SS7_LINKSET_ALTERNATE_MASK')
acSS7LinkSetTimersIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("timersIdx0", 0), ("timersIdx1", 1), ("timersIdx2", 2), ("timersIdx3", 3), ("timersIdx4", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetTimersIdx.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetTimersIdx.setDescription('Timers Index of singnalling linkset. Access: Online. AC INI-Param: SS7_LINKSET_TIMERS_INDEX')
acSS7LinkSetLinkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22), )
if mibBuilder.loadTexts: acSS7LinkSetLinkTable.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkTable.setDescription('')
acSS7LinkSetLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7LinkSetLinkSNIndex"), (0, "AC-SS7-MIB", "acSS7LinkSetLinkLinksetIndex"), (0, "AC-SS7-MIB", "acSS7LinkSetLinkInnerLinkIndex"))
if mibBuilder.loadTexts: acSS7LinkSetLinkEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkEntry.setDescription('')
acSS7LinkSetLinkSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7LinkSetLinkSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkSNIndex.setDescription('First Index Field for line: Signalling Node Number. AC INI-Param: SS7_LINKSETLINK_SN_INDEX')
acSS7LinkSetLinkLinksetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: acSS7LinkSetLinkLinksetIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkLinksetIndex.setDescription('Second Index Field for line: Signalling Linkset Number. AC INI-Param: SS7_LINKSETLINK_LINKSET_INDEX')
acSS7LinkSetLinkInnerLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: acSS7LinkSetLinkInnerLinkIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkInnerLinkIndex.setDescription('Third Index Field for line: Inner Link Index in Signalling Linkset. AC INI-Param: SS7_LINKSETLINK_INNER_LINK_INDEX')
acSS7LinkSetLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinkRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_LINKSETLINK_ROWSTATUS')
acSS7LinkSetLinkAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinkAction.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_LINKSETLINK_ACTION')
acSS7LinkSetLinkActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7LinkSetLinkActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkActionResult.setDescription('Management field for ACTIONS RESULT. AC INI-Param: SS7_LINKSETLINK_ACTION_RESULT')
acSS7LinkSetLinkLinkNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinkLinkNo.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkLinkNo.setDescription('Physical number of signalling link which is part of the Linkset. Access: Online. AC INI-Param: SS7_LINKSETLINK_LINK_NUMBER')
acSS7LinkSetLinkLinkSlc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 31, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7LinkSetLinkLinkSlc.setStatus('current')
if mibBuilder.loadTexts: acSS7LinkSetLinkLinkSlc.setDescription('SLC number of signaling link which is part of the Linkset. Access: Online. AC INI-Param: SS7_LINKSETLINK_LINK_SLC')
acSS7RouteSets = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32))
acSS7RouteSetTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21), )
if mibBuilder.loadTexts: acSS7RouteSetTable.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetTable.setDescription('')
acSS7RouteSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7RouteSetSNIndex"), (0, "AC-SS7-MIB", "acSS7RouteSetIndex"))
if mibBuilder.loadTexts: acSS7RouteSetEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetEntry.setDescription('')
acSS7RouteSetSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7RouteSetSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetSNIndex.setDescription('First Index Field for line: Signalling Node Number. AC INI-Param: SS7_ROUTESET_SN_INDEX')
acSS7RouteSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 29)))
if mibBuilder.loadTexts: acSS7RouteSetIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetIndex.setDescription('Second Index Field for line: Signalling Routeset Number. AC INI-Param: SS7_ROUTESET_INDEX')
acSS7RouteSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_ROUTESET_ROWSTATUS')
acSS7RouteSetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("offLine", 1), ("inService", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetAction.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_ROUTESET_ACTION')
acSS7RouteSetActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7RouteSetActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_ROUTESET_ACTION_RESULT')
acSS7RouteSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetName.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetName.setDescription('String name for ROUTESET Params. Access: Online. AC INI-Param: SS7_ROUTESET_NAME')
acSS7RouteSetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offLine", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7RouteSetAdminState.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetAdminState.setDescription('Administrative state of signalling route set. AC INI-Param: SS7_ROUTESET_ADMINISTRATIVE_STATE')
acSS7RouteSetOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7RouteSetOperState.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetOperState.setDescription('Operational state of signalling route set. AC INI-Param: SS7_ROUTESET_OPERATIONAL_STATE')
acSS7RouteSetDPC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetDPC.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetDPC.setDescription('Destination Point-Code of singnalling routesetset. Access: Online. AC INI-Param: SS7_ROUTESET_DPC')
acSS7RouteSetRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRouteMask.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteMask.setDescription('Mask for route within signaling routeset. Access: Online. AC INI-Param: SS7_ROUTESET_MASK')
acSS7RouteSetRouteTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22), )
if mibBuilder.loadTexts: acSS7RouteSetRouteTable.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteTable.setDescription('')
acSS7RouteSetRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7RouteSetRouteSNIndex"), (0, "AC-SS7-MIB", "acSS7RouteSetRouteRoutesetIndex"), (0, "AC-SS7-MIB", "acSS7RouteSetRouteInnerRouteIndex"))
if mibBuilder.loadTexts: acSS7RouteSetRouteEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteEntry.setDescription('')
acSS7RouteSetRouteSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7RouteSetRouteSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteSNIndex.setDescription('First Index Field for line: Signalling Node Number. AC INI-Param: SS7_ROUTESETROUTE_SN_INDEX')
acSS7RouteSetRouteRoutesetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 29)))
if mibBuilder.loadTexts: acSS7RouteSetRouteRoutesetIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteRoutesetIndex.setDescription('Second Index Field for line: Signalling Routeset Number. AC INI-Param: SS7_ROUTESETROUTE_ROUTESET_INDEX')
acSS7RouteSetRouteInnerRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: acSS7RouteSetRouteInnerRouteIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteInnerRouteIndex.setDescription('Third Index Field for line: Inner Route Index in Signalling Routeset. AC INI-Param: SS7_ROUTESETROUTE_INNER_ROUTE_INDEX')
acSS7RouteSetRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRouteRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_ROUTESETROUTE_ROWSTATUS')
acSS7RouteSetRouteAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRouteAction.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteAction.setDescription('management Field for ACTIONS. AC INI-Param: SS7_ROUTESETROUTE_ACTION')
acSS7RouteSetRouteActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7RouteSetRouteActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_ROUTESETROUTE_ACTION_RESULT')
acSS7RouteSetRouteLinkSetNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRouteLinkSetNo.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRouteLinkSetNo.setDescription('Number of signalling linkset which is part of the Routeset. Access: Online. AC INI-Param: SS7_ROUTESETROUTE_LINKSET_NUMBER')
acSS7RouteSetRoutePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 32, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RouteSetRoutePriority.setStatus('current')
if mibBuilder.loadTexts: acSS7RouteSetRoutePriority.setDescription('Priority of route within routeset. Access: Online. AC INI-Param: SS7_ROUTESETROUTE_PRIORITY')
acSS7AliasPointCode = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33))
acSS7APCTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21), )
if mibBuilder.loadTexts: acSS7APCTable.setStatus('current')
if mibBuilder.loadTexts: acSS7APCTable.setDescription('')
acSS7APCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7APCSNIndex"), (0, "AC-SS7-MIB", "acSS7APCIndex"))
if mibBuilder.loadTexts: acSS7APCEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7APCEntry.setDescription('')
acSS7APCSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7APCSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7APCSNIndex.setDescription('First Index Field for line: Signaling Node Number. AC INI-Param: SS7_APC_SN_INDEX')
acSS7APCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: acSS7APCIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7APCIndex.setDescription('Second Index Field for line: Alias PC index. AC INI-Param: SS7_APC_INNER_INDEX')
acSS7APCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7APCRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7APCRowStatus.setDescription('ROWSTATUS Field for line. AC INI-Param: SS7_APC_ROWSTATUS')
acSS7APCAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("offLine", 1), ("inService", 2), ("activate", 3), ("deActivate", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7APCAction.setStatus('current')
if mibBuilder.loadTexts: acSS7APCAction.setDescription('Management field for ACTIONS. AC INI-Param: SS7_APC_ACTION')
acSS7APCActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7APCActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7APCActionResult.setDescription('management Field for ACTIONS RESULT. AC INI-Param: SS7_APC_ACTION_RESULT')
acSS7APCPC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7APCPC.setStatus('current')
if mibBuilder.loadTexts: acSS7APCPC.setDescription('Alias Point-Code of signaling node. Access: Online. AC INI-Param: SS7_APC_PC')
acSS7APCSNI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7APCSNI.setStatus('current')
if mibBuilder.loadTexts: acSS7APCSNI.setDescription('SNI (Signaling Network Indicator) of Alias Point-Code. Access: Online. AC INI-Param: SS7_APC_SNI')
acSS7APCName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7APCName.setStatus('current')
if mibBuilder.loadTexts: acSS7APCName.setDescription('String name for Alias PC parameters. Access: Online. AC INI-Param: SS7_ALIAS_PC_NAME')
acSS7APCMtcBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7APCMtcBusy.setStatus('current')
if mibBuilder.loadTexts: acSS7APCMtcBusy.setDescription('Manual busy status of Alias PC. AC INI-Param: SS7_ALIAS_PC_MTC_BUSY')
acSS7APCAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7APCAdminState.setStatus('current')
if mibBuilder.loadTexts: acSS7APCAdminState.setDescription('Administrative state of Alias PC. AC INI-Param: SS7_ALIAS_PC_ADMINISTRATIVE_STATE')
acSS7APCOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 4, 33, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offLine", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7APCOperState.setStatus('current')
if mibBuilder.loadTexts: acSS7APCOperState.setDescription('Operational state of Alias PC. AC INI-Param: SS7_ALIAS_PC_OPERATIONAL_STATE')
acSS7SigTran = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5))
acSS7SigTranM3UATrafficBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("deactivate", 1), ("sIPO", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7SigTranM3UATrafficBehavior.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranM3UATrafficBehavior.setDescription('Defines the M3UA behavior when the SS7 links are up, but there is no association to the soft switch. 0 = NONE (no special behavior) 1 = DEACTIVATE (busy links) 2 = SIPO (LPO links). Access: Offline. AC INI-Param: SS7M3UATrafficBehavior')
acSS7SigTranIFGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21), )
if mibBuilder.loadTexts: acSS7SigTranIFGroupTable.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupTable.setDescription('')
acSS7SigTranIFGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7SigTranIFGroupIndex"))
if mibBuilder.loadTexts: acSS7SigTranIFGroupEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupEntry.setDescription('')
acSS7SigTranIFGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: acSS7SigTranIFGroupIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupIndex.setDescription('Index field for line. AC INI-Param: SS7_SIG_IF_GR_INDEX')
acSS7SigTranIFGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupRowStatus.setDescription('ROWSTATUS field for line. AC INI-Param: SS7_SIG_IF_GR_ROWSTATUS')
acSS7SigTranIFGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("activate", 1), ("deActivate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupAction.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupAction.setDescription('Management field for ACTION. AC INI-Param: SS7_SIG_IF_GR_ACTION')
acSS7SigTranIFGroupActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SigTranIFGroupActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupActionResult.setDescription('Management field for ACTION RESULT. AC INI-Param: SS7_SIG_IF_GR_ACTION_RESULT')
acSS7SigTranIFGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupId.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupId.setDescription('SS7 (Signaling System 7) SIGTRAN (Signaling Transport) Interface Group Id. Access: Online. AC INI-Param: SS7_IF_GR_ID')
acSS7SigTranIFGroupSgMgc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 77, 83))).clone(namedValues=NamedValues(("nat", 1), ("mgc", 77), ("sg", 83)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSgMgc.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSgMgc.setDescription('Interface Group function - Signaling Gateway (SG) or Media Gateway Controller (MGC). Access: Online. AC INI-Param: SS7_SIG_SG_MGC')
acSS7SigTranIFGroupSignalingLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 7))).clone(namedValues=NamedValues(("noLayer", 0), ("iua", 1), ("m2ua", 2), ("m3ua", 3), ("m2tunnel", 4), ("dua", 6), ("isdnTunnel", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSignalingLayer.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSignalingLayer.setDescription('UAL type of interface group: 0 = none 1 = iua 2 = m2ua 3 = m3ua 4 = m2tunnel 5 = V5ua 6 = dua 7=isdnTunnel. Access: Online. AC INI-Param: SS7_SIG_LAYER')
acSS7SigTranIFGroupTrafMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("override", 1), ("loadShare", 2), ("broadcast", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupTrafMode.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupTrafMode.setDescription('Traffic mode of interface group. Access: Online. AC INI-Param: SS7_SIG_TRAF_MODE')
acSS7SigTranIFGroupRecovTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupRecovTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupRecovTimer.setDescription('T(r) - recovery timer (in msecs) of interface group. Access: Online. AC INI-Param: SS7_SIG_T_REC')
acSS7SigTranIFGroupAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupAckTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupAckTimer.setDescription('T(ack) - wait timer for ASP_UP_ACK (in msecs) of interface group. Access: Online. AC INI-Param: SS7_SIG_T_ACK')
acSS7SigTranIFGroupHBTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupHBTimer.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupHBTimer.setDescription('T(beat) - Heartbeat Timer (in msecs) of interface group. Access: Online. AC INI-Param: SS7_SIG_T_HB')
acSS7SigTranIFGroupMinAsp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupMinAsp.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupMinAsp.setDescription('Minimal ASP (Application Server Process) number in interface group(minimum = 1). Access: Online. AC INI-Param: SS7_SIG_MIN_ASP')
acSS7SigTranIFGroupBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupBehavior.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupBehavior.setDescription('Behavior bit of interface group. Access: Online. AC INI-Param: SS7_SIG_BEHAVIOUR')
acSS7SigTranIFGroupSCTPInst = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPInst.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPInst.setDescription('SCTP (Stream Control Transmission Protocol) instance of interface group. AC INI-Param: SS7_SCTP_INSTANCE')
acSS7SigTranIFGroupSCTPLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPLocalPort.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPLocalPort.setDescription('Local SCTP (Stream Control Transmission Protocol) port of interface group. Access: Online. AC INI-Param: SS7_LOCAL_SCTP_PORT')
acSS7SigTranIFGroupNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("itu", 1), ("ansi", 2), ("china", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupNetwork.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupNetwork.setDescription('Network variant of interface group. Access: Online. AC INI-Param: SS7_SIG_NETWORK')
acSS7SigTranIFGroupSCTPDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPDestPort.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPDestPort.setDescription('Destination SCTP (Stream Control Transmission Protocol) port. Access: Online. AC INI-Param: SS7_DEST_SCTP_PORT')
acSS7SigTranIFGroupDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupDestIp.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupDestIp.setDescription('Destination SCTP (Stream Control Transmission Protocol) IP address. Access: Online. AC INI-Param: SS7_DEST_IP')
acSS7SigTranIFGroupSCTPMaxInbStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPMaxInbStreams.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPMaxInbStreams.setDescription('Maximum inbound streams in interface group. Access: Online. AC INI-Param: SS7_MGC_MX_IN_STREAM')
acSS7SigTranIFGroupSCTPMaxOutbStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPMaxOutbStreams.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupSCTPMaxOutbStreams.setDescription('Number of output streams required in interface group. Access: Online. AC INI-Param: SS7_MGC_NUM_OUT_STREAM')
acSS7SigTranIFGroupRdcyBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupRdcyBoardNum.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupRdcyBoardNum.setDescription('This parameter is used to specify the SIGTRAN (Signaling Transport) group redundancy board number. Access: Online. AC INI-Param: RdcyBoardNum')
acSS7SigTranIFGroupRoutingContextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupRoutingContextIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupRoutingContextIndex.setDescription('Entry in Routing Context table, that contains the routing context rules for this interface group. Access: Online. AC INI-Param: SS7_SIG_RC_INDEX')
acSS7SigTranIFGroupRoutingContextValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupRoutingContextValue.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupRoutingContextValue.setDescription('Routing context value for this interface group (AS). Access: Online. AC INI-Param: SS7_SIG_RC_VALUE')
acSS7SigTranIFGroupNetworkAppearance = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 21, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFGroupNetworkAppearance.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFGroupNetworkAppearance.setDescription('Network Appearance value for this interface group (AS). Access: Online. AC INI-Param: SS7_SIG_NETWORK_APPEARANCE')
acSS7SigTranIFIDTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22), )
if mibBuilder.loadTexts: acSS7SigTranIFIDTable.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDTable.setDescription('')
acSS7SigTranIFIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7SigTranIFIDIndex"))
if mibBuilder.loadTexts: acSS7SigTranIFIDEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDEntry.setDescription('')
acSS7SigTranIFIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acSS7SigTranIFIDIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDIndex.setDescription('Index field for line. AC INI-Param: SS7_SIG_IF_ID_INDEX')
acSS7SigTranIFIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDRowStatus.setDescription('ROWSTATUS field for line. AC INI-Param: SS7_SIG_IF_ID_ROWSTATUS')
acSS7SigTranIFIDAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("activate", 1), ("deActivate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDAction.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDAction.setDescription('Management field for ACTION. AC INI-Param: SS7_SIG_IF_ID_ACTION')
acSS7SigTranIFIDActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SigTranIFIDActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDActionResult.setDescription('Management field for ACTION RESULT. AC INI-Param: SS7_SIG_IF_ID_ACTION_RESULT')
acSS7SigTranIFIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDValue.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDValue.setDescription('SS7 (Signaling System 7) SIGTRAN (Signaling Transport) interface ID value. Access: Online. AC INI-Param: SS7_SIG_IF_ID_VALUE')
acSS7SigTranIFIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDName.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDName.setDescription('SS7 (Signaling System 7) SIGTRAN (Signaling Transport) interface ID name (text string). Access: Online. AC INI-Param: SS7_SIG_IF_ID_NAME')
acSS7SigTranIFIDOwnerGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDOwnerGroup.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDOwnerGroup.setDescription('Owner group of interface id. Access: Online. AC INI-Param: SS7_SIG_IF_ID_OWNER_GROUP')
acSS7SigTranIFIDSignalingLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 7))).clone(namedValues=NamedValues(("noLayer", 0), ("iua", 1), ("m2ua", 2), ("m2tunnel", 4), ("dua", 6), ("isdnTunnel", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDSignalingLayer.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDSignalingLayer.setDescription('UAL Type of interface id: 0 = none 1 = iua 2 = m2ua 4 = m2tunnel 5 = V5ua 6 = dua 7=isdnTunnel. Access: Online. AC INI-Param: SS7_SIG_IF_ID_LAYER')
acSS7SigTranIFIDNai = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 124))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDNai.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDNai.setDescription('NAI of interface id. Access: Online. AC INI-Param: SS7_SIG_IF_ID_NAI')
acSS7SigTranIFIDM3UASpc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 22, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranIFIDM3UASpc.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranIFIDM3UASpc.setDescription('This parameter is used to specify the SIGTRAN (Signaling Transport) M3UA (M3UA - SS7 MTP3-User Adaptation Layer) SPC. Access: Online. AC INI-Param: SS7_SIG_M3UA_SPC')
acSS7M3UAStaticRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23), )
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingTable.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingTable.setDescription('')
acSS7M3UAStaticRoutingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7M3UAStaticRoutingIndex"))
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingEntry.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingEntry.setDescription('')
acSS7M3UAStaticRoutingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingIndex.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingIndex.setDescription('This parameter is used for the Signaling System 7 (SS7) interface ID index, for a line. AC INI-Param: M3UAROUTINGCLIST_Index')
acSS7M3UAStaticRoutingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingRowStatus.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingRowStatus.setDescription('This parameter is used for the Signaling System 7 (SS7) interface ID row status, for a line. AC INI-Param: SS7_SIG_IF_ID_ROWSTATUS')
acSS7M3UAStaticRoutingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("activate", 1), ("deActivate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingAction.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingAction.setDescription('This parameter is used for Signaling System 7 (SS7) SIGTRAN (Signaling Transport) interface ID management, for actions. AC INI-Param: SS7_SIG_IF_ID_ACTION')
acSS7M3UAStaticRoutingActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingActionResult.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingActionResult.setDescription("This parameter is used for Signaling System 7 (SS7) SIGTRAN (Signaling Transport) interface ID management, for an action's results. AC INI-Param: SS7_SIG_IF_ID_ACTION_RESULT")
acSS7M3UAStaticRoutingOwnerInterfaceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOwnerInterfaceGroup.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOwnerInterfaceGroup.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_OwnerInterfaceGroup')
acSS7M3UAStaticRoutingRC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingRC.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingRC.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_RoutingContext')
acSS7M3UAStaticRoutingDestinationPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingDestinationPointCode.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingDestinationPointCode.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_DestinationPointCode')
acSS7M3UAStaticRoutingNetworkAppearence = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingNetworkAppearence.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingNetworkAppearence.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_NetworkAppearence')
acSS7M3UAStaticRoutingSeriviceIndicatorList = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingSeriviceIndicatorList.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingSeriviceIndicatorList.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_SeriviceIndicatorList')
acSS7M3UAStaticRoutingOPC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC1.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC1.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_OPC1')
acSS7M3UAStaticRoutingOPC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC2.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC2.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_OPC2')
acSS7M3UAStaticRoutingOPC3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC3.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC3.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_OPC3')
acSS7M3UAStaticRoutingOPC4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC4.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingOPC4.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_OPC4')
acSS7M3UAStaticRoutingLowerCICValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue1.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue1.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_LowerCICValue1')
acSS7M3UAStaticRoutingUpperCICValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue1.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue1.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_UpperCICValue1')
acSS7M3UAStaticRoutingLowerCICValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue2.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue2.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_LowerCICValue2')
acSS7M3UAStaticRoutingUpperCICValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue2.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue2.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_UpperCICValue2')
acSS7M3UAStaticRoutingLowerCICValue3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue3.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue3.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_LowerCICValue3')
acSS7M3UAStaticRoutingUpperCICValue3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue3.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue3.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_UpperCICValue3')
acSS7M3UAStaticRoutingLowerCICValue4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue4.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingLowerCICValue4.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_LowerCICValue4')
acSS7M3UAStaticRoutingUpperCICValue4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 23, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue4.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7M3UAStaticRoutingUpperCICValue4.setDescription('Routing Context list - for M3UA use. Access: Online. AC INI-Param: M3UAROUTINGCLIST_UpperCICValue4')
acSS7SigTranRoutingContextTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24), )
if mibBuilder.loadTexts: acSS7SigTranRoutingContextTable.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextTable.setDescription('')
acSS7SigTranRoutingContextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7SigTranRoutingContextIndex"), (0, "AC-SS7-MIB", "acSS7SigTranRoutingContextInnerIndex"))
if mibBuilder.loadTexts: acSS7SigTranRoutingContextEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextEntry.setDescription('')
acSS7SigTranRoutingContextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: acSS7SigTranRoutingContextIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextIndex.setDescription('First index field for line. AC INI-Param: SS7_RC_INDEX')
acSS7SigTranRoutingContextInnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: acSS7SigTranRoutingContextInnerIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextInnerIndex.setDescription('Second index field for line. AC INI-Param: SS7_RC_INNER_INDEX')
acSS7SigTranRoutingContextRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextRowStatus.setDescription('ROWSTATUS field for line. AC INI-Param: SS7_RC_ROW_STATUS')
acSS7SigTranRoutingContextAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("activate", 1), ("deActivate", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextAction.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextAction.setDescription('Management field for ACTIONS. AC INI-Param: RCAction')
acSS7SigTranRoutingContextActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextActionResult.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextActionResult.setDescription('RCActionRes. AC INI-Param: SS7_RC_ACTION_RES')
acSS7SigTranRoutingContextSnIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSnIdx.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSnIdx.setDescription('This parameter is used to specify the M3UA Routing Context DPC SN-Index. Access: Online. AC INI-Param: SS7_RC_SN_INDEX')
acSS7SigTranRoutingContextSpc = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSpc.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSpc.setDescription('This parameter is used to specify the M3UA Routing Context DPC parameter. AC INI-Param: SS7_RC_SPC')
acSS7SigTranRoutingContextOpc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc1.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc1.setDescription('This parameter is used to specify the M3UA Routing Context,First element of OPC list. Access: Online. AC INI-Param: SS7_RC_OPC1')
acSS7SigTranRoutingContextOpc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc2.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc2.setDescription('This parameter is used to specify the M3UA Routing Context,Second element of OPC list. Access: Online. AC INI-Param: SS7_RC_OPC2')
acSS7SigTranRoutingContextOpc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc3.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc3.setDescription('This parameter is used to specify the M3UA Routing Context, Third element of OPC list. Access: Online. AC INI-Param: SS7_RC_OPC3')
acSS7SigTranRoutingContextOpc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc4.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextOpc4.setDescription('This parameter is used to specify the M3UA Routing Context, Fourth element of OPC list. Access: Online. AC INI-Param: SS7_RC_OPC4')
acSS7SigTranRoutingContextSi1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi1.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi1.setDescription('This parameter is used to specify the M3UA Routing Context, First element of SI list. Access: Online. AC INI-Param: SS7_RC_SI1')
acSS7SigTranRoutingContextSi2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi2.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi2.setDescription('This parameter is used to specify the M3UA Routing Context, Second element of SI list. Access: Online. AC INI-Param: SS7_RC_SI2')
acSS7SigTranRoutingContextSi3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi3.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi3.setDescription('This parameter is used to specify the M3UA Routing Context, Third element of SI list. Access: Online. AC INI-Param: SS7_RC_SI3')
acSS7SigTranRoutingContextSi4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 5, 24, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi4.setStatus('current')
if mibBuilder.loadTexts: acSS7SigTranRoutingContextSi4.setDescription('This parameter is used to specify the M3UA Routing Context, Fourth element of SI list. Access: Online. AC INI-Param: SS7_RC_SI4')
acSS7Redundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6))
acSS7RedundancyCrossLinkTransferType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("tcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyCrossLinkTransferType.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyCrossLinkTransferType.setDescription('Defines the cross-board connection media type for the MTP3 redundancy feature: 0 = M3BRDCY_CONN_TYPE_NONE 2 = M3BRDCY_CONN_TYPE_TCP. Access: Offline. AC INI-Param: SS7MTP3RdcyTransferType')
acSS7RedundancyMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyMode.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyMode.setDescription('Defines the MTP3 Signaling redundancy mode: 0 = Disabled 1 = Enabled . Access: Offline. AC INI-Param: SS7MTP3RdcyMode')
acSS7RedundancyBoardNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyBoardNum.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyBoardNum.setDescription('Defines the board number for the SS7 (Signaling System 7) MTP3 redundancy mode. Each board is allocated a unique number. All boards share a single redundancy table. Access: Offline. AC INI-Param: SS7MTP3RdcyBoardNum')
acSS7RedundancyCrossLinkTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyCrossLinkTraceAll.setStatus('obsolete')
if mibBuilder.loadTexts: acSS7RedundancyCrossLinkTraceAll.setDescription('When set via INI-file, activates trace output for all X-links (only when SS7 redundancy is configured). . Access: Instant. AC INI-Param: SS7M3BRdcyXlinkTraceAll')
acSS7RedundancyMTP3RdcyTblSyncInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 144000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyMTP3RdcyTblSyncInterval.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyMTP3RdcyTblSyncInterval.setDescription('Defines the interval between SS7 tables automatic synchronizations, in minutes. 0 = no automatic synchronization is activated. . Access: Instant. AC INI-Param: N/A')
acSS7RedundancySyncAllBoards = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noAction", 0), ("sync", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancySyncAllBoards.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancySyncAllBoards.setDescription('Provide SYNC all boards command. Access: Instant. AC INI-Param: N/A')
acSS7RedundancySyncBoard = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancySyncBoard.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancySyncBoard.setDescription('Provide SYNC between this board and another specific board (parameter is the remote board number). Access: Instant. AC INI-Param: N/A')
acSS7RedundancyKeepAliveWindow = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyKeepAliveWindow.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyKeepAliveWindow.setDescription('Defines redundancy X-link keep-alive tolerance window. (x-link between boards in Signaling System 7 (SS7) MTP3-User Adaptation Layer redundancy mode). . Access: Offline. AC INI-Param: SS7MTP3RdcyKeepAliveWindow')
acSS7RedundancyKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7RedundancyKeepAliveInterval.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundancyKeepAliveInterval.setDescription('Defines redundancy X-link keep-alive interval in secs. (x-link between boards in Signaling System 7 (SS7) MTP3-User Adaptation Layer redundancy mode). 0 = no keep-alive mechanism is activated. . Access: Offline. AC INI-Param: SS7MTP3RdcyKeepAliveInterval')
acSS7RedundantSNTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21), )
if mibBuilder.loadTexts: acSS7RedundantSNTable.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNTable.setDescription('')
acSS7RedundantSNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1), ).setIndexNames((0, "AC-SS7-MIB", "acSS7RedundantSNBoardIndex"), (0, "AC-SS7-MIB", "acSS7RedundantSNIndex"))
if mibBuilder.loadTexts: acSS7RedundantSNEntry.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNEntry.setDescription('')
acSS7RedundantSNBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: acSS7RedundantSNBoardIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNBoardIndex.setDescription('First index for a line: board number. AC INI-Param: SS7_RDCYSN_BOARD_INDEX')
acSS7RedundantSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acSS7RedundantSNIndex.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNIndex.setDescription('Second index for a line: SN number in the board. AC INI-Param: SS7_RDCYSN_SN_INDEX')
acSS7RedundantSNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RedundantSNRowStatus.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNRowStatus.setDescription('ROWSTATUS field for line. AC INI-Param: SS7_RDCYSN_ROWSTATUS')
acSS7RedundantSNAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RedundantSNAction.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNAction.setDescription('Management field for ACTION. AC INI-Param: SS7_RDCYSN_ACTION')
acSS7RedundantSNActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7RedundantSNActionRes.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNActionRes.setDescription('Management field for ACTION RESULT. AC INI-Param: SS7_RDCYSN_ACTIONRES')
acSS7RedundantSNBoardIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RedundantSNBoardIp.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNBoardIp.setDescription('IP address of the board. Access: Online. AC INI-Param: SS7_RDCYSN_BOARD_IP')
acSS7RedundantSNOPC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RedundantSNOPC.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNOPC.setDescription('Internal point-code of the SN (Signaling Node). Access: Online. AC INI-Param: SS7_RDCYSN_OPC')
acSS7RedundantSNALCAPOPC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 1, 6, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acSS7RedundantSNALCAPOPC.setStatus('current')
if mibBuilder.loadTexts: acSS7RedundantSNALCAPOPC.setDescription('Internal point-code of ALCAP instance on a given board. Access: Online. AC INI-Param: SS7_RDCYSN_ALCAP_OPC')
acSS7Status = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2))
acSS7Constants = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1))
acSS7ConstantsNumberOfNodes = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfNodes.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfNodes.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfLinks = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinks.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinks.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfLinkSetsPerSN = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinkSetsPerSN.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinkSetsPerSN.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfLinksPerLinkSet = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinksPerLinkSet.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinksPerLinkSet.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfRouteSetsPerSN = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfRouteSetsPerSN.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfRouteSetsPerSN.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfRoutesPerRouteSets = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfRoutesPerRouteSets.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfRoutesPerRouteSets.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfNodeTimerSets = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfNodeTimerSets.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfNodeTimerSets.setDescription(' AC INI-Param: N/A')
acSS7ConstantsNumberOfLinkSetTimerSets = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 12, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinkSetTimerSets.setStatus('current')
if mibBuilder.loadTexts: acSS7ConstantsNumberOfLinkSetTimerSets.setDescription(' AC INI-Param: N/A')
mibBuilder.exportSymbols("AC-SS7-MIB", acSS7RouteSetDPC=acSS7RouteSetDPC, acSS7SigTranRoutingContextActionResult=acSS7SigTranRoutingContextActionResult, acSS7LinkSigTranIfid=acSS7LinkSigTranIfid, acSS7LinkSigTranEntry=acSS7LinkSigTranEntry, acSS7SignalingNodeTimersT26ANSI=acSS7SignalingNodeTimersT26ANSI, acSS7M3UAStaticRoutingOPC1=acSS7M3UAStaticRoutingOPC1, acSS7SigTranIFIDSignalingLayer=acSS7SigTranIFIDSignalingLayer, acSS7LinkSigTranGroupId=acSS7LinkSigTranGroupId, acSS7RedundantSNAction=acSS7RedundantSNAction, acSS7SigTranIFGroupAckTimer=acSS7SigTranIFGroupAckTimer, acSS7LinkSetLinkActionResult=acSS7LinkSetLinkActionResult, acSS7SignalingNodeNwIndicator=acSS7SignalingNodeNwIndicator, acSS7SignalingNodeRouteSetCongestionWindow=acSS7SignalingNodeRouteSetCongestionWindow, acSS7SignalingNodeVariant=acSS7SignalingNodeVariant, acSS7MTP2AttribTimerT4Normal=acSS7MTP2AttribTimerT4Normal, acSS7MTP2AttribOctetCounting=acSS7MTP2AttribOctetCounting, acSS7LinkTNLCongestionMode=acSS7LinkTNLCongestionMode, acSS7RouteSetRouteActionResult=acSS7RouteSetRouteActionResult, acSS7LinkTDMBlock=acSS7LinkTDMBlock, acSS7LinkTNLTable=acSS7LinkTNLTable, acSS7LinkCommonEntry=acSS7LinkCommonEntry, acSS7ConstantsNumberOfLinks=acSS7ConstantsNumberOfLinks, acSS7=acSS7, acSS7SignalingNodeName=acSS7SignalingNodeName, acSS7SigTranRoutingContextSi2=acSS7SigTranRoutingContextSi2, acSS7RedundantSNBoardIndex=acSS7RedundantSNBoardIndex, acSS7LinkSetTimersT23ITU=acSS7LinkSetTimersT23ITU, acSS7RouteSetRowStatus=acSS7RouteSetRowStatus, acSS7LinkATMSAALLinkVPI=acSS7LinkATMSAALLinkVPI, acSS7SignalingNodeTimersT27ANSI=acSS7SignalingNodeTimersT27ANSI, acSS7LinkSetTimersAction=acSS7LinkSetTimersAction, acSS7SignalingNodeTimersT10=acSS7SignalingNodeTimersT10, acSS7M3UAStaticRoutingLowerCICValue1=acSS7M3UAStaticRoutingLowerCICValue1, acSS7LinkSetTimersIdx=acSS7LinkSetTimersIdx, acSS7APCPC=acSS7APCPC, acSS7SignalingNodeSpStp=acSS7SignalingNodeSpStp, acSS7RedundantSNEntry=acSS7RedundantSNEntry, acSS7APCEntry=acSS7APCEntry, acSS7M3UAStaticRoutingAction=acSS7M3UAStaticRoutingAction, acSS7M3UAStaticRoutingOPC4=acSS7M3UAStaticRoutingOPC4, acSS7APCMtcBusy=acSS7APCMtcBusy, acSS7LinkSetTimersT4=acSS7LinkSetTimersT4, acSS7M3UAStaticRoutingNetworkAppearence=acSS7M3UAStaticRoutingNetworkAppearence, acSS7LinkATMEntry=acSS7LinkATMEntry, acSS7Constants=acSS7Constants, acSS7ConstantsNumberOfNodeTimerSets=acSS7ConstantsNumberOfNodeTimerSets, acSS7M3UAStaticRoutingUpperCICValue3=acSS7M3UAStaticRoutingUpperCICValue3, acSS7RouteSetTable=acSS7RouteSetTable, acSS7RouteSetRouteRoutesetIndex=acSS7RouteSetRouteRoutesetIndex, acSS7SignalingNodeTimersActionResult=acSS7SignalingNodeTimersActionResult, acSS7SigTranIFGroupIndex=acSS7SigTranIFGroupIndex, acSS7SigTranIFGroupSCTPMaxOutbStreams=acSS7SigTranIFGroupSCTPMaxOutbStreams, acSS7SigTranIFGroupSCTPDestPort=acSS7SigTranIFGroupSCTPDestPort, acSS7M3UAStaticRoutingUpperCICValue4=acSS7M3UAStaticRoutingUpperCICValue4, acSS7LinkTNLAlignmentMode=acSS7LinkTNLAlignmentMode, acSS7LinkTDMCongestionLowMark=acSS7LinkTDMCongestionLowMark, acSS7MTP2AttribTimerT6=acSS7MTP2AttribTimerT6, acSS7SigTranIFGroupRdcyBoardNum=acSS7SigTranIFGroupRdcyBoardNum, acSS7SigTranIFIDAction=acSS7SigTranIFIDAction, acSS7RouteSetRouteRowStatus=acSS7RouteSetRouteRowStatus, acSS7LinkATMSAALLinkProfileNum=acSS7LinkATMSAALLinkProfileNum, acSS7LinkCommonL3TypeSelector=acSS7LinkCommonL3TypeSelector, acSS7SignalingNodeOpc=acSS7SignalingNodeOpc, acSS7SigTranIFGroupRoutingContextIndex=acSS7SigTranIFGroupRoutingContextIndex, acSS7SigTranRoutingContextEntry=acSS7SigTranRoutingContextEntry, acSS7LinkSetLinkAction=acSS7LinkSetLinkAction, acSS7SigTranIFGroupAction=acSS7SigTranIFGroupAction, acSS7RedundancySyncBoard=acSS7RedundancySyncBoard, acSS7LinkTDMMtp2Atts=acSS7LinkTDMMtp2Atts, acSS7LinkSetTimersName=acSS7LinkSetTimersName, acSS7LinkTDMCongestionHighMark=acSS7LinkTDMCongestionHighMark, acSS7SignalingNodeTimersT28ANSI=acSS7SignalingNodeTimersT28ANSI, acSS7ConstantsNumberOfNodes=acSS7ConstantsNumberOfNodes, acSS7LinkTDMTrunkNumber=acSS7LinkTDMTrunkNumber, acSS7RouteSetAdminState=acSS7RouteSetAdminState, acSS7LinkSetLinksMask=acSS7LinkSetLinksMask, acSS7MTP2AttribTimerT3=acSS7MTP2AttribTimerT3, acSS7Configuration=acSS7Configuration, acSS7LinkTDMInhibit=acSS7LinkTDMInhibit, acSS7MTP2AttribIndex=acSS7MTP2AttribIndex, acSS7APCSNI=acSS7APCSNI, acSS7MTP2AttribTimerT4Emerg=acSS7MTP2AttribTimerT4Emerg, acSS7SignalingNodeEntry=acSS7SignalingNodeEntry, acSS7SigTranRoutingContextIndex=acSS7SigTranRoutingContextIndex, acSS7RedundantSNTable=acSS7RedundantSNTable, acSS7SignalingNodeTimersIndex=acSS7SignalingNodeTimersIndex, PYSNMP_MODULE_ID=acSS7, acSS7LinkSetName=acSS7LinkSetName, acSS7SignalingNodeTimersT23ANSI=acSS7SignalingNodeTimersT23ANSI, acSS7SignalingNodeTimersT11=acSS7SignalingNodeTimersT11, acSS7LinkSetLinkEntry=acSS7LinkSetLinkEntry, acSS7SignalingNodeIsupApp=acSS7SignalingNodeIsupApp, acSS7SigTranIFGroupTable=acSS7SigTranIFGroupTable, acSS7APCAdminState=acSS7APCAdminState, acSS7SigTranIFGroupTrafMode=acSS7SigTranIFGroupTrafMode, acSS7LinkSetLinkLinksetIndex=acSS7LinkSetLinkLinksetIndex, acSS7LinkSetLinkLinkSlc=acSS7LinkSetLinkLinkSlc, acSS7LinkSetTimersTable=acSS7LinkSetTimersTable, acSS7RouteSetRouteInnerRouteIndex=acSS7RouteSetRouteInnerRouteIndex, acSS7LinkSetTimersT20ANSI=acSS7LinkSetTimersT20ANSI, acSS7RedundancyMTP3RdcyTblSyncInterval=acSS7RedundancyMTP3RdcyTblSyncInterval, acSS7RouteSetRouteEntry=acSS7RouteSetRouteEntry, acSS7MTP2AttribSUERMSigUnitDThreshold=acSS7MTP2AttribSUERMSigUnitDThreshold, acSS7SignalingNodeTimersTable=acSS7SignalingNodeTimersTable, acSS7LinkSetTimersT1SLT=acSS7LinkSetTimersT1SLT, acSS7SigTranIFIDOwnerGroup=acSS7SigTranIFIDOwnerGroup, acSS7LinkCommonTable=acSS7LinkCommonTable, acSS7RouteSetSNIndex=acSS7RouteSetSNIndex, acSS7MTP2AttribAERMEmerglThreshold=acSS7MTP2AttribAERMEmerglThreshold, acSS7APCIndex=acSS7APCIndex, acSS7M3UAStaticRoutingDestinationPointCode=acSS7M3UAStaticRoutingDestinationPointCode, acSS7LinkSetLinkInnerLinkIndex=acSS7LinkSetLinkInnerLinkIndex, acSS7Timers=acSS7Timers, acSS7LinkSetTimersT2SLT=acSS7LinkSetTimersT2SLT, acSS7RedundancyKeepAliveInterval=acSS7RedundancyKeepAliveInterval, acSS7SigTranIFGroupSCTPInst=acSS7SigTranIFGroupSCTPInst, acSS7SignalingNodeTimersT24ITU=acSS7SignalingNodeTimersT24ITU, acSS7SigTranRoutingContextInnerIndex=acSS7SigTranRoutingContextInnerIndex, acSS7RedundancyCrossLinkTransferType=acSS7RedundancyCrossLinkTransferType, acSS7APCOperState=acSS7APCOperState, acSS7MTP2M3bSlDiscardCongThreshold=acSS7MTP2M3bSlDiscardCongThreshold, acSS7AliasPointCode=acSS7AliasPointCode, acSS7SignalingNodeTimersT21ITU=acSS7SignalingNodeTimersT21ITU, acSS7LinkSetTimersT1=acSS7LinkSetTimersT1, acSS7SignalingNodeTimersT6=acSS7SignalingNodeTimersT6, acSS7RedundantSNBoardIp=acSS7RedundantSNBoardIp, acSS7LinkSetTimersT21ANSI=acSS7LinkSetTimersT21ANSI, acSS7SignalingNodeTimersAction=acSS7SignalingNodeTimersAction, acSS7LinkTNLOtherSideLinkNum=acSS7LinkTNLOtherSideLinkNum, acSS7SigTranRoutingContextAction=acSS7SigTranRoutingContextAction, acSS7APCAction=acSS7APCAction, acSS7LinkCommonAdminState=acSS7LinkCommonAdminState, acSS7SignalingNodeRdcyOpc=acSS7SignalingNodeRdcyOpc, acSS7SigTranIFIDActionResult=acSS7SigTranIFIDActionResult, acSS7APCSNIndex=acSS7APCSNIndex, acSS7LinkTNLWaitOtherSideInsvTimer=acSS7LinkTNLWaitOtherSideInsvTimer, acSS7MTP2AttribSUERMThreshold=acSS7MTP2AttribSUERMThreshold, acSS7Nodes=acSS7Nodes, acSS7MTP2AttribTable=acSS7MTP2AttribTable, acSS7SignalingNodeTimersT18ITU=acSS7SignalingNodeTimersT18ITU, acSS7SigTranRoutingContextTable=acSS7SigTranRoutingContextTable, acSS7LinkSetTimersEntry=acSS7LinkSetTimersEntry, acSS7LinkTDMTimeSlotNumber=acSS7LinkTDMTimeSlotNumber, acSS7SignalingNodeTable=acSS7SignalingNodeTable, acSS7MTP2AttribLinkRate=acSS7MTP2AttribLinkRate, acSS7ConstantsNumberOfRoutesPerRouteSets=acSS7ConstantsNumberOfRoutesPerRouteSets, acSS7SigTranIFIDIndex=acSS7SigTranIFIDIndex, acSS7SignalingNodeActionResult=acSS7SignalingNodeActionResult, acSS7SigTranIFIDEntry=acSS7SigTranIFIDEntry, acSS7LinkSets=acSS7LinkSets, acSS7SigTranIFGroupMinAsp=acSS7SigTranIFGroupMinAsp, acSS7LinkSigTranTable=acSS7LinkSigTranTable, acSS7LinkSetSNIndex=acSS7LinkSetSNIndex, acSS7M3UAStaticRoutingOwnerInterfaceGroup=acSS7M3UAStaticRoutingOwnerInterfaceGroup, acSS7SigTranIFGroupBehavior=acSS7SigTranIFGroupBehavior, acSS7SignalingNodeTimersT8=acSS7SignalingNodeTimersT8, acSS7M3UAStaticRoutingLowerCICValue3=acSS7M3UAStaticRoutingLowerCICValue3, acSS7SigTranIFGroupNetwork=acSS7SigTranIFGroupNetwork, acSS7LinkTNLOosStartDelayTimer=acSS7LinkTNLOosStartDelayTimer, acSS7SignalingNodeTimersT30ANSI=acSS7SignalingNodeTimersT30ANSI, acSS7Links=acSS7Links, acSS7SigTranRoutingContextOpc2=acSS7SigTranRoutingContextOpc2, acSS7M3UAStaticRoutingActionResult=acSS7M3UAStaticRoutingActionResult, acSS7M3UAStaticRoutingTable=acSS7M3UAStaticRoutingTable, acSS7RedundantSNActionRes=acSS7RedundantSNActionRes, acSS7ConstantsNumberOfLinkSetTimerSets=acSS7ConstantsNumberOfLinkSetTimerSets, acSS7RouteSetIndex=acSS7RouteSetIndex, acSS7APCName=acSS7APCName, acSS7M3UAStaticRoutingSeriviceIndicatorList=acSS7M3UAStaticRoutingSeriviceIndicatorList, acSS7SignalingNodeTimersT24ANSI=acSS7SignalingNodeTimersT24ANSI, acSS7LinkSetTimersT14=acSS7LinkSetTimersT14, acSS7LinkSetTimersT22ITU=acSS7LinkSetTimersT22ITU, acSS7MTP2AttribTimerT2=acSS7MTP2AttribTimerT2, acSS7LinkCommonRdcyBoardNum=acSS7LinkCommonRdcyBoardNum, acSS7LinkSetTimersT12=acSS7LinkSetTimersT12, acSS7LinkATMSAALLinkVCI=acSS7LinkATMSAALLinkVCI, acSS7MTP2=acSS7MTP2, acSS7SignalingNodeTimersEntry=acSS7SignalingNodeTimersEntry, acSS7M3UAStaticRoutingOPC2=acSS7M3UAStaticRoutingOPC2, acSS7LinkSetTimersT3=acSS7LinkSetTimersT3, acSS7M3UAStaticRoutingRC=acSS7M3UAStaticRoutingRC, acSS7LinkCommonAction=acSS7LinkCommonAction, acSS7SignalingNodeTimersT22ANSI=acSS7SignalingNodeTimersT22ANSI, acSS7RedundantSNRowStatus=acSS7RedundantSNRowStatus, acSS7RouteSetAction=acSS7RouteSetAction, acSS7SignalingNodeTimersName=acSS7SignalingNodeTimersName, acSS7SignalingNodeBiccApp=acSS7SignalingNodeBiccApp, acSS7ConstantsNumberOfRouteSetsPerSN=acSS7ConstantsNumberOfRouteSetsPerSN, acSS7RouteSetRoutePriority=acSS7RouteSetRoutePriority, acSS7RedundantSNOPC=acSS7RedundantSNOPC, acSS7LinkSetAdminState=acSS7LinkSetAdminState, acSS7SigTranRoutingContextSi1=acSS7SigTranRoutingContextSi1, acSS7LinkSetTimersT5=acSS7LinkSetTimersT5, acSS7RedundancyKeepAliveWindow=acSS7RedundancyKeepAliveWindow, acSS7APCRowStatus=acSS7APCRowStatus, acSS7MTP2AttribTimerT5=acSS7MTP2AttribTimerT5, acSS7LinkCommonActionResult=acSS7LinkCommonActionResult, acSS7LinkSetTimersIsUsed=acSS7LinkSetTimersIsUsed, acSS7SigTranIFIDTable=acSS7SigTranIFIDTable, acSS7SignalingNodeBisupApp=acSS7SignalingNodeBisupApp, acSS7RedundantSNIndex=acSS7RedundantSNIndex, acSS7SignalingNodeTimersT15=acSS7SignalingNodeTimersT15, acSS7LinkSetTimersActionResult=acSS7LinkSetTimersActionResult, acSS7RouteSetRouteSNIndex=acSS7RouteSetRouteSNIndex, acSS7SignalingNodeTimersT19ITU=acSS7SignalingNodeTimersT19ITU, acSS7MTP2AttribIacCp=acSS7MTP2AttribIacCp, acSS7RouteSets=acSS7RouteSets, acSS7LinkCommonRowStatus=acSS7LinkCommonRowStatus, acSS7SignalingNodeTraceLevel=acSS7SignalingNodeTraceLevel, acSS7SigTranIFIDM3UASpc=acSS7SigTranIFIDM3UASpc, acSS7SignalingNodeAlcapApp=acSS7SignalingNodeAlcapApp, acSS7LinkCommonOperState=acSS7LinkCommonOperState, acSS7MTP2AttribEntry=acSS7MTP2AttribEntry, acSS7LinkCommonIndex=acSS7LinkCommonIndex, acSS7SigTranIFIDName=acSS7SigTranIFIDName, acSS7SigTranRoutingContextOpc1=acSS7SigTranRoutingContextOpc1, acSS7SignalingNodeAction=acSS7SignalingNodeAction, acSS7SigTranIFGroupActionResult=acSS7SigTranIFGroupActionResult, acSS7SignalingNodeRowStatus=acSS7SignalingNodeRowStatus, acSS7LinkSetLinkLinkNo=acSS7LinkSetLinkLinkNo, acSS7SigTranRoutingContextOpc3=acSS7SigTranRoutingContextOpc3, acSS7M3UAStaticRoutingRowStatus=acSS7M3UAStaticRoutingRowStatus, acSS7LinkSetOperState=acSS7LinkSetOperState, acSS7SignalingNodeTfc=acSS7SignalingNodeTfc, acSS7SigTranIFGroupSCTPMaxInbStreams=acSS7SigTranIFGroupSCTPMaxInbStreams, acSS7SignalingNodeTimersT20ITU=acSS7SignalingNodeTimersT20ITU, acSS7SignalingNodeAdminState=acSS7SignalingNodeAdminState, acSS7LinkSetAction=acSS7LinkSetAction, acSS7LinkTNLEntry=acSS7LinkTNLEntry, acSS7APCTable=acSS7APCTable, acSS7LinkTDMEntry=acSS7LinkTDMEntry, acSS7SigTranRoutingContextOpc4=acSS7SigTranRoutingContextOpc4, acSS7SigTranM3UATrafficBehavior=acSS7SigTranM3UATrafficBehavior, acSS7LinkCommonName=acSS7LinkCommonName, acSS7RouteSetEntry=acSS7RouteSetEntry, acSS7MTP2AttribTimerT1=acSS7MTP2AttribTimerT1, acSS7LinkSetTimersIndex=acSS7LinkSetTimersIndex, acSS7SignalingNodeSccpApp=acSS7SignalingNodeSccpApp, acSS7M3UAStaticRoutingIndex=acSS7M3UAStaticRoutingIndex, acSS7M3UAStaticRoutingUpperCICValue2=acSS7M3UAStaticRoutingUpperCICValue2, acSS7RouteSetName=acSS7RouteSetName, acSS7ConstantsNumberOfLinkSetsPerSN=acSS7ConstantsNumberOfLinkSetsPerSN, acSS7SigTranIFGroupEntry=acSS7SigTranIFGroupEntry, acSS7LinkATMSAALLinkType=acSS7LinkATMSAALLinkType, acSS7LinkSetTimersT17=acSS7LinkSetTimersT17, acSS7SigTranIFGroupRowStatus=acSS7SigTranIFGroupRowStatus, acSS7LinkCommonMtcBusy=acSS7LinkCommonMtcBusy, acSS7Status=acSS7Status, acSS7SigTranIFGroupId=acSS7SigTranIFGroupId, acSS7LinkCommonVariant=acSS7LinkCommonVariant, acSS7M3UAStaticRoutingLowerCICValue4=acSS7M3UAStaticRoutingLowerCICValue4, acSS7SigTranRoutingContextSpc=acSS7SigTranRoutingContextSpc, acSS7RedundantSNALCAPOPC=acSS7RedundantSNALCAPOPC, acSS7RouteSetRouteAction=acSS7RouteSetRouteAction)
mibBuilder.exportSymbols("AC-SS7-MIB", acSS7MTP2AttribAERMNormalThreshold=acSS7MTP2AttribAERMNormalThreshold, acSS7SigTran=acSS7SigTran, acSS7SigTranIFGroupSCTPLocalPort=acSS7SigTranIFGroupSCTPLocalPort, acSS7LinkSetLksetIndex=acSS7LinkSetLksetIndex, acSS7SignalingNodeTimersT29ANSI=acSS7SignalingNodeTimersT29ANSI, acSS7SigTranIFGroupHBTimer=acSS7SigTranIFGroupHBTimer, acSS7SigTranIFGroupRoutingContextValue=acSS7SigTranIFGroupRoutingContextValue, acSS7SignalingNodeTupApp=acSS7SignalingNodeTupApp, acSS7SigTranRoutingContextSi4=acSS7SigTranRoutingContextSi4, acSS7ConstantsNumberOfLinksPerLinkSet=acSS7ConstantsNumberOfLinksPerLinkSet, acSS7MTP2AttribPcrN2=acSS7MTP2AttribPcrN2, acSS7LinkSetRowStatus=acSS7LinkSetRowStatus, acSS7LinkTNLWaitStartCompTimer=acSS7LinkTNLWaitStartCompTimer, acSS7SignalingNodeTimersT16=acSS7SignalingNodeTimersT16, acSS7SignalingNodeOperState=acSS7SignalingNodeOperState, acSS7LinkSetLinkRowStatus=acSS7LinkSetLinkRowStatus, acSS7SigTranIFGroupRecovTimer=acSS7SigTranIFGroupRecovTimer, acSS7LinkSetLinkSNIndex=acSS7LinkSetLinkSNIndex, acSS7LinkSetTimersT13=acSS7LinkSetTimersT13, acSS7LinkSetDPC=acSS7LinkSetDPC, acSS7MTP2AttribLSSULength=acSS7MTP2AttribLSSULength, acSS7MTP2AttribIsUsed=acSS7MTP2AttribIsUsed, acSS7SigTranRoutingContextSnIdx=acSS7SigTranRoutingContextSnIdx, acSS7RedundancySyncAllBoards=acSS7RedundancySyncAllBoards, acSS7SignalingNodeTimersT25ANSI=acSS7SignalingNodeTimersT25ANSI, acSS7MTP2AttribErrorCorectionMethod=acSS7MTP2AttribErrorCorectionMethod, acSS7SignalingNodeMtcBusy=acSS7SignalingNodeMtcBusy, acSS7LinkSetLinksAltMask=acSS7LinkSetLinksAltMask, acSS7LinkCommonMonSuFilterRequest=acSS7LinkCommonMonSuFilterRequest, acSS7SigTranRoutingContextSi3=acSS7SigTranRoutingContextSi3, acSS7SigTranIFIDValue=acSS7SigTranIFIDValue, acSS7SignalingNodeTimersIdx=acSS7SignalingNodeTimersIdx, acSS7LinkSetActionResult=acSS7LinkSetActionResult, acSS7RouteSetActionResult=acSS7RouteSetActionResult, acSS7SigTranIFIDRowStatus=acSS7SigTranIFIDRowStatus, acSS7SigTranIFGroupDestIp=acSS7SigTranIFGroupDestIp, acSS7RedundancyCrossLinkTraceAll=acSS7RedundancyCrossLinkTraceAll, acSS7RouteSetRouteLinkSetNo=acSS7RouteSetRouteLinkSetNo, acSS7RouteSetOperState=acSS7RouteSetOperState, acSS7SignalingNodeTimersIsUsed=acSS7SignalingNodeTimersIsUsed, acSS7RouteSetRouteMask=acSS7RouteSetRouteMask, acSS7APCActionResult=acSS7APCActionResult, acSS7Redundancy=acSS7Redundancy, acSS7LinkCommonTraceLevel=acSS7LinkCommonTraceLevel, acSS7RedundancyMode=acSS7RedundancyMode, acSS7LinkTDMTable=acSS7LinkTDMTable, acSS7LinkSetTable=acSS7LinkSetTable, acSS7SigTranIFGroupSgMgc=acSS7SigTranIFGroupSgMgc, acSS7MTP2AttribRowStatus=acSS7MTP2AttribRowStatus, acSS7LinkSetLinkTable=acSS7LinkSetLinkTable, acSS7SigTranRoutingContextRowStatus=acSS7SigTranRoutingContextRowStatus, acSS7SigTranIFGroupSignalingLayer=acSS7SigTranIFGroupSignalingLayer, acSS7LinkSetTimersT2=acSS7LinkSetTimersT2, acSS7M3UAStaticRoutingEntry=acSS7M3UAStaticRoutingEntry, acSS7LinkATMSAALLinkInterfaceNum=acSS7LinkATMSAALLinkInterfaceNum, acSS7LinkCommonL2TypeSelector=acSS7LinkCommonL2TypeSelector, acSS7SigTranIFIDNai=acSS7SigTranIFIDNai, acSS7LinkSetEntry=acSS7LinkSetEntry, acSS7SignalingNodeIndex=acSS7SignalingNodeIndex, acSS7SigTranIFGroupNetworkAppearance=acSS7SigTranIFGroupNetworkAppearance, acSS7LinkATMTable=acSS7LinkATMTable, acSS7M3UAStaticRoutingLowerCICValue2=acSS7M3UAStaticRoutingLowerCICValue2, acSS7M3UAStaticRoutingUpperCICValue1=acSS7M3UAStaticRoutingUpperCICValue1, acSS7RouteSetRouteTable=acSS7RouteSetRouteTable, acSS7LinkSetTimersT7=acSS7LinkSetTimersT7, acSS7M3UAStaticRoutingOPC3=acSS7M3UAStaticRoutingOPC3, acSS7MTP2AttribTimerT7=acSS7MTP2AttribTimerT7, acSS7LinkSetMtcBusyState=acSS7LinkSetMtcBusyState, acSS7RedundancyBoardNum=acSS7RedundancyBoardNum)
