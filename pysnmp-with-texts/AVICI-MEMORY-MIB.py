#
# PySNMP MIB module AVICI-MEMORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-MEMORY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:32:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
aviciSysInventoryId, = mibBuilder.importSymbols("AVICI-SYSTEM-MIB", "aviciSysInventoryId")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter32, iso, ModuleIdentity, Bits, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter64, Gauge32, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "iso", "ModuleIdentity", "Bits", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter64", "Gauge32", "MibIdentifier", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aviciMemoryMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 6))
aviciMemoryMIB.setRevisions(('0009-07-12 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aviciMemoryMIB.setRevisionsDescriptions(('Changed mib arcs.',))
if mibBuilder.loadTexts: aviciMemoryMIB.setLastUpdated('000907121500Z')
if mibBuilder.loadTexts: aviciMemoryMIB.setOrganization('Avici Systems Inc')
if mibBuilder.loadTexts: aviciMemoryMIB.setContactInfo(' Avici Systems, Inc. 101 Billerica Avenue North Billerica, MA 01862-1256 (978) 964-2000 (978) 964-2100 (fax) snmp@avici.com')
if mibBuilder.loadTexts: aviciMemoryMIB.setDescription('Initial version of the MIB module for Avici memory.')
aviciMemoryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1))
aviciPlatformMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1), )
if mibBuilder.loadTexts: aviciPlatformMemoryTable.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryTable.setDescription('This table contains memory attributes for a platform - server, module, bay')
aviciPlatformMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1), ).setIndexNames((0, "AVICI-SYSTEM-MIB", "aviciSysInventoryId"))
if mibBuilder.loadTexts: aviciPlatformMemoryEntry.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryEntry.setDescription('An entry containing global memory attributes for a platform')
aviciPlatformMemoryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryTotal.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryTotal.setDescription('The total amount of memory in bytes on this platform.')
aviciPlatformMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryUsed.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryUsed.setDescription('The amount of memory in bytes allocated on this platform.')
aviciPlatformMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryFree.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryFree.setDescription('The amount of memory in bytes available for use on this platform.')
aviciPlatformMemoryFreePages = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryFreePages.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryFreePages.setDescription('The amount of memory in pages available for use on this platform.')
aviciPlatformMemoryPageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryPageSize.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryPageSize.setDescription('The size of a page in bytes on this platform.')
aviciPlatformMemoryLargestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 6, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciPlatformMemoryLargestFree.setStatus('current')
if mibBuilder.loadTexts: aviciPlatformMemoryLargestFree.setDescription('The amount of memory in bytes of the largest block of memory available for use on this platform.')
aviciMemoryMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 6, 2))
aviciMemoryMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 6, 2, 1))
aviciMemoryMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 6, 2, 2))
aviciMemoryMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 6, 2, 1, 1)).setObjects(("AVICI-MEMORY-MIB", "aviciMemoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciMemoryMIBCompliance = aviciMemoryMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: aviciMemoryMIBCompliance.setDescription('The compliance statement for aviciMemory.')
aviciMemoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 6, 2, 2, 1)).setObjects(("AVICI-MEMORY-MIB", "aviciPlatformMemoryTotal"), ("AVICI-MEMORY-MIB", "aviciPlatformMemoryUsed"), ("AVICI-MEMORY-MIB", "aviciPlatformMemoryFree"), ("AVICI-MEMORY-MIB", "aviciPlatformMemoryFreePages"), ("AVICI-MEMORY-MIB", "aviciPlatformMemoryPageSize"), ("AVICI-MEMORY-MIB", "aviciPlatformMemoryLargestFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciMemoryGroup = aviciMemoryGroup.setStatus('current')
if mibBuilder.loadTexts: aviciMemoryGroup.setDescription('Objects for memory statistics.')
mibBuilder.exportSymbols("AVICI-MEMORY-MIB", aviciMemoryMIBCompliance=aviciMemoryMIBCompliance, aviciPlatformMemoryPageSize=aviciPlatformMemoryPageSize, aviciMemoryMIBGroups=aviciMemoryMIBGroups, PYSNMP_MODULE_ID=aviciMemoryMIB, aviciPlatformMemoryEntry=aviciPlatformMemoryEntry, aviciMemoryObjects=aviciMemoryObjects, aviciMemoryMIB=aviciMemoryMIB, aviciPlatformMemoryTable=aviciPlatformMemoryTable, aviciPlatformMemoryUsed=aviciPlatformMemoryUsed, aviciPlatformMemoryLargestFree=aviciPlatformMemoryLargestFree, aviciMemoryMIBCompliances=aviciMemoryMIBCompliances, aviciMemoryMIBConformance=aviciMemoryMIBConformance, aviciMemoryGroup=aviciMemoryGroup, aviciPlatformMemoryTotal=aviciPlatformMemoryTotal, aviciPlatformMemoryFreePages=aviciPlatformMemoryFreePages, aviciPlatformMemoryFree=aviciPlatformMemoryFree)
