#
# PySNMP MIB module ELTEX-L2-TUNNEL-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-L2-TUNNEL-CONFIG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:00:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
QosLayer2Cos, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "QosLayer2Cos")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Counter32, Bits, iso, NotificationType, ObjectIdentity, ModuleIdentity, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Counter32", "Bits", "iso", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Integer32")
MacAddress, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "DisplayString", "TextualConvention")
eltexL2TunnelConfig = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 37))
if mibBuilder.loadTexts: eltexL2TunnelConfig.setLastUpdated('201509080000Z')
if mibBuilder.loadTexts: eltexL2TunnelConfig.setOrganization('Eltex Enterprise Co, Ltd.')
if mibBuilder.loadTexts: eltexL2TunnelConfig.setContactInfo('www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltexL2TunnelConfig.setDescription('This MIB module is for layer 2 tunneling related configurations on a device. Tunneling allows separate local networks to be considered as a single VLAN. These separate networks are connected via an ISP, which will tunnel the packets from one network to another, making it appear as if the two networks are actually just one.')
eltexLtcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 1))
eltexLtcGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 1, 1))
eltexLtcTunneledProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 1, 2))
eltexLtcTunnelThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3))
eltexLtcTunnelStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4))
class EltexLtcTunneledProtocolIndex(TextualConvention, Integer32):
    description = 'A tunneled protocol of an interface. Supported value is stp(1).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("stp", 1))

eltexLtcNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 37, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: eltexLtcNotificationEnable.setDescription('This object indicates whether the system will generate the eltexLtcTunnelDropThresholdExceeded and eltexLtcTunnelShutdownThresholdExceeded notifications.')
eltexLtcTunnelMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 35265, 37, 1, 1, 2), MacAddress().clone(hexValue="0100EEEE0000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcTunnelMacAddress.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelMacAddress.setDescription('The destination MAC address that replaces the original destination MAC address of tunneled frames.')
eltexLtcTunneledProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 37, 1, 2, 1), )
if mibBuilder.loadTexts: eltexLtcTunneledProtocolTable.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunneledProtocolTable.setDescription('This table contains information about the protocols being tunneled. Only tunneled protocol filtering capable interfaces are shown.')
eltexLtcTunneledProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 37, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltexLtcTunneledProtocolEntry.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunneledProtocolEntry.setDescription('Information about the protocols being tunneled. Only tunneled protocol filtering capable interfaces are shown.')
eltexLtcTunneledProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("stp", 0), ("workaround", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcTunneledProtocolType.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunneledProtocolType.setDescription("Indicates tunneled protocol of the interface. If a BIT is set, then the value of the corresponding protocol is tunneled. Specifically, if the 'stp(0)' BIT is set, then the Spanning Tree Protocol PDU is tunneled. At this moment, there are no other supported protocols. If the bit for a given protocol is set for an interface, then the statistics for that interface and protocol will start to be monitored.")
eltexLtcTunnelCos = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 2, 1, 1, 2), QosLayer2Cos()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcTunnelCos.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelCos.setDescription('Specifies the user priority of the tunneled PDUs for the interface.')
eltexLtcTunnelThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3, 1), )
if mibBuilder.loadTexts: eltexLtcTunnelThresholdTable.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelThresholdTable.setDescription('This table contains information about the thresholds for protocol tunneling. Only tunneled protocol filtering capable interfaces are shown. The objects will be on a per interface, per protocol basis.')
eltexLtcTunnelThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ELTEX-L2-TUNNEL-CONFIG-MIB", "eltexLtcTunnelThresholdProtocolIndex"))
if mibBuilder.loadTexts: eltexLtcTunnelThresholdEntry.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelThresholdEntry.setDescription('Information about the thresholds for protocol tunneling. Only tunneled protocol filtering capable interfaces are shown. The entries will be on a per interface, per protocol basis')
eltexLtcTunnelThresholdProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3, 1, 1, 1), EltexLtcTunneledProtocolIndex())
if mibBuilder.loadTexts: eltexLtcTunnelThresholdProtocolIndex.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelThresholdProtocolIndex.setDescription('A tunneled protocol of an interface.')
eltexLtcTunnelDropThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3, 1, 1, 2), Unsigned32()).setUnits('PDUs/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcTunnelDropThreshold.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelDropThreshold.setDescription('The drop threshold on an interface for a given protocol. After reaching this drop threshold, the interface will start dropping PDUs for the given protocol. This value cannot be greater than the value of eltexLtcTunnelShutdownThreshold. A value of 0 indicates that no limit is set.')
eltexLtcTunnelShutdownThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 3, 1, 1, 3), Unsigned32()).setUnits('PDUs/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexLtcTunnelShutdownThreshold.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelShutdownThreshold.setDescription('The shutdown threshold on an interface for a given protocol. After reaching the shutdown threshold, the interface will shutdown for the given protocol. This value cannot be less than the value of eltexLtcTunnelDropThreshold. A value of 0 indicates that no limit is set.')
eltexLtcTunnelStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1), )
if mibBuilder.loadTexts: eltexLtcTunnelStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelStatisticsTable.setDescription('This table contains protocol tunneling statistics on the interface.')
eltexLtcTunnelStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ELTEX-L2-TUNNEL-CONFIG-MIB", "eltexLtcTunneledProtocolIndex"))
if mibBuilder.loadTexts: eltexLtcTunnelStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelStatisticsEntry.setDescription('Protocol tunneling statistics on the interface.')
eltexLtcTunneledProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1, 1, 1), EltexLtcTunneledProtocolIndex())
if mibBuilder.loadTexts: eltexLtcTunneledProtocolIndex.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunneledProtocolIndex.setDescription('A tunneled protocol of an interface.')
eltexLtcTunnelEncapStats = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1, 1, 2), Counter32()).setUnits('encapsulated PDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexLtcTunnelEncapStats.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelEncapStats.setDescription('The tunneled PDU encapsulation statistics of an interface. These statistics cover the number of tunneled ingress PDUs.')
eltexLtcTunnelDecapStats = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1, 1, 3), Counter32()).setUnits('de-encapsulated PDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexLtcTunnelDecapStats.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelDecapStats.setDescription('The tunneled PDU de-encapsulation statistics of an interface. These statistics cover the number of tunneled egress PDUs.')
eltexLtcTunnelDropStats = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 37, 1, 4, 1, 1, 4), Counter32()).setUnits('PDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexLtcTunnelDropStats.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelDropStats.setDescription('The number of PDUs dropped on an interface for a given protocol. The PDUs will be dropped when the eltexLtcTunnelDropThreshold is reached.')
eltexLtcMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 2))
eltexLtcMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 37, 2, 0))
eltexLtcTunnelDropThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 35265, 37, 2, 0, 1)).setObjects(("ELTEX-L2-TUNNEL-CONFIG-MIB", "eltexLtcTunnelDropThreshold"))
if mibBuilder.loadTexts: eltexLtcTunnelDropThresholdExceeded.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelDropThresholdExceeded.setDescription('This notification is generated when the eltexLtcTunnelDropThreshold has been exceeded.')
eltexLtcTunnelShutdownThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 35265, 37, 2, 0, 2)).setObjects(("ELTEX-L2-TUNNEL-CONFIG-MIB", "eltexLtcTunnelShutdownThreshold"))
if mibBuilder.loadTexts: eltexLtcTunnelShutdownThresholdExceeded.setStatus('current')
if mibBuilder.loadTexts: eltexLtcTunnelShutdownThresholdExceeded.setDescription('This notification is generated when the eltexLtcTunnelShutdownThreshold has been exceeded.')
mibBuilder.exportSymbols("ELTEX-L2-TUNNEL-CONFIG-MIB", EltexLtcTunneledProtocolIndex=EltexLtcTunneledProtocolIndex, eltexL2TunnelConfig=eltexL2TunnelConfig, eltexLtcTunnelStatistics=eltexLtcTunnelStatistics, eltexLtcTunnelEncapStats=eltexLtcTunnelEncapStats, eltexLtcTunneledProtocol=eltexLtcTunneledProtocol, eltexLtcTunnelDecapStats=eltexLtcTunnelDecapStats, PYSNMP_MODULE_ID=eltexL2TunnelConfig, eltexLtcTunnelDropStats=eltexLtcTunnelDropStats, eltexLtcMIBNotifications=eltexLtcMIBNotifications, eltexLtcTunneledProtocolType=eltexLtcTunneledProtocolType, eltexLtcTunnelStatisticsTable=eltexLtcTunnelStatisticsTable, eltexLtcTunnelStatisticsEntry=eltexLtcTunnelStatisticsEntry, eltexLtcTunneledProtocolEntry=eltexLtcTunneledProtocolEntry, eltexLtcTunnelThresholdTable=eltexLtcTunnelThresholdTable, eltexLtcTunneledProtocolIndex=eltexLtcTunneledProtocolIndex, eltexLtcTunnelThresholdEntry=eltexLtcTunnelThresholdEntry, eltexLtcMIBNotificationsPrefix=eltexLtcMIBNotificationsPrefix, eltexLtcTunnelShutdownThreshold=eltexLtcTunnelShutdownThreshold, eltexLtcTunnelDropThreshold=eltexLtcTunnelDropThreshold, eltexLtcTunnelCos=eltexLtcTunnelCos, eltexLtcTunnelDropThresholdExceeded=eltexLtcTunnelDropThresholdExceeded, eltexLtcTunnelThresholdProtocolIndex=eltexLtcTunnelThresholdProtocolIndex, eltexLtcTunnelThreshold=eltexLtcTunnelThreshold, eltexLtcTunnelShutdownThresholdExceeded=eltexLtcTunnelShutdownThresholdExceeded, eltexLtcTunneledProtocolTable=eltexLtcTunneledProtocolTable, eltexLtcGlobal=eltexLtcGlobal, eltexLtcNotificationEnable=eltexLtcNotificationEnable, eltexLtcTunnelMacAddress=eltexLtcTunnelMacAddress, eltexLtcMIBObjects=eltexLtcMIBObjects)
