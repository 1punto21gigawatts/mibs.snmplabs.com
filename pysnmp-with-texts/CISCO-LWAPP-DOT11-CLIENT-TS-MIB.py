#
# PySNMP MIB module CISCO-LWAPP-DOT11-CLIENT-TS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOT11-CLIENT-TS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:05:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
cldcClientMacAddress, = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Gauge32, Bits, Counter64, ObjectIdentity, Integer32, iso, Unsigned32, TimeTicks, NotificationType, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Gauge32", "Bits", "Counter64", "ObjectIdentity", "Integer32", "iso", "Unsigned32", "TimeTicks", "NotificationType", "ModuleIdentity", "MibIdentifier")
TruthValue, DisplayString, TimeStamp, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TimeStamp", "RowStatus", "TextualConvention")
ciscoLwappDot11ClientTsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 622))
ciscoLwappDot11ClientTsMIB.setRevisions(('2012-06-11 00:00', '2012-01-25 00:00', '2007-03-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIB.setRevisionsDescriptions(('Added new bit mobility to cldctWatchListModuleList and cldctClientInfoModule.', 'Added the following new object to cldctClientInfoTable. cldctClientInfoMessageType and cldctClientInfoMessageSubType Added two new bits voiceQoS and misc to cldctWatchListModuleList and cldctClientInfoModule. Added a new supplement group ciscoLwappDot11ClientTsStatusSupGroupRev1. Added new compliance ciscoLwappDot11ClientTsMIBComplianceRev1 which deprecates ciscoLwappDot11ClientTsMIBCompliance.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIB.setLastUpdated('201206110000Z')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIB.setContactInfo('Cisco Systems, Customer Service Postal: 170 West Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS Email: cs-wnbu-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIB.setDescription("This MIB is intended to be implemented on all those devices operating as Central controllers, that terminate the Light Weight Access Point Protocol tunnel from Cisco Light-weight LWAPP Access Points. This MIB provides information about troubleshooting 802.11 clients during their association with the controller. The clients that need to be monitored are added by the controller to a watchlist. Once added the controller will start storing the messages related to that client. These messages are useful to troubleshoot the reasons for failures during assoication. The relationship between CC and the LWAPP APs can be depicted as followshe LWAPP tunnel exists between the controller and the APs. The MNs communicate with the APs through the protocol defined by the 802.11 standard. LWAPP APs, upon bootup, discover and join one of the controllers and the controller pushes the configuration, that includes the WLAN parameters, to the LWAPP APs. The APs then encapsulate all the 802.11 frames from wireless clients inside LWAPP frames and forward the LWAPP frames to the controller. GLOSSARY Access Point ( AP ) An entity that contains an 802.11 medium access control ( MAC ) and physical layer ( PHY ) interface and provides access to the distribution services via the wireless medium for associated clients. LWAPP APs encapsulate all the 802.11 frames in LWAPP frames and sends them to the controller to which it is logically connected. Central Controller ( CC ) The central entity that terminates the LWAPP protocol tunnel from the LWAPP APs. Throughout this MIB, this entity also referred to as 'controller'. Cisco Compatible eXtensions (CCX) Wireless LAN Access Points (APs) manufactured by Cisco Systems have features and capabilities beyond those in related standards (e.g., IEEE 802.11 suite of standards, Wi-Fi recommendations by WECA, 802.1X security suite, etc). A number of features provide higher performance. For example, Cisco AP transmits a specific Information Element, which the clients adapt to for enhanced performance. Similarly, a number of features are implemented by means of proprietary Information Elements, which Cisco clients use in specific ways to carry out tasks above and beyond the standard. Other examples of feature categories are roaming and power saving. Light Weight Access Point Protocol ( LWAPP ) This is a generic protocol that defines the communication between the Access Points and the Central Controller. Mobile Node ( MN ) A roaming 802.11 wireless device in a wireless network associated with an access point. The terms 'Mobile node' and 'client' are used interchangeably. Radio Management (RM) This term refers to managing the 802.11 radio environment to provide the best quality service to to the 802.11 wireless clients. Service Set Identifier ( SSID ) SSID is a unique identifier that APs and clients use to identify with each other. SSID is a simple means of access control and is not for security. The SSID can be any alphanumeric entry up to 32 characters. REFERENCE [1] Wireless LAN Medium Access Control ( MAC ) and Physical Layer ( PHY ) Specifications [2] Draft-obara-capwap-lwapp-00.txt, IETF Light Weight Access Point Protocol")
ciscoLwappDot11ClientTsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 0))
ciscoLwappDot11ClientTsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 1))
ciscoLwappDot11ClientTsMIBConfirm = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 2))
cldctClientInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1))
cldctWatchList = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2))
cldctLastPemStateInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 3))
cldctWatchListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2, 1), )
if mibBuilder.loadTexts: cldctWatchListTable.setStatus('current')
if mibBuilder.loadTexts: cldctWatchListTable.setDescription("This table represents the clients which are being monitored by the controller during association. The types of clients that can be monitored are CCX, non-CCX and WGB clients. Entries are created by explicit management action by the user. A row is created by specifying the cldctWatchListModuleList, cldctWatchListTimeRemaining and cldcClientMacAddress with the 'RowStatus' changed to createAndGo. This indicates that the request is made to start storing the the messages on the controller for the client identified by cldcClientMacAddress. The added row is deleted by setting the corresponding instance of the RowStatus object to 'destroy'. In case if the agent finds that the time duration represented by cldctWatchListTimeRemaining has elapsed since the addtion of the client to the watchlist, it proceeds to delete the row automatically, if the row exists at that point of time. The messages stored on the controller can be obtained from cldctClientInfoTable.")
cldctWatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldctWatchListEntry.setStatus('current')
if mibBuilder.loadTexts: cldctWatchListEntry.setDescription('Each entry in this table represents one instance of the client troubleshooting initiated by the user through a network manager.')
cldctWatchListModuleList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("dot11", 0), ("dot1x", 1), ("pem", 2), ("dhcp", 3), ("aaa", 4), ("voiceQoS", 5), ("misc", 6), ("mobility", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldctWatchListModuleList.setStatus('current')
if mibBuilder.loadTexts: cldctWatchListModuleList.setDescription("This object is used to specify the list of modules per client whose messages will be stored by the controller. Any combination of the modules can be set. 'dot11' - This value represents the module in controller responsible for handling the 802.11 messages. 'dot1x' - This value represents the module responsible for handling the extensible authentication protocol related messages. 'pem' - This value represents the module responsible for handling the policy enforcement module. 'dhcp' - This value represents the module responsible for handling dhcp related messages. 'aaa' - This value represents the module responsible for handling radius related messages. 'voiceQoS' - This value represents the module responsible for handling voice/Qos module related messages. 'misc' - This value represents the module responsible for handling miscellaneous module messages (eg: roam history). 'mobility' - This value represents the module responsible for handling mobility related messages.")
cldctWatchListTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 1000)).clone(10)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldctWatchListTimeRemaining.setStatus('current')
if mibBuilder.loadTexts: cldctWatchListTimeRemaining.setDescription('This object is used to specify the time after which the client will be automatically removed from the watchlist.')
cldctWatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldctWatchListRowStatus.setStatus('current')
if mibBuilder.loadTexts: cldctWatchListRowStatus.setDescription('This object represents the status of a row and is used to create and delete specific instances of rows in this table.')
cldctClientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1), )
if mibBuilder.loadTexts: cldctClientInfoTable.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoTable.setDescription("Ths table populates the messages generated during client's association with the controller. Entries are automatically addded by the controller when the client for the cldctWatchListTable associates with the controller. Each row represents a message generated on the controller for the client on the watch list. Entries are automatically removed by the controller when the client is removed from the watchlist. The number of message per client is limited to the number specified by the cldctClientInfoMaxEntries object. When the maximum number of entries is reached the older entries will be deleted.")
cldctClientInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoIndex"))
if mibBuilder.loadTexts: cldctClientInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoEntry.setDescription("Each entry in this table represents the messages generated on the controller during the client's association with it.")
cldctClientInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cldctClientInfoIndex.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoIndex.setDescription('This object uniquely identifies the sequence number of the message for a watch listed client.')
cldctClientInfoGeneratedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoGeneratedTime.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoGeneratedTime.setDescription('This object represents the absolute time when entry was added to table.')
cldctClientInfoLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("phase", 1), ("state", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoLevel.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoLevel.setDescription("This object indicates the types of messages generated by the watch listed client. There can be three types of messages. 'phase' - This value represents phase transition of a wireless client. The various phases include 802.11, 8021x, dhcp etc. 'state' - This value represents a state transition of a wireless client. The states could be association request, authentication request etc. for 802.11 phase. 'normal' - This value represents an informational message generated during 802.11 client's association to the controller.")
cldctClientInfoSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("info", 1), ("error", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoSeverity.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoSeverity.setDescription("This object indicates severity of the information of the client trouble shooting messages. This object holds good only if the corresponding cldctClientInfoLevel is set to 'normal'. 'info' - This is an information message. 'error' - This is an error message. 'critical' - This is a critical message.")
cldctClientInfoModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("dot11", 1), ("dot1x", 2), ("pem", 3), ("dhcp", 4), ("aaa", 5), ("voiceQoS", 6), ("misc", 7), ("mobility", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoModule.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoModule.setDescription("This object indicates the module which generated the message. 'dot11' - This value represents the module in controller responsible for handling the 802.11 messages. 'dot1x' - This value represents the module responsible for handling the extensible authentication protocol. 'pem' - This value represents the module responsible for handling the policy enforcement module. 'dhcp' - This value represents the module responsible for handling dhcp related messages. 'aaa' - This value represents the module responsible for handling radius related messages. 'voiceQoS' - This value represents the module responsible for handling voice/Qos module related messages. 'misc' - This value represents the module responsible for handling miscellaneous module messages. (eg: roam history). 'mobility' - This value represents the module responsible for handling mobility related messages.")
cldctClientInfoResultCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoResultCode.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoResultCode.setDescription("This object indicates if this message is an informational message or an error message. This object holds good only if the corresponding cldctClientInfoLevel object has a value of 'phase' or 'state'. A value of true indicates that this message is an informational message. A value of false indicates that this message is an error message.")
cldctClientInfoMsgString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoMsgString.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoMsgString.setDescription("This object represents the variable part of the message generated by the controller for this client. For example if the message to be shown to the user is 'Client got ip address 10.52.43.54', the '10.52.43.54' is a variable part which will be different for different clients.")
cldctClientInfoMessageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoMessageType.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoMessageType.setDescription('This object represents the type of the messsage generated by the controller for this client.')
cldctClientInfoMessageSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctClientInfoMessageSubType.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoMessageSubType.setDescription('This objects represents sub-type of the messsage generated by the controller for this client.')
cldctClientInfoMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 1, 2), Unsigned32().clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldctClientInfoMaxEntries.setStatus('current')
if mibBuilder.loadTexts: cldctClientInfoMaxEntries.setDescription('This object represents the maximum number of entries per client(cldcClientMacAddress) in the cldctClientInfoTable.')
cldctLastPemStateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 3, 1), )
if mibBuilder.loadTexts: cldctLastPemStateTable.setStatus('current')
if mibBuilder.loadTexts: cldctLastPemStateTable.setDescription("This table stores the last policy enforcement state of client in the controller. The state here is represented as a string. For example the state can be 'RUN','WEBAUTH_REQUIRED' etc. Entries are automaticaly added to this table when a 802.11 client associates to a controller. Entries in this table are automaticaly deleted by the controller when the 802.11 client disassociates from the controller.")
cldctLastPemStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldctLastPemStateEntry.setStatus('current')
if mibBuilder.loadTexts: cldctLastPemStateEntry.setDescription('Each entry represents a conceptual row in this table. An entry represents the last PEM state report by a wireless client.')
cldctLastPemState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 622, 1, 3, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldctLastPemState.setStatus('current')
if mibBuilder.loadTexts: cldctLastPemState.setDescription('This object represents the last policy enforcement manager state of the client in controller.')
ciscoLwappDot11ClientTsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 1))
ciscoLwappDot11ClientTsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 2))
ciscoLwappDot11ClientTsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 1, 1)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "ciscoLwappDot11ClientTsConfigGroup"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "ciscoLwappDot11ClientTsStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientTsMIBCompliance = ciscoLwappDot11ClientTsMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappDot11ClientTsMIB module.')
ciscoLwappDot11ClientTsMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 1, 2)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "ciscoLwappDot11ClientTsConfigGroup"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "ciscoLwappDot11ClientTsStatusGroup"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "ciscoLwappDot11ClientTsStatusSupGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientTsMIBComplianceRev1 = ciscoLwappDot11ClientTsMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsMIBComplianceRev1.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappDot11ClientTsMIB module.')
ciscoLwappDot11ClientTsConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 2, 1)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctWatchListModuleList"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctWatchListTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientTsConfigGroup = ciscoLwappDot11ClientTsConfigGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsConfigGroup.setDescription('This is a collection of objects which can be configured per 802.11 clients for the controller to start monitoring them.')
ciscoLwappDot11ClientTsStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 2, 2)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoGeneratedTime"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoLevel"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoSeverity"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoModule"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoResultCode"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoMsgString"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctWatchListRowStatus"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoMaxEntries"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctLastPemState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientTsStatusGroup = ciscoLwappDot11ClientTsStatusGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsStatusGroup.setDescription('This is a collection of objects which represent the information of various watch listed clients present on the controller. The information includes the various states and phases that the client goes through while getting associated with the controller.')
ciscoLwappDot11ClientTsStatusSupGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 622, 2, 2, 3)).setObjects(("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoMessageType"), ("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", "cldctClientInfoMessageSubType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDot11ClientTsStatusSupGroupRev1 = ciscoLwappDot11ClientTsStatusSupGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappDot11ClientTsStatusSupGroupRev1.setDescription('This is a collection of objects which represent the information on the types and sub-types of messages generated by the controller for the clients.')
mibBuilder.exportSymbols("CISCO-LWAPP-DOT11-CLIENT-TS-MIB", ciscoLwappDot11ClientTsConfigGroup=ciscoLwappDot11ClientTsConfigGroup, cldctClientInfoGeneratedTime=cldctClientInfoGeneratedTime, PYSNMP_MODULE_ID=ciscoLwappDot11ClientTsMIB, cldctWatchList=cldctWatchList, cldctClientInfoMsgString=cldctClientInfoMsgString, cldctClientInfoMaxEntries=cldctClientInfoMaxEntries, cldctClientInfoTable=cldctClientInfoTable, ciscoLwappDot11ClientTsMIBComplianceRev1=ciscoLwappDot11ClientTsMIBComplianceRev1, cldctLastPemStateInfo=cldctLastPemStateInfo, cldctClientInfoModule=cldctClientInfoModule, cldctWatchListModuleList=cldctWatchListModuleList, cldctClientInfoIndex=cldctClientInfoIndex, cldctClientInfoSeverity=cldctClientInfoSeverity, cldctLastPemStateEntry=cldctLastPemStateEntry, ciscoLwappDot11ClientTsMIBCompliances=ciscoLwappDot11ClientTsMIBCompliances, cldctClientInfoLevel=cldctClientInfoLevel, ciscoLwappDot11ClientTsMIBGroups=ciscoLwappDot11ClientTsMIBGroups, cldctLastPemStateTable=cldctLastPemStateTable, ciscoLwappDot11ClientTsMIB=ciscoLwappDot11ClientTsMIB, ciscoLwappDot11ClientTsMIBConfirm=ciscoLwappDot11ClientTsMIBConfirm, cldctLastPemState=cldctLastPemState, ciscoLwappDot11ClientTsMIBCompliance=ciscoLwappDot11ClientTsMIBCompliance, cldctWatchListTimeRemaining=cldctWatchListTimeRemaining, cldctClientInfo=cldctClientInfo, cldctClientInfoEntry=cldctClientInfoEntry, cldctWatchListEntry=cldctWatchListEntry, cldctClientInfoResultCode=cldctClientInfoResultCode, ciscoLwappDot11ClientTsStatusSupGroupRev1=ciscoLwappDot11ClientTsStatusSupGroupRev1, cldctClientInfoMessageSubType=cldctClientInfoMessageSubType, ciscoLwappDot11ClientTsStatusGroup=ciscoLwappDot11ClientTsStatusGroup, cldctWatchListRowStatus=cldctWatchListRowStatus, cldctClientInfoMessageType=cldctClientInfoMessageType, ciscoLwappDot11ClientTsMIBObjects=ciscoLwappDot11ClientTsMIBObjects, ciscoLwappDot11ClientTsMIBNotifs=ciscoLwappDot11ClientTsMIBNotifs, cldctWatchListTable=cldctWatchListTable)
