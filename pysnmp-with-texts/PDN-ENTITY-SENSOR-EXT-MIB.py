#
# PySNMP MIB module PDN-ENTITY-SENSOR-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-ENTITY-SENSOR-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
entPhySensorEntry, entPhySensorValue, EntitySensorValue = mibBuilder.importSymbols("ENTITY-SENSOR-MIB", "entPhySensorEntry", "entPhySensorValue", "EntitySensorValue")
pdn_common, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-common")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Counter32, NotificationType, iso, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ObjectIdentity, TimeTicks, MibIdentifier, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "iso", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Integer32", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pdnEntitySensorExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45))
pdnEntitySensorExtMIB.setRevisions(('2003-06-06 00:00', '2003-04-24 00:00', '2003-04-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnEntitySensorExtMIB.setRevisionsDescriptions(('Removed pdnEntPhySensorExtIndex. This object was originally added to be one of the objects each notification. However, this is redundent in that each notification object has the index as part of its instance. So the object is not needed.', 'Change the conformance/compliance section to be consistent with standard MIBs.', 'Initial release.',))
if mibBuilder.loadTexts: pdnEntitySensorExtMIB.setLastUpdated('200306060000Z')
if mibBuilder.loadTexts: pdnEntitySensorExtMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnEntitySensorExtMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editors Jesus Pinto Clay Sikes')
if mibBuilder.loadTexts: pdnEntitySensorExtMIB.setDescription('This MIB module is a supplement to the ENTITY-SENSOR-MIB, RFC 3433.')
pdnEntitySensorExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 0))
pdnEntitySensorExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1))
pdnEntitySensorExtAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 2))
pdnEntitySensorExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3))
pdnEntPhySensorExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1), )
if mibBuilder.loadTexts: pdnEntPhySensorExtTable.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtTable.setDescription('This table extends the entPhySensorTable.')
pdnEntPhySensorExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1, 1), )
entPhySensorEntry.registerAugmentions(("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtEntry"))
pdnEntPhySensorExtEntry.setIndexNames(*entPhySensorEntry.getIndexNames())
if mibBuilder.loadTexts: pdnEntPhySensorExtEntry.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtEntry.setDescription('An extended entry in the entPhySensorTable.')
pdnEntPhySensorExtNotificationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("thresholdExceeded", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnEntPhySensorExtNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtNotificationEnable.setDescription('Provides that ability to enable and disable notifications relative to objects in this table. When this bit is set, pdnEntPhySensorExtThesholdExceededSet and pdnEntPhySensorExtThesholdExceededCleared notifications should be generated. When this bit is reset, pdnEntPhySensorExtThesholdExceededSet, and pdnEntPhySensorExtThesholdExceededCleared notifications should be not be generated.')
pdnEntPhySensorExtUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1, 1, 2), EntitySensorValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnEntPhySensorExtUpperThreshold.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtUpperThreshold.setDescription("This object sets the upper limit of a sensor's threshold. When the value of entPhySensorValue becomes greater than the value of this object, an 'Upper Threshold Exceeded' state is entered.")
pdnEntPhySensorExtLowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1, 1, 3), EntitySensorValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnEntPhySensorExtLowerThreshold.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtLowerThreshold.setDescription("This object sets the lower limit of a sensor's threshold. When the value of entPhySensorValue becomes less than the value of this object, a 'Lower Threshold Exceeded' state is entered.")
pdnEntPhySensorExtThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noThresholdsExceeded", 1), ("upperThresholdExceeded", 2), ("lowerThresholdExceeded", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdState.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdState.setDescription('This object returns the threshold state of the sensor.')
pdnEntPhySensorExtThresholdExceededSet = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 0, 1)).setObjects(("ENTITY-SENSOR-MIB", "entPhySensorValue"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtThresholdState"))
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdExceededSet.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdExceededSet.setDescription('This trap/notification signifies that a sensor value has exceeded its threshold limit. i.e. its entPhySensorValue is greater than its pdnEntPhySensorExtUpperThreshold or less than its pdnEntPhySensorExtLowerThreshold.')
pdnEntPhySensorExtThresholdExceededCleared = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 0, 100)).setObjects(("ENTITY-SENSOR-MIB", "entPhySensorValue"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtThresholdState"))
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdExceededCleared.setStatus('current')
if mibBuilder.loadTexts: pdnEntPhySensorExtThresholdExceededCleared.setDescription('This trap/notification signifies that a sensor value that had exceeded its threshold limit, is now operating with in its threshold limits. i.e. its entPhySensorValue is less than or equal to its pdnEntPhySensorExtUpperThreshold and greater than or equal to its pdnEntPhySensorExtLowerThreshold.')
pdnEntitySensorExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 1))
pdnEntitySensorExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2))
pdnEntitySensorExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 1, 1)).setObjects(("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntitySensorExtThresholdGroup"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntitySensorExtThresholdNtfyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnEntitySensorExtMIBCompliance = pdnEntitySensorExtMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySensorExtMIBCompliance.setDescription('The compliance statement for pdnEntitySensorExt entities which implement the pdnEntitySensorExtMIB.')
pdnEntitySensorExtObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2, 1))
pdnEntitySensorExtAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2, 2))
pdnEntitySensorExtNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2, 3))
pdnEntitySensorExtThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2, 1, 1)).setObjects(("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtNotificationEnable"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtUpperThreshold"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtLowerThreshold"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtThresholdState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnEntitySensorExtThresholdGroup = pdnEntitySensorExtThresholdGroup.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySensorExtThresholdGroup.setDescription('A collection of objects for setting and reporting thresholds.')
pdnEntitySensorExtThresholdNtfyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 45, 3, 2, 3, 1)).setObjects(("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtThresholdExceededSet"), ("PDN-ENTITY-SENSOR-EXT-MIB", "pdnEntPhySensorExtThresholdExceededCleared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnEntitySensorExtThresholdNtfyGroup = pdnEntitySensorExtThresholdNtfyGroup.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySensorExtThresholdNtfyGroup.setDescription('Notifications relative to thresholds going out of or in to specification.')
mibBuilder.exportSymbols("PDN-ENTITY-SENSOR-EXT-MIB", pdnEntitySensorExtObjects=pdnEntitySensorExtObjects, pdnEntitySensorExtConformance=pdnEntitySensorExtConformance, pdnEntitySensorExtGroups=pdnEntitySensorExtGroups, pdnEntitySensorExtNotifications=pdnEntitySensorExtNotifications, pdnEntitySensorExtObjGroups=pdnEntitySensorExtObjGroups, PYSNMP_MODULE_ID=pdnEntitySensorExtMIB, pdnEntitySensorExtMIB=pdnEntitySensorExtMIB, pdnEntPhySensorExtThresholdState=pdnEntPhySensorExtThresholdState, pdnEntPhySensorExtUpperThreshold=pdnEntPhySensorExtUpperThreshold, pdnEntitySensorExtThresholdNtfyGroup=pdnEntitySensorExtThresholdNtfyGroup, pdnEntPhySensorExtThresholdExceededCleared=pdnEntPhySensorExtThresholdExceededCleared, pdnEntitySensorExtNtfyGroups=pdnEntitySensorExtNtfyGroups, pdnEntitySensorExtAFNs=pdnEntitySensorExtAFNs, pdnEntPhySensorExtEntry=pdnEntPhySensorExtEntry, pdnEntPhySensorExtThresholdExceededSet=pdnEntPhySensorExtThresholdExceededSet, pdnEntitySensorExtAfnGroups=pdnEntitySensorExtAfnGroups, pdnEntitySensorExtThresholdGroup=pdnEntitySensorExtThresholdGroup, pdnEntPhySensorExtNotificationEnable=pdnEntPhySensorExtNotificationEnable, pdnEntPhySensorExtTable=pdnEntPhySensorExtTable, pdnEntitySensorExtMIBCompliance=pdnEntitySensorExtMIBCompliance, pdnEntPhySensorExtLowerThreshold=pdnEntPhySensorExtLowerThreshold, pdnEntitySensorExtCompliances=pdnEntitySensorExtCompliances)
