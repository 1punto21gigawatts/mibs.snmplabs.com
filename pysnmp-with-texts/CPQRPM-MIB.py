#
# PySNMP MIB module CPQRPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQRPM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:27:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
compaq, = mibBuilder.importSymbols("CPQHOST-MIB", "compaq")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Bits, NotificationType, NotificationType, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Integer32, Counter32, TimeTicks, Gauge32, IpAddress, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "NotificationType", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Integer32", "Counter32", "TimeTicks", "Gauge32", "IpAddress", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqRPM = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 154))
cpqRPMTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 154, 1))
cpqRPMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 154, 2))
cpqPMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 154, 3))
cpqRPMTrapDescription = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapDescription.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapDescription.setDescription('Text description of the event that caused the trap.')
cpqRPMTrapDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapDeviceId.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapDeviceId.setDescription('A unique numeric identifier for the device that caused the trap.')
cpqRPMTrapDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapDeviceName.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapDeviceName.setDescription('The text name for the device.')
cpqRPMTrapDeviceAddress = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapDeviceAddress.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapDeviceAddress.setDescription('The hostname or ip address for the device.')
cpqRPMTrapType = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("system", 1), ("event", 2), ("change", 3), ("power", 4), ("environment", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapType.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapType.setDescription('Indicates the type of the event that caused the trap.')
cpqRPMTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("information", 2), ("normal", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapSeverity.setDescription('Indicates the severity of the event that caused the trap.')
cpqRPMTrapCode = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapCode.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapCode.setDescription('A unique identifier for the alarm.')
cpqRPMTrapURL = MibScalar((1, 3, 6, 1, 4, 1, 232, 154, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqRPMTrapURL.setStatus('mandatory')
if mibBuilder.loadTexts: cpqRPMTrapURL.setDescription('The URL for the management software.')
cpqRPMTrapDeviceConnected = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,1)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapDeviceConnected.setDescription('A UPS device is reporting a Connection Lost due to one of the following. 1. The serial cable connected to the UPS has been unplugged. 2. The Network cable connected to the UPS has been unplugged. Recommendations: 1. Insure all cables are seated properly. 2. check you network to insure it is functioning properly. 3. If the UPS is serially connected insure that the Serial Relay Agent is installed and running.')
cpqRPMTrapConnectionLost = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,2)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapConnectionLost.setDescription('A UPS device is reporting a Connection Lost due to one of the following. 1. The serial cable connected to the UPS has been unplugged. 2. The Network cable connected to the UPS has been unplugged. Recommendations: 1. Insure all cables are seated properly. 2. check you network to insure it is functioning properly. 3. If the UPS is serially connected insure that the Serial Relay Agent is installed and running.')
cpqRPMTrapLookupFailed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,3)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapLookupFailed.setDescription('CRPM failed to find an IP address for the device hostname.')
cpqRPMTrapConnectionFailed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,4)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapConnectionFailed.setDescription('CRPM failed to connect to a device.')
cpqRPMTrapDeviceSettingsChanged = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,5)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapDeviceSettingsChanged.setDescription('Device settings have been changed by a user.')
cpqRPMTrapCMCTemp1BelowMin = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10001)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp1BelowMin.setDescription('A CMC device is reporting temperature 1 below minimum threshold.')
cpqRPMTrapCMCTemp1AboveWarn = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10002)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp1AboveWarn.setDescription('A CMC device is reporting temperature 1 above warning threshold.')
cpqRPMTrapCMCTemp1AboveMax = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10003)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp1AboveMax.setDescription('A CMC device is reporting temperature 1 above maximum threshold.')
cpqRPMTrapCMCTemp1Normal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10004)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp1Normal.setDescription('A CMC device is reporting temperature 1 has returned to a normal temperature.')
cpqRPMTrapCMCTemp2BelowMin = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10005)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp2BelowMin.setDescription('A CMC device is reporting temperature 2 below minimum threshold.')
cpqRPMTrapCMCTemp2AboveWarn = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10006)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp2AboveWarn.setDescription('A CMC device is reporting temperature 2 above warning threshold.')
cpqRPMTrapCMCTemp2AboveMax = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10007)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp2AboveMax.setDescription('A CMC device is reporting temperature 2 above maximum threshold.')
cpqRPMTrapCMCTemp2Normal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10008)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCTemp2Normal.setDescription('A CMC device is reporting temperature 2 has returned to a normal temperature.')
cpqRPMTrapCMCVoltUnder = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10011)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCVoltUnder.setDescription('A CMC device is reporting voltage below minimum threshold.')
cpqRPMTrapCMCVoltOver = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10012)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCVoltOver.setDescription('A CMC device is reporting voltage above maximum threshold.')
cpqRPMTrapCMCVoltNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10013)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCVoltNormal.setDescription('A CMC device is reporting voltage has returned to normal.')
cpqRPMTrapCMCHmdtUnder = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10021)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCHmdtUnder.setDescription('A CMC device is reporting humidity below minimum threshold.')
cpqRPMTrapCMCHmdtOver = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10022)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCHmdtOver.setDescription('A CMC device is reporting humidity above maximum threshold.')
cpqRPMTrapCMCHmdtNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10023)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCHmdtNormal.setDescription('A CMC device is reporting humidity has returned to normal.')
cpqRPMTrapCMCSmokeDetected = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10031)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCSmokeDetected.setDescription('A CMC device is reporting smoke detected.')
cpqRPMTrapCMCSmokeCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10032)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCSmokeCleared.setDescription('A CMC device is reporting smoke cleared.')
cpqRPMTrapCMCShockDetected = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10041)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCShockDetected.setDescription('A CMC device is reporting shock detected.')
cpqRPMTrapCMCShockCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10042)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCShockCleared.setDescription('A CMC device is reporting shock cleared.')
cpqRPMTrapCMCAux1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10051)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCAux1Alarm.setDescription('A CMC device has entered an alarm condition for auxiliary input 1.')
cpqRPMTrapCMCAux1Cleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10052)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCAux1Cleared.setDescription('A CMC device is reporting auxiliary input 1 alarm cleared.')
cpqRPMTrapCMCAux2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10053)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCAux2Alarm.setDescription('A CMC device has entered an alarm condition for auxiliary input 2.')
cpqRPMTrapCMCAux2Cleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10054)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCAux2Cleared.setDescription('A CMC device is reporting auxiliary input 2 alarm cleared.')
cpqRPMTrapCMCInput1Opened = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10101)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput1Opened.setDescription('A CMC device is reporting input 1 has been opened.')
cpqRPMTrapCMCInput1Closed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10102)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput1Closed.setDescription('A CMC device is reporting input 1 has been closed.')
cpqRPMTrapCMCInput2Opened = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10103)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput2Opened.setDescription('A CMC device is reporting input 2 has been opened.')
cpqRPMTrapCMCInput2Closed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10104)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput2Closed.setDescription('A CMC device is reporting input 2 has been closed.')
cpqRPMTrapCMCInput3Opened = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10105)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput3Opened.setDescription('A CMC device is reporting input 3 has been opened.')
cpqRPMTrapCMCInput3Closed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10106)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput3Closed.setDescription('A CMC device is reporting input 3 has been closed.')
cpqRPMTrapCMCInput4Opened = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10107)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput4Opened.setDescription('A CMC device is reporting input 4 has been opened.')
cpqRPMTrapCMCInput4Closed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10108)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCInput4Closed.setDescription('A CMC device is reporting input 4 has been closed.')
cpqRPMTrapCMCLockset1Unlocked = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10111)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset1Unlocked.setDescription('A CMC device is reporting lockset 1 has been unlocked.')
cpqRPMTrapCMCLockset1FailedToLock = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10112)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset1FailedToLock.setDescription('A CMC device is reporting lockset 1 has failed to lock.')
cpqRPMTrapCMCLockset1Error = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10113)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset1Error.setDescription('A CMC device is reporting an error with lockset 1.')
cpqRPMTrapCMCLockset1Locked = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10114)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset1Locked.setDescription('A CMC device is reporting lockset 1 has been locked.')
cpqRPMTrapCMCLockset2Unlocked = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10116)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset2Unlocked.setDescription('A CMC device is reporting lockset 2 has been unlocked.')
cpqRPMTrapCMCLockset2FailedToLock = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10117)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset2FailedToLock.setDescription('A CMC device is reporting lockset 2 has failed to lock.')
cpqRPMTrapCMCLockset2Error = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10118)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset2Error.setDescription('A CMC device is reporting an error with lockset 2.')
cpqRPMTrapCMCLockset2Locked = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10119)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset2Locked.setDescription('A CMC device is reporting lockset 2 has been locked.')
cpqRPMTrapCMCLockset1Normal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10134)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset1Normal.setDescription('A CMC device is reporting lockset 2 is normal.')
cpqRPMTrapCMCLockset2Normal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,10135)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapCMCLockset2Normal.setDescription('A CMC device is reporting lockset 2 is normal.')
cpqRPMTrapUPSInputVoltageBelowMin = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20001)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInputVoltageBelowMin.setDescription('A UPS device is reporting input voltage below minimum threshold.')
cpqRPMTrapUPSInputVoltageAboveMax = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20002)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInputVoltageAboveMax.setDescription('A UPS device is reporting input voltage above maximum threshold.')
cpqRPMTrapUPSInputVoltageNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20003)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInputVoltageNormal.setDescription('A UPS device is reporting input voltage is out of range. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. If the UPS remains on battery for an extended period of time it will not be able to sustain the load.')
cpqRPMTrapUPSOutputVoltageBelowMin = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20011)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOutputVoltageBelowMin.setDescription('A UPS device is reporting output voltage below minimum threshold.')
cpqRPMTrapUPSOutputVoltageAboveMax = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20012)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOutputVoltageAboveMax.setDescription('A UPS device is reporting output voltage above maximum threshold.')
cpqRPMTrapUPSOutputVoltageNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21020)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOutputVoltageNormal.setDescription('A UPS device is reporting output voltage is out of Range. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSOutputOverload = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20014)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOutputOverload.setDescription('A UPS device is reporting an overload condition. Recommendations: 1. Reduce the load on the UPS by moving some of the load to another UPS. 2. Consider moving to a larger UPS to support the current load.')
cpqRPMTrapUPSOutputOverloadCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20015)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOutputOverloadCleared.setDescription('A UPS device is reporting an overload condition. Recommendations: 1. Reduce the load on the UPS by moving some of the load to another UPS. 2. Consider moving to a larger UPS to support the current load.')
cpqRPMTrapUPSBatteryLow = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21055)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryLow.setDescription("A UPS device is reporting low battery. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. When utility power is restored, charge the battery to it's full capacity. If the battery level continues to decrease, the UPS will not be able to sustain the output load!")
cpqRPMTrapUPSBatteryLowCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21056)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryLowCleared.setDescription("A UPS device is reporting low battery. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. When utility power is restored, charge the battery to it's full capacity. If the battery level continues to decrease, the UPS will not be able to sustain the output load!")
cpqRPMTrapUPSBatteryDepleted = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20022)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryDepleted.setDescription('A UPS device is a depleted battery.')
cpqRPMTrapUPSBatteryLevelNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20023)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryLevelNormal.setDescription("A UPS device is reporting low battery. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. When utility power is restored, charge the battery to it's full capacity. If the battery level continues to decrease, the UPS will not be able to sustain the output load!")
cpqRPMTrapUPSOnBattery = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21063)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOnBattery.setDescription('A UPS device is reporting on battery condition. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. If the UPS remains on battery for an extended time it will not be able to sustain the output load!')
cpqRPMTrapUPSOnBypass = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20032)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOnBypass.setDescription('A UPS device is being bypassed.')
cpqRPMTrapUPSOnBuck = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21029)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOnBuck.setDescription('A UPS device is reporting an On Buck condition due to the following. 1. Utility power has increased above recommended utility input levels. Recommendation: 1. Contact an electrician.')
cpqRPMTrapUPSOnBoost = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21031)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOnBoost.setDescription('A UPS device is reporting an On Boost condition due to the following. 1. Utility power has dropped below recommended utility input levels. Recommendation: 1. Contact an electrician.')
cpqRPMTrapUPSOnUtilityPower = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21064)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSOnUtilityPower.setDescription('A UPS device is reporting on battery condition. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. If the UPS remains on battery for an extended time it will not be able to sustain the output load!')
cpqRPMTrapUPSTemperatureLow = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20101)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSTemperatureLow.setDescription('A UPS device is reporting temperature blow minimum threshold.')
cpqRPMTrapUPSTemperatureHigh = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20102)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSTemperatureHigh.setDescription('A UPS device is reporting temperature above maximum threshold.')
cpqRPMTrapUPSTemperatureNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20103)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSTemperatureNormal.setDescription('A UPS device is reporting temperature is out of range. Recommendations: 1. Check to make sure the UPS is in a well ventilated area. 2. Lower the ambient temperature in the area where the UPS is located.')
cpqRPMTrapUPSInternalFailure = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20111)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInternalFailure.setDescription('A UPS device is reporting a general UPS failure. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSInternalFailureCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20112)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInternalFailureCleared.setDescription('A UPS device is reporting a general UPS failure. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSBatteryFailure = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20121)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryFailure.setDescription("A UPS device is reporting a battery failure. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support. 3. Your battery may need to be replaced. The UPS may not be capable of supporting it's load if utility power fails!")
cpqRPMTrapUPSBatteryFailureCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20122)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryFailureCleared.setDescription("A UPS device is reporting a battery failure. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support. 3. Your battery may need to be replaced. The UPS may not be capable of supporting it's load if utility power fails!")
cpqRPMTrapUPSDiagnosticTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20131)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSDiagnosticTestFailed.setDescription("A UPS device is reporting a diagnostic test failed. Recommendations: 1. Your battery may need to be replaced. 2. If this error persists contact technical support. 3. The UPS may not be capable of supporting it's load if utility power fails!")
cpqRPMTrapUPSDiagnosticTestSucceeded = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20132)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSDiagnosticTestSucceeded.setDescription("A UPS device is reporting a diagnostic test failed. Recommendations: 1. Your battery may need to be replaced. 2. If this error persists contact technical support. 3. The UPS may not be capable of supporting it's load if utility power fails!")
cpqRPMTrapUPSInputUnderOverFreq = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20141)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInputUnderOverFreq.setDescription('Input (Utility) fault: measured input frequency is outside of either the upper or lower frequency limit specification for normal operation.')
cpqRPMTrapUPSInputUnderOverFreqCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20142)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSInputUnderOverFreqCleared.setDescription('Measured input frequency is normal')
cpqRPMTrapUPSDCStartOccurred = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,29998)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSDCStartOccurred.setDescription('The UPS has been started on battery when AC input power is not present. This alarm is used to record the date and time of this event.')
cpqRPMTrapUPSDCStartOccurredCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,29999)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSDCStartOccurredCleared.setDescription('The UPS has been started on utility while AC input power is present.')
cpqRPMTrapUPSBypassNotAvailable = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20161)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBypassNotAvailable.setDescription('A UPS device is reporting bypass not avaliable. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSBypassNotAvailableCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20162)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBypassNotAvailableCleared.setDescription('A UPS device is reporting bypass not avaliable. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSUtilityFail = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20171)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSUtilityFail.setDescription('Indicates that the utility input power is not within predetermined limits. This could be, but is not limited to, over voltage, under voltage, over frequency, under frequency or over current.')
cpqRPMTrapUPSUtilityFailCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20172)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSUtilityFailCleared.setDescription('Indicates that the utility input power is within predetermined limits.')
cpqRPMTrapUPSUtilityNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20181)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSUtilityNotPresent.setDescription('Indicates that the utility input is not present. This differs from alarm #57 in that the detected voltage is zero in this case.')
cpqRPMTrapUPSUtilityNotPresentCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20182)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSUtilityNotPresentCleared.setDescription('Indicates that the utility input is present.')
cpqRPMTrapUPSBypassManualTurnedOn = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20191)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBypassManualTurnedOn.setDescription('The bypass has been given a manual turn on command.')
cpqRPMTrapUPSBypassManualTurnedOff = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20192)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBypassManualTurnedOff.setDescription('The bypass has been given a manual turn off command.')
cpqRPMTrapUPSSiteWiringFault = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20201)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSSiteWiringFault.setDescription('A UPS device is reporting a fault in the input wiring, other than Phase Rotation: e.g., Ground/Neutral reversed. Recommendations: 1. Contact an electrician.')
cpqRPMTrapUPSSiteWiringNormal = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20202)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSSiteWiringNormal.setDescription('A UPS device is reporting a fault in the input wiring, other than Phase Rotation: e.g., Ground/Neutral reversed. Recommendations: 1. Contact an electrician.')
cpqRPMtrapUPSBypassOffManual = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21060)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSBypassOffManual.setDescription('A UPS device is operating in manual bypass mode. Recommendations: 1. In bypass mode, the UPS cannot support devices if there is a power failure. 2. Once maintenance has been performed return the UPS to normal mode.')
cpqRPMtrapUPSBypassONManual = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21059)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSBypassONManual.setDescription('A UPS device is operating in manual bypass mode. Recommendations: 1. In bypass mode, the UPS cannot support devices if there is a power failure. 2. Once maintenance has been performed return the UPS to normal mode.')
cppqRPMtrapUPSStartedOnBatteryCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20152)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cppqRPMtrapUPSStartedOnBatteryCleared.setDescription('A UPS device has been started while on battery power. AC input power is not present. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. If the UPS remains on battery for an extended time it will not be able to sustain the output load!')
cppqRPMtrapUPSStartedOnBattery = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,20151)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cppqRPMtrapUPSStartedOnBattery.setDescription('A UPS device has been started while on battery power. AC input power is not present. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. If the UPS remains on battery for an extended time it will not be able to sustain the output load.')
cpqRPMtrapUPSInputOutofRangeCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21022)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSInputOutofRangeCleared.setDescription('A UPS device is reporting input voltage is out of range. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. If the UPS remains on battery for an extended period of time it will not be able to sustain the load.')
cpqRPMtrapUPSInputOutofRange = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21021)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSInputOutofRange.setDescription('A UPS device is reporting input voltage is out of range. Recommendations: 1. Check to make sure the UPS is plugged into an outlet supplied with utility power. 2. If the UPS remains on battery for an extended period of time it will not be able to sustain the load.')
cpqRPMtrapUPSTemperatureOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21007)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSTemperatureOutOfRange.setDescription('A UPS device is reporting temperature is out of range. Recommendations: 1. Check to make sure the UPS is in a well ventilated area. 2. Lower the ambient temperature in the area where the UPS is located.')
cpqRPMtrapUPSTemperatureOutOfRangeCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21008)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSTemperatureOutOfRangeCleared.setDescription('A UPS device is reporting temperature is out of range. Recommendations: 1. Check to make sure the UPS is in a well ventilated area. 2. Lower the ambient temperature in the area where the UPS is located.')
cpqRPMtrapUPSBypassOnAuto = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21047)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSBypassOnAuto.setDescription('A UPS device is operating in auto bypass mode. Recommendations: 1. In bypass mode, the UPS cannot support devices if there is a power failure. 2. Once maintenance has been performed return the UPS to normal mode.')
cpqRPMtrapUPSBypassOnAutoCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21048)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSBypassOnAutoCleared.setDescription('A UPS device is operating in auto bypass mode. Recommendations: 1. In bypass mode, the UPS cannot support devices if there is a power failure. 2. Once maintenance has been performed return the UPS to normal mode.')
cpqRPMtrapUPSOutputoutofRange = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21019)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMtrapUPSOutputoutofRange.setDescription('A UPS device is reporting output voltage is out of Range. Recommendations: 1. Initiate a UPS self test. 2. If this error persists contact technical support.')
cpqRPMTrapUPSBatteriesDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21053)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteriesDisconnected.setDescription("A UPS device is reporting batteries are not connected to the UPS. Recomendations: 1. Connect the UPS Batteries. The UPS will not be capable of supporting it's load if the utility power fails!")
cpqRPMTrapUPSBatteriesDisconnectedCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21054)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteriesDisconnectedCleared.setDescription("A UPS device is reporting batteries are not connected to the UPS. Recomendations: 1. Connect the UPS Batteries. The UPS will not be capable of supporting it's load if the utility power fails!")
cpqRPMTrapUPSBatteryDischarged = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21057)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryDischarged.setDescription("A UPS device is reporting batteries are completely discharged. Recommendations: 1. Connect the UPS to utility power to charge the batteries. The UPS will not be able to support it's load if the utility power fails!")
cpqRPMTrapUPSBatteryDischargedCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21058)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSBatteryDischargedCleared.setDescription("A UPS device is reporting batteries are completely discharged. Recommendations: 1. Connect the UPS to utility power to charge the batteries. The UPS will not be able to support it's load if the utility power fails!")
cpqRPMTrapUPSCheckBreaker = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21041)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSCheckBreaker.setDescription('A UPS device is reporting an output Breaker or Relay has failed or may be stuck open or closed with this alarm. Recommendations: 1. Check all breakers on the UPS. 2. If this error persists contact technical support.')
cpqRPMTrapUPSCheckBreakerCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21042)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSCheckBreakerCleared.setDescription('A UPS device is reporting an output Breaker or Relay has failed or may be stuck open or closed with this alarm. Recommendations: 1. Check all breakers on the UPS. 2. If this error persists contact technical support.')
cpqRPMTrapUPSEPOInitiated = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21037)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSEPOInitiated.setDescription('A UPS device is reporting an Emergency Power Off (EPO) command has been received to shutdown the UPS immediately with out delay. This command may come from a local control panel or from a remote source. Recommendations: 1. Turn the UPS on to reapply power to attached equipment.')
cpqRPMTrapUPSManualLoadDumped = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21033)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSManualLoadDumped.setDescription('The UPS has been powered off with user interaction.')
cpqRPMTrapUPSManualLoadDumpedCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21034)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSManualLoadDumpedCleared.setDescription('The UPS has been powered off with user interaction.')
cpqRPMTrapUPSCabinetDoorOpen = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21045)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSCabinetDoorOpen.setDescription('A UPS device is reporting a cover panel has been removed while utility power is present. Recommendations: 1. Reinstall all panels. 2. If this error persists contact technical support.')
cpqRPMTrapUPSCabinetDoorOpenCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21046)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSCabinetDoorOpenCleared.setDescription('A UPS device is reporting a cover panel has been removed while utility power is present. Recommendations: 1. Reinstall all panels. 2. If this error persists contact technical support.')
cpqRPMTrapUPSFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21035)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSFanFailure.setDescription('A UPS device is reporting a fan failure has occurred. Recommendations: 1. If this error persists contact technical support.')
cpqRPMTrapUPSFanFailureCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21036)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSFanFailureCleared.setDescription('A UPS device is reporting a fan failure has occurred. Recommendations: 1. If this error persists contact technical support.')
cpqRPMTrapUPSLossOfRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21023)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSLossOfRedundancy.setDescription('A UPS device is reporting a loss of redundancy due to one of the following. 1. One or more of the Electronics Modules has failed 2. One or more of the electronics modules has been manually removed. 3. The amount of load on the UPS has increased to the point that the UPS is no longer able to support an N+1 configuration. Recommendations: 1. Check the UPS to see if one of the modules has failed. 2. Make sure that all modules are securely plugged in. 3. Reduce the load to return the N+1 configuration. 4. If the amount of load is now going to exceed and N+1 configuration permanently, change the configuration on the front panel of the UPS to Capacity instead of Parallel N+1.')
cpqRPMTrapUPSLossOfRedundancyCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21024)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSLossOfRedundancyCleared.setDescription('A UPS device is reporting a loss of redundancy due to one of the following. 1. One or more of the Electronics Modules has failed 2. One or more of the electronics modules has been manually removed. 3. The amount of load on the UPS has increased to the point that the UPS is no longer able to support an N+1 configuration. Recommendations: 1. Check the UPS to see if one of the modules has failed. 2. Make sure that all modules are securely plugged in. 3. Reduce the load to return the N+1 configuration. 4. If the amount of load is now going to exceed and N+1 configuration permanently, change the configuration on the front panel of the UPS to Capacity instead of Parallel N+1.')
cpqRPMTrapUPSShutdownImminent = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21013)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSShutdownImminent.setDescription('A UPS device is reporting a shutdown imminent condition. Recommendations: 1. Immediately restore power to the UPS. The UPS will not continue to supply power to devices following the shutdown!')
cpqRPMTrapUPSShutdownImminentCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21014)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSShutdownImminentCleared.setDescription('A UPS device is reporting a shutdown imminent condition. Recommendations: 1. Immediately restore power to the UPS. The UPS will not continue to supply power to devices following the shutdown!')
cpqRPMTrapUPSShutdownPending = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21011)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSShutdownPending.setDescription('A UPS device is reporting shutdown pending condition. Recommendations: 1. Immediately restore power to the UPS. The UPS will not continue to supply power to devices following the shutdown!')
cpqRPMTrapUPSShutdownPendingCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,21012)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqRPMTrapUPSShutdownPendingCleared.setDescription('A UPS device is reporting shutdown pending condition. Recommendations: 1. Immediately restore power to the UPS. The UPS will not continue to supply power to devices following the shutdown!')
cpqRPMTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 2) + (0,50001)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceId"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapDeviceAddress"), ("CPQRPM-MIB", "cpqRPMTrapType"), ("CPQRPM-MIB", "cpqRPMTrapSeverity"))
if mibBuilder.loadTexts: cpqRPMTestTrap.setDescription('This trap is sent to test SNMP setup.')
cpqPMTrapCritical = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 3) + (0,1)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapCode"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqPMTrapCritical.setDescription('A critical alarm has occurred. Action: Check the Trap Details for more information.')
cpqPMTrapWarning = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 3) + (0,2)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapCode"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqPMTrapWarning.setDescription('A warning alarm has occurred. Action: Check the Trap Details for more information.')
cpqPMTrapInformation = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 3) + (0,3)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapCode"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqPMTrapInformation.setDescription('An information alarm has occurred. Action: Check the Trap Details for more information.')
cpqPMTrapCleared = NotificationType((1, 3, 6, 1, 4, 1, 232, 154, 3) + (0,4)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQRPM-MIB", "cpqRPMTrapCode"), ("CPQRPM-MIB", "cpqRPMTrapDescription"), ("CPQRPM-MIB", "cpqRPMTrapDeviceName"), ("CPQRPM-MIB", "cpqRPMTrapURL"))
if mibBuilder.loadTexts: cpqPMTrapCleared.setDescription('An alarm has cleared. Action: Check the Trap Details for more information.')
mibBuilder.exportSymbols("CPQRPM-MIB", cpqRPMTrapUPSInputUnderOverFreqCleared=cpqRPMTrapUPSInputUnderOverFreqCleared, cpqRPMTrapUPSBypassNotAvailable=cpqRPMTrapUPSBypassNotAvailable, cpqRPMTrapLookupFailed=cpqRPMTrapLookupFailed, cpqRPMTrapUPSCheckBreaker=cpqRPMTrapUPSCheckBreaker, cpqRPMTrapUPSUtilityFailCleared=cpqRPMTrapUPSUtilityFailCleared, cpqRPMTrapUPSCheckBreakerCleared=cpqRPMTrapUPSCheckBreakerCleared, cpqRPMTrapUPSUtilityFail=cpqRPMTrapUPSUtilityFail, cpqRPMtrapUPSTemperatureOutOfRange=cpqRPMtrapUPSTemperatureOutOfRange, cpqRPMTestTrap=cpqRPMTestTrap, cpqRPMTrapCMCInput3Opened=cpqRPMTrapCMCInput3Opened, cpqRPMTrapCMCLockset1FailedToLock=cpqRPMTrapCMCLockset1FailedToLock, cpqRPMTrapUPSOnUtilityPower=cpqRPMTrapUPSOnUtilityPower, cpqRPMtrapUPSBypassOnAutoCleared=cpqRPMtrapUPSBypassOnAutoCleared, cpqRPMTrapUPSCabinetDoorOpenCleared=cpqRPMTrapUPSCabinetDoorOpenCleared, cpqRPMTrapDeviceAddress=cpqRPMTrapDeviceAddress, cpqRPMTrapUPSBatteryFailure=cpqRPMTrapUPSBatteryFailure, cpqRPMTrapUPSOutputVoltageAboveMax=cpqRPMTrapUPSOutputVoltageAboveMax, cpqRPMTrapCMCHmdtNormal=cpqRPMTrapCMCHmdtNormal, cpqPMTrapCleared=cpqPMTrapCleared, cpqRPMTrapUPSCabinetDoorOpen=cpqRPMTrapUPSCabinetDoorOpen, cpqRPMTrapCMCTemp2AboveMax=cpqRPMTrapCMCTemp2AboveMax, cpqRPMtrapUPSTemperatureOutOfRangeCleared=cpqRPMtrapUPSTemperatureOutOfRangeCleared, cpqRPM=cpqRPM, cpqRPMTrapUPSBatteryDischarged=cpqRPMTrapUPSBatteryDischarged, cpqRPMTrapUPSOutputOverloadCleared=cpqRPMTrapUPSOutputOverloadCleared, cpqRPMTrapUPSBatteriesDisconnected=cpqRPMTrapUPSBatteriesDisconnected, cpqRPMtrapUPSBypassOnAuto=cpqRPMtrapUPSBypassOnAuto, cpqRPMTrapUPSShutdownImminentCleared=cpqRPMTrapUPSShutdownImminentCleared, cpqRPMTrapUPSLossOfRedundancy=cpqRPMTrapUPSLossOfRedundancy, cpqRPMTrapUPSInternalFailure=cpqRPMTrapUPSInternalFailure, cpqRPMTrapUPSShutdownPendingCleared=cpqRPMTrapUPSShutdownPendingCleared, cpqRPMTrapUPSOutputOverload=cpqRPMTrapUPSOutputOverload, cpqRPMTrapUPSInternalFailureCleared=cpqRPMTrapUPSInternalFailureCleared, cpqRPMTrapCMCTemp1AboveWarn=cpqRPMTrapCMCTemp1AboveWarn, cpqRPMTrapUPSBatteryFailureCleared=cpqRPMTrapUPSBatteryFailureCleared, cpqRPMTrapCMCInput1Closed=cpqRPMTrapCMCInput1Closed, cpqRPMTrapDeviceSettingsChanged=cpqRPMTrapDeviceSettingsChanged, cpqRPMTrapCMCVoltOver=cpqRPMTrapCMCVoltOver, cpqRPMTrapUPSBatteryDepleted=cpqRPMTrapUPSBatteryDepleted, cpqRPMTrapUPSInputVoltageNormal=cpqRPMTrapUPSInputVoltageNormal, cpqRPMTrapCMCHmdtUnder=cpqRPMTrapCMCHmdtUnder, cpqRPMTrapUPSBypassNotAvailableCleared=cpqRPMTrapUPSBypassNotAvailableCleared, cpqRPMTrapCMCTemp2BelowMin=cpqRPMTrapCMCTemp2BelowMin, cpqRPMTrapUPSSiteWiringFault=cpqRPMTrapUPSSiteWiringFault, cpqRPMTrapDeviceName=cpqRPMTrapDeviceName, cpqRPMTrapUPSBatteryDischargedCleared=cpqRPMTrapUPSBatteryDischargedCleared, cpqRPMTrapCMCInput2Opened=cpqRPMTrapCMCInput2Opened, cpqRPMTrapUPSOnBattery=cpqRPMTrapUPSOnBattery, cpqRPMTrapCMCShockDetected=cpqRPMTrapCMCShockDetected, cpqRPMTrapCMCTemp2AboveWarn=cpqRPMTrapCMCTemp2AboveWarn, cpqRPMTrapUPSOnBuck=cpqRPMTrapUPSOnBuck, cpqRPMTrapCMCLockset2FailedToLock=cpqRPMTrapCMCLockset2FailedToLock, cpqRPMTrapUPSDiagnosticTestFailed=cpqRPMTrapUPSDiagnosticTestFailed, cpqRPMTrapCMCInput4Opened=cpqRPMTrapCMCInput4Opened, cpqRPMTrapCMCHmdtOver=cpqRPMTrapCMCHmdtOver, cpqRPMTrapSeverity=cpqRPMTrapSeverity, cpqRPMTrapUPSManualLoadDumpedCleared=cpqRPMTrapUPSManualLoadDumpedCleared, cpqRPMTrapCMCInput2Closed=cpqRPMTrapCMCInput2Closed, cpqRPMTrapConnectionLost=cpqRPMTrapConnectionLost, cpqRPMTrapUPSInputVoltageBelowMin=cpqRPMTrapUPSInputVoltageBelowMin, cpqPMTraps=cpqPMTraps, cpqRPMTrapDeviceConnected=cpqRPMTrapDeviceConnected, cpqRPMTrapCMCAux1Alarm=cpqRPMTrapCMCAux1Alarm, cpqRPMtrapUPSOutputoutofRange=cpqRPMtrapUPSOutputoutofRange, cpqRPMTrapUPSInputUnderOverFreq=cpqRPMTrapUPSInputUnderOverFreq, cpqRPMTrapUPSBypassManualTurnedOff=cpqRPMTrapUPSBypassManualTurnedOff, cpqPMTrapInformation=cpqPMTrapInformation, cpqRPMTrapUPSTemperatureLow=cpqRPMTrapUPSTemperatureLow, cpqRPMTrapUPSUtilityNotPresent=cpqRPMTrapUPSUtilityNotPresent, cpqRPMTrapConnectionFailed=cpqRPMTrapConnectionFailed, cpqRPMTrapCMCAux1Cleared=cpqRPMTrapCMCAux1Cleared, cpqRPMTrapCMCInput3Closed=cpqRPMTrapCMCInput3Closed, cpqRPMTrapUPSFanFailureCleared=cpqRPMTrapUPSFanFailureCleared, cpqRPMTrapUPSTemperatureNormal=cpqRPMTrapUPSTemperatureNormal, cpqRPMTrapURL=cpqRPMTrapURL, cpqRPMTrapCMCLockset1Unlocked=cpqRPMTrapCMCLockset1Unlocked, cpqRPMTrapUPSDiagnosticTestSucceeded=cpqRPMTrapUPSDiagnosticTestSucceeded, cpqRPMTrapCMCLockset2Error=cpqRPMTrapCMCLockset2Error, cpqRPMtrapUPSBypassOffManual=cpqRPMtrapUPSBypassOffManual, cpqRPMTrapCMCSmokeDetected=cpqRPMTrapCMCSmokeDetected, cpqRPMTrapCMCVoltUnder=cpqRPMTrapCMCVoltUnder, cpqRPMTrapUPSBypassManualTurnedOn=cpqRPMTrapUPSBypassManualTurnedOn, cpqRPMTrapCMCVoltNormal=cpqRPMTrapCMCVoltNormal, cpqPMTrapWarning=cpqPMTrapWarning, cpqRPMTrapCMCSmokeCleared=cpqRPMTrapCMCSmokeCleared, cpqRPMTrapCMCAux2Alarm=cpqRPMTrapCMCAux2Alarm, cpqRPMTrapCMCLockset1Normal=cpqRPMTrapCMCLockset1Normal, cppqRPMtrapUPSStartedOnBattery=cppqRPMtrapUPSStartedOnBattery, cpqRPMTrapDeviceId=cpqRPMTrapDeviceId, cpqRPMTrapCMCLockset2Unlocked=cpqRPMTrapCMCLockset2Unlocked, cpqRPMTrapCMCLockset1Locked=cpqRPMTrapCMCLockset1Locked, cpqRPMTrapUPSOnBoost=cpqRPMTrapUPSOnBoost, cpqRPMTrapUPSOnBypass=cpqRPMTrapUPSOnBypass, cpqRPMTrapUPSTemperatureHigh=cpqRPMTrapUPSTemperatureHigh, cpqRPMtrapUPSInputOutofRange=cpqRPMtrapUPSInputOutofRange, cpqRPMTrapCode=cpqRPMTrapCode, cpqRPMTrapUPSFanFailure=cpqRPMTrapUPSFanFailure, cpqRPMTrapUPSOutputVoltageNormal=cpqRPMTrapUPSOutputVoltageNormal, cpqRPMTrapUPSBatteryLowCleared=cpqRPMTrapUPSBatteryLowCleared, cpqRPMTrapCMCTemp1BelowMin=cpqRPMTrapCMCTemp1BelowMin, cpqRPMTrapUPSManualLoadDumped=cpqRPMTrapUPSManualLoadDumped, cpqRPMTrapUPSBatteryLevelNormal=cpqRPMTrapUPSBatteryLevelNormal, cpqRPMTrapCMCTemp1Normal=cpqRPMTrapCMCTemp1Normal, cpqRPMtrapUPSInputOutofRangeCleared=cpqRPMtrapUPSInputOutofRangeCleared, cpqRPMTrapUPSUtilityNotPresentCleared=cpqRPMTrapUPSUtilityNotPresentCleared, cppqRPMtrapUPSStartedOnBatteryCleared=cppqRPMtrapUPSStartedOnBatteryCleared, cpqRPMTrapCMCInput4Closed=cpqRPMTrapCMCInput4Closed, cpqRPMTrapUPSInputVoltageAboveMax=cpqRPMTrapUPSInputVoltageAboveMax, cpqRPMTrapCMCAux2Cleared=cpqRPMTrapCMCAux2Cleared, cpqRPMTrapInfo=cpqRPMTrapInfo, cpqRPMTrapCMCTemp1AboveMax=cpqRPMTrapCMCTemp1AboveMax, cpqRPMTrapUPSShutdownPending=cpqRPMTrapUPSShutdownPending, cpqPMTrapCritical=cpqPMTrapCritical, cpqRPMTrapCMCLockset2Normal=cpqRPMTrapCMCLockset2Normal, cpqRPMTrapUPSDCStartOccurredCleared=cpqRPMTrapUPSDCStartOccurredCleared, cpqRPMTrapCMCTemp2Normal=cpqRPMTrapCMCTemp2Normal, cpqRPMTrapCMCLockset2Locked=cpqRPMTrapCMCLockset2Locked, cpqRPMTrapUPSLossOfRedundancyCleared=cpqRPMTrapUPSLossOfRedundancyCleared, cpqRPMtrapUPSBypassONManual=cpqRPMtrapUPSBypassONManual, cpqRPMTrapUPSShutdownImminent=cpqRPMTrapUPSShutdownImminent, cpqRPMTrapCMCInput1Opened=cpqRPMTrapCMCInput1Opened, cpqRPMTrapUPSSiteWiringNormal=cpqRPMTrapUPSSiteWiringNormal, cpqRPMTrapUPSEPOInitiated=cpqRPMTrapUPSEPOInitiated, cpqRPMTrapDescription=cpqRPMTrapDescription, cpqRPMTrapCMCShockCleared=cpqRPMTrapCMCShockCleared, cpqRPMTrapUPSBatteryLow=cpqRPMTrapUPSBatteryLow, cpqRPMTrapType=cpqRPMTrapType, cpqRPMTrapCMCLockset1Error=cpqRPMTrapCMCLockset1Error, cpqRPMTrapUPSBatteriesDisconnectedCleared=cpqRPMTrapUPSBatteriesDisconnectedCleared, cpqRPMTraps=cpqRPMTraps, cpqRPMTrapUPSOutputVoltageBelowMin=cpqRPMTrapUPSOutputVoltageBelowMin, cpqRPMTrapUPSDCStartOccurred=cpqRPMTrapUPSDCStartOccurred)
