#
# PySNMP MIB module CYAN-GFP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-GFP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:33:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanSecServiceStateTc, CyanEnDisabledTc, CyanGfpUpiTc, CyanAdminStateTc, CyanOpStateQualTc, CyanOpStateTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanSecServiceStateTc", "CyanEnDisabledTc", "CyanGfpUpiTc", "CyanAdminStateTc", "CyanOpStateQualTc", "CyanOpStateTc")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, iso, Bits, MibIdentifier, ObjectIdentity, Gauge32, NotificationType, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Bits", "MibIdentifier", "ObjectIdentity", "Gauge32", "NotificationType", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "TimeTicks", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanGFPModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210))
cyanGFPModule.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanGFPModule.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanGFPModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanGFPModule.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanGFPModule.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanGFPModule.setDescription('MIB module for Generic Framing Protocol (GFP)')
cyanGFPMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1))
cyanGFPTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1), )
if mibBuilder.loadTexts: cyanGFPTable.setStatus('current')
if mibBuilder.loadTexts: cyanGFPTable.setDescription('A list of GFP entries.')
cyanGFPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1), ).setIndexNames((0, "CYAN-GFP-MIB", "cyanGFPShelfId"), (0, "CYAN-GFP-MIB", "cyanGFPModuleId"), (0, "CYAN-GFP-MIB", "cyanGFPGFPId"))
if mibBuilder.loadTexts: cyanGFPEntry.setStatus('current')
if mibBuilder.loadTexts: cyanGFPEntry.setDescription('An entry of GFP.')
cyanGFPShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanGFPShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanGFPShelfId.setDescription('Shelf Id')
cyanGFPModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanGFPModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanGFPModuleId.setDescription('Module Id')
cyanGFPGFPId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanGFPGFPId.setStatus('current')
if mibBuilder.loadTexts: cyanGFPGFPId.setDescription('GFP Termination Id')
cyanGFPAcceptedPayloadFcs = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPAcceptedPayloadFcs.setStatus('current')
if mibBuilder.loadTexts: cyanGFPAcceptedPayloadFcs.setDescription('Accepted payload FCS indicator')
cyanGFPAcceptedPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPAcceptedPayloadType.setStatus('current')
if mibBuilder.loadTexts: cyanGFPAcceptedPayloadType.setDescription('Accepted Payload Type identifier')
cyanGFPAcceptedUserPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPAcceptedUserPayload.setStatus('current')
if mibBuilder.loadTexts: cyanGFPAcceptedUserPayload.setDescription('Accepted User payload identifier')
cyanGFPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 7), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPAdminState.setStatus('current')
if mibBuilder.loadTexts: cyanGFPAdminState.setDescription('Administrative state')
cyanGFPAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPAutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanGFPAutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanGFPClientSignalFail = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 9), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPClientSignalFail.setStatus('current')
if mibBuilder.loadTexts: cyanGFPClientSignalFail.setDescription('Client Signal Fail')
cyanGFPDiscardErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 10), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPDiscardErrorFrames.setStatus('current')
if mibBuilder.loadTexts: cyanGFPDiscardErrorFrames.setDescription('Discard FCS errored frames')
cyanGFPExpectedUserPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 11), CyanGfpUpiTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPExpectedUserPayload.setStatus('current')
if mibBuilder.loadTexts: cyanGFPExpectedUserPayload.setDescription('Expected User payload identifier')
cyanGFPInsertPayloadFcs = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 12), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPInsertPayloadFcs.setStatus('current')
if mibBuilder.loadTexts: cyanGFPInsertPayloadFcs.setDescription('Payload FCS generation')
cyanGFPInsertedUserPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 13), CyanGfpUpiTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPInsertedUserPayload.setStatus('current')
if mibBuilder.loadTexts: cyanGFPInsertedUserPayload.setDescription('Inserted User payload identifier')
cyanGFPOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 14), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPOperState.setStatus('current')
if mibBuilder.loadTexts: cyanGFPOperState.setDescription('Primary Operation State')
cyanGFPOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 15), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPOperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanGFPOperStateQual.setDescription('Operation state qualifier')
cyanGFPPayloadScrambling = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 16), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPPayloadScrambling.setStatus('current')
if mibBuilder.loadTexts: cyanGFPPayloadScrambling.setDescription('Payload scrambling')
cyanGFPSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 1, 1, 1, 17), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanGFPSecServState.setStatus('current')
if mibBuilder.loadTexts: cyanGFPSecServState.setDescription('Secondary service state')
cyanGFPObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 20)).setObjects(("CYAN-GFP-MIB", "cyanGFPAcceptedPayloadFcs"), ("CYAN-GFP-MIB", "cyanGFPAcceptedPayloadType"), ("CYAN-GFP-MIB", "cyanGFPAcceptedUserPayload"), ("CYAN-GFP-MIB", "cyanGFPAdminState"), ("CYAN-GFP-MIB", "cyanGFPAutoinserviceSoakTimeSec"), ("CYAN-GFP-MIB", "cyanGFPClientSignalFail"), ("CYAN-GFP-MIB", "cyanGFPDiscardErrorFrames"), ("CYAN-GFP-MIB", "cyanGFPExpectedUserPayload"), ("CYAN-GFP-MIB", "cyanGFPInsertPayloadFcs"), ("CYAN-GFP-MIB", "cyanGFPInsertedUserPayload"), ("CYAN-GFP-MIB", "cyanGFPOperState"), ("CYAN-GFP-MIB", "cyanGFPOperStateQual"), ("CYAN-GFP-MIB", "cyanGFPPayloadScrambling"), ("CYAN-GFP-MIB", "cyanGFPSecServState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanGFPObjectGroup = cyanGFPObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanGFPObjectGroup.setDescription('Group of objects that comes with GFP module')
cyanGFPCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 210, 30)).setObjects(("CYAN-GFP-MIB", "cyanGFPObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanGFPCompliance = cyanGFPCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanGFPCompliance.setDescription('The basic info needed to be a cyan GFP')
mibBuilder.exportSymbols("CYAN-GFP-MIB", cyanGFPMibObjects=cyanGFPMibObjects, cyanGFPModuleId=cyanGFPModuleId, cyanGFPInsertedUserPayload=cyanGFPInsertedUserPayload, cyanGFPPayloadScrambling=cyanGFPPayloadScrambling, cyanGFPAutoinserviceSoakTimeSec=cyanGFPAutoinserviceSoakTimeSec, cyanGFPDiscardErrorFrames=cyanGFPDiscardErrorFrames, cyanGFPClientSignalFail=cyanGFPClientSignalFail, cyanGFPSecServState=cyanGFPSecServState, cyanGFPAdminState=cyanGFPAdminState, cyanGFPOperStateQual=cyanGFPOperStateQual, cyanGFPCompliance=cyanGFPCompliance, cyanGFPObjectGroup=cyanGFPObjectGroup, cyanGFPTable=cyanGFPTable, cyanGFPOperState=cyanGFPOperState, cyanGFPGFPId=cyanGFPGFPId, cyanGFPShelfId=cyanGFPShelfId, cyanGFPAcceptedPayloadType=cyanGFPAcceptedPayloadType, cyanGFPModule=cyanGFPModule, PYSNMP_MODULE_ID=cyanGFPModule, cyanGFPExpectedUserPayload=cyanGFPExpectedUserPayload, cyanGFPEntry=cyanGFPEntry, cyanGFPAcceptedPayloadFcs=cyanGFPAcceptedPayloadFcs, cyanGFPInsertPayloadFcs=cyanGFPInsertPayloadFcs, cyanGFPAcceptedUserPayload=cyanGFPAcceptedUserPayload)
