#
# PySNMP MIB module CT-FASTPATH-ARPACL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-FASTPATH-ARPACL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:28:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ctArpAclExpMib, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctArpAclExpMib")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, Unsigned32, Counter64, Gauge32, ModuleIdentity, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Bits, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Unsigned32", "Counter64", "Gauge32", "ModuleIdentity", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Bits", "Integer32", "IpAddress")
TruthValue, TextualConvention, RowPointer, RowStatus, PhysAddress, DisplayString, MacAddress, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowPointer", "RowStatus", "PhysAddress", "DisplayString", "MacAddress", "StorageType")
ctFastPathArpAclMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1))
if mibBuilder.loadTexts: ctFastPathArpAclMIB.setLastUpdated('200807231519Z')
if mibBuilder.loadTexts: ctFastPathArpAclMIB.setOrganization('Enterasys Networks, Inc.')
if mibBuilder.loadTexts: ctFastPathArpAclMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: ctFastPathArpAclMIB.setDescription('The Enterasys MIB for FASTPATH ARP ACLs')
ctAgentArpAclGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1))
ctAgentArpAclTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 1), )
if mibBuilder.loadTexts: ctAgentArpAclTable.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclTable.setDescription('A table of the ARP ACL entries')
ctAgentArpAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 1, 1), ).setIndexNames((0, "CT-FASTPATH-ARPACL-MIB", "ctAgentArpAclName"))
if mibBuilder.loadTexts: ctAgentArpAclEntry.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclEntry.setDescription('Represents entry for an ARP ACL')
ctAgentArpAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentArpAclName.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclName.setDescription('Name of the ARP ACL, which must consist of 1 to 31 alphanumeric characters and uniquely identify this ARP ACL. This object must be set to complete a new ARP ACL row instance.')
ctAgentArpAclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentArpAclRowStatus.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRowStatus.setDescription('The status of this conceptual row. Entries can not be deleted until all rows in arpAclRuleTable with corresponding values of arpAclIndex have been deleted. active(1) - this ACL instance is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
ctAgentArpAclRuleTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 2), )
if mibBuilder.loadTexts: ctAgentArpAclRuleTable.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRuleTable.setDescription('A table of the ARP ACL Rule entries')
ctAgentArpAclRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 2, 1), ).setIndexNames((0, "CT-FASTPATH-ARPACL-MIB", "ctAgentArpAclName"), (0, "CT-FASTPATH-ARPACL-MIB", "ctAgentArpAclRuleMatchSenderIpAddr"), (0, "CT-FASTPATH-ARPACL-MIB", "ctAgentArpAclRuleMatchSenderMacAddr"))
if mibBuilder.loadTexts: ctAgentArpAclRuleEntry.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRuleEntry.setDescription('Represents entry for a set of ARP ACL-match rules')
ctAgentArpAclRuleMatchSenderIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentArpAclRuleMatchSenderIpAddr.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRuleMatchSenderIpAddr.setDescription('Sender IP address match value for the ARP ACL.')
ctAgentArpAclRuleMatchSenderMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentArpAclRuleMatchSenderMacAddr.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRuleMatchSenderMacAddr.setDescription('Sender MAC address match value for the ARP ACL.')
ctAgentArpAclRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 34, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentArpAclRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: ctAgentArpAclRuleRowStatus.setDescription('The status of this conceptual row. active(1) - this ACL Rule is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
mibBuilder.exportSymbols("CT-FASTPATH-ARPACL-MIB", ctAgentArpAclRuleRowStatus=ctAgentArpAclRuleRowStatus, ctAgentArpAclName=ctAgentArpAclName, ctFastPathArpAclMIB=ctFastPathArpAclMIB, ctAgentArpAclRuleEntry=ctAgentArpAclRuleEntry, ctAgentArpAclRuleMatchSenderMacAddr=ctAgentArpAclRuleMatchSenderMacAddr, ctAgentArpAclEntry=ctAgentArpAclEntry, ctAgentArpAclGroup=ctAgentArpAclGroup, ctAgentArpAclTable=ctAgentArpAclTable, ctAgentArpAclRowStatus=ctAgentArpAclRowStatus, ctAgentArpAclRuleMatchSenderIpAddr=ctAgentArpAclRuleMatchSenderIpAddr, PYSNMP_MODULE_ID=ctFastPathArpAclMIB, ctAgentArpAclRuleTable=ctAgentArpAclRuleTable)
