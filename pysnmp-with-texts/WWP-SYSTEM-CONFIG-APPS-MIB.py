#
# PySNMP MIB module WWP-SYSTEM-CONFIG-APPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-SYSTEM-CONFIG-APPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, Gauge32, Counter32, Bits, ObjectIdentity, Integer32, IpAddress, iso, Counter64, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Gauge32", "Counter32", "Bits", "ObjectIdentity", "Integer32", "IpAddress", "iso", "Counter64", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpSystemConfAppsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 20))
wwpSystemConfAppsMIB.setRevisions(('2001-04-03 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpSystemConfAppsMIB.setRevisionsDescriptions(('Initial creation.',))
if mibBuilder.loadTexts: wwpSystemConfAppsMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpSystemConfAppsMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpSystemConfAppsMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpSystemConfAppsMIB.setDescription('The MIB module to define primary and backup configs and apps for wwp products.')
wwpSystemConfAppsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1))
wwpSystemApps = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1))
wwpSystemConf = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2))
wwpSystemConfAppsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 2))
wwpSystemConfAppsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 2, 0))
wwpSystemConfAppsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 3))
wwpSystemConfAppsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 3, 1))
wwpSystemConfAppsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 20, 3, 2))
wwpSystemRunningApps = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemRunningApps.setStatus('current')
if mibBuilder.loadTexts: wwpSystemRunningApps.setDescription('Name of the current running Apps.')
wwpSystemAppsSwapActivate = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemAppsSwapActivate.setStatus('current')
if mibBuilder.loadTexts: wwpSystemAppsSwapActivate.setDescription('Setting this object to true swaps the primary and secondary APPS. The object return to false once the swap operation is completed.')
wwpSystemAppsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 3), )
if mibBuilder.loadTexts: wwpSystemAppsTable.setStatus('current')
if mibBuilder.loadTexts: wwpSystemAppsTable.setDescription('The (conceptual) table listing the Apps')
wwpSystemAppsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 3, 1), ).setIndexNames((0, "WWP-SYSTEM-CONFIG-APPS-MIB", "wwpSystemAppsImage"))
if mibBuilder.loadTexts: wwpSystemAppsEntry.setStatus('current')
if mibBuilder.loadTexts: wwpSystemAppsEntry.setDescription('An entry (conceptual row) in the wwpSystemAppsTable.')
wwpSystemAppsImage = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemAppsImage.setStatus('current')
if mibBuilder.loadTexts: wwpSystemAppsImage.setDescription('The object indicates whether this image is primary or backup.')
wwpSystemAppsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemAppsName.setStatus('current')
if mibBuilder.loadTexts: wwpSystemAppsName.setDescription('The name of the Apps including the path.')
wwpSystemBackupNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemBackupNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: wwpSystemBackupNotifEnabled.setDescription('This variable indicates whether the system generates the wwpSystemBackupAppNotification. A false value prevents this notifications from being generated by this system.')
wwpSystemConfTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 1), )
if mibBuilder.loadTexts: wwpSystemConfTable.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConfTable.setDescription('The (conceptual) table listing the configs')
wwpSystemConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 1, 1), ).setIndexNames((0, "WWP-SYSTEM-CONFIG-APPS-MIB", "wwpSystemConfIndex"))
if mibBuilder.loadTexts: wwpSystemConfEntry.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConfEntry.setDescription('An entry (conceptual row) in the wwpSystemConfTable.')
wwpSystemConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemConfIndex.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConfIndex.setDescription('Unique identifier to the table.')
wwpSystemConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemConfName.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConfName.setDescription('The name of the Config file including the path.')
wwpSystemBootConfName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemBootConfName.setStatus('current')
if mibBuilder.loadTexts: wwpSystemBootConfName.setDescription('Name of the config file which will be used when the system is rebooted.')
wwpSystemConfSaveName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 20, 1, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemConfSaveName.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConfSaveName.setDescription('Name of the config file to which the current config should be saved.')
wwpSystemLoadBackupAppNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 20, 2, 0, 1)).setObjects(("WWP-SYSTEM-CONFIG-APPS-MIB", "wwpSystemAppsName"))
if mibBuilder.loadTexts: wwpSystemLoadBackupAppNotification.setStatus('current')
if mibBuilder.loadTexts: wwpSystemLoadBackupAppNotification.setDescription('This notification will be sent, whenever the system decide to load the backup image.')
mibBuilder.exportSymbols("WWP-SYSTEM-CONFIG-APPS-MIB", wwpSystemConfIndex=wwpSystemConfIndex, wwpSystemRunningApps=wwpSystemRunningApps, wwpSystemApps=wwpSystemApps, wwpSystemConf=wwpSystemConf, wwpSystemConfName=wwpSystemConfName, PYSNMP_MODULE_ID=wwpSystemConfAppsMIB, wwpSystemConfAppsMIBObjects=wwpSystemConfAppsMIBObjects, wwpSystemConfEntry=wwpSystemConfEntry, wwpSystemBackupNotifEnabled=wwpSystemBackupNotifEnabled, wwpSystemAppsSwapActivate=wwpSystemAppsSwapActivate, wwpSystemConfAppsMIBNotificationPrefix=wwpSystemConfAppsMIBNotificationPrefix, wwpSystemAppsEntry=wwpSystemAppsEntry, wwpSystemAppsName=wwpSystemAppsName, wwpSystemConfTable=wwpSystemConfTable, wwpSystemLoadBackupAppNotification=wwpSystemLoadBackupAppNotification, wwpSystemAppsImage=wwpSystemAppsImage, wwpSystemBootConfName=wwpSystemBootConfName, wwpSystemConfAppsMIBConformance=wwpSystemConfAppsMIBConformance, wwpSystemAppsTable=wwpSystemAppsTable, wwpSystemConfAppsMIBGroups=wwpSystemConfAppsMIBGroups, wwpSystemConfAppsMIB=wwpSystemConfAppsMIB, wwpSystemConfAppsMIBNotifications=wwpSystemConfAppsMIBNotifications, wwpSystemConfAppsMIBCompliances=wwpSystemConfAppsMIBCompliances, wwpSystemConfSaveName=wwpSystemConfSaveName)
