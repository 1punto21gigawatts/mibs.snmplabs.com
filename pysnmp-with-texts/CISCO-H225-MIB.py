#
# PySNMP MIB module CISCO-H225-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-H225-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, TimeTicks, ModuleIdentity, Integer32, NotificationType, MibIdentifier, ObjectIdentity, Counter64, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "TimeTicks", "ModuleIdentity", "Integer32", "NotificationType", "MibIdentifier", "ObjectIdentity", "Counter64", "Unsigned32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoH225MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 397))
ciscoH225MIB.setRevisions(('2004-11-24 00:00', '2004-03-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoH225MIB.setRevisionsDescriptions(('Added Disconnection Cause Codes to the MIB as separate table.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoH225MIB.setLastUpdated('200411240000Z')
if mibBuilder.loadTexts: ciscoH225MIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoH225MIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-h323@cisco.com')
if mibBuilder.loadTexts: ciscoH225MIB.setDescription('Cisco H225 MIB module. This module consists of H225 call signaling and H225 RAS (Registration, Admission and Status). These are protocols specified by H323 for transmission of real-time audio, video and data over packet-based networks. H225 call signaling is used to set up connections between H323 endpoints such as terminals and gateways, over which the real-time data can be transported. H225 RAS is the protocol between endpoints (terminals and gateways) and gatekeepers.')
h225MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1))
h225CallSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1))
h225Ras = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2))
h225MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3))
h225DisconnectCauseCode = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4))
class CauseCodeType(TextualConvention, Integer32):
    reference = 'ITU-T Q.931'
    description = 'The decimal value of the cause code representing the cause for disconnection.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 55, 57, 58, 62, 63, 65, 66, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 126, 127, 128, 129, 160, 170, 171, 172, 180, 250, 251, 256))
    namedValues = NamedValues(("unallocatedNumber", 1), ("noRouteToSpecifiedTransitNetwork", 2), ("noRouteToDestination", 3), ("sendSpecialInformationTone", 4), ("misdialledTrunkPrefix", 5), ("channelUnacceptable", 6), ("callAwardedAndDelivered", 7), ("preemption", 8), ("preemptionCircuitReserved", 9), ("glare", 15), ("normalCallClearing", 16), ("userBusy", 17), ("noUserResponding", 18), ("noAnswerFromUser", 19), ("subscriberAbsent", 20), ("callRejected", 21), ("numberChanged", 22), ("redirectionToNewDestination", 23), ("exchangeRoutingError", 25), ("nonSelectedUserClearing", 26), ("destinationOutOfOrder", 27), ("invalidNumberORAddressIncomplete", 28), ("facilityRejected", 29), ("responseToSTATUSENQUIRY", 30), ("normalUnspecified", 31), ("nocircuitORchannelAvailable", 34), ("requestedVPCIorVCINotAvailable", 35), ("vpciORvciAssignmentFailure", 36), ("cellRateNotAvailable", 37), ("networkOutOfOrder", 38), ("permanentFrameModeOutOfService", 39), ("permanentFrameModeOperational", 40), ("temporaryFailure", 41), ("switchingEquipmentCongestion", 42), ("accessInformationDiscarded", 43), ("noRequestedCircuitORchannel", 44), ("noVPCIorVCIAvailable", 45), ("precedenceCallBlocked", 46), ("resourceUnavailableUnspecified", 47), ("qualityOfServiceNotAvailable", 49), ("requestedFacilityNotSubscribed", 50), ("outgoingCallsBarredWithinCUG", 53), ("incomingCallsBarredWithinCUG", 55), ("bearerCapabilityNotAuthorized", 57), ("bearerCapabilityNotAvailable", 58), ("inconsistencyInOutgoingInfo", 62), ("noServiceOROption", 63), ("bearerCapabilityNotImplemented", 65), ("channelTypeNotImplemented", 66), ("requestedFacilityNotImplemented", 69), ("onlyRestrictedDigitalInfoBC", 70), ("serviceOROptionNotImplemented", 79), ("invalidCallReferenceValue", 81), ("identifiedChannelDoesNotExist", 82), ("callExistsButCallIdentityDoesNot", 83), ("callIdentityInUse", 84), ("noCallSuspended", 85), ("requestedCallIdentityCleared", 86), ("userNotMemberOfCUG", 87), ("incompatibleDestination", 88), ("nonExistentCUG", 90), ("invalidTransitNetworkSelection", 91), ("allParametersNotSupported", 93), ("invalidMessageUnspecified", 95), ("mandatoryInfoElementMissing", 96), ("messageTypeNotImplemented", 97), ("messageInCompatible", 98), ("infoElementORNotImplemented", 99), ("invalidInfoElementContents", 100), ("messageInCompatibleCallState", 101), ("recoveryOnTimerExpiry", 102), ("nonImplementedParamPassedon", 103), ("unrecognizedParamMSGDiscarded", 110), ("protocolErrorUnspecified", 111), ("noVoiceResource", 126), ("interworkingUnspecified", 127), ("nextNodeUnreachable", 128), ("htspmOutOfService", 129), ("dtlTransitNotNodeId", 160), ("noDSPChannel", 170), ("codecIncompatible", 171), ("dspError", 172), ("glaringSwitchPRI", 180), ("sipUndefinedMapped", 250), ("sipUndefinedUnmapped", 251), ("unknownCauseCodeType", 256))

h225CallSignalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1))
h225CallSignalStatsSetupIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupIns.setDescription('The number of Setup messages received by this entity.')
h225CallSignalStatsSetupOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupOuts.setDescription('The number of Setup messages sent by this entity.')
h225CallSignalStatsSetupFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupFails.setDescription('The number of Setup messages that could not be sent by this entity.')
h225CallSignalStatsSetupConfIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupConfIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupConfIns.setDescription('The number of Setup Confirmation messages received by this entity. Processing this message on receipt is optional.')
h225CallSignalStatsSetupConfOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupConfOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupConfOuts.setDescription('The number of Setup Confirmation messages sent by this entity.')
h225CallSignalStatsSetupConFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsSetupConFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsSetupConFails.setDescription('The number of Setup Confirmation messages that could not be sent by this entity.')
h225CallSignalStatsAlertingIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsAlertingIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsAlertingIns.setDescription('The number of alerting messages received by this entity.')
h225CallSignalStatsAlertingOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsAlertingOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsAlertingOuts.setDescription('The number of alerting messages sent by this entity.')
h225CallSignalStatsAlertingFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsAlertingFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsAlertingFails.setDescription('The number of alerting messages that could not be sent by this entity.')
h225CallSignalStatsProgIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsProgIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsProgIns.setDescription('The number of Progress messages received by this entity.')
h225CallSignalStatsProgOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsProgOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsProgOuts.setDescription('The number of Progress messages sent by this entity.')
h225CallSignalStatsProgFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsProgFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsProgFails.setDescription('The number of Progress messages that could not be sent by this entity.')
h225CallSignalStatsCallProcsIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsCallProcsIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsCallProcsIns.setDescription('The number of Call Proceeding messages received by this entity.')
h225CallSignalStatsCallProcsOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsCallProcsOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsCallProcsOuts.setDescription('The number of Call Proceeding messages sent by this entity.')
h225CallSignalStatsCallProcFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsCallProcFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsCallProcFails.setDescription('The number of Call Proceeding messages that could not be sent by is entity.')
h225CallSignalStatsNotifyIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsNotifyIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsNotifyIns.setDescription('The number of Notify messages received by this entity.')
h225CallSignalStatsNotifyOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsNotifyOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsNotifyOuts.setDescription('The number of Notify messages sent by this entity.')
h225CallSignalStatsNotifyFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsNotifyFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsNotifyFails.setDescription('The number of Notify messages that could not be sent by this entity.')
h225CallSignalStatsInfoIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsInfoIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsInfoIns.setDescription('The number of Information messages received by this entity.')
h225CallSignalStatsInfoOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsInfoOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsInfoOuts.setDescription('The number of Information messages sent by this entity.')
h225CallSignalStatsInfoFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsInfoFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsInfoFails.setDescription('The number of Information messages that could not be sent by this entity.')
h225CallSignalStatsUserInfoIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoIns.setDescription('The number of User Information messages received by this entity.')
h225CallSignalStatsUserInfoOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoOuts.setDescription('The number of User Information messages sent by this entity.')
h225CallSignalStatsUserInfoFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsUserInfoFails.setDescription('The number of User Information messages that could not be sent by is entity.')
h225CallSignalStatsFacilityIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsFacilityIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsFacilityIns.setDescription('The number of Facility messages received by this entity.')
h225CallSignalStatsFacilityOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsFacilityOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsFacilityOuts.setDescription('The number of Facility messages sent by this entity.')
h225CallSignalStatsFacilityFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsFacilityFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsFacilityFails.setDescription('The number of Facility messages that could not be sent by this entity.')
h225CallSignalStatsReleaseIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsReleaseIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsReleaseIns.setDescription('The number of Release Complete messages received by this entity.')
h225CallSignalStatsReleaseOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsReleaseOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsReleaseOuts.setDescription('The number of Release Complete messages sent by this entity.')
h225CallSignalStatsReleaseFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsReleaseFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsReleaseFails.setDescription('The number of Release Complete messages that could not be sent by this entity.')
h225CallSignalStatsRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsRejectIns.setDescription('The number of Reject messages received by this entity.')
h225CallSignalStatsRejectOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsRejectOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsRejectOuts.setDescription('The number of Reject messages sent by this entity.')
h225CallSignalStatsRejectFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsRejectFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsRejectFails.setDescription('The number of Reject messages that could not be sent by this entity.')
h225CallSignalStatsPassthroIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsPassthroIns.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsPassthroIns.setDescription('The number of Passthrough messages received by this entity.')
h225CallSignalStatsPassthroOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsPassthroOuts.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsPassthroOuts.setDescription('The number of Passthrough messages sent by this entity.')
h225CallSignalStatsPassthroFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CallSignalStatsPassthroFails.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsPassthroFails.setDescription('The number of Passthrough messages that could not be sent by this entity.')
h225RasStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1))
h225RasStatsGkDiscoveryReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryReqIns.setDescription('The number of Gate Keeper Discovery requests received by this entity.')
h225RasStatsGkDiscoveryReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryReqOuts.setDescription('The number of Gate Keeper Discovery requests sent by this entity.')
h225RasStatsGkDiscoveryConfIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryConfIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryConfIns.setDescription('The number of Gate Keeper Discovery confirmations received by this entity.')
h225RasStatsGkDiscoveryConfOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryConfOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryConfOuts.setDescription('The number of Gate Keeper Discovery confirmations sent by this entity.')
h225RasStatsGkDiscoveryRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryRejectIns.setDescription('The number of Gate Keeper Discovery rejects received by this entity.')
h225RasStatsGkDiscoveryRejOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryRejOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGkDiscoveryRejOuts.setDescription('The number of Gate Keeper Discovery rejects sent by this entity.')
h225RasStatsRegistrationReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationReqIns.setDescription('The number of Registration requests received by this entity.')
h225RasStatsRegistrationReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationReqOuts.setDescription('The number of Registration requests sent by this entity.')
h225RasStatsRegistrationConfIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationConfIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationConfIns.setDescription('The number of Registration confirmations received by this entity.')
h225RasStatsRegistrationConfOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationConfOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationConfOuts.setDescription('The number of Registration confirmations sent by this entity.')
h225RasStatsRegistrationRejIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationRejIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationRejIns.setDescription('The number of Registration rejects received by this entity.')
h225RasStatsRegistrationRejOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRegistrationRejOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRegistrationRejOuts.setDescription('The number of Registration rejects sent by this entity.')
h225RasStatsAdmissionReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionReqIns.setDescription('The number of Admission requests received by this entity.')
h225RasStatsAdmissionReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionReqOuts.setDescription('The number of Admission requests sent by this entity.')
h225RasStatsAdmissionConfirmIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionConfirmIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionConfirmIns.setDescription('The number of Admission confirmations received by this entity.')
h225RasStatsAdmissionConfirmOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionConfirmOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionConfirmOuts.setDescription('The number of Admission confirmations sent by this entity.')
h225RasStatsAdmissionRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionRejectIns.setDescription('The number of Admission rejects received by this entity.')
h225RasStatsAdmissionRejectOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsAdmissionRejectOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsAdmissionRejectOuts.setDescription('The number of Admission rejects sent by this entity.')
h225RasStatsBandwidthReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthReqIns.setDescription('The number of Bandwidth requests received by this entity.')
h225RasStatsBandwidthReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthReqOuts.setDescription('The number of Bandwidth requests sent by this entity.')
h225RasStatsBandwidthConfirmIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthConfirmIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthConfirmIns.setDescription('The number of Bandwidth confirmations received by this entity.')
h225RasStatsBandwidthConfirmOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthConfirmOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthConfirmOuts.setDescription('The number of Bandwidth confirmations sent by this entity.')
h225RasStatsBandwidthRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthRejectIns.setDescription('The number of Bandwidth rejects received by this entity.')
h225RasStatsBandwidthRejectOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsBandwidthRejectOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsBandwidthRejectOuts.setDescription('The number of Bandwidth rejects sent by this entity.')
h225RasStatsDisengageReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageReqIns.setDescription('The number of Disengage requests received by this entity.')
h225RasStatsDisengageReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageReqOuts.setDescription('The number of Disengage requests sent by this entity.')
h225RasStatsDisengageConfirmIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageConfirmIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageConfirmIns.setDescription('The number of Disengage confirmations received by this entity.')
h225RasStatsDisengageConfirmOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageConfirmOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageConfirmOuts.setDescription('The number of Disengage confirmations sent by this entity.')
h225RasStatsDisengageRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageRejectIns.setDescription('The number of Disengage rejects received by this entity.')
h225RasStatsDisengageRejectOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsDisengageRejectOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsDisengageRejectOuts.setDescription('The number of Disengage rejects sent by this entity.')
h225RasStatsUnregisterReqIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterReqIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterReqIns.setDescription('The number of Unregister requests received by this entity.')
h225RasStatsUnregisterReqOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterReqOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterReqOuts.setDescription('The number of Unregister requests sent by this entity.')
h225RasStatsUnregisterConfirmIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterConfirmIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterConfirmIns.setDescription('The number of Unregister confirmations received by this entity.')
h225RasStatsUnregisterConfOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterConfOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterConfOuts.setDescription('The number of Unregister confirmations sent by this entity.')
h225RasStatsUnregisterRejectIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterRejectIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterRejectIns.setDescription('The number of Unregister rejects received by this entity.')
h225RasStatsUnregisterRejectOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsUnregisterRejectOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsUnregisterRejectOuts.setDescription('The number of Unregister rejects sent by this entity.')
h225RasStatsResourceAvailIndIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsResourceAvailIndIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsResourceAvailIndIns.setDescription('The number of Resource Availability Indications received by this entity.')
h225RasStatsResourceAvailIndOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsResourceAvailIndOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsResourceAvailIndOuts.setDescription('The number of Resource Availability Indications sent by this entity.')
h225RasStatsResourceAvailConfIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsResourceAvailConfIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsResourceAvailConfIns.setDescription('The number of Resource Availability Indication confirmations received by this entity.')
h225RasStatsResourceAvailConOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsResourceAvailConOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsResourceAvailConOuts.setDescription('The number of Resource Availability Indication confirmations sent by this entity.')
h225RasStatsRequestInProgIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRequestInProgIns.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRequestInProgIns.setDescription('The number of Request In Progress requests received by this entity.')
h225RasStatsRequestInProgOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225RasStatsRequestInProgOuts.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsRequestInProgOuts.setDescription('The number of Request In Progress requests sent by this entity.')
h225DisconnectCauseCodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1), )
if mibBuilder.loadTexts: h225DisconnectCauseCodeTable.setStatus('current')
if mibBuilder.loadTexts: h225DisconnectCauseCodeTable.setDescription('The list of disconnect cause codes that the H.323 subsystem has received. A disconnect can originate either from the far-end gateway or from the opposite call leg on the local gateway. Whenever a disconnect occurs the entry in the table will be updated by the agent. The cause for disconnect is mapped to one of cause codes and if an entry for the cause code exists in the table, number of disconnects is incremented for that entry, otherwise a new entry is made with cause code as index.')
h225DisconnectCauseCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-H225-MIB", "h225CauseCode"))
if mibBuilder.loadTexts: h225DisconnectCauseCodeEntry.setStatus('current')
if mibBuilder.loadTexts: h225DisconnectCauseCodeEntry.setDescription('The table entry consists of an entry for each cause code. This entry consists of cause code, description of the code and number of disconnects that have been received from the opposite call leg on the local gateway and far-end H323 gateway. ')
h225CauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1, 1, 1), CauseCodeType())
if mibBuilder.loadTexts: h225CauseCode.setReference('ITU-T Q.931')
if mibBuilder.loadTexts: h225CauseCode.setStatus('current')
if mibBuilder.loadTexts: h225CauseCode.setDescription('The decimal value of the cause code representing the cause for disconnection.')
h225CauseCodeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225CauseCodeDescription.setStatus('current')
if mibBuilder.loadTexts: h225CauseCodeDescription.setDescription('The object contains the textual description of the cause code')
h225FromOtherPeerDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225FromOtherPeerDisconnects.setStatus('current')
if mibBuilder.loadTexts: h225FromOtherPeerDisconnects.setDescription('Number of disconnects that have been received from the opposite call leg on the local gateway for the cause code(for example, from PRI T1 POTS peer or a Foreign exchange station [FXS]POTS peer)')
h225FromH323PeerDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h225FromH323PeerDisconnects.setStatus('current')
if mibBuilder.loadTexts: h225FromH323PeerDisconnects.setDescription('Number of disconnects that have been received from the far-end H323 gateway for the cause code')
h225MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 1))
h225MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 2))
h225MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 1, 1)).setObjects(("CISCO-H225-MIB", "h225CallSignalStatsGroup"), ("CISCO-H225-MIB", "h225RasStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h225MIBCompliance = h225MIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: h225MIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-H225-MIB')
h225MIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 1, 2)).setObjects(("CISCO-H225-MIB", "h225CallSignalStatsGroup"), ("CISCO-H225-MIB", "h225RasStatsGroup"), ("CISCO-H225-MIB", "h225DisconnectCauseCodeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h225MIBComplianceRev1 = h225MIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: h225MIBComplianceRev1.setDescription('The compliance statement for entities which implement the CISCO-H225-MIB')
h225CallSignalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 2, 1)).setObjects(("CISCO-H225-MIB", "h225CallSignalStatsSetupIns"), ("CISCO-H225-MIB", "h225CallSignalStatsSetupOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsSetupFails"), ("CISCO-H225-MIB", "h225CallSignalStatsSetupConfIns"), ("CISCO-H225-MIB", "h225CallSignalStatsSetupConfOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsSetupConFails"), ("CISCO-H225-MIB", "h225CallSignalStatsAlertingIns"), ("CISCO-H225-MIB", "h225CallSignalStatsAlertingOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsAlertingFails"), ("CISCO-H225-MIB", "h225CallSignalStatsProgIns"), ("CISCO-H225-MIB", "h225CallSignalStatsProgOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsProgFails"), ("CISCO-H225-MIB", "h225CallSignalStatsCallProcsIns"), ("CISCO-H225-MIB", "h225CallSignalStatsCallProcsOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsCallProcFails"), ("CISCO-H225-MIB", "h225CallSignalStatsNotifyIns"), ("CISCO-H225-MIB", "h225CallSignalStatsNotifyOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsNotifyFails"), ("CISCO-H225-MIB", "h225CallSignalStatsInfoIns"), ("CISCO-H225-MIB", "h225CallSignalStatsInfoOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsInfoFails"), ("CISCO-H225-MIB", "h225CallSignalStatsUserInfoIns"), ("CISCO-H225-MIB", "h225CallSignalStatsUserInfoOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsUserInfoFails"), ("CISCO-H225-MIB", "h225CallSignalStatsFacilityIns"), ("CISCO-H225-MIB", "h225CallSignalStatsFacilityOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsFacilityFails"), ("CISCO-H225-MIB", "h225CallSignalStatsReleaseIns"), ("CISCO-H225-MIB", "h225CallSignalStatsReleaseOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsReleaseFails"), ("CISCO-H225-MIB", "h225CallSignalStatsRejectIns"), ("CISCO-H225-MIB", "h225CallSignalStatsRejectOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsRejectFails"), ("CISCO-H225-MIB", "h225CallSignalStatsPassthroIns"), ("CISCO-H225-MIB", "h225CallSignalStatsPassthroOuts"), ("CISCO-H225-MIB", "h225CallSignalStatsPassthroFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h225CallSignalStatsGroup = h225CallSignalStatsGroup.setStatus('current')
if mibBuilder.loadTexts: h225CallSignalStatsGroup.setDescription('A collection of objects providing the H225 call signaling statistics.')
h225RasStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 2, 2)).setObjects(("CISCO-H225-MIB", "h225RasStatsGkDiscoveryReqIns"), ("CISCO-H225-MIB", "h225RasStatsGkDiscoveryReqOuts"), ("CISCO-H225-MIB", "h225RasStatsGkDiscoveryConfIns"), ("CISCO-H225-MIB", "h225RasStatsGkDiscoveryConfOuts"), ("CISCO-H225-MIB", "h225RasStatsGkDiscoveryRejectIns"), ("CISCO-H225-MIB", "h225RasStatsGkDiscoveryRejOuts"), ("CISCO-H225-MIB", "h225RasStatsRegistrationReqIns"), ("CISCO-H225-MIB", "h225RasStatsRegistrationReqOuts"), ("CISCO-H225-MIB", "h225RasStatsRegistrationConfIns"), ("CISCO-H225-MIB", "h225RasStatsRegistrationConfOuts"), ("CISCO-H225-MIB", "h225RasStatsRegistrationRejIns"), ("CISCO-H225-MIB", "h225RasStatsRegistrationRejOuts"), ("CISCO-H225-MIB", "h225RasStatsAdmissionReqIns"), ("CISCO-H225-MIB", "h225RasStatsAdmissionReqOuts"), ("CISCO-H225-MIB", "h225RasStatsAdmissionConfirmIns"), ("CISCO-H225-MIB", "h225RasStatsAdmissionConfirmOuts"), ("CISCO-H225-MIB", "h225RasStatsAdmissionRejectIns"), ("CISCO-H225-MIB", "h225RasStatsAdmissionRejectOuts"), ("CISCO-H225-MIB", "h225RasStatsBandwidthReqIns"), ("CISCO-H225-MIB", "h225RasStatsBandwidthReqOuts"), ("CISCO-H225-MIB", "h225RasStatsBandwidthConfirmIns"), ("CISCO-H225-MIB", "h225RasStatsBandwidthConfirmOuts"), ("CISCO-H225-MIB", "h225RasStatsBandwidthRejectIns"), ("CISCO-H225-MIB", "h225RasStatsBandwidthRejectOuts"), ("CISCO-H225-MIB", "h225RasStatsDisengageReqIns"), ("CISCO-H225-MIB", "h225RasStatsDisengageReqOuts"), ("CISCO-H225-MIB", "h225RasStatsDisengageConfirmIns"), ("CISCO-H225-MIB", "h225RasStatsDisengageConfirmOuts"), ("CISCO-H225-MIB", "h225RasStatsDisengageRejectIns"), ("CISCO-H225-MIB", "h225RasStatsDisengageRejectOuts"), ("CISCO-H225-MIB", "h225RasStatsUnregisterReqIns"), ("CISCO-H225-MIB", "h225RasStatsUnregisterReqOuts"), ("CISCO-H225-MIB", "h225RasStatsUnregisterConfirmIns"), ("CISCO-H225-MIB", "h225RasStatsUnregisterConfOuts"), ("CISCO-H225-MIB", "h225RasStatsUnregisterRejectIns"), ("CISCO-H225-MIB", "h225RasStatsUnregisterRejectOuts"), ("CISCO-H225-MIB", "h225RasStatsResourceAvailIndIns"), ("CISCO-H225-MIB", "h225RasStatsResourceAvailIndOuts"), ("CISCO-H225-MIB", "h225RasStatsResourceAvailConfIns"), ("CISCO-H225-MIB", "h225RasStatsResourceAvailConOuts"), ("CISCO-H225-MIB", "h225RasStatsRequestInProgIns"), ("CISCO-H225-MIB", "h225RasStatsRequestInProgOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h225RasStatsGroup = h225RasStatsGroup.setStatus('current')
if mibBuilder.loadTexts: h225RasStatsGroup.setDescription('A collection of objects providing the H225 Registration, Admission and Status statistics.')
h225DisconnectCauseCodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 397, 1, 3, 2, 3)).setObjects(("CISCO-H225-MIB", "h225CauseCodeDescription"), ("CISCO-H225-MIB", "h225FromOtherPeerDisconnects"), ("CISCO-H225-MIB", "h225FromH323PeerDisconnects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h225DisconnectCauseCodeGroup = h225DisconnectCauseCodeGroup.setStatus('current')
if mibBuilder.loadTexts: h225DisconnectCauseCodeGroup.setDescription('A collection of objects providing details of Disconnect cause codes that the H.323 subsystem has received. ')
mibBuilder.exportSymbols("CISCO-H225-MIB", h225CallSignalStatsSetupIns=h225CallSignalStatsSetupIns, h225FromH323PeerDisconnects=h225FromH323PeerDisconnects, h225RasStatsAdmissionReqIns=h225RasStatsAdmissionReqIns, h225CallSignalStatsGroup=h225CallSignalStatsGroup, h225MIBGroups=h225MIBGroups, h225CallSignalStatsReleaseIns=h225CallSignalStatsReleaseIns, h225DisconnectCauseCodeTable=h225DisconnectCauseCodeTable, CauseCodeType=CauseCodeType, h225CallSignalStatsInfoOuts=h225CallSignalStatsInfoOuts, h225Ras=h225Ras, h225DisconnectCauseCodeGroup=h225DisconnectCauseCodeGroup, h225RasStatsResourceAvailIndOuts=h225RasStatsResourceAvailIndOuts, h225CallSignalStats=h225CallSignalStats, h225RasStatsRegistrationConfOuts=h225RasStatsRegistrationConfOuts, h225RasStatsResourceAvailIndIns=h225RasStatsResourceAvailIndIns, h225RasStatsDisengageRejectIns=h225RasStatsDisengageRejectIns, h225RasStatsResourceAvailConOuts=h225RasStatsResourceAvailConOuts, h225CallSignalStatsRejectIns=h225CallSignalStatsRejectIns, h225RasStatsRegistrationReqOuts=h225RasStatsRegistrationReqOuts, h225RasStatsUnregisterReqIns=h225RasStatsUnregisterReqIns, h225RasStatsUnregisterRejectIns=h225RasStatsUnregisterRejectIns, h225CallSignalStatsReleaseOuts=h225CallSignalStatsReleaseOuts, h225RasStatsGkDiscoveryReqIns=h225RasStatsGkDiscoveryReqIns, h225CauseCode=h225CauseCode, h225RasStatsAdmissionRejectIns=h225RasStatsAdmissionRejectIns, h225CallSignalStatsSetupConFails=h225CallSignalStatsSetupConFails, h225CallSignalStatsNotifyOuts=h225CallSignalStatsNotifyOuts, h225RasStatsUnregisterReqOuts=h225RasStatsUnregisterReqOuts, h225DisconnectCauseCodeEntry=h225DisconnectCauseCodeEntry, h225CallSignalStatsProgFails=h225CallSignalStatsProgFails, h225RasStatsGroup=h225RasStatsGroup, h225CallSignalStatsCallProcsIns=h225CallSignalStatsCallProcsIns, h225CallSignalStatsNotifyIns=h225CallSignalStatsNotifyIns, h225CallSignalStatsRejectFails=h225CallSignalStatsRejectFails, h225RasStatsAdmissionRejectOuts=h225RasStatsAdmissionRejectOuts, h225CallSignalStatsRejectOuts=h225CallSignalStatsRejectOuts, PYSNMP_MODULE_ID=ciscoH225MIB, h225MIBConformance=h225MIBConformance, h225CallSignalStatsSetupConfIns=h225CallSignalStatsSetupConfIns, h225CallSignalStatsAlertingFails=h225CallSignalStatsAlertingFails, h225RasStatsResourceAvailConfIns=h225RasStatsResourceAvailConfIns, h225RasStatsRequestInProgIns=h225RasStatsRequestInProgIns, h225RasStatsAdmissionConfirmOuts=h225RasStatsAdmissionConfirmOuts, h225CallSignalStatsSetupFails=h225CallSignalStatsSetupFails, h225DisconnectCauseCode=h225DisconnectCauseCode, h225CallSignalStatsCallProcsOuts=h225CallSignalStatsCallProcsOuts, h225RasStatsGkDiscoveryReqOuts=h225RasStatsGkDiscoveryReqOuts, h225RasStats=h225RasStats, h225RasStatsDisengageConfirmIns=h225RasStatsDisengageConfirmIns, h225RasStatsGkDiscoveryConfIns=h225RasStatsGkDiscoveryConfIns, h225MIBObjects=h225MIBObjects, h225CallSignalStatsSetupOuts=h225CallSignalStatsSetupOuts, h225RasStatsBandwidthRejectOuts=h225RasStatsBandwidthRejectOuts, h225CallSignalStatsProgIns=h225CallSignalStatsProgIns, h225RasStatsRegistrationConfIns=h225RasStatsRegistrationConfIns, h225CallSignalStatsCallProcFails=h225CallSignalStatsCallProcFails, h225CallSignalStatsSetupConfOuts=h225CallSignalStatsSetupConfOuts, h225RasStatsGkDiscoveryRejOuts=h225RasStatsGkDiscoveryRejOuts, h225RasStatsAdmissionReqOuts=h225RasStatsAdmissionReqOuts, h225RasStatsBandwidthConfirmOuts=h225RasStatsBandwidthConfirmOuts, h225CauseCodeDescription=h225CauseCodeDescription, h225CallSignalStatsInfoIns=h225CallSignalStatsInfoIns, h225CallSignalStatsPassthroIns=h225CallSignalStatsPassthroIns, h225RasStatsRegistrationRejOuts=h225RasStatsRegistrationRejOuts, h225RasStatsBandwidthRejectIns=h225RasStatsBandwidthRejectIns, h225MIBCompliance=h225MIBCompliance, h225RasStatsDisengageRejectOuts=h225RasStatsDisengageRejectOuts, h225FromOtherPeerDisconnects=h225FromOtherPeerDisconnects, h225CallSignalStatsFacilityFails=h225CallSignalStatsFacilityFails, h225RasStatsRegistrationRejIns=h225RasStatsRegistrationRejIns, h225RasStatsUnregisterRejectOuts=h225RasStatsUnregisterRejectOuts, h225RasStatsDisengageReqOuts=h225RasStatsDisengageReqOuts, h225RasStatsRegistrationReqIns=h225RasStatsRegistrationReqIns, h225RasStatsAdmissionConfirmIns=h225RasStatsAdmissionConfirmIns, h225CallSignalStatsUserInfoOuts=h225CallSignalStatsUserInfoOuts, h225CallSignalStatsProgOuts=h225CallSignalStatsProgOuts, h225RasStatsDisengageConfirmOuts=h225RasStatsDisengageConfirmOuts, h225MIBCompliances=h225MIBCompliances, h225RasStatsUnregisterConfirmIns=h225RasStatsUnregisterConfirmIns, h225RasStatsGkDiscoveryRejectIns=h225RasStatsGkDiscoveryRejectIns, h225CallSignalStatsNotifyFails=h225CallSignalStatsNotifyFails, h225CallSignalStatsUserInfoIns=h225CallSignalStatsUserInfoIns, ciscoH225MIB=ciscoH225MIB, h225CallSignalStatsPassthroFails=h225CallSignalStatsPassthroFails, h225CallSignalStatsFacilityIns=h225CallSignalStatsFacilityIns, h225RasStatsBandwidthConfirmIns=h225RasStatsBandwidthConfirmIns, h225CallSignalStatsReleaseFails=h225CallSignalStatsReleaseFails, h225RasStatsGkDiscoveryConfOuts=h225RasStatsGkDiscoveryConfOuts, h225RasStatsUnregisterConfOuts=h225RasStatsUnregisterConfOuts, h225RasStatsRequestInProgOuts=h225RasStatsRequestInProgOuts, h225RasStatsBandwidthReqOuts=h225RasStatsBandwidthReqOuts, h225CallSignalStatsFacilityOuts=h225CallSignalStatsFacilityOuts, h225CallSignalStatsUserInfoFails=h225CallSignalStatsUserInfoFails, h225CallSignalStatsAlertingOuts=h225CallSignalStatsAlertingOuts, h225CallSignalStatsPassthroOuts=h225CallSignalStatsPassthroOuts, h225RasStatsBandwidthReqIns=h225RasStatsBandwidthReqIns, h225MIBComplianceRev1=h225MIBComplianceRev1, h225RasStatsDisengageReqIns=h225RasStatsDisengageReqIns, h225CallSignalStatsAlertingIns=h225CallSignalStatsAlertingIns, h225CallSignalStatsInfoFails=h225CallSignalStatsInfoFails, h225CallSignal=h225CallSignal)
