#
# PySNMP MIB module Wellfleet-WFMPC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-WFMPC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:42:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, Integer32, Counter64, Gauge32, ModuleIdentity, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Bits, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Integer32", "Counter64", "Gauge32", "ModuleIdentity", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Bits", "Counter32", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfmpcObjects, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfmpcObjects")
wfmpcEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1), )
if mibBuilder.loadTexts: wfmpcEntryTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcEntryTable.setDescription('MPC base entry table. ')
wfmpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1), ).setIndexNames((0, "Wellfleet-WFMPC-MIB", "wfmpcSlot"))
if mibBuilder.loadTexts: wfmpcEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcEntry.setDescription('An MPC base entry description')
wfmpcDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcDelete.setDescription('Indication to create or delete an MPC base Entry from the MIB ')
wfmpcDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcDisable.setDescription('Enables or Disables MPC Subsystem.')
wfmpcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcSlot.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcSlot.setDescription('The Slot number of the slot on which this MPC is instantiated.')
wfmpcCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcCct.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcCct.setDescription('This corresponds to the circuit number associated with the ATM Driver ')
wfmpcMsgNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcMsgNum.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcMsgNum.setDescription('Send the gived message to DestId.')
wfmpcMsgSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcMsgSendEnable.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcMsgSendEnable.setDescription('Send the MPOA message to MPS if enabled.')
wfmpcMPSAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 7), OctetString().clone('0x390000000000000000000000000000A2CB2C2804')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcMPSAtmAddr.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcMPSAtmAddr.setDescription("The remote MPS's ATM Address to which we have to send MPOA Resolution Request.")
wfmpcSetupVCtoMPS = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcSetupVCtoMPS.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcSetupVCtoMPS.setDescription('(Re)Establish VC to MPS if SetupVC enabled.')
wfmpcMPCAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcMPCAtmAddr.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcMPCAtmAddr.setDescription("This MPC (emulator)'s Data ATM Address which is sent back in Cache Imposition Reply.")
wfmpcCIPNackFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpcCIPNackFlag.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcCIPNackFlag.setDescription('Flag which indicates CIP Nack or CIP Ack.')
wfmpcStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2), )
if mibBuilder.loadTexts: wfmpcStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatisticsTable.setDescription('This table represents the statistical information for the MPCs, which this agent manages.')
wfmpcStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1), ).setIndexNames((0, "Wellfleet-WFMPC-MIB", "wfmpcStatSlot"), (0, "Wellfleet-WFMPC-MIB", "wfmpcStatIndex"))
if mibBuilder.loadTexts: wfmpcStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatisticsEntry.setDescription('Each row in this table contains statistics for one MPOA server.')
wfmpcStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatIndex.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatIndex.setDescription(' This is the mpc index ')
wfmpcStatRxMpoaResolveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaResolveRequests.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaResolveRequests.setDescription('The number of MPOA Resolve Requests received by this MPC which are translated to NHRP resolve requests. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of wfmpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyAcks.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyAcks.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyAcks.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE Code of 0x00 - Success. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyInsufECResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufECResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufECResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufECResources.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE Code of 0x81 - Insufficient resources to accept egress cache entry. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyInsufSCResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufSCResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufSCResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufSCResources.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE Code of 0x82 - Insufficent resources to accept shortcut. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyInsufEitherResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufEitherResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufEitherResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyInsufEitherResources.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE CODE of 0x83 - Insufficient resources to accept either shortcut or egress cache entry. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyUnsupportedInetProt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedInetProt.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedInetProt.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedInetProt.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE CODE of 0x84 - Unsupported Internetwork Layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE CODE of 0x85 - Unsupported MAC layer encapsulation. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyUnspecifiedOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnspecifiedOther.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnspecifiedOther.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyUnspecifiedOther.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which contain the MPOA CIE CODE of 0x88 - Unspecified/Other. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaResolveReplyOtherOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyOtherOther.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyOtherOther.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaResolveReplyOtherOther.setDescription('The number of MPOA Resolve Replies transmitted by this MPC which are not counted above. NOTE - this would include NHRP errors. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatGiveupTimeExpireds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatGiveupTimeExpireds.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatGiveupTimeExpireds.setDescription('The number of times the MPC Give up Time (MPC-p6) has expired while waiting for a reply from a re-originated MPOA resolution request, i.e. a reply for a translated NHRP resolution request. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaImpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaImpRequests.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaImpRequests.setDescription('The number of MPOA Cache Imposition Requests transmitted by this MPC. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyAcks.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyAcks.setDescription('The number of successful MPOA Cache Imposition Replies received by this MPC which contain an MPOA CIE Code of 0x00, Success. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyInsufECResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufECResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufECResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufECResources.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x81, Insufficient resources to accept egress cache entry. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyInsufSCResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufSCResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufSCResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufSCResources.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x82 - Insufficient resources to accept shortcut. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyInsufEitherResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufEitherResources.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufEitherResources.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyInsufEitherResources.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x83 - Insufficient resources to accept either shortcut or egress cache entry. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyUnsupportedInetProt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedInetProt.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedInetProt.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedInetProt.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x84 - Unsupported Internetwork Layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x85 - Unsupported MAC layer encapsulation. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyUnspecifiedOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnspecifiedOther.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnspecifiedOther.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyUnspecifiedOther.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which contain the MPOA CIE Code of 0x88 - Unspecified/Other. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaImpReplyOtherOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyOtherOther.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Page 62.')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyOtherOther.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaImpReplyOtherOther.setDescription('The number of MPOA Cache Imposition Replies received by this MPC which are not counted previously. NOTE - this would include NHRP errors. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatRxMpoaEgressCachePurgeRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatRxMpoaEgressCachePurgeRequests.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatRxMpoaEgressCachePurgeRequests.setDescription('The number of MPOA Egress Cache Purges Requests received by this MPC. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaEgressCachePurgeReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaEgressCachePurgeReplies.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaEgressCachePurgeReplies.setDescription('The number of MPOA Egress Cache Purge Replies transmitted by this MPC. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatTxMpoaTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatTxMpoaTriggers.setReference('Multiprotocol Over ATM. AF-MPOA-0087.000. Section 4.7.2.1 MPOA Trigger')
if mibBuilder.loadTexts: wfmpcStatTxMpoaTriggers.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatTxMpoaTriggers.setDescription('The number of MPOA Trigger messages transmitted by this MPC. Discontinuities in the value of this counter can occur at re-initialization of the management system, and/or re-initialization of the MPC, and at other times, as indicated by the value of mpcDiscontinuityTime.')
wfmpcStatSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 14, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpcStatSlot.setStatus('mandatory')
if mibBuilder.loadTexts: wfmpcStatSlot.setDescription('The Slot number of the slot on which this MPC is instantiated.')
mibBuilder.exportSymbols("Wellfleet-WFMPC-MIB", wfmpcMPCAtmAddr=wfmpcMPCAtmAddr, wfmpcMsgNum=wfmpcMsgNum, wfmpcDelete=wfmpcDelete, wfmpcStatGiveupTimeExpireds=wfmpcStatGiveupTimeExpireds, wfmpcStatTxMpoaResolveReplyInsufECResources=wfmpcStatTxMpoaResolveReplyInsufECResources, wfmpcStatRxMpoaImpReplyInsufECResources=wfmpcStatRxMpoaImpReplyInsufECResources, wfmpcStatisticsTable=wfmpcStatisticsTable, wfmpcCct=wfmpcCct, wfmpcSlot=wfmpcSlot, wfmpcStatRxMpoaImpReplyUnsupportedInetProt=wfmpcStatRxMpoaImpReplyUnsupportedInetProt, wfmpcStatisticsEntry=wfmpcStatisticsEntry, wfmpcStatIndex=wfmpcStatIndex, wfmpcStatTxMpoaResolveReplyUnspecifiedOther=wfmpcStatTxMpoaResolveReplyUnspecifiedOther, wfmpcEntry=wfmpcEntry, wfmpcStatRxMpoaEgressCachePurgeRequests=wfmpcStatRxMpoaEgressCachePurgeRequests, wfmpcDisable=wfmpcDisable, wfmpcStatTxMpoaResolveReplyOtherOther=wfmpcStatTxMpoaResolveReplyOtherOther, wfmpcSetupVCtoMPS=wfmpcSetupVCtoMPS, wfmpcStatRxMpoaImpReplyAcks=wfmpcStatRxMpoaImpReplyAcks, wfmpcStatRxMpoaImpReplyOtherOther=wfmpcStatRxMpoaImpReplyOtherOther, wfmpcStatTxMpoaTriggers=wfmpcStatTxMpoaTriggers, wfmpcStatRxMpoaResolveRequests=wfmpcStatRxMpoaResolveRequests, wfmpcStatRxMpoaImpReplyInsufEitherResources=wfmpcStatRxMpoaImpReplyInsufEitherResources, wfmpcCIPNackFlag=wfmpcCIPNackFlag, wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps=wfmpcStatRxMpoaImpReplyUnsupportedMacEncaps, wfmpcMsgSendEnable=wfmpcMsgSendEnable, wfmpcMPSAtmAddr=wfmpcMPSAtmAddr, wfmpcStatSlot=wfmpcStatSlot, wfmpcStatTxMpoaResolveReplyInsufSCResources=wfmpcStatTxMpoaResolveReplyInsufSCResources, wfmpcStatTxMpoaImpRequests=wfmpcStatTxMpoaImpRequests, wfmpcEntryTable=wfmpcEntryTable, wfmpcStatTxMpoaResolveReplyUnsupportedInetProt=wfmpcStatTxMpoaResolveReplyUnsupportedInetProt, wfmpcStatTxMpoaResolveReplyAcks=wfmpcStatTxMpoaResolveReplyAcks, wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps=wfmpcStatTxMpoaResolveReplyUnsupportedMacEncaps, wfmpcStatTxMpoaEgressCachePurgeReplies=wfmpcStatTxMpoaEgressCachePurgeReplies, wfmpcStatTxMpoaResolveReplyInsufEitherResources=wfmpcStatTxMpoaResolveReplyInsufEitherResources, wfmpcStatRxMpoaImpReplyInsufSCResources=wfmpcStatRxMpoaImpReplyInsufSCResources, wfmpcStatRxMpoaImpReplyUnspecifiedOther=wfmpcStatRxMpoaImpReplyUnspecifiedOther)
