#
# PySNMP MIB module PAIRGAIN-ADSL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-ADSL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:36:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pgainDSLAM, = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgainDSLAM")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Gauge32, Counter32, ModuleIdentity, NotificationType, Counter64, iso, Bits, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Gauge32", "Counter32", "ModuleIdentity", "NotificationType", "Counter64", "iso", "Bits", "ObjectIdentity", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pgAdslMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 927, 1, 9, 15))
if mibBuilder.loadTexts: pgAdslMIB.setLastUpdated('')
if mibBuilder.loadTexts: pgAdslMIB.setOrganization('Pairgain Technology')
if mibBuilder.loadTexts: pgAdslMIB.setContactInfo('')
if mibBuilder.loadTexts: pgAdslMIB.setDescription('The module defines MIB for enhancement to ADSL services.')
pgAdslMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 15, 1))
pgAdslClearStatTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 15, 1, 1), )
if mibBuilder.loadTexts: pgAdslClearStatTable.setStatus('current')
if mibBuilder.loadTexts: pgAdslClearStatTable.setDescription('A table of Adsl Clear Statistics Command.')
pgAdslClearStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 15, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pgAdslClearStatEntry.setStatus('current')
if mibBuilder.loadTexts: pgAdslClearStatEntry.setDescription('An entry in pgAdslClearStatTable.')
pgAdslAtucClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 15, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgAdslAtucClearStat.setStatus('current')
if mibBuilder.loadTexts: pgAdslAtucClearStat.setDescription('Command to clear ATUC statistics.')
pgAdslAturClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 15, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgAdslAturClearStat.setStatus('current')
if mibBuilder.loadTexts: pgAdslAturClearStat.setDescription('Command to clear ATUR statistics.')
mibBuilder.exportSymbols("PAIRGAIN-ADSL-MIB", pgAdslMIBObjects=pgAdslMIBObjects, pgAdslMIB=pgAdslMIB, pgAdslClearStatTable=pgAdslClearStatTable, pgAdslClearStatEntry=pgAdslClearStatEntry, pgAdslAturClearStat=pgAdslAturClearStat, PYSNMP_MODULE_ID=pgAdslMIB, pgAdslAtucClearStat=pgAdslAtucClearStat)
