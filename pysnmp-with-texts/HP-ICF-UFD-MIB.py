#
# PySNMP MIB module HP-ICF-UFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-UFD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:35:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, ModuleIdentity, IpAddress, iso, NotificationType, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, MibIdentifier, Counter32, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "IpAddress", "iso", "NotificationType", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Counter32", "Integer32", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hpicfUfdMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74))
hpicfUfdMIB.setRevisions(('2012-04-30 00:00', '2011-05-12 00:00', '2010-02-06 15:39',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfUfdMIB.setRevisionsDescriptions(('Added hpicfUfdTrackedLinkTable to track the role of the Link.Deprecated hpicfUfdCompliance and added hpicfUfdConfigGroup1, hpicfUfdCompliance1.', 'Added hpicfUfdLinksToMonitorType and hpicfUfdLinksToTransitionType for LACP key support.', 'Initial Revision',))
if mibBuilder.loadTexts: hpicfUfdMIB.setLastUpdated('201204300000Z')
if mibBuilder.loadTexts: hpicfUfdMIB.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfUfdMIB.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfUfdMIB.setDescription('The MIB module describes the objects to configure Uplink Failure Detection feature')
hpicfUfdNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 0))
hpicfUfdConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1))
hpicfUfdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3))
class HpUfdTrackEntityType(TextualConvention, Integer32):
    description = 'Used to indicate the type of entity being tracked.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("ufd", 1))

class HpUfdTrackLinksSubtype(TextualConvention, Integer32):
    description = 'The type of links to monitor or links to disable.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("portMap", 1), ("lacpKey", 2))

hpicfUfdScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 1))
hpicfUfdAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdAdminStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdAdminStatus.setDescription('Global administrative status of UFD. UFD is globally disabled by default.')
hpicfUfdNotifyTrackId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfUfdNotifyTrackId.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdNotifyTrackId.setDescription('The track ID corresponding to track data in the Trap.')
hpicfUfdTrackEntities = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2))
hpicfUfdTrackTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfUfdTrackTable.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackTable.setDescription('A Table of UFD track entities. This table is meant for configuration.')
hpicfUfdTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1), ).setIndexNames((0, "HP-ICF-UFD-MIB", "hpicfUfdTrackId"))
if mibBuilder.loadTexts: hpicfUfdTrackEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackEntry.setDescription('An entry in the table containing information about the entity being tracked.')
hpicfUfdTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hpicfUfdTrackId.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackId.setDescription('A value that uniquely identifies a row in the track entity table')
hpicfUfdTrackEntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 2), HpUfdTrackEntityType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdTrackEntityType.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackEntityType.setDescription('The type of the entity being tracked by UFD.')
hpicfUfdLinksToMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdLinksToMonitor.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToMonitor.setDescription('This is a list of ports configured as links-to-monitor for this track entity.')
hpicfUfdLinksToTransition = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdLinksToTransition.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToTransition.setDescription('This is a list of ports configured as links-to-transition for this track entity. This object will represent the ports in links-to-disable list if the entity type is ufd.')
hpicfUfdLinksToMonitorState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUfdLinksToMonitorState.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToMonitorState.setDescription('This object specifies the current state of the links-to-monitor. up : At least one port/trunk configured as part of links-to-monitor is linked up. down: All ports/trunks configured as part of links-to-monitor have lost link.')
hpicfUfdLinksToTransitionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("autoDisabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUfdLinksToTransitionState.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToTransitionState.setDescription('This object specifies the current state of the links-to-transition. up: UFD has not taken any action on the ports/trunks. autoDisabled : UFD has auto-disabled the ports/trunks.')
hpicfUfdTrackEntityState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("ok", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUfdTrackEntityState.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackEntityState.setDescription('State of the tracked entity.')
hpicfUfdTrackEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUfdTrackEntityRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackEntityRowStatus.setDescription('Row status of the tracked entity.')
hpicfUfdLinksToMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 9), HpUfdTrackLinksSubtype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdLinksToMonitorType.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToMonitorType.setDescription('This object specifies the type of hpicfUfdLinksToMonitor object.')
hpicfUfdLinksToTransitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 1, 1, 10), HpUfdTrackLinksSubtype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUfdLinksToTransitionType.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinksToTransitionType.setDescription('This object specifies the type of hpicfUfdLinksToTransition object.')
hpicfUfdTrackedLinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfUfdTrackedLinkTable.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackedLinkTable.setDescription('A Table of UFD entities to track role of the Link.')
hpicfUfdTrackedLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-UFD-MIB", "hpicfUfdTrackId"), (0, "HP-ICF-UFD-MIB", "hpicfUfdIfIndex"))
if mibBuilder.loadTexts: hpicfUfdTrackedLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdTrackedLinkEntry.setDescription('An entry in the table containing information about the role of a link being tracked.')
hpicfUfdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfUfdIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdIfIndex.setDescription('This object specifies the port in the links to monitor.')
hpicfUfdLinkRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uplink", 1), ("downlink", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUfdLinkRole.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLinkRole.setDescription('This object specifies the role of the link either uplink or downlink.')
hpicfUfdNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 0, 0))
hpicfUfdLtDAutoDisabled = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 0, 0, 3)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdNotifyTrackId"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToTransition"))
if mibBuilder.loadTexts: hpicfUfdLtDAutoDisabled.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLtDAutoDisabled.setDescription('This notification is generated when ports in LtD for this track entity are auto-disabled as a result of LtMs loosing link to partner.')
hpicfUfdLtDAutoEnabled = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 0, 0, 4)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdNotifyTrackId"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToTransition"))
if mibBuilder.loadTexts: hpicfUfdLtDAutoEnabled.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdLtDAutoEnabled.setDescription('This notification is generated when ports in LtD for this track entity are auto-enabled as a result of LtMs regaining link to thries partners.')
hpicfUfdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 1))
hpicfUfdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 2))
hpicfUfdCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 1, 1)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdBaseGroup"), ("HP-ICF-UFD-MIB", "hpicfUfdConfigGroup"), ("HP-ICF-UFD-MIB", "hpicfUfdNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdCompliance = hpicfUfdCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfUfdCompliance.setDescription('The compliance statement for SNMP entities which implement the UFD MIB')
hpicfUfdCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 1, 2)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdBaseGroup"), ("HP-ICF-UFD-MIB", "hpicfUfdConfigGroup"), ("HP-ICF-UFD-MIB", "hpicfUfdNotificationGroup"), ("HP-ICF-UFD-MIB", "hpicfUfdConfigGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdCompliance1 = hpicfUfdCompliance1.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdCompliance1.setDescription('The compliance statement for SNMP entities which implement the UFD MIB')
hpicfUfdBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 2, 1)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdAdminStatus"), ("HP-ICF-UFD-MIB", "hpicfUfdNotifyTrackId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdBaseGroup = hpicfUfdBaseGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdBaseGroup.setDescription('The collection of objects for UFD base group. This group is mandatory.')
hpicfUfdConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 2, 2)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdTrackEntityType"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToMonitor"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToTransition"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToMonitorState"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToTransitionState"), ("HP-ICF-UFD-MIB", "hpicfUfdTrackEntityState"), ("HP-ICF-UFD-MIB", "hpicfUfdTrackEntityRowStatus"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToMonitorType"), ("HP-ICF-UFD-MIB", "hpicfUfdLinksToTransitionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdConfigGroup = hpicfUfdConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdConfigGroup.setDescription('The collection of objects for UFD track entity. This group is mandatory.')
hpicfUfdNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 2, 3)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdLtDAutoDisabled"), ("HP-ICF-UFD-MIB", "hpicfUfdLtDAutoEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdNotificationGroup = hpicfUfdNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdNotificationGroup.setDescription('The collection of objects for UFD notifications.')
hpicfUfdConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74, 3, 2, 4)).setObjects(("HP-ICF-UFD-MIB", "hpicfUfdLinkRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUfdConfigGroup1 = hpicfUfdConfigGroup1.setStatus('current')
if mibBuilder.loadTexts: hpicfUfdConfigGroup1.setDescription('The collection of objects for UFD track entity. This group is mandatory.')
mibBuilder.exportSymbols("HP-ICF-UFD-MIB", hpicfUfdMIB=hpicfUfdMIB, hpicfUfdLinksToTransitionType=hpicfUfdLinksToTransitionType, hpicfUfdScalars=hpicfUfdScalars, HpUfdTrackEntityType=HpUfdTrackEntityType, hpicfUfdLinksToTransitionState=hpicfUfdLinksToTransitionState, hpicfUfdBaseGroup=hpicfUfdBaseGroup, hpicfUfdAdminStatus=hpicfUfdAdminStatus, hpicfUfdLinksToMonitor=hpicfUfdLinksToMonitor, hpicfUfdNotificationPrefix=hpicfUfdNotificationPrefix, hpicfUfdNotifyTrackId=hpicfUfdNotifyTrackId, HpUfdTrackLinksSubtype=HpUfdTrackLinksSubtype, hpicfUfdTrackTable=hpicfUfdTrackTable, hpicfUfdNotificationGroup=hpicfUfdNotificationGroup, hpicfUfdConfigGroup1=hpicfUfdConfigGroup1, hpicfUfdTrackEntityState=hpicfUfdTrackEntityState, hpicfUfdTrackEntry=hpicfUfdTrackEntry, hpicfUfdLinksToMonitorType=hpicfUfdLinksToMonitorType, hpicfUfdTrackEntityRowStatus=hpicfUfdTrackEntityRowStatus, hpicfUfdIfIndex=hpicfUfdIfIndex, hpicfUfdLtDAutoEnabled=hpicfUfdLtDAutoEnabled, hpicfUfdTrackedLinkTable=hpicfUfdTrackedLinkTable, hpicfUfdTrackId=hpicfUfdTrackId, hpicfUfdTrackEntities=hpicfUfdTrackEntities, hpicfUfdLinksToTransition=hpicfUfdLinksToTransition, hpicfUfdCompliances=hpicfUfdCompliances, hpicfUfdCompliance1=hpicfUfdCompliance1, hpicfUfdLinksToMonitorState=hpicfUfdLinksToMonitorState, hpicfUfdConfigObjects=hpicfUfdConfigObjects, hpicfUfdNotifications=hpicfUfdNotifications, hpicfUfdConformance=hpicfUfdConformance, hpicfUfdGroups=hpicfUfdGroups, hpicfUfdConfigGroup=hpicfUfdConfigGroup, hpicfUfdLtDAutoDisabled=hpicfUfdLtDAutoDisabled, hpicfUfdLinkRole=hpicfUfdLinkRole, hpicfUfdTrackEntityType=hpicfUfdTrackEntityType, hpicfUfdTrackedLinkEntry=hpicfUfdTrackedLinkEntry, PYSNMP_MODULE_ID=hpicfUfdMIB, hpicfUfdCompliance=hpicfUfdCompliance)
