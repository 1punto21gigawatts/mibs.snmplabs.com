#
# PySNMP MIB module CISCO-IETF-DOT11-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-DOT11-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:00:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, iso, MibIdentifier, Bits, Integer32, NotificationType, TimeTicks, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "iso", "MibIdentifier", "Bits", "Integer32", "NotificationType", "TimeTicks", "Counter64", "Gauge32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ciscoIetfDot11QosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 89))
ciscoIetfDot11QosMIB.setRevisions(('2002-03-28 00:00', '2002-01-29 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoIetfDot11QosMIB.setRevisionsDescriptions(('Changing the name of cid11QosDiscardedFragments to cid11QosIfDiscardedFragments and description to indicate it is for transmit fragments only. Updating the description of cid11QosDiscardedFrames to indicate it is for transmit frame only. Modify the default value and range for cid11CWmin and cid11CWmax.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoIetfDot11QosMIB.setLastUpdated('200203280000Z')
if mibBuilder.loadTexts: ciscoIetfDot11QosMIB.setOrganization('Cisco System Inc.')
if mibBuilder.loadTexts: ciscoIetfDot11QosMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 West Tasman Drive, San Jose CA 95134-1706. USA Tel: +1 800 553-NETS E-mail: cs-dot11@cisco.com')
if mibBuilder.loadTexts: ciscoIetfDot11QosMIB.setDescription('This MIB module provides network management support for QoS on wireless LAN devices. All objects defined in this MIB are listed (object names have been modified to adopt Cisco MIB object naming convention) in the IEEE 802.11E November 2001 draft. The original names of the objects in the standard are included in the REFERENCE clauses. The standard is still under development. The standard IEEE 802.11E MIB can replace some of the MIB objects in this MIB once the standard is finalized. GLOSSARY and ACRONYMS Access point (AP) Transmitter/receiver (transceiver) device that commonly connects and transports data between a wireless network and a wired network. AIFS Arbitration Interframe Space. It is one of the five different IFSs defined to provide priority levels for access to the wireless media. It shall be used by QSTAs to transmit data type frames (MPDUs) and management type frames (MMPDUs). BSS IEEE 802.11 Basic Service Set (Radio Cell). The BSS of an AP comprises of the stations directly associating with the AP. CW Contention Window. It is the time period between radio signal collisions caused by simultaneous broadcast from multiple wireless stations. The contention window is used to compute the random backoff of the radio broadcast. The IEEE 802.11b does not specify the unit for the time period. CWP Factor Contention Window Persistence Factor. It indicates the factor used in computing new CW values on every 15 unsuccessful attempt to transmit an MPDU or an MMPDU of a traffic category. It is a scaling factor in units of 1/16 ths. IFS Inter-Frame Space is the time interval between frames. A STA shall determine that the medium is idle through the use of the carrier sense function for the interval specified. In other words, the size of the IFS determines the length of the backoff time interval of a device to the medium. In this case, the medium is the radio wave spectrum. The IEEE 802.11b standard does not specify any unit for the time interval. BSS IEEE 802.11 Basic Service Set (Radio Cell). The MAC Medium Access Control. Layer 2 in the network model. MPDU MAC protocol data unit. The unit of data exchanged between two peer MAC entities using the services of the physical layer (PHY). MMPDU Management type MAC protocol data unit. MSDU MAC service data unit. Information that is delivered as a unit between MAC service access points. QBSS Quality of service basic service set. QSTA QoS station. STA (WSTA) A non-AP IEEE 802.11 wireless station.')
ciscoIetfDot11QosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 1))
ciscoIetfDot11QosMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 2))
ciscoIetfDot11QosConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1))
ciscoIetfDot11QosQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 2))
ciscoIetfDot11QosStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3))
class Cid11QosTrafficCategory(TextualConvention, Integer32):
    reference = 'IEEE 802.1D-1998, Annex H.2.10 and IEEE 802.11E-2001, section 7.5.1.'
    description = "This is the 802.1D IP traffic category. There are a total of 8 categories. Each category can be mapped to a 802.1P priority level of IP packets. The priority levels are implemented using the Precedence Bits in the IP packets. The default priority levels start from 'background', the lowest, to the highest, 'networkControl': background(1) - background traffic (lowest priority) spare(2) - spare traffic (2nd lowest) bestEffort(0) - best effort delivery (this is the default type for all traffic) excellentEffort(3) - execellent effect controlledLoad(4) - controlled load interactiveVideo(5) - video traffic interactiveVoice(6) - voice traffic networkControl(7) - network control packets (highest)."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("bestEffort", 0), ("background", 1), ("spare", 2), ("excellentEffort", 3), ("controlledLoad", 4), ("interactiveVideo", 5), ("interactiveVoice", 6), ("networkControl", 7))

cid11QosConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1), )
if mibBuilder.loadTexts: cid11QosConfigTable.setStatus('current')
if mibBuilder.loadTexts: cid11QosConfigTable.setDescription('This table contains the basic set of attributes to configure QoS for a wireless LAN device. This table has a sparse dependent relationship with the ifTable. Each IEEE 802.11 wireless interface has a set of configuration parameters for each IP network traffic category. For each entry in this table, there exists an entry in the ifTable of ifType ieee80211(71).')
cid11QosConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-DOT11-QOS-MIB", "cid11TrafficCategory"))
if mibBuilder.loadTexts: cid11QosConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cid11QosConfigEntry.setDescription('Each entry contains parameters to configure traffic contention window, AIFS, priority and MSDU lifetime for each traffic category on an IEEE 802.11 interface.')
cid11TrafficCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 1), Cid11QosTrafficCategory())
if mibBuilder.loadTexts: cid11TrafficCategory.setStatus('current')
if mibBuilder.loadTexts: cid11TrafficCategory.setDescription('This object specifies the traffic category.')
cid11CWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11CWmin.setReference('dot11CWmin, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11CWmin.setStatus('current')
if mibBuilder.loadTexts: cid11CWmin.setDescription('This specifies the minimum contention window value for a traffic category. The backoff interval of a radio is calculated from a pseudo random integer drawn from a uniform distribution over the interval [1, CW+1], where CW is an integer within the range of values of the cid11CWmin and cid11CWmax.')
cid11CWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)).clone(1023)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11CWmax.setReference('dot11CWmax, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11CWmax.setStatus('current')
if mibBuilder.loadTexts: cid11CWmax.setDescription('This object specifies the maximum contention window value for a traffic category. The backoff interval of a radio is calculated from a pseudo random integer drawn from a uniform distribution over the interval [1, CW+1], where CW is an integer within the range of values of the cid11CWmin and cid11CWmax.')
cid11CWPFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11CWPFactor.setReference('dot11CWPFactor, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11CWPFactor.setStatus('current')
if mibBuilder.loadTexts: cid11CWPFactor.setDescription('This object specifies the contention window persistence factor for a traffic category.')
cid11AIFS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11AIFS.setReference('dot11AIFS, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11AIFS.setStatus('current')
if mibBuilder.loadTexts: cid11AIFS.setDescription('This object specifies the AIFS for a traffic category.')
cid11TrafficPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11TrafficPriority.setReference('dot11PriorityMap, IEEE 802.11E-2001/D1 and IEEE 802.1D-1998, Annex H.2.10.')
if mibBuilder.loadTexts: cid11TrafficPriority.setStatus('current')
if mibBuilder.loadTexts: cid11TrafficPriority.setDescription('This object specifies the actual priority this agent is going to use to delivery packets for a traffic category. This allows multiple traffic categories to map to the same priority level. The priority 7 is the highest priority and priority 1 is the lowest priority, with priority 0, which is used for best effort traffic, ordered between priority 3 and priority 2. The resulting default ordering is {7,6,5,4,3,0,2,1}. The default value is same as the traffic category value.')
cid11MSDULifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cid11MSDULifetime.setReference('dot11MSDULifetime, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11MSDULifetime.setStatus('current')
if mibBuilder.loadTexts: cid11MSDULifetime.setDescription('This object specifies the MSDU lifetime for a traffic category.')
cid11QosSupportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 2), )
if mibBuilder.loadTexts: cid11QosSupportTable.setStatus('current')
if mibBuilder.loadTexts: cid11QosSupportTable.setDescription('This table contains the attributes indicating QoS support information on the IEEE 802.11 interfaces of the device. This table has a sparse dependent relationship with the ifTable. For each entry in this table, there exists an entry in the ifTable of ifType ieee80211(71).')
cid11QosSupportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cid11QosSupportEntry.setStatus('current')
if mibBuilder.loadTexts: cid11QosSupportEntry.setDescription('Each entry contains attributes to indicate if Qos and priority queue are supported for an IEEE 802.11 interface.')
cid11QosOptionImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosOptionImplemented.setReference('dot11QosOptionImplemented, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosOptionImplemented.setStatus('current')
if mibBuilder.loadTexts: cid11QosOptionImplemented.setDescription('This object indicates if QoS is supported on this IEEE 802.11 network interface.')
cid11QueuesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QueuesAvailable.setReference('dot11QueuesAvailable, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QueuesAvailable.setStatus('current')
if mibBuilder.loadTexts: cid11QueuesAvailable.setDescription('This object shows the number of QoS priority queues are available on this IEEE 802.11 network interface.')
cid11QueueTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 2, 1), )
if mibBuilder.loadTexts: cid11QueueTable.setStatus('current')
if mibBuilder.loadTexts: cid11QueueTable.setDescription('This table contains the queue weight and size information and statistics for each traffic category on each the IEEE 802.11 interface. This table has a sparse dependent relationship with the ifTable. For each entry in this table, there exists an entry in the ifTable of ifType ieee80211(71).')
cid11QueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-DOT11-QOS-MIB", "cid11TrafficCategory"))
if mibBuilder.loadTexts: cid11QueueEntry.setStatus('current')
if mibBuilder.loadTexts: cid11QueueEntry.setDescription('Each entry contains the current queue weight, size, and peak size information for each traffic category on an IEEE 802.11 interface.')
cid11QueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QueueSize.setReference('dot11QueueSizeTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QueueSize.setStatus('current')
if mibBuilder.loadTexts: cid11QueueSize.setDescription('This is the current QoS priority queue size for the traffic category.')
cid11QueuePeakSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QueuePeakSize.setReference('dot11QueuePeakSizeTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QueuePeakSize.setStatus('current')
if mibBuilder.loadTexts: cid11QueuePeakSize.setDescription('This is the peak QoS priority queue size for the traffic category.')
cid11QosStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1), )
if mibBuilder.loadTexts: cid11QosStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: cid11QosStatisticsTable.setDescription('This table contains the QoS statistics by traffic category on each the IEEE 802.11 network interface. This table has a sparse dependent relationship with the ifTable. For each entry in this table, there exists an entry in the ifTable of ifType ieee80211(71).')
cid11QosStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-DOT11-QOS-MIB", "cid11TrafficCategory"))
if mibBuilder.loadTexts: cid11QosStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: cid11QosStatisticsEntry.setDescription('Each entry contain QoS statistics for data transmission and receive for each traffic category on an IEEE 802.11 interface.')
cid11QosReceivedMPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosReceivedMPDUs.setReference('dot11QoSMPDUsReceivedCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosReceivedMPDUs.setStatus('current')
if mibBuilder.loadTexts: cid11QosReceivedMPDUs.setDescription('This is the counter for QoS MPDUs received on this IEEE 802.11 interface for the traffic category.')
cid11QosReceivedRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosReceivedRetries.setReference('dot11QoSRetriesReceivedCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosReceivedRetries.setStatus('current')
if mibBuilder.loadTexts: cid11QosReceivedRetries.setDescription('This is the counter for Qos retries received on this IEEE 802.11 interface for the traffic category.')
cid11QosDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosDiscardedFrames.setReference('dot11QosDiscardedFrameCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosDiscardedFrames.setStatus('current')
if mibBuilder.loadTexts: cid11QosDiscardedFrames.setDescription('This is the counter for Qos discarded frames transmitting from this IEEE 802.11 interface for the traffic category.')
cid11QosTransmittedFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosTransmittedFragments.setReference('dot11QosTransmittedFragmentCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosTransmittedFragments.setStatus('current')
if mibBuilder.loadTexts: cid11QosTransmittedFragments.setDescription('This is the counter for Qos fragments transmitted this IEEE 802.11 interface for the traffic category.')
cid11QosFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosFails.setReference('dot11QosFailedCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosFails.setStatus('current')
if mibBuilder.loadTexts: cid11QosFails.setDescription('This is the counter for Qos failures on this IEEE 802.11 interface for the traffic category.')
cid11QosRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosRetries.setReference('dot11QosRetryCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosRetries.setStatus('current')
if mibBuilder.loadTexts: cid11QosRetries.setDescription('This is the counter for Qos retries performed on this IEEE 802.11 interface for the traffic category.')
cid11QosMutipleRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosMutipleRetries.setReference('dot11QosMutipleRetryCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosMutipleRetries.setStatus('current')
if mibBuilder.loadTexts: cid11QosMutipleRetries.setDescription('This is the counter for Qos multiple retries performed on this IEEE 802.11 interface for the traffic category.')
cid11QosFrameDuplicates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosFrameDuplicates.setReference('dot11QosFrameDuplicateCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosFrameDuplicates.setStatus('current')
if mibBuilder.loadTexts: cid11QosFrameDuplicates.setDescription('This is the counter for Qos frame duplications performed on this IEEE 802.11 interface for the traffic category.')
cid11QosReceivedFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosReceivedFragments.setReference('dot11QosReceivedFragmentCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosReceivedFragments.setStatus('current')
if mibBuilder.loadTexts: cid11QosReceivedFragments.setDescription('This is the counter for Qos fragments received on this IEEE 802.11 interface for the traffic category.')
cid11QosTransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosTransmittedFrames.setReference('dot11QosTransmittedFrameCountTC, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosTransmittedFrames.setStatus('current')
if mibBuilder.loadTexts: cid11QosTransmittedFrames.setDescription('This is the counter for Qos frames transmitted from this IEEE 802.11 interface for the traffic category.')
cid11QosIfStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 2), )
if mibBuilder.loadTexts: cid11QosIfStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: cid11QosIfStatisticsTable.setDescription('This table contains the attributes indicating QoS statistics on the IEEE 802.11 interfaces of the device. This table has a sparse dependent relationship with the ifTable. For each entry in this table, there exists an entry in the ifTable of ifType ieee80211(71).')
cid11QosIfStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cid11QosIfStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: cid11QosIfStatisticsEntry.setDescription('Each entry contains attributes to support QoS statistics on an IEEE 802.11 interface.')
cid11QosIfDiscardedFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 89, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cid11QosIfDiscardedFragments.setReference('dot11QosDiscardedFragments, IEEE 802.11E-2001/D1.')
if mibBuilder.loadTexts: cid11QosIfDiscardedFragments.setStatus('current')
if mibBuilder.loadTexts: cid11QosIfDiscardedFragments.setDescription('This object counts the number of QoS discarded transmitting fragments.')
ciscoIetfDot11QosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 1))
ciscoIetfDot11QosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 2))
ciscoIetfDot11QosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 1, 1)).setObjects(("CISCO-IETF-DOT11-QOS-MIB", "ciscoIetfDot11QosConfigGroup"), ("CISCO-IETF-DOT11-QOS-MIB", "ciscoIetfDot11QosQueueGroup"), ("CISCO-IETF-DOT11-QOS-MIB", "ciscoIetfDot11QosStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfDot11QosMIBCompliance = ciscoIetfDot11QosMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoIetfDot11QosMIBCompliance.setDescription('The compliance statement for the configuration and status groups.')
ciscoIetfDot11QosConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 2, 1)).setObjects(("CISCO-IETF-DOT11-QOS-MIB", "cid11CWmin"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11CWmax"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11CWPFactor"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11AIFS"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11TrafficPriority"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11MSDULifetime"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosOptionImplemented"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QueuesAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfDot11QosConfigGroup = ciscoIetfDot11QosConfigGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIetfDot11QosConfigGroup.setDescription('Configurations for IEEE 802.11 QoS.')
ciscoIetfDot11QosQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 2, 2)).setObjects(("CISCO-IETF-DOT11-QOS-MIB", "cid11QueueSize"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QueuePeakSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfDot11QosQueueGroup = ciscoIetfDot11QosQueueGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIetfDot11QosQueueGroup.setDescription('Configurations and statistics for IEEE 802.11 QoS queue.')
ciscoIetfDot11QosStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 89, 2, 2, 3)).setObjects(("CISCO-IETF-DOT11-QOS-MIB", "cid11QosIfDiscardedFragments"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosReceivedMPDUs"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosReceivedRetries"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosDiscardedFrames"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosTransmittedFragments"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosFails"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosRetries"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosMutipleRetries"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosFrameDuplicates"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosReceivedFragments"), ("CISCO-IETF-DOT11-QOS-MIB", "cid11QosTransmittedFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfDot11QosStatsGroup = ciscoIetfDot11QosStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoIetfDot11QosStatsGroup.setDescription('Status and statistics for IEEE 802.11 QoS.')
mibBuilder.exportSymbols("CISCO-IETF-DOT11-QOS-MIB", ciscoIetfDot11QosMIB=ciscoIetfDot11QosMIB, ciscoIetfDot11QosQueue=ciscoIetfDot11QosQueue, cid11QosFails=cid11QosFails, cid11QueueEntry=cid11QueueEntry, ciscoIetfDot11QosQueueGroup=ciscoIetfDot11QosQueueGroup, cid11QueuesAvailable=cid11QueuesAvailable, cid11QosMutipleRetries=cid11QosMutipleRetries, cid11QosStatisticsTable=cid11QosStatisticsTable, ciscoIetfDot11QosMIBGroups=ciscoIetfDot11QosMIBGroups, cid11QueueTable=cid11QueueTable, ciscoIetfDot11QosMIBConformance=ciscoIetfDot11QosMIBConformance, cid11QosReceivedMPDUs=cid11QosReceivedMPDUs, cid11QosReceivedFragments=cid11QosReceivedFragments, cid11QosConfigTable=cid11QosConfigTable, cid11QosIfStatisticsTable=cid11QosIfStatisticsTable, cid11CWmax=cid11CWmax, Cid11QosTrafficCategory=Cid11QosTrafficCategory, cid11QosTransmittedFragments=cid11QosTransmittedFragments, cid11MSDULifetime=cid11MSDULifetime, cid11QosStatisticsEntry=cid11QosStatisticsEntry, cid11QosSupportEntry=cid11QosSupportEntry, cid11QueueSize=cid11QueueSize, cid11QueuePeakSize=cid11QueuePeakSize, cid11QosIfStatisticsEntry=cid11QosIfStatisticsEntry, PYSNMP_MODULE_ID=ciscoIetfDot11QosMIB, cid11CWPFactor=cid11CWPFactor, cid11QosReceivedRetries=cid11QosReceivedRetries, cid11AIFS=cid11AIFS, cid11TrafficPriority=cid11TrafficPriority, cid11TrafficCategory=cid11TrafficCategory, ciscoIetfDot11QosStatsGroup=ciscoIetfDot11QosStatsGroup, ciscoIetfDot11QosConfig=ciscoIetfDot11QosConfig, cid11QosDiscardedFrames=cid11QosDiscardedFrames, cid11QosIfDiscardedFragments=cid11QosIfDiscardedFragments, ciscoIetfDot11QosMIBObjects=ciscoIetfDot11QosMIBObjects, ciscoIetfDot11QosMIBCompliances=ciscoIetfDot11QosMIBCompliances, cid11QosSupportTable=cid11QosSupportTable, cid11QosConfigEntry=cid11QosConfigEntry, cid11QosFrameDuplicates=cid11QosFrameDuplicates, ciscoIetfDot11QosConfigGroup=ciscoIetfDot11QosConfigGroup, cid11QosTransmittedFrames=cid11QosTransmittedFrames, cid11QosOptionImplemented=cid11QosOptionImplemented, cid11QosRetries=cid11QosRetries, cid11CWmin=cid11CWmin, ciscoIetfDot11QosStatistics=ciscoIetfDot11QosStatistics, ciscoIetfDot11QosMIBCompliance=ciscoIetfDot11QosMIBCompliance)
