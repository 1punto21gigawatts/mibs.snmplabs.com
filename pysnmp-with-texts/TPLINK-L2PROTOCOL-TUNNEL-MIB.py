#
# PySNMP MIB module TPLINK-L2PROTOCOL-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-L2PROTOCOL-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, ObjectIdentity, Bits, Unsigned32, MibIdentifier, ModuleIdentity, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "ObjectIdentity", "Bits", "Unsigned32", "MibIdentifier", "ModuleIdentity", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkL2protocolTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 81))
tplinkL2protocolTunnelMIB.setRevisions(('2009-08-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkL2protocolTunnelMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkL2protocolTunnelMIB.setLastUpdated('200908270000Z')
if mibBuilder.loadTexts: tplinkL2protocolTunnelMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkL2protocolTunnelMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkL2protocolTunnelMIB.setDescription('The config of layer 2 protocol tunnel.')
tplinkL2protocolTunnelMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1))
tplinkL2protocolTunnelNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 81, 2))
tpL2ptGlobalCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 1))
tpL2ptEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpL2ptEnable.setStatus('current')
if mibBuilder.loadTexts: tpL2ptEnable.setDescription('Select Enable/Disable l2protocol tunnel function globally on the Switch. 0. disable 1. enable')
tpL2ptPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2))
tpL2ptPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1), )
if mibBuilder.loadTexts: tpL2ptPortTable.setStatus('current')
if mibBuilder.loadTexts: tpL2ptPortTable.setDescription('A list of port loopback detection.')
tpL2ptPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tpL2ptPortEntry.setStatus('current')
if mibBuilder.loadTexts: tpL2ptPortEntry.setDescription('The entry of the port l2protocol tunnel list .')
tpL2ptPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpL2ptPort.setStatus('current')
if mibBuilder.loadTexts: tpL2ptPort.setDescription('Display port number')
tpL2ptType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("uni", 1), ("nni", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpL2ptType.setStatus('current')
if mibBuilder.loadTexts: tpL2ptType.setDescription('The type of the port.')
tpL2ptProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpL2ptProtocol.setStatus('current')
if mibBuilder.loadTexts: tpL2ptProtocol.setDescription('The tunnel protocol of the port.')
tpL2ptThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpL2ptThreshold.setStatus('current')
if mibBuilder.loadTexts: tpL2ptThreshold.setDescription('Set drop threshold for protocol packets.')
tpL2ptLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 81, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpL2ptLag.setStatus('current')
if mibBuilder.loadTexts: tpL2ptLag.setDescription('Displays the LAG number which the port belongs to.')
mibBuilder.exportSymbols("TPLINK-L2PROTOCOL-TUNNEL-MIB", PYSNMP_MODULE_ID=tplinkL2protocolTunnelMIB, tpL2ptType=tpL2ptType, tplinkL2protocolTunnelMIB=tplinkL2protocolTunnelMIB, tpL2ptPortEntry=tpL2ptPortEntry, tpL2ptPort=tpL2ptPort, tpL2ptEnable=tpL2ptEnable, tpL2ptPortCfg=tpL2ptPortCfg, tplinkL2protocolTunnelMIBObjects=tplinkL2protocolTunnelMIBObjects, tpL2ptGlobalCfg=tpL2ptGlobalCfg, tpL2ptProtocol=tpL2ptProtocol, tplinkL2protocolTunnelNotifications=tplinkL2protocolTunnelNotifications, tpL2ptLag=tpL2ptLag, tpL2ptThreshold=tpL2ptThreshold, tpL2ptPortTable=tpL2ptPortTable)
