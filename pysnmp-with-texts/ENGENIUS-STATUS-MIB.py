#
# PySNMP MIB module ENGENIUS-STATUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENGENIUS-STATUS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, enterprises, ObjectIdentity, ModuleIdentity, NotificationType, iso, Integer32, IpAddress, MibIdentifier, Gauge32, Counter32, Counter64, Unsigned32, dod, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "enterprises", "ObjectIdentity", "ModuleIdentity", "NotificationType", "iso", "Integer32", "IpAddress", "MibIdentifier", "Gauge32", "Counter32", "Counter64", "Unsigned32", "dod", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
TextualConvention, RowStatus, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "MacAddress", "DisplayString")
engeniusstatus = ModuleIdentity((1, 3, 6, 1, 4, 1, 14125, 3))
engeniusstatus.setRevisions(('1905-11-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: engeniusstatus.setRevisionsDescriptions(('first draft',))
if mibBuilder.loadTexts: engeniusstatus.setLastUpdated('0511250000Z')
if mibBuilder.loadTexts: engeniusstatus.setOrganization('Senao R&D Dept., S/W Division')
if mibBuilder.loadTexts: engeniusstatus.setContactInfo(' Info SENAO INTERNATIONAL CO., LTD. No.500, Fusing 3 Rd., Hwa-Ya Technical Park, Kuei-Shan Hsiang, TAOYUAN County 333, TAIWAN, R.O.C. Tel: 886-3-328-9289 Fax: 886-3-328-9666 E-mail: info@senao.com.tw ')
if mibBuilder.loadTexts: engeniusstatus.setDescription('The MIB module defines Senao implementation-specific metrics useful in managing IEEE 802.11 on Senao devices. This is used as a supplement to the standard 802.11 MIB proposed by IEEE.')
engenius = MibIdentifier((1, 3, 6, 1, 4, 1, 14125))
wirelessCBStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 3, 1))
wirelessAPStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 3, 2))
ifCBStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 3, 3))
ifAPStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 3, 4))
cbConnectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbConnectionStatus.setStatus('mandatory')
if mibBuilder.loadTexts: cbConnectionStatus.setDescription(' This attribute reflects the Service Set ID used in the SSID parameter of the most recent MLME_Scan.request')
cbSignalStrength = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbSignalStrength.setStatus('mandatory')
if mibBuilder.loadTexts: cbSignalStrength.setDescription(' signal strength refers to the magnitude of the electric field at a reference point that is a significant distance from the transmitting antenna')
cbCurrentTxRate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbCurrentTxRate.setStatus('mandatory')
if mibBuilder.loadTexts: cbCurrentTxRate.setDescription(' The transmit bit rates operated, corresponding to data rates from 1 Mb/s to 54 Mb/s.')
cbCurrentChannel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbCurrentChannel.setStatus('mandatory')
if mibBuilder.loadTexts: cbCurrentChannel.setDescription(' The operating frequency channel. Valid numbers are as defind in ISO/IEC 8802-11:1999, 15.4.6.2.')
cbEssid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEssid.setStatus('mandatory')
if mibBuilder.loadTexts: cbEssid.setDescription(' This attribute reflects the Service Set ID. This value may be modified by an external management entity and used by the local SME to make decisions about the Scanning process. The connectedToSSID length is limit between 1~ 32 characters.')
cbTxPower = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbTxPower.setStatus('mandatory')
if mibBuilder.loadTexts: cbTxPower.setDescription(' The Tx Power is transmit power setting value.')
cbIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: cbIpAddress.setDescription(' The IP address of this device used over its interface.')
apSsidProfile_1 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSsidProfile_1.setStatus('mandatory')
if mibBuilder.loadTexts: apSsidProfile_1.setDescription(' This attribute reflects the Service Set ID. This value may be modified by an external management entity and used by the local SME to make decisions about the Scanning process. The connectedToSSID length is limit between 1~ 32 characters.')
apSsidProfile_2 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSsidProfile_2.setStatus('mandatory')
if mibBuilder.loadTexts: apSsidProfile_2.setDescription(' This attribute reflects the Service Set ID. This value may be modified by an external management entity and used by the local SME to make decisions about the Scanning process. The connectedToSSID length is limit between 1~ 32 characters.')
apSsidProfile_3 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSsidProfile_3.setStatus('mandatory')
if mibBuilder.loadTexts: apSsidProfile_3.setDescription(' This attribute reflects the Service Set ID. This value may be modified by an external management entity and used by the local SME to make decisions about the Scanning process. The connectedToSSID length is limit between 1~ 32 characters.')
apSsidProfile_4 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSsidProfile_4.setStatus('mandatory')
if mibBuilder.loadTexts: apSsidProfile_4.setDescription(' This attribute reflects the Service Set ID. This value may be modified by an external management entity and used by the local SME to make decisions about the Scanning process. The connectedToSSID length is limit between 1~ 32 characters.')
apWlanMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWlanMode.setStatus('mandatory')
if mibBuilder.loadTexts: apWlanMode.setDescription(' The operating mode of the WLAN interface')
apCurrentChannel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCurrentChannel.setStatus('mandatory')
if mibBuilder.loadTexts: apCurrentChannel.setDescription(' The operating frequency channel. Valid numbers are as defind in ISO/IEC 8802-11:1999, 15.4.6.2.')
apTxPower = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apTxPower.setStatus('mandatory')
if mibBuilder.loadTexts: apTxPower.setDescription(' The operating transmission power. Valid numbers are as defind in ISO/IEC 8802-11:1999, 15.4.6.2.')
apIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 2, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: apIpAddress.setDescription(' The IP address of this device used over its interface.')
cbAth0_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_RxPackets.setDescription(' The number of packets received on the radio interface Ath0.')
cbAth0_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_RxBytes.setDescription(' The number of bytes received on the radio interface Ath0.')
cbAth0_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_RxErrors.setDescription(' The number of errors packets received on the radio interface Ath0.')
cbAth0_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_TxPackets.setDescription(' The number of packets transmited on the radio interface Ath0.')
cbAth0_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_TxBytes.setDescription(' The number of bytes transmited on the radio interface Ath0.')
cbAth0_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbAth0_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbAth0_TxErrors.setDescription(' The number of error packets transmited on the radio interface Ath0.')
cbBr0_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_RxPackets.setDescription(' The number of packets received on the Bridge interface br0.')
cbBr0_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_RxBytes.setDescription(' The number of bytes received on the Bridge interface br0.')
cbBr0_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br0.')
cbBr0_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br0.')
cbBr0_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br0.')
cbBr0_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbBr0_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbBr0_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br0.')
cbEth0_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_RxPackets.setDescription(' The number of packets received on the ethernet interface eth0.')
cbEth0_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_RxBytes.setDescription(' The number of bytes received on the ethernet interface eth0.')
cbEth0_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_RxErrors.setDescription(' The number of errors packets received on the ethernet interface eth0.')
cbEth0_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_TxPackets.setDescription(' The number of packets transmited on the ethernet interface eth0.')
cbEth0_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_TxBytes.setDescription(' The number of bytes transmited on the ethernet interface eth0.')
cbEth0_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 3, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbEth0_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: cbEth0_TxErrors.setDescription(' The number of error packets transmited on the ethernet interface eth0.')
apAth1_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_RxPackets.setDescription(' The number of packets received on the radio interface ath1.')
apAth1_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_RxBytes.setDescription(' The number of bytes received on the radio interface ath1.')
apAth1_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_RxErrors.setDescription(' The number of errors packets received on the radio interface ath1.')
apAth1_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_TxPackets.setDescription(' The number of packets transmited on the radio interface ath1.')
apAth1_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_TxBytes.setDescription(' The number of bytes transmited on the radio interface ath1.')
apAth1_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1_TxErrors.setDescription(' The number of error packets transmited on the radio interface ath1.')
apAth2_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_RxPackets.setDescription(' The number of packets received on the radio interface ath2.')
apAth2_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_RxBytes.setDescription(' The number of bytes received on the radio interface ath2.')
apAth2_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_RxErrors.setDescription(' The number of errors packets received on the radio interface ath2.')
apAth2_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_TxPackets.setDescription(' The number of packets transmited on the radio interface ath2.')
apAth2_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_TxBytes.setDescription(' The number of bytes transmited on the radio interface ath2.')
apAth2_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2_TxErrors.setDescription(' The number of error packets transmited on the radio interface ath2.')
apAth3_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_RxPackets.setDescription(' The number of packets received on the radio interface ath3.')
apAth3_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_RxBytes.setDescription(' The number of bytes received on the radio interface ath3.')
apAth3_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_RxErrors.setDescription(' The number of errors packets received on the radio interface ath3.')
apAth3_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_TxPackets.setDescription(' The number of packets transmited on the radio interface ath3.')
apAth3_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_TxBytes.setDescription(' The number of bytes transmited on the radio interface ath3.')
apAth3_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3_TxErrors.setDescription(' The number of error packets transmited on the radio interface ath3.')
apAth4_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_RxPackets.setDescription(' The number of packets received on the radio interface ath4.')
apAth4_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_RxBytes.setDescription(' The number of bytes received on the radio interface ath4.')
apAth4_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_RxErrors.setDescription(' The number of errors packets received on the radio interface ath4.')
apAth4_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 22), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_TxPackets.setDescription(' The number of packets transmited on the radio interface ath4.')
apAth4_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_TxBytes.setDescription(' The number of bytes transmited on the radio interface ath4.')
apAth4_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 24), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4_TxErrors.setDescription(' The number of error packets transmited on the radio interface ath4.')
apAth1V_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 25), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_RxPackets.setDescription(' The number of packets received on the radio vlan interface ath1.')
apAth1V_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_RxBytes.setDescription(' The number of bytes received on the radio vlan interface ath1.')
apAth1V_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_RxErrors.setDescription(' The number of errors packets received on the radio vlan interface ath1.')
apAth1V_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 28), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_TxPackets.setDescription(' The number of packets transmited on the radio vlan interface ath1.')
apAth1V_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_TxBytes.setDescription(' The number of bytes transmited on the radio vlan interface ath1.')
apAth1V_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth1V_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth1V_TxErrors.setDescription(' The number of error packets transmited on the radio vlan interface ath1')
apAth2V_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_RxPackets.setDescription(' The number of packets received on the radio vlan interface ath2.')
apAth2V_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 32), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_RxBytes.setDescription(' The number of bytes received on the radio vlan interface ath2.')
apAth2V_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 33), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_RxErrors.setDescription(' The number of errors packets received on the radio vlan interface ath2.')
apAth2V_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 34), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_TxPackets.setDescription(' The number of packets transmited on the radio vlan interface ath2.')
apAth2V_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 35), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_TxBytes.setDescription(' The number of bytes transmited on the radio vlan interface ath2.')
apAth2V_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth2V_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth2V_TxErrors.setDescription(' The number of error packets transmited on the radio vlan interface ath2.')
apAth3V_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_RxPackets.setDescription(' The number of packets received on the radio vlan interface ath3.')
apAth3V_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_RxBytes.setDescription(' The number of bytes received on the radio vlan interface ath3.')
apAth3V_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_RxErrors.setDescription(' The number of errors packets received on the radio vlan interface ath3.')
apAth3V_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 40), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_TxPackets.setDescription(' The number of packets transmited on the radio vlan interface ath3.')
apAth3V_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 41), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_TxBytes.setDescription(' The number of bytes transmited on the radio vlan interface ath3.')
apAth3V_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 42), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth3V_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth3V_TxErrors.setDescription(' The number of error packets transmited on the radio vlan interface ath3.')
apAth4V_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 43), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_RxPackets.setDescription(' The number of packets received on the radio vlan interface ath4.')
apAth4V_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 44), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_RxBytes.setDescription(' The number of bytes received on the radio vlan interface ath4.')
apAth4V_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 45), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_RxErrors.setDescription(' The number of errors packets received on the radio vlan interface ath4.')
apAth4V_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 46), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_TxPackets.setDescription(' The number of packets transmited on the radio vlan interface ath4.')
apAth4V_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 47), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_TxBytes.setDescription(' The number of bytes transmited on the radio vlan interface ath4.')
apAth4V_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 48), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAth4V_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apAth4V_TxErrors.setDescription(' The number of error packets transmited on the radio vlan interface ath4.')
apBr0_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 49), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_RxPackets.setDescription(' The number of packets received on the Bridge interface br0.')
apBr0_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 50), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_RxBytes.setDescription(' The number of bytes received on the Bridge interface br0.')
apBr0_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 51), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br0.')
apBr0_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 52), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br0.')
apBr0_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 53), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br0.')
apBr0_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 54), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr0_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr0_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br0.')
apBr1_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 55), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_RxPackets.setDescription(' The number of packets received on the Bridge interface br1.')
apBr1_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 56), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_RxBytes.setDescription(' The number of bytes received on the Bridge interface br1.')
apBr1_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 57), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br1.')
apBr1_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 58), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br1.')
apBr1_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 59), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br1.')
apBr1_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 60), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr1_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr1_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br1.')
apBr2_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 61), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_RxPackets.setDescription(' The number of packets received on the Bridge interface br2.')
apBr2_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 62), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_RxBytes.setDescription(' The number of bytes received on the Bridge interface br2.')
apBr2_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 63), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br2.')
apBr2_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 64), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br2.')
apBr2_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 65), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br2.')
apBr2_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 66), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr2_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr2_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br2.')
apBr3_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 67), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_RxPackets.setDescription(' The number of packets received on the Bridge interface br3.')
apBr3_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 68), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_RxBytes.setDescription(' The number of bytes received on the Bridge interface br3.')
apBr3_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 69), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br3.')
apBr3_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 70), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br3.')
apBr3_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 71), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br3.')
apBr3_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 72), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr3_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr3_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br3.')
apBr4_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 73), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_RxPackets.setDescription(' The number of packets received on the Bridge interface br4.')
apBr4_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 74), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_RxBytes.setDescription(' The number of bytes received on the Bridge interface br4.')
apBr4_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 75), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_RxErrors.setDescription(' The number of errors packets received on the Bridge interface br4.')
apBr4_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 76), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_TxPackets.setDescription(' The number of packets transmited on the Bridge interface br4.')
apBr4_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 77), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_TxBytes.setDescription(' The number of bytes transmited on the Bridge interface br4.')
apBr4_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 78), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apBr4_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apBr4_TxErrors.setDescription(' The number of error packets transmited on the Bridge interface br4.')
apEth0_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 79), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_RxPackets.setDescription(' The number of packets received on the Ethernet interface eth0.')
apEth0_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 80), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_RxBytes.setDescription(' The number of bytes received on the Ethernet interface eth0.')
apEth0_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 81), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_RxErrors.setDescription(' The number of errors packets received on the Ethernet interface eth0.')
apEth0_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 82), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_TxPackets.setDescription(' The number of packets transmited on the Ethernet interface eth0.')
apEth0_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 83), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_TxBytes.setDescription(' The number of bytes transmited on the Ethernet interface eth0.')
apEth0_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 84), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0_TxErrors.setDescription(' The number of error packets transmited on the Ethernet interface eth0.')
apEth0V1_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 85), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_RxPackets.setDescription(' The number of packets received on the Ethernet vlan interface eth0 at profile 1.')
apEth0V1_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 86), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_RxBytes.setDescription(' The number of bytes received on the Ethernet vlan interface eth0 at profile 1.')
apEth0V1_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 87), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_RxErrors.setDescription(' The number of errors packets received on the Ethernet vlan interface eth0 at profile 1.')
apEth0V1_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 88), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_TxPackets.setDescription(' The number of packets transmited on the Ethernet vlan interface eth0 at profile 1.')
apEth0V1_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 89), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_TxBytes.setDescription(' The number of bytes transmited on the Ethernet vlan interface eth0 at profile 1.')
apEth0V1_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 90), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V1_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V1_TxErrors.setDescription(' The number of error packets transmited on the Ethernet vlan interface eth0 at profile 1.')
apEth0V2_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 91), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_RxPackets.setDescription(' The number of packets received on the Ethernet vlan interface eth0 at profile 2.')
apEth0V2_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 92), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_RxBytes.setDescription(' The number of bytes received on the Ethernet vlan interface eth0 at profile 2.')
apEth0V2_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 93), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_RxErrors.setDescription(' The number of errors packets received on the Ethernet vlan interface eth0 at profile 2.')
apEth0V2_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 94), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_TxPackets.setDescription(' The number of packets transmited on the Ethernet vlan interface eth0 at profile 2.')
apEth0V2_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 95), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_TxBytes.setDescription(' The number of bytes transmited on the Ethernet vlan interface eth0 at profile 2.')
apEth0V2_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 96), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V2_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V2_TxErrors.setDescription(' The number of error packets transmited on the Ethernet vlan interface eth0 at profile 2.')
apEth0V3_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 97), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_RxPackets.setDescription(' The number of packets received on the Ethernet vlan interface eth0 at profile 3.')
apEth0V3_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 98), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_RxBytes.setDescription(' The number of bytes received on the Ethernet vlan interface eth0 at profile 3.')
apEth0V3_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 99), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_RxErrors.setDescription(' The number of errors packets received on the Ethernet vlan interface eth0 at profile 3.')
apEth0V3_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 100), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_TxPackets.setDescription(' The number of packets transmited on the Ethernet vlan interface eth0 at profile 3.')
apEth0V3_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 101), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_TxBytes.setDescription(' The number of bytes transmited on the Ethernet vlan interface eth0 at profile 3.')
apEth0V3_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 102), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V3_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V3_TxErrors.setDescription(' The number of error packets transmited on the Ethernet vlan interface eth0 at profile 3.')
apEth0V4_RxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 103), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_RxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_RxPackets.setDescription(' The number of packets received on the Ethernet vlan interface eth0 at profile 4.')
apEth0V4_RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 104), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_RxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_RxBytes.setDescription(' The number of bytes received on the Ethernet vlan interface eth0 at profile 4.')
apEth0V4_RxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 105), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_RxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_RxErrors.setDescription(' The number of errors packets received on the Ethernet vlan interface eth0 at profile 4.')
apEth0V4_TxPackets = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 106), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_TxPackets.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_TxPackets.setDescription(' The number of packets transmited on the Ethernet vlan interface eth0 at profile 4.')
apEth0V4_TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 107), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_TxBytes.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_TxBytes.setDescription(' The number of bytes transmited on the Ethernet vlan interface eth0 at profile 4.')
apEth0V4_TxErrors = MibScalar((1, 3, 6, 1, 4, 1, 14125, 3, 4, 108), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEth0V4_TxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: apEth0V4_TxErrors.setDescription(' The number of error packets transmited on the Ethernet vlan interface eth0 at profile 4.')
mibBuilder.exportSymbols("ENGENIUS-STATUS-MIB", apAth4_TxErrors=apAth4_TxErrors, apWlanMode=apWlanMode, apEth0V3_TxBytes=apEth0V3_TxBytes, cbEth0_RxErrors=cbEth0_RxErrors, apBr3_TxBytes=apBr3_TxBytes, apAth2_RxPackets=apAth2_RxPackets, cbAth0_RxBytes=cbAth0_RxBytes, apBr0_TxErrors=apBr0_TxErrors, apAth2V_TxBytes=apAth2V_TxBytes, apAth3_RxErrors=apAth3_RxErrors, apAth1_RxErrors=apAth1_RxErrors, apBr1_RxBytes=apBr1_RxBytes, apBr1_TxErrors=apBr1_TxErrors, apAth2_TxBytes=apAth2_TxBytes, cbEssid=cbEssid, apAth2V_TxPackets=apAth2V_TxPackets, apBr0_RxErrors=apBr0_RxErrors, apBr2_TxBytes=apBr2_TxBytes, apBr4_TxPackets=apBr4_TxPackets, apAth4V_TxErrors=apAth4V_TxErrors, cbConnectionStatus=cbConnectionStatus, apAth3V_TxPackets=apAth3V_TxPackets, apEth0V1_TxBytes=apEth0V1_TxBytes, apAth1_RxPackets=apAth1_RxPackets, engenius=engenius, apAth1V_TxErrors=apAth1V_TxErrors, apBr2_RxBytes=apBr2_RxBytes, apEth0V4_RxPackets=apEth0V4_RxPackets, apEth0V1_RxBytes=apEth0V1_RxBytes, engeniusstatus=engeniusstatus, apAth3_RxBytes=apAth3_RxBytes, apBr0_TxPackets=apBr0_TxPackets, apBr4_RxErrors=apBr4_RxErrors, apBr0_TxBytes=apBr0_TxBytes, cbAth0_TxErrors=cbAth0_TxErrors, cbEth0_RxPackets=cbEth0_RxPackets, apBr2_TxErrors=apBr2_TxErrors, apAth4V_RxPackets=apAth4V_RxPackets, apEth0V4_TxBytes=apEth0V4_TxBytes, apAth1_RxBytes=apAth1_RxBytes, cbBr0_TxPackets=cbBr0_TxPackets, cbTxPower=cbTxPower, apAth2_TxPackets=apAth2_TxPackets, apBr3_RxBytes=apBr3_RxBytes, apIpAddress=apIpAddress, apAth4_RxPackets=apAth4_RxPackets, apEth0V1_TxErrors=apEth0V1_TxErrors, apBr2_RxPackets=apBr2_RxPackets, apEth0V1_TxPackets=apEth0V1_TxPackets, apEth0V3_RxPackets=apEth0V3_RxPackets, apAth3_TxBytes=apAth3_TxBytes, apEth0V4_TxPackets=apEth0V4_TxPackets, apBr2_RxErrors=apBr2_RxErrors, apAth3V_RxPackets=apAth3V_RxPackets, ifCBStatus=ifCBStatus, wirelessCBStatus=wirelessCBStatus, apSsidProfile_2=apSsidProfile_2, apBr4_TxErrors=apBr4_TxErrors, cbBr0_RxBytes=cbBr0_RxBytes, apAth4_TxBytes=apAth4_TxBytes, cbIpAddress=cbIpAddress, apSsidProfile_1=apSsidProfile_1, cbCurrentChannel=cbCurrentChannel, apEth0V2_TxBytes=apEth0V2_TxBytes, cbEth0_TxBytes=cbEth0_TxBytes, apEth0_RxErrors=apEth0_RxErrors, apEth0V1_RxErrors=apEth0V1_RxErrors, apAth3_TxErrors=apAth3_TxErrors, apEth0V4_RxErrors=apEth0V4_RxErrors, apEth0V3_TxErrors=apEth0V3_TxErrors, apAth3_RxPackets=apAth3_RxPackets, apAth3_TxPackets=apAth3_TxPackets, apAth1V_TxBytes=apAth1V_TxBytes, apAth3V_TxErrors=apAth3V_TxErrors, apBr1_TxBytes=apBr1_TxBytes, apAth1V_TxPackets=apAth1V_TxPackets, apEth0_RxPackets=apEth0_RxPackets, apAth1_TxErrors=apAth1_TxErrors, apEth0_RxBytes=apEth0_RxBytes, apBr3_RxPackets=apBr3_RxPackets, apEth0V2_TxPackets=apEth0V2_TxPackets, apEth0V3_RxErrors=apEth0V3_RxErrors, apAth1V_RxBytes=apAth1V_RxBytes, cbEth0_TxPackets=cbEth0_TxPackets, apAth4_TxPackets=apAth4_TxPackets, apBr4_RxBytes=apBr4_RxBytes, apBr3_TxPackets=apBr3_TxPackets, apAth4_RxBytes=apAth4_RxBytes, cbBr0_RxPackets=cbBr0_RxPackets, cbEth0_RxBytes=cbEth0_RxBytes, apAth4V_RxErrors=apAth4V_RxErrors, apAth3V_TxBytes=apAth3V_TxBytes, apAth2V_RxPackets=apAth2V_RxPackets, apAth2_RxBytes=apAth2_RxBytes, apEth0V4_TxErrors=apEth0V4_TxErrors, apEth0_TxPackets=apEth0_TxPackets, apAth1V_RxErrors=apAth1V_RxErrors, ifAPStatus=ifAPStatus, apTxPower=apTxPower, apCurrentChannel=apCurrentChannel, cbBr0_TxBytes=cbBr0_TxBytes, apEth0V2_RxBytes=apEth0V2_RxBytes, apAth2_RxErrors=apAth2_RxErrors, apEth0V2_TxErrors=apEth0V2_TxErrors, apAth3V_RxErrors=apAth3V_RxErrors, apAth2V_RxErrors=apAth2V_RxErrors, cbSignalStrength=cbSignalStrength, cbAth0_RxPackets=cbAth0_RxPackets, cbEth0_TxErrors=cbEth0_TxErrors, cbAth0_RxErrors=cbAth0_RxErrors, apAth4V_TxBytes=apAth4V_TxBytes, apAth2V_RxBytes=apAth2V_RxBytes, apAth4V_TxPackets=apAth4V_TxPackets, apEth0_TxBytes=apEth0_TxBytes, cbCurrentTxRate=cbCurrentTxRate, apBr3_TxErrors=apBr3_TxErrors, apEth0V3_RxBytes=apEth0V3_RxBytes, apBr1_TxPackets=apBr1_TxPackets, apBr0_RxPackets=apBr0_RxPackets, apSsidProfile_4=apSsidProfile_4, apEth0V4_RxBytes=apEth0V4_RxBytes, apAth2V_TxErrors=apAth2V_TxErrors, apBr1_RxPackets=apBr1_RxPackets, apBr4_RxPackets=apBr4_RxPackets, apEth0_TxErrors=apEth0_TxErrors, apEth0V2_RxErrors=apEth0V2_RxErrors, apAth1_TxBytes=apAth1_TxBytes, apEth0V1_RxPackets=apEth0V1_RxPackets, apAth2_TxErrors=apAth2_TxErrors, apEth0V3_TxPackets=apEth0V3_TxPackets, apAth4V_RxBytes=apAth4V_RxBytes, cbBr0_TxErrors=cbBr0_TxErrors, cbAth0_TxPackets=cbAth0_TxPackets, cbAth0_TxBytes=cbAth0_TxBytes, apAth1V_RxPackets=apAth1V_RxPackets, apSsidProfile_3=apSsidProfile_3, PYSNMP_MODULE_ID=engeniusstatus, apAth3V_RxBytes=apAth3V_RxBytes, wirelessAPStatus=wirelessAPStatus, apAth4_RxErrors=apAth4_RxErrors, apBr4_TxBytes=apBr4_TxBytes, apEth0V2_RxPackets=apEth0V2_RxPackets, apBr3_RxErrors=apBr3_RxErrors, cbBr0_RxErrors=cbBr0_RxErrors, apAth1_TxPackets=apAth1_TxPackets, apBr2_TxPackets=apBr2_TxPackets, apBr0_RxBytes=apBr0_RxBytes, apBr1_RxErrors=apBr1_RxErrors)
