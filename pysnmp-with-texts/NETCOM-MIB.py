#
# PySNMP MIB module NETCOM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETCOM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Bits, Counter32, IpAddress, ObjectIdentity, TimeTicks, Counter64, NotificationType, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, enterprises, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "ObjectIdentity", "TimeTicks", "Counter64", "NotificationType", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "enterprises", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sinetica = MibIdentifier((1, 3, 6, 1, 4, 1, 3711))
netcom = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7))
netcom1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1))
netcomObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1))
netcomEnvironment = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1))
netcomContact = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2))
netcomEnvHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1))
netcomEnvTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2))
netcomEnvHumidityEnableMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityEnableMonitoring.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvHumidityEnableMonitoring.setDescription('Setting to one enables monitoring of Humidity')
netcomEnvCurrentHumidity = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomEnvCurrentHumidity.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvCurrentHumidity.setDescription('The current humidity reading in 0.1%')
netcomEnvHumidityLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityLowerThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvHumidityLowerThreshold.setDescription('The Lower humidity threshold in 0.1%')
netcomEnvHumidityUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityUpperThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvHumidityUpperThreshold.setDescription('The Upper humidity threshold in 0.1%')
netcomEnvHumidityCalibrationOffset = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityCalibrationOffset.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvHumidityCalibrationOffset.setDescription('Calibration offset in 0.1%')
netcomLowHumidity = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,21)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
if mibBuilder.loadTexts: netcomLowHumidity.setDescription('The NetCom-th unit is below the low humidity threshold.')
netcomHighHumidity = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,22)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
if mibBuilder.loadTexts: netcomHighHumidity.setDescription('The NetCom-th unit is above the high humidity threshold.')
netcomHumidityReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,23)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
if mibBuilder.loadTexts: netcomHumidityReturnToNormal.setDescription('The NetCom-th unit has returned to normal humidity')
netcomEnvTemperatureEnableMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureEnableMonitoring.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvTemperatureEnableMonitoring.setDescription('Setting to one enables monitoring of Temperature')
netcomEnvCurrentTemperature = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomEnvCurrentTemperature.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvCurrentTemperature.setDescription('The current temperature reading in 0.1%')
netcomEnvTemperatureLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureLowerThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvTemperatureLowerThreshold.setDescription('The Lower temperature threshold in 0.1 degrees')
netcomEnvTemperatureUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureUpperThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvTemperatureUpperThreshold.setDescription('The Upper temperature threshold in 0.1 degrees')
netcomEnvTemperatureCalibrationOffset = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureCalibrationOffset.setStatus('mandatory')
if mibBuilder.loadTexts: netcomEnvTemperatureCalibrationOffset.setDescription('Calibration offset in 0.1 degrees')
netcomLowTemperature = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,31)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
if mibBuilder.loadTexts: netcomLowTemperature.setDescription('The NetCom-th unit is below the lower temperature threshold.')
netcomHighTemperature = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,32)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
if mibBuilder.loadTexts: netcomHighTemperature.setDescription('The NetCom-th unit is above the high temperature threshold.')
netcomTemperatureReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,33)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
if mibBuilder.loadTexts: netcomTemperatureReturnToNormal.setDescription('The NetCom-th unit has returned to normal temperature')
netcomContactEnable = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContactEnable.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContactEnable.setDescription('Setting to one enables monitoring of contacts')
netcomContactNormalStates = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2))
netcomContactCurrentStates = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3))
netcomContact1NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact1NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact1NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact2NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact2NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact2NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact3NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact3NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact3NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact4NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact4NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact4NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact5NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact5NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact5NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact6NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact6NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact6NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact7NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact7NormalState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact7NormalState.setDescription('Set to 0 for normally open condition, 1 for normally closed')
netcomContact1CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact1CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact1CurrentState.setDescription('The current state of the contact')
netcomContact2CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact2CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact2CurrentState.setDescription('The current state of the contact')
netcomContact3CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact3CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact3CurrentState.setDescription('The current state of the contact')
netcomContact4CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact4CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact4CurrentState.setDescription('The current state of the contact')
netcomContact5CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact5CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact5CurrentState.setDescription('The current state of the contact')
netcomContact6CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact6CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact6CurrentState.setDescription('The current state of the contact')
netcomContact7CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact7CurrentState.setStatus('mandatory')
if mibBuilder.loadTexts: netcomContact7CurrentState.setDescription('The current state of the contact')
netcomContact1NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,1))
if mibBuilder.loadTexts: netcomContact1NonNormal.setDescription('The NetCom has detected a non-normal state on contact 1')
netcomContact1ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,11))
if mibBuilder.loadTexts: netcomContact1ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 1')
netcomContact2NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,2))
if mibBuilder.loadTexts: netcomContact2NonNormal.setDescription('The NetCom has detected a non-normal state on contact 2')
netcomContact2ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,12))
if mibBuilder.loadTexts: netcomContact2ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 2')
netcomContact3NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,3))
if mibBuilder.loadTexts: netcomContact3NonNormal.setDescription('The NetCom has detected a non-normal state on contact 3')
netcomContact3ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,13))
if mibBuilder.loadTexts: netcomContact3ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 3')
netcomContact4NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,4))
if mibBuilder.loadTexts: netcomContact4NonNormal.setDescription('The NetCom has detected a non-normal state on contact 4')
netcomContact4ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,14))
if mibBuilder.loadTexts: netcomContact4ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 4')
netcomContact5NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,5))
if mibBuilder.loadTexts: netcomContact5NonNormal.setDescription('The NetCom has detected a non-normal state on contact 5')
netcomContact5ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,15))
if mibBuilder.loadTexts: netcomContact5ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 5')
netcomContact6NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,6))
if mibBuilder.loadTexts: netcomContact6NonNormal.setDescription('The NetCom has detected a non-normal state on contact 6')
netcomContact6ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,16))
if mibBuilder.loadTexts: netcomContact6ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 6')
netcomContact7NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,7))
if mibBuilder.loadTexts: netcomContact7NonNormal.setDescription('The NetCom has detected a non-normal state on contact 7')
netcomContact7ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,17))
if mibBuilder.loadTexts: netcomContact7ReturnToNormal.setDescription('The NetCom has detected a return to normal state on contact 7')
mibBuilder.exportSymbols("NETCOM-MIB", netcomEnvTemperatureLowerThreshold=netcomEnvTemperatureLowerThreshold, netcomContactEnable=netcomContactEnable, netcomLowTemperature=netcomLowTemperature, netcomEnvTemperatureCalibrationOffset=netcomEnvTemperatureCalibrationOffset, netcomContact7CurrentState=netcomContact7CurrentState, netcomContact1ReturnToNormal=netcomContact1ReturnToNormal, netcom1=netcom1, netcomContact3NonNormal=netcomContact3NonNormal, netcomContact3ReturnToNormal=netcomContact3ReturnToNormal, netcomEnvironment=netcomEnvironment, netcomEnvTemperatureEnableMonitoring=netcomEnvTemperatureEnableMonitoring, netcomContact4ReturnToNormal=netcomContact4ReturnToNormal, netcom=netcom, netcomEnvTemperatureUpperThreshold=netcomEnvTemperatureUpperThreshold, netcomEnvHumidityCalibrationOffset=netcomEnvHumidityCalibrationOffset, netcomContact3NormalState=netcomContact3NormalState, netcomContact2NormalState=netcomContact2NormalState, netcomLowHumidity=netcomLowHumidity, netcomContact4CurrentState=netcomContact4CurrentState, netcomEnvCurrentTemperature=netcomEnvCurrentTemperature, netcomContact6CurrentState=netcomContact6CurrentState, netcomContact5ReturnToNormal=netcomContact5ReturnToNormal, netcomEnvCurrentHumidity=netcomEnvCurrentHumidity, netcomHighHumidity=netcomHighHumidity, netcomContact2ReturnToNormal=netcomContact2ReturnToNormal, netcomEnvHumidityUpperThreshold=netcomEnvHumidityUpperThreshold, netcomContact3CurrentState=netcomContact3CurrentState, netcomContact7ReturnToNormal=netcomContact7ReturnToNormal, netcomEnvHumidityEnableMonitoring=netcomEnvHumidityEnableMonitoring, netcomContact=netcomContact, netcomContact6NonNormal=netcomContact6NonNormal, netcomContact5NormalState=netcomContact5NormalState, netcomContactNormalStates=netcomContactNormalStates, netcomTemperatureReturnToNormal=netcomTemperatureReturnToNormal, netcomContact7NormalState=netcomContact7NormalState, sinetica=sinetica, netcomObjects=netcomObjects, netcomHumidityReturnToNormal=netcomHumidityReturnToNormal, netcomContact1NonNormal=netcomContact1NonNormal, netcomEnvHumidityLowerThreshold=netcomEnvHumidityLowerThreshold, netcomContact6NormalState=netcomContact6NormalState, netcomContact1CurrentState=netcomContact1CurrentState, netcomEnvTemperature=netcomEnvTemperature, netcomContact7NonNormal=netcomContact7NonNormal, netcomContact2CurrentState=netcomContact2CurrentState, netcomContact4NormalState=netcomContact4NormalState, netcomContactCurrentStates=netcomContactCurrentStates, netcomContact4NonNormal=netcomContact4NonNormal, netcomHighTemperature=netcomHighTemperature, netcomEnvHumidity=netcomEnvHumidity, netcomContact2NonNormal=netcomContact2NonNormal, netcomContact6ReturnToNormal=netcomContact6ReturnToNormal, netcomContact5NonNormal=netcomContact5NonNormal, netcomContact1NormalState=netcomContact1NormalState, netcomContact5CurrentState=netcomContact5CurrentState)
