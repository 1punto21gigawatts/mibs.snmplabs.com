#
# PySNMP MIB module CT-PRIORITY-QUEUING (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-PRIORITY-QUEUING
# Produced by pysmi-0.3.4 at Wed May  1 12:29:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, TimeTicks, ModuleIdentity, enterprises, Counter64, Gauge32, Counter32, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "TimeTicks", "ModuleIdentity", "enterprises", "Counter64", "Gauge32", "Counter32", "ObjectIdentity", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cabletron = MibIdentifier((1, 3, 6, 1, 4, 1, 52))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4))
ctronExp = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2))
ctVLANMib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12))
ctVLANMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1))
ctPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4))
ctBasePriority = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2))
ctUserDefPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1))
ctRegenPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2))
ctTrafPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3))
ctUserDefTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1, 1), )
if mibBuilder.loadTexts: ctUserDefTable.setStatus('obsolete')
if mibBuilder.loadTexts: ctUserDefTable.setDescription('A table that contains Default User Priority.')
ctUserDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1, 1, 1), ).setIndexNames((0, "CT-PRIORITY-QUEUING", "ctUserDefPriorityIndex"))
if mibBuilder.loadTexts: ctUserDefEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ctUserDefEntry.setDescription('A list of default user priority for all ports.')
ctUserDefPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctUserDefPriorityIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ctUserDefPriorityIndex.setDescription('Description of a specific instance for the default user priority table. The object identifier contains the port number.')
ctUserDefPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctUserDefPriorityValue.setStatus('obsolete')
if mibBuilder.loadTexts: ctUserDefPriorityValue.setDescription('The current state of the Default User Priority parameter for a specific port.')
ctUserDefNumTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctUserDefNumTrafficClass.setStatus('obsolete')
if mibBuilder.loadTexts: ctUserDefNumTrafficClass.setDescription('The number of Traffic Classes in the range 1 through 8 that are supported on each port.')
ctRegenerationTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2, 1), )
if mibBuilder.loadTexts: ctRegenerationTable.setStatus('obsolete')
if mibBuilder.loadTexts: ctRegenerationTable.setDescription('A table that contains the Regenerated Priority.')
ctRegenerationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2, 1, 1), ).setIndexNames((0, "CT-PRIORITY-QUEUING", "ctRegenerationIndex"), (0, "CT-PRIORITY-QUEUING", "ctRegenerationId"))
if mibBuilder.loadTexts: ctRegenerationEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ctRegenerationEntry.setDescription('A list of regenerated priority for each bridge port.')
ctRegenerationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctRegenerationIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ctRegenerationIndex.setDescription('Description of a specific instance of the CtRegeneration table. The object identifier contains port.')
ctRegenerationId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctRegenerationId.setStatus('obsolete')
if mibBuilder.loadTexts: ctRegenerationId.setDescription('Description of a specific instance of the CtRegeneration table. The object identifier contains the priority that is referenced.')
ctRegenerationValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctRegenerationValue.setStatus('obsolete')
if mibBuilder.loadTexts: ctRegenerationValue.setDescription('Value of the regenerated priority.')
ctTrafClassTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3, 1), )
if mibBuilder.loadTexts: ctTrafClassTable.setStatus('obsolete')
if mibBuilder.loadTexts: ctTrafClassTable.setDescription('A table that lists the queue number for each Traffic Classes.')
ctTrafClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3, 1, 1), ).setIndexNames((0, "CT-PRIORITY-QUEUING", "ctTrafClassIndex"), (0, "CT-PRIORITY-QUEUING", "ctTrafClassId"))
if mibBuilder.loadTexts: ctTrafClassEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ctTrafClassEntry.setDescription('A list of available queue for each Traffic Classes on each port.')
ctTrafClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctTrafClassIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ctTrafClassIndex.setDescription('Description of a specific instance of the Traffic Classes table. The object identifier contains the port number.')
ctTrafClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctTrafClassId.setStatus('obsolete')
if mibBuilder.loadTexts: ctTrafClassId.setDescription('Description of a specific instance of the Traffic Classes table. The object identifier contains the priority that is referenced.')
ctTrafClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 4, 2, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctTrafClassValue.setStatus('obsolete')
if mibBuilder.loadTexts: ctTrafClassValue.setDescription('The queue number of Traffic Classes in the range of 0 to the number of Traffic Classes supported on this product.')
mibBuilder.exportSymbols("CT-PRIORITY-QUEUING", ctTrafClassTable=ctTrafClassTable, ctTrafClassIndex=ctTrafClassIndex, ctBasePriority=ctBasePriority, ctUserDefPriorityIndex=ctUserDefPriorityIndex, ctRegenerationEntry=ctRegenerationEntry, cabletron=cabletron, ctTrafClassEntry=ctTrafClassEntry, ctRegenerationTable=ctRegenerationTable, ctUserDefTable=ctUserDefTable, ctRegenPriority=ctRegenPriority, ctUserDefPriority=ctUserDefPriority, ctronExp=ctronExp, ctRegenerationValue=ctRegenerationValue, mibs=mibs, ctUserDefPriorityValue=ctUserDefPriorityValue, ctVLANMgr=ctVLANMgr, ctTrafClassValue=ctTrafClassValue, ctUserDefNumTrafficClass=ctUserDefNumTrafficClass, ctTrafClassId=ctTrafClassId, ctRegenerationIndex=ctRegenerationIndex, ctPriority=ctPriority, ctVLANMib=ctVLANMib, ctUserDefEntry=ctUserDefEntry, ctRegenerationId=ctRegenerationId, ctTrafPriority=ctTrafPriority)
