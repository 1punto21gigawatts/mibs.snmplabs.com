#
# PySNMP MIB module ZYXEL-IGMP-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-IGMP-FILTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, iso, IpAddress, NotificationType, Gauge32, Bits, TimeTicks, Counter32, ObjectIdentity, MibIdentifier, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "iso", "IpAddress", "NotificationType", "Gauge32", "Bits", "TimeTicks", "Counter32", "ObjectIdentity", "MibIdentifier", "Unsigned32", "ModuleIdentity")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelIgmpFilter = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30))
if mibBuilder.loadTexts: zyxelIgmpFilter.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelIgmpFilter.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelIgmpFilter.setContactInfo('')
if mibBuilder.loadTexts: zyxelIgmpFilter.setDescription('The subtree for Internet Group Management Protocol (IGMP) filter')
zyxelIgmpFilteringSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1))
zyIgmpFilteringState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpFilteringState.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringState.setDescription('Enable/Disable IGMP filtering on the switch. An IGMP filtering profile specifies a range of multicast groups that clients connected to the switch are able to join.')
zyIgmpFilteringMaxNumberOfProfiles = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpFilteringMaxNumberOfProfiles.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringMaxNumberOfProfiles.setDescription('The maximum number of IGMP filtering profile entries that can be created.')
zyxelIgmpFilteringProfileTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3), )
if mibBuilder.loadTexts: zyxelIgmpFilteringProfileTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpFilteringProfileTable.setDescription('The table contains IGMP filtering profile configuration.')
zyxelIgmpFilteringProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3, 1), ).setIndexNames((0, "ZYXEL-IGMP-FILTER-MIB", "zyIgmpFilteringProfileName"), (0, "ZYXEL-IGMP-FILTER-MIB", "zyIgmpFilteringProfileStartIpAddress"), (0, "ZYXEL-IGMP-FILTER-MIB", "zyIgmpFilteringProfileEndIpAddress"))
if mibBuilder.loadTexts: zyxelIgmpFilteringProfileEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpFilteringProfileEntry.setDescription('An entry contains IGMP filtering profile configuration.')
zyIgmpFilteringProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3, 1, 1), DisplayString())
if mibBuilder.loadTexts: zyIgmpFilteringProfileName.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringProfileName.setDescription('A descriptive name for the profile for identification purposes.')
zyIgmpFilteringProfileStartIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: zyIgmpFilteringProfileStartIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringProfileStartIpAddress.setDescription('The starting multicast IP address for a range of multicast IP addresses that you want to belong to the IGMP filter profile.')
zyIgmpFilteringProfileEndIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: zyIgmpFilteringProfileEndIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringProfileEndIpAddress.setDescription('The ending multicast IP address for a range of IP addresses that you want to belong to the IGMP filter profile.')
zyIgmpFilteringProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyIgmpFilteringProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringProfileRowStatus.setDescription('This object allow IGMP filtering profile entries to be create and deleted from IGMP filtering profile table.')
zyxelIgmpFilteringPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 4), )
if mibBuilder.loadTexts: zyxelIgmpFilteringPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpFilteringPortTable.setDescription('The table contains IGMP filtering port configuration. ')
zyxelIgmpFilteringPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 4, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelIgmpFilteringPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpFilteringPortEntry.setDescription('An entry contains IGMP filtering port configuration. ')
zyIgmpFilteringPortProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 30, 1, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpFilteringPortProfile.setStatus('current')
if mibBuilder.loadTexts: zyIgmpFilteringPortProfile.setDescription('Enter the name of the IGMP filtering profile to use for this port. ')
mibBuilder.exportSymbols("ZYXEL-IGMP-FILTER-MIB", zyxelIgmpFilteringPortTable=zyxelIgmpFilteringPortTable, zyIgmpFilteringState=zyIgmpFilteringState, zyxelIgmpFilteringSetup=zyxelIgmpFilteringSetup, zyIgmpFilteringProfileName=zyIgmpFilteringProfileName, zyxelIgmpFilteringProfileEntry=zyxelIgmpFilteringProfileEntry, zyIgmpFilteringPortProfile=zyIgmpFilteringPortProfile, zyxelIgmpFilteringProfileTable=zyxelIgmpFilteringProfileTable, zyIgmpFilteringMaxNumberOfProfiles=zyIgmpFilteringMaxNumberOfProfiles, zyxelIgmpFilter=zyxelIgmpFilter, PYSNMP_MODULE_ID=zyxelIgmpFilter, zyIgmpFilteringProfileStartIpAddress=zyIgmpFilteringProfileStartIpAddress, zyIgmpFilteringProfileRowStatus=zyIgmpFilteringProfileRowStatus, zyxelIgmpFilteringPortEntry=zyxelIgmpFilteringPortEntry, zyIgmpFilteringProfileEndIpAddress=zyIgmpFilteringProfileEndIpAddress)
