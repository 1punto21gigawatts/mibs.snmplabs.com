#
# PySNMP MIB module A3COM-HUAWEI-VOSIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-VOSIP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:07:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cVoice, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cVoice")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, TimeTicks, Counter32, ObjectIdentity, Bits, IpAddress, Unsigned32, Integer32, NotificationType, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "TimeTicks", "Counter32", "ObjectIdentity", "Bits", "IpAddress", "Unsigned32", "Integer32", "NotificationType", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
h3cVoSIP = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12))
h3cVoSIP.setRevisions(('2005-03-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cVoSIP.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: h3cVoSIP.setLastUpdated('200503150000Z')
if mibBuilder.loadTexts: h3cVoSIP.setOrganization('Huawei 3Com Technologies co., Ltd.')
if mibBuilder.loadTexts: h3cVoSIP.setContactInfo('Platform Team Huawei 3Com Technologies co., Ltd. Hai-Dian District Beijing P.R. China http://www.huawei-3com.com Zip:100085 ')
if mibBuilder.loadTexts: h3cVoSIP.setDescription('This MIB contains objects to manage the SIP client configuration. Session Initiation Protocol (SIP) is an application layer control protocol that can establish, modify, and terminate multimedia sessions such as IP phone calls, multimedia distribution, and multimedia conferences. ')
class SipMsgType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 1), ("register", 2), ("invite", 3), ("ack", 4), ("prack", 5), ("cancel", 6), ("bye", 7), ("info", 8))

h3cSIPClientMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1))
h3cSIPClientConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1))
h3cSIPID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPID.setStatus('current')
if mibBuilder.loadTexts: h3cSIPID.setDescription("The unique identification of a SIP gateway. This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPPasswordType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPPasswordType.setStatus('current')
if mibBuilder.loadTexts: h3cSIPPasswordType.setDescription("The display type of a SIP gateway password. By default, this object should have the value simple(1). This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPPassword = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPPassword.setStatus('current')
if mibBuilder.loadTexts: h3cSIPPassword.setDescription("A SIP gateway password. This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPSourceIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPSourceIPAddressType.setStatus('current')
if mibBuilder.loadTexts: h3cSIPSourceIPAddressType.setDescription("The source IP address type of the local peer acting as UA (User Agent). This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPSourceIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPSourceIP.setStatus('current')
if mibBuilder.loadTexts: h3cSIPSourceIP.setDescription("The source IP address of the local peer acting as UA (User Agent). This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPRegisterMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("gatewayAll", 1), ("gatewaySingle", 2), ("phoneNumber", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPRegisterMode.setStatus('current')
if mibBuilder.loadTexts: h3cSIPRegisterMode.setDescription("The object describes the method to send the type of telephone number. gatewayAll The register mode is gateway mode and the register message contains all the POTS numbers. gatewaySingle The register mode is gateway mode and every register message contains only one POTS number. phoneNumber The register mode is phone mode. Note: Please configure the object hwSIPRegisterPhoneNumber after hwSIPRegisterMode has been set to phoneNumber. This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPRegisterPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPRegisterPhoneNumber.setStatus('current')
if mibBuilder.loadTexts: h3cSIPRegisterPhoneNumber.setDescription("The object describes the telephone number which is going to be registered. Note: Please set value of the object h3cIPRegisterMode to phoneNumber before configure this node. This value couldn't be modified unless h3cSIPRegisterEnable is 'off'.")
h3cSIPRegisterEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPRegisterEnable.setStatus('current')
if mibBuilder.loadTexts: h3cSIPRegisterEnable.setDescription("The object describes register enable or not, default is off. Only if h3cSIPServerConfigTable is configured well, then this node could be set 'on(1)' successfully.")
h3cSIPTrapsControl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPTrapsControl.setStatus('current')
if mibBuilder.loadTexts: h3cSIPTrapsControl.setDescription('Indicates whether the SIP module is permitted to generate traps.')
h3cSIPStatisticClear = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSIPStatisticClear.setStatus('current')
if mibBuilder.loadTexts: h3cSIPStatisticClear.setDescription('The object is used to clear the statistic information of a SIP gateway. Note: this object only supports set operation. ')
h3cSIPServerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2), )
if mibBuilder.loadTexts: h3cSIPServerConfigTable.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerConfigTable.setDescription('A list of the SIP server configuration entries.')
h3cSIPServerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerIPAddressType"), (0, "A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerIPAddress"), (0, "A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerPort"))
if mibBuilder.loadTexts: h3cSIPServerConfigEntry.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerConfigEntry.setDescription('A SIP server configuration entry contains some associated information, e.g. IP address, port, etc.')
h3cSIPServerIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSIPServerIPAddressType.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerIPAddressType.setDescription('The source IP address type of a SIP server.')
h3cSIPServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSIPServerIPAddress.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerIPAddress.setDescription('The IP address of a SIP server.')
h3cSIPServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5060)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSIPServerPort.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerPort.setDescription('The port of a SIP server.')
h3cSIPServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSIPServerType.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerType.setDescription('The type of SIP Server.')
h3cSIPAcceptType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("all", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSIPAcceptType.setStatus('current')
if mibBuilder.loadTexts: h3cSIPAcceptType.setDescription('The accept type of SIP calls. By default, the object value is all(2).')
h3cSIPServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSIPServerStatus.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerStatus.setDescription("This object is used to create, delete or modify a row in this table. To create a new row, hwSIPServerType must be specified. Note: h3cSIPRegisterEnable must be specifed 'off' before modifing or destroying an existing row or creating a new row. ")
h3cSIPMsgStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3), )
if mibBuilder.loadTexts: h3cSIPMsgStatTable.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgStatTable.setDescription('A list of SIP message statistics entries. ')
h3cSIPMsgStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOSIP-MIB", "h3cSIPMsgIndex"))
if mibBuilder.loadTexts: h3cSIPMsgStatEntry.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgStatEntry.setDescription('A collection of statistics kept for a SIP message. ')
h3cSIPMsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 1), SipMsgType())
if mibBuilder.loadTexts: h3cSIPMsgIndex.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgIndex.setDescription('The index of a SIP message.')
h3cSIPMsgName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgName.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgName.setDescription('The name of a SIP message.')
h3cSIPMsgSend = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgSend.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgSend.setDescription('The number of messages which a SIP gateway has sent.')
h3cSIPMsgOKSend = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgOKSend.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgOKSend.setDescription('The number of successful messages which a SIP gateway has sent.')
h3cSIPMsgReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgReceive.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgReceive.setDescription('The number of messages which a SIP gateway has received.')
h3cSIPMsgOKReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgOKReceive.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgOKReceive.setDescription('The number of successful messages which a SIP gateway has received.')
h3cSIPMsgResponseStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4), )
if mibBuilder.loadTexts: h3cSIPMsgResponseStatTable.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgResponseStatTable.setDescription('A list of the SIP message response code statistic entries.')
h3cSIPMsgResponseStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOSIP-MIB", "h3cSIPMsgResponseIndex"))
if mibBuilder.loadTexts: h3cSIPMsgResponseStatEntry.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgResponseStatEntry.setDescription('The information of SIP response code.')
h3cSIPMsgResponseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cSIPMsgResponseIndex.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgResponseIndex.setDescription('The index of a SIP message response code.')
h3cSIPMsgResponseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPMsgResponseCode.setStatus('current')
if mibBuilder.loadTexts: h3cSIPMsgResponseCode.setDescription('The SIP message response code.')
h3cSIPResCodeRecvCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPResCodeRecvCount.setStatus('current')
if mibBuilder.loadTexts: h3cSIPResCodeRecvCount.setDescription('The number of SIP response code which a SIP gateway has received.')
h3cSIPResCodeSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSIPResCodeSendCount.setStatus('current')
if mibBuilder.loadTexts: h3cSIPResCodeSendCount.setDescription('The number of SIP response code which a SIP gateway has sent.')
h3cSIPTrapStubObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 3))
h3cSIPRegisterFailReason = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSIPRegisterFailReason.setStatus('current')
if mibBuilder.loadTexts: h3cSIPRegisterFailReason.setDescription('The object describes the reason that a SIP gateway fails to register.')
h3cSIPAuthenReqMethod = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 3, 2), SipMsgType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSIPAuthenReqMethod.setStatus('current')
if mibBuilder.loadTexts: h3cSIPAuthenReqMethod.setDescription('The object denotes the method of a request that fails to authenticate.')
h3cSIPClientNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 4))
h3cSIPRegisterFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 4, 1)).setObjects(("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPID"), ("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerIPAddressType"), ("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerIPAddress"), ("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPServerPort"), ("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPRegisterFailReason"))
if mibBuilder.loadTexts: h3cSIPRegisterFailure.setStatus('current')
if mibBuilder.loadTexts: h3cSIPRegisterFailure.setDescription('The trap is generated when a SIP gateway fails to register.')
h3cSIPAuthenticateFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 4, 2)).setObjects(("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPID"), ("A3COM-HUAWEI-VOSIP-MIB", "h3cSIPAuthenReqMethod"))
if mibBuilder.loadTexts: h3cSIPAuthenticateFailure.setStatus('current')
if mibBuilder.loadTexts: h3cSIPAuthenticateFailure.setDescription('The trap is generated when a request with its credential fail to authenticate.')
h3cSIPServerSwitch = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 12, 4, 3))
if mibBuilder.loadTexts: h3cSIPServerSwitch.setStatus('current')
if mibBuilder.loadTexts: h3cSIPServerSwitch.setDescription('The trap is generated when a switch happens between master and slave SIP server.')
mibBuilder.exportSymbols("A3COM-HUAWEI-VOSIP-MIB", h3cSIPMsgResponseStatEntry=h3cSIPMsgResponseStatEntry, h3cSIPMsgResponseStatTable=h3cSIPMsgResponseStatTable, h3cSIPMsgName=h3cSIPMsgName, h3cSIPRegisterMode=h3cSIPRegisterMode, h3cSIPStatisticClear=h3cSIPStatisticClear, h3cSIPServerPort=h3cSIPServerPort, h3cSIPClientNotifications=h3cSIPClientNotifications, h3cSIPServerConfigTable=h3cSIPServerConfigTable, h3cSIPClientConfigObjects=h3cSIPClientConfigObjects, h3cSIPMsgIndex=h3cSIPMsgIndex, h3cSIPRegisterFailReason=h3cSIPRegisterFailReason, h3cSIPServerSwitch=h3cSIPServerSwitch, h3cSIPServerConfigEntry=h3cSIPServerConfigEntry, h3cSIPPassword=h3cSIPPassword, h3cSIPMsgResponseCode=h3cSIPMsgResponseCode, SipMsgType=SipMsgType, h3cSIPRegisterPhoneNumber=h3cSIPRegisterPhoneNumber, h3cSIPClientMIB=h3cSIPClientMIB, PYSNMP_MODULE_ID=h3cVoSIP, h3cSIPServerStatus=h3cSIPServerStatus, h3cSIPServerType=h3cSIPServerType, h3cSIPRegisterEnable=h3cSIPRegisterEnable, h3cSIPServerIPAddress=h3cSIPServerIPAddress, h3cSIPMsgReceive=h3cSIPMsgReceive, h3cSIPMsgOKReceive=h3cSIPMsgOKReceive, h3cSIPMsgOKSend=h3cSIPMsgOKSend, h3cSIPRegisterFailure=h3cSIPRegisterFailure, h3cVoSIP=h3cVoSIP, h3cSIPSourceIP=h3cSIPSourceIP, h3cSIPAuthenReqMethod=h3cSIPAuthenReqMethod, h3cSIPMsgStatTable=h3cSIPMsgStatTable, h3cSIPMsgResponseIndex=h3cSIPMsgResponseIndex, h3cSIPResCodeRecvCount=h3cSIPResCodeRecvCount, h3cSIPAuthenticateFailure=h3cSIPAuthenticateFailure, h3cSIPMsgSend=h3cSIPMsgSend, h3cSIPTrapStubObjects=h3cSIPTrapStubObjects, h3cSIPTrapsControl=h3cSIPTrapsControl, h3cSIPAcceptType=h3cSIPAcceptType, h3cSIPMsgStatEntry=h3cSIPMsgStatEntry, h3cSIPID=h3cSIPID, h3cSIPResCodeSendCount=h3cSIPResCodeSendCount, h3cSIPPasswordType=h3cSIPPasswordType, h3cSIPServerIPAddressType=h3cSIPServerIPAddressType, h3cSIPSourceIPAddressType=h3cSIPSourceIPAddressType)
