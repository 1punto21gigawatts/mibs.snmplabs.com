#
# PySNMP MIB module CISCO-IDSL-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IDSL-LINE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
AdslLineProfileName, adslLineConfProfileName = mibBuilder.importSymbols("ADSL-LINE-MIB", "AdslLineProfileName", "adslLineConfProfileName")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
PerfIntervalCount, PerfCurrentCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount", "PerfCurrentCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ObjectIdentity, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, TimeTicks, ModuleIdentity, IpAddress, Integer32, Counter64, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "TimeTicks", "ModuleIdentity", "IpAddress", "Integer32", "Counter64", "MibIdentifier", "Gauge32")
DisplayString, VariablePointer, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "VariablePointer", "TruthValue", "TextualConvention")
ciscoIdslLineMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 154))
ciscoIdslLineMIB.setRevisions(('2000-01-20 00:36',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoIdslLineMIB.setRevisionsDescriptions(('Initial revision of this MIB module.',))
if mibBuilder.loadTexts: ciscoIdslLineMIB.setLastUpdated('200001200036Z')
if mibBuilder.loadTexts: ciscoIdslLineMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoIdslLineMIB.setContactInfo('Cisco System Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 555-NETS E-mail: cs-dslam@cisco.com')
if mibBuilder.loadTexts: ciscoIdslLineMIB.setDescription('This MIB module describes IDSL (ISDN Digital Line Subscriber) line interfaces. The structure of this module resembles that of the ADSL-LINE-MIB (RFC-2662). Observe that the tables in this module do not necessarily extend the tables defined by the ADSL-LINE-MIB. Currently, only those tables that contain configuration information extend the profile tables defined by the ADSL-LINE-MIB. This allows the management client to define xDSL configuration profiles that apply across all xDSL modems, independent of the technology being utilized by the modem. *** ABBREVIATIONS, ACRONYMS, AND SYMBOLS *** ADSL - Asymmetric Digital Subscriber Line. ATM - Asynchronous Transfer Mode. BRITE - Basic Rate Interface Terminal Extender. CV - Coding Violation. DLC - Data Link Connection. DSL - Digital Subscriber Line. ES - Error Second. IDSL - IDSN Digital Subscriber Loop. ITU-C - IDSL Transceiver Unit, Central Office end. ITU-R - IDSL Transceiver Unit, Remote terminal end. LMI - Link Management Interface. LOF - Loss Of Frame. LOS - Loss Of Signal. NT - Network Terminator. PPP - Point-to-Point Protocol. PPPoA - PPP over ATM. SES - Severely Errored Second. *** DEFINITIONS *** CODING VIOLATION A coding violation occurs when the incoming signal exhibits a CRC anomaly. DOWNSTREAM The flow of data in the direction from the ITU-C to ITU-R. ERRORED SECOND A second with one or more coding violations. LINE RATE The total data rate supported by a line. Observe that the payload rate is equal the line rate for the earliest implementations of IDSL. However, the payload rate maybe less than the line rate for future implementations. SEVERELY ERRORED SECOND A second with 3 or more coding violations. UPSTREAM The flow of data in the direction from the ATU-R to ATU-C.')
class IdslPerfTimeElapsed(TextualConvention, Gauge32):
    description = "The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value."
    status = 'current'

class IdslPerfCurrDayCount(TextualConvention, Gauge32):
    description = "A counter associated with interval performance measurements in a current 1-day (24 hour) measurement interval. The value of this counter starts at zero at the beginning of an interval and increases when associated events occur, until the end of the 1-day interval. At that time, the agent stores the value of the counter in the previous 1-day history interval, if available, and resets the value of the counter to zero. In the case where the agent has no valid data available for this interval, the corresponding object instance is not available. In this case, the agent will respond with the appropriate error indicating that the instance does not exist; that is, 'noSuchName' in response to a SNMPv1 get request, and 'noSuchInstance' in response to a SNMPv2 get request."
    status = 'current'

class IdslPerfPrevDayCount(TextualConvention, Gauge32):
    description = "A counter associated with interval performance measurements during the most previous 1-day (24 hour) measurement interval. The value of this counter is equal to the current day counter at the end of its most recent interval. In the case where the agent has no valid data available for this interval, the corresponding object instance is not available. In this case, the agent will respond with the appropriate error indicating that the instance does not exist; that is, 'noSuchName' in response to a SNMPv1 get request, and 'noSuchInstance' in response to a SNMPv2 get request."
    status = 'current'

ciscoIdslLineMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 1))
cIdslLineTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 1), )
if mibBuilder.loadTexts: cIdslLineTable.setStatus('current')
if mibBuilder.loadTexts: cIdslLineTable.setDescription('This table contains the common attributes describing both ends of IDSL lines supported by the system.')
cIdslLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslLineEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslLineEntry.setDescription('A set of common attributes describing both ends of an IDSL line supported by the system. There exists an entry for each ifEntry with an ifType of idsl(154).')
cIdslLineSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 1, 1, 1), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslLineSpecific.setStatus('current')
if mibBuilder.loadTexts: cIdslLineSpecific.setDescription('This object specifies an object identifier of an instance of an object in the MIB. The implementation determines the application of this object. For example, an implementation may use this object to provide a reference to the port-class physical entity (see the ENTITY-MIB for further details) corresponding to the IDSL line.')
cIdslLineConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 1, 1, 2), AdslLineProfileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIdslLineConfProfile.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfProfile.setDescription("This object specifies the row in the adslLineConfProfileTable (see the ADSL-LINE-MIB for further details), which applies for this IDSL line interface. In the case the implementation utilizes 'dynamic mode' (see the ADSL-LINE-MIB for further details), then the value of this object defaults to the name of a configuration profile designated by the implementation as the default configuration profile. In the case the implementation utilizes 'static mode', then the the value of this object is read-only.")
cIdslLineAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 1, 1, 3), AdslLineProfileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIdslLineAlarmConfProfile.setStatus('current')
if mibBuilder.loadTexts: cIdslLineAlarmConfProfile.setDescription("This object specifies the row in the adslLineAlarmConfProfileTable (see the ADSL-LINE-MIB for further details), which applies for this IDSL line interface. In the case the implementation utilizes 'dynamic mode' (see the ADSL-LINE-MIB for further details), then the value of this object defaults to the name of an alarm configuration profile designated by the implementation as the default alarm configuration profile. In the case the implementation utilizes 'static mode', then the the value of this object is read-only.")
cIdslItucPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2), )
if mibBuilder.loadTexts: cIdslItucPhysTable.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPhysTable.setDescription('This table contains physical-layer parameters for ITU-C class devices supported by the system.')
cIdslItucPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslItucPhysEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPhysEntry.setDescription('A set of physical-layer parameters for an ITU-C class device supported by the system. There exists an entry for each ifEntry with an ifType of idsl(154).')
cIdslItucInvSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucInvSerialNumber.setStatus('current')
if mibBuilder.loadTexts: cIdslItucInvSerialNumber.setDescription('This object specifies the vendor specific string that identifies the vendor ITU-C.')
cIdslItucInvVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucInvVendorId.setReference('ANSI T1.220-1991, Coded Representation of the North American Telecommunication Industry Manufacturers, Suppliers, and Related Service Companies.')
if mibBuilder.loadTexts: cIdslItucInvVendorId.setStatus('current')
if mibBuilder.loadTexts: cIdslItucInvVendorId.setDescription('This object specifies the vendor identifier assigned according to ANSI T1.220.')
cIdslItucInvVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucInvVersionNumber.setStatus('current')
if mibBuilder.loadTexts: cIdslItucInvVersionNumber.setDescription('This object specifies the vendor specific version number of the ITU-C.')
cIdslItucStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("loopDown", 1), ("dslSync", 2), ("loopUp", 3), ("loopUpLmiActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucStatus.setStatus('current')
if mibBuilder.loadTexts: cIdslItucStatus.setDescription('This object specifies the state of the ITU-C transceiver: - loopDown The IDSL link is down, as a result of a near-end has detected a LOS, a LOF, has not exchanged an ACT bit with the downstream BRITE/NT1, or similar fault/condition. - dslSync The IDSL link has achieved physical layer activation with the first downstream entity (iether a BRITE or the NT1). - loopUp The IDSL link has exchanged the ACT bit with the NT1, but LMI signalling is not yet active. This is the normal operating state for PPP operation. - loopUpLmiActive The IDSL link has exchnaged the ACT bit with the NT1 and the LMI signalling is active. This is the normal operating state for frame relay operation.')
cIdslItucPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6), )
if mibBuilder.loadTexts: cIdslItucPerfDataTable.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfDataTable.setDescription('This table contains physical-layer statistics for ITU-C class devices supported by the system.')
cIdslItucPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslItucPerfDataEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfDataEntry.setDescription('A set of physical-layer statistics for an ITU-C class device supported by the system. There exists an entry for each ifEntry with an ifType of idsl(154).')
cIdslItucPerfCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-C since agent reset.')
cIdslItucPerfESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-C since agent reset.')
cIdslItucPerfSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-C since agent reset.')
cIdslItucPerfHdlcCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfHdlcCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfHdlcCVs.setDescription('This object specifies the number of HDLC coding violations experienced by the ITU-C since agent reset.')
cIdslItucPerfHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfHdlcAborts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfHdlcAborts.setDescription('This object specifies the number of HDLC aborts experienced by the ITU-C since agent reset.')
cIdslItucPerfHdlcAligns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfHdlcAligns.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfHdlcAligns.setDescription('This object specifies the number of HDLC frames received by the ITU-C with a non-integral number of octets since agent reset.')
cIdslItucPerfHdlcShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfHdlcShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfHdlcShorts.setDescription('This object specifies the number of short HDLC frames received by the ITU-C since agent reset. A short HDLC frame contains less than 5 octets.')
cIdslItucPerfHdlcLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfHdlcLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfHdlcLongs.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent reset. A long HDLC frame contains more than 1500 octets.')
cIdslItucPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfValidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfValidIntervals.setDescription('The number of previous near-end performance data 15-minute intervals for which data was collected. The value will be <n> unless the measurement was (re-)started within the last (<n>*15) minutes, in which case the value will be the number of complete 15-minute intervals for which the agent has at least some data. In certain cases (e.g., in the case where the agent is a proxy) it is possible that some intervals are unavailable. In this case, this interval is the maximum interval number for which data is available.')
cIdslItucPerfInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfInvalidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfInvalidIntervals.setDescription('The number of near-end performance data 15-minute intervals in the range from 0 to cSdslStucPerfValidIntervals for which no data is available. This object will typically be zero except in cases where the data for some intervals are not available (e.g., in proxy situations).')
cIdslItucPerfCurr15MinElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 11), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslItucPerfCurr15MinCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-C in the current 15-minute interval.')
cIdslItucPerfCurr15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 13), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-C in the current 15-minute interval.')
cIdslItucPerfCurr15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 14), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-C in the current 15-minute interval.')
cIdslItucPerfCurr15MinHdlcCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 15), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcCVs.setDescription('This object specifies the number of HDLC coding violations experienced by the ITU-C in the current 15-minute interval.')
cIdslItucPerfCurr15MinHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 16), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcAborts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcAborts.setDescription('This object specifies the number of HDLC aborts experienced by the ITU-C in the current 15-minute interval.')
cIdslItucPerfCurr15MinHdlcAligns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 17), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcAligns.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcAligns.setDescription('This object specifies the number of HDLC frames received by the ITU-C with a non-integral number of octets in the current 15-minute interval.')
cIdslItucPerfCurr15MinHdlcShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 18), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcShorts.setDescription('This object specifies the number of short HDLC frames received by the ITU-C since agent in the current 15-minute interval. A short HDLC frame contains less than 5 octets.')
cIdslItucPerfCurr15MinHdlcLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 19), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr15MinHdlcLongs.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent in the current 15-minute interval. A long HDLC frame contains more than 1500 octets.')
cIdslItucPerfCurr1DayElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 20), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslItucPerfCurr1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 21), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-C in the current 1-day interval.')
cIdslItucPerfCurr1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 22), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-C in the current 1-day interval.')
cIdslItucPerfCurr1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 23), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DaySESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DaySESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-C in the current 1-day interval.')
cIdslItucPerfCurr1DayHdlcCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 24), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcCVs.setDescription('This object specifies the number of HDLC coding violations experienced by the ITU-C in the current 1-day interval.')
cIdslItucPerfCurr1DayHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 25), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcAborts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcAborts.setDescription('This object specifies the number of HDLC aborts experienced by the ITU-C in the current 1-day interval.')
cIdslItucPerfCurr1DayHdlcAligns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 26), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcAligns.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcAligns.setDescription('This object specifies the number of HDLC frames received by the ITU-C with a non-integral number of octets in the current 1-day interval.')
cIdslItucPerfCurr1DayHdlcShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 27), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcShorts.setDescription('This object specifies the number of short HDLC frames received by the ITU-C since agent in the current 1-day interval. A short HDLC frame contains less than 5 octets.')
cIdslItucPerfCurr1DayHdlcLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 28), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfCurr1DayHdlcLongs.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent in the current 1-day interval. A long HDLC frame contains more than 1500 octets.')
cIdslItucPerfPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayMoniSecs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayMoniSecs.setDescription('The amount of time in the previous 1-day interval over which the performance monitoring information is actually counted. This value will be the same as the interval duration except in a situation where performance monitoring data could not be collected for any reason.')
cIdslItucPerfPrev1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 30), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-C in the previous 1-day interval.')
cIdslItucPerfPrev1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 31), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-C in the previous 1-day interval.')
cIdslItucPerfPrev1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 32), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DaySESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DaySESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-C in the previous 1-day interval.')
cIdslItucPerfPrev1DayHdlcCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 33), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcCVs.setDescription('This object specifies the number of HDLC coding violations experienced by the ITU-C in the previous 1-day interval.')
cIdslItucPerfPrev1DayHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 34), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcAborts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcAborts.setDescription('This object specifies the number of HDLC aborts experienced by the ITU-C in the previous 1-day interval.')
cIdslItucPerfPrev1DayHdlcAligns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 35), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcAligns.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcAligns.setDescription('This object specifies the number of HDLC frames received by the ITU-C with a non-integral number of octets in the previous 1-day interval.')
cIdslItucPerfPrev1DayHdlcShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 36), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcShorts.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent in the previous 1-day interval. A long HDLC frame contains more than 1500 octets.')
cIdslItucPerfPrev1DayHdlcLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 6, 1, 37), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucPerfPrev1DayHdlcLongs.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent in the previous 1-day interval. A long HDLC frame contains more than 1500 octets.')
cIdslIturPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7), )
if mibBuilder.loadTexts: cIdslIturPerfDataTable.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfDataTable.setDescription('This table contains physical-layer statistics for ITU-R class devices supported by the system.')
cIdslIturPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslIturPerfDataEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfDataEntry.setDescription('A set of physical-layer statistics for an ITU-R class device supported by the system. There exists an entry for each ifEntry with an ifType of idsl(154).')
cIdslIturPerfCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-R since agent reset.')
cIdslIturPerfESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-R since agent reset.')
cIdslIturPerfSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-R since agent reset.')
cIdslIturPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfValidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfValidIntervals.setDescription('The number of previous near-end performance data 15-minute intervals for which data was collected. The value will be <n> unless the measurement was (re-)started within the last (<n>*15) minutes, in which case the value will be the number of complete 15-minute intervals for which the agent has at least some data. In certain cases (e.g., in the case where the agent is a proxy) it is possible that some intervals are unavailable. In this case, this interval is the maximum interval number for which data is available.')
cIdslIturPerfInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfInvalidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfInvalidIntervals.setDescription('The number of near-end performance data 15-minute intervals in the range from 0 to cSdslStucPerfValidIntervals for which no data is available. This object will typically be zero except in cases where the data for some intervals are not available (e.g., in proxy situations).')
cIdslIturPerfCurr15MinElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 6), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslIturPerfCurr15MinCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-R in the current 15-minute interval.')
cIdslIturPerfCurr15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-R in the current 15-minute interval.')
cIdslIturPerfCurr15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr15MinSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-R in the current 15-minute interval.')
cIdslIturPerfCurr1DayElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 10), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslIturPerfCurr1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 11), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-R in the current 1-day interval.')
cIdslIturPerfCurr1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 12), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr1DayESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-R in the current 1-day interval.')
cIdslIturPerfCurr1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 13), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfCurr1DaySESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfCurr1DaySESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-R in the current 1-day interval.')
cIdslIturPerfPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayMoniSecs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayMoniSecs.setDescription('The amount of time in the previous 1-day interval over which the performance monitoring information is actually counted. This value will be the same as the interval duration except in a situation where performance monitoring data could not be collected for any reason.')
cIdslIturPerfPrev1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 15), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-R in the previous 1-day interval.')
cIdslIturPerfPrev1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 16), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfPrev1DayESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-R in the previous 1-day interval.')
cIdslIturPerfPrev1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 7, 1, 17), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturPerfPrev1DaySESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturPerfPrev1DaySESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-R in the previous 1-day interval.')
cIdslItucIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8), )
if mibBuilder.loadTexts: cIdslItucIntervalTable.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalTable.setDescription('This table contains physical-layer statistics intervals for ITU-C class devices supported by the system.')
cIdslItucIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IDSL-LINE-MIB", "cIdslItucIntervalNumber"))
if mibBuilder.loadTexts: cIdslItucIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalEntry.setDescription('A 15-miute interval of physical-layer statistics for a ITU-C class device supported by the system. There exists up to 96 entries for each ifEntry with an ifType of idsl(154).')
cIdslItucIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalNumber.setDescription('The interval in which the statistics were collected, where the value of 1 represents the most recent interval, and the value of 96 represents the interval collected 24 hours ago. Intervals 2..96 are optional.')
cIdslItucIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalValidData.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalValidData.setDescription('This object specifies whether the data for this interval is valid.')
cIdslItucIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 3), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-C in the interval.')
cIdslItucIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-C in the interval.')
cIdslItucIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-C in the interval.')
cIdslItucIntervalHdlcCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalHdlcCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalHdlcCVs.setDescription('This object specifies the number of HDLC coding violations experienced by the ITU-C in the interval.')
cIdslItucIntervalHdlcAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalHdlcAborts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalHdlcAborts.setDescription('This object specifies the number of HDLC aborts experienced by the ITU-C in the interval.')
cIdslItucIntervalHdlcAligns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 8), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalHdlcAligns.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalHdlcAligns.setDescription('This object specifies the number of HDLC frames received by the ITU-C with a non-integral number of octets in the interval.')
cIdslItucIntervalHdlcShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalHdlcShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalHdlcShorts.setDescription('This object specifies the number of short HDLC frames received by the ITU-C since agent in the interval. A short HDLC frame contains less than 5 octets.')
cIdslItucIntervalHdlcLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 8, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslItucIntervalHdlcLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslItucIntervalHdlcLongs.setDescription('This object specifies the number of long HDLC frames received by the ITU-C since agent in the interval. A long HDLC frame contains more than 1500 octets.')
cIdslIturIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9), )
if mibBuilder.loadTexts: cIdslIturIntervalTable.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalTable.setDescription('This table contains physical-layer statistics intervals for ITU-R class devices supported by the system.')
cIdslIturIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IDSL-LINE-MIB", "cIdslIturIntervalNumber"))
if mibBuilder.loadTexts: cIdslIturIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalEntry.setDescription('A 15-miute interval of physical-layer statistics for a ITU-R class device supported by the system. There exists up to 96 entries for each ifEntry with an ifType of idsl(154).')
cIdslIturIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalNumber.setDescription('The interval in which the statistics were collected, where the value of 1 represents the most recent interval, and the value of 96 represents the interval collected 24 hours ago. Intervals 2..96 are optional.')
cIdslIturIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturIntervalValidData.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalValidData.setDescription('This object specifies whether the data for this interval is valid.')
cIdslIturIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1, 3), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturIntervalCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalCVs.setDescription('This object specifies the number of coding violations experienced by the ITU-R in the interval.')
cIdslIturIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturIntervalESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalESs.setDescription('This object specifies the number of errored seconds experienced by the ITU-R in the interval.')
cIdslIturIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 9, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslIturIntervalSESs.setStatus('current')
if mibBuilder.loadTexts: cIdslIturIntervalSESs.setDescription('This object specifies the number of severely errored seconds experienced by the ITU-R in the interval.')
cIdslLineConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14), )
if mibBuilder.loadTexts: cIdslLineConfProfileTable.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfProfileTable.setDescription('This table extends the adslLineConfProfileTable and contains IDSL line configuration information.')
cIdslLineConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineConfProfileName"))
if mibBuilder.loadTexts: cIdslLineConfProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfProfileEntry.setDescription('A configuration profile containing enterprise-specific IDSL line configuration information.')
cIdslLineConfRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rate144k", 1), ("rate144kIdl", 2), ("rate128k", 3), ("rate64k", 4), ("rate56k", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfRate.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfRate.setDescription('This object specifies the desired line rate.')
cIdslLineConfProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("frf", 1), ("pppMuxCisco", 2), ("pppMuxIetf", 3), ("pppLlcIetf", 4))).clone('frf')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfProtocol.setReference('The Frame Relay Forum, Document FRF.8. Frame Relay/ATM PVC Service Internetworking Implementation Agreement, April 14, 1995. IETF RFC-2364. PPP Over AAL5.')
if mibBuilder.loadTexts: cIdslLineConfProtocol.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfProtocol.setDescription('This object specifies the layer 2 protocol to be employed by the line, and more specifically the encapsulation type: - frf Specifies the frame relay layer 2 protocol defined by FRF.8. Observe that the encapsulation can be selected per virtual circuit. - pppMuxCisco Specifies the PPP using Cisco proprietary virtual circuit multiplexed encapsulation. - pppMuxIetf Specifies the PPP using virtual circuit multiplexed encapsulation defined by RFC-2364. - pppLlcIetf Specifies the PPP using the LLC (Link Layer Control) encapsulation defined by RFC-2364.')
cIdslLineConfLmiProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("itut933A", 5), ("ansiT1617D1994", 6))).clone('noLmiConfigured')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfLmiProtocol.setReference('ANSI T1.617-1991. Integrated Services Digital Network (ISDN) - Signaling Specification for Frame Relay Bearer Service for Digital Subscriber Signaling System Number 1 (DSS1). ANSI T1.617-1994. Integrated Services Digital Network (ISDN) - Signaling Specification for Frame Relay Bearer Service for Digital Subscriber Signaling System Number 1 (DSS1). ITU-T Q.933 10/95. Integrated Services Digital Network (ISDN) Digital Subscriber Signaling System No. 1 (DSS 1) - Signaling Specifications for Frame Mode Switched and Permanent Virtual Connection Control and Status Monitoring.')
if mibBuilder.loadTexts: cIdslLineConfLmiProtocol.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfLmiProtocol.setDescription('This object identifies the local inband signaling protocol.')
cIdslLineConfLmiNetN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfLmiNetN392.setReference('ANSI T1.617-1991. Integrated Services Digital Network (ISDN) - Signaling Specification for Frame Relay Bearer Service for Digital Subscriber Signaling System Number 1 (DSS1).')
if mibBuilder.loadTexts: cIdslLineConfLmiNetN392.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfLmiNetN392.setDescription('This object specifies the interval between successive status enquiry messages.')
cIdslLineConfLmiNetN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfLmiNetN393.setReference('ANSI T1.617-1991. Integrated Services Digital Network (ISDN) - Signaling Specification for Frame Relay Bearer Service for Digital Subscriber Signaling System Number 1 (DSS1).')
if mibBuilder.loadTexts: cIdslLineConfLmiNetN393.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfLmiNetN393.setDescription('This object specifies the value of the network-side error threshold.')
cIdslLineConfLmiNetT392 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfLmiNetT392.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfLmiNetT392.setDescription('This object specifies the value of the network-side polling verification timer.')
cIdslLineConfUpcIntent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pass", 1), ("tagDrop", 2), ("tag", 3), ("drop", 4))).clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfUpcIntent.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfUpcIntent.setDescription('This object specifies the default UPC (Usage Parameter Control) action for connections that do not explicitly specify a UPC action.')
cIdslLineConfBcDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 14, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIdslLineConfBcDefault.setReference("Section 6.5.19, 'Link Layer Parameters', ANSI T1.617-1991. Integrated Services Digital Network (ISDN) - Signaling Specification for Frame Relay Bearer Service for Digital Subscriber Signaling System Number 1 (DSS1).")
if mibBuilder.loadTexts: cIdslLineConfBcDefault.setStatus('current')
if mibBuilder.loadTexts: cIdslLineConfBcDefault.setDescription('This object specifies the default BC (Committed Burst Size) for connections that do not explicitly specify a BC.')
cIdslPppoaPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16), )
if mibBuilder.loadTexts: cIdslPppoaPerfDataTable.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfDataTable.setDescription('This table contains PPPoA statistics for those ITU-C class devices configured for PPP operation.')
cIdslPppoaPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslPppoaPerfDataEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfDataEntry.setDescription("A set of PPPoA statistics for an ITU-C class device configured for PPP operation. There exists an entry for each ifEntry that meet the following criteria: 1) The ifEntry has an ifType of idsl(154); 2) The profile associated with the ITU-C class device specifies a value of 'ppp' for the cIdslLineProtocol object.")
cIdslPppoaPerfRTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfRTOs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfRTOs.setDescription('This object specifies the number of frames that could not be completely reassembled due to a reassembly timeout before being transmitted over this PPP session since agent reset.')
cIdslPppoaPerfCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCVs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session exhibiting a coding violation since agent reset.')
cIdslPppoaPerfShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfShorts.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing less than 5 octets since agent reset.')
cIdslPppoaPerfLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfLongs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing more than 1500 octets since agent reset.')
cIdslPppoaPerfDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfDiscards.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfDiscards.setDescription('This object specifies the total number of frames intended for transmission over this PPP session that were discarded for any reason since agent reset.')
cIdslPppoaPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfValidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfValidIntervals.setDescription('The number of previous near-end performance data 15-minute intervals for which data was collected. The value will be <n> unless the measurement was (re-)started within the last (<n>*15) minutes, in which case the value will be the number of complete 15-minute intervals for which the agent has at least some data. In certain cases (e.g., in the case where the agent is a proxy) it is possible that some intervals are unavailable. In this case, this interval is the maximum interval number for which data is available.')
cIdslPppoaPerfInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfInvalidIntervals.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfInvalidIntervals.setDescription('The number of near-end performance data 15-minute intervals in the range from 0 to cSdslStucPerfValidIntervals for which no data is available. This object will typically be zero except in cases where the data for some intervals are not available (e.g., in proxy situations).')
cIdslPppoaPerfCurr15MinElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 8), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslPppoaPerfCurr15MinRTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinRTOs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinRTOs.setDescription('This object specifies the number of frames that could not be completely reassembled due to a reassembly timeout before being transmitted over this PPP session in the current 15-minute interval.')
cIdslPppoaPerfCurr15MinCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 10), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinCVs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session exhibiting a coding violation in the current 15-minute interval.')
cIdslPppoaPerfCurr15MinShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 11), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinShorts.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing less than 5 octets in the current 15-minute interval.')
cIdslPppoaPerfCurr15MinLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinLongs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing more than 1500 octets in the current 15-minute interval.')
cIdslPppoaPerfCurr15MinDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 13), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinDiscards.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr15MinDiscards.setDescription('This object specifies the total number of frames intended for transmission over this PPP session that were discarded for any reason in the current 15-minute interval.')
cIdslPppoaPerfCurr1DayElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 14), IdslPerfTimeElapsed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayElapsed.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayElapsed.setDescription("The number of seconds that have elapsed since the beginning of the current measurement period. If, for some reason, such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value.")
cIdslPppoaPerfCurr1DayRTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 15), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayRTOs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayRTOs.setDescription('This object specifies the number of frames that could not be completely reassembled due to a reassembly timeout before being transmitted over this PPP session in the current 1-day interval.')
cIdslPppoaPerfCurr1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 16), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayCVs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session exhibiting a coding violation in the current 1-day interval.')
cIdslPppoaPerfCurr1DayShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 17), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayShorts.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing less than 5 octets in the current 1-day interval.')
cIdslPppoaPerfCurr1DayLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 18), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayLongs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing more than 1500 octets in the current 1-day interval.')
cIdslPppoaPerfCurr1DayDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 19), IdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayDiscards.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfCurr1DayDiscards.setDescription('This object specifies the total number of frames intended for transmission over this PPP session that were discarded for any reason in the current 1-day interval.')
cIdslPppoaPerfPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayMoniSecs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayMoniSecs.setDescription('The amount of time in the previous 1-day interval over which the performance monitoring information is actually counted. This value will be the same as the interval duration except in a situation where performance monitoring data could not be collected for any reason.')
cIdslPppoaPerfPrev1DayRTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 21), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayRTOs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayRTOs.setDescription('This object specifies the number of frames that could not be completely reassembled due to a reassembly timeout before being transmitted over this PPP session in the previous 1-day interval.')
cIdslPppoaPerfPrev1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 22), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayCVs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session exhibiting a coding violation in the previous 1-day interval.')
cIdslPppoaPerfPrev1DayShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 23), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayShorts.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing less than 5 octets in the previous 1-day interval.')
cIdslPppoaPerfPrev1DayLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 24), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayLongs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing more than 1500 octets in the previous 1-day interval.')
cIdslPppoaPerfPrev1DayDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 16, 1, 25), IdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayDiscards.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaPerfPrev1DayDiscards.setDescription('This object specifies the total number of frames intended for transmission over this PPP session that were discarded for any reason in the previous 1-day interval.')
cIdslPppoaIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17), )
if mibBuilder.loadTexts: cIdslPppoaIntervalTable.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalTable.setDescription('This table contains PPPoA statistics intervals for those ITU-C class devices configured for PPP operation.')
cIdslPppoaIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalNumber"))
if mibBuilder.loadTexts: cIdslPppoaIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalEntry.setDescription("A 15-minute interval of PPPoA statistics intervals for a ITU-C class device configured for PPP operation. There exists up to 96 entries for each ifEntry that meets the following criteria: 1) The ifEntry has an ifType of idsl(154); 2) The profile associated with the ITU-C class device specifies a value of 'ppp' for the cIdslLineProtocol object.")
cIdslPppoaIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalNumber.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalNumber.setDescription('The interval in which the statistics were collected, where the value of 1 represents the most recent interval, and the value of 96 represents the interval collected 24 hours ago. Intervals 2..96 are optional.')
cIdslPppoaIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalValidData.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalValidData.setDescription('This object specifies whether the data for this interval is valid.')
cIdslPppoaIntervalRTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 3), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalRTOs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalRTOs.setDescription('This object specifies the number of frames that could not be completely reassembled due to a reassembly timeout before being transmitted over this PPP session in the interval.')
cIdslPppoaIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalCVs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalCVs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session exhibiting a coding violation in the interval.')
cIdslPppoaIntervalShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalShorts.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalShorts.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing less than 5 octets in the interval.')
cIdslPppoaIntervalLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalLongs.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalLongs.setDescription('This object specifies the number of reassembled frames intended for transmission over this PPP session containing more than 1500 octets in the interval.')
cIdslPppoaIntervalDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 17, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaIntervalDiscards.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaIntervalDiscards.setDescription('This object specifies the total number of frames intended for transmission over this PPP session that were discarded for any reason in the interval.')
cIdslPppoaMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 18), )
if mibBuilder.loadTexts: cIdslPppoaMapTable.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaMapTable.setDescription('This table defines the mapping between PPP sessions and ATM VC.')
cIdslPppoaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cIdslPppoaMapEntry.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaMapEntry.setDescription("A mapping between a PPP session and an ATM VC. There exists an entry for each ifEntry that meet the following criteria: 1) The ifEntry has an ifType of idsl(154); 2) The profile associated with the ITU-C class device specifies a value of 'ppp' for the cIdslLineProtocol object.")
cIdslPppoaMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 18, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIdslPppoaMapIfIndex.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaMapIfIndex.setDescription('The ifIndex associated with the pseudo-ATM interface onto which the IDSL interface is being mapped.')
cIdslPppoaMapVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIdslPppoaMapVpi.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaMapVpi.setDescription('The VPI (Virtual Path Identifier) associated with the ATM VCL onto which the PPP session is being mapped.')
cIdslPppoaMapVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 154, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cIdslPppoaMapVci.setStatus('current')
if mibBuilder.loadTexts: cIdslPppoaMapVci.setDescription('The VCI (Virtual Circuit Identifier) associated with the ATM VCL onto which the PPP session is being mapped.')
ciscoIdslLineMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 2))
ciscoIdslLineMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 2, 0))
ciscoIdslLineMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 3))
ciscoIdslLineMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 3, 1))
ciscoIdslLineMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 154, 3, 2))
ciscoIdslLineMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 154, 3, 1, 1)).setObjects(("CISCO-IDSL-LINE-MIB", "cIdslBasicGroup"), ("CISCO-IDSL-LINE-MIB", "cIdslPM15MinIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIdslLineMIBCompliance = ciscoIdslLineMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoIdslLineMIBCompliance.setDescription('The compliance statement for entities that implement the CISCO-IDSL-LINE-MIB. Implementation of this MIB is mandatory for any platform that supports one or more IDSL line interfaces.')
cIdslBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 154, 3, 2, 1)).setObjects(("CISCO-IDSL-LINE-MIB", "cIdslLineSpecific"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfProfile"), ("CISCO-IDSL-LINE-MIB", "cIdslLineAlarmConfProfile"), ("CISCO-IDSL-LINE-MIB", "cIdslItucInvSerialNumber"), ("CISCO-IDSL-LINE-MIB", "cIdslItucInvVendorId"), ("CISCO-IDSL-LINE-MIB", "cIdslItucInvVersionNumber"), ("CISCO-IDSL-LINE-MIB", "cIdslItucStatus"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfHdlcCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfHdlcAborts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfHdlcAligns"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfHdlcShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfHdlcLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfRate"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfProtocol"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfLmiProtocol"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfLmiNetN392"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfLmiNetN393"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfLmiNetT392"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfUpcIntent"), ("CISCO-IDSL-LINE-MIB", "cIdslLineConfBcDefault"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfRTOs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfDiscards"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaMapIfIndex"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaMapVpi"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaMapVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIdslBasicGroup = cIdslBasicGroup.setStatus('current')
if mibBuilder.loadTexts: cIdslBasicGroup.setDescription('A collection of managed objects defining the basic operation of an IDSL line.')
cIdslPM15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 154, 3, 2, 2)).setObjects(("CISCO-IDSL-LINE-MIB", "cIdslItucPerfValidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfInvalidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinHdlcCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinHdlcAborts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinHdlcAligns"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinHdlcShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr15MinHdlcLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DaySESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayHdlcCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayHdlcAborts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayHdlcAligns"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayHdlcShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfCurr1DayHdlcLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayMoniSecs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DaySESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayHdlcCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayHdlcAborts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayHdlcAligns"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayHdlcShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucPerfPrev1DayHdlcLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfValidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfInvalidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr15MinElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr15MinCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr15MinESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr15MinSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr1DayElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr1DayESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfCurr1DaySESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfPrev1DayMoniSecs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfPrev1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfPrev1DayESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturPerfPrev1DaySESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalNumber"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalValidData"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalHdlcCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalHdlcAborts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalHdlcAligns"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalHdlcShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslItucIntervalHdlcLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturIntervalNumber"), ("CISCO-IDSL-LINE-MIB", "cIdslIturIntervalValidData"), ("CISCO-IDSL-LINE-MIB", "cIdslIturIntervalCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturIntervalESs"), ("CISCO-IDSL-LINE-MIB", "cIdslIturIntervalSESs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfValidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfInvalidIntervals"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinRTOs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr15MinDiscards"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayElapsed"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayRTOs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfCurr1DayDiscards"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayMoniSecs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayRTOs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaPerfPrev1DayDiscards"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalNumber"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalValidData"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalRTOs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalCVs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalShorts"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalLongs"), ("CISCO-IDSL-LINE-MIB", "cIdslPppoaIntervalDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIdslPM15MinIntervalGroup = cIdslPM15MinIntervalGroup.setStatus('current')
if mibBuilder.loadTexts: cIdslPM15MinIntervalGroup.setDescription('A collection of managed objects defining performance data collection capability using 15-minute intervals.')
mibBuilder.exportSymbols("CISCO-IDSL-LINE-MIB", cIdslItucPerfESs=cIdslItucPerfESs, cIdslPppoaPerfCurr1DayRTOs=cIdslPppoaPerfCurr1DayRTOs, cIdslPppoaPerfPrev1DayLongs=cIdslPppoaPerfPrev1DayLongs, cIdslLineConfLmiNetT392=cIdslLineConfLmiNetT392, cIdslPppoaPerfCurr15MinElapsed=cIdslPppoaPerfCurr15MinElapsed, cIdslItucPerfPrev1DayMoniSecs=cIdslItucPerfPrev1DayMoniSecs, cIdslPppoaMapIfIndex=cIdslPppoaMapIfIndex, cIdslItucPerfHdlcLongs=cIdslItucPerfHdlcLongs, cIdslIturPerfPrev1DayESs=cIdslIturPerfPrev1DayESs, cIdslItucIntervalSESs=cIdslItucIntervalSESs, cIdslItucPerfCurr1DayHdlcAborts=cIdslItucPerfCurr1DayHdlcAborts, cIdslItucIntervalValidData=cIdslItucIntervalValidData, cIdslItucPerfCurr1DayElapsed=cIdslItucPerfCurr1DayElapsed, ciscoIdslLineMIB=ciscoIdslLineMIB, cIdslItucIntervalHdlcCVs=cIdslItucIntervalHdlcCVs, cIdslPppoaIntervalEntry=cIdslPppoaIntervalEntry, cIdslItucIntervalHdlcAligns=cIdslItucIntervalHdlcAligns, cIdslItucPerfCurr1DayHdlcLongs=cIdslItucPerfCurr1DayHdlcLongs, cIdslLineConfProtocol=cIdslLineConfProtocol, cIdslPppoaPerfCurr1DayCVs=cIdslPppoaPerfCurr1DayCVs, cIdslItucStatus=cIdslItucStatus, cIdslItucIntervalEntry=cIdslItucIntervalEntry, cIdslItucPerfPrev1DaySESs=cIdslItucPerfPrev1DaySESs, cIdslIturPerfSESs=cIdslIturPerfSESs, cIdslIturPerfInvalidIntervals=cIdslIturPerfInvalidIntervals, cIdslItucPerfCurr1DayCVs=cIdslItucPerfCurr1DayCVs, cIdslItucInvVersionNumber=cIdslItucInvVersionNumber, cIdslPppoaIntervalValidData=cIdslPppoaIntervalValidData, cIdslIturPerfCurr1DayCVs=cIdslIturPerfCurr1DayCVs, cIdslItucPerfPrev1DayESs=cIdslItucPerfPrev1DayESs, cIdslPppoaPerfPrev1DayRTOs=cIdslPppoaPerfPrev1DayRTOs, cIdslIturPerfDataTable=cIdslIturPerfDataTable, cIdslItucPerfPrev1DayHdlcAborts=cIdslItucPerfPrev1DayHdlcAborts, ciscoIdslLineMIBNotifications=ciscoIdslLineMIBNotifications, cIdslPppoaIntervalNumber=cIdslPppoaIntervalNumber, cIdslIturIntervalESs=cIdslIturIntervalESs, cIdslItucIntervalHdlcShorts=cIdslItucIntervalHdlcShorts, cIdslPppoaPerfDiscards=cIdslPppoaPerfDiscards, cIdslPppoaPerfCurr15MinShorts=cIdslPppoaPerfCurr15MinShorts, cIdslItucPerfHdlcCVs=cIdslItucPerfHdlcCVs, cIdslItucPerfCurr15MinElapsed=cIdslItucPerfCurr15MinElapsed, cIdslPppoaIntervalRTOs=cIdslPppoaIntervalRTOs, cIdslPppoaPerfCurr1DayElapsed=cIdslPppoaPerfCurr1DayElapsed, ciscoIdslLineMIBConformance=ciscoIdslLineMIBConformance, ciscoIdslLineMIBNotificationsPrefix=ciscoIdslLineMIBNotificationsPrefix, cIdslItucPerfCurr1DayHdlcAligns=cIdslItucPerfCurr1DayHdlcAligns, cIdslItucPerfHdlcAborts=cIdslItucPerfHdlcAborts, cIdslItucPerfPrev1DayHdlcLongs=cIdslItucPerfPrev1DayHdlcLongs, cIdslItucIntervalCVs=cIdslItucIntervalCVs, cIdslIturIntervalValidData=cIdslIturIntervalValidData, cIdslItucPerfDataTable=cIdslItucPerfDataTable, cIdslItucPerfPrev1DayHdlcCVs=cIdslItucPerfPrev1DayHdlcCVs, cIdslPppoaPerfDataEntry=cIdslPppoaPerfDataEntry, IdslPerfCurrDayCount=IdslPerfCurrDayCount, cIdslPppoaPerfDataTable=cIdslPppoaPerfDataTable, cIdslIturIntervalSESs=cIdslIturIntervalSESs, cIdslLineConfLmiNetN392=cIdslLineConfLmiNetN392, cIdslPppoaPerfLongs=cIdslPppoaPerfLongs, PYSNMP_MODULE_ID=ciscoIdslLineMIB, cIdslPppoaPerfRTOs=cIdslPppoaPerfRTOs, cIdslItucPerfCurr15MinHdlcShorts=cIdslItucPerfCurr15MinHdlcShorts, ciscoIdslLineMIBCompliances=ciscoIdslLineMIBCompliances, cIdslPppoaPerfCVs=cIdslPppoaPerfCVs, cIdslLineConfProfileTable=cIdslLineConfProfileTable, cIdslPppoaPerfInvalidIntervals=cIdslPppoaPerfInvalidIntervals, ciscoIdslLineMIBCompliance=ciscoIdslLineMIBCompliance, cIdslPppoaMapVpi=cIdslPppoaMapVpi, cIdslItucPerfCurr15MinESs=cIdslItucPerfCurr15MinESs, cIdslItucPerfInvalidIntervals=cIdslItucPerfInvalidIntervals, cIdslPppoaPerfPrev1DayCVs=cIdslPppoaPerfPrev1DayCVs, ciscoIdslLineMIBGroups=ciscoIdslLineMIBGroups, cIdslItucPerfHdlcAligns=cIdslItucPerfHdlcAligns, cIdslItucIntervalHdlcLongs=cIdslItucIntervalHdlcLongs, cIdslIturPerfCurr15MinESs=cIdslIturPerfCurr15MinESs, cIdslIturPerfCurr1DayElapsed=cIdslIturPerfCurr1DayElapsed, cIdslPppoaPerfPrev1DayDiscards=cIdslPppoaPerfPrev1DayDiscards, cIdslItucPerfCurr1DaySESs=cIdslItucPerfCurr1DaySESs, cIdslLineConfUpcIntent=cIdslLineConfUpcIntent, ciscoIdslLineMIBObjects=ciscoIdslLineMIBObjects, cIdslIturPerfCurr15MinCVs=cIdslIturPerfCurr15MinCVs, cIdslPppoaPerfCurr1DayLongs=cIdslPppoaPerfCurr1DayLongs, cIdslPppoaIntervalTable=cIdslPppoaIntervalTable, cIdslPM15MinIntervalGroup=cIdslPM15MinIntervalGroup, cIdslIturIntervalNumber=cIdslIturIntervalNumber, cIdslItucPerfPrev1DayHdlcShorts=cIdslItucPerfPrev1DayHdlcShorts, cIdslPppoaPerfCurr15MinLongs=cIdslPppoaPerfCurr15MinLongs, cIdslPppoaIntervalDiscards=cIdslPppoaIntervalDiscards, cIdslItucPerfCurr1DayHdlcCVs=cIdslItucPerfCurr1DayHdlcCVs, cIdslItucPerfSESs=cIdslItucPerfSESs, cIdslIturPerfCurr1DayESs=cIdslIturPerfCurr1DayESs, cIdslItucPhysEntry=cIdslItucPhysEntry, cIdslLineTable=cIdslLineTable, cIdslIturPerfValidIntervals=cIdslIturPerfValidIntervals, cIdslItucPerfValidIntervals=cIdslItucPerfValidIntervals, cIdslItucPerfHdlcShorts=cIdslItucPerfHdlcShorts, cIdslItucPerfCurr15MinSESs=cIdslItucPerfCurr15MinSESs, cIdslIturPerfPrev1DayMoniSecs=cIdslIturPerfPrev1DayMoniSecs, cIdslPppoaPerfCurr1DayShorts=cIdslPppoaPerfCurr1DayShorts, cIdslIturIntervalCVs=cIdslIturIntervalCVs, cIdslIturPerfCVs=cIdslIturPerfCVs, cIdslIturIntervalEntry=cIdslIturIntervalEntry, IdslPerfTimeElapsed=IdslPerfTimeElapsed, cIdslPppoaMapVci=cIdslPppoaMapVci, cIdslItucPerfDataEntry=cIdslItucPerfDataEntry, cIdslItucPerfCurr1DayESs=cIdslItucPerfCurr1DayESs, cIdslIturPerfPrev1DaySESs=cIdslIturPerfPrev1DaySESs, cIdslPppoaMapEntry=cIdslPppoaMapEntry, cIdslItucPerfCurr15MinHdlcAborts=cIdslItucPerfCurr15MinHdlcAborts, cIdslItucPerfCurr1DayHdlcShorts=cIdslItucPerfCurr1DayHdlcShorts, cIdslBasicGroup=cIdslBasicGroup, cIdslItucPerfPrev1DayHdlcAligns=cIdslItucPerfPrev1DayHdlcAligns, cIdslIturPerfCurr15MinSESs=cIdslIturPerfCurr15MinSESs, cIdslItucPerfCurr15MinHdlcAligns=cIdslItucPerfCurr15MinHdlcAligns, cIdslPppoaPerfPrev1DayShorts=cIdslPppoaPerfPrev1DayShorts, cIdslLineSpecific=cIdslLineSpecific, cIdslLineEntry=cIdslLineEntry, cIdslItucIntervalTable=cIdslItucIntervalTable, cIdslItucPerfCurr15MinCVs=cIdslItucPerfCurr15MinCVs, cIdslIturPerfPrev1DayCVs=cIdslIturPerfPrev1DayCVs, cIdslIturPerfESs=cIdslIturPerfESs, cIdslLineConfRate=cIdslLineConfRate, cIdslPppoaPerfCurr1DayDiscards=cIdslPppoaPerfCurr1DayDiscards, cIdslPppoaPerfPrev1DayMoniSecs=cIdslPppoaPerfPrev1DayMoniSecs, cIdslPppoaIntervalShorts=cIdslPppoaIntervalShorts, cIdslItucPerfCurr15MinHdlcCVs=cIdslItucPerfCurr15MinHdlcCVs, cIdslItucIntervalESs=cIdslItucIntervalESs, cIdslPppoaPerfCurr15MinDiscards=cIdslPppoaPerfCurr15MinDiscards, cIdslPppoaIntervalCVs=cIdslPppoaIntervalCVs, cIdslPppoaPerfShorts=cIdslPppoaPerfShorts, cIdslItucIntervalNumber=cIdslItucIntervalNumber, cIdslItucInvSerialNumber=cIdslItucInvSerialNumber, cIdslLineConfBcDefault=cIdslLineConfBcDefault, cIdslPppoaPerfCurr15MinCVs=cIdslPppoaPerfCurr15MinCVs, cIdslItucPhysTable=cIdslItucPhysTable, cIdslIturPerfDataEntry=cIdslIturPerfDataEntry, cIdslIturPerfCurr15MinElapsed=cIdslIturPerfCurr15MinElapsed, cIdslItucPerfCurr15MinHdlcLongs=cIdslItucPerfCurr15MinHdlcLongs, cIdslLineAlarmConfProfile=cIdslLineAlarmConfProfile, IdslPerfPrevDayCount=IdslPerfPrevDayCount, cIdslItucPerfCVs=cIdslItucPerfCVs, cIdslPppoaMapTable=cIdslPppoaMapTable, cIdslLineConfProfileEntry=cIdslLineConfProfileEntry, cIdslLineConfLmiProtocol=cIdslLineConfLmiProtocol, cIdslIturIntervalTable=cIdslIturIntervalTable, cIdslIturPerfCurr1DaySESs=cIdslIturPerfCurr1DaySESs, cIdslLineConfLmiNetN393=cIdslLineConfLmiNetN393, cIdslPppoaPerfCurr15MinRTOs=cIdslPppoaPerfCurr15MinRTOs, cIdslItucIntervalHdlcAborts=cIdslItucIntervalHdlcAborts, cIdslItucPerfPrev1DayCVs=cIdslItucPerfPrev1DayCVs, cIdslPppoaPerfValidIntervals=cIdslPppoaPerfValidIntervals, cIdslPppoaIntervalLongs=cIdslPppoaIntervalLongs, cIdslLineConfProfile=cIdslLineConfProfile, cIdslItucInvVendorId=cIdslItucInvVendorId)
